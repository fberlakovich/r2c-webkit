//@ skip

function shouldBe(actual, expected) {
    if (actual !== expected)
        throw new Error('bad value: ' + actual);
}

/*
wasm/type-conversion.wasm is generated by pack-asmjs <https://github.com/WebAssembly/polyfill-prototype-1> from the following script:

function asmModule(global, env, buffer) {
    "use asm";

    function takeAndReturnInt32(x) {
        x = x | 0;
        return x;
    }

    function takeAndReturnDouble(x) {
        x = +x;
        return x;
    }

    return {
        takeAndReturnInt32: takeAndReturnInt32,
        takeAndReturnDouble: takeAndReturnDouble,
    };
}
*/

var module = loadWebAssembly("wasm/type-conversion.wasm");

var two = {
    valueOf() { return 2; }
};

shouldBe(module.takeAndReturnInt32(1), 1);
shouldBe(module.takeAndReturnInt32("1"), 1);
shouldBe(module.takeAndReturnInt32(1.9), 1);
shouldBe(module.takeAndReturnInt32(true), 1);
shouldBe(module.takeAndReturnInt32(false), 0);
shouldBe(module.takeAndReturnInt32("one"), 0);
shouldBe(module.takeAndReturnInt32({ }), 0);
shouldBe(module.takeAndReturnInt32([2.5]), 2);
shouldBe(module.takeAndReturnInt32(two), 2);

shouldBe(module.takeAndReturnDouble(1.5), 1.5);
shouldBe(module.takeAndReturnDouble("1.5"), 1.5);
shouldBe(module.takeAndReturnDouble(1), 1);
shouldBe(module.takeAndReturnDouble(true), 1);
shouldBe(module.takeAndReturnDouble(false), 0);
shouldBe(isNaN(module.takeAndReturnDouble("one")), true);
shouldBe(isNaN(module.takeAndReturnDouble({ })), true);
shouldBe(module.takeAndReturnDouble([2.5]), 2.5);
shouldBe(module.takeAndReturnDouble(two), 2);
