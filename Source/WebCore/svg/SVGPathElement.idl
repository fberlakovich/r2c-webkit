/*
 * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>
 * Copyright (C) 2006 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

[
    Conditional=SVG
] interface SVGPathElement : SVGStyledElement,
                                             SVGTests,
                                             SVGLangSpace,
                                             SVGExternalResourcesRequired,
                                             SVGTransformable {
    readonly attribute SVGAnimatedNumber pathLength;

    float getTotalLength();
    SVGPoint getPointAtLength(in [Default=Undefined] optional float distance);
    unsigned long getPathSegAtLength(in [Default=Undefined] optional float distance);

    SVGPathSegClosePath createSVGPathSegClosePath();

    SVGPathSegMovetoAbs createSVGPathSegMovetoAbs(in [Default=Undefined] optional float x, 
                                                  in [Default=Undefined] optional float y);
    SVGPathSegMovetoRel createSVGPathSegMovetoRel(in [Default=Undefined] optional float x, 
                                                  in [Default=Undefined] optional float y);

    SVGPathSegLinetoAbs createSVGPathSegLinetoAbs(in [Default=Undefined] optional float x, 
                                                  in [Default=Undefined] optional float y);
    SVGPathSegLinetoRel createSVGPathSegLinetoRel(in [Default=Undefined] optional float x, 
                                                  in [Default=Undefined] optional float y);

    SVGPathSegCurvetoCubicAbs createSVGPathSegCurvetoCubicAbs(in [Default=Undefined] optional float x, 
                                                              in [Default=Undefined] optional float y, 
                                                              in [Default=Undefined] optional float x1, 
                                                              in [Default=Undefined] optional float y1, 
                                                              in [Default=Undefined] optional float x2, 
                                                              in [Default=Undefined] optional float y2);
    SVGPathSegCurvetoCubicRel createSVGPathSegCurvetoCubicRel(in [Default=Undefined] optional float x, 
                                                              in [Default=Undefined] optional float y, 
                                                              in [Default=Undefined] optional float x1, 
                                                              in [Default=Undefined] optional float y1, 
                                                              in [Default=Undefined] optional float x2, 
                                                              in [Default=Undefined] optional float y2);

    SVGPathSegCurvetoQuadraticAbs createSVGPathSegCurvetoQuadraticAbs(in [Default=Undefined] optional float x, 
                                                                      in [Default=Undefined] optional float y, 
                                                                      in [Default=Undefined] optional float x1, 
                                                                      in [Default=Undefined] optional float y1);
    SVGPathSegCurvetoQuadraticRel createSVGPathSegCurvetoQuadraticRel(in [Default=Undefined] optional float x, 
                                                                      in [Default=Undefined] optional float y, 
                                                                      in [Default=Undefined] optional float x1, 
                                                                      in [Default=Undefined] optional float y1);

    SVGPathSegArcAbs createSVGPathSegArcAbs(in [Default=Undefined] optional float x, 
                                            in [Default=Undefined] optional float y, 
                                            in [Default=Undefined] optional float r1, 
                                            in [Default=Undefined] optional float r2, 
                                            in [Default=Undefined] optional float angle, 
                                            in [Default=Undefined] optional boolean largeArcFlag, 
                                            in [Default=Undefined] optional boolean sweepFlag);
    SVGPathSegArcRel createSVGPathSegArcRel(in [Default=Undefined] optional float x, 
                                            in [Default=Undefined] optional float y, 
                                            in [Default=Undefined] optional float r1, 
                                            in [Default=Undefined] optional float r2, 
                                            in [Default=Undefined] optional float angle, 
                                            in [Default=Undefined] optional boolean largeArcFlag, 
                                            in [Default=Undefined] optional boolean sweepFlag);

    SVGPathSegLinetoHorizontalAbs createSVGPathSegLinetoHorizontalAbs(in [Default=Undefined] optional float x);
    SVGPathSegLinetoHorizontalRel createSVGPathSegLinetoHorizontalRel(in [Default=Undefined] optional float x);

    SVGPathSegLinetoVerticalAbs createSVGPathSegLinetoVerticalAbs(in [Default=Undefined] optional float y);
    SVGPathSegLinetoVerticalRel createSVGPathSegLinetoVerticalRel(in [Default=Undefined] optional float y);

    SVGPathSegCurvetoCubicSmoothAbs createSVGPathSegCurvetoCubicSmoothAbs(in [Default=Undefined] optional float x, 
                                                                          in [Default=Undefined] optional float y, 
                                                                          in [Default=Undefined] optional float x2, 
                                                                          in [Default=Undefined] optional float y2);
    SVGPathSegCurvetoCubicSmoothRel createSVGPathSegCurvetoCubicSmoothRel(in [Default=Undefined] optional float x, 
                                                                          in [Default=Undefined] optional float y, 
                                                                          in [Default=Undefined] optional float x2, 
                                                                          in [Default=Undefined] optional float y2);

    SVGPathSegCurvetoQuadraticSmoothAbs createSVGPathSegCurvetoQuadraticSmoothAbs(in [Default=Undefined] optional float x, 
                                                                                  in [Default=Undefined] optional float y);
    SVGPathSegCurvetoQuadraticSmoothRel createSVGPathSegCurvetoQuadraticSmoothRel(in [Default=Undefined] optional float x, 
                                                                                  in [Default=Undefined] optional float y);

    readonly attribute SVGPathSegList pathSegList;
    readonly attribute SVGPathSegList normalizedPathSegList;
    readonly attribute SVGPathSegList animatedPathSegList;
    readonly attribute SVGPathSegList animatedNormalizedPathSegList;
};

