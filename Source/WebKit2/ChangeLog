2017-04-10  Jeremy Jones  <jeremyj@apple.com>

        Add CoreAudioCaptureSource.
        https://bugs.webkit.org/show_bug.cgi?id=170112
        rdar://problem/30293338

        Reviewed by Tim Horton.

        Add UseAVFoundationAudioCapture preference to switch back from the new default of CoreAudio.

        * Shared/WebPreferencesDefinitions.h:
        * UIProcess/API/C/WKPreferences.cpp:
        (WKPreferencesSetUseAVFoundationAudioCapture):
        (WKPreferencesGetUseAVFoundationAudioCapture):
        * UIProcess/API/C/WKPreferencesRefPrivate.h:
        * UIProcess/Cocoa/UserMediaCaptureManagerProxy.cpp:
        (WebKit::UserMediaCaptureManagerProxy::createMediaSourceForCaptureDeviceWithConstraints):
        * UIProcess/UserMediaPermissionRequestManagerProxy.cpp:
        (WebKit::UserMediaPermissionRequestManagerProxy::syncWithWebCorePrefs):
        * WebProcess/WebPage/WebPage.cpp:
        (WebKit::WebPage::updatePreferences):

2017-04-10  Brent Fulgham  <bfulgham@apple.com>

        [WK2][macOS] Block access to Apple Events before launch.
        https://bugs.webkit.org/show_bug.cgi?id=170626
        <rdar://problem/16079334>

        Reviewed by Alexey Proskuryakov.

        Clear the environment of the AppleEvent server name before initializing
        AppKit so we never bother connecting.

        * Shared/EntryPointUtilities/mac/XPCService/XPCServiceMain.mm:
        (main):

2017-04-10  Adrian Perez de Castro  <aperez@igalia.com>

        [GTK] Misplaced right click menu on web page due to deprecated gtk_menu_popup()
        https://bugs.webkit.org/show_bug.cgi?id=170553

        Reviewed by Michael Catanzaro.

        Use gtk_menu_popup_at_pointer() and gtk_menu_popup_at_rect() when building with GTK+ 3.22 or
        newer. This allows the Wayland GTK+ backend to properly position popup menus, and also avoids
        using functions which were deprecated starting at that GTK+ release.

        * UIProcess/gtk/WebContextMenuProxyGtk.cpp:
        (WebKit::WebContextMenuProxyGtk::show): Use gtk_menu_popup_at_pointer() as there is always a
        pointer event that can be passed to it.
        * UIProcess/gtk/WebPopupMenuProxyGtk.cpp:
        (WebKit::WebPopupMenuProxyGtk::showPopupMenu): Use gtk_menu_popup_at_rect(), using the coordinates
        of the control passed as reference rectangle. Some conditional code is needed because with newer
        GTK+ versions a relative offset instead of an absolute position is needed.

2017-04-10  Adrian Perez de Castro  <aperez@igalia.com>

        [GTK] Opening a popup menu does not pre-select the active item
        https://bugs.webkit.org/show_bug.cgi?id=170680

        Reviewed by Michael Catanzaro.

        * UIProcess/gtk/WebPopupMenuProxyGtk.cpp:
        (WebKit::WebPopupMenuProxyGtk::showPopupMenu): Use gtk_menu_shell_select_item() to
        ensure that the active item appears selected right after popping up the menu.

2017-04-10  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Enable DOM timer throttling and CSS animations suspension
        https://bugs.webkit.org/show_bug.cgi?id=170669

        Reviewed by Žan Doberšek.

        * Shared/WebPreferencesDefinitions.h:

2017-04-10  Chris Dumez  <cdumez@apple.com>

        Drop Timer::startOneShot() overload taking a double
        https://bugs.webkit.org/show_bug.cgi?id=170659

        Reviewed by Yusuke Suzuki.

        Drop Timer::startOneShot() overload taking a double as people should use Seconds type now.

        * NetworkProcess/PingLoad.h:
        * NetworkProcess/soup/NetworkDataTaskSoup.cpp:
        (WebKit::NetworkDataTaskSoup::startTimeout):
        * Platform/IPC/Connection.h:
        * Platform/IPC/mac/ConnectionMac.mm:
        (IPC::ConnectionTerminationWatchdog::createConnectionTerminationWatchdog):
        (IPC::ConnectionTerminationWatchdog::ConnectionTerminationWatchdog):
        (IPC::Connection::terminateSoon):
        * PluginProcess/PluginProcess.cpp:
        (WebKit::PluginProcess::setMinimumLifetime):
        * PluginProcess/PluginProcess.h:
        * Shared/ChildProcess.cpp:
        (WebKit::ChildProcess::ChildProcess):
        * Shared/ChildProcess.h:
        (WebKit::ChildProcess::setTerminationTimeout):
        * Shared/CoordinatedGraphics/threadedcompositor/CompositingRunLoop.cpp:
        (WebKit::CompositingRunLoop::startUpdateTimer):
        * Shared/Plugins/PluginProcessCreationParameters.h:
        * Shared/WebMemorySampler.cpp:
        (WebKit::WebMemorySampler::initializeTimers):
        * Shared/WebProcessCreationParameters.h:
        * UIProcess/API/Cocoa/APISerializedScriptValueCocoa.mm:
        (API::SharedJSContext::ensureContext):
        * UIProcess/ChildProcessProxy.cpp:
        (WebKit::ChildProcessProxy::shutDownProcess):
        * UIProcess/Cocoa/NavigationState.mm:
        (WebKit::NavigationState::didChangeIsLoading):
        * UIProcess/Cocoa/ViewGestureController.cpp:
        (WebKit::ViewGestureController::SnapshotRemovalTracker::startWatchdog):
        * UIProcess/Cocoa/ViewGestureController.h:
        * UIProcess/DrawingAreaProxyImpl.cpp:
        (WebKit::DrawingAreaProxyImpl::discardBackingStoreSoon):
        (WebKit::DrawingAreaProxyImpl::DrawingMonitor::start):
        (WebKit::DrawingAreaProxyImpl::DrawingMonitor::didDraw):
        * UIProcess/Gamepad/UIGamepadProvider.cpp:
        * UIProcess/Plugins/PluginProcessProxy.cpp:
        * UIProcess/ProcessThrottler.cpp:
        * UIProcess/ResponsivenessTimer.cpp:
        * UIProcess/WebProcessPool.cpp:
        (WebKit::WebProcessPool::createNewWebProcess):
        * UIProcess/gtk/GestureController.cpp:
        (WebKit::GestureController::DragGesture::begin):
        * UIProcess/mac/WebInspectorProxyMac.mm:
        * WebProcess/WebPage/AcceleratedDrawingArea.cpp:
        (WebKit::AcceleratedDrawingArea::exitAcceleratedCompositingModeNow):
        * WebProcess/WebPage/CoordinatedGraphics/CoordinatedLayerTreeHost.cpp:
        (WebKit::CoordinatedLayerTreeHost::scheduleAnimation):
        * WebProcess/WebPage/WebPage.cpp:
        (WebKit::WebPage::determinePrimarySnapshottedPlugIn):
        * WebProcess/WebProcess.cpp:

2017-04-09  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] Add infrastructure to perform actions after an asynchronous position information request finishes
        https://bugs.webkit.org/show_bug.cgi?id=170658
        <rdar://problem/31431450>

        Reviewed by Tim Horton.

        Introduces doAfterPositionInformationUpdate:forRequest:, which WKContentView can use internally to perform
        an action requiring InteractionInformationAtPosition asynchronously. See below for additional details.

        New API unit test: DataInteractionTests.UnresponsivePageDoesNotHangUI.

        * UIProcess/ios/WKContentViewInteraction.h:
        * UIProcess/ios/WKContentViewInteraction.mm:
        (-[WKContentView _actionForLongPressFromPositionInformation:]):
        (-[WKContentView _actionForLongPress]):
        (-[WKContentView doAfterPositionInformationUpdate:forRequest:]):

        If current position information satisfies the request, then perform the given block immediately; otherwise, we
        save the block and request as a pair in a list of pending position information handlers, and then make a new
        request to the web process for position information if the currently outgoing request does not already satisfy
        the given request.

        (-[WKContentView ensurePositionInformationIsUpToDate:]):

        Fire all asynchronous position information handlers that are satisfied by the incoming position information.

        (-[WKContentView requestAsynchronousPositionInformationUpdate:]):
        (-[WKContentView _currentPositionInformationIsValidForRequest:]):
        (-[WKContentView _hasValidOutstandingPositionInformationRequest:]):

        Pulled out common logic for managing InteractionInformationRequests into separate helper methods.

        (-[WKContentView _invokeAndRemovePendingHandlersValidForCurrentPositionInformation]):
        (-[WKContentView gestureRecognizerShouldBegin:]):

        Refactored to use ensurePositionInformationIsUpToDate:. There is no behavior change here, but it makes sure that
        this particular request will also any valid pending position information handlers.

        (-[WKContentView _positionInformationDidChange:]):

        Fire all asynchronous position information handlers that are satisfied by the incoming position information.

        (-[WKContentView pointIsInDataInteractionContent:]): Deleted.

        We should no longer use this method, since it makes a synchronous request to the web process -- see
        positionInformationMayStartDataInteraction.

2017-04-09  Chris Dumez  <cdumez@apple.com>

        Drop Timer::startRepeating() overload taking a double
        https://bugs.webkit.org/show_bug.cgi?id=170656

        Reviewed by Yusuke Suzuki.

        Drop Timer::startRepeating() overload taking a double as people should use Seconds type now.

        * Shared/WebMemorySampler.cpp:
        (WebKit::WebMemorySampler::initializeTimers):
        * UIProcess/Cocoa/ViewGestureController.cpp:
        * UIProcess/HighPerformanceGraphicsUsageSampler.cpp:
        * UIProcess/PerActivityStateCPUUsageSampler.cpp:
        * WebProcess/Plugins/Netscape/NetscapePlugin.cpp:
        (WebKit::NetscapePlugin::Timer::start):
        * WebProcess/Plugins/Netscape/mac/NetscapePluginMac.mm:
        * WebProcess/WebPage/CoordinatedGraphics/CompositingCoordinator.cpp:
        (WebKit::CompositingCoordinator::scheduleReleaseInactiveAtlases):

2017-04-09  Jon Lee  <jonlee@apple.com>

        [WK2][iOS] Add CoreMedia entitlement for WebProcess
        https://bugs.webkit.org/show_bug.cgi?id=170623
        rdar://problem/30020073

        Reviewed by Youenn Fablet.

        * Configurations/WebContent-iOS.entitlements: Update entitlement to an array of strings instead of bool.

2017-04-09  Chris Dumez  <cdumez@apple.com>

        Start dropping Timer API dealing with double
        https://bugs.webkit.org/show_bug.cgi?id=170649

        Reviewed by Yusuke Suzuki.

        Start dropping Timer API dealing with double as people should use Seconds now.

        * NetworkProcess/NetworkDataTask.cpp:
        (WebKit::NetworkDataTask::scheduleFailure):
        * NetworkProcess/cocoa/NetworkDataTaskCocoa.mm:
        (WebKit::NetworkDataTaskCocoa::resume):
        * PluginProcess/PluginControllerProxy.cpp:
        (WebKit::PluginControllerProxy::destroy):
        (WebKit::PluginControllerProxy::startPaintTimer):
        * UIProcess/API/gtk/WebKitWebViewBase.cpp:
        (webkitWebViewBaseScheduleUpdateActivityState):
        * UIProcess/DrawingAreaProxy.cpp:
        (WebKit::DrawingAreaProxy::setViewExposedRect):
        * UIProcess/DrawingAreaProxyImpl.cpp:
        (WebKit::DrawingAreaProxyImpl::DrawingMonitor::start):
        * UIProcess/Plugins/gtk/PluginInfoCache.cpp:
        (WebKit::PluginInfoCache::updatePluginInfo):
        * UIProcess/VisitedLinkStore.cpp:
        (WebKit::VisitedLinkStore::addVisitedLinkHash):
        * UIProcess/WebProcessPool.cpp:
        (WebKit::m_hiddenPageThrottlingAutoIncreasesCounter):
        * UIProcess/gtk/GestureController.cpp:
        (WebKit::GestureController::ZoomGesture::scaleChanged):
        * UIProcess/gtk/WebPopupMenuProxyGtk.cpp:
        (WebKit::WebPopupMenuProxyGtk::menuUnmappedCallback):
        * WebProcess/Network/WebLoaderStrategy.cpp:
        (WebKit::WebLoaderStrategy::scheduleInternallyFailedLoad):
        * WebProcess/Plugins/Netscape/NPRuntimeObjectMap.cpp:
        (WebKit::NPRuntimeObjectMap::addToInvalidationQueue):
        * WebProcess/Plugins/Netscape/NetscapePluginStream.cpp:
        (WebKit::NetscapePluginStream::deliverDataToPlugin):
        * WebProcess/Plugins/PluginView.cpp:
        (WebKit::PluginView::pendingURLRequestsTimerFired):
        (WebKit::PluginView::loadURL):
        * WebProcess/WebPage/AcceleratedDrawingArea.cpp:
        (WebKit::AcceleratedDrawingArea::exitAcceleratedCompositingModeSoon):
        * WebProcess/WebPage/CoordinatedGraphics/CoordinatedLayerTreeHost.cpp:
        (WebKit::CoordinatedLayerTreeHost::scheduleLayerFlush):
        * WebProcess/WebPage/DrawingAreaImpl.cpp:
        (WebKit::DrawingAreaImpl::scheduleDisplay):
        * WebProcess/WebPage/WebPage.cpp:
        (WebKit::WebPage::updateIsInWindow):
        (WebKit::WebPage::addPluginView):
        (WebKit::WebPage::setMayStartMediaWhenInWindow):
        (WebKit::WebPage::didFinishLoad):
        * WebProcess/WebPage/mac/TiledCoreAnimationDrawingArea.mm:
        (WebKit::TiledCoreAnimationDrawingArea::activityStateDidChange):

2017-04-08  Chris Dumez  <cdumez@apple.com>

        Drop std::chrono support from Timer class
        https://bugs.webkit.org/show_bug.cgi?id=170645

        Reviewed by Sam Weinig.

        Drop std::chrono support from Timer class now that we prefer using Seconds type.

        * NetworkProcess/NetworkLoad.cpp:
        (WebKit::NetworkLoad::Throttle::Throttle):
        (WebKit::NetworkLoad::didReceiveResponseNetworkSession):
        * NetworkProcess/NetworkProcess.h:
        (WebKit::NetworkProcess::loadThrottleLatency):
        * NetworkProcess/NetworkProcessCreationParameters.cpp:
        * NetworkProcess/NetworkProcessCreationParameters.h:
        * NetworkProcess/NetworkResourceLoadParameters.h:
        * NetworkProcess/NetworkResourceLoader.cpp:
        (WebKit::NetworkResourceLoader::startNetworkLoad):
        * NetworkProcess/cache/NetworkCacheSpeculativeLoadManager.cpp:
        * NetworkProcess/cache/NetworkCacheStatistics.cpp:
        * NetworkProcess/cache/NetworkCacheStorage.cpp:
        (WebKit::NetworkCache::Storage::dispatchReadOperation):
        (WebKit::NetworkCache::Storage::store):
        * Shared/CacheModel.cpp:
        (WebKit::calculateMemoryCacheSizes):
        * Shared/CacheModel.h:
        * Shared/mac/RemoteLayerBackingStoreCollection.mm:
        * UIProcess/Cocoa/WebProcessPoolCocoa.mm:
        (WebKit::WebProcessPool::platformInitializeNetworkProcess):
        * WebProcess/Network/WebLoaderStrategy.cpp:
        (WebKit::maximumBufferingTime):
        * WebProcess/Plugins/PluginView.cpp:
        * WebProcess/WebPage/mac/RemoteLayerTreeDrawingArea.mm:
        (WebKit::RemoteLayerTreeDrawingArea::scheduleCompositingLayerFlushImmediately):
        (WebKit::RemoteLayerTreeDrawingArea::scheduleCompositingLayerFlush):
        * WebProcess/WebProcess.cpp:
        (WebKit::m_resourceLoadStatisticsStore):
        (WebKit::WebProcess::setCacheModel):

2017-04-08  Chris Dumez  <cdumez@apple.com>

        Unreviewed attempt to fix GTK build after r215138.

        * UIProcess/API/gtk/WebKitUIClient.cpp:

2017-04-08  Youenn Fablet  <youenn@apple.com>

        WebRTC tests gardening
        https://bugs.webkit.org/show_bug.cgi?id=170508

        Reviewed by Eric Carlson.

        * Configurations/FeatureDefines.xcconfig:

2017-04-08  Chris Dumez  <cdumez@apple.com>

        Timer's nextFireInterval() / repeatInterval() should return Seconds
        https://bugs.webkit.org/show_bug.cgi?id=170639

        Reviewed by Simon Fraser.

        Timer's nextFireInterval() / repeatInterval() should return Seconds, not double.

        * WebProcess/WebPage/WebPage.cpp:
        (WebKit::WebPage::layerVolatilityTimerFired):
        (WebKit::WebPage::markLayersVolatile):

2017-04-07  Alex Christensen  <achristensen@webkit.org>

        Modernize WebPage.h
        https://bugs.webkit.org/show_bug.cgi?id=170633

        Reviewed by Joseph Pecoraro.

        * UIProcess/API/APIUIClient.h:
        (API::UIClient::createNewPage):
        * UIProcess/API/C/WKPage.cpp:
        (WebKit::RunBeforeUnloadConfirmPanelResultListener::create):
        (WebKit::RunJavaScriptAlertResultListener::create):
        (WebKit::RunJavaScriptConfirmResultListener::create):
        (WebKit::RunJavaScriptConfirmResultListener::RunJavaScriptConfirmResultListener):
        (WebKit::RunJavaScriptPromptResultListener::create):
        (WebKit::RunJavaScriptPromptResultListener::RunJavaScriptPromptResultListener):
        (WKPageSetPageUIClient):
        * UIProcess/Cocoa/UIDelegate.h:
        * UIProcess/Cocoa/UIDelegate.mm:
        (WebKit::UIDelegate::UIClient::createNewPage):
        * WebProcess/WebPage/WebPage.cpp:
        (WebKit::WebPage::loadDataImpl):
        (WebKit::WebPage::loadStringImpl):
        (WebKit::WebPage::loadData):
        (WebKit::WebPage::scaledSnapshotWithOptions):
        (WebKit::WebPage::SandboxExtensionTracker::willPerformLoadDragDestinationAction):
        (WebKit::WebPage::SandboxExtensionTracker::setPendingProvisionalSandboxExtension):
        * WebProcess/WebPage/WebPage.h:

2017-04-07  Alex Christensen  <achristensen@webkit.org>

        Use audit_token_t instead of pid_t for checking sandbox of other processes
        https://bugs.webkit.org/show_bug.cgi?id=170616
        <rdar://problem/31158189>

        Reviewed by Daniel Bates.

        pid's can be reused, so it's theoretically unsafe to use the pid of another process to check whether it's sandboxed.
        Use an audit_token_t instead to be more sure that we are not mistakenly checking a new process that has reused the
        old process's pid. For the current process, though, we have no xpc_connection_t to the process because we are the process.

        * PluginProcess/mac/PluginProcessMac.mm:
        (WebKit::PluginProcess::initializeSandbox):
        * Shared/EntryPointUtilities/mac/XPCService/XPCServiceEntryPoint.mm:
        (WebKit::XPCServiceInitializerDelegate::isClientSandboxed):
        * Shared/mac/SandboxUtilities.h:
        * Shared/mac/SandboxUtilities.mm:
        (WebKit::currentProcessIsSandboxed):
        (WebKit::connectedProcessIsSandboxed):
        (WebKit::processIsSandboxed): Deleted.
        * UIProcess/Cocoa/WebProcessProxyCocoa.mm:
        (WebKit::WebProcessProxy::platformIsBeingDebugged):
        * UIProcess/Plugins/mac/PluginInfoStoreMac.mm:
        (WebKit::PluginInfoStore::shouldUsePlugin):
        * UIProcess/Plugins/mac/PluginProcessProxyMac.mm:
        (WebKit::PluginProcessProxy::platformGetLaunchOptions):

2017-04-07  Brent Fulgham  <bfulgham@apple.com>

        [WK2][iOS] Add CoreMedia entitlement for WebProcess
        https://bugs.webkit.org/show_bug.cgi?id=170623
        <rdar://problem/30020073>

        Reviewed by Youenn Fablet.

        Add new "com.apple.tcc.delegated-services" entitlement to allow CoreMedia
        to work properly in WebRTC.

        * Configurations/WebContent-iOS.entitlements:

2017-04-07  Alex Christensen  <achristensen@webkit.org>

        Private browsing sessions should not look in keychain for client certificates
        https://bugs.webkit.org/show_bug.cgi?id=170618
        <rdar://problem/18457427>

        Reviewed by Dan Bernstein.

        * NetworkProcess/cocoa/NetworkSessionCocoa.mm:
        (WebKit::configurationForSessionID):

2017-04-07  Chris Dumez  <cdumez@apple.com>

        We should log how much CPU a background process was using when killing it due to CPU limiting
        https://bugs.webkit.org/show_bug.cgi?id=170619

        Reviewed by Andreas Kling.

        * WebProcess/cocoa/WebProcessCocoa.mm:
        (WebKit::WebProcess::updateBackgroundCPUMonitorState):

2017-04-07  Wenson Hsieh  <wenson_hsieh@apple.com>

        Missing conversion from window to content coordinates when adjusting unobscured content rects for input view
        https://bugs.webkit.org/show_bug.cgi?id=170603

        Reviewed by Simon Fraser.

        Refactors -[WKContentView _computeUnobscuredContentRectRespectingInputViewBounds:unobscuredContentRect:inputViewBounds:scale:]
        to convert the input view bounds into content coordinates instead of using the zoom scale to adjust the height of inputViewBounds.
        Covered by the existing LayoutTest, fixed-element-on-bottom-with-keyboard.html.

        * UIProcess/ios/WKContentView.mm:
        (-[WKContentView _computeUnobscuredContentRectRespectingInputViewBounds:unobscuredContentRect:inputViewBounds:scale:]):

2017-04-07  Michael Catanzaro  <mcatanzaro@igalia.com>

        [GTK] Various build errors when plugin support is disabled
        https://bugs.webkit.org/show_bug.cgi?id=170015

        Reviewed by Carlos Garcia Campos.

        * PluginProcess/unix/PluginControllerProxyUnix.cpp:
        * UIProcess/API/gtk/WebKitWebsiteData.cpp:
        (recordContainsSupportedDataTypes):
        (toWebKitWebsiteDataTypes):
        * UIProcess/API/gtk/WebKitWebsiteDataManager.cpp:
        (toWebsiteDataTypes):

2017-04-07  John Wilander  <wilander@apple.com>

        WebSocket streams should have network usage attributed to correct process
        https://bugs.webkit.org/show_bug.cgi?id=170322
        <rdar://problem/26413551>

        Reviewed by Alex Christensen.

        Changes here are due to the added WebCore::SourceApplicationAuditToken parameter
        in WebCore::SocketStreamHandleImpl::create().
        WebKit::NetworkSocketStream takes it and passes it on.

        * NetworkProcess/NetworkConnectionToWebProcess.cpp:
        (WebKit::NetworkConnectionToWebProcess::createSocketStream):
        * NetworkProcess/NetworkSocketStream.cpp:
        (WebKit::NetworkSocketStream::create):
        (WebKit::NetworkSocketStream::NetworkSocketStream):
        * NetworkProcess/NetworkSocketStream.h:

2017-04-07  Michael Catanzaro  <mcatanzaro@igalia.com>

        Unreviewed, fix missing return value warning

        * UIProcess/WebProcessProxy.cpp:
        (WebKit::diagnosticLoggingKeyForSimulatedCrashReason):

2017-04-07  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Update the priorities used in glib main loop sources
        https://bugs.webkit.org/show_bug.cgi?id=170457

        Reviewed by Žan Doberšek.

        * Shared/CoordinatedGraphics/threadedcompositor/CompositingRunLoop.cpp:
        (WebKit::CompositingRunLoop::CompositingRunLoop):
        * UIProcess/DrawingAreaProxyImpl.cpp:
        (WebKit::DrawingAreaProxyImpl::DrawingAreaProxyImpl):
        (WebKit::DrawingAreaProxyImpl::DrawingMonitor::DrawingMonitor):
        * UIProcess/gtk/WaylandCompositor.cpp:
        (WebKit::createWaylandLoopSource):
        * WebProcess/WebPage/AcceleratedDrawingArea.cpp:
        (WebKit::AcceleratedDrawingArea::AcceleratedDrawingArea):
        * WebProcess/WebPage/CoordinatedGraphics/CompositingCoordinator.cpp:
        (WebKit::CompositingCoordinator::CompositingCoordinator):
        * WebProcess/WebPage/CoordinatedGraphics/CompositingCoordinator.h:
        * WebProcess/WebPage/CoordinatedGraphics/CoordinatedLayerTreeHost.cpp:
        (WebKit::CoordinatedLayerTreeHost::CoordinatedLayerTreeHost):
        * WebProcess/WebPage/DrawingAreaImpl.cpp:
        (WebKit::DrawingAreaImpl::DrawingAreaImpl):

2017-04-06  Alex Christensen  <achristensen@webkit.org>

        Add WKContentExtensionStore.h and WKContentExtension.h to public WebKit.h
        https://bugs.webkit.org/show_bug.cgi?id=170533

        Reviewed by Daniel Bates.

        * Shared/API/Cocoa/WebKit.h:
        In r213696 I added two public headers.  All public headers in WebKit are included with
        #import <WebKit/WebKit.h>

2017-04-06  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Hangs when loading under SpeculativeLoad::shouldCaptureExtraNetworkLoadMetrics
        https://bugs.webkit.org/show_bug.cgi?id=170575

        Rubber-stamped by Brian Burg.

        * NetworkProcess/cache/NetworkCacheSpeculativeLoad.cpp:
        (WebKit::NetworkCache::SpeculativeLoad::shouldCaptureExtraNetworkLoadMetrics): Deleted.
        * NetworkProcess/cache/NetworkCacheSpeculativeLoad.h:
        m_networkLoad is a wrapper around `this` as the client, so we would infinite loop here.

2017-04-06  Commit Queue  <commit-queue@webkit.org>

        Unreviewed, rolling out r214973.
        https://bugs.webkit.org/show_bug.cgi?id=170578

        Causes issues in Safari (Requested by bradee-oh on #webkit).

        Reverted changeset:

        "Refactor so WebsiteDataStores always have a StorageManager."
        https://bugs.webkit.org/show_bug.cgi?id=170521
        http://trac.webkit.org/changeset/214973

2017-04-06  Ryan Haddad  <ryanhaddad@apple.com>

        Unreviewed, rolling out r215046.

        This change broke internal builds.

        Reverted changeset:

        "WebRTC tests gardening"
        https://bugs.webkit.org/show_bug.cgi?id=170508
        http://trac.webkit.org/changeset/215046

2017-04-06  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Only Capture Extra Network Load Metrics when there is a Web Inspector Frontend
        https://bugs.webkit.org/show_bug.cgi?id=170525

        Reviewed by Youenn Fablet.

        * NetworkProcess/cocoa/NetworkSessionCocoa.mm:
        (-[WKNetworkSessionDelegate URLSession:task:didFinishCollectingMetrics:]):
        Only collect extra metrics if the WebProcess this load is for has enabled
        collecting extra metrics.

        * WebProcess/Network/WebLoaderStrategy.cpp:
        (WebKit::WebLoaderStrategy::setCaptureExtraNetworkLoadMetricsEnabled):
        * WebProcess/Network/WebLoaderStrategy.h:
        * NetworkProcess/NetworkConnectionToWebProcess.cpp:
        (WebKit::NetworkConnectionToWebProcess::setCaptureExtraNetworkLoadMetricsEnabled):
        * NetworkProcess/NetworkConnectionToWebProcess.h:
        (WebKit::NetworkConnectionToWebProcess::captureExtraNetworkLoadMetricsEnabled):
        * NetworkProcess/NetworkConnectionToWebProcess.messages.in:
        New bool state toggled through the loader policy.

        * NetworkProcess/NetworkDataTask.cpp:
        (WebKit::NetworkDataTask::shouldCaptureExtraNetworkLoadMetrics):
        * NetworkProcess/NetworkDataTask.h:
        (WebKit::NetworkDataTaskClient::shouldCaptureExtraNetworkLoadMetrics):
        * NetworkProcess/NetworkLoad.cpp:
        (WebKit::NetworkLoad::shouldCaptureExtraNetworkLoadMetrics):
        * NetworkProcess/NetworkLoad.h:
        * NetworkProcess/NetworkLoadClient.h:
        (WebKit::NetworkLoadClient::shouldCaptureExtraNetworkLoadMetrics):
        * NetworkProcess/NetworkResourceLoader.cpp:
        (WebKit::NetworkResourceLoader::shouldCaptureExtraNetworkLoadMetrics):
        * NetworkProcess/NetworkResourceLoader.h:
        * NetworkProcess/cache/NetworkCacheSpeculativeLoad.cpp:
        (WebKit::NetworkCache::SpeculativeLoad::shouldCaptureExtraNetworkLoadMetrics):
        * NetworkProcess/cache/NetworkCacheSpeculativeLoad.h:
        Default handling for network loads is to not include extra data. Thread
        client messages back from the NetworkLoads / SpeculativeLoads to check
        the NetworkConnectionToWebProcess state on whether or not we should collect
        extra metrics.

2017-04-06  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Show all headers in the Request Headers section of the Resource details sidebar
        https://bugs.webkit.org/show_bug.cgi?id=16531
        <rdar://problem/5712895>

        Reviewed by Timothy Hatcher.

        * NetworkProcess/cocoa/NetworkSessionCocoa.mm:
        (-[WKNetworkSessionDelegate URLSession:task:didFinishCollectingMetrics:]):
        Include a complete list of the request headers sent for this load.
        There may be headers that WebCore did not know about and developer
        tools should be informed of.

2017-04-06  Anders Carlsson  <andersca@apple.com>

        OptionSet options need to be powers of two
        https://bugs.webkit.org/show_bug.cgi?id=170565

        Reviewed by Chris Dumez.

        Change Cache::Option to be powers of two.

        * NetworkProcess/cache/NetworkCache.h:

2017-04-06  Youenn Fablet  <youenn@apple.com>

        WebRTC tests gardening
        https://bugs.webkit.org/show_bug.cgi?id=170508

        Reviewed by Eric Carlson.

        * Configurations/FeatureDefines.xcconfig:

2017-04-06  Antti Koivisto  <antti@apple.com>

        Implement testing mode for disk cache
        https://bugs.webkit.org/show_bug.cgi?id=170547

        Reviewed by Andreas Kling.

        Disable read timeouts and cache shrinking in TestRunner to eliminate potential sources of randomness.

        Cache directories are deleted by TestRunner so lack of shrinking does not consume the disk.

        This is enabled by the existing WKContextUseTestingNetworkSession SPI.

        * NetworkProcess/cache/NetworkCache.cpp:
        (WebKit::NetworkCache::Cache::initialize):
        * NetworkProcess/cache/NetworkCache.h:
        * NetworkProcess/cache/NetworkCacheStorage.cpp:
        (WebKit::NetworkCache::Storage::open):
        (WebKit::NetworkCache::Storage::Storage):
        (WebKit::NetworkCache::Storage::dispatchReadOperation):
        (WebKit::NetworkCache::Storage::shrinkIfNeeded):
        * NetworkProcess/cache/NetworkCacheStorage.h:
        * NetworkProcess/cocoa/NetworkProcessCocoa.mm:
        (WebKit::NetworkProcess::platformInitializeNetworkProcessCocoa):

2017-04-06  Chris Dumez  <cdumez@apple.com>

        [WK2] Add C private API to toggle invisibleAutoplayNotPermitted setting
        https://bugs.webkit.org/show_bug.cgi?id=170524
        <rdar://problem/31461472>

        Reviewed by Eric Carlson.

        Add C private API to toggle invisibleAutoplayNotPermitted setting.

        * UIProcess/API/C/WKPreferences.cpp:
        (WKPreferencesSetInvisibleMediaAutoplayPermitted):
        (WKPreferencesGetInvisibleMediaAutoplayPermitted):
        * UIProcess/API/C/WKPreferencesRefPrivate.h:

2017-04-06  Adrian Perez de Castro  <aperez@igalia.com>

        [GTK] Fix build with MEDIA_CAPTURE enabled
        https://bugs.webkit.org/show_bug.cgi?id=170539

        Reviewed by Carlos Garcia Campos.

        * WebProcess/InjectedBundle/API/gtk/DOM/WebKitDOMDeprecated.cpp:
        (webkit_dom_html_input_element_get_capture): Add missing namespace in usage of WebCore::MediaCaptureTypeNone.

2017-04-05  Brent Fulgham  <bfulgham@apple.com>

        [WK2][iOS] Remove access to features not present on iOS 
        https://bugs.webkit.org/show_bug.cgi?id=170531
        <rdar://problem/31352258>

        Reviewed by Alexey Proskuryakov.

        * Resources/SandboxProfiles/ios/com.apple.WebKit.WebContent.sb:

2017-04-05  Eric Carlson  <eric.carlson@apple.com>

        [MediaStream] Host application should be able to mute and unmute media streams
        https://bugs.webkit.org/show_bug.cgi?id=170519
        <rdar://problem/31174326>

        Reviewed by Youenn Fablet.

        * UIProcess/API/C/WKPage.cpp:
        (WKPageGetMediaState): Support new media stream state flags.
        * UIProcess/API/C/WKPagePrivate.h:
        * UIProcess/API/Cocoa/WKWebViewPrivate.h: Ditto.
        * UIProcess/Cocoa/UIDelegate.mm: Ditto.

2017-04-05  Brady Eidson  <beidson@apple.com>

        Refactor so WebsiteDataStores always have a StorageManager.
        https://bugs.webkit.org/show_bug.cgi?id=170521

        Reviewed by Geoff Garen.

        This basically involves teaching StorageManager how to work without a LocalStorageDatabaseTracker,
        since there will never be ephemeral bits on disk to track.
        
        * UIProcess/Storage/StorageManager.cpp:
        (WebKit::StorageManager::StorageArea::openDatabaseAndImportItemsIfNeeded):
        (WebKit::StorageManager::createEphemeral):
        (WebKit::StorageManager::StorageManager):
        (WebKit::StorageManager::getLocalStorageOrigins):
        (WebKit::StorageManager::getLocalStorageOriginDetails):
        (WebKit::StorageManager::deleteLocalStorageEntriesForOrigin):
        (WebKit::StorageManager::deleteLocalStorageOriginsModifiedSince):
        (WebKit::StorageManager::deleteLocalStorageEntriesForOrigins):
        * UIProcess/Storage/StorageManager.h:
        
        * UIProcess/WebsiteData/WebsiteDataStore.cpp:
        (WebKit::WebsiteDataStore::WebsiteDataStore):

2017-04-05  Brent Fulgham  <bfulgham@apple.com>

        [WK2][iOS] Add entitlements to enable audio/video capture in WebProcess
        https://bugs.webkit.org/show_bug.cgi?id=170507
        <rdar://problem/31121248>

        Reviewed by Youenn Fablet.

        Add two entitlements that are required to access audio/video capture on iOS.

        * Configurations/WebContent-iOS.entitlements:

2017-04-05  Carlos Garcia Campos  <cgarcia@igalia.com>

        Show a log message when an invalid message is received in non cocoa ports
        https://bugs.webkit.org/show_bug.cgi?id=170506

        Reviewed by Michael Catanzaro.

        We just crash, but without knowing the details about the message it's impossible to debug.

        * Shared/ChildProcess.cpp:
        (WebKit::ChildProcess::didReceiveInvalidMessage):

2017-04-04  Carlos Garcia Campos  <cgarcia@igalia.com>

        Move WebErrors from WebProcess to Shared and get rid of ErrorsGtk in WebCore
        https://bugs.webkit.org/show_bug.cgi?id=156974

        Reviewed by Sam Weinig.

        WebErrors are not only used by the frame loader client in the web process, but also by the network process. So,
        move them to Shared make most of the implementation cross-platform.

        * CMakeLists.txt: Add new files to compilation.
        * NetworkProcess/soup/NetworkDataTaskSoup.cpp:
        (WebKit::NetworkDataTaskSoup::download): Use WebErrors directly instead of platform methods that are no longer needed.
        (WebKit::NetworkDataTaskSoup::writeDownloadCallback): Ditto.
        (WebKit::NetworkDataTaskSoup::didFinishDownload): Ditto.
        (WebKit::NetworkDataTaskSoup::didFail): Ditto.
        * PlatformGTK.cmake: Add new files to compilation and remove DownloadSoupErrorsGtk.cpp
        * PlatformMac.cmake:
        * Shared/API/APIError.cpp: Add error domains used by glib based ports.
        (API::Error::webKitNetworkErrorDomain):
        (API::Error::webKitPolicyErrorDomain):
        (API::Error::webKitPluginErrorDomain):
        (API::Error::webKitDownloadErrorDomain):
        (API::Error::webKitPrintErrorDomain):
        * Shared/API/APIError.h:
        * Shared/Cocoa/WebErrorsCocoa.mm: Copied from Source/WebKit2/WebProcess/WebCoreSupport/WebErrors.h.
        (WebKit::createNSError):
        (WebKit::cancelledError):
        (WebKit::fileDoesNotExistError):
        * Shared/WebErrors.cpp: Copied from Source/WebKit2/WebProcess/WebCoreSupport/gtk/WebErrorsGtk.cpp.
        (WebKit::blockedError):
        (WebKit::blockedByContentBlockerError):
        (WebKit::cannotShowURLError):
        (WebKit::interruptedForPolicyChangeError):
        (WebKit::blockedByContentFilterError):
        (WebKit::cannotShowMIMETypeError):
        (WebKit::pluginWillHandleLoadError):
        (WebKit::internalError):
        * Shared/WebErrors.h: Renamed from Source/WebKit2/WebProcess/WebCoreSupport/WebErrors.h.
        * Shared/glib/WebErrorsGlib.cpp: Renamed from Source/WebKit2/WebProcess/WebCoreSupport/gtk/WebErrorsGtk.cpp.
        (WebKit::cancelledError):
        (WebKit::fileDoesNotExistError):
        * Shared/gtk/WebErrorsGtk.cpp: Copied from Source/WebKit2/NetworkProcess/Downloads/gtk/DownloadSoupErrorsGtk.cpp.
        (WebKit::printError):
        (WebKit::printerNotFoundError):
        (WebKit::invalidPageRangeToPrint):
        * Shared/soup/WebErrorsSoup.cpp: Renamed from Source/WebKit2/NetworkProcess/Downloads/gtk/DownloadSoupErrorsGtk.cpp.
        (WebKit::downloadNetworkError):
        (WebKit::downloadCancelledByUserError):
        (WebKit::downloadDestinationError):
        * UIProcess/API/gtk/WebKitDownload.cpp:
        * UIProcess/API/gtk/WebKitError.cpp:
        (webkit_network_error_quark):
        (webkit_policy_error_quark):
        (webkit_plugin_error_quark):
        (webkit_download_error_quark):
        (webkit_print_error_quark):
        * UIProcess/API/gtk/WebKitPrivate.cpp:
        (toWebKitError):
        (toWebCoreError):
        * WebKit2.xcodeproj/project.pbxproj:
        * WebProcess/WebCoreSupport/mac/WebErrorsMac.mm: Removed.
        * WebProcess/WebPage/gtk/WebPrintOperationGtk.cpp:

2017-04-04  Youenn Fablet  <youenn@apple.com>

        [Mac] Add back web audio support for getUserMedia MediaStreamTrack
        https://bugs.webkit.org/show_bug.cgi?id=170482

        Reviewed by Eric Carlson.

        * WebProcess/cocoa/UserMediaCaptureManager.cpp:
        (WebKit::UserMediaCaptureManager::Source::setStorage):

2017-04-04  Tim Horton  <timothy_horton@apple.com>

        [Mac] -[WKWebView findMatchesForString:relativeToMatch:findOptions:maxResults:resultCollector:] invokes the resultCollector with didWrap = NO even when it wraps
        https://bugs.webkit.org/show_bug.cgi?id=165801
        <rdar://problem/29649535>

        Reviewed by Wenson Hsieh.

        Previously, when doing an incremental find that wrapped, we would 
        say that it did not, leading NSTextFinder to not provide its usual
        wrapping UI, and other clients of the NSTextFinderClient protocol to
        get confused by the lack of wrapping.

        * UIProcess/WebPageProxy.cpp:
        (WebKit::WebPageProxy::didFindString):
        * UIProcess/WebPageProxy.h:
        * UIProcess/WebPageProxy.messages.in:
        * UIProcess/API/APIFindClient.h:
        (API::FindClient::didFindString):
        * UIProcess/API/C/WKPage.cpp:
        (WKPageSetPageFindClient):
        * UIProcess/Cocoa/FindClient.h:
        * UIProcess/Cocoa/FindClient.mm:
        (WebKit::FindClient::didFindString):
        * WebProcess/WebPage/FindController.cpp:
        (WebKit::FindController::updateFindUIAfterPageScroll):
        (WebKit::FindController::findString):
        * WebProcess/WebPage/FindController.h:
        Plumb DidWrap from FindController's call to findString back through
        the DidFindString message.

        * UIProcess/mac/WKTextFinderClient.mm:
        (-[WKTextFinderClient didFindStringMatchesWithRects:didWrapAround:]):
        (-[WKTextFinderClient didFindStringMatchesWithRects:]): Deleted.
        Make use of the new DidWrap information to stop lying to NSTextFinder
        about whether a wrap actually occurred.

2017-04-03  Wenson Hsieh  <wenson_hsieh@apple.com>

        Data interaction should register type identifiers in order of priority
        https://bugs.webkit.org/show_bug.cgi?id=170428
        <rdar://problem/30633296>

        Reviewed by Tim Horton.

        Serialize PasteboardWebContent.dataInAttributedStringFormat when sending over IPC. Refer to WebCore ChangeLog
        for more details.

        * Shared/WebCoreArgumentCoders.cpp:
        (IPC::ArgumentCoder<PasteboardWebContent>::encode):
        (IPC::ArgumentCoder<PasteboardWebContent>::decode):
        * UIProcess/API/Cocoa/WKWebView.mm:

2017-04-03  Joseph Pecoraro  <pecoraro@apple.com>

        Remove no longer needed forward declarations
        https://bugs.webkit.org/show_bug.cgi?id=170415

        Reviewed by Dan Bernstein.

        * NetworkProcess/cocoa/NetworkSessionCocoa.mm:

2017-04-03  Anders Carlsson  <andersca@apple.com>

        Tweak ApplePaySession API
        https://bugs.webkit.org/show_bug.cgi?id=170409
        rdar://problem/31405459

        Reviewed by Tim Horton.

        Update for WebCore changes.

        * UIProcess/ApplePay/cocoa/WebPaymentCoordinatorProxyCocoa.mm:
        (WebKit::toNSError):

2017-04-03  Carlos Garcia Campos  <cgarcia@igalia.com>

        [SOUP] URI Fragment is lost after redirect
        https://bugs.webkit.org/show_bug.cgi?id=170058

        Reviewed by Michael Catanzaro.

        In case of redirection check if the current request has a fragment identifier and apply it to the redirection
        only when it doesn't have a fragment identifier yet.

        * NetworkProcess/soup/NetworkDataTaskSoup.cpp:
        (WebKit::NetworkDataTaskSoup::NetworkDataTaskSoup):
        (WebKit::NetworkDataTaskSoup::createRequest):
        (WebKit::NetworkDataTaskSoup::continueHTTPRedirection):
        * NetworkProcess/soup/NetworkDataTaskSoup.h:

2017-04-03  Antti Koivisto  <antti@apple.com>

        Mutex may be freed too late in NetworkCache::Storage::traverse
        https://bugs.webkit.org/show_bug.cgi?id=170400
        <rdar://problem/30515865>

        Reviewed by Carlos Garcia Campos and Andreas Kling.

        Fix a race.

        * NetworkProcess/cache/NetworkCacheStorage.cpp:
        (WebKit::NetworkCache::Storage::traverse):

            Ensure the mutex is not accessed after we dispatch to the main thread.
            The main thread call deletes the owning TraverseOperation.

2017-04-01  Dan Bernstein  <mitz@apple.com>

        [iOS] <input type=file> label should be specified using plural rules
        https://bugs.webkit.org/show_bug.cgi?id=170388

        Reviewed by Alexey Proskuryakov.

        * UIProcess/ios/forms/WKFileUploadPanel.mm:
        (-[WKFileUploadPanel _processMediaInfoDictionaries:atIndex:processedResults:processedImageCount:processedVideoCount:successBlock:failureBlock:]):
          Instead of calling -_displayStringForPhotos:videos:, use
          +[NSString localizedStringWithFormat:] with the new format string "%lu photo(s) and
          %lu video(s)" for which there are plural rules.
        (-[WKFileUploadPanel _displayStringForPhotos:videos:]): Deleted.

2017-04-01  Dan Bernstein  <mitz@apple.com>

        [Xcode] In engineering builds, linker warns about libwebrtc.dylib’s install name being invalid
        https://bugs.webkit.org/show_bug.cgi?id=170385

        Reviewed by Tim Horton.

        * Configurations/WebKit.xcconfig: When WebKit is relocatable, tell the linker that it’s
          not going to be in the shared cache, even if its install name implies that it might be.

2017-03-31  Simon Fraser  <simon.fraser@apple.com>

        Remove a logging statement left in by mistake.

        * WebProcess/WebCoreSupport/WebFrameLoaderClient.cpp:
        (WebKit::WebFrameLoaderClient::restoreViewState):

2017-03-31  Wenson Hsieh  <wenson_hsieh@apple.com>

        Address post-review feedback after r214692
        https://bugs.webkit.org/show_bug.cgi?id=170328

        Reviewed by Dan Bernstein.

        Clearing the selection when UIKit calls into WKContentView to set its selected text range to nil is a rule
        that should be applied when using a text interaction assistant, not just when using character granularity
        for selecting text.

        * UIProcess/ios/WKContentViewInteraction.mm:
        (-[WKContentView setSelectedTextRange:]):

2017-03-31  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] Tapping away to dismiss the selection does not update the selected DOM range using character granularity
        https://bugs.webkit.org/show_bug.cgi?id=170328
        <rdar://problem/30904558>

        Reviewed by Tim Horton.

        When UIKit clears the selection while in text interaction mode, it notifies its document view (i.e., the
        WKContentView) by setting its selected text range to nil. When character granularity selection is enabled, use
        this as a cue to notify the web process that the selection is being cleared out.

        -setSelectedTextRange: is a noop in the general case because the web process acts as the source of truth for what
        the selection currently consists of, and notifies the UI process and UIKit via WKTextPosition and WKTextRange.
        However, in the case of character granularity selections, tapping away to clear the selection is handled by
        UIKit's text gesture recognizer cluster, which then informs the document (via -setSelectedTextRange:) that the
        selection should be cleared out.

        Adds a new Layout test: editing/selection/character-granularity-selected-range-after-dismissing-selection.html.

        * UIProcess/ios/WKContentViewInteraction.mm:
        (-[WKContentView setSelectedTextRange:]):

2017-03-31  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] Tapping editable text inside of a range selection no longer changes the selection to a caret
        https://bugs.webkit.org/show_bug.cgi?id=170327
        <rdar://problem/31363816>

        Reviewed by Tim Horton.

        Currently, we're forcing all text interaction gestures to duck in lieu of data interaction gestures
        when we should only be doing so for gestures that begin a loupe. This prevents other gestures, such as
        single taps, from changing the selection when they should be allowed to.

        Hooks into new UIKit SPI to make this tweak.
        Introduces a new LayoutTest: editing/selection/caret-after-tap-in-editable-selection.html.

        * UIProcess/ios/WKContentViewInteraction.mm:
        (-[WKContentView pointIsInAssistedNode:]):
        (-[WKContentView textInteractionGesture:shouldBeginAtPoint:]):

2017-03-31  Tim Horton  <timothy_horton@apple.com>

        Mail can get stuck underneath FindController::findStringMatches after searching in a long message
        https://bugs.webkit.org/show_bug.cgi?id=170326
        <rdar://problem/30330395>

        Reviewed by Simon Fraser.

        * UIProcess/mac/WKTextFinderClient.mm:
        (-[WKTextFinderClient findMatchesForString:relativeToMatch:findOptions:maxResults:resultCollector:]):
        Cap the number of find matches at 1000, the same maximum that Safari uses.

2017-03-31  Brady Eidson  <beidson@apple.com>

        Clean up the "StorageType" enum.
        https://bugs.webkit.org/show_bug.cgi?id=170349

        Reviewed by Tim Horton.

        * WebProcess/Storage/StorageAreaMap.cpp:
        (WebKit::StorageAreaMap::StorageAreaMap):
        (WebKit::StorageAreaMap::dispatchStorageEvent):
        (WebKit::StorageAreaMap::dispatchSessionStorageEvent):
        (WebKit::StorageAreaMap::dispatchLocalStorageEvent):
        
        * WebProcess/Storage/StorageNamespaceImpl.cpp:
        (WebKit::StorageNamespaceImpl::createSessionStorageNamespace):
        (WebKit::StorageNamespaceImpl::createLocalStorageNamespace):
        (WebKit::StorageNamespaceImpl::createTransientLocalStorageNamespace):

2017-03-31  Tim Horton  <timothy_horton@apple.com>

        Remove bundle checks for attachmentElementEnabled
        https://bugs.webkit.org/show_bug.cgi?id=170329
        <rdar://problem/25135244>

        Reviewed by Simon Fraser.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _initializeWithConfiguration:]):
        * UIProcess/API/Cocoa/WKWebViewConfiguration.mm:
        (-[WKWebViewConfiguration init]):
        Remove bundle checks.

2017-03-29  Anders Carlsson  <andersca@apple.com>

        Adopt PKCanMakePaymentsWithMerchantIdentifierAndDomainAndSourceApplication
        https://bugs.webkit.org/show_bug.cgi?id=170257
        rdar://problem/31289764

        Reviewed by Beth Dakin.

        * UIProcess/ApplePay/cocoa/WebPaymentCoordinatorProxyCocoa.mm:
        (WebKit::WebPaymentCoordinatorProxy::platformCanMakePaymentsWithActiveCard):

2017-03-31  Csaba Osztrogonác  <ossy@webkit.org>

        Mac cmake buildfix after r214403
        https://bugs.webkit.org/show_bug.cgi?id=170346

        Unreviewed speculative buildfix.

        * UIProcess/API/Cocoa/WKWebView.mm:

2017-03-31  Brady Eidson  <beidson@apple.com>

        Remove erroneously committed changes from r214078

        Unreviewed.

        * UIProcess/Cocoa/WebProcessPoolCocoa.mm:
        (WebKit::WebProcessPool::platformInitializeNetworkProcess): Whoops!

2017-03-31  Carlos Garcia Campos  <cgarcia@igalia.com>

        Modern media controls should never be enabled in non cocoa ports
        https://bugs.webkit.org/show_bug.cgi?id=170338

        Reviewed by Michael Catanzaro.

        It's currently enabled, because it uses the default value for all other runtime features, but modern media
        controls are not a cross-platform feature. I think this is why media/video-click-dblckick-standalone.html
        started to fail in GTK+ port after r214426. I can't reprouduce the failure locally, so I can't confirm it,
        though.

        * Shared/WebPreferencesDefinitions.h:

2017-03-30  Zan Dobersek  <zdobersek@igalia.com>

        Unreviewed GTK+ build fix. List WebCore before JavaScriptCore as the
        two WebKit2 dependency libraries to avoid WTF directiories being
        listed for inclusion before WebCore directories at compile-time.

        * CMakeLists.txt:

2017-03-30  Megan Gardner  <megan_gardner@apple.com>

        Allow for extended color in snapshots
        https://bugs.webkit.org/show_bug.cgi?id=170314
        <rdar://problem/28676092> WKImageCreateCGImage should support WideGamut in WebKit2 on macOS

        Reviewed by Simon Fraser.

        Piping options through snapshots to allow for wide gamut support.

        * Shared/API/c/WKImage.h:
        * Shared/API/c/WKSharedAPICast.h:
        (WebKit::snapshotOptionsFromImageOptions):
        * Shared/ImageOptions.h:
        (WebKit::snapshotOptionsToImageOptions):
        * Shared/WebImage.cpp:
        (WebKit::WebImage::create):

2017-03-30  Sam Weinig  <sam@webkit.org>

        Expose the WKView SPI, _prepareForMoveToWindow:withCompletionHandler as WKWebView SPI
        <rdar://problem/31350588>
        https://bugs.webkit.org/show_bug.cgi?id=170315

        Reviewed by Simon Fraser.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _prepareForMoveToWindow:completionHandler:]):
        * UIProcess/API/Cocoa/WKWebViewPrivate.h:
        Copy SPI to WKWebView. Remove 'with' prefix to match conventions.

2017-03-30  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] Touches should not cancel when showing a custom action sheet while data interaction is active
        https://bugs.webkit.org/show_bug.cgi?id=170291
        <rdar://problem/31301388>

        Reviewed by Tim Horton.

        Currently, when presenting a custom popover, we will cancel all touches in the application. This makes data
        interaction when a custom popover is shown impossible -- to address this, we should only cancel touches when
        the view is not an active data interaction source.

        New API test: DataInteractionTests.CustomActionSheetPopover.

        * UIProcess/ios/WKContentViewInteraction.mm:
        (-[WKContentView actionSheetAssistant:showCustomSheetForElement:]):

2017-03-30  Youenn Fablet  <youenn@apple.com>

        NetworkConnectionToWebProcess should stop web sockets when being destroyed
        https://bugs.webkit.org/show_bug.cgi?id=170286

        Reviewed by Brady Eidson.

        * NetworkProcess/NetworkSocketStream.cpp:
        (WebKit::NetworkSocketStream::~NetworkSocketStream): Stopping the socket handle if not done already.
        * NetworkProcess/NetworkSocketStream.h:

2017-03-29  Tim Horton  <timothy_horton@apple.com>

        Remove unused PageClient::removeNavigationGestureSnapshot
        https://bugs.webkit.org/show_bug.cgi?id=170249

        Reviewed by Beth Dakin.

        * UIProcess/PageClient.h:
        * UIProcess/WebPageProxy.cpp:
        (WebKit::WebPageProxy::removeNavigationGestureSnapshot): Deleted.
        * UIProcess/WebPageProxy.h:
        * UIProcess/mac/PageClientImpl.h:
        * UIProcess/mac/PageClientImpl.mm:
        (WebKit::PageClientImpl::removeNavigationGestureSnapshot): Deleted.

2017-03-29  Antti Koivisto  <antti@apple.com>

        Increment the last stable network cache version on Mac
        https://bugs.webkit.org/show_bug.cgi?id=170248
        <rdar://problem/31326040>

        Reviewed by Chris Dumez.

        Bump to the latest release.

        * NetworkProcess/cache/NetworkCacheStorage.h:

2017-03-28  Timothy Horton  <timothy_horton@apple.com>

        Stop overriding scroll view inset defaults
        https://bugs.webkit.org/show_bug.cgi?id=170221
        <rdar://problem/31260325>

        Reviewed by Simon Fraser.

        * Platform/spi/ios/UIKitSPI.h:
        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _initializeWithConfiguration:]):
        The default behavior is sufficient for us.

2017-03-28  Timothy Horton  <timothy_horton@apple.com>

        Safari crashes when attempting to close tab that is displaying PDF
        https://bugs.webkit.org/show_bug.cgi?id=170201
        <rdar://problem/31242019>

        Reviewed by Wenson Hsieh.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _doAfterNextStablePresentationUpdate:]):
        Adopt BlockPtr to fix a leak.

        (-[WKWebView _firePresentationUpdateForPendingStableStatePresentationCallbacks]):
        dispatch_async in the doAfterNextPresentationUpdate callback; since this
        recursively calls itself, in cases where doAfterNextPresentationUpdate
        returns synchronously (e.g. if the Web Process is missing), we would
        recurse infinitely.

2017-03-27  Youenn Fablet  <youenn@apple.com>

        Remove WebPage::m_shouldDoICECandidateFiltering
        https://bugs.webkit.org/show_bug.cgi?id=170150

        Reviewed by Sam Weinig.

        It is redundant with RTCController::m_shouldFilterICECandidates.
        Manually tested on webrtc test samples.
        This code path is currently untested by rwt as we hook it to getUserMedia which is mocked in rwt.
        Additional testing will be added as a follow-up patch.

        * WebProcess/WebPage/WebPage.cpp:
        (WebKit::WebPage::disableICECandidateFiltering):
        (WebKit::WebPage::enableICECandidateFiltering):
        * WebProcess/WebPage/WebPage.h:

2017-03-27  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] UIKit assertion when rotating device after dismissing popover
        https://bugs.webkit.org/show_bug.cgi?id=170159
        <rdar://problem/31283829>

        Reviewed by Tim Horton.

        Ensure that when we are finished presenting a WKActionSheet, we unregister with the shared notifications center.

        * UIProcess/ios/WKActionSheet.mm:
        (-[WKActionSheet dealloc]):
        (-[WKActionSheet _cleanup]):
        (-[WKActionSheet doneWithSheet:]):

2017-03-27  Andy Estes  <aestes@apple.com>

        [iOS] Suppress page count recalc when setting a snapshot paper rect
        https://bugs.webkit.org/show_bug.cgi?id=170156
        <rdar://problem/30787872>

        Reviewed by Tim Horton.

        When _WKWebViewPrintFormatter computes a page count for snapshotting, it updates the paper
        rect, which triggers UIKit to ask for the page count again while we're in the middle of
        printing, putting us in a bad state.

        Suppress page count recalc while setting the new paper rect, since we know this will not
        cause it to change.

        * UIProcess/_WKWebViewPrintFormatter.mm:
        (-[_WKWebViewPrintFormatter _setSnapshotPaperRect:]): Temporarily set
        _suppressPageCountRecalc to YES before updating the paper rect.
        (-[_WKWebViewPrintFormatter _setNeedsRecalc]): Only call [super _setNeedsRecalc] if
        _suppressPageCountRecalc is NO.
        * UIProcess/_WKWebViewPrintFormatterInternal.h: Declared -_setNeedsRecalc.

2017-03-26  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] Callout Bar should be dismissed during data interaction
        https://bugs.webkit.org/show_bug.cgi?id=170109
        <rdar://problem/31171570>

        Reviewed by Tim Horton.

        Minor tweak to get the callout bar to duck during data interaction. Import a new UIKit SPI header in WebKit2.

        * Platform/spi/ios/UIKitSPI.h:

2017-03-27  Keith Rollin  <krollin@apple.com>

        Update NetworkResourceLoader logging statement
        https://bugs.webkit.org/show_bug.cgi?id=170126

        Reviewed by Alex Christensen.

        NetworkResourceLoader contains a logging statement that prints, in
        part: "start: Retrieving resource from cache". This is misleading,
        since it's not necessarily the case that the resource will be loaded
        from the cache. What is actually happening at the point where that is
        logged is that the cache is being checked for the resource. It still
        remains to be seen if the resource will be found in it. To address
        this, change the logging to say "start: Checking cache for resource".

        * NetworkProcess/NetworkResourceLoader.cpp:
        (WebKit::NetworkResourceLoader::start):

2017-03-27  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Saving files should not suggest the top level directory
        https://bugs.webkit.org/show_bug.cgi?id=170085
        <rdar://problem/30197794>

        Reviewed by Matt Baker.

        * UIProcess/mac/RemoteWebInspectorProxyMac.mm:
        (WebKit::RemoteWebInspectorProxy::platformSave):
        * UIProcess/mac/WebInspectorProxyMac.mm:
        (WebKit::WebInspectorProxy::platformSave):
        Don't set panel.directoryURL unless we have a good suggestion.

2017-03-27  Yongjun Zhang  <yongjun_zhang@apple.com>

        Add delegate method to let an WebKit client provide a custom image preview controller.
        https://bugs.webkit.org/show_bug.cgi?id=170076
        rdar://problem/31153051

        Add a new delegate method (_webView:previewViewControllerForImage:alternateURL:defaultActions:elementInfo:) to
        WKUIDelegatePrivate, an client can use this method to provide a custom image preview view controller if the image
        has alternated URL or custom image info.

        Reviewed by Beth Dakin.

        * UIProcess/API/Cocoa/WKUIDelegatePrivate.h: Add delegate method _webView:previewViewControllerForImage:alternateURL:defaultActions:elementInfo:.
        * UIProcess/ios/WKContentViewInteraction.mm:
        (-[WKContentView _presentedViewControllerForPreviewItemController:]): If the image has alternated URL or custom info, try to use the client-provided
            preview view controller. Otherwise, use the default WKImagePreviewViewController.

2017-03-27  Anders Carlsson  <andersca@apple.com>

        Fix uses of deprecated API
        https://bugs.webkit.org/show_bug.cgi?id=170138
        rdar://problem/28882449

        Reviewed by Tim Horton.

        * UIProcess/ApplePay/cocoa/WebPaymentCoordinatorProxyCocoa.mm:
        (WebKit::toPKContactFields):
        (WebKit::toPKAddressField):
        (WebKit::toPKPaymentRequest):
        Don't use deprecated APIs.

        (WebKit::toNSError):
        Don't try to insert nil in a dictionary.

2017-03-27  Alex Christensen  <achristensen@webkit.org>

        Make WebSockets work in network process
        https://bugs.webkit.org/show_bug.cgi?id=169930

        Reviewed by Youenn Fablet.

        This adds WebSocketStream, which is a SocketStreamHandle that sends asynchronous 
        messages to a NetworkSocketStream in the NetworkProcess.  WebKit1 uses a SocketStreamHandleImpl
        still, but WebKit2 now has a SocketStreamHandleImpl in the NetworkProcess owned by the 
        NetworkSocketStream, which is a SocketStreamHandleClient that sends asynchronous messages back
        to the WebProcess.  WebSocketStream's implementation of SocketStreamHandle::platformSend is special
        because it stores the completion handler in a map and asynchronously reports to the caller whether
        it succeeded or not.  If the network processes crashes before the completion handlers are called,
        then they are called indicating failure and an error is reported, but that never happens, right?

        * CMakeLists.txt:
        * DerivedSources.make:
        * NetworkProcess/NetworkConnectionToWebProcess.cpp:
        (WebKit::NetworkConnectionToWebProcess::didReceiveMessage):
        (WebKit::NetworkConnectionToWebProcess::createSocketStream):
        (WebKit::NetworkConnectionToWebProcess::destroySocketStream):
        * NetworkProcess/NetworkConnectionToWebProcess.h:
        * NetworkProcess/NetworkConnectionToWebProcess.messages.in:
        * NetworkProcess/NetworkProcess.cpp:
        (WebKit::NetworkProcess::setAllowsAnySSLCertificateForWebSocket):
        * NetworkProcess/NetworkProcess.h:
        * NetworkProcess/NetworkProcess.messages.in:
        * NetworkProcess/NetworkSocketStream.cpp: Added.
        (WebKit::NetworkSocketStream::create):
        (WebKit::NetworkSocketStream::NetworkSocketStream):
        (WebKit::NetworkSocketStream::sendData):
        (WebKit::NetworkSocketStream::close):
        (WebKit::NetworkSocketStream::didOpenSocketStream):
        (WebKit::NetworkSocketStream::didCloseSocketStream):
        (WebKit::NetworkSocketStream::didReceiveSocketStreamData):
        (WebKit::NetworkSocketStream::didFailToReceiveSocketStreamData):
        (WebKit::NetworkSocketStream::didUpdateBufferedAmount):
        (WebKit::NetworkSocketStream::didFailSocketStream):
        (WebKit::NetworkSocketStream::messageSenderConnection):
        (WebKit::NetworkSocketStream::messageSenderDestinationID):
        * NetworkProcess/NetworkSocketStream.h: Added.
        * NetworkProcess/NetworkSocketStream.messages.in: Added.
        * UIProcess/API/C/WKContext.cpp:
        (WKContextSetAllowsAnySSLCertificateForWebSocketTesting):
        (WKContextTerminateNetworkProcess):
        * UIProcess/API/C/WKContextPrivate.h:
        * UIProcess/WebProcessPool.cpp:
        (WebKit::WebProcessPool::sendSyncToNetworkingProcess):
        (WebKit::WebProcessPool::setAllowsAnySSLCertificateForWebSocket):
        (WebKit::WebProcessPool::terminateNetworkProcess):
        * UIProcess/WebProcessPool.h:
        * WebKit2.xcodeproj/project.pbxproj:
        * WebProcess/Network/NetworkProcessConnection.cpp:
        (WebKit::NetworkProcessConnection::didReceiveMessage):
        * WebProcess/Network/WebSocketProvider.cpp:
        (WebKit::WebSocketProvider::createSocketStreamHandle):
        * WebProcess/Network/WebSocketStream.cpp: Added.
        (WebKit::globalWebSocketStreamMap):
        (WebKit::WebSocketStream::streamWithIdentifier):
        (WebKit::WebSocketStream::networkProcessCrashed):
        (WebKit::WebSocketStream::create):
        (WebKit::WebSocketStream::WebSocketStream):
        (WebKit::WebSocketStream::~WebSocketStream):
        (WebKit::WebSocketStream::messageSenderConnection):
        (WebKit::WebSocketStream::messageSenderDestinationID):
        (WebKit::WebSocketStream::platformSend):
        (WebKit::WebSocketStream::didSendData):
        (WebKit::WebSocketStream::platformClose):
        (WebKit::WebSocketStream::bufferedAmount):
        (WebKit::WebSocketStream::didOpenSocketStream):
        (WebKit::WebSocketStream::didCloseSocketStream):
        (WebKit::WebSocketStream::didReceiveSocketStreamData):
        (WebKit::WebSocketStream::didFailToReceiveSocketStreamData):
        (WebKit::WebSocketStream::didUpdateBufferedAmount):
        (WebKit::WebSocketStream::didFailSocketStream):
        * WebProcess/Network/WebSocketStream.h: Added.
        * WebProcess/Network/WebSocketStream.messages.in: Added.
        * WebProcess/WebProcess.cpp:
        (WebKit::WebProcess::networkProcessConnectionClosed):

2017-03-27  Adrian Perez de Castro  <aperez@igalia.com>

        [GTK] NetscapePluginX11::m_windowID is unused/unneeded
        https://bugs.webkit.org/show_bug.cgi?id=170115

        Reviewed by Michael Catanzaro.

        * WebProcess/Plugins/Netscape/x11/NetscapePluginX11.cpp:
        (WebKit::NetscapePluginX11::NetscapePluginX11):
        Remove the unneeded NetscapePluginX11::m_windowID member.
        * WebProcess/Plugins/Netscape/x11/NetscapePluginX11.h:
        Remove the unneeded NetscapePluginX11::m_windowID member.

2017-03-25  Andy Estes  <aestes@apple.com>

        [iOS] Use snapshotting instead of printing to draw single-page PDFs
        https://bugs.webkit.org/show_bug.cgi?id=170103
        <rdar://problem/30542960>

        Reviewed by Tim Horton.

        * WebProcess/WebPage/WebPage.cpp:
        (WebKit::paintSnapshotAtSize): Moved the painting logic from WebPage::snapshotAtSize() to here.
        (WebKit::WebPage::snapshotAtSize): Changed to call paintSnapshotAtSize() with the
        WebImage's graphics context.
        (WebKit::WebPage::pdfSnapshotAtSize): Created a CGPDFGraphicsContext, passed it to
        paintSnapshotAtSize(), and returned the context's data.
        * WebProcess/WebPage/WebPage.h: Made snapshotAtSize() and snapshotNode() private, changed
        their return values from PassRefPtr to RefPtr, and declared pdfSnapshotAtSize().
        * WebProcess/WebPage/ios/WebPageIOS.mm:
        (WebKit::WebPage::computePagesForPrintingAndDrawToPDF): If snapshotting the first page,
        returned a page count of 1 and created a PDF using pdfSnapshotAtSize().

2017-03-25  John Wilander  <wilander@apple.com>

        Re-enable the web process' keychain access to fix client certificate authentication
        https://bugs.webkit.org/show_bug.cgi?id=170074
        <rdar://problem/31095987>

        Reviewed by Brent Fulgham.

        This is a follow-up patch to
        https://trac.webkit.org/changeset/214389/webkit
        since according to Alexey Proskuryakov, resource
        loading has always required identical sandbox
        rules in WebContent and Networking processes.

        * WebProcess/com.apple.WebProcess.sb.in:
            Reverted remaining change from
            https://trac.webkit.org/changeset/208702/webkit and
            https://trac.webkit.org/changeset/208707/webkit.

2017-03-24  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] Add a UI delegate SPI hook to enable or disable navigation on drop
        https://bugs.webkit.org/show_bug.cgi?id=169168
        <rdar://problem/30688374>

        Reviewed by Tim Horton.

        Support customizing the set of allowed actions on drop in WebKit2 by introducing a new method to WKUIDelegatePrivate
        that returns a WKDragDestinationAction given platform dragging info. These flags are then used to initialize the
        DragData sent over to the web process, where they update DragController's view of the allowed destination actions.

        Moving forward, the default action mask for WKWebViews will include everything except WKDragDestinationActionLoad,
        though for applciations linked on or before 10.12, we will still default to WKDragDestinationActionAny to mitigate
        any compatibility risk.

        * Shared/API/Cocoa/WKDragDestinationAction.h:

        Introduce WK2 client-facing versions of WebCore::DragDestinationAction flags.

        * Shared/WebCoreArgumentCoders.cpp:
        (IPC::ArgumentCoder<DragData>::encode):
        (IPC::ArgumentCoder<DragData>::decode):

        Serialize DragData's destination actions when sending DragData over IPC.

        * UIProcess/API/Cocoa/WKUIDelegatePrivate.h:
        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _web_dragDestinationActionForDraggingInfo:]):

        For WKWebView, allow all drag destination actions except for loading (i.e. drop-to-navigate).

        * UIProcess/API/mac/WKView.mm:
        (-[WKView _web_dragDestinationActionForDraggingInfo:]):

        For WKView, allow all types of drag destination actions.

        * UIProcess/Cocoa/VersionChecks.h:
        * UIProcess/Cocoa/WebViewImpl.h:
        * UIProcess/Cocoa/WebViewImpl.mm:
        (WebKit::WebViewImpl::draggingEntered):
        (WebKit::WebViewImpl::draggingUpdated):
        * WebKit2.xcodeproj/project.pbxproj:
        * WebProcess/WebCoreSupport/WebDragClient.cpp:
        (WebKit::WebDragClient::actionMaskForDrag):
        * WebProcess/WebCoreSupport/WebDragClient.h:

2017-03-24  Simon Fraser  <simon.fraser@apple.com>

        [iOS WK2] Move from a pre-commit handler to dispatch_async for visible content rect updates
        https://bugs.webkit.org/show_bug.cgi?id=170091
        rdar://problem/30682584

        Reviewed by Tim Horton.
        
        [CATransaction addCommitHandler:forPhase:] is sometimes not called when running inside another
        commit callback (rdar://problem/31253952), and we don't yet have a reliable way to detect this.

        So dispatch_async() to postpone the call to [CATransaction addCommitHandler:forPhase:] to a known-
        good time.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _scheduleVisibleContentRectUpdateAfterScrollInView:]):

2017-03-24  John Wilander  <wilander@apple.com>

        Re-enable the network process' keychain access to fix client certificate authentication
        https://bugs.webkit.org/show_bug.cgi?id=170074
        <rdar://problem/31095987>

        Reviewed by Brent Fulgham.

        * NetworkProcess/mac/com.apple.WebKit.NetworkProcess.sb.in:
            Reverted remaining change from
            https://trac.webkit.org/changeset/208702/webkit and
            https://trac.webkit.org/changeset/208707/webkit.

2017-03-24  Eric Carlson  <eric.carlson@apple.com>

        [MediaStream] "ideal" constraints passed to getUserMedia should affect fitness score
        https://bugs.webkit.org/show_bug.cgi?id=170056

        Reviewed by Youenn Fablet.

        * UIProcess/UserMediaPermissionRequestManagerProxy.cpp:
        (WebKit::UserMediaPermissionRequestManagerProxy::requestUserMediaPermissionForFrame): When
        short-circuiting the user prompt because the page is already authorized, return the first
        audio and/or video device because so the page gets the one with the best fitness distance.

2017-03-24  Simon Fraser  <simon.fraser@apple.com>

        Make UI-side compositing on macOS a bit more usable
        https://bugs.webkit.org/show_bug.cgi?id=170073

        Reviewed by Tim Horton.
        
        Mach port as layer contents doesn't work on macOS, so don't use it there.

        Also remove two assertions that hit with UI-side compositing in MiniBrowser.

        * UIProcess/DrawingAreaProxy.cpp:
        (WebKit::DrawingAreaProxy::createFence):
        * UIProcess/mac/PageClientImpl.mm:
        (WebKit::PageClientImpl::requestScroll):
        * UIProcess/mac/RemoteLayerTreeHost.mm:
        (WebKit::RemoteLayerTreeHost::updateLayerTree):

2017-03-24  Alex Christensen  <achristensen@webkit.org>

        Fix assertions after r214358.
        https://bugs.webkit.org/show_bug.cgi?id=169167

        * UIProcess/API/APIContentExtensionStore.cpp:
        (API::ContentExtensionStore::compileContentExtension):
        AtomicString::init must be called for the first time from the main thread.
        We were calling it for the first time from a non-main thread sometimes.
        Call it from the main thread before initiating compiling on another thread.

== Rolled over to ChangeLog-2017-03-23 ==
