2014-10-09  Tim Horton  <timothy_horton@apple.com>

        Move ServicesOverlayController to WebCore
        https://bugs.webkit.org/show_bug.cgi?id=137416
        <rdar://problem/18546283>

        Reviewed by Anders Carlsson.

        * Platform/Logging.h:
        Move Services logging channel to WebCore.

        * WebKit2.xcodeproj/project.pbxproj:
        * WebProcess/WebCoreSupport/WebChromeClient.cpp:
        (WebKit::WebChromeClient::handleTelephoneNumberClick):
        (WebKit::WebChromeClient::handleSelectionServiceClick):
        (WebKit::WebChromeClient::hasRelevantSelectionServices):
        Implement services-related ChromeClient callbacks.
        Clicks are forwarded to WebPageMac where they do what they used to;
        hasRelevantSelectionServices is implemented as it was when it lived
        inside ServicesOverlayController.

        * WebProcess/WebCoreSupport/WebChromeClient.h:
        * WebProcess/WebCoreSupport/WebEditorClient.cpp:
        (WebKit::WebEditorClient::selectedTelephoneNumberRangesChanged): Deleted.
        (WebKit::WebEditorClient::selectionRectsDidChange): Deleted.
        * WebProcess/WebCoreSupport/WebEditorClient.h:
        Remove WebEditorClient overrides for now-removed functions.

        * WebProcess/WebPage/WebPage.cpp:
        (WebKit::WebPage::WebPage):
        (WebKit::WebPage::updatePreferences):
        Forward serviceControlsEnabled setting to WebCore.

        (WebKit::WebPage::servicesOverlayController): Deleted.
        * WebProcess/WebPage/WebPage.h:
        (WebKit::WebPage::serviceControlsEnabled): Deleted.

2014-10-09  Andy Estes  <aestes@apple.com>

        [iOS] Crash in CFURLDownloadClient.didFail if the download has a null resumeData
        https://bugs.webkit.org/show_bug.cgi?id=137551

        Reviewed by David Kilzer.

        CFDataGetBytePtr() and CFDataGetLength() crash if passed a null value.

        * Shared/Downloads/ios/DownloadIOS.mm:
        (WebKit::setUpDownloadClient):

2014-10-09  Carlos Garcia Campos  <cgarcia@igalia.com>

        [X11] Plugin process crashes in NetscapePlugin::platformPostInitialize()
        https://bugs.webkit.org/show_bug.cgi?id=137426

        Reviewed by Darin Adler.

        For some reason flash crashes when NPP_GetValue is called with
        NPPVpluginCancelSrcStream, but only in windowed mode. Not calling
        NPP_GetValue and unconditionally loading the source URL in the
        browser fixes the crash and plugins work normally. We can handle
        this particular case with a new quirk.

        * Shared/Plugins/Netscape/x11/NetscapePluginModuleX11.cpp:
        (WebKit::NetscapePluginModule::determineQuirks): Add
        DoNotCancelSrcStreamInWindowedMode quirk if it's flash plugin.
        * Shared/Plugins/PluginQuirks.h: Add
        DoNotCancelSrcStreamInWindowedMode quirk.
        * WebProcess/Plugins/Netscape/NetscapePlugin.cpp:
        (WebKit::NetscapePlugin::shouldLoadSrcURL): Return early if plugin
        is windowed and DoNotCancelSrcStreamInWindowedMode quirk is present.

2014-10-09  Chris Dumez  <cdumez@apple.com>

        Use is<>() / downcast<>() for Widget subclasses
        https://bugs.webkit.org/show_bug.cgi?id=137549

        Reviewed by Darin Adler.

        Use is<>() / downcast<>() for Widget subclasses and clean up the
        surrounding code.

        * Shared/WebRenderObject.cpp:
        (WebKit::WebRenderObject::WebRenderObject):

2014-10-08  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Use the PageLoadState observer also to monitor title and estimated load progress
        https://bugs.webkit.org/show_bug.cgi?id=136997

        Reviewed by Gustavo Noronha Silva.

        * UIProcess/API/gtk/WebKitLoaderClient.cpp:
        (attachLoaderClientToView): Remove implementation of
        didReceiveTitleForFrame, didStartProgress, didChangeProgress and
        didFinishProgress.
        (didReceiveTitleForFrame): Deleted.
        (didChangeProgress): Deleted.
        * UIProcess/API/gtk/WebKitWebView.cpp:
        (webkit_web_view_get_estimated_load_progress): Return the value
        directly from the PageLoadState object, since we don't need to
        cache the value anymore.
        (webkitWebViewSetTitle): Deleted.
        (webkitWebViewSetEstimatedLoadProgress): Deleted.
        * UIProcess/API/gtk/WebKitWebViewPrivate.h:

2014-10-08  Carlos Garcia Campos  <cgarcia@igalia.com>

        Race condition with WebKitWebView:is-loading after starting page load
        https://bugs.webkit.org/show_bug.cgi?id=136692

        Reviewed by Gustavo Noronha Silva.

        Use PageLoadState::Observer to update both is-loading and uri
        properties, instead of manually update them. This ensures that our
        web view is always in sync with the WebPageProxy so that
        webkit_web_view_is_loading() returns true right after requesting
        any load. We still need to manually set the is-loading property
        only in the case where we delay the emission of the load-changed
        signals when waiting for the main resource. The bahaviour is a bit
        different but still consistent with what our API documentation says.

        * UIProcess/API/gtk/WebKitLoaderClient.cpp:
        (attachLoaderClientToView): Remove
        didSameDocumentNavigationForFrame implementation, since we are
        already notified about the URL change by the PageLoadState::Observer.
        (didSameDocumentNavigationForFrame): Deleted.
        * UIProcess/API/gtk/WebKitWebView.cpp:
        (webkitWebViewSetIsLoading): No longer update the URI when
        changing the is-loading property.
        (webkitWebViewConstructed): Crate a PageLoadStateObserver and add
        it to the PageLoadState.
        (webkitWebViewDispose): Remove the PageLoadStateObserver from the PageLoadState.
        (webkitWebViewEmitLoadChanged): Add isDelayedEvent parameter to
        update the is-loading property accordingly when emitting the
        delayed events.
        (webkitWebViewEmitDelayedLoadEvents): Pass true as isDelayedEvent
        parameter of webkitWebViewEmitLoadChanged().
        (webkitWebViewLoadChanged): Pass false as isDelayedEvent parameter
        of webkitWebViewEmitLoadChanged().
        (webkitWebViewLoadFailed):
        (webkitWebViewLoadFailedWithTLSErrors):
        (webkitWebViewUpdateURI): Deleted.
        * UIProcess/API/gtk/WebKitWebViewPrivate.h:

2014-10-08  Christophe Dumez  <cdumez@apple.com>

        Use is<>() / downcast<>() for RenderBlock objects
        https://bugs.webkit.org/show_bug.cgi?id=137512

        Reviewed by Darin Adler.

        Use is<>() / downcast<>() for RenderBlock objects and clean up the 
        surrounding code.

        * WebProcess/WebPage/ios/WebPageIOS.mm:
        (WebKit::WebPage::rangeForWebSelectionAtPosition):
        (WebKit::WebPage::contractedRangeFromHandle):

2014-10-08  Ada Chan  <adachan@apple.com>

        Implement WKPageIsPlayingAudio().
        https://bugs.webkit.org/show_bug.cgi?id=137048

        Reviewed by Darin Adler.

        * UIProcess/API/C/WKPage.cpp:
        (WKPageIsPlayingAudio):

2014-10-08  Gyuyoung Kim  <gyuyoung.kim@samsung.com>

        [EFL][CoordinatedGraphics] All EFL layout tests are broken since r174231
        https://bugs.webkit.org/show_bug.cgi?id=137443

        Reviewed by Zoltan Herczeg.

        EFL layout test and MiniBrowser have broken since r174231. r174231 was to move PageOverlay implementation
        from WebKit2 to WebCore with lazy initializing of PageOverlayController. It caused all EFL layout tests
        crash and build break. To restore EFL layout test, this patch sets viewOverlayRootLayer through
        attachViewOverlayGraphicsLayer() as mac port's one in r174231.

        * WebProcess/WebPage/CoordinatedGraphics/CoordinatedDrawingArea.cpp:
        (WebKit::CoordinatedDrawingArea::attachViewOverlayGraphicsLayer):
        * WebProcess/WebPage/CoordinatedGraphics/CoordinatedDrawingArea.h:
        * WebProcess/WebPage/CoordinatedGraphics/CoordinatedLayerTreeHost.cpp:
        (WebKit::CoordinatedLayerTreeHost::CoordinatedLayerTreeHost):
        (WebKit::CoordinatedLayerTreeHost::updateRootLayers):
        (WebKit::CoordinatedLayerTreeHost::setViewOverlayRootLayer):
        (WebKit::CoordinatedLayerTreeHost::setRootCompositingLayer):
        (WebKit::CoordinatedLayerTreeHost::didFlushRootLayer):
        * WebProcess/WebPage/CoordinatedGraphics/CoordinatedLayerTreeHost.h:

2014-10-08  Commit Queue  <commit-queue@webkit.org>

        Unreviewed, rolling out r174335.
        https://bugs.webkit.org/show_bug.cgi?id=137515

        It broke EFL layout test totally (Requested by gyuyoung on
        #webkit).

        Reverted changeset:

        "[EFL] Introduce EWebKit_Extension"
        https://bugs.webkit.org/show_bug.cgi?id=134921
        http://trac.webkit.org/changeset/174335

2014-10-08  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Make forwarding headers generation depend on source code
        https://bugs.webkit.org/show_bug.cgi?id=137394

        Reviewed by Philippe Normand.

        Only run generate-forwarding-headers.pl when source code changes
        and use a different target for the symlinks.

        * PlatformGTK.cmake:

2014-10-07  Pascal Jacquemart  <p.jacquemart@samsung.com>

        [EFL] Enable custom URI schemes with CustomProtocols
        https://bugs.webkit.org/show_bug.cgi?id=128177

        Reviewed by Gyuyoung Kim.

        Fixing ewk_context_url_scheme_register() ewebkit2 API
        rely on r162449 - CustomProtocols implementation from Carlos Garcia Campos

        * PlatformEfl.cmake:
        * UIProcess/API/efl/ewk_context.h:
        * UIProcess/API/efl/ewk_url_scheme_request.cpp:
        (EwkUrlSchemeRequest::EwkUrlSchemeRequest):
        (EwkUrlSchemeRequest::finish):
        * UIProcess/API/efl/ewk_url_scheme_request_private.h:
        (EwkUrlSchemeRequest::create):
        * UIProcess/API/efl/tests/test_ewk2_context.cpp:
        (TEST_F):
        * UIProcess/Network/CustomProtocols/soup/WebSoupCustomProtocolRequestManager.cpp:
        * UIProcess/efl/RequestManagerClientEfl.cpp:
        (WebKit::RequestManagerClientEfl::RequestManagerClientEfl):
        (WebKit::RequestManagerClientEfl::startLoading):
        (WebKit::RequestManagerClientEfl::stopLoading):
        (WebKit::RequestManagerClientEfl::registerURLSchemeHandler):
        (WebKit::EwkUrlSchemeHandler::EwkUrlSchemeHandler): Deleted.
        (WebKit::RequestManagerClientEfl::didReceiveURIRequest): Deleted.
        * UIProcess/efl/RequestManagerClientEfl.h:
        * UIProcess/efl/WebContextEfl.cpp:
        (WebKit::WebContext::platformInitializeWebProcess):
        * UIProcess/soup/WebContextSoup.cpp:
        (WebKit::WebContext::platformInitializeNetworkProcess):

2014-10-07  Sungmann Cho  <sungmann.cho@navercorp.com>

        Remove WKPageCreateSnapshotOfVisibleContent API.
        https://bugs.webkit.org/show_bug.cgi?id=66979

        Reviewed by Darin Adler.

        After the landing of the first patch of webkit.org/b/66979,
        WKPageCreateSnapshotOfVisibleContent API has been neglected for years.
        Currently, this is not used anywhere and does not break the nightlies.
        So we can remove this.

        * UIProcess/API/C/WKPage.cpp:
        (WKPageCreateSnapshotOfVisibleContent): Deleted.
        * UIProcess/API/C/WKPagePrivate.h:

2014-10-07  Sungmann Cho  <sungmann.cho@navercorp.com>

        Remove WKPageSetInvalidMessageFunction.
        https://bugs.webkit.org/show_bug.cgi?id=137509

        Reviewed by Benjamin Poulain.

        According to the FIXME comment in WKPageSetInvalidMessageFunction,
        we can remove this function when doing so won't break the nightlies.
        Currently, this is not used anywhere and does not break the nightlies.
        So we can remove this.

        * UIProcess/API/C/WKPage.cpp:
        (WKPageSetInvalidMessageFunction): Deleted.
        * UIProcess/API/C/WKPagePrivate.h:

2014-10-07  Christophe Dumez  <cdumez@apple.com>

        [WK2] Use is<>() / downcast<>() for DrawingArea subclasses
        https://bugs.webkit.org/show_bug.cgi?id=137497

        Reviewed by Benjamin Poulain.

        Use is<>() / downcast<>() for DrawingArea subclasses.

        * WebProcess/WebPage/DrawingArea.h:
        * WebProcess/WebPage/WebPage.cpp:
        (WebKit::WebPage::didCommitLoad):
        * WebProcess/WebPage/ios/WebPageIOS.mm:
        (WebKit::WebPage::synchronizeDynamicViewportUpdate):
        * WebProcess/WebPage/mac/RemoteLayerTreeDrawingArea.h:
        * WebProcess/WebPage/mac/TiledCoreAnimationDrawingArea.h:

2014-10-07  Simon Fraser  <simon.fraser@apple.com>

        Roll-over Changelogs.

        * ChangeLog-2014-10-07: Copied from Source/WebKit2/ChangeLog.

== Rolled over to ChangeLog-2014-10-07 ==
