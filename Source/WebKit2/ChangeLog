2014-02-24  Anders Carlsson  <andersca@apple.com>

        WKProcessPool should use secondary processes + network process
        https://bugs.webkit.org/show_bug.cgi?id=129282

        Reviewed by Simon Fraser.

        * UIProcess/API/Cocoa/WKProcessPool.mm:
        (-[WKProcessPool initWithConfiguration:]):

2014-02-24  Jeremy Jones  <jeremyj@apple.com>

        WK2 AVKit fullscreen doesn't display video.
        https://bugs.webkit.org/show_bug.cgi?id=128564

        Reviewed by Simon Fraser.

        * Shared/mac/RemoteLayerTreeTransaction.h:
        Add a property to track video layer pending fullscreen.

        (WebKit::RemoteLayerTreeTransaction::isVideoLayerIDPendingFullscreen):
        (WebKit::RemoteLayerTreeTransaction::addVideoLayerIDPendingFullscreen):
        Add a property to track video layer pending fullscreen.

        * Shared/mac/RemoteLayerTreeTransaction.mm:
        (WebKit::RemoteLayerTreeTransaction::encode):
        (WebKit::RemoteLayerTreeTransaction::decode):
        Encode and decode m_videoLayerIDsPendingFullscreen.

        * UIProcess/ios/WebPageProxyIOS.mm:
        (WebKit::WebPageProxy::didCommitLayerTree):
        Let WebVideoFullscreenManagerProxy see the RemoteLayerTreeTransaction.

        * UIProcess/ios/WebVideoFullscreenManagerProxy.cpp:
        (WebKit::WebVideoFullscreenManagerProxy::didCommitLayerTree):
        Look for video layer pending fullscreen on the transaction to initiate
        fullscreen.

        (WebKit::WebVideoFullscreenManagerProxy::setVideoLayerID):
        Start looking for the video layer pending fullscreen in the transaction.

        (WebKit::WebVideoFullscreenManagerProxy::enterFullscreen):
        Override to prevent fullscreen from happening before the layer
        is pending fullscreen.

        * UIProcess/ios/WebVideoFullscreenManagerProxy.h:
        * UIProcess/ios/WebVideoFullscreenManagerProxy.messages.in:
        Pass a more specific videoLayerID in SetVideoLayerID,
        i.e. WebCore::GraphicsLayer::PlatformLayerID.

        * WebProcess/WebPage/WebPage.cpp:
        (WebKit::WebPage::willCommitLayerTree):
        Move webPage specific transaction building here, including,
        giving WebVideoFullscreenManager a chance to modify the transaction.

        * WebProcess/WebPage/WebPage.h:
        Add willCommitLayerTree();

        * WebProcess/WebPage/mac/PlatformCALayerRemoteCustom.mm:
        (PlatformCALayerRemoteCustom::PlatformCALayerRemoteCustom):
        (PlatformCALayerRemoteCustom::~PlatformCALayerRemoteCustom):
        Make and break the connection from CALayer to PlatformCALayerRemoteCustom,
        the same way it is done for PlatformCALayerMac.

        * WebProcess/WebPage/mac/RemoteLayerTreeDrawingArea.mm:
        (WebKit::RemoteLayerTreeDrawingArea::flushLayers):
        Move WebPage specific transaction building into WebPage::willCommitLayerTree.

        * WebProcess/ios/WebVideoFullscreenManager.cpp:
        (WebKit::WebVideoFullscreenManager::willCommitLayerTree):
        addVideoLayerIDPendingFullscreen on RemoteLayerTreeTransaction when needed.

        (WebKit::WebVideoFullscreenManager::setVideoLayer):
        Pass along the video layerID.

        * WebProcess/ios/WebVideoFullscreenManager.h:
        Add willCommitLayerTree() and remove setVideoLayerID().
        Add a member to retain the unparented PlatformCALayer.

2014-02-24  Martin Hock  <mhock@apple.com>

        Create SessionID value-style class for session IDs.
        https://bugs.webkit.org/show_bug.cgi?id=129141

        The below changes deal solely with mechanical changes to use the SessionID value class instead of uint64_t except where noted.

        Reviewed by Brady Eidson.

        * NetworkProcess/NetworkConnectionToWebProcess.cpp:
        (WebKit::storageSession):
        (WebKit::NetworkConnectionToWebProcess::startDownload):
        (WebKit::NetworkConnectionToWebProcess::cookiesForDOM):
        (WebKit::NetworkConnectionToWebProcess::setCookiesFromDOM):
        (WebKit::NetworkConnectionToWebProcess::cookiesEnabled):
        (WebKit::NetworkConnectionToWebProcess::cookieRequestHeaderFieldValue):
        (WebKit::NetworkConnectionToWebProcess::getRawCookies):
        (WebKit::NetworkConnectionToWebProcess::deleteCookie):
        * NetworkProcess/NetworkConnectionToWebProcess.h:
        * NetworkProcess/NetworkConnectionToWebProcess.messages.in:
        * NetworkProcess/NetworkProcess.cpp:
        (WebKit::NetworkProcess::initializeNetworkProcess):
        (WebKit::NetworkProcess::ensurePrivateBrowsingSession):
        (WebKit::NetworkProcess::destroyPrivateBrowsingSession):
        * NetworkProcess/NetworkProcess.h:
        * NetworkProcess/NetworkProcess.messages.in:
        * NetworkProcess/NetworkResourceLoader.h:
        * NetworkProcess/RemoteNetworkingContext.h:
        * NetworkProcess/mac/RemoteNetworkingContext.mm:
        (WebKit::RemoteNetworkingContext::ensurePrivateBrowsingSession):
        * NetworkProcess/soup/RemoteNetworkingContextSoup.cpp:
        (WebKit::RemoteNetworkingContext::ensurePrivateBrowsingSession):
        * Shared/Network/NetworkResourceLoadParameters.cpp:
        (WebKit::NetworkResourceLoadParameters::NetworkResourceLoadParameters):
        * Shared/Network/NetworkResourceLoadParameters.h:
        * Shared/SessionTracker.cpp:
        (WebKit::staticSessionMap):
        (WebKit::storageSessionToID):
        (WebKit::SessionTracker::sessionMap):
        (WebKit::SessionTracker::session):
        (WebKit::SessionTracker::sessionID):
        (WebKit::SessionTracker::setSession):
        (WebKit::SessionTracker::destroySession):
        * Shared/SessionTracker.h: Move code to SessionID class.
        * Shared/WebCoreArgumentCoders.cpp: Add encode and decode for SessionID.
        (IPC::ArgumentCoder<SessionID>::encode):
        (IPC::ArgumentCoder<SessionID>::decode):
        * Shared/WebCoreArgumentCoders.h:
        * Shared/mac/CookieStorageShim.mm:
        (WebKit::webKitCookieStorageCopyRequestHeaderFieldsForURL):
        * UIProcess/APISession.cpp:
        (API::generateID):
        (API::Session::defaultSession):
        (API::Session::legacyPrivateSession):
        (API::Session::Session):
        (API::Session::isEphemeral):
        (API::Session::getID):
        * UIProcess/APISession.h:
        * UIProcess/WebContext.cpp:
        (WebKit::WebContext::setAnyPageGroupMightHavePrivateBrowsingEnabled):
        (WebKit::WebContext::createNewWebProcess):
        * UIProcess/WebContext.h:
        * UIProcess/WebPageProxy.h:
        (WebKit::WebPageProxy::sessionID):
        * WebProcess/InjectedBundle/InjectedBundle.cpp:
        (WebKit::InjectedBundle::setPrivateBrowsingEnabled):
        * WebProcess/Network/WebResourceLoadScheduler.cpp:
        (WebKit::WebResourceLoadScheduler::scheduleLoad):
        * WebProcess/WebCoreSupport/WebPlatformStrategies.cpp:
        (WebKit::WebPlatformStrategies::loadResourceSynchronously):
        * WebProcess/WebCoreSupport/mac/WebFrameNetworkingContext.h:
        * WebProcess/WebCoreSupport/mac/WebFrameNetworkingContext.mm:
        (WebKit::WebFrameNetworkingContext::ensurePrivateBrowsingSession):
        (WebKit::WebFrameNetworkingContext::storageSession):
        * WebProcess/WebCoreSupport/soup/WebFrameNetworkingContext.cpp:
        (WebKit::WebFrameNetworkingContext::ensurePrivateBrowsingSession):
        (WebKit::WebFrameNetworkingContext::storageSession):
        * WebProcess/WebCoreSupport/soup/WebFrameNetworkingContext.h:
        * WebProcess/WebPage/WebPage.cpp: Move sessionID to Page to allow WebCore to access it.
        (WebKit::WebPage::WebPage):
        (WebKit::WebPage::sessionID):
        (WebKit::WebPage::isUsingEphemeralSession):
        (WebKit::WebPage::setSessionID):
        (WebKit::WebPage::updatePreferences):
        * WebProcess/WebPage/WebPage.h:
        * WebProcess/WebPage/WebPage.messages.in:
        * WebProcess/WebProcess.cpp:
        (WebKit::WebProcess::ensurePrivateBrowsingSession):
        (WebKit::WebProcess::destroyPrivateBrowsingSession):
        * WebProcess/WebProcess.h:
        * WebProcess/WebProcess.messages.in:

2014-02-24  Simon Fraser  <simon.fraser@apple.com>

        Remove PDFViewController.*, which is unused
        https://bugs.webkit.org/show_bug.cgi?id=129270

        Reviewed by Tim Horton.

        * UIProcess/mac/PDFViewController.h: Removed.
        * UIProcess/mac/PDFViewController.mm: Removed.

2014-02-24  Anders Carlsson  <andersca@apple.com>

        Rename WKProcessClass to WKProcessPool
        https://bugs.webkit.org/show_bug.cgi?id=129268

        Reviewed by Dan Bernstein.

        Stage this rename by adding back WKProcessClass and WKProcessClassConfiguration as subclasses of the renamed classes.

        * Shared/Cocoa/APIObject.mm:
        (API::Object::newObject):
        * UIProcess/API/Cocoa/WKProcessClass.h:
        * UIProcess/API/Cocoa/WKProcessClass.mm:
        * UIProcess/API/Cocoa/WKProcessClassConfiguration.h:
        * UIProcess/API/Cocoa/WKProcessClassConfiguration.mm:
        * UIProcess/API/Cocoa/WKProcessClassConfigurationPrivate.h:
        * UIProcess/API/Cocoa/WKProcessClassPrivate.h:
        * UIProcess/API/Cocoa/WKProcessPool.h: Copied from Source/WebKit2/UIProcess/API/Cocoa/WKProcessClass.h.
        * UIProcess/API/Cocoa/WKProcessPool.mm: Copied from Source/WebKit2/UIProcess/API/Cocoa/WKProcessClass.mm.
        (-[WKProcessPool init]):
        (-[WKProcessPool initWithConfiguration:]):
        (-[WKProcessPool dealloc]):
        (-[WKProcessPool description]):
        (-[WKProcessPool configuration]):
        (-[WKProcessPool API::]):
        (-[WKProcessPool _setAllowsSpecificHTTPSCertificate:forHost:]):
        * UIProcess/API/Cocoa/WKProcessPoolConfiguration.h: Copied from Source/WebKit2/UIProcess/API/Cocoa/WKProcessClassConfiguration.h.
        * UIProcess/API/Cocoa/WKProcessPoolConfiguration.mm: Copied from Source/WebKit2/UIProcess/API/Cocoa/WKProcessClassConfiguration.mm.
        (-[WKProcessPoolConfiguration _injectedBundleURL]):
        (-[WKProcessPoolConfiguration _setInjectedBundleURL:]):
        (-[WKProcessPoolConfiguration description]):
        (-[WKProcessPoolConfiguration copyWithZone:]):
        * UIProcess/API/Cocoa/WKProcessPoolConfigurationPrivate.h: Copied from Source/WebKit2/UIProcess/API/Cocoa/WKProcessClassConfigurationPrivate.h.
        * UIProcess/API/Cocoa/WKProcessPoolInternal.h: Renamed from Source/WebKit2/UIProcess/API/Cocoa/WKProcessClassInternal.h.
        (WebKit::wrapper):
        * UIProcess/API/Cocoa/WKProcessPoolPrivate.h: Copied from Source/WebKit2/UIProcess/API/Cocoa/WKProcessClassPrivate.h.
        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView initWithFrame:configuration:]):
        * UIProcess/API/Cocoa/WKWebViewConfiguration.h:
        * UIProcess/API/Cocoa/WKWebViewConfiguration.mm:
        (-[WKWebViewConfiguration description]):
        (-[WKWebViewConfiguration copyWithZone:]):
        (-[WKWebViewConfiguration processPool]):
        (-[WKWebViewConfiguration setProcessPool:]):
        * UIProcess/API/Cocoa/WKWebViewConfigurationToBeRemoved.mm: Copied from Source/WebKit2/UIProcess/API/Cocoa/WKProcessClassPrivate.h.
        (-[WKWebViewConfiguration setProcessClass:]):
        (-[WKWebViewConfiguration processClass]):
        * UIProcess/API/mac/WKView.mm:
        * UIProcess/ios/WKContentView.mm:
        (-[WKContentView _decidePolicyForGeolocationRequestFromOrigin:frame:request:]):
        * WebKit2.xcodeproj/project.pbxproj:

2014-02-24  Simon Fraser  <simon.fraser@apple.com>

        Move non-API files out of WebKit2/UIProcess/API/mac
        https://bugs.webkit.org/show_bug.cgi?id=129267

        Reviewed by Anders Carlsson.

        * UIProcess/mac/FindIndicatorWindow.h: Renamed from Source/WebKit2/UIProcess/API/mac/FindIndicatorWindow.h.
        * UIProcess/mac/FindIndicatorWindow.mm: Renamed from Source/WebKit2/UIProcess/API/mac/FindIndicatorWindow.mm.
        * UIProcess/mac/PDFViewController.h: Renamed from Source/WebKit2/UIProcess/API/mac/PDFViewController.h.
        * UIProcess/mac/PDFViewController.mm: Renamed from Source/WebKit2/UIProcess/API/mac/PDFViewController.mm.
        * UIProcess/mac/WKPrintingView.h: Renamed from Source/WebKit2/UIProcess/API/mac/WKPrintingView.h.
        * UIProcess/mac/WKPrintingView.mm: Renamed from Source/WebKit2/UIProcess/API/mac/WKPrintingView.mm.
        * UIProcess/mac/WKTextInputWindowController.h: Renamed from Source/WebKit2/UIProcess/API/mac/WKTextInputWindowController.h.
        * UIProcess/mac/WKTextInputWindowController.mm: Renamed from Source/WebKit2/UIProcess/API/mac/WKTextInputWindowController.mm.
        * WebKit2.xcodeproj/project.pbxproj:

2014-02-24  Simon Fraser  <simon.fraser@apple.com>

        Move non-API files in the API/ios directory out to UIProcess/ios
        https://bugs.webkit.org/show_bug.cgi?id=129264

        Reviewed by Anders Carlsson.

        * UIProcess/ios/PageClientImplIOS.h: Renamed from Source/WebKit2/UIProcess/API/ios/PageClientImplIOS.h.
        * UIProcess/ios/PageClientImplIOS.mm: Renamed from Source/WebKit2/UIProcess/API/ios/PageClientImplIOS.mm.
        * UIProcess/ios/WKActionSheet.h: Renamed from Source/WebKit2/UIProcess/API/ios/WKActionSheet.h.
        * UIProcess/ios/WKActionSheet.mm: Renamed from Source/WebKit2/UIProcess/API/ios/WKActionSheet.mm.
        * UIProcess/ios/WKContentViewInternal.h: Renamed from Source/WebKit2/UIProcess/API/ios/WKContentViewInternal.h.
        * UIProcess/ios/WKGeolocationProviderIOS.h: Renamed from Source/WebKit2/UIProcess/API/ios/WKGeolocationProviderIOS.h.
        * UIProcess/ios/WKGeolocationProviderIOS.mm: Renamed from Source/WebKit2/UIProcess/API/ios/WKGeolocationProviderIOS.mm.
        * UIProcess/ios/WKInteractionView.h: Renamed from Source/WebKit2/UIProcess/API/ios/WKInteractionView.h.
        * UIProcess/ios/WKInteractionView.mm: Renamed from Source/WebKit2/UIProcess/API/ios/WKInteractionView.mm.
        * UIProcess/ios/WKScrollView.h: Renamed from Source/WebKit2/UIProcess/API/ios/WKScrollView.h.
        * UIProcess/ios/WKScrollView.mm: Renamed from Source/WebKit2/UIProcess/API/ios/WKScrollView.mm.
        * WebKit2.xcodeproj/project.pbxproj:

2014-02-24  Simon Fraser  <simon.fraser@apple.com>

        Rename PageClientImplIOS::m_view to m_contentView
        https://bugs.webkit.org/show_bug.cgi?id=129124

        Reviewed by Benjamin Poulain.
        
        Simple rename of m_view to m_contentView in preparation for
        also holding onto the WKView.

        * UIProcess/API/ios/PageClientImplIOS.h:
        * UIProcess/API/ios/PageClientImplIOS.mm:
        (WebKit::PageClientImpl::PageClientImpl):
        (WebKit::PageClientImpl::createDrawingAreaProxy):
        (WebKit::PageClientImpl::viewSize):
        (WebKit::PageClientImpl::isViewInWindow):
        (WebKit::PageClientImpl::processDidExit):
        (WebKit::PageClientImpl::didRelaunchProcess):
        (WebKit::PageClientImpl::decidePolicyForGeolocationPermissionRequest):
        (WebKit::PageClientImpl::didCommitLoadForMainFrame):
        (WebKit::PageClientImpl::interpretKeyEvent):
        (WebKit::PageClientImpl::positionInformationDidChange):
        (WebKit::PageClientImpl::selectionDidChange):
        (WebKit::PageClientImpl::screenToRootView):
        (WebKit::PageClientImpl::rootViewToScreen):
        (WebKit::PageClientImpl::setAcceleratedCompositingRootLayer):
        (WebKit::PageClientImpl::takeViewSnapshot):
        (WebKit::PageClientImpl::didGetTapHighlightGeometries):
        (WebKit::PageClientImpl::didCommitLayerTree):
        (WebKit::PageClientImpl::startAssistingNode):
        (WebKit::PageClientImpl::stopAssistingNode):

2014-02-24  Enrique Ocaña González  <eocanha@igalia.com>

        REGRESSION(r164438): [GTK] Tests /webkit2/WebKitWebView/tls-errors-policy and /webkit2/WebKitWebContext/uri-scheme fail
        https://bugs.webkit.org/show_bug.cgi?id=129252

        Reviewed by Carlos Garcia Campos.

        * UIProcess/API/gtk/WebKitPrivate.cpp: Manage error values generated by the user application and not present in WebCore
        (toWebKitError):
        (toWebCoreError):

2014-02-24  Alexey Proskuryakov  <ap@apple.com>

        <rdar://problem/16059894> Update AppleConnect sandbox profile for XPC process names.

        Patch by Ivan Krstić, reviewed and landed by me.

        * Resources/PlugInSandboxProfiles/com.apple.ist.ds.appleconnect.webplugin.sb:

2014-02-24  Tamas Gergely  <tgergely.u-szeged@partner.samsung.com>

        Code cleanup: remove leftover ENABLE(WORKERS) macros and support.
        https://bugs.webkit.org/show_bug.cgi?id=129255

        Reviewed by Csaba Osztrogonác.

        ENABLE_WORKERS macro was removed in r159679.
        Support is now also removed from xcconfig files.

        * Configurations/FeatureDefines.xcconfig:

2014-02-24  Iago Toral Quiroga  <itoral@igalia.com>

        [GTK] Wrong active context when destroying GL objects.
        https://bugs.webkit.org/show_bug.cgi?id=129244

        Reviewed by Martin Robinson.

        * WebProcess/WebPage/gtk/LayerTreeHostGtk.cpp:
        (WebKit::LayerTreeHostGtk::invalidate): make context current before destroying GL objects.

2014-02-24  Koop Mast <kwm@FreeBSD.org>

        Remove unused error.h header.
        https://bugs.webkit.org/show_bug.cgi?id=126774

        Reviewed by Anders Carlsson.

        This header doesn't exists on FreeBSD. According to
        https://www.gnu.org/software/gnulib/manual/html_node/error_002eh.html
        the function that this header implements are not present in the file.
        So there isn't any need for this header.

        * NetworkProcess/unix/NetworkProcessMainUnix.cpp:

2014-02-24  David Kilzer  <ddkilzer@apple.com>

        Remove redundant setting in FeatureDefines.xcconfig

        * Configurations/FeatureDefines.xcconfig:

2014-02-24  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Remove unneeded method webkitWebViewBaseRequestExitFullScreen
        https://bugs.webkit.org/show_bug.cgi?id=129245

        Reviewed by Sergio Villar Senin.

        * UIProcess/API/gtk/WebKitWebViewBase.cpp:
        (webkitWebViewBaseKeyPressEvent): Call FullscreenManager::requestExitFullScreen() directly.
        * UIProcess/API/gtk/WebKitWebViewBasePrivate.h:

2014-02-23  Dan Bernstein  <mitz@apple.com>

        <rdar://problem/16144508> [iOS] Some definitions of INSTALL_PATH don’t account for INSTALL_PATH_PREFIX
        https://bugs.webkit.org/show_bug.cgi?id=129241

        Reviewed by Mark Rowe.

        * Configurations/Base.xcconfig: Define INSTALL_PATH here in terms of INSTALL_PATH_ACTUAL.
        * Configurations/BaseLegacyProcess.xcconfig: Define only INSTALL_PATH_ACTUAL.
        * Configurations/BaseTarget.xcconfig: Simplify the definition of
        NORMAL_WEBKIT2_FRAMEWORKS_DIR, now that it shouldn’t include SDKROOT for the Simulator.
        * Configurations/BaseXPCService.xcconfig: Define only INSTALL_PATH_ACTUAL.
        * Configurations/WebKit2.xcconfig: Ditto.

2014-02-23  Sam Weinig  <sam@webkit.org>

        Update FeatureDefines.xcconfig

        Rubber-stamped by Anders Carlsson.

        * Configurations/FeatureDefines.xcconfig:

2014-02-23  Sam Weinig  <sam@webkit.org>

        [WebKit2] Add C-SPI to enable/disable telephone number detection
        https://bugs.webkit.org/show_bug.cgi?id=129239

        Reviewed by Dean Jackson.

        * UIProcess/API/C/WKPreferences.cpp:
        (WKPreferencesSetTelephoneNumberParsingEnabled):
        (WKPreferencesGetTelephoneNumberParsingEnabled):
        * UIProcess/API/C/WKPreferencesPrivate.h:

2014-02-23  Gyuyoung Kim  <gyuyoung.kim@samsung.com>

        Change a url parameter type with URL in NavigatorContentUtils
        https://bugs.webkit.org/show_bug.cgi?id=129202

        Reviewed by Sam Weinig.

        It would be good if we use *URL* for url parameters instead of using String.

        Merge from blink. https://src.chromium.org/viewvc/blink?view=rev&revision=165458.

        * WebProcess/WebCoreSupport/WebNavigatorContentUtilsClient.h:
        (WebKit::WebNavigatorContentUtilsClient::isProtocolHandlerRegistered):
        (WebKit::WebNavigatorContentUtilsClient::unregisterProtocolHandler):

2014-02-23  Sam Weinig  <sam@webkit.org>

        Move telephone number detection behind its own ENABLE macro
        https://bugs.webkit.org/show_bug.cgi?id=129236

        Reviewed by Dean Jackson.

        * Configurations/FeatureDefines.xcconfig:
        Add ENABLE_TELEPHONE_NUMBER_DETECTION.

2014-02-23  Diego Pino García  <dpino@igalia.com>

        [GTK] Fix build after Web Inspector code reorganization (r164543)
        https://bugs.webkit.org/show_bug.cgi?id=129231

        Reviewed by Dean Jackson.

        * PlatformGTK.cmake:
        Modify paths to Web Inspector code.

2014-02-22  Joseph Pecoraro  <pecoraro@apple.com>

        Remove some unreachable code (-Wunreachable-code)
        https://bugs.webkit.org/show_bug.cgi?id=129220

        Reviewed by Eric Carlson.

        * WebProcess/InjectedBundle/API/c/WKBundleAPICast.h:
        (WebKit::toAPI):

2014-02-22  Dan Bernstein  <mitz@apple.com>

        [Cocoa] WKUIDelegate.h is a project header
        https://bugs.webkit.org/show_bug.cgi?id=129215

        Reviewed by Anders Carlsson.

        * WebKit2.xcodeproj/project.pbxproj: Make it a public header.

2014-02-22  Dan Bernstein  <mitz@apple.com>

        <rdar://problem/12500358> [Cocoa] Development variants of XPC services should not be installed in WebKit2.framework/XPCServices
        https://bugs.webkit.org/show_bug.cgi?id=129197

        Reviewed by Sam Weinig.

        * Configurations/BaseXPCService.xcconfig: Made INSTALL_PATH vary based on
        WK_XPC_SERVICE_VARIANT. For the Development variant, use an install path outside the
        framework. Note that engineering builds using the build action continue to have the
        Development variants copied into the framework by a script build phase.
        * Configurations/DatabaseService.Development.xcconfig: Set WK_XPC_SERVICE_VARIANT.
        * Configurations/DatabaseService.xcconfig: Ditto.
        * Configurations/NetworkService.Development.xcconfig: Ditto.
        * Configurations/NetworkService.xcconfig: Ditto.
        * Configurations/PluginService.32.xcconfig: Ditto.
        * Configurations/PluginService.64.xcconfig: Ditto.
        * Configurations/PluginService.Development.xcconfig: Ditto.
        * Configurations/WebContentService.Development.xcconfig: Ditto.
        * Configurations/WebContentService.xcconfig: Ditto.

2014-02-21  Brent Fulgham  <bfulgham@apple.com>

        Extend media support for WebVTT sources
        https://bugs.webkit.org/show_bug.cgi?id=129156

        Reviewed by Eric Carlson.

        * Configurations/FeatureDefines.xcconfig: Add new feature define for AVF_CAPTIONS

2014-02-21  Enrica Casucci  <enrica@apple.com>

        [iOS WebKit2] Keyboard appears every time a link is tapped after searching Google
        <rdar://problem/16072563>.

        Reviewed by Benjamin Poulain.

        We need to stop assisting the node if we have
        navigated to a different page.

        * UIProcess/API/ios/WKContentView.mm:
        (-[WKContentView _didCommitLoadForMainFrame]):

2014-02-21  Dan Bernstein  <mitz@apple.com>

        Made WKWebView implement all WKContentViewDelegate methods.

        Reviewed by Anders Carlsson.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView takeViewSnapshotForContentView:]): Moved from WKViewIOS.mm.
        * UIProcess/API/ios/WKContentView.h: Made all protocol methods required.
        * UIProcess/API/ios/WKViewIOS.mm:
        (-[WKView _commonInitializationWithContextRef:pageGroupRef:relatedToPage:]): Removed code
        to set self as the delegate on the content view.

2014-02-21  Sam Weinig  <sam@webkit.org>

        <rdar://problem/16073882> Please add _AbandonCoalition key to plugin XPC service Info.plist

        Reviewed by Anders Carlsson.

        * PluginProcess/EntryPoint/mac/XPCService/PluginService.32-64.Info.plist:
        * PluginProcess/EntryPoint/mac/XPCService/PluginService.Development/Info.plist:

2014-02-21  Jeffrey Pfau  <jpfau@apple.com>

        [Mac] Cache callbacks for cache partitioning may be passed null
        https://bugs.webkit.org/show_bug.cgi?id=129175

        Reviewed by Brady Eidson.

        * WebProcess/ResourceCache/cf/WebResourceCacheManagerCFNet.cpp:
        (WebKit::WebResourceCacheManager::cfURLCacheHostNamesWithCallback):

2014-02-21  Benjamin Poulain  <bpoulain@apple.com>

        [iOS][WK2] Update the visible content rects on zoom
        https://bugs.webkit.org/show_bug.cgi?id=129174

        Reviewed by Simon Fraser.

        Generalize _updateVisibleContentRects to also act during the zoom and not only at the end.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView scrollViewDidZoom:]):
        * UIProcess/API/ios/WKViewIOS.mm:
        (-[WKView scrollViewDidZoom:]):

2014-02-21  Benjamin Poulain  <benjamin@webkit.org>

        jsDocumentPrototypeFunctionGetElementById should not create an AtomicString for the function argument
        https://bugs.webkit.org/show_bug.cgi?id=128893

        Reviewed by Darin Adler.

        * WebProcess/InjectedBundle/InjectedBundle.cpp:
        (WebKit::InjectedBundle::pageNumberForElementById): Remove the explicit conversion to use the right overload.

2014-02-21  Enrica Casucci  <enrica@apple.com>

        Support WebSelections in WK2 on iOS.
        https://bugs.webkit.org/show_bug.cgi?id=127015
        <rdar://problem/15211964>

        Reviewed by Benjamin Poulain.

        This is the remaining work on block selections for iOS in WK2.
        Once a block selection has been created with a long press gesture
        on a selectable area, we can interact with it by touching the four
        handles at the top, right, bottom and left side of the selection box.
        Expanding or shrinking a block selection requires finding the next/previous
        block in the direction of the movement, depending on the handle we
        are interacting with.
        Every time a new block is selected, we compute the thresholds required
        to trigger another block change. The thresholds are sent back to the
        UIProcess that will use this information to decide when to activate
        the new selection, either bigger or smaller.
        This patch also fixes a bug in selectWithTwoTouches where the points
        were not mapped to the active frame.

        * Shared/ios/WKGestureTypes.h:
        * UIProcess/API/ios/PageClientImplIOS.h:
        * UIProcess/API/ios/PageClientImplIOS.mm:
        (WebKit::PageClientImpl::didUpdateBlockSelectionWithTouches):
        * UIProcess/API/ios/WKContentView.mm:
        (-[WKContentView _didUpdateBlockSelectionWithTouches:withFlags:growThreshold:shrinkThreshold:]):
        * UIProcess/API/ios/WKContentViewInternal.h:
        * UIProcess/API/ios/WKInteractionView.h:
        * UIProcess/API/ios/WKInteractionView.mm:
        (-[WKInteractionView hasSelectablePositionAtPoint:]):
        (-[WKInteractionView clearSelection]):
        (toWKHandlePosition):
        (-[WKInteractionView _didUpdateBlockSelectionWithTouches:WebKit::withFlags:WebKit::growThreshold:shrinkThreshold:]):
        (-[WKInteractionView changeBlockSelectionWithTouchAt:withSelectionTouch:forHandle:]):
        * UIProcess/PageClient.h:
        * UIProcess/WebPageProxy.h:
        * UIProcess/WebPageProxy.messages.in:
        * UIProcess/ios/WebPageProxyIOS.mm:
        (WebKit::WebPageProxy::updateBlockSelectionWithTouches):
        (WebKit::WebPageProxy::didUpdateBlockSelectionWithTouches):
        * WebProcess/WebPage/WebPage.cpp:
        * WebProcess/WebPage/WebPage.h:
        * WebProcess/WebPage/WebPage.messages.in:
        * WebProcess/WebPage/ios/WebPageIOS.mm:
        (WebKit::WebPage::rangeForWebSelectionAtPosition):
        (WebKit::WebPage::rangeForBlockAtPoint):
        (WebKit::WebPage::selectWithGesture):
        (WebKit::distanceBetweenRectsForPosition):
        (WebKit::rectsEssentiallyTheSame):
        (WebKit::containsRange):
        (WebKit::unionDOMRanges):
        (WebKit::computeEdgeCenter):
        (WebKit::WebPage::expandedRangeFromHandle):
        (WebKit::WebPage::contractedRangeFromHandle):
        (WebKit::WebPage::computeExpandAndShrinkThresholdsForHandle):
        (WebKit::shouldExpand):
        (WebKit::WebPage::changeBlockSelection):
        (WebKit::WebPage::updateBlockSelectionWithTouches):
        (WebKit::WebPage::clearSelection):
        (WebKit::WebPage::selectWithTwoTouches):
        (WebKit::WebPage::getPositionInformation):

2014-02-21  Anders Carlsson  <andersca@apple.com>

        Make sure to invoke the completion handler for JS alerts
        https://bugs.webkit.org/show_bug.cgi?id=129158

        Reviewed by Alexey Proskuryakov.

        * UIProcess/API/C/WKPage.cpp:
        (WKPageSetPageUIClient):

2014-02-20  Zalan Bujtas  <zalan@apple.com>

        Remove redundant deviceScaleFactor() functions and make callers use Document::deviceScaleFactor() when accessible.
        https://bugs.webkit.org/show_bug.cgi?id=129137

        Reviewed by Simon Fraser.

        No change in behavior.

        * WebProcess/WebPage/FindController.cpp:
        (WebKit::FindController::getFindIndicatorBitmapAndRect):

2014-02-20  Benjamin Poulain  <bpoulain@apple.com>

        Add a missing piece of r164469

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView scrollViewWillBeginDragging:]):
        I forgot to duplicate the change from WKViewIOS in r164469.

2014-02-20  Benjamin Poulain  <bpoulain@apple.com>

        WKInteractionView always blocks the main thread when sending touch events
        https://bugs.webkit.org/show_bug.cgi?id=129059

        Reviewed by Enrica Casucci.

        Add the asynchronous dispatching to WebKit2.

        * Shared/NativeWebTouchEvent.h:
        (WebKit::NativeWebTouchEvent::uniqueId):
        * Shared/ios/NativeWebTouchEventIOS.mm:
        (WebKit::NativeWebTouchEvent::NativeWebTouchEvent):
        * UIProcess/API/ios/PageClientImplIOS.mm:
        (WebKit::PageClientImpl::doneWithTouchEvent):
        * UIProcess/API/ios/WKContentView.h:
        * UIProcess/API/ios/WKContentView.mm:
        (-[WKContentView willStartUserTriggeredScroll]):
        (-[WKContentView willStartUserTriggeredZoom]):
        (-[WKContentView _webTouchEvent:WebKit::preventsNativeGestures:]):
        * UIProcess/API/ios/WKContentViewInternal.h:
        * UIProcess/API/ios/WKInteractionView.h:
        * UIProcess/API/ios/WKInteractionView.mm:
        (-[WKInteractionView _webTouchEventsRecognized:]):
        (-[WKInteractionView _webTouchEvent:WebKit::preventsNativeGestures:]):
        (-[WKInteractionView _willStartUserTriggeredScrollingOrZooming]):
        * UIProcess/API/ios/WKViewIOS.mm:
        (-[WKView scrollViewWillBeginDragging:]):
        * WebKit2.xcodeproj/project.pbxproj:

2014-02-20  Benjamin Poulain  <bpoulain@apple.com>

        Start fixing the view states driven by the WKScrollView
        https://bugs.webkit.org/show_bug.cgi?id=129140

        Reviewed by Tim Horton and Simon Fraser.

        WKScrollView creates a "window" over WKContentView with an area that is exposed,
        an area that is unobcured and with a certain scale.

        Instead of having 3 loosely related paths for updating WKContentView
        when the content "window" change, everything is consolidated behind the
        single API -[WKContentView didUpdateVisibleRect:unobscuredRect:scale:].

        This patch only fixes the content updates from the UI process side to keep things simple.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _didFinishScrolling]):
        (-[WKWebView scrollViewDidEndDragging:willDecelerate:]):
        (-[WKWebView scrollViewDidEndDecelerating:]):
        (-[WKWebView scrollViewDidScrollToTop:]):
        (-[WKWebView scrollViewDidScroll:]):
        (-[WKWebView scrollViewDidEndZooming:withView:atScale:]):
        (-[WKWebView _frameOrBoundsChanged]):
        (-[WKWebView _updateContentWindow]):
        (-[WKWebView _setObscuredInsets:]):
        * UIProcess/API/ios/WKContentView.h:
        * UIProcess/API/ios/WKContentView.mm:
        (-[WKContentView didUpdateVisibleRect:unobscuredRect:scale:]):
        (-[WKContentView _updateFixedPositionRect]):
        (-[WKContentView didFinishScrolling]):
        (-[WKContentView didZoomToScale:]):
        * UIProcess/API/ios/WKViewIOS.mm:
        (-[WKView contentView:didCommitLayerTree:]):
        (-[WKView _didFinishScrolling]):
        (-[WKView scrollViewDidEndDragging:willDecelerate:]):
        (-[WKView scrollViewDidEndDecelerating:]):
        (-[WKView scrollViewDidScrollToTop:]):
        (-[WKView scrollViewDidScroll:]):
        (-[WKView scrollViewDidEndZooming:withView:atScale:]):
        Scrolling is modified to take into account the view position and the obcured content.
        Instead of driving the scrolling position from the UIScrollView delegate callbacks,
        we use changes in unobscured rect to find changes in "content visible scroll position".

        WebPageProxy::didFinishScrolling() is removed. All the scrollOffset updates now go through
        the ScrollingCoordinator.

        (-[WKView _frameOrBoundsChanged]):
        (-[WKView _updateContentWindow]):
        (-[WKView _setObscuredInsets:]):
        * UIProcess/WebPageProxy.h:
        * UIProcess/ios/WebPageProxyIOS.mm:
        (WebKit::WebPageProxy::unobscuredContentRect):
        (WebKit::WebPageProxy::setUnobscuredContentRect):
        * WebProcess/WebPage/WebPage.messages.in:
        * WebProcess/WebPage/ios/WebPageIOS.mm:

2014-02-20  Tim Horton  <timothy_horton@apple.com>

        Fix a build warning by moving some WKWebView methods from the private category to WKWebView itself.

        Reviewed by Anders Carlsson.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView setAllowsBackForwardNavigationGestures:]):
        (-[WKWebView allowsBackForwardNavigationGestures]):

2014-02-20  Enrica Casucci  <enrica@apple.com>

        ASSERT on touches callbacks after r164409 on iOS.
        https://bugs.webkit.org/show_bug.cgi?id=129135

        Reviewed by Alexey Proskuryakov.

        The change used incorrecly true and false in TouchesCallbacks and
        ImageCallback. It also reintroduced isMainThread() which doesn't work
        for iOS.

        * UIProcess/GenericCallback.h:
        (WebKit::CallbackBase::generateCallbackID):
        (WebKit::ImageCallback::performCallbackWithReturnValue):
        (WebKit::ImageCallback::invalidate):
        * UIProcess/WebPageProxy.h:
        (WebKit::TouchesCallback::performCallbackWithReturnValue):
        (WebKit::TouchesCallback::invalidate):

2014-02-20  Anders Carlsson  <andersca@apple.com>

        We need something like WKPageUIClient in the Obj-C API
        https://bugs.webkit.org/show_bug.cgi?id=129123
        <rdar://problem/15338439>

        Reviewed by Sam Weinig.

        * UIProcess/API/APIUIClient.h:
        * UIProcess/API/Cocoa/WKUIDelegate.h: Added.
        * UIProcess/API/Cocoa/WKWebView.h:
        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView initWithFrame:configuration:]):
        (-[WKWebView UIDelegate]):
        (-[WKWebView setUIDelegate:]):
        * UIProcess/Cocoa/UIClient.h: Added.
        * UIProcess/Cocoa/UIClient.mm: Added.
        (WebKit::UIClient::UIClient):
        (WebKit::UIClient::~UIClient):
        (WebKit::UIClient::delegate):
        (WebKit::UIClient::setDelegate):
        (WebKit::UIClient::runJavaScriptAlert):
        (WebKit::UIClient::runJavaScriptConfirm):
        (WebKit::UIClient::runJavaScriptPrompt):
        * UIProcess/WebPageProxy.h:
        (WebKit::WebPageProxy::uiClient):
        * WebKit2.xcodeproj/project.pbxproj:

2014-02-20  Brady Eidson  <beidson@apple.com>

        Add very basic image control rendering
        https://bugs.webkit.org/show_bug.cgi?id=129080

        Reviewed by Tim Horton.

        * WebProcess/InjectedBundle/InjectedBundle.cpp:
        (WebKit::InjectedBundle::overrideBoolPreferenceForTestRunner): Expose the 
          imageControlsEnabled setting to WKTR.

2014-02-20  Tim Horton  <timothy_horton@apple.com>

        Add magnification and swiping properties to WKWebView
        https://bugs.webkit.org/show_bug.cgi?id=129117

        Reviewed by Dan Bernstein.

        * UIProcess/API/Cocoa/WKViewPrivate.h:
        Move allowsBackForwardNavigationGestures out of a Mac-only block.

        * UIProcess/API/Cocoa/WKWebView.h:
        Add allowsBackForwardNavigationGestures to WKWebView for both platforms.
        Add magnification properties to WKWebView for Mac.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView contentView:didCommitLayerTree:WebKit::]):
        (-[WKWebView setAllowsBackForwardNavigationGestures:]):
        (-[WKWebView allowsBackForwardNavigationGestures]):
        (-[WKWebView setAllowsMagnification:]):
        (-[WKWebView allowsMagnification]):
        (-[WKWebView setMagnification:]):
        (-[WKWebView magnification]):
        (-[WKWebView setMagnification:centeredAtPoint:]):
        For iOS, copy implementations from WKViewIOS.
        For Mac, forward to the inner WKView.

        * UIProcess/API/ios/WKViewIOS.mm:
        (-[WKView setAllowsBackForwardNavigationGestures:]):
        Fix the logic to tear down the ViewGestureController.

        * UIProcess/API/mac/WKView.mm:
        (-[WKView setMagnification:centeredAtPoint:]):
        (-[WKView setMagnification:]):
        (-[WKView magnification]):
        Use CG types for API.

== Rolled over to ChangeLog-2014-02-20 ==
