2017-03-31  Brady Eidson  <beidson@apple.com>

        Clean up the "StorageType" enum.
        https://bugs.webkit.org/show_bug.cgi?id=170349

        Reviewed by Tim Horton.

        * WebProcess/Storage/StorageAreaMap.cpp:
        (WebKit::StorageAreaMap::StorageAreaMap):
        (WebKit::StorageAreaMap::dispatchStorageEvent):
        (WebKit::StorageAreaMap::dispatchSessionStorageEvent):
        (WebKit::StorageAreaMap::dispatchLocalStorageEvent):
        
        * WebProcess/Storage/StorageNamespaceImpl.cpp:
        (WebKit::StorageNamespaceImpl::createSessionStorageNamespace):
        (WebKit::StorageNamespaceImpl::createLocalStorageNamespace):
        (WebKit::StorageNamespaceImpl::createTransientLocalStorageNamespace):

2017-03-31  Tim Horton  <timothy_horton@apple.com>

        Remove bundle checks for attachmentElementEnabled
        https://bugs.webkit.org/show_bug.cgi?id=170329
        <rdar://problem/25135244>

        Reviewed by Simon Fraser.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _initializeWithConfiguration:]):
        * UIProcess/API/Cocoa/WKWebViewConfiguration.mm:
        (-[WKWebViewConfiguration init]):
        Remove bundle checks.

2017-03-29  Anders Carlsson  <andersca@apple.com>

        Adopt PKCanMakePaymentsWithMerchantIdentifierAndDomainAndSourceApplication
        https://bugs.webkit.org/show_bug.cgi?id=170257
        rdar://problem/31289764

        Reviewed by Beth Dakin.

        * UIProcess/ApplePay/cocoa/WebPaymentCoordinatorProxyCocoa.mm:
        (WebKit::WebPaymentCoordinatorProxy::platformCanMakePaymentsWithActiveCard):

2017-03-31  Csaba Osztrogon√°c  <ossy@webkit.org>

        Mac cmake buildfix after r214403
        https://bugs.webkit.org/show_bug.cgi?id=170346

        Unreviewed speculative buildfix.

        * UIProcess/API/Cocoa/WKWebView.mm:

2017-03-31  Brady Eidson  <beidson@apple.com>

        Remove erroneously committed changes from r214078

        Unreviewed.

        * UIProcess/Cocoa/WebProcessPoolCocoa.mm:
        (WebKit::WebProcessPool::platformInitializeNetworkProcess): Whoops!

2017-03-31  Carlos Garcia Campos  <cgarcia@igalia.com>

        Modern media controls should never be enabled in non cocoa ports
        https://bugs.webkit.org/show_bug.cgi?id=170338

        Reviewed by Michael Catanzaro.

        It's currently enabled, because it uses the default value for all other runtime features, but modern media
        controls are not a cross-platform feature. I think this is why media/video-click-dblckick-standalone.html
        started to fail in GTK+ port after r214426. I can't reprouduce the failure locally, so I can't confirm it,
        though.

        * Shared/WebPreferencesDefinitions.h:

2017-03-30  Zan Dobersek  <zdobersek@igalia.com>

        Unreviewed GTK+ build fix. List WebCore before JavaScriptCore as the
        two WebKit2 dependency libraries to avoid WTF directiories being
        listed for inclusion before WebCore directories at compile-time.

        * CMakeLists.txt:

2017-03-30  Megan Gardner  <megan_gardner@apple.com>

        Allow for extended color in snapshots
        https://bugs.webkit.org/show_bug.cgi?id=170314
        <rdar://problem/28676092> WKImageCreateCGImage should support WideGamut in WebKit2 on macOS

        Reviewed by Simon Fraser.

        Piping options through snapshots to allow for wide gamut support.

        * Shared/API/c/WKImage.h:
        * Shared/API/c/WKSharedAPICast.h:
        (WebKit::snapshotOptionsFromImageOptions):
        * Shared/ImageOptions.h:
        (WebKit::snapshotOptionsToImageOptions):
        * Shared/WebImage.cpp:
        (WebKit::WebImage::create):

2017-03-30  Sam Weinig  <sam@webkit.org>

        Expose the WKView SPI, _prepareForMoveToWindow:withCompletionHandler as WKWebView SPI
        <rdar://problem/31350588>
        https://bugs.webkit.org/show_bug.cgi?id=170315

        Reviewed by Simon Fraser.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _prepareForMoveToWindow:completionHandler:]):
        * UIProcess/API/Cocoa/WKWebViewPrivate.h:
        Copy SPI to WKWebView. Remove 'with' prefix to match conventions.

2017-03-30  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] Touches should not cancel when showing a custom action sheet while data interaction is active
        https://bugs.webkit.org/show_bug.cgi?id=170291
        <rdar://problem/31301388>

        Reviewed by Tim Horton.

        Currently, when presenting a custom popover, we will cancel all touches in the application. This makes data
        interaction when a custom popover is shown impossible -- to address this, we should only cancel touches when
        the view is not an active data interaction source.

        New API test: DataInteractionTests.CustomActionSheetPopover.

        * UIProcess/ios/WKContentViewInteraction.mm:
        (-[WKContentView actionSheetAssistant:showCustomSheetForElement:]):

2017-03-30  Youenn Fablet  <youenn@apple.com>

        NetworkConnectionToWebProcess should stop web sockets when being destroyed
        https://bugs.webkit.org/show_bug.cgi?id=170286

        Reviewed by Brady Eidson.

        * NetworkProcess/NetworkSocketStream.cpp:
        (WebKit::NetworkSocketStream::~NetworkSocketStream): Stopping the socket handle if not done already.
        * NetworkProcess/NetworkSocketStream.h:

2017-03-29  Tim Horton  <timothy_horton@apple.com>

        Remove unused PageClient::removeNavigationGestureSnapshot
        https://bugs.webkit.org/show_bug.cgi?id=170249

        Reviewed by Beth Dakin.

        * UIProcess/PageClient.h:
        * UIProcess/WebPageProxy.cpp:
        (WebKit::WebPageProxy::removeNavigationGestureSnapshot): Deleted.
        * UIProcess/WebPageProxy.h:
        * UIProcess/mac/PageClientImpl.h:
        * UIProcess/mac/PageClientImpl.mm:
        (WebKit::PageClientImpl::removeNavigationGestureSnapshot): Deleted.

2017-03-29  Antti Koivisto  <antti@apple.com>

        Increment the last stable network cache version on Mac
        https://bugs.webkit.org/show_bug.cgi?id=170248
        <rdar://problem/31326040>

        Reviewed by Chris Dumez.

        Bump to the latest release.

        * NetworkProcess/cache/NetworkCacheStorage.h:

2017-03-28  Timothy Horton  <timothy_horton@apple.com>

        Stop overriding scroll view inset defaults
        https://bugs.webkit.org/show_bug.cgi?id=170221
        <rdar://problem/31260325>

        Reviewed by Simon Fraser.

        * Platform/spi/ios/UIKitSPI.h:
        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _initializeWithConfiguration:]):
        The default behavior is sufficient for us.

2017-03-28  Timothy Horton  <timothy_horton@apple.com>

        Safari crashes when attempting to close tab that is displaying PDF
        https://bugs.webkit.org/show_bug.cgi?id=170201
        <rdar://problem/31242019>

        Reviewed by Wenson Hsieh.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _doAfterNextStablePresentationUpdate:]):
        Adopt BlockPtr to fix a leak.

        (-[WKWebView _firePresentationUpdateForPendingStableStatePresentationCallbacks]):
        dispatch_async in the doAfterNextPresentationUpdate callback; since this
        recursively calls itself, in cases where doAfterNextPresentationUpdate
        returns synchronously (e.g. if the Web Process is missing), we would
        recurse infinitely.

2017-03-27  Youenn Fablet  <youenn@apple.com>

        Remove WebPage::m_shouldDoICECandidateFiltering
        https://bugs.webkit.org/show_bug.cgi?id=170150

        Reviewed by Sam Weinig.

        It is redundant with RTCController::m_shouldFilterICECandidates.
        Manually tested on webrtc test samples.
        This code path is currently untested by rwt as we hook it to getUserMedia which is mocked in rwt.
        Additional testing will be added as a follow-up patch.

        * WebProcess/WebPage/WebPage.cpp:
        (WebKit::WebPage::disableICECandidateFiltering):
        (WebKit::WebPage::enableICECandidateFiltering):
        * WebProcess/WebPage/WebPage.h:

2017-03-27  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] UIKit assertion when rotating device after dismissing popover
        https://bugs.webkit.org/show_bug.cgi?id=170159
        <rdar://problem/31283829>

        Reviewed by Tim Horton.

        Ensure that when we are finished presenting a WKActionSheet, we unregister with the shared notifications center.

        * UIProcess/ios/WKActionSheet.mm:
        (-[WKActionSheet dealloc]):
        (-[WKActionSheet _cleanup]):
        (-[WKActionSheet doneWithSheet:]):

2017-03-27  Andy Estes  <aestes@apple.com>

        [iOS] Suppress page count recalc when setting a snapshot paper rect
        https://bugs.webkit.org/show_bug.cgi?id=170156
        <rdar://problem/30787872>

        Reviewed by Tim Horton.

        When _WKWebViewPrintFormatter computes a page count for snapshotting, it updates the paper
        rect, which triggers UIKit to ask for the page count again while we're in the middle of
        printing, putting us in a bad state.

        Suppress page count recalc while setting the new paper rect, since we know this will not
        cause it to change.

        * UIProcess/_WKWebViewPrintFormatter.mm:
        (-[_WKWebViewPrintFormatter _setSnapshotPaperRect:]): Temporarily set
        _suppressPageCountRecalc to YES before updating the paper rect.
        (-[_WKWebViewPrintFormatter _setNeedsRecalc]): Only call [super _setNeedsRecalc] if
        _suppressPageCountRecalc is NO.
        * UIProcess/_WKWebViewPrintFormatterInternal.h: Declared -_setNeedsRecalc.

2017-03-26  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] Callout Bar should be dismissed during data interaction
        https://bugs.webkit.org/show_bug.cgi?id=170109
        <rdar://problem/31171570>

        Reviewed by Tim Horton.

        Minor tweak to get the callout bar to duck during data interaction. Import a new UIKit SPI header in WebKit2.

        * Platform/spi/ios/UIKitSPI.h:

2017-03-27  Keith Rollin  <krollin@apple.com>

        Update NetworkResourceLoader logging statement
        https://bugs.webkit.org/show_bug.cgi?id=170126

        Reviewed by Alex Christensen.

        NetworkResourceLoader contains a logging statement that prints, in
        part: "start: Retrieving resource from cache". This is misleading,
        since it's not necessarily the case that the resource will be loaded
        from the cache. What is actually happening at the point where that is
        logged is that the cache is being checked for the resource. It still
        remains to be seen if the resource will be found in it. To address
        this, change the logging to say "start: Checking cache for resource".

        * NetworkProcess/NetworkResourceLoader.cpp:
        (WebKit::NetworkResourceLoader::start):

2017-03-27  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Saving files should not suggest the top level directory
        https://bugs.webkit.org/show_bug.cgi?id=170085
        <rdar://problem/30197794>

        Reviewed by Matt Baker.

        * UIProcess/mac/RemoteWebInspectorProxyMac.mm:
        (WebKit::RemoteWebInspectorProxy::platformSave):
        * UIProcess/mac/WebInspectorProxyMac.mm:
        (WebKit::WebInspectorProxy::platformSave):
        Don't set panel.directoryURL unless we have a good suggestion.

2017-03-27  Yongjun Zhang  <yongjun_zhang@apple.com>

        Add delegate method to let an WebKit client provide a custom image preview controller.
        https://bugs.webkit.org/show_bug.cgi?id=170076
        rdar://problem/31153051

        Add a new delegate method (_webView:previewViewControllerForImage:alternateURL:defaultActions:elementInfo:) to
        WKUIDelegatePrivate, an client can use this method to provide a custom image preview view controller if the image
        has alternated URL or custom image info.

        Reviewed by Beth Dakin.

        * UIProcess/API/Cocoa/WKUIDelegatePrivate.h: Add delegate method _webView:previewViewControllerForImage:alternateURL:defaultActions:elementInfo:.
        * UIProcess/ios/WKContentViewInteraction.mm:
        (-[WKContentView _presentedViewControllerForPreviewItemController:]): If the image has alternated URL or custom info, try to use the client-provided
            preview view controller. Otherwise, use the default WKImagePreviewViewController.

2017-03-27  Anders Carlsson  <andersca@apple.com>

        Fix uses of deprecated API
        https://bugs.webkit.org/show_bug.cgi?id=170138
        rdar://problem/28882449

        Reviewed by Tim Horton.

        * UIProcess/ApplePay/cocoa/WebPaymentCoordinatorProxyCocoa.mm:
        (WebKit::toPKContactFields):
        (WebKit::toPKAddressField):
        (WebKit::toPKPaymentRequest):
        Don't use deprecated APIs.

        (WebKit::toNSError):
        Don't try to insert nil in a dictionary.

2017-03-27  Alex Christensen  <achristensen@webkit.org>

        Make WebSockets work in network process
        https://bugs.webkit.org/show_bug.cgi?id=169930

        Reviewed by Youenn Fablet.

        This adds WebSocketStream, which is a SocketStreamHandle that sends asynchronous 
        messages to a NetworkSocketStream in the NetworkProcess.  WebKit1 uses a SocketStreamHandleImpl
        still, but WebKit2 now has a SocketStreamHandleImpl in the NetworkProcess owned by the 
        NetworkSocketStream, which is a SocketStreamHandleClient that sends asynchronous messages back
        to the WebProcess.  WebSocketStream's implementation of SocketStreamHandle::platformSend is special
        because it stores the completion handler in a map and asynchronously reports to the caller whether
        it succeeded or not.  If the network processes crashes before the completion handlers are called,
        then they are called indicating failure and an error is reported, but that never happens, right?

        * CMakeLists.txt:
        * DerivedSources.make:
        * NetworkProcess/NetworkConnectionToWebProcess.cpp:
        (WebKit::NetworkConnectionToWebProcess::didReceiveMessage):
        (WebKit::NetworkConnectionToWebProcess::createSocketStream):
        (WebKit::NetworkConnectionToWebProcess::destroySocketStream):
        * NetworkProcess/NetworkConnectionToWebProcess.h:
        * NetworkProcess/NetworkConnectionToWebProcess.messages.in:
        * NetworkProcess/NetworkProcess.cpp:
        (WebKit::NetworkProcess::setAllowsAnySSLCertificateForWebSocket):
        * NetworkProcess/NetworkProcess.h:
        * NetworkProcess/NetworkProcess.messages.in:
        * NetworkProcess/NetworkSocketStream.cpp: Added.
        (WebKit::NetworkSocketStream::create):
        (WebKit::NetworkSocketStream::NetworkSocketStream):
        (WebKit::NetworkSocketStream::sendData):
        (WebKit::NetworkSocketStream::close):
        (WebKit::NetworkSocketStream::didOpenSocketStream):
        (WebKit::NetworkSocketStream::didCloseSocketStream):
        (WebKit::NetworkSocketStream::didReceiveSocketStreamData):
        (WebKit::NetworkSocketStream::didFailToReceiveSocketStreamData):
        (WebKit::NetworkSocketStream::didUpdateBufferedAmount):
        (WebKit::NetworkSocketStream::didFailSocketStream):
        (WebKit::NetworkSocketStream::messageSenderConnection):
        (WebKit::NetworkSocketStream::messageSenderDestinationID):
        * NetworkProcess/NetworkSocketStream.h: Added.
        * NetworkProcess/NetworkSocketStream.messages.in: Added.
        * UIProcess/API/C/WKContext.cpp:
        (WKContextSetAllowsAnySSLCertificateForWebSocketTesting):
        (WKContextTerminateNetworkProcess):
        * UIProcess/API/C/WKContextPrivate.h:
        * UIProcess/WebProcessPool.cpp:
        (WebKit::WebProcessPool::sendSyncToNetworkingProcess):
        (WebKit::WebProcessPool::setAllowsAnySSLCertificateForWebSocket):
        (WebKit::WebProcessPool::terminateNetworkProcess):
        * UIProcess/WebProcessPool.h:
        * WebKit2.xcodeproj/project.pbxproj:
        * WebProcess/Network/NetworkProcessConnection.cpp:
        (WebKit::NetworkProcessConnection::didReceiveMessage):
        * WebProcess/Network/WebSocketProvider.cpp:
        (WebKit::WebSocketProvider::createSocketStreamHandle):
        * WebProcess/Network/WebSocketStream.cpp: Added.
        (WebKit::globalWebSocketStreamMap):
        (WebKit::WebSocketStream::streamWithIdentifier):
        (WebKit::WebSocketStream::networkProcessCrashed):
        (WebKit::WebSocketStream::create):
        (WebKit::WebSocketStream::WebSocketStream):
        (WebKit::WebSocketStream::~WebSocketStream):
        (WebKit::WebSocketStream::messageSenderConnection):
        (WebKit::WebSocketStream::messageSenderDestinationID):
        (WebKit::WebSocketStream::platformSend):
        (WebKit::WebSocketStream::didSendData):
        (WebKit::WebSocketStream::platformClose):
        (WebKit::WebSocketStream::bufferedAmount):
        (WebKit::WebSocketStream::didOpenSocketStream):
        (WebKit::WebSocketStream::didCloseSocketStream):
        (WebKit::WebSocketStream::didReceiveSocketStreamData):
        (WebKit::WebSocketStream::didFailToReceiveSocketStreamData):
        (WebKit::WebSocketStream::didUpdateBufferedAmount):
        (WebKit::WebSocketStream::didFailSocketStream):
        * WebProcess/Network/WebSocketStream.h: Added.
        * WebProcess/Network/WebSocketStream.messages.in: Added.
        * WebProcess/WebProcess.cpp:
        (WebKit::WebProcess::networkProcessConnectionClosed):

2017-03-27  Adrian Perez de Castro  <aperez@igalia.com>

        [GTK] NetscapePluginX11::m_windowID is unused/unneeded
        https://bugs.webkit.org/show_bug.cgi?id=170115

        Reviewed by Michael Catanzaro.

        * WebProcess/Plugins/Netscape/x11/NetscapePluginX11.cpp:
        (WebKit::NetscapePluginX11::NetscapePluginX11):
        Remove the unneeded NetscapePluginX11::m_windowID member.
        * WebProcess/Plugins/Netscape/x11/NetscapePluginX11.h:
        Remove the unneeded NetscapePluginX11::m_windowID member.

2017-03-25  Andy Estes  <aestes@apple.com>

        [iOS] Use snapshotting instead of printing to draw single-page PDFs
        https://bugs.webkit.org/show_bug.cgi?id=170103
        <rdar://problem/30542960>

        Reviewed by Tim Horton.

        * WebProcess/WebPage/WebPage.cpp:
        (WebKit::paintSnapshotAtSize): Moved the painting logic from WebPage::snapshotAtSize() to here.
        (WebKit::WebPage::snapshotAtSize): Changed to call paintSnapshotAtSize() with the
        WebImage's graphics context.
        (WebKit::WebPage::pdfSnapshotAtSize): Created a CGPDFGraphicsContext, passed it to
        paintSnapshotAtSize(), and returned the context's data.
        * WebProcess/WebPage/WebPage.h: Made snapshotAtSize() and snapshotNode() private, changed
        their return values from PassRefPtr to RefPtr, and declared pdfSnapshotAtSize().
        * WebProcess/WebPage/ios/WebPageIOS.mm:
        (WebKit::WebPage::computePagesForPrintingAndDrawToPDF): If snapshotting the first page,
        returned a page count of 1 and created a PDF using pdfSnapshotAtSize().

2017-03-25  John Wilander  <wilander@apple.com>

        Re-enable the web process' keychain access to fix client certificate authentication
        https://bugs.webkit.org/show_bug.cgi?id=170074
        <rdar://problem/31095987>

        Reviewed by Brent Fulgham.

        This is a follow-up patch to
        https://trac.webkit.org/changeset/214389/webkit
        since according to Alexey Proskuryakov, resource
        loading has always required identical sandbox
        rules in WebContent and Networking processes.

        * WebProcess/com.apple.WebProcess.sb.in:
            Reverted remaining change from
            https://trac.webkit.org/changeset/208702/webkit and
            https://trac.webkit.org/changeset/208707/webkit.

2017-03-24  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] Add a UI delegate SPI hook to enable or disable navigation on drop
        https://bugs.webkit.org/show_bug.cgi?id=169168
        <rdar://problem/30688374>

        Reviewed by Tim Horton.

        Support customizing the set of allowed actions on drop in WebKit2 by introducing a new method to WKUIDelegatePrivate
        that returns a WKDragDestinationAction given platform dragging info. These flags are then used to initialize the
        DragData sent over to the web process, where they update DragController's view of the allowed destination actions.

        Moving forward, the default action mask for WKWebViews will include everything except WKDragDestinationActionLoad,
        though for applciations linked on or before 10.12, we will still default to WKDragDestinationActionAny to mitigate
        any compatibility risk.

        * Shared/API/Cocoa/WKDragDestinationAction.h:

        Introduce WK2 client-facing versions of WebCore::DragDestinationAction flags.

        * Shared/WebCoreArgumentCoders.cpp:
        (IPC::ArgumentCoder<DragData>::encode):
        (IPC::ArgumentCoder<DragData>::decode):

        Serialize DragData's destination actions when sending DragData over IPC.

        * UIProcess/API/Cocoa/WKUIDelegatePrivate.h:
        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _web_dragDestinationActionForDraggingInfo:]):

        For WKWebView, allow all drag destination actions except for loading (i.e. drop-to-navigate).

        * UIProcess/API/mac/WKView.mm:
        (-[WKView _web_dragDestinationActionForDraggingInfo:]):

        For WKView, allow all types of drag destination actions.

        * UIProcess/Cocoa/VersionChecks.h:
        * UIProcess/Cocoa/WebViewImpl.h:
        * UIProcess/Cocoa/WebViewImpl.mm:
        (WebKit::WebViewImpl::draggingEntered):
        (WebKit::WebViewImpl::draggingUpdated):
        * WebKit2.xcodeproj/project.pbxproj:
        * WebProcess/WebCoreSupport/WebDragClient.cpp:
        (WebKit::WebDragClient::actionMaskForDrag):
        * WebProcess/WebCoreSupport/WebDragClient.h:

2017-03-24  Simon Fraser  <simon.fraser@apple.com>

        [iOS WK2] Move from a pre-commit handler to dispatch_async for visible content rect updates
        https://bugs.webkit.org/show_bug.cgi?id=170091
        rdar://problem/30682584

        Reviewed by Tim Horton.
        
        [CATransaction addCommitHandler:forPhase:] is sometimes not called when running inside another
        commit callback (rdar://problem/31253952), and we don't yet have a reliable way to detect this.

        So dispatch_async() to postpone the call to [CATransaction addCommitHandler:forPhase:] to a known-
        good time.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _scheduleVisibleContentRectUpdateAfterScrollInView:]):

2017-03-24  John Wilander  <wilander@apple.com>

        Re-enable the network process' keychain access to fix client certificate authentication
        https://bugs.webkit.org/show_bug.cgi?id=170074
        <rdar://problem/31095987>

        Reviewed by Brent Fulgham.

        * NetworkProcess/mac/com.apple.WebKit.NetworkProcess.sb.in:
            Reverted remaining change from
            https://trac.webkit.org/changeset/208702/webkit and
            https://trac.webkit.org/changeset/208707/webkit.

2017-03-24  Eric Carlson  <eric.carlson@apple.com>

        [MediaStream] "ideal" constraints passed to getUserMedia should affect fitness score
        https://bugs.webkit.org/show_bug.cgi?id=170056

        Reviewed by Youenn Fablet.

        * UIProcess/UserMediaPermissionRequestManagerProxy.cpp:
        (WebKit::UserMediaPermissionRequestManagerProxy::requestUserMediaPermissionForFrame): When
        short-circuiting the user prompt because the page is already authorized, return the first
        audio and/or video device because so the page gets the one with the best fitness distance.

2017-03-24  Simon Fraser  <simon.fraser@apple.com>

        Make UI-side compositing on macOS a bit more usable
        https://bugs.webkit.org/show_bug.cgi?id=170073

        Reviewed by Tim Horton.
        
        Mach port as layer contents doesn't work on macOS, so don't use it there.

        Also remove two assertions that hit with UI-side compositing in MiniBrowser.

        * UIProcess/DrawingAreaProxy.cpp:
        (WebKit::DrawingAreaProxy::createFence):
        * UIProcess/mac/PageClientImpl.mm:
        (WebKit::PageClientImpl::requestScroll):
        * UIProcess/mac/RemoteLayerTreeHost.mm:
        (WebKit::RemoteLayerTreeHost::updateLayerTree):

2017-03-24  Alex Christensen  <achristensen@webkit.org>

        Fix assertions after r214358.
        https://bugs.webkit.org/show_bug.cgi?id=169167

        * UIProcess/API/APIContentExtensionStore.cpp:
        (API::ContentExtensionStore::compileContentExtension):
        AtomicString::init must be called for the first time from the main thread.
        We were calling it for the first time from a non-main thread sometimes.
        Call it from the main thread before initiating compiling on another thread.

== Rolled over to ChangeLog-2017-03-23 ==
