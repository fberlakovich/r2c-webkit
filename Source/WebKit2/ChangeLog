2017-03-24  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] Add a UI delegate SPI hook to enable or disable navigation on drop
        https://bugs.webkit.org/show_bug.cgi?id=169168
        <rdar://problem/30688374>

        Reviewed by Tim Horton.

        Support customizing the set of allowed actions on drop in WebKit2 by introducing a new method to WKUIDelegatePrivate
        that returns a WKDragDestinationAction given platform dragging info. These flags are then used to initialize the
        DragData sent over to the web process, where they update DragController's view of the allowed destination actions.

        Moving forward, the default action mask for WKWebViews will include everything except WKDragDestinationActionLoad,
        though for applciations linked on or before 10.12, we will still default to WKDragDestinationActionAny to mitigate
        any compatibility risk.

        * Shared/API/Cocoa/WKDragDestinationAction.h:

        Introduce WK2 client-facing versions of WebCore::DragDestinationAction flags.

        * Shared/WebCoreArgumentCoders.cpp:
        (IPC::ArgumentCoder<DragData>::encode):
        (IPC::ArgumentCoder<DragData>::decode):

        Serialize DragData's destination actions when sending DragData over IPC.

        * UIProcess/API/Cocoa/WKUIDelegatePrivate.h:
        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _web_dragDestinationActionForDraggingInfo:]):

        For WKWebView, allow all drag destination actions except for loading (i.e. drop-to-navigate).

        * UIProcess/API/mac/WKView.mm:
        (-[WKView _web_dragDestinationActionForDraggingInfo:]):

        For WKView, allow all types of drag destination actions.

        * UIProcess/Cocoa/VersionChecks.h:
        * UIProcess/Cocoa/WebViewImpl.h:
        * UIProcess/Cocoa/WebViewImpl.mm:
        (WebKit::WebViewImpl::draggingEntered):
        (WebKit::WebViewImpl::draggingUpdated):
        * WebKit2.xcodeproj/project.pbxproj:
        * WebProcess/WebCoreSupport/WebDragClient.cpp:
        (WebKit::WebDragClient::actionMaskForDrag):
        * WebProcess/WebCoreSupport/WebDragClient.h:

2017-03-24  Simon Fraser  <simon.fraser@apple.com>

        [iOS WK2] Move from a pre-commit handler to dispatch_async for visible content rect updates
        https://bugs.webkit.org/show_bug.cgi?id=170091
        rdar://problem/30682584

        Reviewed by Tim Horton.
        
        [CATransaction addCommitHandler:forPhase:] is sometimes not called when running inside another
        commit callback (rdar://problem/31253952), and we don't yet have a reliable way to detect this.

        So dispatch_async() to postpone the call to [CATransaction addCommitHandler:forPhase:] to a known-
        good time.

        * UIProcess/API/Cocoa/WKWebView.mm:
        (-[WKWebView _scheduleVisibleContentRectUpdateAfterScrollInView:]):

2017-03-24  John Wilander  <wilander@apple.com>

        Re-enable the network process' keychain access to fix client certificate authentication
        https://bugs.webkit.org/show_bug.cgi?id=170074
        <rdar://problem/31095987>

        Reviewed by Brent Fulgham.

        * NetworkProcess/mac/com.apple.WebKit.NetworkProcess.sb.in:
            Reverted remaining change from
            https://trac.webkit.org/changeset/208702/webkit and
            https://trac.webkit.org/changeset/208707/webkit.

2017-03-24  Eric Carlson  <eric.carlson@apple.com>

        [MediaStream] "ideal" constraints passed to getUserMedia should affect fitness score
        https://bugs.webkit.org/show_bug.cgi?id=170056

        Reviewed by Youenn Fablet.

        * UIProcess/UserMediaPermissionRequestManagerProxy.cpp:
        (WebKit::UserMediaPermissionRequestManagerProxy::requestUserMediaPermissionForFrame): When
        short-circuiting the user prompt because the page is already authorized, return the first
        audio and/or video device because so the page gets the one with the best fitness distance.

2017-03-24  Simon Fraser  <simon.fraser@apple.com>

        Make UI-side compositing on macOS a bit more usable
        https://bugs.webkit.org/show_bug.cgi?id=170073

        Reviewed by Tim Horton.
        
        Mach port as layer contents doesn't work on macOS, so don't use it there.

        Also remove two assertions that hit with UI-side compositing in MiniBrowser.

        * UIProcess/DrawingAreaProxy.cpp:
        (WebKit::DrawingAreaProxy::createFence):
        * UIProcess/mac/PageClientImpl.mm:
        (WebKit::PageClientImpl::requestScroll):
        * UIProcess/mac/RemoteLayerTreeHost.mm:
        (WebKit::RemoteLayerTreeHost::updateLayerTree):

2017-03-24  Alex Christensen  <achristensen@webkit.org>

        Fix assertions after r214358.
        https://bugs.webkit.org/show_bug.cgi?id=169167

        * UIProcess/API/APIContentExtensionStore.cpp:
        (API::ContentExtensionStore::compileContentExtension):
        AtomicString::init must be called for the first time from the main thread.
        We were calling it for the first time from a non-main thread sometimes.
        Call it from the main thread before initiating compiling on another thread.

== Rolled over to ChangeLog-2017-03-23 ==
