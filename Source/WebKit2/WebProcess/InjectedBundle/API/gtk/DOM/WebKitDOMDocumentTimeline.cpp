/*
 *  This file is part of the WebKit open source project.
 *  This file has been generated by generate-bindings.pl. DO NOT MODIFY!
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Library General Public
 *  License as published by the Free Software Foundation; either
 *  version 2 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Library General Public License for more details.
 *
 *  You should have received a copy of the GNU Library General Public License
 *  along with this library; see the file COPYING.LIB.  If not, write to
 *  the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA 02110-1301, USA.
 */

#include "config.h"
#include "WebKitDOMDocumentTimeline.h"

#include <WebCore/CSSImportRule.h>
#include "DOMObjectCache.h"
#include <WebCore/Document.h>
#include <WebCore/ExceptionCode.h>
#include <WebCore/ExceptionCodeDescription.h>
#include <WebCore/JSMainThreadExecState.h>
#include "WebKitDOMDocumentTimelinePrivate.h"
#include "WebKitDOMPrivate.h"
#include "ConvertToUTF8String.h"
#include <wtf/GetPtr.h>
#include <wtf/RefPtr.h>

#if ENABLE(WEB_ANIMATIONS)

namespace WebKit {

WebKitDOMDocumentTimeline* kit(WebCore::DocumentTimeline* obj)
{
    if (!obj)
        return 0;

    if (gpointer ret = DOMObjectCache::get(obj))
        return WEBKIT_DOM_DOCUMENT_TIMELINE(ret);

    return wrapDocumentTimeline(obj);
}

WebCore::DocumentTimeline* core(WebKitDOMDocumentTimeline* request)
{
    return request ? static_cast<WebCore::DocumentTimeline*>(WEBKIT_DOM_OBJECT(request)->coreObject) : 0;
}

WebKitDOMDocumentTimeline* wrapDocumentTimeline(WebCore::DocumentTimeline* coreObject)
{
    ASSERT(coreObject);
    return WEBKIT_DOM_DOCUMENT_TIMELINE(g_object_new(WEBKIT_DOM_TYPE_DOCUMENT_TIMELINE, "core-object", coreObject, nullptr));
}

} // namespace WebKit

#endif // ENABLE(WEB_ANIMATIONS)

G_DEFINE_TYPE(WebKitDOMDocumentTimeline, webkit_dom_document_timeline, WEBKIT_DOM_TYPE_ANIMATION_TIMELINE)

static void webkit_dom_document_timeline_class_init(WebKitDOMDocumentTimelineClass* requestClass)
{
    UNUSED_PARAM(requestClass);
}

static void webkit_dom_document_timeline_init(WebKitDOMDocumentTimeline* request)
{
    UNUSED_PARAM(request);
}

