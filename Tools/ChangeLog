2017-04-03  Carlos Alberto Lopez Perez  <clopez@igalia.com>

        [GTK][JHBuild] Update mesa repository url for tarballs
        https://bugs.webkit.org/show_bug.cgi?id=170431

        Reviewed by Michael Catanzaro.

        * gtk/jhbuild.modules:

2017-04-03  Joseph Pecoraro  <pecoraro@apple.com>

        TestWebKitAPI: Warning: Multiple build commands for Ahem.ttf
        https://bugs.webkit.org/show_bug.cgi?id=170430

        Reviewed by Alexey Proskuryakov.

        * TestWebKitAPI/Tests/mac/Ahem.ttf: Removed.
        Eliminate one of the copies of Ahem.ttf.

        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
        Once eliminated, there is now only one Ahem.ttf that is copied
        to the Resources bundle. Drive-by sort the project file.

2017-04-03  Simon Fraser  <simon.fraser@apple.com>

        Allow MiniBrowser windows to receive local file drags again
        https://bugs.webkit.org/show_bug.cgi?id=170422

        Reviewed by Wenson Hsieh.

        Adopt the new UIDelegate SPI to allow drops.

        * MiniBrowser/mac/WK2BrowserWindowController.m:
        (-[WK2BrowserWindowController _webView:dragDestinationActionMaskForDraggingInfo:]):

2017-04-03  Carlos Alberto Lopez Perez  <clopez@igalia.com>

        [GTK][JHBuild] Fetch libvpx from a release tarball instead of git
        https://bugs.webkit.org/show_bug.cgi?id=170426

        Reviewed by Michael Catanzaro.

        * gtk/jhbuild.modules:

2017-04-03  Nan Wang  <n_wang@apple.com>

        AX: Expose link children when doing search predication on iOS
        https://bugs.webkit.org/show_bug.cgi?id=170424
        <rdar://problem/31413335>

        Reviewed by Chris Fleizach.

        * DumpRenderTree/ios/AccessibilityUIElementIOS.mm:
        (AccessibilityUIElement::uiElementForSearchPredicate):
        * WebKitTestRunner/InjectedBundle/ios/AccessibilityUIElementIOS.mm:
        (WTR::AccessibilityUIElement::uiElementForSearchPredicate):

2017-04-03  Brian Burg  <bburg@apple.com>

        run-safari should support launching with custom language and locale
        https://bugs.webkit.org/show_bug.cgi?id=170397

        Reviewed by Alexey Proskuryakov.

        Hook up -AppleLanguages and -AppleLocale to command line options.

        * Scripts/webkitdirs.pm:
        (printHelpAndExitForRunAndDebugWebKitAppIfNeeded):
        (argumentsForRunAndDebugMacWebKitApp):

2017-04-03  Jonathan Bedard  <jbedard@apple.com>

        webkitpy: Provide option to skip install
        https://bugs.webkit.org/show_bug.cgi?id=170344

        Reviewed by Alexey Proskuryakov.

        Installing can take time for on device testing.  Provide an option to skip install
        and use whatever driver is currently installed on the device or simulator.

        * Scripts/webkitpy/port/base.py:
        (Port.check_build): Do not check driver if skipping install.
        * Scripts/webkitpy/port/factory.py:
        (platform_options): Add '--no-install' option.
        * Scripts/webkitpy/port/ios.py:
        (IOSPort.setup_test_run): Check install option before installing.

2017-04-03  Keith Miller  <keith_miller@apple.com>

        WebAssembly: Update spec tests
        https://bugs.webkit.org/show_bug.cgi?id=170361

        Rubber-stamped by Saam Barati.

        Update the runner to know the new wasm spec test harness code.

        * Scripts/run-jsc-stress-tests:

2017-04-01  Alexey Proskuryakov  <ap@apple.com>

        Rolling back <https://trac.webkit.org/r214697>, as it made WebKit2.DataDetectionReferenceDate time out.

        Was REGRESSION (r202472): Data Detection overwrites existing links in detected ranges
        https://bugs.webkit.org/show_bug.cgi?id=170365

        * TestWebKitAPI/Tests/WebKit2Cocoa/DataDetection.mm:

2017-04-01  Csaba Osztrogonác  <ossy@webkit.org>

        Mac cmake buildfix after 214586.
        https://bugs.webkit.org/show_bug.cgi?id=170381

        Unreviewed speculative buildfix.

        * WebKitTestRunner/PlatformMac.cmake:

2017-04-01  Csaba Osztrogonác  <ossy@webkit.org>

        Unreviewed speculative Mac cmake buildfix after r214586, just for fun.
        https://bugs.webkit.org/show_bug.cgi?id=161675

        * WebKitTestRunner/PlatformMac.cmake:

2017-03-31  Jonathan Bedard  <jbedard@apple.com>

        webkitpy: Add target host concept
        https://bugs.webkit.org/show_bug.cgi?id=170186
        <rdar://problem/31301797>

        Reviewed by Alexey Proskuryakov.

        Adding the idea of a target host. Target hosts are objects conforming to the
        structure of the SystemHost object in Scripts/webkitpy/common/system/systemhost.py
        Target hosts are the hosts associated with a worker process.

        * Scripts/webkitpy/common/system/filesystem.py:
        (FileSystem.map_base_host_path): Convert a path from an absolute path on the base
        host to an absolute path on this host.
        (FileSystem.move_to_base_host): Move file from this host to the base host.
        (FileSystem.move_from_base_host): Move file from the base host to this host.
        (FileSystem.copy_to_base_host): Copy file from this host to the base host.
        (FileSystem.copy_from_base_host): Copy file from the base host to this host.
        * Scripts/webkitpy/common/system/filesystem_mock.py:
        (MockFileSystem.map_base_host_path): Convert a path from an absolute path on the base
        host to an absolute path on this host.
        (MockFileSystem.move_to_base_host): Move file from this host to the base host.
        (MockFileSystem.move_from_base_host): Move file from the base host to this host.
        (MockFileSystem.copy_to_base_host): Copy file from this host to the base host.
        (MockFileSystem.copy_from_base_host): Copy file from the base host to this host.
        * Scripts/webkitpy/port/base.py:
        (Port.target_host): Return host determined by worker number.
        (Port.abspath_for_test): Accept optional target_host argument to return location
        of test on a target host.
        (Port._driver_tempdir): Accept optional target_host argument to return a temporary
        directory on a target host.
        (Port.sample_process): Accept optional target_host argument to sample process on
        a target host.
        * Scripts/webkitpy/port/darwin.py:
        (DarwinPort.sample_process): Run sample process on target host.
        (DarwinPort.sample_file_path): Accept directory for file.
        (DarwinPort.spindump_file_path): Ditto.
        * Scripts/webkitpy/port/darwin_testcase.py:
        (DarwinTest.test_spindump): Check file movement.
        (DarwinTest.test_sample_process): Ditto.
        (DarwinTest.test_sample_process_exception):
        * Scripts/webkitpy/port/driver.py:
        (Driver.__init__): Add and set self._target_host variable.
        (Driver._start): Pass target host to _driver_tempdir().
        (Driver.stop): Call the target host's rmtree.
        (Driver._check_for_driver_timeout): Pass target host to sample_process.
        (Driver._check_for_driver_crash_or_unresponsiveness): Ditto.
        (Driver._command_from_driver_input): Pass target host to abspath_for_test and map
        layout test directory to target host.
        * Scripts/webkitpy/port/ios.py:
        (IOSPort):
        (IOSPort.target_host): Replaced device_for_worker_number.
        (IOSPort.setup_test_run): Replace device_for_worker_number with target_host.
        (IOSPort.device_for_worker_number): Replaced with target_host.
        * Scripts/webkitpy/port/server_process.py:
        (ServerProcess.__init__): Accept target_host instead of worker_number.
        (ServerProcess._start): Replace _host with _target_host.
        (ServerProcess._handle_timeout): Ditto.
        (ServerProcess._kill): Ditto.
        * Scripts/webkitpy/port/simulator_process.py:
        (SimulatorProcess.__init__): Accept target_host instead of worker_number.
        (SimulatorProcess._start): Replace _device with _target_host.
        (SimulatorProcess.stop): Ditto.
        (SimulatorProcess._kill): Deleted.

2017-03-31  Jonathan Bedard  <jbedard@apple.com>

        Unreviewed fix after r214569
        https://bugs.webkit.org/show_bug.cgi?id=170255

        Unreviewed infrastructure fix.

        * Scripts/webkitpy/port/ios.py:
        (IOSPort.clean_up_test_run): Check if the device is defined before teardown.

2017-03-31  Andy Estes  <aestes@apple.com>

        REGRESSION (r202472): Data Detection overwrites existing links in detected ranges
        https://bugs.webkit.org/show_bug.cgi?id=170365
        <rdar://problem/29205721>

        Reviewed by Tim Horton.

        * TestWebKitAPI/Tests/WebKit2Cocoa/DataDetection.mm:
        (expectLinkCount): Changed to only query links with the x-apple-data-detectors attribute.
        (TEST): Re-enabled the test, which now passes.

2017-03-31  Tim Horton  <timothy_horton@apple.com>

        Mail can get stuck underneath FindController::findStringMatches after searching in a long message
        https://bugs.webkit.org/show_bug.cgi?id=170326
        <rdar://problem/30330395>

        Reviewed by Simon Fraser.

        * TestWebKitAPI/Tests/WebKit2Cocoa/FindInPage.mm:
        (TEST):

2017-03-31  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Fix WTR crashes in GTK+ port after r214413.

        Fixes: http/tests/ssl/upgrade-origin-usage.html
               http/tests/websocket/tests/hybi/network-process-crash-error.html
               http/tests/websocket/tests/hybi/simple-wss.html

        * WebKitTestRunner/gtk/TestControllerGtk.cpp:
        (WTR::TestController::platformContext): Return the context.

2017-03-30  Sam Weinig  <sam@webkit.org>

        Expose the WKView SPI, _prepareForMoveToWindow:withCompletionHandler as WKWebView SPI
        https://bugs.webkit.org/show_bug.cgi?id=170315

        Reviewed by Simon Fraser.

        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
        * TestWebKitAPI/Tests/WebKit2Cocoa/PrepareForMoveToWindow.mm: Added.
        Add test showing the completion handler is called.

2017-03-30  Filip Pizlo  <fpizlo@apple.com>

        Air should support linear scan for optLevel<2
        https://bugs.webkit.org/show_bug.cgi?id=170161

        Reviewed by Saam Barati.
        
        This makes us run a bunch of JS tests at optLevel=1 to force testing of this new compiler
        pipeline.

        * Scripts/run-jsc-stress-tests:

2017-03-30  Aakash Jain  <aakash_jain@apple.com>

        Support tvOS and watchOS in webkitdirs.pm
        https://bugs.webkit.org/show_bug.cgi?id=170267

        Reviewed by Alexey Proskuryakov.

        * Scripts/webkitdirs.pm:
        (determineXcodeSDK): Evaluate sdk for tvos and watchos.
        (xcodeSDKPlatformName): Added support for tvos and watchos.
        (determinePortName): Same.
        (isAppleCocoaWebKit): Same.
        (willUseAppleTVDeviceSDK): Added.
        (willUseAppleTVSimulatorSDK): Added.
        (willUseWatchDeviceSDK): Added.
        (willUseWatchSimulatorSDK): Added.
        (isTVOSWebKit): Added.
        (isWATCHOSWebKit): Added.
        (isIOSLikeWebKit): Added.

2017-03-30  Wenson Hsieh  <wenson_hsieh@apple.com>

        [WK2] Touches should not cancel when showing a custom action sheet while data interaction is active
        https://bugs.webkit.org/show_bug.cgi?id=170291
        <rdar://problem/31301388>

        Reviewed by Tim Horton.

        Adds support for testing how the custom action sheet presentation codepath interacts with data interaction, as
        well as a new unit test. In this case, we force data interaction to fail if touches are canceled on the
        shared UIApplication, and verify that data interaction completes successfully.

        * TestWebKitAPI/Tests/ios/DataInteractionTests.mm:
        (TestWebKitAPI::TEST):
        * TestWebKitAPI/ios/DataInteractionSimulator.h:
        * TestWebKitAPI/ios/DataInteractionSimulator.mm:
        (-[DataInteractionSimulatorApplication _cancelAllTouches]):
        (-[DataInteractionSimulator initWithWebView:]):
        (-[DataInteractionSimulator simulateAllTouchesCanceled:]):
        (-[DataInteractionSimulator runFrom:to:]):
        (-[DataInteractionSimulator _advanceProgress]):
        (-[DataInteractionSimulator _webView:showCustomSheetForElement:]):

2017-03-30  Per Arne Vollan  <pvollan@apple.com>

        [Win] Pass close_fds = True in Python popen call.
        https://bugs.webkit.org/show_bug.cgi?id=170172

        Reviewed by Brent Fulgham.

        This was previously not supported on Windows, but in Python 2.7.10 it is.

        * Scripts/webkitpy/common/system/executive.py:
        (Executive._should_close_fds):
        * Scripts/webkitpy/port/server_process.py:
        (ServerProcess._start):

2017-03-30  Aakash Jain  <aakash_jain@apple.com>

        Change my status to be a WebKit reviewer.

        Unreviewed status update edit.

        * Scripts/webkitpy/common/config/contributors.json:

2017-03-30  Carlos Alberto Lopez Perez  <clopez@igalia.com>

        Change my status to be a WebKit reviewer.

        Unreviewed status update edit.

        * Scripts/webkitpy/common/config/contributors.json:

2017-03-29  Tim Horton  <timothy_horton@apple.com>

        Swipe gesture tests don't work on macOS Sierra
        https://bugs.webkit.org/show_bug.cgi?id=161675
        <rdar://problem/23379930>

        Reviewed by Darin Adler.

        * DumpRenderTree/mac/UIScriptControllerMac.mm:
        (WTR::UIScriptController::platformPlayBackEventStream):
        (WTR::UIScriptController::beginBackSwipe):
        (WTR::UIScriptController::completeBackSwipe):
        * TestRunnerShared/EventSerialization/mac/EventSerializerMac.h: Copied from Tools/DumpRenderTree/mac/UIScriptControllerMac.mm.
        * TestRunnerShared/EventSerialization/mac/EventSerializerMac.mm: Added.
        (eventIsOfType):
        (eventIsOfTypes):
        (eventIsOfGestureType):
        (eventIsOfGestureTypes):
        (+[EventSerializer dictionaryForEvent:relativeToTime:]):
        (+[EventSerializer createEventForDictionary:inWindow:relativeToTime:]):
        (+[EventSerializer playEventStream:inWindow:completionHandler:]):
        * TestRunnerShared/EventSerialization/mac/SharedEventStreamsMac.h: Copied from Tools/WebKitTestRunner/mac/UIScriptControllerMac.mm.
        * TestRunnerShared/EventSerialization/mac/SharedEventStreamsMac.mm: Added.
        (beginSwipeBackEventStream):
        (completeSwipeBackEventStream):
        * TestRunnerShared/UIScriptContext/Bindings/UIScriptController.idl:
        * TestRunnerShared/UIScriptContext/UIScriptController.cpp:
        (WTR::UIScriptController::playBackEventStream):
        (WTR::UIScriptController::beginBackSwipe):
        (WTR::UIScriptController::completeBackSwipe):
        (WTR::UIScriptController::platformPlayBackEventStream):
        (WTR::UIScriptController::platformClearAllCallbacks): Deleted.
        * TestRunnerShared/UIScriptContext/UIScriptController.h:
        * TestRunnerShared/spi/CoreGraphicsSPI.h: Added.
        * TestRunnerShared/spi/IOKitSPI.h: Renamed from Tools/WebKitTestRunner/ios/IOKitSPI.h.
        * WebKitTestRunner/WebKitTestRunner.xcodeproj/project.pbxproj:
        * WebKitTestRunner/mac/UIScriptControllerMac.mm:
        (WTR::playBackEvents):
        (WTR::UIScriptController::beginBackSwipe):
        (WTR::UIScriptController::completeBackSwipe):
        (WTR::UIScriptController::platformPlayBackEventStream):

2017-03-29  Jonathan Bedard  <jbedard@apple.com>

        webkitpy: Robust test clean-up
        https://bugs.webkit.org/show_bug.cgi?id=170255

        Reviewed by Alexey Proskuryakov.

        On-device testing is the motivation for this change.  Failure to run clean-up functions can
        result in zombie processes, residual NFS mounts and other undesirable remnants from a failed
        test run.  Make an effort to clean-up even if exceptions are thrown during set-up or clean-up.

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager._set_up_run): Clean up test run if set-up fails.
        * Scripts/webkitpy/port/ios.py:
        (IOSPort.clean_up_test_run): Continue cleaning up devices even after an exception is thrown.

2017-03-29  Jonathan Bedard  <jbedard@apple.com>

        Simulator testing stops after the first crash
        <rdar://problem/31325362>

        Unreviewed infrastructure fix.

        * Scripts/webkitpy/xcode/simulated_device.py:
        (SimulatedDevice):
        (SimulatedDevice.launch_app): Increase timeout when attempting to launch app.

2017-03-29  Jonathan Bedard  <jbedard@apple.com>

        webkitpy: Standardize web-server port definitions
        https://bugs.webkit.org/show_bug.cgi?id=170144
        <rdar://problem/31284026>

        Reviewed by Daniel Bates.

        Default web-server ports should be declared in global variables.
        Add functions to web-servers which return the ports these servers
        are using so that other tools can forward them.

        * Scripts/webkitpy/layout_tests/servers/apache_http_server.py:
        (LayoutTestApacheHttpd.__init__): Use shared constants in http_server_base.py.
        * Scripts/webkitpy/layout_tests/servers/apache_http_server_unittest.py:
        (TestLayoutTestApacheHttpd.test_start_cmd): Check port_to_forward for expected values.
        * Scripts/webkitpy/layout_tests/servers/http_server.py:
        (Lighttpd.__init__): Use shared constants in http_server_base.py.
        (Lighttpd._prepare_config): Ditto.
        * Scripts/webkitpy/layout_tests/servers/http_server_base.py:
        (HttpServerBase): Add default port constants.
        (HttpServerBase.ports_to_forward): Add function to return ports used for http server.
        * Scripts/webkitpy/layout_tests/servers/http_server_unittest.py:
        (TestHttpServer.test_start_cmd): Check port_to_forward for expected values.
        * Scripts/webkitpy/layout_tests/servers/web_platform_test_server.py:
         (WebPlatformTestServer.ports_to_forward): Add function to return ports used for web-platform tests.
        * Scripts/webkitpy/layout_tests/servers/websocket_server.py:
        (PyWebSocket): Make default port values public.
        (PyWebSocket.__init__): Use public default port.
        (PyWebSocket.ports_to_forward): Return port used in an array.
        * Scripts/webkitpy/port/base.py:
        (Port.to.ports_to_forward): Return all ports used the various web-servers managed by the port object.
        (Port.to.start_websocket_server): Use PyWebSocket port constants.

2017-03-29  Wenson Hsieh  <wenson_hsieh@apple.com>

        Links with empty hrefs should not be drag sources
        https://bugs.webkit.org/show_bug.cgi?id=170241
        <rdar://problem/31305505>

        Reviewed by Tim Horton.

        Adds a new API test: DataInteractionTests.LinkWithEmptyHREF.

        * TestWebKitAPI/Tests/ios/DataInteractionTests.mm:
        (TestWebKitAPI::TEST):
        * TestWebKitAPI/ios/DataInteractionSimulator.h:

        Expose the current phase of the data interaction simulator for verifying behaviors in unit tests.

        * TestWebKitAPI/ios/DataInteractionSimulator.mm:
        (-[DataInteractionSimulator phase]):

2017-03-29  Jonathan Bedard  <jbedard@apple.com>

        Use TCP instead of FIFOs for Simulator/Device communication
        https://bugs.webkit.org/show_bug.cgi?id=169419
        <rdar://problem/30949615>

        Reviewed by Alexey Proskuryakov.

        Using TCP instead of FIFOs when communicating with devices allows the device being tested
        to be on a different machine then the one handling the management of the test run.

        * DumpRenderTree/DumpRenderTree.xcodeproj/project.pbxproj:
        * DumpRenderTree/mac/DumpRenderTree.mm:
        (dumpRenderTree): Call setUp/tearDownIOSLayoutTestCommunication() instead of using FIFOs.
        * Scripts/webkitpy/port/device.py:
        (Device.__init__): Initialize the listening_socket.
        (Device.listening_port): Return port of listening socket.
        (Device.prepare_for_testing): Open listening socket on an open port, prepare platform device
        fro testing.
        (Device.finished_testing): Close listening socket associated with this device, call the
        platform device's finished_testing function if it exists.
        * Scripts/webkitpy/port/ios.py:
        (IOSPort.setup_test_run): Prepare each device for testing.
        (IOSPort.clean_up_test_run): Notify each device that testing has completed.
        * Scripts/webkitpy/port/ios_simulator.py:
        (IOSSimulatorPort): Work around device persistence bug.
        (IOSSimulatorPort.__init__): Ditto.
        * Scripts/webkitpy/port/simulator_process.py:
        (SimulatorProcess):
        (SimulatorProcess.NonBlockingFileFromSocket): Add to work around shortcomings in
        Python 2’s makefile.
        (SimulatorProcess.NonBlockingFileFromSocket.__init__): Initialize file with socket.
        (SimulatorProcess.ReadFileSocket.close): Close file and then socket;
        (SimulatorProcess.__init__): Pass TCP port over environment, remove FIFO names.
        (SimulatorProcess.__getattr__): Expose all file attributes.
        (SimulatorProcess._accept_connection_create_file): Wait for connection from server and
        create and return a file-like object from the incoming connection.
        (SimulatorProcess._start): Use TCP connections instead of FIFOs.
        (SimulatorProcess._start.handler): Output server port in timeout exception.
        (SimulatorProcess._reset): Deleted.
        * TestRunnerShared/IOSLayoutTestCommunication.cpp: Added.
        (connectToServer): Return socket connected to the provided server address.
        (setupiOSLayoutTestCommunication): Connect stdin, stdout and stderr as socket to a
        TCP server running on localhost.
        (tearDownIOSLayoutTestCommunication): Close stdin, stdout and stderr TCP sockets.
        * TestRunnerShared/IOSLayoutTestCommunication.h: Added.
        * WebKitTestRunner/WebKitTestRunner.xcodeproj/project.pbxproj:
        * WebKitTestRunner/ios/TestControllerIOS.mm:
        (WTR::TestController::platformInitialize): Call setUpIOSLayoutTestCommunication()
        instead of using FIFOs.
        (WTR::TestController::platformDestroy): Call tearDownIOSLayoutTestCommunication().

2017-03-29  Jonathan Bedard  <jbedard@apple.com>

        webkitpy: Add IOSDevicePort and IOSPort tests
        https://bugs.webkit.org/show_bug.cgi?id=170206
        <rdar://problem/31308364>

        Reviewed by Alexey Proskuryakov.

        * Scripts/webkitpy/port/darwin_testcase.py: Removed unused import.
        * Scripts/webkitpy/port/ios_device_unittest.py: Added.
        (iosDeviceTest): Contains tests for the IOSDevicePort.
        (iosDeviceTest.make_port): Creates an IOSDevicePort with arguments.
        (iosDeviceTest.test_operating_system): Check for the correct operating system.
        * Scripts/webkitpy/port/ios_simulator_unittest.py: Moved from Tools/Scripts/webkitpy/port/ios_unittest.py.
        (iosSimulatorTest): Inherit from ios_testcase.
        (iosSimulatorTest.make_port): Ditto.
        (iosSimulatorTest.test_get_crash_log): Ditto.
        * Scripts/webkitpy/port/ios_testcase.py: Added.
        (iOSTest): Contains shared tests for the IOSDevicePort and IOSSimulatorPort.
        (iOSTest.test_driver_name): Tests for iOS app driver.
        (iOSTest.test_baseline_searchpath): Check that ios and ios-wk1 are in the baseline search path.
        * Scripts/webkitpy/port/ios_unittest.py: Moved to ios_simulator_unittest.py.
        * Scripts/webkitpy/port/port_testcase.py:
        (PortTestCase): Rename is_simulator to disable_setup to more accurately describe it's meaning.
        (PortTestCase.test_diff_image): Use disable_setup instead of is_simulator.
        (PortTestCase.test_diff_image_crashed): Ditto.

2017-03-28  Jason Marcell  <jmarcell@apple.com>

        Fix `index-expected.txt` for dashboard test results.
        https://bugs.webkit.org/show_bug.cgi?id=170214

        Reviewed by Alexey Proskuryakov.

        * BuildSlaveSupport/build.webkit.org-config/public_html/dashboard/Scripts/tests/index-expected.txt:

2017-03-28  Alexey Proskuryakov  <ap@apple.com>

        Bot watcher's dashboard has separate settings for "mac" and "macos"
        https://bugs.webkit.org/show_bug.cgi?id=170164

        Reviewed by Tim Horton.

        * BuildSlaveSupport/build.webkit.org-config/public_html/dashboard/Scripts/Settings.js:
        (Settings.prototype.parsePlatformFamily): Aded a special case for "macos".

2017-03-28  Alexey Proskuryakov  <ap@apple.com>

        Fix dashboard test results on the dashboard
        https://bugs.webkit.org/show_bug.cgi?id=170158

        Reviewed by Tim Horton.

        Link to result diff instead of stdio. Looking at the diff, I wonder if it can be
        further improved, as it's not super readable, but stdio is entirely useless in this context.

        * BuildSlaveSupport/build.webkit.org-config/public_html/dashboard/Scripts/Buildbot.js:
        (Buildbot.prototype.dashboardTestResultsURLForIteration): Generate formatted diff link.

        * BuildSlaveSupport/build.webkit.org-config/public_html/dashboard/Scripts/BuildbotIteration.js:
        Fixed a typo in step name, so that it's actually treated as productive.

        * BuildSlaveSupport/build.webkit.org-config/public_html/dashboard/Scripts/BuildbotTesterQueueView.js:
        (BuildbotTesterQueueView.prototype.appendBuilderQueueStatus):
        (BuildbotTesterQueueView.prototype.update):
        (BuildbotTesterQueueView.prototype._presentPopoverForGenericTestFailures):
        Added special handling for dashboard test results.

2017-03-28  Aakash Jain  <aakash_jain@apple.com>

        Fix Dashboard test _presentPopoverForJavaScriptCoreTestRegressions
        https://bugs.webkit.org/show_bug.cgi?id=170193

        Reviewed by Alexey Proskuryakov.

        * BuildSlaveSupport/build.webkit.org-config/public_html/dashboard/Scripts/tests/resources/tests.js:
        Fixed the order of arguments.

2017-03-28  Aakash Jain  <aakash_jain@apple.com>

        Dashboard tests fails to fetch the revision from commits
        https://bugs.webkit.org/show_bug.cgi?id=170191

        Reviewed by Alexey Proskuryakov.

        * BuildSlaveSupport/build.webkit.org-config/public_html/dashboard/Scripts/tests/resources/MockTrac.js:
        Added recordedCommitIndicesByRevisionNumber.
        * BuildSlaveSupport/build.webkit.org-config/public_html/dashboard/Scripts/tests/resources/tests.js:
        (setup): Populated trac.recordedCommitIndicesByRevisionNumber since the dashboard code uses this variable.

2017-03-28  Timothy Horton  <timothy_horton@apple.com>

        Safari crashes when attempting to close tab that is displaying PDF
        https://bugs.webkit.org/show_bug.cgi?id=170201
        <rdar://problem/31242019>

        Reviewed by Wenson Hsieh.

        * TestWebKitAPI/Tests/WebKit2Cocoa/DoAfterNextPresentationUpdateAfterCrash.mm:
        (TEST):
        Add a test for doAfterNextStablePresentationUpdate just like the existing
        non-stable one.

2017-03-28  Jonathan Bedard  <jbedard@apple.com>

        webkitpy: Use host pattern for devices
        https://bugs.webkit.org/show_bug.cgi?id=170121

        Reviewed by Daniel Bates.

        Devices should be treated like hosts throughout webkitpy
        so that more code can be re-used.  Add the needed properties
        and use executive over custom implemented polling/killing
        functions.

        * Scripts/webkitpy/port/device.py:
        (Device):
        (Device.executive): Add optional executive property.
        (Device.filesystem): Add optional filesystem property.
        (Device.user): Add optional user property.
        (Device.platform): Add optional platform property.
        (Device.workspace): Add optional workspace property.
        (Device.poll): Deleted.
        * Scripts/webkitpy/port/simulator_process.py:
        (SimulatorProcess.Popen.poll): Use the devices executive.
        (SimulatorProcess.stop): Ditto.
        (SimulatorProcess._kill): Ditto.
        * Scripts/webkitpy/xcode/simulated_device.py:
        (SimulatedDevice.__init__): Add executive, filesystem, user, platform
        and workspace to the platform device.
        (SimulatedDevice.poll): Deleted.

2017-03-28  Aakash Jain  <aakash_jain@apple.com>

        Dashboard test fails with error: latestIterationGetter is not a function
        https://bugs.webkit.org/show_bug.cgi?id=170167

        Reviewed by Alexey Proskuryakov.

        * BuildSlaveSupport/build.webkit.org-config/public_html/dashboard/Scripts/tests/resources/tests.js:
        (this.view._latestProductiveIteration): Configure _latestProductiveIteration in setup.

2017-03-27  Lucas Forschler  <lforschler@apple.com>

        Another test v8.

2017-03-27  Lucas Forschler  <lforschler@apple.com>

        Another test v7.

2017-03-27  Lucas Forschler  <lforschler@apple.com>

        Another test v6.

2017-03-27  Lucas Forschler  <lforschler@apple.com>

        Another test v5.

2017-03-27  Lucas Forschler  <lforschler@apple.com>

        Another test v4.

2017-03-27  Lucas Forschler  <lforschler@apple.com>

        Another test v3.

2017-03-27  Lucas Forschler  <lforschler@apple.com>

        Another test v2.

2017-03-27  Lucas Forschler  <lforschler@apple.com>

        Another test.

2017-03-27  Lucas Forschler  <lforschler@apple.com>

        <rdar://problem/30949128>
        Update build.webkit.org to use port 16000 for PBChangeSource.
        
        Reviewed by Alexey Proskuryakov.

        * BuildSlaveSupport/build.webkit.org-config/master.cfg:

2017-03-27  Jason Marcell  <jmarcell@apple.com>

        Bots should run the dashboard tests
        https://bugs.webkit.org/show_bug.cgi?id=168994

        Reviewed by Daniel Bates and David Kilzer.

        We pull the `--results-directory` argument value out so that `RunDashboardTests` can override it so that we can separately run the dashboard layout tests.

        * BuildSlaveSupport/build.webkit.org-config/master.cfg:
        (RunWebKitTests): Define a class variable called resultDirectory for the `--results-directory` argument so that subclasses can override this if needed.
        (RunWebKitTests.start): Set the `--results-directory` argument value to the value of self.resultDirectory.
        (RunDashboardTests): Subclass of RunWebKitTests in which we run the layout tests for the Bot Watcher's Dashboard.
        (RunDashboardTests.start): Override the `--layout-tests-directory` to point to the dashboard layout tests.
        (ExtractTestResults.addCustomURLs): Update the current results URL label to indicate that it links to layout tests results and add a new link to link to dashboard layout test results.
        (TestFactory.__init__): Update unit tests to account for new RunDashboardTests step.
        * BuildSlaveSupport/build.webkit.org-config/mastercfg_unittest.py:
        * BuildSlaveSupport/build.webkit.org-config/public_html/dashboard/Scripts/BuildbotIteration.js:

2017-03-27  Jonathan Bedard  <jbedard@apple.com>

        webkitpy: Look for 'ios' test expectations for IOSPorts
        https://bugs.webkit.org/show_bug.cgi?id=169413

        Reviewed by Alexey Proskuryakov.

        Test expectations for iOS tests should include the 'ios' folder.  Modify
        default_baseline_search_path to include 'ios' folder and derivatives for
        IOSPort.

        * Scripts/webkitpy/port/ios.py:
        (IOSPort._generate_all_test_configurations): Moved from IOSSimulatorPort.
        (IOSPort.default_baseline_search_path): Add ios expectations along with port specific expectations.
        (IOSPort.test_expectations_file_position): Added for testing.
        * Scripts/webkitpy/port/ios_simulator.py:
        (IOSSimulatorPort._generate_all_test_configurations): Moved to IOSPort.
        (IOSSimulatorPort.default_baseline_search_path): Moved to IOSPort.

2017-03-27  Jonathan Bedard  <jbedard@apple.com>

        REGRESSION: Reseting _device_map on each child process
        <rdar://problem/31274476>

        Unreviewed infrastructure fix.

        * Scripts/webkitpy/port/ios_simulator.py:
        (IOSSimulatorPort): Add _DEVICE_MAP class variable.
        (IOSSimulatorPort.__init__): Use shared class variable
        (IOSSimulatorPort._device_for_worker_number_map): Use _DEVICE_MAP class variable
        (IOSSimulatorPort._create_devices): Ditto.
        (IOSSimulatorPort._quit_ios_simulator): Ditto.
        (IOSSimulatorPort.clean_up_test_run): Ditto.

2017-03-27  Jonathan Bedard  <jbedard@apple.com>

        REGRESSION: Failing to iterate over Simulator.managed_devices map
        <rdar://problem/31274476>

        Unreviewed infrastructure fix.

        * Scripts/webkitpy/port/ios_simulator.py:
        (IOSSimulatorPort._create_devices): Iterate through managed_devices by worker number.

2017-03-27  Alex Christensen  <achristensen@webkit.org>

        Make WebSockets work in network process
        https://bugs.webkit.org/show_bug.cgi?id=169930

        Reviewed by Youenn Fablet.

        * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
        Add terminateNetworkProcess for the new test
        http/tests/websocket/tests/hybi/network-process-crash-error.html
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::setAllowsAnySSLCertificate):
        (WTR::TestRunner::terminateNetworkProcess):
        * WebKitTestRunner/InjectedBundle/TestRunner.h:
        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::setAllowsAnySSLCertificate):
        (WTR::TestController::terminateNetworkProcess):
        * WebKitTestRunner/TestController.h:
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):
        (WTR::TestInvocation::didReceiveSynchronousMessageFromInjectedBundle):
        * WebKitTestRunner/cocoa/TestControllerCocoa.mm:
        (WTR::TestController::platformContext):
        * WebKitTestRunner/gtk/TestControllerGtk.cpp:
        (WTR::TestController::platformContext):
        (WTR::TestController::platformLibraryPathForTesting):
        Add some infrastructure for http/tests/websocket/tests/hybi/simple-wss.html
        which calls testRunner.setAllowsAnySSLCertificate.  It used to only be effective
        for the WebProcess, but SocketStreamHandleImpl::createStreams is now in the NetworkProcess,
        and we need its call to Settings::allowsAnySSLCertificate to be loosened for this test,
        which tests that wss works, but our test certificate has an invalid certificate chain.
        We want production software to not have the ability to have its security weakened, so this
        is a test code path that is only implemented in WebKitTestRunner.

2017-03-25  Jonathan Bedard  <jbedard@apple.com>

        webkitpy: Use generalized device instead of platform specific one
        https://bugs.webkit.org/show_bug.cgi?id=170078

        Reviewed by Daniel Bates.

        SimulatedDevice is re-created each time 'xcrun simctl list' is called.  Device
        should remain persistent.  Changing Device to a more explicit interface.
        SimulatedDevice no longer inherits from Device and IOSSimulator returns Devices
        wrapping SimulatedDevices.

        * Scripts/webkitpy/port/device.py: Added.
        (Device):
        (Device.__init__): Construct with platform device.
        (Device.install_app): Install app at app path on platform device.
        (Device.launch_app): Launch app with bundle ID on platform device.
        (Device.poll): Poll platform device.
        (Device.udid): Access platform device UDID.
        (Device.__nonzero__): Check if instantiated with a valid platform device.
        (Device.__eq__): Compare by udid.
        (Device.__ne__): Ditto.
        (Device.__repr__): Print out platform_device representation.
        * Scripts/webkitpy/port/ios_simulator.py:
        (IOSSimulatorPort.__init__): Initialize the _device_map to an empty dictionary.
        (IOSSimulatorPort._device_for_worker_number_map):  Return self._device_map.
        (IOSSimulatorPort._create_simulators): Call Simulator.managed_devices directly.
        (IOSSimulatorPort._create_devices): Place Simulator.managed_devices into the
        device map.
        (IOSSimulatorPort._quit_ios_simulator): Reset self._device_map.
        * Scripts/webkitpy/xcode/device.py: Removed.
        * Scripts/webkitpy/xcode/simulated_device.py:
        (SimulatedDevice):
        (SimulatedDevice.__init__): Move host, name and did to SimulatedDevice.
        (SimulatedDevice.__eq__): Compare two simulated devices.
        (SimulatedDevice.__ne__): Ditto.
        (SimulatedDevice.__repr__): Print name and udid.

2017-03-25  Adrian Perez de Castro  <aperez@igalia.com>

        [GTK] No value returned from PrintCustomWidgetTest::createWebKitPrintOperation() in TestPrinting.cpp
        https://bugs.webkit.org/show_bug.cgi?id=170059

        Reviewed by Carlos Garcia Campos.

        * TestWebKitAPI/Tests/WebKit2Gtk/TestPrinting.cpp: Use "void" as return type in the declaration,
        the only use of the method in this same file ignores the returned value anyway.

2017-03-24  Srinivasan Vijayaraghavan  <svijayaraghavan@apple.com>

        webkitpy should be able to run API tests
        https://bugs.webkit.org/show_bug.cgi?id=170028

        Reviewed by Alexey Proskuryakov.

        * Scripts/webkitpy/common/config/ports.py:
        (DeprecatedPort.run_api_tests_command): Added.
        * Scripts/webkitpy/port/base.py:
        (Port.api_results_directory): Added.
        * Scripts/webkitpy/tool/steps/runtests.py:
        (RunTests.run): Check if we should be running API tests.
        (RunTests._run_api_tests): Generate script to run API tests with json output.
        * Scripts/webkitpy/tool/steps/steps_unittest.py: Unit tests.

2017-03-24  Srinivasan Vijayaraghavan  <svijayaraghavan@apple.com>

        Add JSON results for API tests
        https://bugs.webkit.org/show_bug.cgi?id=170021

        Reviewed by Alexey Proskuryakov.

        * Scripts/run-api-tests:
        (runTestsBySuite): Appends failures and timeouts to JSON data.
        (writeJsonDataIfApplicable): Writes JSON data to a file.

2017-03-24  Lucas Forschler  <lforschler@apple.com>

        update committer_auth.py to be python 2.7 compliant
        https://bugs.webkit.org/show_bug.cgi?id=170063
        
        Reviewed by Alexey Proskuryakov.

        * BuildSlaveSupport/build.webkit.org-config/committer_auth.py:
        (CommitterAuth.authenticate):
            convert e.message to e.args[0]

2017-03-24  Srinivasan Vijayaraghavan  <svijayaraghavan@apple.com>

        webkitpy: Parse JSON results from run-api-tests
        https://bugs.webkit.org/show_bug.cgi?id=170062

        Reviewed by Alexey Proskuryakov.

        * Scripts/webkitpy/common/net/apitestresults.py: Added.
        (APITestResults): Structure to represent API test results.
        (APITestResults.__init__):
        (APITestResults.intersection): Return the failures common to both sets of results.
        (APITestResults.results_from_string): Create an APITestResults object from a JSON results string.
        (APITestResults.equals): Return True if both results were the same.
        (APITestResults.is_subset): Return True if failing tests are a subset of the other failing tests.
        (APITestResults.all_passed): Return True if everything passed.
        (APITestResults.failing_tests): List of tests that didn't pass.
        (APITestResults.did_exceed_test_failure_limit): Always False.
        * Scripts/webkitpy/common/net/apitestresults_unittest.py: Added.
        (APITestResultsTest): Unit tests.
        * Scripts/webkitpy/tool/bot/apitestresultsreader.py: Added.
        (APITestResultsReader): Read contents of JSON results file.

2017-03-24  Alex Christensen  <achristensen@webkit.org>

        REGRESSION: Content Blocker: Blocking "a[href*=randomString]" doesn't work
        https://bugs.webkit.org/show_bug.cgi?id=169167

        Reviewed by Simon Fraser.

        * TestWebKitAPI/Tests/WebCore/ContentExtensions.cpp:
        (TestWebKitAPI::TEST_F):
        Test an example of a selector that was incorrectly determined to be invalid.

2017-03-24  Jonathan Bedard  <jbedard@apple.com>

        Increase timeout for booting simulators.
        <rdar://problem/31080009>

        Unreviewed infrastructure fix.

        * Scripts/webkitpy/xcode/simulator.py:
        (Simulator.wait_until_device_is_booted): Increase timeout.
        (Simulator.wait_until_device_is_in_state): Increase timeout.

2017-03-24  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Fix GTK+ test /webkit2/WebKitWebView/javascript-dialogs after r214277.

        Since r214277 beforeunload events are not fired unless there's some user interaction, so we need to simulate it
        in our unit tests to work.

        * TestWebKitAPI/Tests/WebKit2Gtk/TestUIClient.cpp:
        (testWebViewJavaScriptDialogs):

2017-03-24  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Add MIMETypeRegistry implementation using xdgmime and remove the GTK+ one
        https://bugs.webkit.org/show_bug.cgi?id=170001

        Reviewed by Michael Catanzaro.

        Ignore style of xdgmime sources.

        * Scripts/webkitpy/tool/steps/checkstyle.py:

2017-03-23  Wenson Hsieh  <wenson_hsieh@apple.com>

        Dragging on a large image should not revert to a file icon if data interaction is enabled
        https://bugs.webkit.org/show_bug.cgi?id=170018
        <rdar://problem/31184508>

        Reviewed by Tim Horton.

        Add new tests for data interaction. LargeImageToTargetDiv verifies the change made in this patch, while
        AttachmentElementItemProviders was a test that was previously removed due to <rdar://problem/31038797>.

        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
        * TestWebKitAPI/Tests/WebKit2Cocoa/large-red-square.png: Added.
        * TestWebKitAPI/Tests/ios/DataInteractionTests.mm:
        (TestWebKitAPI::TEST):

2017-03-23  Fujii Hironori  <Hironori.Fujii@sony.com>

        Update WinCairoRequirements.zip
        https://bugs.webkit.org/show_bug.cgi?id=169950

        Reviewed by Alex Christensen.

        * Scripts/update-webkit-wincairo-libs: Replace $winCairoLibsURL.

== Rolled over to ChangeLog-2017-03-23 ==
