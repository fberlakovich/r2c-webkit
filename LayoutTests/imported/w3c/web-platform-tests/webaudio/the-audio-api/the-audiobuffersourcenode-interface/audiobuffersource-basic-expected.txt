
PASS # AUDIT TASK RUNNER STARTED. 
PASS Executing "start/stop exceptions" 
PASS Audit report 
PASS > [start/stop exceptions]  
PASS   start(NaN) threw TypeError: "The provided value is non-finite". 
PASS   start(Infinity) threw TypeError: "The provided value is non-finite". 
PASS   start(-Infinity) threw TypeError: "The provided value is non-finite". 
PASS   Calling stop() before start() threw InvalidStateError: "The object is in an invalid state.". 
FAIL X start(-1) threw "InvalidStateError" instead of EcmaScript error RangeError. assert_true: expected true got false
FAIL X start(0,-1) threw "InvalidStateError" instead of EcmaScript error RangeError. assert_true: expected true got false
FAIL X start(0,0,-1) threw "InvalidStateError" instead of EcmaScript error RangeError. assert_true: expected true got false
FAIL X Calling start() twice did not throw an exception. assert_true: expected true got false
FAIL X stop(-1) threw "InvalidStateError" instead of EcmaScript error RangeError. assert_true: expected true got false
PASS   stop(NaN) threw TypeError: "The provided value is non-finite". 
PASS   stop(Infinity) threw TypeError: "The provided value is non-finite". 
PASS   stop(-Infinity) threw TypeError: "The provided value is non-finite". 
FAIL < [start/stop exceptions] 5 out of 12 assertions were failed. assert_true: expected true got false
FAIL # AUDIT TASK RUNNER FINISHED: 1 out of 1 tasks were failed. assert_true: expected true got false

