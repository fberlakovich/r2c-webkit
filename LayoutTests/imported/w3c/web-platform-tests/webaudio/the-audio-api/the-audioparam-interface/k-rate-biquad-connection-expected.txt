
PASS # AUDIT TASK RUNNER STARTED. 
PASS Executing "Frequency AudioParam" 
PASS Executing "Q AudioParam" 
PASS Executing "Gain AudioParam" 
PASS Executing "Detune AudioParam" 
PASS Executing "All k-rate inputs" 
PASS Audit report 
PASS > [Frequency AudioParam] k-rate input works 
PASS   frequency: new OscillatorNode(context, {frequency: 440}) did not throw an exception. 
PASS   Reference BiquadFilterNode(c, {"type":"lowpass","frequency":0}) did not throw an exception. 
PASS   refNode.frequency.setValueAtTime(880,0) did not throw an exception. 
PASS   refNode.frequency.linearRampToValueAtTime.(0,0.125) did not throw an exception. 
PASS   Test BiquadFilterNode(context, {"type":"lowpass","frequency":0}) did not throw an exception. 
PASS   frequency: mod.offset.setValueAtTime(880,0) did not throw an exception. 
PASS   frequency: mod.offset.linearRampToValueAtTime(0,0.125) did not throw an exception. 
PASS   Expected k-rate frequency with automation output[0:2047] is not constantly 0 (contains 1023 different values). 
PASS   Expected k-rate frequency with automation output[2048:] contains only the constant 0. 
PASS   k-rate frequency with input: output[0,2048] equals [0,0.029047837480902672,0.14823515713214874,0.37683817744255066,0.6631172299385071,0.9242099523544312,1.0833274126052856,1.0932358503341675,0.9439674019813538,0.6584677696228027,0.28192755579948425,-0.13015632331371307,-0.5221076011657715,-0.8452857732772827,-1.0625972747802734,-1.1510100364685059...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS   k-rate frequency with input: output[2048:] equals [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS < [Frequency AudioParam] All assertions passed. (total 11 assertions) 
PASS > [Q AudioParam] k-rate input works 
PASS   Q: new OscillatorNode(context, {frequency: 1760}) did not throw an exception. 
PASS   Reference BiquadFilterNode(c, {"type":"bandpass","frequency":440,"Q":0}) did not throw an exception. 
PASS   refNode.Q.setValueAtTime(0,0) did not throw an exception. 
PASS   refNode.Q.linearRampToValueAtTime.(100,0.125) did not throw an exception. 
PASS   Test BiquadFilterNode(context, {"type":"bandpass","frequency":440,"Q":0}) did not throw an exception. 
PASS   Q: mod.offset.setValueAtTime(0,0) did not throw an exception. 
PASS   Q: mod.offset.linearRampToValueAtTime(100,0.125) did not throw an exception. 
PASS   k-rate Q with input: output[0,2048] equals [0,0.9822871685028076,0.3681243062019348,-0.8443278074264526,-0.684546709060669,0.5877853631973267,0.9048266410827637,-0.24869030714035034,-0.9980266094207764,-0.12533244490623474,0.951056718826294,0.48175284266471863,-0.7705137133598328,-0.7705122232437134,0.4817546010017395,0.9510560035705566...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS   k-rate Q with input: output[2048:] equals [0.00563559215515852,0.0037146545946598053,0.001990695483982563,0.0032952686306089163,0.004832264967262745,0.0028007077053189278,-0.0012789341853931546,-0.002833665581420064,-0.0014375397004187107,-0.0012671658769249916,-0.004099522717297077,-0.006256344262510538,-0.004479897674173117,-0.0012019251007586718,-0.0006450987420976162,-0.002086753724142909...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS < [Q AudioParam] All assertions passed. (total 9 assertions) 
PASS > [Gain AudioParam] k-rate input works 
PASS   gain: new OscillatorNode(context, {frequency: 1760}) did not throw an exception. 
PASS   Reference BiquadFilterNode(c, {"type":"peaking","frequency":1760,"Q":100,"gain":0}) did not throw an exception. 
PASS   refNode.gain.setValueAtTime(0,0) did not throw an exception. 
PASS   refNode.gain.linearRampToValueAtTime.(-100,0.125) did not throw an exception. 
PASS   Test BiquadFilterNode(context, {"type":"peaking","frequency":1760,"Q":100,"gain":0}) did not throw an exception. 
PASS   gain: mod.offset.setValueAtTime(0,0) did not throw an exception. 
PASS   gain: mod.offset.linearRampToValueAtTime(-100,0.125) did not throw an exception. 
PASS   k-rate gain with input: output[0,2048] equals [0,0.9822871685028076,0.3681243062019348,-0.8443278074264526,-0.684546709060669,0.5877853631973267,0.9048266410827637,-0.24869030714035034,-0.9980266094207764,-0.12533244490623474,0.951056718826294,0.48175284266471863,-0.7705137133598328,-0.7705122232437134,0.4817546010017395,0.9510560035705566...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS   k-rate gain with input: output[2048:] equals [-0.019616879522800446,0.003484146436676383,0.020922508090734482,0.004356823395937681,-0.01928977109491825,-0.011586017906665802,0.014947718009352684,0.017187761142849922,-0.008506490848958492,-0.020375773310661316,0.0008703001076355577,0.020701779052615166,0.006887872237712145,-0.018120700493454933,-0.013678748160600662,0.012994160875678062...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS < [Gain AudioParam] All assertions passed. (total 9 assertions) 
PASS > [Detune AudioParam] k-rate input works 
PASS   detune: new OscillatorNode(context, {frequency: 440}) did not throw an exception. 
PASS   Reference BiquadFilterNode(c, {"type":"lowpass","frequency":2200,"detune":0,"gain":0}) did not throw an exception. 
PASS   refNode.detune.setValueAtTime(0,0) did not throw an exception. 
PASS   refNode.detune.linearRampToValueAtTime.(-13323.945370094427,0.125) did not throw an exception. 
PASS   Test BiquadFilterNode(context, {"type":"lowpass","frequency":2200,"detune":0,"gain":0}) did not throw an exception. 
PASS   detune: mod.offset.setValueAtTime(0,0) did not throw an exception. 
PASS   detune: mod.offset.linearRampToValueAtTime(-13323.945370094427,0.125) did not throw an exception. 
PASS   k-rate detune with input: output[0,2048] equals [0,0.13106171786785126,0.4876149892807007,0.8280724883079529,0.9708039164543152,0.9987876415252686,0.9472373127937317,0.7774537801742554,0.5018512606620789,0.17155945301055908,-0.1743984818458557,-0.5022768378257751,-0.7721415758132935,-0.9495059847831726,-1.0142651796340942,-0.9596185684204102...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS   k-rate detune with input: output[2048:] equals [0.011895817704498768,0.011943518184125423,0.011990642175078392,0.012037156149744987,0.012083093635737896,0.012128554284572601,0.012173685245215893,0.012218670919537544,0.012263708747923374,0.012308984063565731,0.012354648672044277,0.01240080501884222,0.012447493150830269,0.012494685128331184,0.012542287819087505,0.012590156868100166...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS < [Detune AudioParam] All assertions passed. (total 9 assertions) 
PASS > [All k-rate inputs]  
PASS   Create: refNode = new BiquadFilterNode(context, {"type":"peaking","frequency":0,"detune":0,"gain":0,"Q":0}) did not throw an exception. 
PASS   Create: tstNode = new BiquadFilterNode(context, {"type":"peaking","frequency":0,"detune":0,"gain":0,"Q":0}) did not throw an exception. 
PASS   Set rate: refNode[frequency].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: tstNode[frequency].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: refNode[Q].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: tstNode[Q].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: refNode[gain].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: tstNode[gain].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: refNode[detune].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: tstNode[detune].automationRate = 'k-rate' did not throw an exception. 
PASS   Create: mod[frequency] = new ConstantSourceNode(context, {offset: 0}) did not throw an exception. 
PASS   Set rate: mod[frequency].offset.automationRate = 'a-rate' did not throw an exception. 
PASS   Create: mod[Q] = new ConstantSourceNode(context, {offset: 0}) did not throw an exception. 
PASS   Set rate: mod[Q].offset.automationRate = 'a-rate' did not throw an exception. 
PASS   Create: mod[gain] = new ConstantSourceNode(context, {offset: 0}) did not throw an exception. 
PASS   Set rate: mod[gain].offset.automationRate = 'a-rate' did not throw an exception. 
PASS   Create: mod[detune] = new ConstantSourceNode(context, {offset: 0}) did not throw an exception. 
PASS   Set rate: mod[detune].offset.automationRate = 'a-rate' did not throw an exception. 
PASS   Automate 0: refNode.frequency.setValueAtTime(1760, 0) did not throw an exception. 
PASS   Automate 0: mod[frequency].offset.setValueAtTime(1760, 0) did not throw an exception. 
PASS   Automate 0: refNode.Q.setValueAtTime(0, 0) did not throw an exception. 
PASS   Automate 0: mod[Q].offset.setValueAtTime(0, 0) did not throw an exception. 
PASS   Automate 0: refNode.gain.setValueAtTime(0, 0) did not throw an exception. 
PASS   Automate 0: mod[gain].offset.setValueAtTime(0, 0) did not throw an exception. 
PASS   Automate 0: refNode.detune.setValueAtTime(4800, 0) did not throw an exception. 
PASS   Automate 0: mod[detune].offset.setValueAtTime(4800, 0) did not throw an exception. 
PASS   Automate 1: refNode[frequency].linearRampToValueAtTime(440, 0.125) did not throw an exception. 
PASS   Automate 1: mod[frequency].offset.linearRampToValueAtTime(440, 0.125) did not throw an exception. 
PASS   Automate 1: refNode[Q].linearRampToValueAtTime(40, 0.125) did not throw an exception. 
PASS   Automate 1: mod[Q].offset.linearRampToValueAtTime(40, 0.125) did not throw an exception. 
PASS   Automate 1: refNode[gain].linearRampToValueAtTime(-100, 0.125) did not throw an exception. 
PASS   Automate 1: mod[gain].offset.linearRampToValueAtTime(-100, 0.125) did not throw an exception. 
PASS   Automate 1: refNode[detune].linearRampToValueAtTime(0, 0.125) did not throw an exception. 
PASS   Automate 1: mod[detune].offset.linearRampToValueAtTime(0, 0.125) did not throw an exception. 
PASS   Connect: mod[frequency].connect(tstNode.frequency) did not throw an exception. 
PASS   Connect: mod[Q].connect(tstNode.Q) did not throw an exception. 
PASS   Connect: mod[gain].connect(tstNode.gain) did not throw an exception. 
PASS   Connect: mod[detune].connect(tstNode.detune) did not throw an exception. 
PASS   Start: mod[frequency].start() did not throw an exception. 
PASS   Start: mod[Q].start() did not throw an exception. 
PASS   Start: mod[gain].start() did not throw an exception. 
PASS   Start: mod[detune].start() did not throw an exception. 
PASS   All k-rate AudioParams is not constantly 0 (contains 4095 different values). 
PASS   All k-rate AudioParams equals [0,0.3387378752231598,0.6374238729476929,0.8607419729232788,0.9822871685028076,0.9876880645751953,0.8763062953948975,0.6613117456436157,0.3681243062019348,0.03141050040721893,-0.3090170621871948,-0.6129071116447449,-0.8443278074264526,-0.9759165644645691,-0.9921145439147949,-0.8910062313079834...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS < [All k-rate inputs] All assertions passed. (total 44 assertions) 
PASS # AUDIT TASK RUNNER FINISHED: 5 tasks ran successfully. 

