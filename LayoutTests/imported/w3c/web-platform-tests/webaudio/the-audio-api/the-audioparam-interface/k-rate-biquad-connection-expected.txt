
PASS # AUDIT TASK RUNNER STARTED. 
PASS Executing "Frequency AudioParam" 
PASS Executing "Q AudioParam" 
PASS Executing "Gain AudioParam" 
PASS Executing "Detune AudioParam" 
PASS Executing "All k-rate inputs" 
PASS Audit report 
PASS > [Frequency AudioParam] k-rate input works 
PASS   frequency: new OscillatorNode(context, {frequency: 440}) did not throw an exception. 
PASS   Reference BiquadFilterNode(c, {"type":"lowpass","frequency":0}) did not throw an exception. 
PASS   refNode.frequency.setValueAtTime(880,0) did not throw an exception. 
PASS   refNode.frequency.linearRampToValueAtTime.(0,0.125) did not throw an exception. 
PASS   Test BiquadFilterNode(context, {"type":"lowpass","frequency":0}) did not throw an exception. 
PASS   frequency: mod.offset.setValueAtTime(880,0) did not throw an exception. 
PASS   frequency: mod.offset.linearRampToValueAtTime(0,0.125) did not throw an exception. 
PASS   Expected k-rate frequency with automation output[0:2047] is not constantly 0 (contains 1023 different values). 
PASS   Expected k-rate frequency with automation output[2048:] contains only the constant 0. 
PASS   k-rate frequency with input: output[0,2048] equals [0,0.02839340642094612,0.1450495570898056,0.36942505836486816,0.6520541310310364,0.9131436347961426,1.0783560276031494,1.101273536682129,0.970712423324585,0.7065790295600891,0.3498469591140747,-0.048511654138565063,-0.4367612600326538,-0.7688571810722351,-1.0084279775619507,-1.131049394607544...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS   k-rate frequency with input: output[2048:] equals [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS < [Frequency AudioParam] All assertions passed. (total 11 assertions) 
PASS > [Q AudioParam] k-rate input works 
PASS   Q: new OscillatorNode(context, {frequency: 1760}) did not throw an exception. 
PASS   Reference BiquadFilterNode(c, {"type":"bandpass","frequency":440,"Q":0}) did not throw an exception. 
PASS   refNode.Q.setValueAtTime(0,0) did not throw an exception. 
PASS   refNode.Q.linearRampToValueAtTime.(100,0.125) did not throw an exception. 
PASS   Test BiquadFilterNode(context, {"type":"bandpass","frequency":440,"Q":0}) did not throw an exception. 
PASS   Q: mod.offset.setValueAtTime(0,0) did not throw an exception. 
PASS   Q: mod.offset.linearRampToValueAtTime(100,0.125) did not throw an exception. 
PASS   k-rate Q with input: output[0,2048] equals [0,0.9757022261619568,0.4275550842285156,-0.7883464097976685,-0.7730104327201843,0.4496113359928131,0.9700312614440918,-0.024541210383176804,-0.9807853102684021,-0.40524131059646606,0.803207516670227,0.7572088241577148,-0.47139671444892883,-0.963776171207428,0.04906774312257767,0.9852776527404785...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS   k-rate Q with input: output[2048:] equals [0.0014363827649503946,0.002817160449922085,0.00458274781703949,0.0029107481241226196,-0.0010678415419533849,-0.002866921480745077,-0.0014562715077772737,-0.0006699467194266617,-0.0030350678134709597,-0.005679760593920946,-0.0047274441458284855,-0.0013245472218841314,0.00010962043597828597,-0.001317734713666141,-0.0017317384481430054,0.00127205322496593...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS < [Q AudioParam] All assertions passed. (total 9 assertions) 
PASS > [Gain AudioParam] k-rate input works 
PASS   gain: new OscillatorNode(context, {frequency: 1760}) did not throw an exception. 
PASS   Reference BiquadFilterNode(c, {"type":"peaking","frequency":1760,"Q":100,"gain":0}) did not throw an exception. 
PASS   refNode.gain.setValueAtTime(0,0) did not throw an exception. 
PASS   refNode.gain.linearRampToValueAtTime.(-100,0.125) did not throw an exception. 
PASS   Test BiquadFilterNode(context, {"type":"peaking","frequency":1760,"Q":100,"gain":0}) did not throw an exception. 
PASS   gain: mod.offset.setValueAtTime(0,0) did not throw an exception. 
PASS   gain: mod.offset.linearRampToValueAtTime(-100,0.125) did not throw an exception. 
PASS   k-rate gain with input: output[0,2048] equals [0,0.9757022261619568,0.4275550842285156,-0.7883464097976685,-0.7730104327201843,0.4496113359928131,0.9700312614440918,-0.024541210383176804,-0.9807853102684021,-0.40524131059646606,0.803207516670227,0.7572088241577148,-0.47139671444892883,-0.963776171207428,0.04906774312257767,0.9852776527404785...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS   k-rate gain with input: output[2048:] equals [-2.541378663067917e-8,0.000009754570783115923,0.000004249519861332374,-0.000007842072591301985,-0.000007727100637566764,0.0000045114124986866955,0.000009713860890769865,-2.3160691853263415e-7,-0.00000981420907919528,-0.000004036940936202882,0.000008015227649593726,0.0000075675907282857224,-0.000004711510882771108,-0.00000969239954429213,5.358074872674479e-7,0.000009799651706998702...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS < [Gain AudioParam] All assertions passed. (total 9 assertions) 
PASS > [Detune AudioParam] k-rate input works 
PASS   detune: new OscillatorNode(context, {frequency: 440}) did not throw an exception. 
PASS   Reference BiquadFilterNode(c, {"type":"lowpass","frequency":2200,"detune":0,"gain":0}) did not throw an exception. 
PASS   refNode.detune.setValueAtTime(0,0) did not throw an exception. 
PASS   refNode.detune.linearRampToValueAtTime.(-13323.945370094427,0.125) did not throw an exception. 
PASS   Test BiquadFilterNode(context, {"type":"lowpass","frequency":2200,"detune":0,"gain":0}) did not throw an exception. 
PASS   detune: mod.offset.setValueAtTime(0,0) did not throw an exception. 
PASS   detune: mod.offset.linearRampToValueAtTime(-13323.945370094427,0.125) did not throw an exception. 
PASS   k-rate detune with input: output[0,2048] equals [0,0.12810896337032318,0.47732436656951904,0.8133140802383423,0.9599840044975281,0.998393177986145,0.9618628621101379,0.8107287883758545,0.5545527338981628,0.24036026000976562,-0.09643326699733734,-0.424831748008728,-0.706647515296936,-0.9075677394866943,-1.0057729482650757,-0.9910215735435486...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS   k-rate detune with input: output[2048:] equals [0.005765492562204599,0.005749262869358063,0.005733230616897345,0.005717562511563301,0.005702386610209942,0.005687775555998087,0.0056737386621534824,0.005660221446305513,0.005647111684083939,0.005634252447634935,0.005621457472443581,0.0056085363030433655,0.005595311988145113,0.005581642501056194,0.005567437969148159,0.005552668124437332...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS < [Detune AudioParam] All assertions passed. (total 9 assertions) 
PASS > [All k-rate inputs]  
PASS   Create: refNode = new BiquadFilterNode(context, {"type":"peaking","frequency":0,"detune":0,"gain":0,"Q":0}) did not throw an exception. 
PASS   Create: tstNode = new BiquadFilterNode(context, {"type":"peaking","frequency":0,"detune":0,"gain":0,"Q":0}) did not throw an exception. 
PASS   Set rate: refNode[frequency].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: tstNode[frequency].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: refNode[Q].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: tstNode[Q].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: refNode[gain].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: tstNode[gain].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: refNode[detune].automationRate = 'k-rate' did not throw an exception. 
PASS   Set rate: tstNode[detune].automationRate = 'k-rate' did not throw an exception. 
PASS   Create: mod[frequency] = new ConstantSourceNode(context, {offset: 0}) did not throw an exception. 
PASS   Set rate: mod[frequency].offset.automationRate = 'a-rate' did not throw an exception. 
PASS   Create: mod[Q] = new ConstantSourceNode(context, {offset: 0}) did not throw an exception. 
PASS   Set rate: mod[Q].offset.automationRate = 'a-rate' did not throw an exception. 
PASS   Create: mod[gain] = new ConstantSourceNode(context, {offset: 0}) did not throw an exception. 
PASS   Set rate: mod[gain].offset.automationRate = 'a-rate' did not throw an exception. 
PASS   Create: mod[detune] = new ConstantSourceNode(context, {offset: 0}) did not throw an exception. 
PASS   Set rate: mod[detune].offset.automationRate = 'a-rate' did not throw an exception. 
PASS   Automate 0: refNode.frequency.setValueAtTime(1760, 0) did not throw an exception. 
PASS   Automate 0: mod[frequency].offset.setValueAtTime(1760, 0) did not throw an exception. 
PASS   Automate 0: refNode.Q.setValueAtTime(0, 0) did not throw an exception. 
PASS   Automate 0: mod[Q].offset.setValueAtTime(0, 0) did not throw an exception. 
PASS   Automate 0: refNode.gain.setValueAtTime(0, 0) did not throw an exception. 
PASS   Automate 0: mod[gain].offset.setValueAtTime(0, 0) did not throw an exception. 
PASS   Automate 0: refNode.detune.setValueAtTime(4800, 0) did not throw an exception. 
PASS   Automate 0: mod[detune].offset.setValueAtTime(4800, 0) did not throw an exception. 
PASS   Automate 1: refNode[frequency].linearRampToValueAtTime(440, 0.125) did not throw an exception. 
PASS   Automate 1: mod[frequency].offset.linearRampToValueAtTime(440, 0.125) did not throw an exception. 
PASS   Automate 1: refNode[Q].linearRampToValueAtTime(40, 0.125) did not throw an exception. 
PASS   Automate 1: mod[Q].offset.linearRampToValueAtTime(40, 0.125) did not throw an exception. 
PASS   Automate 1: refNode[gain].linearRampToValueAtTime(-100, 0.125) did not throw an exception. 
PASS   Automate 1: mod[gain].offset.linearRampToValueAtTime(-100, 0.125) did not throw an exception. 
PASS   Automate 1: refNode[detune].linearRampToValueAtTime(0, 0.125) did not throw an exception. 
PASS   Automate 1: mod[detune].offset.linearRampToValueAtTime(0, 0.125) did not throw an exception. 
PASS   Connect: mod[frequency].connect(tstNode.frequency) did not throw an exception. 
PASS   Connect: mod[Q].connect(tstNode.Q) did not throw an exception. 
PASS   Connect: mod[gain].connect(tstNode.gain) did not throw an exception. 
PASS   Connect: mod[detune].connect(tstNode.detune) did not throw an exception. 
PASS   Start: mod[frequency].start() did not throw an exception. 
PASS   Start: mod[Q].start() did not throw an exception. 
PASS   Start: mod[gain].start() did not throw an exception. 
PASS   Start: mod[detune].start() did not throw an exception. 
PASS   All k-rate AudioParams is not constantly 0 (contains 4094 different values). 
PASS   All k-rate AudioParams equals [0,0.3311063051223755,0.6248595118522644,0.8481203317642212,0.9757022261619568,0.9932120442390442,0.898674488067627,0.7027547955513,0.4275550842285156,0.10412158071994781,-0.23105812072753906,-0.5401715040206909,-0.7883464097976685,-0.9475855827331543,-0.9999247193336487,-0.9394593238830566...] with an element-wise tolerance of {"absoluteThreshold":0,"relativeThreshold":0}. 
PASS < [All k-rate inputs] All assertions passed. (total 44 assertions) 
PASS # AUDIT TASK RUNNER FINISHED: 5 tasks ran successfully. 

