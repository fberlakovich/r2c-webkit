Blocked access to external URL http://site.example/
Blocked access to external URL http://site.example/path???@#l
Implementers looking to fix bugs might want to use the original version of this suite's test framework, which conveniently aggregates similar errors and only reports failures. This file is (part of) the authoritative conformance test suite, and is suitable for incorporation into automated test suites.

(Note: missing tests for types tokenlist, settable tokenlist.)


PASS a.title: typeof IDL attribute 
PASS a.title: IDL get with DOM attribute unset 
PASS a.title: setAttribute() to "" followed by getAttribute() 
PASS a.title: setAttribute() to "" followed by IDL get 
PASS a.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.title: setAttribute() to undefined followed by getAttribute() 
PASS a.title: setAttribute() to undefined followed by IDL get 
PASS a.title: setAttribute() to 7 followed by getAttribute() 
PASS a.title: setAttribute() to 7 followed by IDL get 
PASS a.title: setAttribute() to 1.5 followed by getAttribute() 
PASS a.title: setAttribute() to 1.5 followed by IDL get 
PASS a.title: setAttribute() to true followed by getAttribute() 
PASS a.title: setAttribute() to true followed by IDL get 
PASS a.title: setAttribute() to false followed by getAttribute() 
PASS a.title: setAttribute() to false followed by IDL get 
PASS a.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.title: setAttribute() to NaN followed by getAttribute() 
PASS a.title: setAttribute() to NaN followed by IDL get 
PASS a.title: setAttribute() to Infinity followed by getAttribute() 
PASS a.title: setAttribute() to Infinity followed by IDL get 
PASS a.title: setAttribute() to -Infinity followed by getAttribute() 
PASS a.title: setAttribute() to -Infinity followed by IDL get 
PASS a.title: setAttribute() to "\0" followed by getAttribute() 
PASS a.title: setAttribute() to "\0" followed by IDL get 
PASS a.title: setAttribute() to null followed by getAttribute() 
PASS a.title: setAttribute() to null followed by IDL get 
PASS a.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.title: setAttribute() to object "test-toString" followed by IDL get 
PASS a.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.title: IDL set to "" should not throw 
PASS a.title: IDL set to "" followed by getAttribute() 
PASS a.title: IDL set to "" followed by IDL get 
PASS a.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.title: IDL set to undefined should not throw 
PASS a.title: IDL set to undefined followed by getAttribute() 
PASS a.title: IDL set to undefined followed by IDL get 
PASS a.title: IDL set to 7 should not throw 
PASS a.title: IDL set to 7 followed by getAttribute() 
PASS a.title: IDL set to 7 followed by IDL get 
PASS a.title: IDL set to 1.5 should not throw 
PASS a.title: IDL set to 1.5 followed by getAttribute() 
PASS a.title: IDL set to 1.5 followed by IDL get 
PASS a.title: IDL set to true should not throw 
PASS a.title: IDL set to true followed by getAttribute() 
PASS a.title: IDL set to true followed by IDL get 
PASS a.title: IDL set to false should not throw 
PASS a.title: IDL set to false followed by getAttribute() 
PASS a.title: IDL set to false followed by IDL get 
PASS a.title: IDL set to object "[object Object]" should not throw 
PASS a.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.title: IDL set to object "[object Object]" followed by IDL get 
PASS a.title: IDL set to NaN should not throw 
PASS a.title: IDL set to NaN followed by getAttribute() 
PASS a.title: IDL set to NaN followed by IDL get 
PASS a.title: IDL set to Infinity should not throw 
PASS a.title: IDL set to Infinity followed by getAttribute() 
PASS a.title: IDL set to Infinity followed by IDL get 
PASS a.title: IDL set to -Infinity should not throw 
PASS a.title: IDL set to -Infinity followed by getAttribute() 
PASS a.title: IDL set to -Infinity followed by IDL get 
PASS a.title: IDL set to "\0" should not throw 
PASS a.title: IDL set to "\0" followed by getAttribute() 
PASS a.title: IDL set to "\0" followed by IDL get 
PASS a.title: IDL set to null should not throw 
PASS a.title: IDL set to null followed by getAttribute() 
PASS a.title: IDL set to null followed by IDL get 
PASS a.title: IDL set to object "test-toString" should not throw 
PASS a.title: IDL set to object "test-toString" followed by getAttribute() 
PASS a.title: IDL set to object "test-toString" followed by IDL get 
PASS a.title: IDL set to object "test-valueOf" should not throw 
PASS a.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.title: IDL set to object "test-valueOf" followed by IDL get 
PASS a.lang: typeof IDL attribute 
PASS a.lang: IDL get with DOM attribute unset 
PASS a.lang: setAttribute() to "" followed by getAttribute() 
PASS a.lang: setAttribute() to "" followed by IDL get 
PASS a.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.lang: setAttribute() to undefined followed by getAttribute() 
PASS a.lang: setAttribute() to undefined followed by IDL get 
PASS a.lang: setAttribute() to 7 followed by getAttribute() 
PASS a.lang: setAttribute() to 7 followed by IDL get 
PASS a.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS a.lang: setAttribute() to 1.5 followed by IDL get 
PASS a.lang: setAttribute() to true followed by getAttribute() 
PASS a.lang: setAttribute() to true followed by IDL get 
PASS a.lang: setAttribute() to false followed by getAttribute() 
PASS a.lang: setAttribute() to false followed by IDL get 
PASS a.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.lang: setAttribute() to NaN followed by getAttribute() 
PASS a.lang: setAttribute() to NaN followed by IDL get 
PASS a.lang: setAttribute() to Infinity followed by getAttribute() 
PASS a.lang: setAttribute() to Infinity followed by IDL get 
PASS a.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS a.lang: setAttribute() to -Infinity followed by IDL get 
PASS a.lang: setAttribute() to "\0" followed by getAttribute() 
PASS a.lang: setAttribute() to "\0" followed by IDL get 
PASS a.lang: setAttribute() to null followed by getAttribute() 
PASS a.lang: setAttribute() to null followed by IDL get 
PASS a.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS a.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.lang: IDL set to "" should not throw 
PASS a.lang: IDL set to "" followed by getAttribute() 
PASS a.lang: IDL set to "" followed by IDL get 
PASS a.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.lang: IDL set to undefined should not throw 
PASS a.lang: IDL set to undefined followed by getAttribute() 
PASS a.lang: IDL set to undefined followed by IDL get 
PASS a.lang: IDL set to 7 should not throw 
PASS a.lang: IDL set to 7 followed by getAttribute() 
PASS a.lang: IDL set to 7 followed by IDL get 
PASS a.lang: IDL set to 1.5 should not throw 
PASS a.lang: IDL set to 1.5 followed by getAttribute() 
PASS a.lang: IDL set to 1.5 followed by IDL get 
PASS a.lang: IDL set to true should not throw 
PASS a.lang: IDL set to true followed by getAttribute() 
PASS a.lang: IDL set to true followed by IDL get 
PASS a.lang: IDL set to false should not throw 
PASS a.lang: IDL set to false followed by getAttribute() 
PASS a.lang: IDL set to false followed by IDL get 
PASS a.lang: IDL set to object "[object Object]" should not throw 
PASS a.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.lang: IDL set to object "[object Object]" followed by IDL get 
PASS a.lang: IDL set to NaN should not throw 
PASS a.lang: IDL set to NaN followed by getAttribute() 
PASS a.lang: IDL set to NaN followed by IDL get 
PASS a.lang: IDL set to Infinity should not throw 
PASS a.lang: IDL set to Infinity followed by getAttribute() 
PASS a.lang: IDL set to Infinity followed by IDL get 
PASS a.lang: IDL set to -Infinity should not throw 
PASS a.lang: IDL set to -Infinity followed by getAttribute() 
PASS a.lang: IDL set to -Infinity followed by IDL get 
PASS a.lang: IDL set to "\0" should not throw 
PASS a.lang: IDL set to "\0" followed by getAttribute() 
PASS a.lang: IDL set to "\0" followed by IDL get 
PASS a.lang: IDL set to null should not throw 
PASS a.lang: IDL set to null followed by getAttribute() 
PASS a.lang: IDL set to null followed by IDL get 
PASS a.lang: IDL set to object "test-toString" should not throw 
PASS a.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS a.lang: IDL set to object "test-toString" followed by IDL get 
PASS a.lang: IDL set to object "test-valueOf" should not throw 
PASS a.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS a.dir: typeof IDL attribute 
PASS a.dir: IDL get with DOM attribute unset 
PASS a.dir: setAttribute() to "" followed by getAttribute() 
PASS a.dir: setAttribute() to "" followed by IDL get 
PASS a.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.dir: setAttribute() to undefined followed by getAttribute() 
PASS a.dir: setAttribute() to undefined followed by IDL get 
PASS a.dir: setAttribute() to 7 followed by getAttribute() 
PASS a.dir: setAttribute() to 7 followed by IDL get 
PASS a.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS a.dir: setAttribute() to 1.5 followed by IDL get 
PASS a.dir: setAttribute() to true followed by getAttribute() 
PASS a.dir: setAttribute() to true followed by IDL get 
PASS a.dir: setAttribute() to false followed by getAttribute() 
PASS a.dir: setAttribute() to false followed by IDL get 
PASS a.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.dir: setAttribute() to NaN followed by getAttribute() 
PASS a.dir: setAttribute() to NaN followed by IDL get 
PASS a.dir: setAttribute() to Infinity followed by getAttribute() 
PASS a.dir: setAttribute() to Infinity followed by IDL get 
PASS a.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS a.dir: setAttribute() to -Infinity followed by IDL get 
PASS a.dir: setAttribute() to "\0" followed by getAttribute() 
PASS a.dir: setAttribute() to "\0" followed by IDL get 
PASS a.dir: setAttribute() to null followed by getAttribute() 
PASS a.dir: setAttribute() to null followed by IDL get 
PASS a.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS a.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS a.dir: setAttribute() to "ltr" followed by IDL get 
PASS a.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS a.dir: setAttribute() to "xltr" followed by IDL get 
PASS a.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS a.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS a.dir: setAttribute() to "tr" followed by getAttribute() 
PASS a.dir: setAttribute() to "tr" followed by IDL get 
PASS a.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS a.dir: setAttribute() to "LTR" followed by IDL get 
PASS a.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS a.dir: setAttribute() to "rtl" followed by IDL get 
PASS a.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS a.dir: setAttribute() to "xrtl" followed by IDL get 
PASS a.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS a.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS a.dir: setAttribute() to "tl" followed by getAttribute() 
PASS a.dir: setAttribute() to "tl" followed by IDL get 
PASS a.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS a.dir: setAttribute() to "RTL" followed by IDL get 
PASS a.dir: setAttribute() to "auto" followed by getAttribute() 
PASS a.dir: setAttribute() to "auto" followed by IDL get 
PASS a.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS a.dir: setAttribute() to "xauto" followed by IDL get 
PASS a.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS a.dir: setAttribute() to "auto\0" followed by IDL get 
PASS a.dir: setAttribute() to "uto" followed by getAttribute() 
PASS a.dir: setAttribute() to "uto" followed by IDL get 
PASS a.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS a.dir: setAttribute() to "AUTO" followed by IDL get 
PASS a.dir: IDL set to "" should not throw 
PASS a.dir: IDL set to "" followed by getAttribute() 
PASS a.dir: IDL set to "" followed by IDL get 
PASS a.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.dir: IDL set to undefined should not throw 
PASS a.dir: IDL set to undefined followed by getAttribute() 
PASS a.dir: IDL set to undefined followed by IDL get 
PASS a.dir: IDL set to 7 should not throw 
PASS a.dir: IDL set to 7 followed by getAttribute() 
PASS a.dir: IDL set to 7 followed by IDL get 
PASS a.dir: IDL set to 1.5 should not throw 
PASS a.dir: IDL set to 1.5 followed by getAttribute() 
PASS a.dir: IDL set to 1.5 followed by IDL get 
PASS a.dir: IDL set to true should not throw 
PASS a.dir: IDL set to true followed by getAttribute() 
PASS a.dir: IDL set to true followed by IDL get 
PASS a.dir: IDL set to false should not throw 
PASS a.dir: IDL set to false followed by getAttribute() 
PASS a.dir: IDL set to false followed by IDL get 
PASS a.dir: IDL set to object "[object Object]" should not throw 
PASS a.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.dir: IDL set to object "[object Object]" followed by IDL get 
PASS a.dir: IDL set to NaN should not throw 
PASS a.dir: IDL set to NaN followed by getAttribute() 
PASS a.dir: IDL set to NaN followed by IDL get 
PASS a.dir: IDL set to Infinity should not throw 
PASS a.dir: IDL set to Infinity followed by getAttribute() 
PASS a.dir: IDL set to Infinity followed by IDL get 
PASS a.dir: IDL set to -Infinity should not throw 
PASS a.dir: IDL set to -Infinity followed by getAttribute() 
PASS a.dir: IDL set to -Infinity followed by IDL get 
PASS a.dir: IDL set to "\0" should not throw 
PASS a.dir: IDL set to "\0" followed by getAttribute() 
PASS a.dir: IDL set to "\0" followed by IDL get 
PASS a.dir: IDL set to null should not throw 
PASS a.dir: IDL set to null followed by IDL get 
PASS a.dir: IDL set to object "test-toString" should not throw 
PASS a.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS a.dir: IDL set to object "test-toString" followed by IDL get 
PASS a.dir: IDL set to object "test-valueOf" should not throw 
PASS a.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS a.dir: IDL set to "ltr" should not throw 
PASS a.dir: IDL set to "ltr" followed by getAttribute() 
PASS a.dir: IDL set to "ltr" followed by IDL get 
PASS a.dir: IDL set to "xltr" should not throw 
PASS a.dir: IDL set to "xltr" followed by getAttribute() 
PASS a.dir: IDL set to "xltr" followed by IDL get 
PASS a.dir: IDL set to "ltr\0" should not throw 
PASS a.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS a.dir: IDL set to "ltr\0" followed by IDL get 
PASS a.dir: IDL set to "tr" should not throw 
PASS a.dir: IDL set to "tr" followed by getAttribute() 
PASS a.dir: IDL set to "tr" followed by IDL get 
PASS a.dir: IDL set to "LTR" should not throw 
PASS a.dir: IDL set to "LTR" followed by getAttribute() 
PASS a.dir: IDL set to "LTR" followed by IDL get 
PASS a.dir: IDL set to "rtl" should not throw 
PASS a.dir: IDL set to "rtl" followed by getAttribute() 
PASS a.dir: IDL set to "rtl" followed by IDL get 
PASS a.dir: IDL set to "xrtl" should not throw 
PASS a.dir: IDL set to "xrtl" followed by getAttribute() 
PASS a.dir: IDL set to "xrtl" followed by IDL get 
PASS a.dir: IDL set to "rtl\0" should not throw 
PASS a.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS a.dir: IDL set to "rtl\0" followed by IDL get 
PASS a.dir: IDL set to "tl" should not throw 
PASS a.dir: IDL set to "tl" followed by getAttribute() 
PASS a.dir: IDL set to "tl" followed by IDL get 
PASS a.dir: IDL set to "RTL" should not throw 
PASS a.dir: IDL set to "RTL" followed by getAttribute() 
PASS a.dir: IDL set to "RTL" followed by IDL get 
PASS a.dir: IDL set to "auto" should not throw 
PASS a.dir: IDL set to "auto" followed by getAttribute() 
PASS a.dir: IDL set to "auto" followed by IDL get 
PASS a.dir: IDL set to "xauto" should not throw 
PASS a.dir: IDL set to "xauto" followed by getAttribute() 
PASS a.dir: IDL set to "xauto" followed by IDL get 
PASS a.dir: IDL set to "auto\0" should not throw 
PASS a.dir: IDL set to "auto\0" followed by getAttribute() 
PASS a.dir: IDL set to "auto\0" followed by IDL get 
PASS a.dir: IDL set to "uto" should not throw 
PASS a.dir: IDL set to "uto" followed by getAttribute() 
PASS a.dir: IDL set to "uto" followed by IDL get 
PASS a.dir: IDL set to "AUTO" should not throw 
PASS a.dir: IDL set to "AUTO" followed by getAttribute() 
PASS a.dir: IDL set to "AUTO" followed by IDL get 
PASS a.className (<a class>): typeof IDL attribute 
PASS a.className (<a class>): IDL get with DOM attribute unset 
PASS a.className (<a class>): setAttribute() to "" followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to "" followed by IDL get 
PASS a.className (<a class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.className (<a class>): setAttribute() to undefined followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to undefined followed by IDL get 
PASS a.className (<a class>): setAttribute() to 7 followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to 7 followed by IDL get 
PASS a.className (<a class>): setAttribute() to 1.5 followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to 1.5 followed by IDL get 
PASS a.className (<a class>): setAttribute() to true followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to true followed by IDL get 
PASS a.className (<a class>): setAttribute() to false followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to false followed by IDL get 
PASS a.className (<a class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS a.className (<a class>): setAttribute() to NaN followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to NaN followed by IDL get 
PASS a.className (<a class>): setAttribute() to Infinity followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to Infinity followed by IDL get 
PASS a.className (<a class>): setAttribute() to -Infinity followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to -Infinity followed by IDL get 
PASS a.className (<a class>): setAttribute() to "\0" followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to "\0" followed by IDL get 
PASS a.className (<a class>): setAttribute() to null followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to null followed by IDL get 
PASS a.className (<a class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to object "test-toString" followed by IDL get 
PASS a.className (<a class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.className (<a class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.className (<a class>): IDL set to "" should not throw 
PASS a.className (<a class>): IDL set to "" followed by getAttribute() 
PASS a.className (<a class>): IDL set to "" followed by IDL get 
PASS a.className (<a class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.className (<a class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.className (<a class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.className (<a class>): IDL set to undefined should not throw 
PASS a.className (<a class>): IDL set to undefined followed by getAttribute() 
PASS a.className (<a class>): IDL set to undefined followed by IDL get 
PASS a.className (<a class>): IDL set to 7 should not throw 
PASS a.className (<a class>): IDL set to 7 followed by getAttribute() 
PASS a.className (<a class>): IDL set to 7 followed by IDL get 
PASS a.className (<a class>): IDL set to 1.5 should not throw 
PASS a.className (<a class>): IDL set to 1.5 followed by getAttribute() 
PASS a.className (<a class>): IDL set to 1.5 followed by IDL get 
PASS a.className (<a class>): IDL set to true should not throw 
PASS a.className (<a class>): IDL set to true followed by getAttribute() 
PASS a.className (<a class>): IDL set to true followed by IDL get 
PASS a.className (<a class>): IDL set to false should not throw 
PASS a.className (<a class>): IDL set to false followed by getAttribute() 
PASS a.className (<a class>): IDL set to false followed by IDL get 
PASS a.className (<a class>): IDL set to object "[object Object]" should not throw 
PASS a.className (<a class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS a.className (<a class>): IDL set to object "[object Object]" followed by IDL get 
PASS a.className (<a class>): IDL set to NaN should not throw 
PASS a.className (<a class>): IDL set to NaN followed by getAttribute() 
PASS a.className (<a class>): IDL set to NaN followed by IDL get 
PASS a.className (<a class>): IDL set to Infinity should not throw 
PASS a.className (<a class>): IDL set to Infinity followed by getAttribute() 
PASS a.className (<a class>): IDL set to Infinity followed by IDL get 
PASS a.className (<a class>): IDL set to -Infinity should not throw 
PASS a.className (<a class>): IDL set to -Infinity followed by getAttribute() 
PASS a.className (<a class>): IDL set to -Infinity followed by IDL get 
PASS a.className (<a class>): IDL set to "\0" should not throw 
PASS a.className (<a class>): IDL set to "\0" followed by getAttribute() 
PASS a.className (<a class>): IDL set to "\0" followed by IDL get 
PASS a.className (<a class>): IDL set to null should not throw 
PASS a.className (<a class>): IDL set to null followed by getAttribute() 
PASS a.className (<a class>): IDL set to null followed by IDL get 
PASS a.className (<a class>): IDL set to object "test-toString" should not throw 
PASS a.className (<a class>): IDL set to object "test-toString" followed by getAttribute() 
PASS a.className (<a class>): IDL set to object "test-toString" followed by IDL get 
PASS a.className (<a class>): IDL set to object "test-valueOf" should not throw 
PASS a.className (<a class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.className (<a class>): IDL set to object "test-valueOf" followed by IDL get 
PASS a.hidden: typeof IDL attribute 
PASS a.hidden: IDL get with DOM attribute unset 
PASS a.hidden: setAttribute() to "" followed by getAttribute() 
PASS a.hidden: setAttribute() to "" followed by IDL get 
PASS a.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS a.hidden: setAttribute() to " foo " followed by IDL get 
PASS a.hidden: setAttribute() to undefined followed by getAttribute() 
PASS a.hidden: setAttribute() to undefined followed by IDL get 
PASS a.hidden: setAttribute() to null followed by getAttribute() 
PASS a.hidden: setAttribute() to null followed by IDL get 
PASS a.hidden: setAttribute() to 7 followed by getAttribute() 
PASS a.hidden: setAttribute() to 7 followed by IDL get 
PASS a.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS a.hidden: setAttribute() to 1.5 followed by IDL get 
PASS a.hidden: setAttribute() to true followed by getAttribute() 
PASS a.hidden: setAttribute() to true followed by IDL get 
PASS a.hidden: setAttribute() to false followed by getAttribute() 
PASS a.hidden: setAttribute() to false followed by IDL get 
PASS a.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.hidden: setAttribute() to NaN followed by getAttribute() 
PASS a.hidden: setAttribute() to NaN followed by IDL get 
PASS a.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS a.hidden: setAttribute() to Infinity followed by IDL get 
PASS a.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS a.hidden: setAttribute() to -Infinity followed by IDL get 
PASS a.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS a.hidden: setAttribute() to "\0" followed by IDL get 
PASS a.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS a.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS a.hidden: setAttribute() to "hidden" followed by IDL get 
PASS a.hidden: IDL set to "" should not throw 
PASS a.hidden: IDL set to "" followed by hasAttribute() 
PASS a.hidden: IDL set to "" followed by IDL get 
PASS a.hidden: IDL set to " foo " should not throw 
PASS a.hidden: IDL set to " foo " followed by hasAttribute() 
PASS a.hidden: IDL set to " foo " followed by IDL get 
PASS a.hidden: IDL set to undefined should not throw 
PASS a.hidden: IDL set to undefined followed by hasAttribute() 
PASS a.hidden: IDL set to undefined followed by IDL get 
PASS a.hidden: IDL set to null should not throw 
PASS a.hidden: IDL set to null followed by hasAttribute() 
PASS a.hidden: IDL set to null followed by IDL get 
PASS a.hidden: IDL set to 7 should not throw 
PASS a.hidden: IDL set to 7 followed by hasAttribute() 
PASS a.hidden: IDL set to 7 followed by IDL get 
PASS a.hidden: IDL set to 1.5 should not throw 
PASS a.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS a.hidden: IDL set to 1.5 followed by IDL get 
PASS a.hidden: IDL set to true should not throw 
PASS a.hidden: IDL set to true followed by hasAttribute() 
PASS a.hidden: IDL set to true followed by IDL get 
PASS a.hidden: IDL set to false should not throw 
PASS a.hidden: IDL set to false followed by hasAttribute() 
PASS a.hidden: IDL set to false followed by IDL get 
PASS a.hidden: IDL set to object "[object Object]" should not throw 
PASS a.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS a.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS a.hidden: IDL set to NaN should not throw 
PASS a.hidden: IDL set to NaN followed by hasAttribute() 
PASS a.hidden: IDL set to NaN followed by IDL get 
PASS a.hidden: IDL set to Infinity should not throw 
PASS a.hidden: IDL set to Infinity followed by hasAttribute() 
PASS a.hidden: IDL set to Infinity followed by IDL get 
PASS a.hidden: IDL set to -Infinity should not throw 
PASS a.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS a.hidden: IDL set to -Infinity followed by IDL get 
PASS a.hidden: IDL set to "\0" should not throw 
PASS a.hidden: IDL set to "\0" followed by hasAttribute() 
PASS a.hidden: IDL set to "\0" followed by IDL get 
PASS a.hidden: IDL set to object "test-toString" should not throw 
PASS a.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS a.hidden: IDL set to object "test-toString" followed by IDL get 
PASS a.hidden: IDL set to object "test-valueOf" should not throw 
PASS a.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS a.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS a.accessKey: typeof IDL attribute 
PASS a.accessKey: IDL get with DOM attribute unset 
PASS a.accessKey: setAttribute() to "" followed by getAttribute() 
PASS a.accessKey: setAttribute() to "" followed by IDL get 
PASS a.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS a.accessKey: setAttribute() to undefined followed by IDL get 
PASS a.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS a.accessKey: setAttribute() to 7 followed by IDL get 
PASS a.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS a.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS a.accessKey: setAttribute() to true followed by getAttribute() 
PASS a.accessKey: setAttribute() to true followed by IDL get 
PASS a.accessKey: setAttribute() to false followed by getAttribute() 
PASS a.accessKey: setAttribute() to false followed by IDL get 
PASS a.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS a.accessKey: setAttribute() to NaN followed by IDL get 
PASS a.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS a.accessKey: setAttribute() to Infinity followed by IDL get 
PASS a.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS a.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS a.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS a.accessKey: setAttribute() to "\0" followed by IDL get 
PASS a.accessKey: setAttribute() to null followed by getAttribute() 
PASS a.accessKey: setAttribute() to null followed by IDL get 
PASS a.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS a.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.accessKey: IDL set to "" should not throw 
PASS a.accessKey: IDL set to "" followed by getAttribute() 
PASS a.accessKey: IDL set to "" followed by IDL get 
PASS a.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.accessKey: IDL set to undefined should not throw 
PASS a.accessKey: IDL set to undefined followed by getAttribute() 
PASS a.accessKey: IDL set to undefined followed by IDL get 
PASS a.accessKey: IDL set to 7 should not throw 
PASS a.accessKey: IDL set to 7 followed by getAttribute() 
PASS a.accessKey: IDL set to 7 followed by IDL get 
PASS a.accessKey: IDL set to 1.5 should not throw 
PASS a.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS a.accessKey: IDL set to 1.5 followed by IDL get 
PASS a.accessKey: IDL set to true should not throw 
PASS a.accessKey: IDL set to true followed by getAttribute() 
PASS a.accessKey: IDL set to true followed by IDL get 
PASS a.accessKey: IDL set to false should not throw 
PASS a.accessKey: IDL set to false followed by getAttribute() 
PASS a.accessKey: IDL set to false followed by IDL get 
PASS a.accessKey: IDL set to object "[object Object]" should not throw 
PASS a.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS a.accessKey: IDL set to NaN should not throw 
PASS a.accessKey: IDL set to NaN followed by getAttribute() 
PASS a.accessKey: IDL set to NaN followed by IDL get 
PASS a.accessKey: IDL set to Infinity should not throw 
PASS a.accessKey: IDL set to Infinity followed by getAttribute() 
PASS a.accessKey: IDL set to Infinity followed by IDL get 
PASS a.accessKey: IDL set to -Infinity should not throw 
PASS a.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS a.accessKey: IDL set to -Infinity followed by IDL get 
PASS a.accessKey: IDL set to "\0" should not throw 
PASS a.accessKey: IDL set to "\0" followed by getAttribute() 
PASS a.accessKey: IDL set to "\0" followed by IDL get 
PASS a.accessKey: IDL set to null should not throw 
PASS a.accessKey: IDL set to null followed by getAttribute() 
PASS a.accessKey: IDL set to null followed by IDL get 
PASS a.accessKey: IDL set to object "test-toString" should not throw 
PASS a.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS a.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS a.accessKey: IDL set to object "test-valueOf" should not throw 
PASS a.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS a.tabIndex: typeof IDL attribute 
PASS a.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS a.tabIndex: setAttribute() to -36 followed by IDL get 
PASS a.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS a.tabIndex: setAttribute() to -1 followed by IDL get 
PASS a.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS a.tabIndex: setAttribute() to 0 followed by IDL get 
PASS a.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS a.tabIndex: setAttribute() to 1 followed by IDL get 
PASS a.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL a.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS a.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL a.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS a.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS a.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS a.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS a.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS a.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS a.tabIndex: setAttribute() to "0" followed by IDL get 
PASS a.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS a.tabIndex: setAttribute() to "1" followed by IDL get 
PASS a.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS a.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS a.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS a.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS a.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS a.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS a.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS a.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS a.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS a.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS a.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS a.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS a.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS a.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS a.tabIndex: IDL set to -36 should not throw 
PASS a.tabIndex: IDL set to -36 followed by getAttribute() 
PASS a.tabIndex: IDL set to -36 followed by IDL get 
PASS a.tabIndex: IDL set to -1 should not throw 
PASS a.tabIndex: IDL set to -1 followed by getAttribute() 
PASS a.tabIndex: IDL set to -1 followed by IDL get 
PASS a.tabIndex: IDL set to 0 should not throw 
PASS a.tabIndex: IDL set to 0 followed by getAttribute() 
PASS a.tabIndex: IDL set to 0 followed by IDL get 
PASS a.tabIndex: IDL set to 1 should not throw 
PASS a.tabIndex: IDL set to 1 followed by getAttribute() 
PASS a.tabIndex: IDL set to 1 followed by IDL get 
PASS a.tabIndex: IDL set to 2147483647 should not throw 
PASS a.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL a.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS a.tabIndex: IDL set to -2147483648 should not throw 
PASS a.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL a.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS a.target: typeof IDL attribute 
PASS a.target: IDL get with DOM attribute unset 
PASS a.target: setAttribute() to "" followed by getAttribute() 
PASS a.target: setAttribute() to "" followed by IDL get 
PASS a.target: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.target: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.target: setAttribute() to undefined followed by getAttribute() 
PASS a.target: setAttribute() to undefined followed by IDL get 
PASS a.target: setAttribute() to 7 followed by getAttribute() 
PASS a.target: setAttribute() to 7 followed by IDL get 
PASS a.target: setAttribute() to 1.5 followed by getAttribute() 
PASS a.target: setAttribute() to 1.5 followed by IDL get 
PASS a.target: setAttribute() to true followed by getAttribute() 
PASS a.target: setAttribute() to true followed by IDL get 
PASS a.target: setAttribute() to false followed by getAttribute() 
PASS a.target: setAttribute() to false followed by IDL get 
PASS a.target: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.target: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.target: setAttribute() to NaN followed by getAttribute() 
PASS a.target: setAttribute() to NaN followed by IDL get 
PASS a.target: setAttribute() to Infinity followed by getAttribute() 
PASS a.target: setAttribute() to Infinity followed by IDL get 
PASS a.target: setAttribute() to -Infinity followed by getAttribute() 
PASS a.target: setAttribute() to -Infinity followed by IDL get 
PASS a.target: setAttribute() to "\0" followed by getAttribute() 
PASS a.target: setAttribute() to "\0" followed by IDL get 
PASS a.target: setAttribute() to null followed by getAttribute() 
PASS a.target: setAttribute() to null followed by IDL get 
PASS a.target: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.target: setAttribute() to object "test-toString" followed by IDL get 
PASS a.target: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.target: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.target: IDL set to "" should not throw 
PASS a.target: IDL set to "" followed by getAttribute() 
PASS a.target: IDL set to "" followed by IDL get 
PASS a.target: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.target: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.target: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.target: IDL set to undefined should not throw 
PASS a.target: IDL set to undefined followed by getAttribute() 
PASS a.target: IDL set to undefined followed by IDL get 
PASS a.target: IDL set to 7 should not throw 
PASS a.target: IDL set to 7 followed by getAttribute() 
PASS a.target: IDL set to 7 followed by IDL get 
PASS a.target: IDL set to 1.5 should not throw 
PASS a.target: IDL set to 1.5 followed by getAttribute() 
PASS a.target: IDL set to 1.5 followed by IDL get 
PASS a.target: IDL set to true should not throw 
PASS a.target: IDL set to true followed by getAttribute() 
PASS a.target: IDL set to true followed by IDL get 
PASS a.target: IDL set to false should not throw 
PASS a.target: IDL set to false followed by getAttribute() 
PASS a.target: IDL set to false followed by IDL get 
PASS a.target: IDL set to object "[object Object]" should not throw 
PASS a.target: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.target: IDL set to object "[object Object]" followed by IDL get 
PASS a.target: IDL set to NaN should not throw 
PASS a.target: IDL set to NaN followed by getAttribute() 
PASS a.target: IDL set to NaN followed by IDL get 
PASS a.target: IDL set to Infinity should not throw 
PASS a.target: IDL set to Infinity followed by getAttribute() 
PASS a.target: IDL set to Infinity followed by IDL get 
PASS a.target: IDL set to -Infinity should not throw 
PASS a.target: IDL set to -Infinity followed by getAttribute() 
PASS a.target: IDL set to -Infinity followed by IDL get 
PASS a.target: IDL set to "\0" should not throw 
PASS a.target: IDL set to "\0" followed by getAttribute() 
PASS a.target: IDL set to "\0" followed by IDL get 
PASS a.target: IDL set to null should not throw 
PASS a.target: IDL set to null followed by getAttribute() 
PASS a.target: IDL set to null followed by IDL get 
PASS a.target: IDL set to object "test-toString" should not throw 
PASS a.target: IDL set to object "test-toString" followed by getAttribute() 
PASS a.target: IDL set to object "test-toString" followed by IDL get 
PASS a.target: IDL set to object "test-valueOf" should not throw 
PASS a.target: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.target: IDL set to object "test-valueOf" followed by IDL get 
FAIL a.download: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL a.download: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS a.download: setAttribute() to "" followed by getAttribute() 
FAIL a.download: setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS a.download: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL a.download: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS a.download: setAttribute() to undefined followed by getAttribute() 
FAIL a.download: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS a.download: setAttribute() to 7 followed by getAttribute() 
FAIL a.download: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS a.download: setAttribute() to 1.5 followed by getAttribute() 
FAIL a.download: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS a.download: setAttribute() to true followed by getAttribute() 
FAIL a.download: setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS a.download: setAttribute() to false followed by getAttribute() 
FAIL a.download: setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS a.download: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL a.download: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS a.download: setAttribute() to NaN followed by getAttribute() 
FAIL a.download: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS a.download: setAttribute() to Infinity followed by getAttribute() 
FAIL a.download: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS a.download: setAttribute() to -Infinity followed by getAttribute() 
FAIL a.download: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS a.download: setAttribute() to "\0" followed by getAttribute() 
FAIL a.download: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS a.download: setAttribute() to null followed by getAttribute() 
FAIL a.download: setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS a.download: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL a.download: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS a.download: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL a.download: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS a.download: IDL set to "" should not throw 
FAIL a.download: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS a.download: IDL set to "" followed by IDL get 
PASS a.download: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL a.download: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS a.download: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.download: IDL set to undefined should not throw 
FAIL a.download: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL a.download: IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS a.download: IDL set to 7 should not throw 
FAIL a.download: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL a.download: IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS a.download: IDL set to 1.5 should not throw 
FAIL a.download: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL a.download: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS a.download: IDL set to true should not throw 
FAIL a.download: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL a.download: IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS a.download: IDL set to false should not throw 
FAIL a.download: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL a.download: IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS a.download: IDL set to object "[object Object]" should not throw 
FAIL a.download: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL a.download: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS a.download: IDL set to NaN should not throw 
FAIL a.download: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL a.download: IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS a.download: IDL set to Infinity should not throw 
FAIL a.download: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL a.download: IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS a.download: IDL set to -Infinity should not throw 
FAIL a.download: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL a.download: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS a.download: IDL set to "\0" should not throw 
FAIL a.download: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS a.download: IDL set to "\0" followed by IDL get 
PASS a.download: IDL set to null should not throw 
FAIL a.download: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL a.download: IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS a.download: IDL set to object "test-toString" should not throw 
FAIL a.download: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL a.download: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS a.download: IDL set to object "test-valueOf" should not throw 
PASS a.download: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL a.download: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
PASS a.ping: typeof IDL attribute 
PASS a.ping: IDL get with DOM attribute unset 
PASS a.ping: setAttribute() to "" followed by getAttribute() 
PASS a.ping: setAttribute() to "" followed by IDL get 
PASS a.ping: setAttribute() to " foo   " followed by getAttribute() 
FAIL a.ping: setAttribute() to " foo   " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo   "
PASS a.ping: setAttribute() to "http://site.example/ foo  bar   baz" followed by getAttribute() 
FAIL a.ping: setAttribute() to "http://site.example/ foo  bar   baz" followed by IDL get assert_equals: expected "http://site.example/ http://localhost:8800/html/dom/foo http://localhost:8800/html/dom/bar http://localhost:8800/html/dom/baz" but got "http://site.example/ foo  bar   baz"
PASS a.ping: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL a.ping: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS a.ping: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL a.ping: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html http://localhost:8800/html/dom/reflection-text.html http://localhost:8800/html/dom/reflection-text.html http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS a.ping: setAttribute() to undefined followed by getAttribute() 
FAIL a.ping: setAttribute() to undefined followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/undefined" but got "undefined"
PASS a.ping: setAttribute() to 7 followed by getAttribute() 
FAIL a.ping: setAttribute() to 7 followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/7" but got "7"
PASS a.ping: setAttribute() to 1.5 followed by getAttribute() 
FAIL a.ping: setAttribute() to 1.5 followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/1.5" but got "1.5"
PASS a.ping: setAttribute() to true followed by getAttribute() 
FAIL a.ping: setAttribute() to true followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/true" but got "true"
PASS a.ping: setAttribute() to false followed by getAttribute() 
FAIL a.ping: setAttribute() to false followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/false" but got "false"
PASS a.ping: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL a.ping: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/[object http://localhost:8800/html/dom/Object]" but got "[object Object]"
PASS a.ping: setAttribute() to NaN followed by getAttribute() 
FAIL a.ping: setAttribute() to NaN followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/NaN" but got "NaN"
PASS a.ping: setAttribute() to Infinity followed by getAttribute() 
FAIL a.ping: setAttribute() to Infinity followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/Infinity" but got "Infinity"
PASS a.ping: setAttribute() to -Infinity followed by getAttribute() 
FAIL a.ping: setAttribute() to -Infinity followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/-Infinity" but got "-Infinity"
PASS a.ping: setAttribute() to "\0" followed by getAttribute() 
FAIL a.ping: setAttribute() to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS a.ping: setAttribute() to null followed by getAttribute() 
FAIL a.ping: setAttribute() to null followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/null" but got "null"
PASS a.ping: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL a.ping: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/test-toString" but got "test-toString"
PASS a.ping: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL a.ping: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/test-valueOf" but got "test-valueOf"
PASS a.ping: IDL set to "" should not throw 
PASS a.ping: IDL set to "" followed by getAttribute() 
PASS a.ping: IDL set to "" followed by IDL get 
PASS a.ping: IDL set to " foo   " should not throw 
PASS a.ping: IDL set to " foo   " followed by getAttribute() 
FAIL a.ping: IDL set to " foo   " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo   "
PASS a.ping: IDL set to "http://site.example/ foo  bar   baz" should not throw 
PASS a.ping: IDL set to "http://site.example/ foo  bar   baz" followed by getAttribute() 
FAIL a.ping: IDL set to "http://site.example/ foo  bar   baz" followed by IDL get assert_equals: expected "http://site.example/ http://localhost:8800/html/dom/foo http://localhost:8800/html/dom/bar http://localhost:8800/html/dom/baz" but got "http://site.example/ foo  bar   baz"
PASS a.ping: IDL set to "//site.example/path???@#l" should not throw 
PASS a.ping: IDL set to "//site.example/path???@#l" followed by getAttribute() 
FAIL a.ping: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS a.ping: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
PASS a.ping: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL a.ping: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html http://localhost:8800/html/dom/reflection-text.html http://localhost:8800/html/dom/reflection-text.html http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS a.ping: IDL set to undefined should not throw 
PASS a.ping: IDL set to undefined followed by getAttribute() 
FAIL a.ping: IDL set to undefined followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/undefined" but got "undefined"
PASS a.ping: IDL set to 7 should not throw 
PASS a.ping: IDL set to 7 followed by getAttribute() 
FAIL a.ping: IDL set to 7 followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/7" but got "7"
PASS a.ping: IDL set to 1.5 should not throw 
PASS a.ping: IDL set to 1.5 followed by getAttribute() 
FAIL a.ping: IDL set to 1.5 followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/1.5" but got "1.5"
PASS a.ping: IDL set to true should not throw 
PASS a.ping: IDL set to true followed by getAttribute() 
FAIL a.ping: IDL set to true followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/true" but got "true"
PASS a.ping: IDL set to false should not throw 
PASS a.ping: IDL set to false followed by getAttribute() 
FAIL a.ping: IDL set to false followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/false" but got "false"
PASS a.ping: IDL set to object "[object Object]" should not throw 
PASS a.ping: IDL set to object "[object Object]" followed by getAttribute() 
FAIL a.ping: IDL set to object "[object Object]" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/[object http://localhost:8800/html/dom/Object]" but got "[object Object]"
PASS a.ping: IDL set to NaN should not throw 
PASS a.ping: IDL set to NaN followed by getAttribute() 
FAIL a.ping: IDL set to NaN followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/NaN" but got "NaN"
PASS a.ping: IDL set to Infinity should not throw 
PASS a.ping: IDL set to Infinity followed by getAttribute() 
FAIL a.ping: IDL set to Infinity followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/Infinity" but got "Infinity"
PASS a.ping: IDL set to -Infinity should not throw 
PASS a.ping: IDL set to -Infinity followed by getAttribute() 
FAIL a.ping: IDL set to -Infinity followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/-Infinity" but got "-Infinity"
PASS a.ping: IDL set to "\0" should not throw 
PASS a.ping: IDL set to "\0" followed by getAttribute() 
FAIL a.ping: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS a.ping: IDL set to null should not throw 
PASS a.ping: IDL set to null followed by getAttribute() 
FAIL a.ping: IDL set to null followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/null" but got "null"
PASS a.ping: IDL set to object "test-toString" should not throw 
PASS a.ping: IDL set to object "test-toString" followed by getAttribute() 
FAIL a.ping: IDL set to object "test-toString" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/test-toString" but got "test-toString"
PASS a.ping: IDL set to object "test-valueOf" should not throw 
PASS a.ping: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL a.ping: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/test-valueOf" but got "test-valueOf"
PASS a.rel: typeof IDL attribute 
PASS a.rel: IDL get with DOM attribute unset 
PASS a.rel: setAttribute() to "" followed by getAttribute() 
PASS a.rel: setAttribute() to "" followed by IDL get 
PASS a.rel: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.rel: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.rel: setAttribute() to undefined followed by getAttribute() 
PASS a.rel: setAttribute() to undefined followed by IDL get 
PASS a.rel: setAttribute() to 7 followed by getAttribute() 
PASS a.rel: setAttribute() to 7 followed by IDL get 
PASS a.rel: setAttribute() to 1.5 followed by getAttribute() 
PASS a.rel: setAttribute() to 1.5 followed by IDL get 
PASS a.rel: setAttribute() to true followed by getAttribute() 
PASS a.rel: setAttribute() to true followed by IDL get 
PASS a.rel: setAttribute() to false followed by getAttribute() 
PASS a.rel: setAttribute() to false followed by IDL get 
PASS a.rel: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.rel: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.rel: setAttribute() to NaN followed by getAttribute() 
PASS a.rel: setAttribute() to NaN followed by IDL get 
PASS a.rel: setAttribute() to Infinity followed by getAttribute() 
PASS a.rel: setAttribute() to Infinity followed by IDL get 
PASS a.rel: setAttribute() to -Infinity followed by getAttribute() 
PASS a.rel: setAttribute() to -Infinity followed by IDL get 
PASS a.rel: setAttribute() to "\0" followed by getAttribute() 
PASS a.rel: setAttribute() to "\0" followed by IDL get 
PASS a.rel: setAttribute() to null followed by getAttribute() 
PASS a.rel: setAttribute() to null followed by IDL get 
PASS a.rel: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.rel: setAttribute() to object "test-toString" followed by IDL get 
PASS a.rel: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.rel: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.rel: IDL set to "" should not throw 
PASS a.rel: IDL set to "" followed by getAttribute() 
PASS a.rel: IDL set to "" followed by IDL get 
PASS a.rel: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.rel: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.rel: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.rel: IDL set to undefined should not throw 
PASS a.rel: IDL set to undefined followed by getAttribute() 
PASS a.rel: IDL set to undefined followed by IDL get 
PASS a.rel: IDL set to 7 should not throw 
PASS a.rel: IDL set to 7 followed by getAttribute() 
PASS a.rel: IDL set to 7 followed by IDL get 
PASS a.rel: IDL set to 1.5 should not throw 
PASS a.rel: IDL set to 1.5 followed by getAttribute() 
PASS a.rel: IDL set to 1.5 followed by IDL get 
PASS a.rel: IDL set to true should not throw 
PASS a.rel: IDL set to true followed by getAttribute() 
PASS a.rel: IDL set to true followed by IDL get 
PASS a.rel: IDL set to false should not throw 
PASS a.rel: IDL set to false followed by getAttribute() 
PASS a.rel: IDL set to false followed by IDL get 
PASS a.rel: IDL set to object "[object Object]" should not throw 
PASS a.rel: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.rel: IDL set to object "[object Object]" followed by IDL get 
PASS a.rel: IDL set to NaN should not throw 
PASS a.rel: IDL set to NaN followed by getAttribute() 
PASS a.rel: IDL set to NaN followed by IDL get 
PASS a.rel: IDL set to Infinity should not throw 
PASS a.rel: IDL set to Infinity followed by getAttribute() 
PASS a.rel: IDL set to Infinity followed by IDL get 
PASS a.rel: IDL set to -Infinity should not throw 
PASS a.rel: IDL set to -Infinity followed by getAttribute() 
PASS a.rel: IDL set to -Infinity followed by IDL get 
PASS a.rel: IDL set to "\0" should not throw 
PASS a.rel: IDL set to "\0" followed by getAttribute() 
PASS a.rel: IDL set to "\0" followed by IDL get 
PASS a.rel: IDL set to null should not throw 
PASS a.rel: IDL set to null followed by getAttribute() 
PASS a.rel: IDL set to null followed by IDL get 
PASS a.rel: IDL set to object "test-toString" should not throw 
PASS a.rel: IDL set to object "test-toString" followed by getAttribute() 
PASS a.rel: IDL set to object "test-toString" followed by IDL get 
PASS a.rel: IDL set to object "test-valueOf" should not throw 
PASS a.rel: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.rel: IDL set to object "test-valueOf" followed by IDL get 
PASS a.hreflang: typeof IDL attribute 
PASS a.hreflang: IDL get with DOM attribute unset 
PASS a.hreflang: setAttribute() to "" followed by getAttribute() 
PASS a.hreflang: setAttribute() to "" followed by IDL get 
PASS a.hreflang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.hreflang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.hreflang: setAttribute() to undefined followed by getAttribute() 
PASS a.hreflang: setAttribute() to undefined followed by IDL get 
PASS a.hreflang: setAttribute() to 7 followed by getAttribute() 
PASS a.hreflang: setAttribute() to 7 followed by IDL get 
PASS a.hreflang: setAttribute() to 1.5 followed by getAttribute() 
PASS a.hreflang: setAttribute() to 1.5 followed by IDL get 
PASS a.hreflang: setAttribute() to true followed by getAttribute() 
PASS a.hreflang: setAttribute() to true followed by IDL get 
PASS a.hreflang: setAttribute() to false followed by getAttribute() 
PASS a.hreflang: setAttribute() to false followed by IDL get 
PASS a.hreflang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.hreflang: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.hreflang: setAttribute() to NaN followed by getAttribute() 
PASS a.hreflang: setAttribute() to NaN followed by IDL get 
PASS a.hreflang: setAttribute() to Infinity followed by getAttribute() 
PASS a.hreflang: setAttribute() to Infinity followed by IDL get 
PASS a.hreflang: setAttribute() to -Infinity followed by getAttribute() 
PASS a.hreflang: setAttribute() to -Infinity followed by IDL get 
PASS a.hreflang: setAttribute() to "\0" followed by getAttribute() 
PASS a.hreflang: setAttribute() to "\0" followed by IDL get 
PASS a.hreflang: setAttribute() to null followed by getAttribute() 
PASS a.hreflang: setAttribute() to null followed by IDL get 
PASS a.hreflang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.hreflang: setAttribute() to object "test-toString" followed by IDL get 
PASS a.hreflang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.hreflang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.hreflang: IDL set to "" should not throw 
PASS a.hreflang: IDL set to "" followed by getAttribute() 
PASS a.hreflang: IDL set to "" followed by IDL get 
PASS a.hreflang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.hreflang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.hreflang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.hreflang: IDL set to undefined should not throw 
PASS a.hreflang: IDL set to undefined followed by getAttribute() 
PASS a.hreflang: IDL set to undefined followed by IDL get 
PASS a.hreflang: IDL set to 7 should not throw 
PASS a.hreflang: IDL set to 7 followed by getAttribute() 
PASS a.hreflang: IDL set to 7 followed by IDL get 
PASS a.hreflang: IDL set to 1.5 should not throw 
PASS a.hreflang: IDL set to 1.5 followed by getAttribute() 
PASS a.hreflang: IDL set to 1.5 followed by IDL get 
PASS a.hreflang: IDL set to true should not throw 
PASS a.hreflang: IDL set to true followed by getAttribute() 
PASS a.hreflang: IDL set to true followed by IDL get 
PASS a.hreflang: IDL set to false should not throw 
PASS a.hreflang: IDL set to false followed by getAttribute() 
PASS a.hreflang: IDL set to false followed by IDL get 
PASS a.hreflang: IDL set to object "[object Object]" should not throw 
PASS a.hreflang: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.hreflang: IDL set to object "[object Object]" followed by IDL get 
PASS a.hreflang: IDL set to NaN should not throw 
PASS a.hreflang: IDL set to NaN followed by getAttribute() 
PASS a.hreflang: IDL set to NaN followed by IDL get 
PASS a.hreflang: IDL set to Infinity should not throw 
PASS a.hreflang: IDL set to Infinity followed by getAttribute() 
PASS a.hreflang: IDL set to Infinity followed by IDL get 
PASS a.hreflang: IDL set to -Infinity should not throw 
PASS a.hreflang: IDL set to -Infinity followed by getAttribute() 
PASS a.hreflang: IDL set to -Infinity followed by IDL get 
PASS a.hreflang: IDL set to "\0" should not throw 
PASS a.hreflang: IDL set to "\0" followed by getAttribute() 
PASS a.hreflang: IDL set to "\0" followed by IDL get 
PASS a.hreflang: IDL set to null should not throw 
PASS a.hreflang: IDL set to null followed by getAttribute() 
PASS a.hreflang: IDL set to null followed by IDL get 
PASS a.hreflang: IDL set to object "test-toString" should not throw 
PASS a.hreflang: IDL set to object "test-toString" followed by getAttribute() 
PASS a.hreflang: IDL set to object "test-toString" followed by IDL get 
PASS a.hreflang: IDL set to object "test-valueOf" should not throw 
PASS a.hreflang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.hreflang: IDL set to object "test-valueOf" followed by IDL get 
PASS a.type: typeof IDL attribute 
PASS a.type: IDL get with DOM attribute unset 
PASS a.type: setAttribute() to "" followed by getAttribute() 
PASS a.type: setAttribute() to "" followed by IDL get 
PASS a.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.type: setAttribute() to undefined followed by getAttribute() 
PASS a.type: setAttribute() to undefined followed by IDL get 
PASS a.type: setAttribute() to 7 followed by getAttribute() 
PASS a.type: setAttribute() to 7 followed by IDL get 
PASS a.type: setAttribute() to 1.5 followed by getAttribute() 
PASS a.type: setAttribute() to 1.5 followed by IDL get 
PASS a.type: setAttribute() to true followed by getAttribute() 
PASS a.type: setAttribute() to true followed by IDL get 
PASS a.type: setAttribute() to false followed by getAttribute() 
PASS a.type: setAttribute() to false followed by IDL get 
PASS a.type: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.type: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.type: setAttribute() to NaN followed by getAttribute() 
PASS a.type: setAttribute() to NaN followed by IDL get 
PASS a.type: setAttribute() to Infinity followed by getAttribute() 
PASS a.type: setAttribute() to Infinity followed by IDL get 
PASS a.type: setAttribute() to -Infinity followed by getAttribute() 
PASS a.type: setAttribute() to -Infinity followed by IDL get 
PASS a.type: setAttribute() to "\0" followed by getAttribute() 
PASS a.type: setAttribute() to "\0" followed by IDL get 
PASS a.type: setAttribute() to null followed by getAttribute() 
PASS a.type: setAttribute() to null followed by IDL get 
PASS a.type: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.type: setAttribute() to object "test-toString" followed by IDL get 
PASS a.type: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.type: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.type: IDL set to "" should not throw 
PASS a.type: IDL set to "" followed by getAttribute() 
PASS a.type: IDL set to "" followed by IDL get 
PASS a.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.type: IDL set to undefined should not throw 
PASS a.type: IDL set to undefined followed by getAttribute() 
PASS a.type: IDL set to undefined followed by IDL get 
PASS a.type: IDL set to 7 should not throw 
PASS a.type: IDL set to 7 followed by getAttribute() 
PASS a.type: IDL set to 7 followed by IDL get 
PASS a.type: IDL set to 1.5 should not throw 
PASS a.type: IDL set to 1.5 followed by getAttribute() 
PASS a.type: IDL set to 1.5 followed by IDL get 
PASS a.type: IDL set to true should not throw 
PASS a.type: IDL set to true followed by getAttribute() 
PASS a.type: IDL set to true followed by IDL get 
PASS a.type: IDL set to false should not throw 
PASS a.type: IDL set to false followed by getAttribute() 
PASS a.type: IDL set to false followed by IDL get 
PASS a.type: IDL set to object "[object Object]" should not throw 
PASS a.type: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.type: IDL set to object "[object Object]" followed by IDL get 
PASS a.type: IDL set to NaN should not throw 
PASS a.type: IDL set to NaN followed by getAttribute() 
PASS a.type: IDL set to NaN followed by IDL get 
PASS a.type: IDL set to Infinity should not throw 
PASS a.type: IDL set to Infinity followed by getAttribute() 
PASS a.type: IDL set to Infinity followed by IDL get 
PASS a.type: IDL set to -Infinity should not throw 
PASS a.type: IDL set to -Infinity followed by getAttribute() 
PASS a.type: IDL set to -Infinity followed by IDL get 
PASS a.type: IDL set to "\0" should not throw 
PASS a.type: IDL set to "\0" followed by getAttribute() 
PASS a.type: IDL set to "\0" followed by IDL get 
PASS a.type: IDL set to null should not throw 
PASS a.type: IDL set to null followed by getAttribute() 
PASS a.type: IDL set to null followed by IDL get 
PASS a.type: IDL set to object "test-toString" should not throw 
PASS a.type: IDL set to object "test-toString" followed by getAttribute() 
PASS a.type: IDL set to object "test-toString" followed by IDL get 
PASS a.type: IDL set to object "test-valueOf" should not throw 
PASS a.type: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.type: IDL set to object "test-valueOf" followed by IDL get 
PASS a.href: typeof IDL attribute 
PASS a.href: IDL get with DOM attribute unset 
PASS a.href: setAttribute() to "" followed by getAttribute() 
PASS a.href: setAttribute() to "" followed by IDL get 
PASS a.href: setAttribute() to " foo " followed by getAttribute() 
PASS a.href: setAttribute() to " foo " followed by IDL get 
PASS a.href: setAttribute() to "http://site.example/" followed by getAttribute() 
PASS a.href: setAttribute() to "http://site.example/" followed by IDL get 
PASS a.href: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
PASS a.href: setAttribute() to "//site.example/path???@#l" followed by IDL get 
PASS a.href: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS a.href: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS a.href: setAttribute() to undefined followed by getAttribute() 
PASS a.href: setAttribute() to undefined followed by IDL get 
PASS a.href: setAttribute() to 7 followed by getAttribute() 
PASS a.href: setAttribute() to 7 followed by IDL get 
PASS a.href: setAttribute() to 1.5 followed by getAttribute() 
PASS a.href: setAttribute() to 1.5 followed by IDL get 
PASS a.href: setAttribute() to true followed by getAttribute() 
PASS a.href: setAttribute() to true followed by IDL get 
PASS a.href: setAttribute() to false followed by getAttribute() 
PASS a.href: setAttribute() to false followed by IDL get 
PASS a.href: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.href: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.href: setAttribute() to NaN followed by getAttribute() 
PASS a.href: setAttribute() to NaN followed by IDL get 
PASS a.href: setAttribute() to Infinity followed by getAttribute() 
PASS a.href: setAttribute() to Infinity followed by IDL get 
PASS a.href: setAttribute() to -Infinity followed by getAttribute() 
PASS a.href: setAttribute() to -Infinity followed by IDL get 
PASS a.href: setAttribute() to "\0" followed by getAttribute() 
PASS a.href: setAttribute() to "\0" followed by IDL get 
PASS a.href: setAttribute() to null followed by getAttribute() 
PASS a.href: setAttribute() to null followed by IDL get 
PASS a.href: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.href: setAttribute() to object "test-toString" followed by IDL get 
PASS a.href: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.href: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.href: IDL set to "" should not throw 
PASS a.href: IDL set to "" followed by getAttribute() 
PASS a.href: IDL set to "" followed by IDL get 
PASS a.href: IDL set to " foo " should not throw 
PASS a.href: IDL set to " foo " followed by getAttribute() 
PASS a.href: IDL set to " foo " followed by IDL get 
PASS a.href: IDL set to "http://site.example/" should not throw 
PASS a.href: IDL set to "http://site.example/" followed by getAttribute() 
PASS a.href: IDL set to "http://site.example/" followed by IDL get 
PASS a.href: IDL set to "//site.example/path???@#l" should not throw 
PASS a.href: IDL set to "//site.example/path???@#l" followed by getAttribute() 
PASS a.href: IDL set to "//site.example/path???@#l" followed by IDL get 
PASS a.href: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
PASS a.href: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS a.href: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS a.href: IDL set to undefined should not throw 
PASS a.href: IDL set to undefined followed by getAttribute() 
PASS a.href: IDL set to undefined followed by IDL get 
PASS a.href: IDL set to 7 should not throw 
PASS a.href: IDL set to 7 followed by getAttribute() 
PASS a.href: IDL set to 7 followed by IDL get 
PASS a.href: IDL set to 1.5 should not throw 
PASS a.href: IDL set to 1.5 followed by getAttribute() 
PASS a.href: IDL set to 1.5 followed by IDL get 
PASS a.href: IDL set to true should not throw 
PASS a.href: IDL set to true followed by getAttribute() 
PASS a.href: IDL set to true followed by IDL get 
PASS a.href: IDL set to false should not throw 
PASS a.href: IDL set to false followed by getAttribute() 
PASS a.href: IDL set to false followed by IDL get 
PASS a.href: IDL set to object "[object Object]" should not throw 
PASS a.href: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.href: IDL set to object "[object Object]" followed by IDL get 
PASS a.href: IDL set to NaN should not throw 
PASS a.href: IDL set to NaN followed by getAttribute() 
PASS a.href: IDL set to NaN followed by IDL get 
PASS a.href: IDL set to Infinity should not throw 
PASS a.href: IDL set to Infinity followed by getAttribute() 
PASS a.href: IDL set to Infinity followed by IDL get 
PASS a.href: IDL set to -Infinity should not throw 
PASS a.href: IDL set to -Infinity followed by getAttribute() 
PASS a.href: IDL set to -Infinity followed by IDL get 
PASS a.href: IDL set to "\0" should not throw 
PASS a.href: IDL set to "\0" followed by getAttribute() 
PASS a.href: IDL set to "\0" followed by IDL get 
PASS a.href: IDL set to null should not throw 
PASS a.href: IDL set to null followed by getAttribute() 
PASS a.href: IDL set to null followed by IDL get 
PASS a.href: IDL set to object "test-toString" should not throw 
PASS a.href: IDL set to object "test-toString" followed by getAttribute() 
PASS a.href: IDL set to object "test-toString" followed by IDL get 
PASS a.href: IDL set to object "test-valueOf" should not throw 
PASS a.href: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.href: IDL set to object "test-valueOf" followed by IDL get 
PASS a.coords: typeof IDL attribute 
PASS a.coords: IDL get with DOM attribute unset 
PASS a.coords: setAttribute() to "" followed by getAttribute() 
PASS a.coords: setAttribute() to "" followed by IDL get 
PASS a.coords: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.coords: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.coords: setAttribute() to undefined followed by getAttribute() 
PASS a.coords: setAttribute() to undefined followed by IDL get 
PASS a.coords: setAttribute() to 7 followed by getAttribute() 
PASS a.coords: setAttribute() to 7 followed by IDL get 
PASS a.coords: setAttribute() to 1.5 followed by getAttribute() 
PASS a.coords: setAttribute() to 1.5 followed by IDL get 
PASS a.coords: setAttribute() to true followed by getAttribute() 
PASS a.coords: setAttribute() to true followed by IDL get 
PASS a.coords: setAttribute() to false followed by getAttribute() 
PASS a.coords: setAttribute() to false followed by IDL get 
PASS a.coords: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.coords: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.coords: setAttribute() to NaN followed by getAttribute() 
PASS a.coords: setAttribute() to NaN followed by IDL get 
PASS a.coords: setAttribute() to Infinity followed by getAttribute() 
PASS a.coords: setAttribute() to Infinity followed by IDL get 
PASS a.coords: setAttribute() to -Infinity followed by getAttribute() 
PASS a.coords: setAttribute() to -Infinity followed by IDL get 
PASS a.coords: setAttribute() to "\0" followed by getAttribute() 
PASS a.coords: setAttribute() to "\0" followed by IDL get 
PASS a.coords: setAttribute() to null followed by getAttribute() 
PASS a.coords: setAttribute() to null followed by IDL get 
PASS a.coords: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.coords: setAttribute() to object "test-toString" followed by IDL get 
PASS a.coords: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.coords: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.coords: IDL set to "" should not throw 
PASS a.coords: IDL set to "" followed by getAttribute() 
PASS a.coords: IDL set to "" followed by IDL get 
PASS a.coords: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.coords: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.coords: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.coords: IDL set to undefined should not throw 
PASS a.coords: IDL set to undefined followed by getAttribute() 
PASS a.coords: IDL set to undefined followed by IDL get 
PASS a.coords: IDL set to 7 should not throw 
PASS a.coords: IDL set to 7 followed by getAttribute() 
PASS a.coords: IDL set to 7 followed by IDL get 
PASS a.coords: IDL set to 1.5 should not throw 
PASS a.coords: IDL set to 1.5 followed by getAttribute() 
PASS a.coords: IDL set to 1.5 followed by IDL get 
PASS a.coords: IDL set to true should not throw 
PASS a.coords: IDL set to true followed by getAttribute() 
PASS a.coords: IDL set to true followed by IDL get 
PASS a.coords: IDL set to false should not throw 
PASS a.coords: IDL set to false followed by getAttribute() 
PASS a.coords: IDL set to false followed by IDL get 
PASS a.coords: IDL set to object "[object Object]" should not throw 
PASS a.coords: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.coords: IDL set to object "[object Object]" followed by IDL get 
PASS a.coords: IDL set to NaN should not throw 
PASS a.coords: IDL set to NaN followed by getAttribute() 
PASS a.coords: IDL set to NaN followed by IDL get 
PASS a.coords: IDL set to Infinity should not throw 
PASS a.coords: IDL set to Infinity followed by getAttribute() 
PASS a.coords: IDL set to Infinity followed by IDL get 
PASS a.coords: IDL set to -Infinity should not throw 
PASS a.coords: IDL set to -Infinity followed by getAttribute() 
PASS a.coords: IDL set to -Infinity followed by IDL get 
PASS a.coords: IDL set to "\0" should not throw 
PASS a.coords: IDL set to "\0" followed by getAttribute() 
PASS a.coords: IDL set to "\0" followed by IDL get 
PASS a.coords: IDL set to null should not throw 
PASS a.coords: IDL set to null followed by getAttribute() 
PASS a.coords: IDL set to null followed by IDL get 
PASS a.coords: IDL set to object "test-toString" should not throw 
PASS a.coords: IDL set to object "test-toString" followed by getAttribute() 
PASS a.coords: IDL set to object "test-toString" followed by IDL get 
PASS a.coords: IDL set to object "test-valueOf" should not throw 
PASS a.coords: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.coords: IDL set to object "test-valueOf" followed by IDL get 
PASS a.charset: typeof IDL attribute 
PASS a.charset: IDL get with DOM attribute unset 
PASS a.charset: setAttribute() to "" followed by getAttribute() 
PASS a.charset: setAttribute() to "" followed by IDL get 
PASS a.charset: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.charset: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.charset: setAttribute() to undefined followed by getAttribute() 
PASS a.charset: setAttribute() to undefined followed by IDL get 
PASS a.charset: setAttribute() to 7 followed by getAttribute() 
PASS a.charset: setAttribute() to 7 followed by IDL get 
PASS a.charset: setAttribute() to 1.5 followed by getAttribute() 
PASS a.charset: setAttribute() to 1.5 followed by IDL get 
PASS a.charset: setAttribute() to true followed by getAttribute() 
PASS a.charset: setAttribute() to true followed by IDL get 
PASS a.charset: setAttribute() to false followed by getAttribute() 
PASS a.charset: setAttribute() to false followed by IDL get 
PASS a.charset: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.charset: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.charset: setAttribute() to NaN followed by getAttribute() 
PASS a.charset: setAttribute() to NaN followed by IDL get 
PASS a.charset: setAttribute() to Infinity followed by getAttribute() 
PASS a.charset: setAttribute() to Infinity followed by IDL get 
PASS a.charset: setAttribute() to -Infinity followed by getAttribute() 
PASS a.charset: setAttribute() to -Infinity followed by IDL get 
PASS a.charset: setAttribute() to "\0" followed by getAttribute() 
PASS a.charset: setAttribute() to "\0" followed by IDL get 
PASS a.charset: setAttribute() to null followed by getAttribute() 
PASS a.charset: setAttribute() to null followed by IDL get 
PASS a.charset: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.charset: setAttribute() to object "test-toString" followed by IDL get 
PASS a.charset: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.charset: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.charset: IDL set to "" should not throw 
PASS a.charset: IDL set to "" followed by getAttribute() 
PASS a.charset: IDL set to "" followed by IDL get 
PASS a.charset: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.charset: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.charset: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.charset: IDL set to undefined should not throw 
PASS a.charset: IDL set to undefined followed by getAttribute() 
PASS a.charset: IDL set to undefined followed by IDL get 
PASS a.charset: IDL set to 7 should not throw 
PASS a.charset: IDL set to 7 followed by getAttribute() 
PASS a.charset: IDL set to 7 followed by IDL get 
PASS a.charset: IDL set to 1.5 should not throw 
PASS a.charset: IDL set to 1.5 followed by getAttribute() 
PASS a.charset: IDL set to 1.5 followed by IDL get 
PASS a.charset: IDL set to true should not throw 
PASS a.charset: IDL set to true followed by getAttribute() 
PASS a.charset: IDL set to true followed by IDL get 
PASS a.charset: IDL set to false should not throw 
PASS a.charset: IDL set to false followed by getAttribute() 
PASS a.charset: IDL set to false followed by IDL get 
PASS a.charset: IDL set to object "[object Object]" should not throw 
PASS a.charset: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.charset: IDL set to object "[object Object]" followed by IDL get 
PASS a.charset: IDL set to NaN should not throw 
PASS a.charset: IDL set to NaN followed by getAttribute() 
PASS a.charset: IDL set to NaN followed by IDL get 
PASS a.charset: IDL set to Infinity should not throw 
PASS a.charset: IDL set to Infinity followed by getAttribute() 
PASS a.charset: IDL set to Infinity followed by IDL get 
PASS a.charset: IDL set to -Infinity should not throw 
PASS a.charset: IDL set to -Infinity followed by getAttribute() 
PASS a.charset: IDL set to -Infinity followed by IDL get 
PASS a.charset: IDL set to "\0" should not throw 
PASS a.charset: IDL set to "\0" followed by getAttribute() 
PASS a.charset: IDL set to "\0" followed by IDL get 
PASS a.charset: IDL set to null should not throw 
PASS a.charset: IDL set to null followed by getAttribute() 
PASS a.charset: IDL set to null followed by IDL get 
PASS a.charset: IDL set to object "test-toString" should not throw 
PASS a.charset: IDL set to object "test-toString" followed by getAttribute() 
PASS a.charset: IDL set to object "test-toString" followed by IDL get 
PASS a.charset: IDL set to object "test-valueOf" should not throw 
PASS a.charset: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.charset: IDL set to object "test-valueOf" followed by IDL get 
PASS a.name: typeof IDL attribute 
PASS a.name: IDL get with DOM attribute unset 
PASS a.name: setAttribute() to "" followed by getAttribute() 
PASS a.name: setAttribute() to "" followed by IDL get 
PASS a.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.name: setAttribute() to undefined followed by getAttribute() 
PASS a.name: setAttribute() to undefined followed by IDL get 
PASS a.name: setAttribute() to 7 followed by getAttribute() 
PASS a.name: setAttribute() to 7 followed by IDL get 
PASS a.name: setAttribute() to 1.5 followed by getAttribute() 
PASS a.name: setAttribute() to 1.5 followed by IDL get 
PASS a.name: setAttribute() to true followed by getAttribute() 
PASS a.name: setAttribute() to true followed by IDL get 
PASS a.name: setAttribute() to false followed by getAttribute() 
PASS a.name: setAttribute() to false followed by IDL get 
PASS a.name: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.name: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.name: setAttribute() to NaN followed by getAttribute() 
PASS a.name: setAttribute() to NaN followed by IDL get 
PASS a.name: setAttribute() to Infinity followed by getAttribute() 
PASS a.name: setAttribute() to Infinity followed by IDL get 
PASS a.name: setAttribute() to -Infinity followed by getAttribute() 
PASS a.name: setAttribute() to -Infinity followed by IDL get 
PASS a.name: setAttribute() to "\0" followed by getAttribute() 
PASS a.name: setAttribute() to "\0" followed by IDL get 
PASS a.name: setAttribute() to null followed by getAttribute() 
PASS a.name: setAttribute() to null followed by IDL get 
PASS a.name: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.name: setAttribute() to object "test-toString" followed by IDL get 
PASS a.name: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.name: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.name: IDL set to "" should not throw 
PASS a.name: IDL set to "" followed by getAttribute() 
PASS a.name: IDL set to "" followed by IDL get 
PASS a.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.name: IDL set to undefined should not throw 
PASS a.name: IDL set to undefined followed by getAttribute() 
PASS a.name: IDL set to undefined followed by IDL get 
PASS a.name: IDL set to 7 should not throw 
PASS a.name: IDL set to 7 followed by getAttribute() 
PASS a.name: IDL set to 7 followed by IDL get 
PASS a.name: IDL set to 1.5 should not throw 
PASS a.name: IDL set to 1.5 followed by getAttribute() 
PASS a.name: IDL set to 1.5 followed by IDL get 
PASS a.name: IDL set to true should not throw 
PASS a.name: IDL set to true followed by getAttribute() 
PASS a.name: IDL set to true followed by IDL get 
PASS a.name: IDL set to false should not throw 
PASS a.name: IDL set to false followed by getAttribute() 
PASS a.name: IDL set to false followed by IDL get 
PASS a.name: IDL set to object "[object Object]" should not throw 
PASS a.name: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.name: IDL set to object "[object Object]" followed by IDL get 
PASS a.name: IDL set to NaN should not throw 
PASS a.name: IDL set to NaN followed by getAttribute() 
PASS a.name: IDL set to NaN followed by IDL get 
PASS a.name: IDL set to Infinity should not throw 
PASS a.name: IDL set to Infinity followed by getAttribute() 
PASS a.name: IDL set to Infinity followed by IDL get 
PASS a.name: IDL set to -Infinity should not throw 
PASS a.name: IDL set to -Infinity followed by getAttribute() 
PASS a.name: IDL set to -Infinity followed by IDL get 
PASS a.name: IDL set to "\0" should not throw 
PASS a.name: IDL set to "\0" followed by getAttribute() 
PASS a.name: IDL set to "\0" followed by IDL get 
PASS a.name: IDL set to null should not throw 
PASS a.name: IDL set to null followed by getAttribute() 
PASS a.name: IDL set to null followed by IDL get 
PASS a.name: IDL set to object "test-toString" should not throw 
PASS a.name: IDL set to object "test-toString" followed by getAttribute() 
PASS a.name: IDL set to object "test-toString" followed by IDL get 
PASS a.name: IDL set to object "test-valueOf" should not throw 
PASS a.name: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.name: IDL set to object "test-valueOf" followed by IDL get 
PASS a.rev: typeof IDL attribute 
PASS a.rev: IDL get with DOM attribute unset 
PASS a.rev: setAttribute() to "" followed by getAttribute() 
PASS a.rev: setAttribute() to "" followed by IDL get 
PASS a.rev: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.rev: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.rev: setAttribute() to undefined followed by getAttribute() 
PASS a.rev: setAttribute() to undefined followed by IDL get 
PASS a.rev: setAttribute() to 7 followed by getAttribute() 
PASS a.rev: setAttribute() to 7 followed by IDL get 
PASS a.rev: setAttribute() to 1.5 followed by getAttribute() 
PASS a.rev: setAttribute() to 1.5 followed by IDL get 
PASS a.rev: setAttribute() to true followed by getAttribute() 
PASS a.rev: setAttribute() to true followed by IDL get 
PASS a.rev: setAttribute() to false followed by getAttribute() 
PASS a.rev: setAttribute() to false followed by IDL get 
PASS a.rev: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.rev: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.rev: setAttribute() to NaN followed by getAttribute() 
PASS a.rev: setAttribute() to NaN followed by IDL get 
PASS a.rev: setAttribute() to Infinity followed by getAttribute() 
PASS a.rev: setAttribute() to Infinity followed by IDL get 
PASS a.rev: setAttribute() to -Infinity followed by getAttribute() 
PASS a.rev: setAttribute() to -Infinity followed by IDL get 
PASS a.rev: setAttribute() to "\0" followed by getAttribute() 
PASS a.rev: setAttribute() to "\0" followed by IDL get 
PASS a.rev: setAttribute() to null followed by getAttribute() 
PASS a.rev: setAttribute() to null followed by IDL get 
PASS a.rev: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.rev: setAttribute() to object "test-toString" followed by IDL get 
PASS a.rev: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.rev: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.rev: IDL set to "" should not throw 
PASS a.rev: IDL set to "" followed by getAttribute() 
PASS a.rev: IDL set to "" followed by IDL get 
PASS a.rev: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.rev: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.rev: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.rev: IDL set to undefined should not throw 
PASS a.rev: IDL set to undefined followed by getAttribute() 
PASS a.rev: IDL set to undefined followed by IDL get 
PASS a.rev: IDL set to 7 should not throw 
PASS a.rev: IDL set to 7 followed by getAttribute() 
PASS a.rev: IDL set to 7 followed by IDL get 
PASS a.rev: IDL set to 1.5 should not throw 
PASS a.rev: IDL set to 1.5 followed by getAttribute() 
PASS a.rev: IDL set to 1.5 followed by IDL get 
PASS a.rev: IDL set to true should not throw 
PASS a.rev: IDL set to true followed by getAttribute() 
PASS a.rev: IDL set to true followed by IDL get 
PASS a.rev: IDL set to false should not throw 
PASS a.rev: IDL set to false followed by getAttribute() 
PASS a.rev: IDL set to false followed by IDL get 
PASS a.rev: IDL set to object "[object Object]" should not throw 
PASS a.rev: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.rev: IDL set to object "[object Object]" followed by IDL get 
PASS a.rev: IDL set to NaN should not throw 
PASS a.rev: IDL set to NaN followed by getAttribute() 
PASS a.rev: IDL set to NaN followed by IDL get 
PASS a.rev: IDL set to Infinity should not throw 
PASS a.rev: IDL set to Infinity followed by getAttribute() 
PASS a.rev: IDL set to Infinity followed by IDL get 
PASS a.rev: IDL set to -Infinity should not throw 
PASS a.rev: IDL set to -Infinity followed by getAttribute() 
PASS a.rev: IDL set to -Infinity followed by IDL get 
PASS a.rev: IDL set to "\0" should not throw 
PASS a.rev: IDL set to "\0" followed by getAttribute() 
PASS a.rev: IDL set to "\0" followed by IDL get 
PASS a.rev: IDL set to null should not throw 
PASS a.rev: IDL set to null followed by getAttribute() 
PASS a.rev: IDL set to null followed by IDL get 
PASS a.rev: IDL set to object "test-toString" should not throw 
PASS a.rev: IDL set to object "test-toString" followed by getAttribute() 
PASS a.rev: IDL set to object "test-toString" followed by IDL get 
PASS a.rev: IDL set to object "test-valueOf" should not throw 
PASS a.rev: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.rev: IDL set to object "test-valueOf" followed by IDL get 
PASS a.shape: typeof IDL attribute 
PASS a.shape: IDL get with DOM attribute unset 
PASS a.shape: setAttribute() to "" followed by getAttribute() 
PASS a.shape: setAttribute() to "" followed by IDL get 
PASS a.shape: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.shape: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.shape: setAttribute() to undefined followed by getAttribute() 
PASS a.shape: setAttribute() to undefined followed by IDL get 
PASS a.shape: setAttribute() to 7 followed by getAttribute() 
PASS a.shape: setAttribute() to 7 followed by IDL get 
PASS a.shape: setAttribute() to 1.5 followed by getAttribute() 
PASS a.shape: setAttribute() to 1.5 followed by IDL get 
PASS a.shape: setAttribute() to true followed by getAttribute() 
PASS a.shape: setAttribute() to true followed by IDL get 
PASS a.shape: setAttribute() to false followed by getAttribute() 
PASS a.shape: setAttribute() to false followed by IDL get 
PASS a.shape: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS a.shape: setAttribute() to object "[object Object]" followed by IDL get 
PASS a.shape: setAttribute() to NaN followed by getAttribute() 
PASS a.shape: setAttribute() to NaN followed by IDL get 
PASS a.shape: setAttribute() to Infinity followed by getAttribute() 
PASS a.shape: setAttribute() to Infinity followed by IDL get 
PASS a.shape: setAttribute() to -Infinity followed by getAttribute() 
PASS a.shape: setAttribute() to -Infinity followed by IDL get 
PASS a.shape: setAttribute() to "\0" followed by getAttribute() 
PASS a.shape: setAttribute() to "\0" followed by IDL get 
PASS a.shape: setAttribute() to null followed by getAttribute() 
PASS a.shape: setAttribute() to null followed by IDL get 
PASS a.shape: setAttribute() to object "test-toString" followed by getAttribute() 
PASS a.shape: setAttribute() to object "test-toString" followed by IDL get 
PASS a.shape: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS a.shape: setAttribute() to object "test-valueOf" followed by IDL get 
PASS a.shape: IDL set to "" should not throw 
PASS a.shape: IDL set to "" followed by getAttribute() 
PASS a.shape: IDL set to "" followed by IDL get 
PASS a.shape: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS a.shape: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS a.shape: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS a.shape: IDL set to undefined should not throw 
PASS a.shape: IDL set to undefined followed by getAttribute() 
PASS a.shape: IDL set to undefined followed by IDL get 
PASS a.shape: IDL set to 7 should not throw 
PASS a.shape: IDL set to 7 followed by getAttribute() 
PASS a.shape: IDL set to 7 followed by IDL get 
PASS a.shape: IDL set to 1.5 should not throw 
PASS a.shape: IDL set to 1.5 followed by getAttribute() 
PASS a.shape: IDL set to 1.5 followed by IDL get 
PASS a.shape: IDL set to true should not throw 
PASS a.shape: IDL set to true followed by getAttribute() 
PASS a.shape: IDL set to true followed by IDL get 
PASS a.shape: IDL set to false should not throw 
PASS a.shape: IDL set to false followed by getAttribute() 
PASS a.shape: IDL set to false followed by IDL get 
PASS a.shape: IDL set to object "[object Object]" should not throw 
PASS a.shape: IDL set to object "[object Object]" followed by getAttribute() 
PASS a.shape: IDL set to object "[object Object]" followed by IDL get 
PASS a.shape: IDL set to NaN should not throw 
PASS a.shape: IDL set to NaN followed by getAttribute() 
PASS a.shape: IDL set to NaN followed by IDL get 
PASS a.shape: IDL set to Infinity should not throw 
PASS a.shape: IDL set to Infinity followed by getAttribute() 
PASS a.shape: IDL set to Infinity followed by IDL get 
PASS a.shape: IDL set to -Infinity should not throw 
PASS a.shape: IDL set to -Infinity followed by getAttribute() 
PASS a.shape: IDL set to -Infinity followed by IDL get 
PASS a.shape: IDL set to "\0" should not throw 
PASS a.shape: IDL set to "\0" followed by getAttribute() 
PASS a.shape: IDL set to "\0" followed by IDL get 
PASS a.shape: IDL set to null should not throw 
PASS a.shape: IDL set to null followed by getAttribute() 
PASS a.shape: IDL set to null followed by IDL get 
PASS a.shape: IDL set to object "test-toString" should not throw 
PASS a.shape: IDL set to object "test-toString" followed by getAttribute() 
PASS a.shape: IDL set to object "test-toString" followed by IDL get 
PASS a.shape: IDL set to object "test-valueOf" should not throw 
PASS a.shape: IDL set to object "test-valueOf" followed by getAttribute() 
PASS a.shape: IDL set to object "test-valueOf" followed by IDL get 
FAIL a.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL a.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS a.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL a.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL a.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL a.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to null followed by getAttribute() 
FAIL a.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL a.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL a.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to true followed by getAttribute() 
FAIL a.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to false followed by getAttribute() 
FAIL a.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL a.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL a.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL a.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL a.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL a.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL a.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL a.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL a.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS a.itemScope: IDL set to "" should not throw 
FAIL a.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL a.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS a.itemScope: IDL set to " foo " should not throw 
PASS a.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL a.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS a.itemScope: IDL set to undefined should not throw 
FAIL a.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL a.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS a.itemScope: IDL set to null should not throw 
FAIL a.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL a.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS a.itemScope: IDL set to 7 should not throw 
PASS a.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL a.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS a.itemScope: IDL set to 1.5 should not throw 
PASS a.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL a.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS a.itemScope: IDL set to true should not throw 
PASS a.itemScope: IDL set to true followed by hasAttribute() 
PASS a.itemScope: IDL set to true followed by IDL get 
PASS a.itemScope: IDL set to false should not throw 
FAIL a.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS a.itemScope: IDL set to false followed by IDL get 
PASS a.itemScope: IDL set to object "[object Object]" should not throw 
PASS a.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL a.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS a.itemScope: IDL set to NaN should not throw 
FAIL a.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL a.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS a.itemScope: IDL set to Infinity should not throw 
PASS a.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL a.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS a.itemScope: IDL set to -Infinity should not throw 
PASS a.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL a.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS a.itemScope: IDL set to "\0" should not throw 
PASS a.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL a.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS a.itemScope: IDL set to object "test-toString" should not throw 
PASS a.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL a.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS a.itemScope: IDL set to object "test-valueOf" should not throw 
PASS a.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL a.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL a.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL a.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS a.itemId: setAttribute() to "" followed by getAttribute() 
FAIL a.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS a.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL a.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS a.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL a.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS a.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL a.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS a.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL a.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS a.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL a.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS a.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL a.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS a.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL a.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS a.itemId: setAttribute() to true followed by getAttribute() 
FAIL a.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS a.itemId: setAttribute() to false followed by getAttribute() 
FAIL a.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS a.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL a.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS a.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL a.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS a.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL a.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS a.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL a.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS a.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL a.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS a.itemId: setAttribute() to null followed by getAttribute() 
FAIL a.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS a.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL a.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS a.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL a.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS a.itemId: IDL set to "" should not throw 
FAIL a.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL a.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS a.itemId: IDL set to " foo " should not throw 
FAIL a.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL a.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS a.itemId: IDL set to "http://site.example/" should not throw 
FAIL a.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS a.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS a.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL a.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL a.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS a.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL a.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL a.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS a.itemId: IDL set to undefined should not throw 
FAIL a.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL a.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS a.itemId: IDL set to 7 should not throw 
FAIL a.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL a.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS a.itemId: IDL set to 1.5 should not throw 
FAIL a.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL a.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS a.itemId: IDL set to true should not throw 
FAIL a.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL a.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS a.itemId: IDL set to false should not throw 
FAIL a.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL a.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS a.itemId: IDL set to object "[object Object]" should not throw 
FAIL a.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL a.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS a.itemId: IDL set to NaN should not throw 
FAIL a.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL a.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS a.itemId: IDL set to Infinity should not throw 
FAIL a.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL a.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS a.itemId: IDL set to -Infinity should not throw 
FAIL a.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL a.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS a.itemId: IDL set to "\0" should not throw 
FAIL a.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL a.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS a.itemId: IDL set to null should not throw 
FAIL a.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL a.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS a.itemId: IDL set to object "test-toString" should not throw 
FAIL a.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL a.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS a.itemId: IDL set to object "test-valueOf" should not throw 
PASS a.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL a.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS em.title: typeof IDL attribute 
PASS em.title: IDL get with DOM attribute unset 
PASS em.title: setAttribute() to "" followed by getAttribute() 
PASS em.title: setAttribute() to "" followed by IDL get 
PASS em.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS em.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS em.title: setAttribute() to undefined followed by getAttribute() 
PASS em.title: setAttribute() to undefined followed by IDL get 
PASS em.title: setAttribute() to 7 followed by getAttribute() 
PASS em.title: setAttribute() to 7 followed by IDL get 
PASS em.title: setAttribute() to 1.5 followed by getAttribute() 
PASS em.title: setAttribute() to 1.5 followed by IDL get 
PASS em.title: setAttribute() to true followed by getAttribute() 
PASS em.title: setAttribute() to true followed by IDL get 
PASS em.title: setAttribute() to false followed by getAttribute() 
PASS em.title: setAttribute() to false followed by IDL get 
PASS em.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS em.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS em.title: setAttribute() to NaN followed by getAttribute() 
PASS em.title: setAttribute() to NaN followed by IDL get 
PASS em.title: setAttribute() to Infinity followed by getAttribute() 
PASS em.title: setAttribute() to Infinity followed by IDL get 
PASS em.title: setAttribute() to -Infinity followed by getAttribute() 
PASS em.title: setAttribute() to -Infinity followed by IDL get 
PASS em.title: setAttribute() to "\0" followed by getAttribute() 
PASS em.title: setAttribute() to "\0" followed by IDL get 
PASS em.title: setAttribute() to null followed by getAttribute() 
PASS em.title: setAttribute() to null followed by IDL get 
PASS em.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS em.title: setAttribute() to object "test-toString" followed by IDL get 
PASS em.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS em.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS em.title: IDL set to "" should not throw 
PASS em.title: IDL set to "" followed by getAttribute() 
PASS em.title: IDL set to "" followed by IDL get 
PASS em.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS em.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS em.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS em.title: IDL set to undefined should not throw 
PASS em.title: IDL set to undefined followed by getAttribute() 
PASS em.title: IDL set to undefined followed by IDL get 
PASS em.title: IDL set to 7 should not throw 
PASS em.title: IDL set to 7 followed by getAttribute() 
PASS em.title: IDL set to 7 followed by IDL get 
PASS em.title: IDL set to 1.5 should not throw 
PASS em.title: IDL set to 1.5 followed by getAttribute() 
PASS em.title: IDL set to 1.5 followed by IDL get 
PASS em.title: IDL set to true should not throw 
PASS em.title: IDL set to true followed by getAttribute() 
PASS em.title: IDL set to true followed by IDL get 
PASS em.title: IDL set to false should not throw 
PASS em.title: IDL set to false followed by getAttribute() 
PASS em.title: IDL set to false followed by IDL get 
PASS em.title: IDL set to object "[object Object]" should not throw 
PASS em.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS em.title: IDL set to object "[object Object]" followed by IDL get 
PASS em.title: IDL set to NaN should not throw 
PASS em.title: IDL set to NaN followed by getAttribute() 
PASS em.title: IDL set to NaN followed by IDL get 
PASS em.title: IDL set to Infinity should not throw 
PASS em.title: IDL set to Infinity followed by getAttribute() 
PASS em.title: IDL set to Infinity followed by IDL get 
PASS em.title: IDL set to -Infinity should not throw 
PASS em.title: IDL set to -Infinity followed by getAttribute() 
PASS em.title: IDL set to -Infinity followed by IDL get 
PASS em.title: IDL set to "\0" should not throw 
PASS em.title: IDL set to "\0" followed by getAttribute() 
PASS em.title: IDL set to "\0" followed by IDL get 
PASS em.title: IDL set to null should not throw 
PASS em.title: IDL set to null followed by getAttribute() 
PASS em.title: IDL set to null followed by IDL get 
PASS em.title: IDL set to object "test-toString" should not throw 
PASS em.title: IDL set to object "test-toString" followed by getAttribute() 
PASS em.title: IDL set to object "test-toString" followed by IDL get 
PASS em.title: IDL set to object "test-valueOf" should not throw 
PASS em.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS em.title: IDL set to object "test-valueOf" followed by IDL get 
PASS em.lang: typeof IDL attribute 
PASS em.lang: IDL get with DOM attribute unset 
PASS em.lang: setAttribute() to "" followed by getAttribute() 
PASS em.lang: setAttribute() to "" followed by IDL get 
PASS em.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS em.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS em.lang: setAttribute() to undefined followed by getAttribute() 
PASS em.lang: setAttribute() to undefined followed by IDL get 
PASS em.lang: setAttribute() to 7 followed by getAttribute() 
PASS em.lang: setAttribute() to 7 followed by IDL get 
PASS em.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS em.lang: setAttribute() to 1.5 followed by IDL get 
PASS em.lang: setAttribute() to true followed by getAttribute() 
PASS em.lang: setAttribute() to true followed by IDL get 
PASS em.lang: setAttribute() to false followed by getAttribute() 
PASS em.lang: setAttribute() to false followed by IDL get 
PASS em.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS em.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS em.lang: setAttribute() to NaN followed by getAttribute() 
PASS em.lang: setAttribute() to NaN followed by IDL get 
PASS em.lang: setAttribute() to Infinity followed by getAttribute() 
PASS em.lang: setAttribute() to Infinity followed by IDL get 
PASS em.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS em.lang: setAttribute() to -Infinity followed by IDL get 
PASS em.lang: setAttribute() to "\0" followed by getAttribute() 
PASS em.lang: setAttribute() to "\0" followed by IDL get 
PASS em.lang: setAttribute() to null followed by getAttribute() 
PASS em.lang: setAttribute() to null followed by IDL get 
PASS em.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS em.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS em.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS em.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS em.lang: IDL set to "" should not throw 
PASS em.lang: IDL set to "" followed by getAttribute() 
PASS em.lang: IDL set to "" followed by IDL get 
PASS em.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS em.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS em.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS em.lang: IDL set to undefined should not throw 
PASS em.lang: IDL set to undefined followed by getAttribute() 
PASS em.lang: IDL set to undefined followed by IDL get 
PASS em.lang: IDL set to 7 should not throw 
PASS em.lang: IDL set to 7 followed by getAttribute() 
PASS em.lang: IDL set to 7 followed by IDL get 
PASS em.lang: IDL set to 1.5 should not throw 
PASS em.lang: IDL set to 1.5 followed by getAttribute() 
PASS em.lang: IDL set to 1.5 followed by IDL get 
PASS em.lang: IDL set to true should not throw 
PASS em.lang: IDL set to true followed by getAttribute() 
PASS em.lang: IDL set to true followed by IDL get 
PASS em.lang: IDL set to false should not throw 
PASS em.lang: IDL set to false followed by getAttribute() 
PASS em.lang: IDL set to false followed by IDL get 
PASS em.lang: IDL set to object "[object Object]" should not throw 
PASS em.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS em.lang: IDL set to object "[object Object]" followed by IDL get 
PASS em.lang: IDL set to NaN should not throw 
PASS em.lang: IDL set to NaN followed by getAttribute() 
PASS em.lang: IDL set to NaN followed by IDL get 
PASS em.lang: IDL set to Infinity should not throw 
PASS em.lang: IDL set to Infinity followed by getAttribute() 
PASS em.lang: IDL set to Infinity followed by IDL get 
PASS em.lang: IDL set to -Infinity should not throw 
PASS em.lang: IDL set to -Infinity followed by getAttribute() 
PASS em.lang: IDL set to -Infinity followed by IDL get 
PASS em.lang: IDL set to "\0" should not throw 
PASS em.lang: IDL set to "\0" followed by getAttribute() 
PASS em.lang: IDL set to "\0" followed by IDL get 
PASS em.lang: IDL set to null should not throw 
PASS em.lang: IDL set to null followed by getAttribute() 
PASS em.lang: IDL set to null followed by IDL get 
PASS em.lang: IDL set to object "test-toString" should not throw 
PASS em.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS em.lang: IDL set to object "test-toString" followed by IDL get 
PASS em.lang: IDL set to object "test-valueOf" should not throw 
PASS em.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS em.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS em.dir: typeof IDL attribute 
PASS em.dir: IDL get with DOM attribute unset 
PASS em.dir: setAttribute() to "" followed by getAttribute() 
PASS em.dir: setAttribute() to "" followed by IDL get 
PASS em.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS em.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS em.dir: setAttribute() to undefined followed by getAttribute() 
PASS em.dir: setAttribute() to undefined followed by IDL get 
PASS em.dir: setAttribute() to 7 followed by getAttribute() 
PASS em.dir: setAttribute() to 7 followed by IDL get 
PASS em.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS em.dir: setAttribute() to 1.5 followed by IDL get 
PASS em.dir: setAttribute() to true followed by getAttribute() 
PASS em.dir: setAttribute() to true followed by IDL get 
PASS em.dir: setAttribute() to false followed by getAttribute() 
PASS em.dir: setAttribute() to false followed by IDL get 
PASS em.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS em.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS em.dir: setAttribute() to NaN followed by getAttribute() 
PASS em.dir: setAttribute() to NaN followed by IDL get 
PASS em.dir: setAttribute() to Infinity followed by getAttribute() 
PASS em.dir: setAttribute() to Infinity followed by IDL get 
PASS em.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS em.dir: setAttribute() to -Infinity followed by IDL get 
PASS em.dir: setAttribute() to "\0" followed by getAttribute() 
PASS em.dir: setAttribute() to "\0" followed by IDL get 
PASS em.dir: setAttribute() to null followed by getAttribute() 
PASS em.dir: setAttribute() to null followed by IDL get 
PASS em.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS em.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS em.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS em.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS em.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS em.dir: setAttribute() to "ltr" followed by IDL get 
PASS em.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS em.dir: setAttribute() to "xltr" followed by IDL get 
PASS em.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS em.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS em.dir: setAttribute() to "tr" followed by getAttribute() 
PASS em.dir: setAttribute() to "tr" followed by IDL get 
PASS em.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS em.dir: setAttribute() to "LTR" followed by IDL get 
PASS em.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS em.dir: setAttribute() to "rtl" followed by IDL get 
PASS em.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS em.dir: setAttribute() to "xrtl" followed by IDL get 
PASS em.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS em.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS em.dir: setAttribute() to "tl" followed by getAttribute() 
PASS em.dir: setAttribute() to "tl" followed by IDL get 
PASS em.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS em.dir: setAttribute() to "RTL" followed by IDL get 
PASS em.dir: setAttribute() to "auto" followed by getAttribute() 
PASS em.dir: setAttribute() to "auto" followed by IDL get 
PASS em.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS em.dir: setAttribute() to "xauto" followed by IDL get 
PASS em.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS em.dir: setAttribute() to "auto\0" followed by IDL get 
PASS em.dir: setAttribute() to "uto" followed by getAttribute() 
PASS em.dir: setAttribute() to "uto" followed by IDL get 
PASS em.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS em.dir: setAttribute() to "AUTO" followed by IDL get 
PASS em.dir: IDL set to "" should not throw 
PASS em.dir: IDL set to "" followed by getAttribute() 
PASS em.dir: IDL set to "" followed by IDL get 
PASS em.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS em.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS em.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS em.dir: IDL set to undefined should not throw 
PASS em.dir: IDL set to undefined followed by getAttribute() 
PASS em.dir: IDL set to undefined followed by IDL get 
PASS em.dir: IDL set to 7 should not throw 
PASS em.dir: IDL set to 7 followed by getAttribute() 
PASS em.dir: IDL set to 7 followed by IDL get 
PASS em.dir: IDL set to 1.5 should not throw 
PASS em.dir: IDL set to 1.5 followed by getAttribute() 
PASS em.dir: IDL set to 1.5 followed by IDL get 
PASS em.dir: IDL set to true should not throw 
PASS em.dir: IDL set to true followed by getAttribute() 
PASS em.dir: IDL set to true followed by IDL get 
PASS em.dir: IDL set to false should not throw 
PASS em.dir: IDL set to false followed by getAttribute() 
PASS em.dir: IDL set to false followed by IDL get 
PASS em.dir: IDL set to object "[object Object]" should not throw 
PASS em.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS em.dir: IDL set to object "[object Object]" followed by IDL get 
PASS em.dir: IDL set to NaN should not throw 
PASS em.dir: IDL set to NaN followed by getAttribute() 
PASS em.dir: IDL set to NaN followed by IDL get 
PASS em.dir: IDL set to Infinity should not throw 
PASS em.dir: IDL set to Infinity followed by getAttribute() 
PASS em.dir: IDL set to Infinity followed by IDL get 
PASS em.dir: IDL set to -Infinity should not throw 
PASS em.dir: IDL set to -Infinity followed by getAttribute() 
PASS em.dir: IDL set to -Infinity followed by IDL get 
PASS em.dir: IDL set to "\0" should not throw 
PASS em.dir: IDL set to "\0" followed by getAttribute() 
PASS em.dir: IDL set to "\0" followed by IDL get 
PASS em.dir: IDL set to null should not throw 
PASS em.dir: IDL set to null followed by IDL get 
PASS em.dir: IDL set to object "test-toString" should not throw 
PASS em.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS em.dir: IDL set to object "test-toString" followed by IDL get 
PASS em.dir: IDL set to object "test-valueOf" should not throw 
PASS em.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS em.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS em.dir: IDL set to "ltr" should not throw 
PASS em.dir: IDL set to "ltr" followed by getAttribute() 
PASS em.dir: IDL set to "ltr" followed by IDL get 
PASS em.dir: IDL set to "xltr" should not throw 
PASS em.dir: IDL set to "xltr" followed by getAttribute() 
PASS em.dir: IDL set to "xltr" followed by IDL get 
PASS em.dir: IDL set to "ltr\0" should not throw 
PASS em.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS em.dir: IDL set to "ltr\0" followed by IDL get 
PASS em.dir: IDL set to "tr" should not throw 
PASS em.dir: IDL set to "tr" followed by getAttribute() 
PASS em.dir: IDL set to "tr" followed by IDL get 
PASS em.dir: IDL set to "LTR" should not throw 
PASS em.dir: IDL set to "LTR" followed by getAttribute() 
PASS em.dir: IDL set to "LTR" followed by IDL get 
PASS em.dir: IDL set to "rtl" should not throw 
PASS em.dir: IDL set to "rtl" followed by getAttribute() 
PASS em.dir: IDL set to "rtl" followed by IDL get 
PASS em.dir: IDL set to "xrtl" should not throw 
PASS em.dir: IDL set to "xrtl" followed by getAttribute() 
PASS em.dir: IDL set to "xrtl" followed by IDL get 
PASS em.dir: IDL set to "rtl\0" should not throw 
PASS em.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS em.dir: IDL set to "rtl\0" followed by IDL get 
PASS em.dir: IDL set to "tl" should not throw 
PASS em.dir: IDL set to "tl" followed by getAttribute() 
PASS em.dir: IDL set to "tl" followed by IDL get 
PASS em.dir: IDL set to "RTL" should not throw 
PASS em.dir: IDL set to "RTL" followed by getAttribute() 
PASS em.dir: IDL set to "RTL" followed by IDL get 
PASS em.dir: IDL set to "auto" should not throw 
PASS em.dir: IDL set to "auto" followed by getAttribute() 
PASS em.dir: IDL set to "auto" followed by IDL get 
PASS em.dir: IDL set to "xauto" should not throw 
PASS em.dir: IDL set to "xauto" followed by getAttribute() 
PASS em.dir: IDL set to "xauto" followed by IDL get 
PASS em.dir: IDL set to "auto\0" should not throw 
PASS em.dir: IDL set to "auto\0" followed by getAttribute() 
PASS em.dir: IDL set to "auto\0" followed by IDL get 
PASS em.dir: IDL set to "uto" should not throw 
PASS em.dir: IDL set to "uto" followed by getAttribute() 
PASS em.dir: IDL set to "uto" followed by IDL get 
PASS em.dir: IDL set to "AUTO" should not throw 
PASS em.dir: IDL set to "AUTO" followed by getAttribute() 
PASS em.dir: IDL set to "AUTO" followed by IDL get 
PASS em.className (<em class>): typeof IDL attribute 
PASS em.className (<em class>): IDL get with DOM attribute unset 
PASS em.className (<em class>): setAttribute() to "" followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to "" followed by IDL get 
PASS em.className (<em class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS em.className (<em class>): setAttribute() to undefined followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to undefined followed by IDL get 
PASS em.className (<em class>): setAttribute() to 7 followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to 7 followed by IDL get 
PASS em.className (<em class>): setAttribute() to 1.5 followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to 1.5 followed by IDL get 
PASS em.className (<em class>): setAttribute() to true followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to true followed by IDL get 
PASS em.className (<em class>): setAttribute() to false followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to false followed by IDL get 
PASS em.className (<em class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS em.className (<em class>): setAttribute() to NaN followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to NaN followed by IDL get 
PASS em.className (<em class>): setAttribute() to Infinity followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to Infinity followed by IDL get 
PASS em.className (<em class>): setAttribute() to -Infinity followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to -Infinity followed by IDL get 
PASS em.className (<em class>): setAttribute() to "\0" followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to "\0" followed by IDL get 
PASS em.className (<em class>): setAttribute() to null followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to null followed by IDL get 
PASS em.className (<em class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to object "test-toString" followed by IDL get 
PASS em.className (<em class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS em.className (<em class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS em.className (<em class>): IDL set to "" should not throw 
PASS em.className (<em class>): IDL set to "" followed by getAttribute() 
PASS em.className (<em class>): IDL set to "" followed by IDL get 
PASS em.className (<em class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS em.className (<em class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS em.className (<em class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS em.className (<em class>): IDL set to undefined should not throw 
PASS em.className (<em class>): IDL set to undefined followed by getAttribute() 
PASS em.className (<em class>): IDL set to undefined followed by IDL get 
PASS em.className (<em class>): IDL set to 7 should not throw 
PASS em.className (<em class>): IDL set to 7 followed by getAttribute() 
PASS em.className (<em class>): IDL set to 7 followed by IDL get 
PASS em.className (<em class>): IDL set to 1.5 should not throw 
PASS em.className (<em class>): IDL set to 1.5 followed by getAttribute() 
PASS em.className (<em class>): IDL set to 1.5 followed by IDL get 
PASS em.className (<em class>): IDL set to true should not throw 
PASS em.className (<em class>): IDL set to true followed by getAttribute() 
PASS em.className (<em class>): IDL set to true followed by IDL get 
PASS em.className (<em class>): IDL set to false should not throw 
PASS em.className (<em class>): IDL set to false followed by getAttribute() 
PASS em.className (<em class>): IDL set to false followed by IDL get 
PASS em.className (<em class>): IDL set to object "[object Object]" should not throw 
PASS em.className (<em class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS em.className (<em class>): IDL set to object "[object Object]" followed by IDL get 
PASS em.className (<em class>): IDL set to NaN should not throw 
PASS em.className (<em class>): IDL set to NaN followed by getAttribute() 
PASS em.className (<em class>): IDL set to NaN followed by IDL get 
PASS em.className (<em class>): IDL set to Infinity should not throw 
PASS em.className (<em class>): IDL set to Infinity followed by getAttribute() 
PASS em.className (<em class>): IDL set to Infinity followed by IDL get 
PASS em.className (<em class>): IDL set to -Infinity should not throw 
PASS em.className (<em class>): IDL set to -Infinity followed by getAttribute() 
PASS em.className (<em class>): IDL set to -Infinity followed by IDL get 
PASS em.className (<em class>): IDL set to "\0" should not throw 
PASS em.className (<em class>): IDL set to "\0" followed by getAttribute() 
PASS em.className (<em class>): IDL set to "\0" followed by IDL get 
PASS em.className (<em class>): IDL set to null should not throw 
PASS em.className (<em class>): IDL set to null followed by getAttribute() 
PASS em.className (<em class>): IDL set to null followed by IDL get 
PASS em.className (<em class>): IDL set to object "test-toString" should not throw 
PASS em.className (<em class>): IDL set to object "test-toString" followed by getAttribute() 
PASS em.className (<em class>): IDL set to object "test-toString" followed by IDL get 
PASS em.className (<em class>): IDL set to object "test-valueOf" should not throw 
PASS em.className (<em class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS em.className (<em class>): IDL set to object "test-valueOf" followed by IDL get 
PASS em.hidden: typeof IDL attribute 
PASS em.hidden: IDL get with DOM attribute unset 
PASS em.hidden: setAttribute() to "" followed by getAttribute() 
PASS em.hidden: setAttribute() to "" followed by IDL get 
PASS em.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS em.hidden: setAttribute() to " foo " followed by IDL get 
PASS em.hidden: setAttribute() to undefined followed by getAttribute() 
PASS em.hidden: setAttribute() to undefined followed by IDL get 
PASS em.hidden: setAttribute() to null followed by getAttribute() 
PASS em.hidden: setAttribute() to null followed by IDL get 
PASS em.hidden: setAttribute() to 7 followed by getAttribute() 
PASS em.hidden: setAttribute() to 7 followed by IDL get 
PASS em.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS em.hidden: setAttribute() to 1.5 followed by IDL get 
PASS em.hidden: setAttribute() to true followed by getAttribute() 
PASS em.hidden: setAttribute() to true followed by IDL get 
PASS em.hidden: setAttribute() to false followed by getAttribute() 
PASS em.hidden: setAttribute() to false followed by IDL get 
PASS em.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS em.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS em.hidden: setAttribute() to NaN followed by getAttribute() 
PASS em.hidden: setAttribute() to NaN followed by IDL get 
PASS em.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS em.hidden: setAttribute() to Infinity followed by IDL get 
PASS em.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS em.hidden: setAttribute() to -Infinity followed by IDL get 
PASS em.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS em.hidden: setAttribute() to "\0" followed by IDL get 
PASS em.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS em.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS em.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS em.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS em.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS em.hidden: setAttribute() to "hidden" followed by IDL get 
PASS em.hidden: IDL set to "" should not throw 
PASS em.hidden: IDL set to "" followed by hasAttribute() 
PASS em.hidden: IDL set to "" followed by IDL get 
PASS em.hidden: IDL set to " foo " should not throw 
PASS em.hidden: IDL set to " foo " followed by hasAttribute() 
PASS em.hidden: IDL set to " foo " followed by IDL get 
PASS em.hidden: IDL set to undefined should not throw 
PASS em.hidden: IDL set to undefined followed by hasAttribute() 
PASS em.hidden: IDL set to undefined followed by IDL get 
PASS em.hidden: IDL set to null should not throw 
PASS em.hidden: IDL set to null followed by hasAttribute() 
PASS em.hidden: IDL set to null followed by IDL get 
PASS em.hidden: IDL set to 7 should not throw 
PASS em.hidden: IDL set to 7 followed by hasAttribute() 
PASS em.hidden: IDL set to 7 followed by IDL get 
PASS em.hidden: IDL set to 1.5 should not throw 
PASS em.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS em.hidden: IDL set to 1.5 followed by IDL get 
PASS em.hidden: IDL set to true should not throw 
PASS em.hidden: IDL set to true followed by hasAttribute() 
PASS em.hidden: IDL set to true followed by IDL get 
PASS em.hidden: IDL set to false should not throw 
PASS em.hidden: IDL set to false followed by hasAttribute() 
PASS em.hidden: IDL set to false followed by IDL get 
PASS em.hidden: IDL set to object "[object Object]" should not throw 
PASS em.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS em.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS em.hidden: IDL set to NaN should not throw 
PASS em.hidden: IDL set to NaN followed by hasAttribute() 
PASS em.hidden: IDL set to NaN followed by IDL get 
PASS em.hidden: IDL set to Infinity should not throw 
PASS em.hidden: IDL set to Infinity followed by hasAttribute() 
PASS em.hidden: IDL set to Infinity followed by IDL get 
PASS em.hidden: IDL set to -Infinity should not throw 
PASS em.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS em.hidden: IDL set to -Infinity followed by IDL get 
PASS em.hidden: IDL set to "\0" should not throw 
PASS em.hidden: IDL set to "\0" followed by hasAttribute() 
PASS em.hidden: IDL set to "\0" followed by IDL get 
PASS em.hidden: IDL set to object "test-toString" should not throw 
PASS em.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS em.hidden: IDL set to object "test-toString" followed by IDL get 
PASS em.hidden: IDL set to object "test-valueOf" should not throw 
PASS em.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS em.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS em.accessKey: typeof IDL attribute 
PASS em.accessKey: IDL get with DOM attribute unset 
PASS em.accessKey: setAttribute() to "" followed by getAttribute() 
PASS em.accessKey: setAttribute() to "" followed by IDL get 
PASS em.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS em.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS em.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS em.accessKey: setAttribute() to undefined followed by IDL get 
PASS em.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS em.accessKey: setAttribute() to 7 followed by IDL get 
PASS em.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS em.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS em.accessKey: setAttribute() to true followed by getAttribute() 
PASS em.accessKey: setAttribute() to true followed by IDL get 
PASS em.accessKey: setAttribute() to false followed by getAttribute() 
PASS em.accessKey: setAttribute() to false followed by IDL get 
PASS em.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS em.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS em.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS em.accessKey: setAttribute() to NaN followed by IDL get 
PASS em.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS em.accessKey: setAttribute() to Infinity followed by IDL get 
PASS em.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS em.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS em.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS em.accessKey: setAttribute() to "\0" followed by IDL get 
PASS em.accessKey: setAttribute() to null followed by getAttribute() 
PASS em.accessKey: setAttribute() to null followed by IDL get 
PASS em.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS em.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS em.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS em.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS em.accessKey: IDL set to "" should not throw 
PASS em.accessKey: IDL set to "" followed by getAttribute() 
PASS em.accessKey: IDL set to "" followed by IDL get 
PASS em.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS em.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS em.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS em.accessKey: IDL set to undefined should not throw 
PASS em.accessKey: IDL set to undefined followed by getAttribute() 
PASS em.accessKey: IDL set to undefined followed by IDL get 
PASS em.accessKey: IDL set to 7 should not throw 
PASS em.accessKey: IDL set to 7 followed by getAttribute() 
PASS em.accessKey: IDL set to 7 followed by IDL get 
PASS em.accessKey: IDL set to 1.5 should not throw 
PASS em.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS em.accessKey: IDL set to 1.5 followed by IDL get 
PASS em.accessKey: IDL set to true should not throw 
PASS em.accessKey: IDL set to true followed by getAttribute() 
PASS em.accessKey: IDL set to true followed by IDL get 
PASS em.accessKey: IDL set to false should not throw 
PASS em.accessKey: IDL set to false followed by getAttribute() 
PASS em.accessKey: IDL set to false followed by IDL get 
PASS em.accessKey: IDL set to object "[object Object]" should not throw 
PASS em.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS em.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS em.accessKey: IDL set to NaN should not throw 
PASS em.accessKey: IDL set to NaN followed by getAttribute() 
PASS em.accessKey: IDL set to NaN followed by IDL get 
PASS em.accessKey: IDL set to Infinity should not throw 
PASS em.accessKey: IDL set to Infinity followed by getAttribute() 
PASS em.accessKey: IDL set to Infinity followed by IDL get 
PASS em.accessKey: IDL set to -Infinity should not throw 
PASS em.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS em.accessKey: IDL set to -Infinity followed by IDL get 
PASS em.accessKey: IDL set to "\0" should not throw 
PASS em.accessKey: IDL set to "\0" followed by getAttribute() 
PASS em.accessKey: IDL set to "\0" followed by IDL get 
PASS em.accessKey: IDL set to null should not throw 
PASS em.accessKey: IDL set to null followed by getAttribute() 
PASS em.accessKey: IDL set to null followed by IDL get 
PASS em.accessKey: IDL set to object "test-toString" should not throw 
PASS em.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS em.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS em.accessKey: IDL set to object "test-valueOf" should not throw 
PASS em.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS em.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS em.tabIndex: typeof IDL attribute 
PASS em.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS em.tabIndex: setAttribute() to -36 followed by IDL get 
PASS em.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS em.tabIndex: setAttribute() to -1 followed by IDL get 
PASS em.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS em.tabIndex: setAttribute() to 0 followed by IDL get 
PASS em.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS em.tabIndex: setAttribute() to 1 followed by IDL get 
PASS em.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL em.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS em.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL em.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS em.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS em.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS em.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS em.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS em.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS em.tabIndex: setAttribute() to "0" followed by IDL get 
PASS em.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS em.tabIndex: setAttribute() to "1" followed by IDL get 
PASS em.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS em.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS em.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS em.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS em.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS em.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS em.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS em.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS em.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS em.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS em.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS em.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS em.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS em.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS em.tabIndex: IDL set to -36 should not throw 
PASS em.tabIndex: IDL set to -36 followed by getAttribute() 
PASS em.tabIndex: IDL set to -36 followed by IDL get 
PASS em.tabIndex: IDL set to -1 should not throw 
PASS em.tabIndex: IDL set to -1 followed by getAttribute() 
PASS em.tabIndex: IDL set to -1 followed by IDL get 
PASS em.tabIndex: IDL set to 0 should not throw 
PASS em.tabIndex: IDL set to 0 followed by getAttribute() 
PASS em.tabIndex: IDL set to 0 followed by IDL get 
PASS em.tabIndex: IDL set to 1 should not throw 
PASS em.tabIndex: IDL set to 1 followed by getAttribute() 
PASS em.tabIndex: IDL set to 1 followed by IDL get 
PASS em.tabIndex: IDL set to 2147483647 should not throw 
PASS em.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL em.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS em.tabIndex: IDL set to -2147483648 should not throw 
PASS em.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL em.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL em.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL em.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS em.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL em.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL em.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL em.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to null followed by getAttribute() 
FAIL em.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL em.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL em.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to true followed by getAttribute() 
FAIL em.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to false followed by getAttribute() 
FAIL em.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL em.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL em.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL em.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL em.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL em.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL em.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL em.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL em.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS em.itemScope: IDL set to "" should not throw 
FAIL em.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL em.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS em.itemScope: IDL set to " foo " should not throw 
PASS em.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL em.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS em.itemScope: IDL set to undefined should not throw 
FAIL em.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL em.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS em.itemScope: IDL set to null should not throw 
FAIL em.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL em.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS em.itemScope: IDL set to 7 should not throw 
PASS em.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL em.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS em.itemScope: IDL set to 1.5 should not throw 
PASS em.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL em.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS em.itemScope: IDL set to true should not throw 
PASS em.itemScope: IDL set to true followed by hasAttribute() 
PASS em.itemScope: IDL set to true followed by IDL get 
PASS em.itemScope: IDL set to false should not throw 
FAIL em.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS em.itemScope: IDL set to false followed by IDL get 
PASS em.itemScope: IDL set to object "[object Object]" should not throw 
PASS em.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL em.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS em.itemScope: IDL set to NaN should not throw 
FAIL em.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL em.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS em.itemScope: IDL set to Infinity should not throw 
PASS em.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL em.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS em.itemScope: IDL set to -Infinity should not throw 
PASS em.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL em.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS em.itemScope: IDL set to "\0" should not throw 
PASS em.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL em.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS em.itemScope: IDL set to object "test-toString" should not throw 
PASS em.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL em.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS em.itemScope: IDL set to object "test-valueOf" should not throw 
PASS em.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL em.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL em.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL em.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS em.itemId: setAttribute() to "" followed by getAttribute() 
FAIL em.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS em.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL em.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS em.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL em.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS em.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL em.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS em.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL em.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS em.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL em.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS em.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL em.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS em.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL em.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS em.itemId: setAttribute() to true followed by getAttribute() 
FAIL em.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS em.itemId: setAttribute() to false followed by getAttribute() 
FAIL em.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS em.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL em.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS em.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL em.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS em.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL em.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS em.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL em.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS em.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL em.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS em.itemId: setAttribute() to null followed by getAttribute() 
FAIL em.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS em.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL em.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS em.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL em.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS em.itemId: IDL set to "" should not throw 
FAIL em.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL em.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS em.itemId: IDL set to " foo " should not throw 
FAIL em.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL em.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS em.itemId: IDL set to "http://site.example/" should not throw 
FAIL em.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS em.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS em.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL em.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL em.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS em.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL em.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL em.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS em.itemId: IDL set to undefined should not throw 
FAIL em.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL em.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS em.itemId: IDL set to 7 should not throw 
FAIL em.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL em.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS em.itemId: IDL set to 1.5 should not throw 
FAIL em.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL em.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS em.itemId: IDL set to true should not throw 
FAIL em.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL em.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS em.itemId: IDL set to false should not throw 
FAIL em.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL em.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS em.itemId: IDL set to object "[object Object]" should not throw 
FAIL em.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL em.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS em.itemId: IDL set to NaN should not throw 
FAIL em.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL em.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS em.itemId: IDL set to Infinity should not throw 
FAIL em.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL em.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS em.itemId: IDL set to -Infinity should not throw 
FAIL em.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL em.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS em.itemId: IDL set to "\0" should not throw 
FAIL em.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL em.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS em.itemId: IDL set to null should not throw 
FAIL em.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL em.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS em.itemId: IDL set to object "test-toString" should not throw 
FAIL em.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL em.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS em.itemId: IDL set to object "test-valueOf" should not throw 
PASS em.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL em.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS strong.title: typeof IDL attribute 
PASS strong.title: IDL get with DOM attribute unset 
PASS strong.title: setAttribute() to "" followed by getAttribute() 
PASS strong.title: setAttribute() to "" followed by IDL get 
PASS strong.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS strong.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS strong.title: setAttribute() to undefined followed by getAttribute() 
PASS strong.title: setAttribute() to undefined followed by IDL get 
PASS strong.title: setAttribute() to 7 followed by getAttribute() 
PASS strong.title: setAttribute() to 7 followed by IDL get 
PASS strong.title: setAttribute() to 1.5 followed by getAttribute() 
PASS strong.title: setAttribute() to 1.5 followed by IDL get 
PASS strong.title: setAttribute() to true followed by getAttribute() 
PASS strong.title: setAttribute() to true followed by IDL get 
PASS strong.title: setAttribute() to false followed by getAttribute() 
PASS strong.title: setAttribute() to false followed by IDL get 
PASS strong.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS strong.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS strong.title: setAttribute() to NaN followed by getAttribute() 
PASS strong.title: setAttribute() to NaN followed by IDL get 
PASS strong.title: setAttribute() to Infinity followed by getAttribute() 
PASS strong.title: setAttribute() to Infinity followed by IDL get 
PASS strong.title: setAttribute() to -Infinity followed by getAttribute() 
PASS strong.title: setAttribute() to -Infinity followed by IDL get 
PASS strong.title: setAttribute() to "\0" followed by getAttribute() 
PASS strong.title: setAttribute() to "\0" followed by IDL get 
PASS strong.title: setAttribute() to null followed by getAttribute() 
PASS strong.title: setAttribute() to null followed by IDL get 
PASS strong.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS strong.title: setAttribute() to object "test-toString" followed by IDL get 
PASS strong.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS strong.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS strong.title: IDL set to "" should not throw 
PASS strong.title: IDL set to "" followed by getAttribute() 
PASS strong.title: IDL set to "" followed by IDL get 
PASS strong.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS strong.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS strong.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS strong.title: IDL set to undefined should not throw 
PASS strong.title: IDL set to undefined followed by getAttribute() 
PASS strong.title: IDL set to undefined followed by IDL get 
PASS strong.title: IDL set to 7 should not throw 
PASS strong.title: IDL set to 7 followed by getAttribute() 
PASS strong.title: IDL set to 7 followed by IDL get 
PASS strong.title: IDL set to 1.5 should not throw 
PASS strong.title: IDL set to 1.5 followed by getAttribute() 
PASS strong.title: IDL set to 1.5 followed by IDL get 
PASS strong.title: IDL set to true should not throw 
PASS strong.title: IDL set to true followed by getAttribute() 
PASS strong.title: IDL set to true followed by IDL get 
PASS strong.title: IDL set to false should not throw 
PASS strong.title: IDL set to false followed by getAttribute() 
PASS strong.title: IDL set to false followed by IDL get 
PASS strong.title: IDL set to object "[object Object]" should not throw 
PASS strong.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS strong.title: IDL set to object "[object Object]" followed by IDL get 
PASS strong.title: IDL set to NaN should not throw 
PASS strong.title: IDL set to NaN followed by getAttribute() 
PASS strong.title: IDL set to NaN followed by IDL get 
PASS strong.title: IDL set to Infinity should not throw 
PASS strong.title: IDL set to Infinity followed by getAttribute() 
PASS strong.title: IDL set to Infinity followed by IDL get 
PASS strong.title: IDL set to -Infinity should not throw 
PASS strong.title: IDL set to -Infinity followed by getAttribute() 
PASS strong.title: IDL set to -Infinity followed by IDL get 
PASS strong.title: IDL set to "\0" should not throw 
PASS strong.title: IDL set to "\0" followed by getAttribute() 
PASS strong.title: IDL set to "\0" followed by IDL get 
PASS strong.title: IDL set to null should not throw 
PASS strong.title: IDL set to null followed by getAttribute() 
PASS strong.title: IDL set to null followed by IDL get 
PASS strong.title: IDL set to object "test-toString" should not throw 
PASS strong.title: IDL set to object "test-toString" followed by getAttribute() 
PASS strong.title: IDL set to object "test-toString" followed by IDL get 
PASS strong.title: IDL set to object "test-valueOf" should not throw 
PASS strong.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS strong.title: IDL set to object "test-valueOf" followed by IDL get 
PASS strong.lang: typeof IDL attribute 
PASS strong.lang: IDL get with DOM attribute unset 
PASS strong.lang: setAttribute() to "" followed by getAttribute() 
PASS strong.lang: setAttribute() to "" followed by IDL get 
PASS strong.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS strong.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS strong.lang: setAttribute() to undefined followed by getAttribute() 
PASS strong.lang: setAttribute() to undefined followed by IDL get 
PASS strong.lang: setAttribute() to 7 followed by getAttribute() 
PASS strong.lang: setAttribute() to 7 followed by IDL get 
PASS strong.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS strong.lang: setAttribute() to 1.5 followed by IDL get 
PASS strong.lang: setAttribute() to true followed by getAttribute() 
PASS strong.lang: setAttribute() to true followed by IDL get 
PASS strong.lang: setAttribute() to false followed by getAttribute() 
PASS strong.lang: setAttribute() to false followed by IDL get 
PASS strong.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS strong.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS strong.lang: setAttribute() to NaN followed by getAttribute() 
PASS strong.lang: setAttribute() to NaN followed by IDL get 
PASS strong.lang: setAttribute() to Infinity followed by getAttribute() 
PASS strong.lang: setAttribute() to Infinity followed by IDL get 
PASS strong.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS strong.lang: setAttribute() to -Infinity followed by IDL get 
PASS strong.lang: setAttribute() to "\0" followed by getAttribute() 
PASS strong.lang: setAttribute() to "\0" followed by IDL get 
PASS strong.lang: setAttribute() to null followed by getAttribute() 
PASS strong.lang: setAttribute() to null followed by IDL get 
PASS strong.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS strong.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS strong.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS strong.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS strong.lang: IDL set to "" should not throw 
PASS strong.lang: IDL set to "" followed by getAttribute() 
PASS strong.lang: IDL set to "" followed by IDL get 
PASS strong.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS strong.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS strong.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS strong.lang: IDL set to undefined should not throw 
PASS strong.lang: IDL set to undefined followed by getAttribute() 
PASS strong.lang: IDL set to undefined followed by IDL get 
PASS strong.lang: IDL set to 7 should not throw 
PASS strong.lang: IDL set to 7 followed by getAttribute() 
PASS strong.lang: IDL set to 7 followed by IDL get 
PASS strong.lang: IDL set to 1.5 should not throw 
PASS strong.lang: IDL set to 1.5 followed by getAttribute() 
PASS strong.lang: IDL set to 1.5 followed by IDL get 
PASS strong.lang: IDL set to true should not throw 
PASS strong.lang: IDL set to true followed by getAttribute() 
PASS strong.lang: IDL set to true followed by IDL get 
PASS strong.lang: IDL set to false should not throw 
PASS strong.lang: IDL set to false followed by getAttribute() 
PASS strong.lang: IDL set to false followed by IDL get 
PASS strong.lang: IDL set to object "[object Object]" should not throw 
PASS strong.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS strong.lang: IDL set to object "[object Object]" followed by IDL get 
PASS strong.lang: IDL set to NaN should not throw 
PASS strong.lang: IDL set to NaN followed by getAttribute() 
PASS strong.lang: IDL set to NaN followed by IDL get 
PASS strong.lang: IDL set to Infinity should not throw 
PASS strong.lang: IDL set to Infinity followed by getAttribute() 
PASS strong.lang: IDL set to Infinity followed by IDL get 
PASS strong.lang: IDL set to -Infinity should not throw 
PASS strong.lang: IDL set to -Infinity followed by getAttribute() 
PASS strong.lang: IDL set to -Infinity followed by IDL get 
PASS strong.lang: IDL set to "\0" should not throw 
PASS strong.lang: IDL set to "\0" followed by getAttribute() 
PASS strong.lang: IDL set to "\0" followed by IDL get 
PASS strong.lang: IDL set to null should not throw 
PASS strong.lang: IDL set to null followed by getAttribute() 
PASS strong.lang: IDL set to null followed by IDL get 
PASS strong.lang: IDL set to object "test-toString" should not throw 
PASS strong.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS strong.lang: IDL set to object "test-toString" followed by IDL get 
PASS strong.lang: IDL set to object "test-valueOf" should not throw 
PASS strong.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS strong.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS strong.dir: typeof IDL attribute 
PASS strong.dir: IDL get with DOM attribute unset 
PASS strong.dir: setAttribute() to "" followed by getAttribute() 
PASS strong.dir: setAttribute() to "" followed by IDL get 
PASS strong.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS strong.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS strong.dir: setAttribute() to undefined followed by getAttribute() 
PASS strong.dir: setAttribute() to undefined followed by IDL get 
PASS strong.dir: setAttribute() to 7 followed by getAttribute() 
PASS strong.dir: setAttribute() to 7 followed by IDL get 
PASS strong.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS strong.dir: setAttribute() to 1.5 followed by IDL get 
PASS strong.dir: setAttribute() to true followed by getAttribute() 
PASS strong.dir: setAttribute() to true followed by IDL get 
PASS strong.dir: setAttribute() to false followed by getAttribute() 
PASS strong.dir: setAttribute() to false followed by IDL get 
PASS strong.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS strong.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS strong.dir: setAttribute() to NaN followed by getAttribute() 
PASS strong.dir: setAttribute() to NaN followed by IDL get 
PASS strong.dir: setAttribute() to Infinity followed by getAttribute() 
PASS strong.dir: setAttribute() to Infinity followed by IDL get 
PASS strong.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS strong.dir: setAttribute() to -Infinity followed by IDL get 
PASS strong.dir: setAttribute() to "\0" followed by getAttribute() 
PASS strong.dir: setAttribute() to "\0" followed by IDL get 
PASS strong.dir: setAttribute() to null followed by getAttribute() 
PASS strong.dir: setAttribute() to null followed by IDL get 
PASS strong.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS strong.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS strong.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS strong.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS strong.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS strong.dir: setAttribute() to "ltr" followed by IDL get 
PASS strong.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS strong.dir: setAttribute() to "xltr" followed by IDL get 
PASS strong.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS strong.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS strong.dir: setAttribute() to "tr" followed by getAttribute() 
PASS strong.dir: setAttribute() to "tr" followed by IDL get 
PASS strong.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS strong.dir: setAttribute() to "LTR" followed by IDL get 
PASS strong.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS strong.dir: setAttribute() to "rtl" followed by IDL get 
PASS strong.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS strong.dir: setAttribute() to "xrtl" followed by IDL get 
PASS strong.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS strong.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS strong.dir: setAttribute() to "tl" followed by getAttribute() 
PASS strong.dir: setAttribute() to "tl" followed by IDL get 
PASS strong.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS strong.dir: setAttribute() to "RTL" followed by IDL get 
PASS strong.dir: setAttribute() to "auto" followed by getAttribute() 
PASS strong.dir: setAttribute() to "auto" followed by IDL get 
PASS strong.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS strong.dir: setAttribute() to "xauto" followed by IDL get 
PASS strong.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS strong.dir: setAttribute() to "auto\0" followed by IDL get 
PASS strong.dir: setAttribute() to "uto" followed by getAttribute() 
PASS strong.dir: setAttribute() to "uto" followed by IDL get 
PASS strong.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS strong.dir: setAttribute() to "AUTO" followed by IDL get 
PASS strong.dir: IDL set to "" should not throw 
PASS strong.dir: IDL set to "" followed by getAttribute() 
PASS strong.dir: IDL set to "" followed by IDL get 
PASS strong.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS strong.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS strong.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS strong.dir: IDL set to undefined should not throw 
PASS strong.dir: IDL set to undefined followed by getAttribute() 
PASS strong.dir: IDL set to undefined followed by IDL get 
PASS strong.dir: IDL set to 7 should not throw 
PASS strong.dir: IDL set to 7 followed by getAttribute() 
PASS strong.dir: IDL set to 7 followed by IDL get 
PASS strong.dir: IDL set to 1.5 should not throw 
PASS strong.dir: IDL set to 1.5 followed by getAttribute() 
PASS strong.dir: IDL set to 1.5 followed by IDL get 
PASS strong.dir: IDL set to true should not throw 
PASS strong.dir: IDL set to true followed by getAttribute() 
PASS strong.dir: IDL set to true followed by IDL get 
PASS strong.dir: IDL set to false should not throw 
PASS strong.dir: IDL set to false followed by getAttribute() 
PASS strong.dir: IDL set to false followed by IDL get 
PASS strong.dir: IDL set to object "[object Object]" should not throw 
PASS strong.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS strong.dir: IDL set to object "[object Object]" followed by IDL get 
PASS strong.dir: IDL set to NaN should not throw 
PASS strong.dir: IDL set to NaN followed by getAttribute() 
PASS strong.dir: IDL set to NaN followed by IDL get 
PASS strong.dir: IDL set to Infinity should not throw 
PASS strong.dir: IDL set to Infinity followed by getAttribute() 
PASS strong.dir: IDL set to Infinity followed by IDL get 
PASS strong.dir: IDL set to -Infinity should not throw 
PASS strong.dir: IDL set to -Infinity followed by getAttribute() 
PASS strong.dir: IDL set to -Infinity followed by IDL get 
PASS strong.dir: IDL set to "\0" should not throw 
PASS strong.dir: IDL set to "\0" followed by getAttribute() 
PASS strong.dir: IDL set to "\0" followed by IDL get 
PASS strong.dir: IDL set to null should not throw 
PASS strong.dir: IDL set to null followed by IDL get 
PASS strong.dir: IDL set to object "test-toString" should not throw 
PASS strong.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS strong.dir: IDL set to object "test-toString" followed by IDL get 
PASS strong.dir: IDL set to object "test-valueOf" should not throw 
PASS strong.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS strong.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS strong.dir: IDL set to "ltr" should not throw 
PASS strong.dir: IDL set to "ltr" followed by getAttribute() 
PASS strong.dir: IDL set to "ltr" followed by IDL get 
PASS strong.dir: IDL set to "xltr" should not throw 
PASS strong.dir: IDL set to "xltr" followed by getAttribute() 
PASS strong.dir: IDL set to "xltr" followed by IDL get 
PASS strong.dir: IDL set to "ltr\0" should not throw 
PASS strong.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS strong.dir: IDL set to "ltr\0" followed by IDL get 
PASS strong.dir: IDL set to "tr" should not throw 
PASS strong.dir: IDL set to "tr" followed by getAttribute() 
PASS strong.dir: IDL set to "tr" followed by IDL get 
PASS strong.dir: IDL set to "LTR" should not throw 
PASS strong.dir: IDL set to "LTR" followed by getAttribute() 
PASS strong.dir: IDL set to "LTR" followed by IDL get 
PASS strong.dir: IDL set to "rtl" should not throw 
PASS strong.dir: IDL set to "rtl" followed by getAttribute() 
PASS strong.dir: IDL set to "rtl" followed by IDL get 
PASS strong.dir: IDL set to "xrtl" should not throw 
PASS strong.dir: IDL set to "xrtl" followed by getAttribute() 
PASS strong.dir: IDL set to "xrtl" followed by IDL get 
PASS strong.dir: IDL set to "rtl\0" should not throw 
PASS strong.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS strong.dir: IDL set to "rtl\0" followed by IDL get 
PASS strong.dir: IDL set to "tl" should not throw 
PASS strong.dir: IDL set to "tl" followed by getAttribute() 
PASS strong.dir: IDL set to "tl" followed by IDL get 
PASS strong.dir: IDL set to "RTL" should not throw 
PASS strong.dir: IDL set to "RTL" followed by getAttribute() 
PASS strong.dir: IDL set to "RTL" followed by IDL get 
PASS strong.dir: IDL set to "auto" should not throw 
PASS strong.dir: IDL set to "auto" followed by getAttribute() 
PASS strong.dir: IDL set to "auto" followed by IDL get 
PASS strong.dir: IDL set to "xauto" should not throw 
PASS strong.dir: IDL set to "xauto" followed by getAttribute() 
PASS strong.dir: IDL set to "xauto" followed by IDL get 
PASS strong.dir: IDL set to "auto\0" should not throw 
PASS strong.dir: IDL set to "auto\0" followed by getAttribute() 
PASS strong.dir: IDL set to "auto\0" followed by IDL get 
PASS strong.dir: IDL set to "uto" should not throw 
PASS strong.dir: IDL set to "uto" followed by getAttribute() 
PASS strong.dir: IDL set to "uto" followed by IDL get 
PASS strong.dir: IDL set to "AUTO" should not throw 
PASS strong.dir: IDL set to "AUTO" followed by getAttribute() 
PASS strong.dir: IDL set to "AUTO" followed by IDL get 
PASS strong.className (<strong class>): typeof IDL attribute 
PASS strong.className (<strong class>): IDL get with DOM attribute unset 
PASS strong.className (<strong class>): setAttribute() to "" followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to "" followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to undefined followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to undefined followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to 7 followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to 7 followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to 1.5 followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to 1.5 followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to true followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to true followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to false followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to false followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to NaN followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to NaN followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to Infinity followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to Infinity followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to -Infinity followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to -Infinity followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to "\0" followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to "\0" followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to null followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to null followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to object "test-toString" followed by IDL get 
PASS strong.className (<strong class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS strong.className (<strong class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS strong.className (<strong class>): IDL set to "" should not throw 
PASS strong.className (<strong class>): IDL set to "" followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to "" followed by IDL get 
PASS strong.className (<strong class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS strong.className (<strong class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS strong.className (<strong class>): IDL set to undefined should not throw 
PASS strong.className (<strong class>): IDL set to undefined followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to undefined followed by IDL get 
PASS strong.className (<strong class>): IDL set to 7 should not throw 
PASS strong.className (<strong class>): IDL set to 7 followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to 7 followed by IDL get 
PASS strong.className (<strong class>): IDL set to 1.5 should not throw 
PASS strong.className (<strong class>): IDL set to 1.5 followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to 1.5 followed by IDL get 
PASS strong.className (<strong class>): IDL set to true should not throw 
PASS strong.className (<strong class>): IDL set to true followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to true followed by IDL get 
PASS strong.className (<strong class>): IDL set to false should not throw 
PASS strong.className (<strong class>): IDL set to false followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to false followed by IDL get 
PASS strong.className (<strong class>): IDL set to object "[object Object]" should not throw 
PASS strong.className (<strong class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to object "[object Object]" followed by IDL get 
PASS strong.className (<strong class>): IDL set to NaN should not throw 
PASS strong.className (<strong class>): IDL set to NaN followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to NaN followed by IDL get 
PASS strong.className (<strong class>): IDL set to Infinity should not throw 
PASS strong.className (<strong class>): IDL set to Infinity followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to Infinity followed by IDL get 
PASS strong.className (<strong class>): IDL set to -Infinity should not throw 
PASS strong.className (<strong class>): IDL set to -Infinity followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to -Infinity followed by IDL get 
PASS strong.className (<strong class>): IDL set to "\0" should not throw 
PASS strong.className (<strong class>): IDL set to "\0" followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to "\0" followed by IDL get 
PASS strong.className (<strong class>): IDL set to null should not throw 
PASS strong.className (<strong class>): IDL set to null followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to null followed by IDL get 
PASS strong.className (<strong class>): IDL set to object "test-toString" should not throw 
PASS strong.className (<strong class>): IDL set to object "test-toString" followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to object "test-toString" followed by IDL get 
PASS strong.className (<strong class>): IDL set to object "test-valueOf" should not throw 
PASS strong.className (<strong class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS strong.className (<strong class>): IDL set to object "test-valueOf" followed by IDL get 
PASS strong.hidden: typeof IDL attribute 
PASS strong.hidden: IDL get with DOM attribute unset 
PASS strong.hidden: setAttribute() to "" followed by getAttribute() 
PASS strong.hidden: setAttribute() to "" followed by IDL get 
PASS strong.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS strong.hidden: setAttribute() to " foo " followed by IDL get 
PASS strong.hidden: setAttribute() to undefined followed by getAttribute() 
PASS strong.hidden: setAttribute() to undefined followed by IDL get 
PASS strong.hidden: setAttribute() to null followed by getAttribute() 
PASS strong.hidden: setAttribute() to null followed by IDL get 
PASS strong.hidden: setAttribute() to 7 followed by getAttribute() 
PASS strong.hidden: setAttribute() to 7 followed by IDL get 
PASS strong.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS strong.hidden: setAttribute() to 1.5 followed by IDL get 
PASS strong.hidden: setAttribute() to true followed by getAttribute() 
PASS strong.hidden: setAttribute() to true followed by IDL get 
PASS strong.hidden: setAttribute() to false followed by getAttribute() 
PASS strong.hidden: setAttribute() to false followed by IDL get 
PASS strong.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS strong.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS strong.hidden: setAttribute() to NaN followed by getAttribute() 
PASS strong.hidden: setAttribute() to NaN followed by IDL get 
PASS strong.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS strong.hidden: setAttribute() to Infinity followed by IDL get 
PASS strong.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS strong.hidden: setAttribute() to -Infinity followed by IDL get 
PASS strong.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS strong.hidden: setAttribute() to "\0" followed by IDL get 
PASS strong.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS strong.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS strong.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS strong.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS strong.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS strong.hidden: setAttribute() to "hidden" followed by IDL get 
PASS strong.hidden: IDL set to "" should not throw 
PASS strong.hidden: IDL set to "" followed by hasAttribute() 
PASS strong.hidden: IDL set to "" followed by IDL get 
PASS strong.hidden: IDL set to " foo " should not throw 
PASS strong.hidden: IDL set to " foo " followed by hasAttribute() 
PASS strong.hidden: IDL set to " foo " followed by IDL get 
PASS strong.hidden: IDL set to undefined should not throw 
PASS strong.hidden: IDL set to undefined followed by hasAttribute() 
PASS strong.hidden: IDL set to undefined followed by IDL get 
PASS strong.hidden: IDL set to null should not throw 
PASS strong.hidden: IDL set to null followed by hasAttribute() 
PASS strong.hidden: IDL set to null followed by IDL get 
PASS strong.hidden: IDL set to 7 should not throw 
PASS strong.hidden: IDL set to 7 followed by hasAttribute() 
PASS strong.hidden: IDL set to 7 followed by IDL get 
PASS strong.hidden: IDL set to 1.5 should not throw 
PASS strong.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS strong.hidden: IDL set to 1.5 followed by IDL get 
PASS strong.hidden: IDL set to true should not throw 
PASS strong.hidden: IDL set to true followed by hasAttribute() 
PASS strong.hidden: IDL set to true followed by IDL get 
PASS strong.hidden: IDL set to false should not throw 
PASS strong.hidden: IDL set to false followed by hasAttribute() 
PASS strong.hidden: IDL set to false followed by IDL get 
PASS strong.hidden: IDL set to object "[object Object]" should not throw 
PASS strong.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS strong.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS strong.hidden: IDL set to NaN should not throw 
PASS strong.hidden: IDL set to NaN followed by hasAttribute() 
PASS strong.hidden: IDL set to NaN followed by IDL get 
PASS strong.hidden: IDL set to Infinity should not throw 
PASS strong.hidden: IDL set to Infinity followed by hasAttribute() 
PASS strong.hidden: IDL set to Infinity followed by IDL get 
PASS strong.hidden: IDL set to -Infinity should not throw 
PASS strong.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS strong.hidden: IDL set to -Infinity followed by IDL get 
PASS strong.hidden: IDL set to "\0" should not throw 
PASS strong.hidden: IDL set to "\0" followed by hasAttribute() 
PASS strong.hidden: IDL set to "\0" followed by IDL get 
PASS strong.hidden: IDL set to object "test-toString" should not throw 
PASS strong.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS strong.hidden: IDL set to object "test-toString" followed by IDL get 
PASS strong.hidden: IDL set to object "test-valueOf" should not throw 
PASS strong.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS strong.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS strong.accessKey: typeof IDL attribute 
PASS strong.accessKey: IDL get with DOM attribute unset 
PASS strong.accessKey: setAttribute() to "" followed by getAttribute() 
PASS strong.accessKey: setAttribute() to "" followed by IDL get 
PASS strong.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS strong.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS strong.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS strong.accessKey: setAttribute() to undefined followed by IDL get 
PASS strong.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS strong.accessKey: setAttribute() to 7 followed by IDL get 
PASS strong.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS strong.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS strong.accessKey: setAttribute() to true followed by getAttribute() 
PASS strong.accessKey: setAttribute() to true followed by IDL get 
PASS strong.accessKey: setAttribute() to false followed by getAttribute() 
PASS strong.accessKey: setAttribute() to false followed by IDL get 
PASS strong.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS strong.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS strong.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS strong.accessKey: setAttribute() to NaN followed by IDL get 
PASS strong.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS strong.accessKey: setAttribute() to Infinity followed by IDL get 
PASS strong.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS strong.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS strong.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS strong.accessKey: setAttribute() to "\0" followed by IDL get 
PASS strong.accessKey: setAttribute() to null followed by getAttribute() 
PASS strong.accessKey: setAttribute() to null followed by IDL get 
PASS strong.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS strong.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS strong.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS strong.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS strong.accessKey: IDL set to "" should not throw 
PASS strong.accessKey: IDL set to "" followed by getAttribute() 
PASS strong.accessKey: IDL set to "" followed by IDL get 
PASS strong.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS strong.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS strong.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS strong.accessKey: IDL set to undefined should not throw 
PASS strong.accessKey: IDL set to undefined followed by getAttribute() 
PASS strong.accessKey: IDL set to undefined followed by IDL get 
PASS strong.accessKey: IDL set to 7 should not throw 
PASS strong.accessKey: IDL set to 7 followed by getAttribute() 
PASS strong.accessKey: IDL set to 7 followed by IDL get 
PASS strong.accessKey: IDL set to 1.5 should not throw 
PASS strong.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS strong.accessKey: IDL set to 1.5 followed by IDL get 
PASS strong.accessKey: IDL set to true should not throw 
PASS strong.accessKey: IDL set to true followed by getAttribute() 
PASS strong.accessKey: IDL set to true followed by IDL get 
PASS strong.accessKey: IDL set to false should not throw 
PASS strong.accessKey: IDL set to false followed by getAttribute() 
PASS strong.accessKey: IDL set to false followed by IDL get 
PASS strong.accessKey: IDL set to object "[object Object]" should not throw 
PASS strong.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS strong.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS strong.accessKey: IDL set to NaN should not throw 
PASS strong.accessKey: IDL set to NaN followed by getAttribute() 
PASS strong.accessKey: IDL set to NaN followed by IDL get 
PASS strong.accessKey: IDL set to Infinity should not throw 
PASS strong.accessKey: IDL set to Infinity followed by getAttribute() 
PASS strong.accessKey: IDL set to Infinity followed by IDL get 
PASS strong.accessKey: IDL set to -Infinity should not throw 
PASS strong.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS strong.accessKey: IDL set to -Infinity followed by IDL get 
PASS strong.accessKey: IDL set to "\0" should not throw 
PASS strong.accessKey: IDL set to "\0" followed by getAttribute() 
PASS strong.accessKey: IDL set to "\0" followed by IDL get 
PASS strong.accessKey: IDL set to null should not throw 
PASS strong.accessKey: IDL set to null followed by getAttribute() 
PASS strong.accessKey: IDL set to null followed by IDL get 
PASS strong.accessKey: IDL set to object "test-toString" should not throw 
PASS strong.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS strong.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS strong.accessKey: IDL set to object "test-valueOf" should not throw 
PASS strong.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS strong.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS strong.tabIndex: typeof IDL attribute 
PASS strong.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to -36 followed by IDL get 
PASS strong.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to -1 followed by IDL get 
PASS strong.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to 0 followed by IDL get 
PASS strong.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to 1 followed by IDL get 
PASS strong.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL strong.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS strong.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL strong.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS strong.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS strong.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS strong.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to "0" followed by IDL get 
PASS strong.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to "1" followed by IDL get 
PASS strong.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS strong.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS strong.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS strong.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS strong.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS strong.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS strong.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS strong.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS strong.tabIndex: IDL set to -36 should not throw 
PASS strong.tabIndex: IDL set to -36 followed by getAttribute() 
PASS strong.tabIndex: IDL set to -36 followed by IDL get 
PASS strong.tabIndex: IDL set to -1 should not throw 
PASS strong.tabIndex: IDL set to -1 followed by getAttribute() 
PASS strong.tabIndex: IDL set to -1 followed by IDL get 
PASS strong.tabIndex: IDL set to 0 should not throw 
PASS strong.tabIndex: IDL set to 0 followed by getAttribute() 
PASS strong.tabIndex: IDL set to 0 followed by IDL get 
PASS strong.tabIndex: IDL set to 1 should not throw 
PASS strong.tabIndex: IDL set to 1 followed by getAttribute() 
PASS strong.tabIndex: IDL set to 1 followed by IDL get 
PASS strong.tabIndex: IDL set to 2147483647 should not throw 
PASS strong.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL strong.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS strong.tabIndex: IDL set to -2147483648 should not throw 
PASS strong.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL strong.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL strong.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL strong.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS strong.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to null followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to true followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to false followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL strong.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS strong.itemScope: IDL set to "" should not throw 
FAIL strong.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL strong.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS strong.itemScope: IDL set to " foo " should not throw 
PASS strong.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL strong.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS strong.itemScope: IDL set to undefined should not throw 
FAIL strong.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL strong.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS strong.itemScope: IDL set to null should not throw 
FAIL strong.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL strong.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS strong.itemScope: IDL set to 7 should not throw 
PASS strong.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL strong.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS strong.itemScope: IDL set to 1.5 should not throw 
PASS strong.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL strong.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS strong.itemScope: IDL set to true should not throw 
PASS strong.itemScope: IDL set to true followed by hasAttribute() 
PASS strong.itemScope: IDL set to true followed by IDL get 
PASS strong.itemScope: IDL set to false should not throw 
FAIL strong.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS strong.itemScope: IDL set to false followed by IDL get 
PASS strong.itemScope: IDL set to object "[object Object]" should not throw 
PASS strong.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL strong.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS strong.itemScope: IDL set to NaN should not throw 
FAIL strong.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL strong.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS strong.itemScope: IDL set to Infinity should not throw 
PASS strong.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL strong.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS strong.itemScope: IDL set to -Infinity should not throw 
PASS strong.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL strong.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS strong.itemScope: IDL set to "\0" should not throw 
PASS strong.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL strong.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS strong.itemScope: IDL set to object "test-toString" should not throw 
PASS strong.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL strong.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS strong.itemScope: IDL set to object "test-valueOf" should not throw 
PASS strong.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL strong.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL strong.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL strong.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS strong.itemId: setAttribute() to "" followed by getAttribute() 
FAIL strong.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS strong.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL strong.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS strong.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL strong.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS strong.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL strong.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS strong.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL strong.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS strong.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL strong.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS strong.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL strong.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS strong.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL strong.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS strong.itemId: setAttribute() to true followed by getAttribute() 
FAIL strong.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS strong.itemId: setAttribute() to false followed by getAttribute() 
FAIL strong.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS strong.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL strong.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS strong.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL strong.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS strong.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL strong.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS strong.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL strong.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS strong.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL strong.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS strong.itemId: setAttribute() to null followed by getAttribute() 
FAIL strong.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS strong.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL strong.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS strong.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL strong.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS strong.itemId: IDL set to "" should not throw 
FAIL strong.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL strong.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS strong.itemId: IDL set to " foo " should not throw 
FAIL strong.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL strong.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS strong.itemId: IDL set to "http://site.example/" should not throw 
FAIL strong.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS strong.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS strong.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL strong.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL strong.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS strong.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL strong.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL strong.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS strong.itemId: IDL set to undefined should not throw 
FAIL strong.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL strong.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS strong.itemId: IDL set to 7 should not throw 
FAIL strong.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL strong.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS strong.itemId: IDL set to 1.5 should not throw 
FAIL strong.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL strong.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS strong.itemId: IDL set to true should not throw 
FAIL strong.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL strong.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS strong.itemId: IDL set to false should not throw 
FAIL strong.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL strong.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS strong.itemId: IDL set to object "[object Object]" should not throw 
FAIL strong.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL strong.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS strong.itemId: IDL set to NaN should not throw 
FAIL strong.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL strong.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS strong.itemId: IDL set to Infinity should not throw 
FAIL strong.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL strong.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS strong.itemId: IDL set to -Infinity should not throw 
FAIL strong.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL strong.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS strong.itemId: IDL set to "\0" should not throw 
FAIL strong.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL strong.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS strong.itemId: IDL set to null should not throw 
FAIL strong.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL strong.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS strong.itemId: IDL set to object "test-toString" should not throw 
FAIL strong.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL strong.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS strong.itemId: IDL set to object "test-valueOf" should not throw 
PASS strong.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL strong.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS small.title: typeof IDL attribute 
PASS small.title: IDL get with DOM attribute unset 
PASS small.title: setAttribute() to "" followed by getAttribute() 
PASS small.title: setAttribute() to "" followed by IDL get 
PASS small.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS small.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS small.title: setAttribute() to undefined followed by getAttribute() 
PASS small.title: setAttribute() to undefined followed by IDL get 
PASS small.title: setAttribute() to 7 followed by getAttribute() 
PASS small.title: setAttribute() to 7 followed by IDL get 
PASS small.title: setAttribute() to 1.5 followed by getAttribute() 
PASS small.title: setAttribute() to 1.5 followed by IDL get 
PASS small.title: setAttribute() to true followed by getAttribute() 
PASS small.title: setAttribute() to true followed by IDL get 
PASS small.title: setAttribute() to false followed by getAttribute() 
PASS small.title: setAttribute() to false followed by IDL get 
PASS small.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS small.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS small.title: setAttribute() to NaN followed by getAttribute() 
PASS small.title: setAttribute() to NaN followed by IDL get 
PASS small.title: setAttribute() to Infinity followed by getAttribute() 
PASS small.title: setAttribute() to Infinity followed by IDL get 
PASS small.title: setAttribute() to -Infinity followed by getAttribute() 
PASS small.title: setAttribute() to -Infinity followed by IDL get 
PASS small.title: setAttribute() to "\0" followed by getAttribute() 
PASS small.title: setAttribute() to "\0" followed by IDL get 
PASS small.title: setAttribute() to null followed by getAttribute() 
PASS small.title: setAttribute() to null followed by IDL get 
PASS small.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS small.title: setAttribute() to object "test-toString" followed by IDL get 
PASS small.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS small.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS small.title: IDL set to "" should not throw 
PASS small.title: IDL set to "" followed by getAttribute() 
PASS small.title: IDL set to "" followed by IDL get 
PASS small.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS small.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS small.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS small.title: IDL set to undefined should not throw 
PASS small.title: IDL set to undefined followed by getAttribute() 
PASS small.title: IDL set to undefined followed by IDL get 
PASS small.title: IDL set to 7 should not throw 
PASS small.title: IDL set to 7 followed by getAttribute() 
PASS small.title: IDL set to 7 followed by IDL get 
PASS small.title: IDL set to 1.5 should not throw 
PASS small.title: IDL set to 1.5 followed by getAttribute() 
PASS small.title: IDL set to 1.5 followed by IDL get 
PASS small.title: IDL set to true should not throw 
PASS small.title: IDL set to true followed by getAttribute() 
PASS small.title: IDL set to true followed by IDL get 
PASS small.title: IDL set to false should not throw 
PASS small.title: IDL set to false followed by getAttribute() 
PASS small.title: IDL set to false followed by IDL get 
PASS small.title: IDL set to object "[object Object]" should not throw 
PASS small.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS small.title: IDL set to object "[object Object]" followed by IDL get 
PASS small.title: IDL set to NaN should not throw 
PASS small.title: IDL set to NaN followed by getAttribute() 
PASS small.title: IDL set to NaN followed by IDL get 
PASS small.title: IDL set to Infinity should not throw 
PASS small.title: IDL set to Infinity followed by getAttribute() 
PASS small.title: IDL set to Infinity followed by IDL get 
PASS small.title: IDL set to -Infinity should not throw 
PASS small.title: IDL set to -Infinity followed by getAttribute() 
PASS small.title: IDL set to -Infinity followed by IDL get 
PASS small.title: IDL set to "\0" should not throw 
PASS small.title: IDL set to "\0" followed by getAttribute() 
PASS small.title: IDL set to "\0" followed by IDL get 
PASS small.title: IDL set to null should not throw 
PASS small.title: IDL set to null followed by getAttribute() 
PASS small.title: IDL set to null followed by IDL get 
PASS small.title: IDL set to object "test-toString" should not throw 
PASS small.title: IDL set to object "test-toString" followed by getAttribute() 
PASS small.title: IDL set to object "test-toString" followed by IDL get 
PASS small.title: IDL set to object "test-valueOf" should not throw 
PASS small.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS small.title: IDL set to object "test-valueOf" followed by IDL get 
PASS small.lang: typeof IDL attribute 
PASS small.lang: IDL get with DOM attribute unset 
PASS small.lang: setAttribute() to "" followed by getAttribute() 
PASS small.lang: setAttribute() to "" followed by IDL get 
PASS small.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS small.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS small.lang: setAttribute() to undefined followed by getAttribute() 
PASS small.lang: setAttribute() to undefined followed by IDL get 
PASS small.lang: setAttribute() to 7 followed by getAttribute() 
PASS small.lang: setAttribute() to 7 followed by IDL get 
PASS small.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS small.lang: setAttribute() to 1.5 followed by IDL get 
PASS small.lang: setAttribute() to true followed by getAttribute() 
PASS small.lang: setAttribute() to true followed by IDL get 
PASS small.lang: setAttribute() to false followed by getAttribute() 
PASS small.lang: setAttribute() to false followed by IDL get 
PASS small.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS small.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS small.lang: setAttribute() to NaN followed by getAttribute() 
PASS small.lang: setAttribute() to NaN followed by IDL get 
PASS small.lang: setAttribute() to Infinity followed by getAttribute() 
PASS small.lang: setAttribute() to Infinity followed by IDL get 
PASS small.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS small.lang: setAttribute() to -Infinity followed by IDL get 
PASS small.lang: setAttribute() to "\0" followed by getAttribute() 
PASS small.lang: setAttribute() to "\0" followed by IDL get 
PASS small.lang: setAttribute() to null followed by getAttribute() 
PASS small.lang: setAttribute() to null followed by IDL get 
PASS small.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS small.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS small.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS small.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS small.lang: IDL set to "" should not throw 
PASS small.lang: IDL set to "" followed by getAttribute() 
PASS small.lang: IDL set to "" followed by IDL get 
PASS small.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS small.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS small.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS small.lang: IDL set to undefined should not throw 
PASS small.lang: IDL set to undefined followed by getAttribute() 
PASS small.lang: IDL set to undefined followed by IDL get 
PASS small.lang: IDL set to 7 should not throw 
PASS small.lang: IDL set to 7 followed by getAttribute() 
PASS small.lang: IDL set to 7 followed by IDL get 
PASS small.lang: IDL set to 1.5 should not throw 
PASS small.lang: IDL set to 1.5 followed by getAttribute() 
PASS small.lang: IDL set to 1.5 followed by IDL get 
PASS small.lang: IDL set to true should not throw 
PASS small.lang: IDL set to true followed by getAttribute() 
PASS small.lang: IDL set to true followed by IDL get 
PASS small.lang: IDL set to false should not throw 
PASS small.lang: IDL set to false followed by getAttribute() 
PASS small.lang: IDL set to false followed by IDL get 
PASS small.lang: IDL set to object "[object Object]" should not throw 
PASS small.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS small.lang: IDL set to object "[object Object]" followed by IDL get 
PASS small.lang: IDL set to NaN should not throw 
PASS small.lang: IDL set to NaN followed by getAttribute() 
PASS small.lang: IDL set to NaN followed by IDL get 
PASS small.lang: IDL set to Infinity should not throw 
PASS small.lang: IDL set to Infinity followed by getAttribute() 
PASS small.lang: IDL set to Infinity followed by IDL get 
PASS small.lang: IDL set to -Infinity should not throw 
PASS small.lang: IDL set to -Infinity followed by getAttribute() 
PASS small.lang: IDL set to -Infinity followed by IDL get 
PASS small.lang: IDL set to "\0" should not throw 
PASS small.lang: IDL set to "\0" followed by getAttribute() 
PASS small.lang: IDL set to "\0" followed by IDL get 
PASS small.lang: IDL set to null should not throw 
PASS small.lang: IDL set to null followed by getAttribute() 
PASS small.lang: IDL set to null followed by IDL get 
PASS small.lang: IDL set to object "test-toString" should not throw 
PASS small.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS small.lang: IDL set to object "test-toString" followed by IDL get 
PASS small.lang: IDL set to object "test-valueOf" should not throw 
PASS small.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS small.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS small.dir: typeof IDL attribute 
PASS small.dir: IDL get with DOM attribute unset 
PASS small.dir: setAttribute() to "" followed by getAttribute() 
PASS small.dir: setAttribute() to "" followed by IDL get 
PASS small.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS small.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS small.dir: setAttribute() to undefined followed by getAttribute() 
PASS small.dir: setAttribute() to undefined followed by IDL get 
PASS small.dir: setAttribute() to 7 followed by getAttribute() 
PASS small.dir: setAttribute() to 7 followed by IDL get 
PASS small.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS small.dir: setAttribute() to 1.5 followed by IDL get 
PASS small.dir: setAttribute() to true followed by getAttribute() 
PASS small.dir: setAttribute() to true followed by IDL get 
PASS small.dir: setAttribute() to false followed by getAttribute() 
PASS small.dir: setAttribute() to false followed by IDL get 
PASS small.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS small.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS small.dir: setAttribute() to NaN followed by getAttribute() 
PASS small.dir: setAttribute() to NaN followed by IDL get 
PASS small.dir: setAttribute() to Infinity followed by getAttribute() 
PASS small.dir: setAttribute() to Infinity followed by IDL get 
PASS small.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS small.dir: setAttribute() to -Infinity followed by IDL get 
PASS small.dir: setAttribute() to "\0" followed by getAttribute() 
PASS small.dir: setAttribute() to "\0" followed by IDL get 
PASS small.dir: setAttribute() to null followed by getAttribute() 
PASS small.dir: setAttribute() to null followed by IDL get 
PASS small.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS small.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS small.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS small.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS small.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS small.dir: setAttribute() to "ltr" followed by IDL get 
PASS small.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS small.dir: setAttribute() to "xltr" followed by IDL get 
PASS small.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS small.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS small.dir: setAttribute() to "tr" followed by getAttribute() 
PASS small.dir: setAttribute() to "tr" followed by IDL get 
PASS small.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS small.dir: setAttribute() to "LTR" followed by IDL get 
PASS small.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS small.dir: setAttribute() to "rtl" followed by IDL get 
PASS small.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS small.dir: setAttribute() to "xrtl" followed by IDL get 
PASS small.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS small.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS small.dir: setAttribute() to "tl" followed by getAttribute() 
PASS small.dir: setAttribute() to "tl" followed by IDL get 
PASS small.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS small.dir: setAttribute() to "RTL" followed by IDL get 
PASS small.dir: setAttribute() to "auto" followed by getAttribute() 
PASS small.dir: setAttribute() to "auto" followed by IDL get 
PASS small.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS small.dir: setAttribute() to "xauto" followed by IDL get 
PASS small.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS small.dir: setAttribute() to "auto\0" followed by IDL get 
PASS small.dir: setAttribute() to "uto" followed by getAttribute() 
PASS small.dir: setAttribute() to "uto" followed by IDL get 
PASS small.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS small.dir: setAttribute() to "AUTO" followed by IDL get 
PASS small.dir: IDL set to "" should not throw 
PASS small.dir: IDL set to "" followed by getAttribute() 
PASS small.dir: IDL set to "" followed by IDL get 
PASS small.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS small.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS small.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS small.dir: IDL set to undefined should not throw 
PASS small.dir: IDL set to undefined followed by getAttribute() 
PASS small.dir: IDL set to undefined followed by IDL get 
PASS small.dir: IDL set to 7 should not throw 
PASS small.dir: IDL set to 7 followed by getAttribute() 
PASS small.dir: IDL set to 7 followed by IDL get 
PASS small.dir: IDL set to 1.5 should not throw 
PASS small.dir: IDL set to 1.5 followed by getAttribute() 
PASS small.dir: IDL set to 1.5 followed by IDL get 
PASS small.dir: IDL set to true should not throw 
PASS small.dir: IDL set to true followed by getAttribute() 
PASS small.dir: IDL set to true followed by IDL get 
PASS small.dir: IDL set to false should not throw 
PASS small.dir: IDL set to false followed by getAttribute() 
PASS small.dir: IDL set to false followed by IDL get 
PASS small.dir: IDL set to object "[object Object]" should not throw 
PASS small.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS small.dir: IDL set to object "[object Object]" followed by IDL get 
PASS small.dir: IDL set to NaN should not throw 
PASS small.dir: IDL set to NaN followed by getAttribute() 
PASS small.dir: IDL set to NaN followed by IDL get 
PASS small.dir: IDL set to Infinity should not throw 
PASS small.dir: IDL set to Infinity followed by getAttribute() 
PASS small.dir: IDL set to Infinity followed by IDL get 
PASS small.dir: IDL set to -Infinity should not throw 
PASS small.dir: IDL set to -Infinity followed by getAttribute() 
PASS small.dir: IDL set to -Infinity followed by IDL get 
PASS small.dir: IDL set to "\0" should not throw 
PASS small.dir: IDL set to "\0" followed by getAttribute() 
PASS small.dir: IDL set to "\0" followed by IDL get 
PASS small.dir: IDL set to null should not throw 
PASS small.dir: IDL set to null followed by IDL get 
PASS small.dir: IDL set to object "test-toString" should not throw 
PASS small.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS small.dir: IDL set to object "test-toString" followed by IDL get 
PASS small.dir: IDL set to object "test-valueOf" should not throw 
PASS small.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS small.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS small.dir: IDL set to "ltr" should not throw 
PASS small.dir: IDL set to "ltr" followed by getAttribute() 
PASS small.dir: IDL set to "ltr" followed by IDL get 
PASS small.dir: IDL set to "xltr" should not throw 
PASS small.dir: IDL set to "xltr" followed by getAttribute() 
PASS small.dir: IDL set to "xltr" followed by IDL get 
PASS small.dir: IDL set to "ltr\0" should not throw 
PASS small.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS small.dir: IDL set to "ltr\0" followed by IDL get 
PASS small.dir: IDL set to "tr" should not throw 
PASS small.dir: IDL set to "tr" followed by getAttribute() 
PASS small.dir: IDL set to "tr" followed by IDL get 
PASS small.dir: IDL set to "LTR" should not throw 
PASS small.dir: IDL set to "LTR" followed by getAttribute() 
PASS small.dir: IDL set to "LTR" followed by IDL get 
PASS small.dir: IDL set to "rtl" should not throw 
PASS small.dir: IDL set to "rtl" followed by getAttribute() 
PASS small.dir: IDL set to "rtl" followed by IDL get 
PASS small.dir: IDL set to "xrtl" should not throw 
PASS small.dir: IDL set to "xrtl" followed by getAttribute() 
PASS small.dir: IDL set to "xrtl" followed by IDL get 
PASS small.dir: IDL set to "rtl\0" should not throw 
PASS small.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS small.dir: IDL set to "rtl\0" followed by IDL get 
PASS small.dir: IDL set to "tl" should not throw 
PASS small.dir: IDL set to "tl" followed by getAttribute() 
PASS small.dir: IDL set to "tl" followed by IDL get 
PASS small.dir: IDL set to "RTL" should not throw 
PASS small.dir: IDL set to "RTL" followed by getAttribute() 
PASS small.dir: IDL set to "RTL" followed by IDL get 
PASS small.dir: IDL set to "auto" should not throw 
PASS small.dir: IDL set to "auto" followed by getAttribute() 
PASS small.dir: IDL set to "auto" followed by IDL get 
PASS small.dir: IDL set to "xauto" should not throw 
PASS small.dir: IDL set to "xauto" followed by getAttribute() 
PASS small.dir: IDL set to "xauto" followed by IDL get 
PASS small.dir: IDL set to "auto\0" should not throw 
PASS small.dir: IDL set to "auto\0" followed by getAttribute() 
PASS small.dir: IDL set to "auto\0" followed by IDL get 
PASS small.dir: IDL set to "uto" should not throw 
PASS small.dir: IDL set to "uto" followed by getAttribute() 
PASS small.dir: IDL set to "uto" followed by IDL get 
PASS small.dir: IDL set to "AUTO" should not throw 
PASS small.dir: IDL set to "AUTO" followed by getAttribute() 
PASS small.dir: IDL set to "AUTO" followed by IDL get 
PASS small.className (<small class>): typeof IDL attribute 
PASS small.className (<small class>): IDL get with DOM attribute unset 
PASS small.className (<small class>): setAttribute() to "" followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to "" followed by IDL get 
PASS small.className (<small class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS small.className (<small class>): setAttribute() to undefined followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to undefined followed by IDL get 
PASS small.className (<small class>): setAttribute() to 7 followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to 7 followed by IDL get 
PASS small.className (<small class>): setAttribute() to 1.5 followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to 1.5 followed by IDL get 
PASS small.className (<small class>): setAttribute() to true followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to true followed by IDL get 
PASS small.className (<small class>): setAttribute() to false followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to false followed by IDL get 
PASS small.className (<small class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS small.className (<small class>): setAttribute() to NaN followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to NaN followed by IDL get 
PASS small.className (<small class>): setAttribute() to Infinity followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to Infinity followed by IDL get 
PASS small.className (<small class>): setAttribute() to -Infinity followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to -Infinity followed by IDL get 
PASS small.className (<small class>): setAttribute() to "\0" followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to "\0" followed by IDL get 
PASS small.className (<small class>): setAttribute() to null followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to null followed by IDL get 
PASS small.className (<small class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to object "test-toString" followed by IDL get 
PASS small.className (<small class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS small.className (<small class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS small.className (<small class>): IDL set to "" should not throw 
PASS small.className (<small class>): IDL set to "" followed by getAttribute() 
PASS small.className (<small class>): IDL set to "" followed by IDL get 
PASS small.className (<small class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS small.className (<small class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS small.className (<small class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS small.className (<small class>): IDL set to undefined should not throw 
PASS small.className (<small class>): IDL set to undefined followed by getAttribute() 
PASS small.className (<small class>): IDL set to undefined followed by IDL get 
PASS small.className (<small class>): IDL set to 7 should not throw 
PASS small.className (<small class>): IDL set to 7 followed by getAttribute() 
PASS small.className (<small class>): IDL set to 7 followed by IDL get 
PASS small.className (<small class>): IDL set to 1.5 should not throw 
PASS small.className (<small class>): IDL set to 1.5 followed by getAttribute() 
PASS small.className (<small class>): IDL set to 1.5 followed by IDL get 
PASS small.className (<small class>): IDL set to true should not throw 
PASS small.className (<small class>): IDL set to true followed by getAttribute() 
PASS small.className (<small class>): IDL set to true followed by IDL get 
PASS small.className (<small class>): IDL set to false should not throw 
PASS small.className (<small class>): IDL set to false followed by getAttribute() 
PASS small.className (<small class>): IDL set to false followed by IDL get 
PASS small.className (<small class>): IDL set to object "[object Object]" should not throw 
PASS small.className (<small class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS small.className (<small class>): IDL set to object "[object Object]" followed by IDL get 
PASS small.className (<small class>): IDL set to NaN should not throw 
PASS small.className (<small class>): IDL set to NaN followed by getAttribute() 
PASS small.className (<small class>): IDL set to NaN followed by IDL get 
PASS small.className (<small class>): IDL set to Infinity should not throw 
PASS small.className (<small class>): IDL set to Infinity followed by getAttribute() 
PASS small.className (<small class>): IDL set to Infinity followed by IDL get 
PASS small.className (<small class>): IDL set to -Infinity should not throw 
PASS small.className (<small class>): IDL set to -Infinity followed by getAttribute() 
PASS small.className (<small class>): IDL set to -Infinity followed by IDL get 
PASS small.className (<small class>): IDL set to "\0" should not throw 
PASS small.className (<small class>): IDL set to "\0" followed by getAttribute() 
PASS small.className (<small class>): IDL set to "\0" followed by IDL get 
PASS small.className (<small class>): IDL set to null should not throw 
PASS small.className (<small class>): IDL set to null followed by getAttribute() 
PASS small.className (<small class>): IDL set to null followed by IDL get 
PASS small.className (<small class>): IDL set to object "test-toString" should not throw 
PASS small.className (<small class>): IDL set to object "test-toString" followed by getAttribute() 
PASS small.className (<small class>): IDL set to object "test-toString" followed by IDL get 
PASS small.className (<small class>): IDL set to object "test-valueOf" should not throw 
PASS small.className (<small class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS small.className (<small class>): IDL set to object "test-valueOf" followed by IDL get 
PASS small.hidden: typeof IDL attribute 
PASS small.hidden: IDL get with DOM attribute unset 
PASS small.hidden: setAttribute() to "" followed by getAttribute() 
PASS small.hidden: setAttribute() to "" followed by IDL get 
PASS small.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS small.hidden: setAttribute() to " foo " followed by IDL get 
PASS small.hidden: setAttribute() to undefined followed by getAttribute() 
PASS small.hidden: setAttribute() to undefined followed by IDL get 
PASS small.hidden: setAttribute() to null followed by getAttribute() 
PASS small.hidden: setAttribute() to null followed by IDL get 
PASS small.hidden: setAttribute() to 7 followed by getAttribute() 
PASS small.hidden: setAttribute() to 7 followed by IDL get 
PASS small.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS small.hidden: setAttribute() to 1.5 followed by IDL get 
PASS small.hidden: setAttribute() to true followed by getAttribute() 
PASS small.hidden: setAttribute() to true followed by IDL get 
PASS small.hidden: setAttribute() to false followed by getAttribute() 
PASS small.hidden: setAttribute() to false followed by IDL get 
PASS small.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS small.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS small.hidden: setAttribute() to NaN followed by getAttribute() 
PASS small.hidden: setAttribute() to NaN followed by IDL get 
PASS small.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS small.hidden: setAttribute() to Infinity followed by IDL get 
PASS small.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS small.hidden: setAttribute() to -Infinity followed by IDL get 
PASS small.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS small.hidden: setAttribute() to "\0" followed by IDL get 
PASS small.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS small.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS small.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS small.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS small.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS small.hidden: setAttribute() to "hidden" followed by IDL get 
PASS small.hidden: IDL set to "" should not throw 
PASS small.hidden: IDL set to "" followed by hasAttribute() 
PASS small.hidden: IDL set to "" followed by IDL get 
PASS small.hidden: IDL set to " foo " should not throw 
PASS small.hidden: IDL set to " foo " followed by hasAttribute() 
PASS small.hidden: IDL set to " foo " followed by IDL get 
PASS small.hidden: IDL set to undefined should not throw 
PASS small.hidden: IDL set to undefined followed by hasAttribute() 
PASS small.hidden: IDL set to undefined followed by IDL get 
PASS small.hidden: IDL set to null should not throw 
PASS small.hidden: IDL set to null followed by hasAttribute() 
PASS small.hidden: IDL set to null followed by IDL get 
PASS small.hidden: IDL set to 7 should not throw 
PASS small.hidden: IDL set to 7 followed by hasAttribute() 
PASS small.hidden: IDL set to 7 followed by IDL get 
PASS small.hidden: IDL set to 1.5 should not throw 
PASS small.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS small.hidden: IDL set to 1.5 followed by IDL get 
PASS small.hidden: IDL set to true should not throw 
PASS small.hidden: IDL set to true followed by hasAttribute() 
PASS small.hidden: IDL set to true followed by IDL get 
PASS small.hidden: IDL set to false should not throw 
PASS small.hidden: IDL set to false followed by hasAttribute() 
PASS small.hidden: IDL set to false followed by IDL get 
PASS small.hidden: IDL set to object "[object Object]" should not throw 
PASS small.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS small.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS small.hidden: IDL set to NaN should not throw 
PASS small.hidden: IDL set to NaN followed by hasAttribute() 
PASS small.hidden: IDL set to NaN followed by IDL get 
PASS small.hidden: IDL set to Infinity should not throw 
PASS small.hidden: IDL set to Infinity followed by hasAttribute() 
PASS small.hidden: IDL set to Infinity followed by IDL get 
PASS small.hidden: IDL set to -Infinity should not throw 
PASS small.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS small.hidden: IDL set to -Infinity followed by IDL get 
PASS small.hidden: IDL set to "\0" should not throw 
PASS small.hidden: IDL set to "\0" followed by hasAttribute() 
PASS small.hidden: IDL set to "\0" followed by IDL get 
PASS small.hidden: IDL set to object "test-toString" should not throw 
PASS small.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS small.hidden: IDL set to object "test-toString" followed by IDL get 
PASS small.hidden: IDL set to object "test-valueOf" should not throw 
PASS small.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS small.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS small.accessKey: typeof IDL attribute 
PASS small.accessKey: IDL get with DOM attribute unset 
PASS small.accessKey: setAttribute() to "" followed by getAttribute() 
PASS small.accessKey: setAttribute() to "" followed by IDL get 
PASS small.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS small.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS small.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS small.accessKey: setAttribute() to undefined followed by IDL get 
PASS small.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS small.accessKey: setAttribute() to 7 followed by IDL get 
PASS small.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS small.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS small.accessKey: setAttribute() to true followed by getAttribute() 
PASS small.accessKey: setAttribute() to true followed by IDL get 
PASS small.accessKey: setAttribute() to false followed by getAttribute() 
PASS small.accessKey: setAttribute() to false followed by IDL get 
PASS small.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS small.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS small.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS small.accessKey: setAttribute() to NaN followed by IDL get 
PASS small.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS small.accessKey: setAttribute() to Infinity followed by IDL get 
PASS small.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS small.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS small.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS small.accessKey: setAttribute() to "\0" followed by IDL get 
PASS small.accessKey: setAttribute() to null followed by getAttribute() 
PASS small.accessKey: setAttribute() to null followed by IDL get 
PASS small.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS small.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS small.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS small.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS small.accessKey: IDL set to "" should not throw 
PASS small.accessKey: IDL set to "" followed by getAttribute() 
PASS small.accessKey: IDL set to "" followed by IDL get 
PASS small.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS small.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS small.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS small.accessKey: IDL set to undefined should not throw 
PASS small.accessKey: IDL set to undefined followed by getAttribute() 
PASS small.accessKey: IDL set to undefined followed by IDL get 
PASS small.accessKey: IDL set to 7 should not throw 
PASS small.accessKey: IDL set to 7 followed by getAttribute() 
PASS small.accessKey: IDL set to 7 followed by IDL get 
PASS small.accessKey: IDL set to 1.5 should not throw 
PASS small.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS small.accessKey: IDL set to 1.5 followed by IDL get 
PASS small.accessKey: IDL set to true should not throw 
PASS small.accessKey: IDL set to true followed by getAttribute() 
PASS small.accessKey: IDL set to true followed by IDL get 
PASS small.accessKey: IDL set to false should not throw 
PASS small.accessKey: IDL set to false followed by getAttribute() 
PASS small.accessKey: IDL set to false followed by IDL get 
PASS small.accessKey: IDL set to object "[object Object]" should not throw 
PASS small.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS small.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS small.accessKey: IDL set to NaN should not throw 
PASS small.accessKey: IDL set to NaN followed by getAttribute() 
PASS small.accessKey: IDL set to NaN followed by IDL get 
PASS small.accessKey: IDL set to Infinity should not throw 
PASS small.accessKey: IDL set to Infinity followed by getAttribute() 
PASS small.accessKey: IDL set to Infinity followed by IDL get 
PASS small.accessKey: IDL set to -Infinity should not throw 
PASS small.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS small.accessKey: IDL set to -Infinity followed by IDL get 
PASS small.accessKey: IDL set to "\0" should not throw 
PASS small.accessKey: IDL set to "\0" followed by getAttribute() 
PASS small.accessKey: IDL set to "\0" followed by IDL get 
PASS small.accessKey: IDL set to null should not throw 
PASS small.accessKey: IDL set to null followed by getAttribute() 
PASS small.accessKey: IDL set to null followed by IDL get 
PASS small.accessKey: IDL set to object "test-toString" should not throw 
PASS small.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS small.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS small.accessKey: IDL set to object "test-valueOf" should not throw 
PASS small.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS small.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS small.tabIndex: typeof IDL attribute 
PASS small.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS small.tabIndex: setAttribute() to -36 followed by IDL get 
PASS small.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS small.tabIndex: setAttribute() to -1 followed by IDL get 
PASS small.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS small.tabIndex: setAttribute() to 0 followed by IDL get 
PASS small.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS small.tabIndex: setAttribute() to 1 followed by IDL get 
PASS small.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL small.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS small.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL small.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS small.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS small.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS small.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS small.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS small.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS small.tabIndex: setAttribute() to "0" followed by IDL get 
PASS small.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS small.tabIndex: setAttribute() to "1" followed by IDL get 
PASS small.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS small.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS small.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS small.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS small.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS small.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS small.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS small.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS small.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS small.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS small.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS small.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS small.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS small.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS small.tabIndex: IDL set to -36 should not throw 
PASS small.tabIndex: IDL set to -36 followed by getAttribute() 
PASS small.tabIndex: IDL set to -36 followed by IDL get 
PASS small.tabIndex: IDL set to -1 should not throw 
PASS small.tabIndex: IDL set to -1 followed by getAttribute() 
PASS small.tabIndex: IDL set to -1 followed by IDL get 
PASS small.tabIndex: IDL set to 0 should not throw 
PASS small.tabIndex: IDL set to 0 followed by getAttribute() 
PASS small.tabIndex: IDL set to 0 followed by IDL get 
PASS small.tabIndex: IDL set to 1 should not throw 
PASS small.tabIndex: IDL set to 1 followed by getAttribute() 
PASS small.tabIndex: IDL set to 1 followed by IDL get 
PASS small.tabIndex: IDL set to 2147483647 should not throw 
PASS small.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL small.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS small.tabIndex: IDL set to -2147483648 should not throw 
PASS small.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL small.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL small.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL small.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS small.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL small.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL small.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL small.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to null followed by getAttribute() 
FAIL small.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL small.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL small.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to true followed by getAttribute() 
FAIL small.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to false followed by getAttribute() 
FAIL small.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL small.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL small.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL small.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL small.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL small.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL small.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL small.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL small.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS small.itemScope: IDL set to "" should not throw 
FAIL small.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL small.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS small.itemScope: IDL set to " foo " should not throw 
PASS small.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL small.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS small.itemScope: IDL set to undefined should not throw 
FAIL small.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL small.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS small.itemScope: IDL set to null should not throw 
FAIL small.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL small.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS small.itemScope: IDL set to 7 should not throw 
PASS small.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL small.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS small.itemScope: IDL set to 1.5 should not throw 
PASS small.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL small.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS small.itemScope: IDL set to true should not throw 
PASS small.itemScope: IDL set to true followed by hasAttribute() 
PASS small.itemScope: IDL set to true followed by IDL get 
PASS small.itemScope: IDL set to false should not throw 
FAIL small.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS small.itemScope: IDL set to false followed by IDL get 
PASS small.itemScope: IDL set to object "[object Object]" should not throw 
PASS small.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL small.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS small.itemScope: IDL set to NaN should not throw 
FAIL small.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL small.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS small.itemScope: IDL set to Infinity should not throw 
PASS small.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL small.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS small.itemScope: IDL set to -Infinity should not throw 
PASS small.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL small.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS small.itemScope: IDL set to "\0" should not throw 
PASS small.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL small.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS small.itemScope: IDL set to object "test-toString" should not throw 
PASS small.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL small.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS small.itemScope: IDL set to object "test-valueOf" should not throw 
PASS small.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL small.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL small.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL small.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS small.itemId: setAttribute() to "" followed by getAttribute() 
FAIL small.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS small.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL small.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS small.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL small.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS small.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL small.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS small.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL small.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS small.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL small.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS small.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL small.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS small.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL small.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS small.itemId: setAttribute() to true followed by getAttribute() 
FAIL small.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS small.itemId: setAttribute() to false followed by getAttribute() 
FAIL small.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS small.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL small.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS small.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL small.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS small.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL small.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS small.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL small.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS small.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL small.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS small.itemId: setAttribute() to null followed by getAttribute() 
FAIL small.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS small.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL small.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS small.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL small.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS small.itemId: IDL set to "" should not throw 
FAIL small.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL small.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS small.itemId: IDL set to " foo " should not throw 
FAIL small.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL small.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS small.itemId: IDL set to "http://site.example/" should not throw 
FAIL small.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS small.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS small.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL small.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL small.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS small.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL small.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL small.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS small.itemId: IDL set to undefined should not throw 
FAIL small.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL small.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS small.itemId: IDL set to 7 should not throw 
FAIL small.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL small.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS small.itemId: IDL set to 1.5 should not throw 
FAIL small.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL small.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS small.itemId: IDL set to true should not throw 
FAIL small.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL small.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS small.itemId: IDL set to false should not throw 
FAIL small.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL small.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS small.itemId: IDL set to object "[object Object]" should not throw 
FAIL small.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL small.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS small.itemId: IDL set to NaN should not throw 
FAIL small.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL small.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS small.itemId: IDL set to Infinity should not throw 
FAIL small.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL small.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS small.itemId: IDL set to -Infinity should not throw 
FAIL small.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL small.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS small.itemId: IDL set to "\0" should not throw 
FAIL small.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL small.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS small.itemId: IDL set to null should not throw 
FAIL small.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL small.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS small.itemId: IDL set to object "test-toString" should not throw 
FAIL small.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL small.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS small.itemId: IDL set to object "test-valueOf" should not throw 
PASS small.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL small.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS s.title: typeof IDL attribute 
PASS s.title: IDL get with DOM attribute unset 
PASS s.title: setAttribute() to "" followed by getAttribute() 
PASS s.title: setAttribute() to "" followed by IDL get 
PASS s.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS s.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS s.title: setAttribute() to undefined followed by getAttribute() 
PASS s.title: setAttribute() to undefined followed by IDL get 
PASS s.title: setAttribute() to 7 followed by getAttribute() 
PASS s.title: setAttribute() to 7 followed by IDL get 
PASS s.title: setAttribute() to 1.5 followed by getAttribute() 
PASS s.title: setAttribute() to 1.5 followed by IDL get 
PASS s.title: setAttribute() to true followed by getAttribute() 
PASS s.title: setAttribute() to true followed by IDL get 
PASS s.title: setAttribute() to false followed by getAttribute() 
PASS s.title: setAttribute() to false followed by IDL get 
PASS s.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS s.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS s.title: setAttribute() to NaN followed by getAttribute() 
PASS s.title: setAttribute() to NaN followed by IDL get 
PASS s.title: setAttribute() to Infinity followed by getAttribute() 
PASS s.title: setAttribute() to Infinity followed by IDL get 
PASS s.title: setAttribute() to -Infinity followed by getAttribute() 
PASS s.title: setAttribute() to -Infinity followed by IDL get 
PASS s.title: setAttribute() to "\0" followed by getAttribute() 
PASS s.title: setAttribute() to "\0" followed by IDL get 
PASS s.title: setAttribute() to null followed by getAttribute() 
PASS s.title: setAttribute() to null followed by IDL get 
PASS s.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS s.title: setAttribute() to object "test-toString" followed by IDL get 
PASS s.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS s.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS s.title: IDL set to "" should not throw 
PASS s.title: IDL set to "" followed by getAttribute() 
PASS s.title: IDL set to "" followed by IDL get 
PASS s.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS s.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS s.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS s.title: IDL set to undefined should not throw 
PASS s.title: IDL set to undefined followed by getAttribute() 
PASS s.title: IDL set to undefined followed by IDL get 
PASS s.title: IDL set to 7 should not throw 
PASS s.title: IDL set to 7 followed by getAttribute() 
PASS s.title: IDL set to 7 followed by IDL get 
PASS s.title: IDL set to 1.5 should not throw 
PASS s.title: IDL set to 1.5 followed by getAttribute() 
PASS s.title: IDL set to 1.5 followed by IDL get 
PASS s.title: IDL set to true should not throw 
PASS s.title: IDL set to true followed by getAttribute() 
PASS s.title: IDL set to true followed by IDL get 
PASS s.title: IDL set to false should not throw 
PASS s.title: IDL set to false followed by getAttribute() 
PASS s.title: IDL set to false followed by IDL get 
PASS s.title: IDL set to object "[object Object]" should not throw 
PASS s.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS s.title: IDL set to object "[object Object]" followed by IDL get 
PASS s.title: IDL set to NaN should not throw 
PASS s.title: IDL set to NaN followed by getAttribute() 
PASS s.title: IDL set to NaN followed by IDL get 
PASS s.title: IDL set to Infinity should not throw 
PASS s.title: IDL set to Infinity followed by getAttribute() 
PASS s.title: IDL set to Infinity followed by IDL get 
PASS s.title: IDL set to -Infinity should not throw 
PASS s.title: IDL set to -Infinity followed by getAttribute() 
PASS s.title: IDL set to -Infinity followed by IDL get 
PASS s.title: IDL set to "\0" should not throw 
PASS s.title: IDL set to "\0" followed by getAttribute() 
PASS s.title: IDL set to "\0" followed by IDL get 
PASS s.title: IDL set to null should not throw 
PASS s.title: IDL set to null followed by getAttribute() 
PASS s.title: IDL set to null followed by IDL get 
PASS s.title: IDL set to object "test-toString" should not throw 
PASS s.title: IDL set to object "test-toString" followed by getAttribute() 
PASS s.title: IDL set to object "test-toString" followed by IDL get 
PASS s.title: IDL set to object "test-valueOf" should not throw 
PASS s.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS s.title: IDL set to object "test-valueOf" followed by IDL get 
PASS s.lang: typeof IDL attribute 
PASS s.lang: IDL get with DOM attribute unset 
PASS s.lang: setAttribute() to "" followed by getAttribute() 
PASS s.lang: setAttribute() to "" followed by IDL get 
PASS s.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS s.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS s.lang: setAttribute() to undefined followed by getAttribute() 
PASS s.lang: setAttribute() to undefined followed by IDL get 
PASS s.lang: setAttribute() to 7 followed by getAttribute() 
PASS s.lang: setAttribute() to 7 followed by IDL get 
PASS s.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS s.lang: setAttribute() to 1.5 followed by IDL get 
PASS s.lang: setAttribute() to true followed by getAttribute() 
PASS s.lang: setAttribute() to true followed by IDL get 
PASS s.lang: setAttribute() to false followed by getAttribute() 
PASS s.lang: setAttribute() to false followed by IDL get 
PASS s.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS s.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS s.lang: setAttribute() to NaN followed by getAttribute() 
PASS s.lang: setAttribute() to NaN followed by IDL get 
PASS s.lang: setAttribute() to Infinity followed by getAttribute() 
PASS s.lang: setAttribute() to Infinity followed by IDL get 
PASS s.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS s.lang: setAttribute() to -Infinity followed by IDL get 
PASS s.lang: setAttribute() to "\0" followed by getAttribute() 
PASS s.lang: setAttribute() to "\0" followed by IDL get 
PASS s.lang: setAttribute() to null followed by getAttribute() 
PASS s.lang: setAttribute() to null followed by IDL get 
PASS s.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS s.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS s.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS s.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS s.lang: IDL set to "" should not throw 
PASS s.lang: IDL set to "" followed by getAttribute() 
PASS s.lang: IDL set to "" followed by IDL get 
PASS s.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS s.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS s.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS s.lang: IDL set to undefined should not throw 
PASS s.lang: IDL set to undefined followed by getAttribute() 
PASS s.lang: IDL set to undefined followed by IDL get 
PASS s.lang: IDL set to 7 should not throw 
PASS s.lang: IDL set to 7 followed by getAttribute() 
PASS s.lang: IDL set to 7 followed by IDL get 
PASS s.lang: IDL set to 1.5 should not throw 
PASS s.lang: IDL set to 1.5 followed by getAttribute() 
PASS s.lang: IDL set to 1.5 followed by IDL get 
PASS s.lang: IDL set to true should not throw 
PASS s.lang: IDL set to true followed by getAttribute() 
PASS s.lang: IDL set to true followed by IDL get 
PASS s.lang: IDL set to false should not throw 
PASS s.lang: IDL set to false followed by getAttribute() 
PASS s.lang: IDL set to false followed by IDL get 
PASS s.lang: IDL set to object "[object Object]" should not throw 
PASS s.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS s.lang: IDL set to object "[object Object]" followed by IDL get 
PASS s.lang: IDL set to NaN should not throw 
PASS s.lang: IDL set to NaN followed by getAttribute() 
PASS s.lang: IDL set to NaN followed by IDL get 
PASS s.lang: IDL set to Infinity should not throw 
PASS s.lang: IDL set to Infinity followed by getAttribute() 
PASS s.lang: IDL set to Infinity followed by IDL get 
PASS s.lang: IDL set to -Infinity should not throw 
PASS s.lang: IDL set to -Infinity followed by getAttribute() 
PASS s.lang: IDL set to -Infinity followed by IDL get 
PASS s.lang: IDL set to "\0" should not throw 
PASS s.lang: IDL set to "\0" followed by getAttribute() 
PASS s.lang: IDL set to "\0" followed by IDL get 
PASS s.lang: IDL set to null should not throw 
PASS s.lang: IDL set to null followed by getAttribute() 
PASS s.lang: IDL set to null followed by IDL get 
PASS s.lang: IDL set to object "test-toString" should not throw 
PASS s.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS s.lang: IDL set to object "test-toString" followed by IDL get 
PASS s.lang: IDL set to object "test-valueOf" should not throw 
PASS s.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS s.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS s.dir: typeof IDL attribute 
PASS s.dir: IDL get with DOM attribute unset 
PASS s.dir: setAttribute() to "" followed by getAttribute() 
PASS s.dir: setAttribute() to "" followed by IDL get 
PASS s.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS s.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS s.dir: setAttribute() to undefined followed by getAttribute() 
PASS s.dir: setAttribute() to undefined followed by IDL get 
PASS s.dir: setAttribute() to 7 followed by getAttribute() 
PASS s.dir: setAttribute() to 7 followed by IDL get 
PASS s.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS s.dir: setAttribute() to 1.5 followed by IDL get 
PASS s.dir: setAttribute() to true followed by getAttribute() 
PASS s.dir: setAttribute() to true followed by IDL get 
PASS s.dir: setAttribute() to false followed by getAttribute() 
PASS s.dir: setAttribute() to false followed by IDL get 
PASS s.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS s.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS s.dir: setAttribute() to NaN followed by getAttribute() 
PASS s.dir: setAttribute() to NaN followed by IDL get 
PASS s.dir: setAttribute() to Infinity followed by getAttribute() 
PASS s.dir: setAttribute() to Infinity followed by IDL get 
PASS s.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS s.dir: setAttribute() to -Infinity followed by IDL get 
PASS s.dir: setAttribute() to "\0" followed by getAttribute() 
PASS s.dir: setAttribute() to "\0" followed by IDL get 
PASS s.dir: setAttribute() to null followed by getAttribute() 
PASS s.dir: setAttribute() to null followed by IDL get 
PASS s.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS s.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS s.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS s.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS s.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS s.dir: setAttribute() to "ltr" followed by IDL get 
PASS s.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS s.dir: setAttribute() to "xltr" followed by IDL get 
PASS s.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS s.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS s.dir: setAttribute() to "tr" followed by getAttribute() 
PASS s.dir: setAttribute() to "tr" followed by IDL get 
PASS s.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS s.dir: setAttribute() to "LTR" followed by IDL get 
PASS s.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS s.dir: setAttribute() to "rtl" followed by IDL get 
PASS s.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS s.dir: setAttribute() to "xrtl" followed by IDL get 
PASS s.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS s.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS s.dir: setAttribute() to "tl" followed by getAttribute() 
PASS s.dir: setAttribute() to "tl" followed by IDL get 
PASS s.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS s.dir: setAttribute() to "RTL" followed by IDL get 
PASS s.dir: setAttribute() to "auto" followed by getAttribute() 
PASS s.dir: setAttribute() to "auto" followed by IDL get 
PASS s.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS s.dir: setAttribute() to "xauto" followed by IDL get 
PASS s.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS s.dir: setAttribute() to "auto\0" followed by IDL get 
PASS s.dir: setAttribute() to "uto" followed by getAttribute() 
PASS s.dir: setAttribute() to "uto" followed by IDL get 
PASS s.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS s.dir: setAttribute() to "AUTO" followed by IDL get 
PASS s.dir: IDL set to "" should not throw 
PASS s.dir: IDL set to "" followed by getAttribute() 
PASS s.dir: IDL set to "" followed by IDL get 
PASS s.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS s.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS s.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS s.dir: IDL set to undefined should not throw 
PASS s.dir: IDL set to undefined followed by getAttribute() 
PASS s.dir: IDL set to undefined followed by IDL get 
PASS s.dir: IDL set to 7 should not throw 
PASS s.dir: IDL set to 7 followed by getAttribute() 
PASS s.dir: IDL set to 7 followed by IDL get 
PASS s.dir: IDL set to 1.5 should not throw 
PASS s.dir: IDL set to 1.5 followed by getAttribute() 
PASS s.dir: IDL set to 1.5 followed by IDL get 
PASS s.dir: IDL set to true should not throw 
PASS s.dir: IDL set to true followed by getAttribute() 
PASS s.dir: IDL set to true followed by IDL get 
PASS s.dir: IDL set to false should not throw 
PASS s.dir: IDL set to false followed by getAttribute() 
PASS s.dir: IDL set to false followed by IDL get 
PASS s.dir: IDL set to object "[object Object]" should not throw 
PASS s.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS s.dir: IDL set to object "[object Object]" followed by IDL get 
PASS s.dir: IDL set to NaN should not throw 
PASS s.dir: IDL set to NaN followed by getAttribute() 
PASS s.dir: IDL set to NaN followed by IDL get 
PASS s.dir: IDL set to Infinity should not throw 
PASS s.dir: IDL set to Infinity followed by getAttribute() 
PASS s.dir: IDL set to Infinity followed by IDL get 
PASS s.dir: IDL set to -Infinity should not throw 
PASS s.dir: IDL set to -Infinity followed by getAttribute() 
PASS s.dir: IDL set to -Infinity followed by IDL get 
PASS s.dir: IDL set to "\0" should not throw 
PASS s.dir: IDL set to "\0" followed by getAttribute() 
PASS s.dir: IDL set to "\0" followed by IDL get 
PASS s.dir: IDL set to null should not throw 
PASS s.dir: IDL set to null followed by IDL get 
PASS s.dir: IDL set to object "test-toString" should not throw 
PASS s.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS s.dir: IDL set to object "test-toString" followed by IDL get 
PASS s.dir: IDL set to object "test-valueOf" should not throw 
PASS s.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS s.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS s.dir: IDL set to "ltr" should not throw 
PASS s.dir: IDL set to "ltr" followed by getAttribute() 
PASS s.dir: IDL set to "ltr" followed by IDL get 
PASS s.dir: IDL set to "xltr" should not throw 
PASS s.dir: IDL set to "xltr" followed by getAttribute() 
PASS s.dir: IDL set to "xltr" followed by IDL get 
PASS s.dir: IDL set to "ltr\0" should not throw 
PASS s.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS s.dir: IDL set to "ltr\0" followed by IDL get 
PASS s.dir: IDL set to "tr" should not throw 
PASS s.dir: IDL set to "tr" followed by getAttribute() 
PASS s.dir: IDL set to "tr" followed by IDL get 
PASS s.dir: IDL set to "LTR" should not throw 
PASS s.dir: IDL set to "LTR" followed by getAttribute() 
PASS s.dir: IDL set to "LTR" followed by IDL get 
PASS s.dir: IDL set to "rtl" should not throw 
PASS s.dir: IDL set to "rtl" followed by getAttribute() 
PASS s.dir: IDL set to "rtl" followed by IDL get 
PASS s.dir: IDL set to "xrtl" should not throw 
PASS s.dir: IDL set to "xrtl" followed by getAttribute() 
PASS s.dir: IDL set to "xrtl" followed by IDL get 
PASS s.dir: IDL set to "rtl\0" should not throw 
PASS s.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS s.dir: IDL set to "rtl\0" followed by IDL get 
PASS s.dir: IDL set to "tl" should not throw 
PASS s.dir: IDL set to "tl" followed by getAttribute() 
PASS s.dir: IDL set to "tl" followed by IDL get 
PASS s.dir: IDL set to "RTL" should not throw 
PASS s.dir: IDL set to "RTL" followed by getAttribute() 
PASS s.dir: IDL set to "RTL" followed by IDL get 
PASS s.dir: IDL set to "auto" should not throw 
PASS s.dir: IDL set to "auto" followed by getAttribute() 
PASS s.dir: IDL set to "auto" followed by IDL get 
PASS s.dir: IDL set to "xauto" should not throw 
PASS s.dir: IDL set to "xauto" followed by getAttribute() 
PASS s.dir: IDL set to "xauto" followed by IDL get 
PASS s.dir: IDL set to "auto\0" should not throw 
PASS s.dir: IDL set to "auto\0" followed by getAttribute() 
PASS s.dir: IDL set to "auto\0" followed by IDL get 
PASS s.dir: IDL set to "uto" should not throw 
PASS s.dir: IDL set to "uto" followed by getAttribute() 
PASS s.dir: IDL set to "uto" followed by IDL get 
PASS s.dir: IDL set to "AUTO" should not throw 
PASS s.dir: IDL set to "AUTO" followed by getAttribute() 
PASS s.dir: IDL set to "AUTO" followed by IDL get 
PASS s.className (<s class>): typeof IDL attribute 
PASS s.className (<s class>): IDL get with DOM attribute unset 
PASS s.className (<s class>): setAttribute() to "" followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to "" followed by IDL get 
PASS s.className (<s class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS s.className (<s class>): setAttribute() to undefined followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to undefined followed by IDL get 
PASS s.className (<s class>): setAttribute() to 7 followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to 7 followed by IDL get 
PASS s.className (<s class>): setAttribute() to 1.5 followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to 1.5 followed by IDL get 
PASS s.className (<s class>): setAttribute() to true followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to true followed by IDL get 
PASS s.className (<s class>): setAttribute() to false followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to false followed by IDL get 
PASS s.className (<s class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS s.className (<s class>): setAttribute() to NaN followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to NaN followed by IDL get 
PASS s.className (<s class>): setAttribute() to Infinity followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to Infinity followed by IDL get 
PASS s.className (<s class>): setAttribute() to -Infinity followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to -Infinity followed by IDL get 
PASS s.className (<s class>): setAttribute() to "\0" followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to "\0" followed by IDL get 
PASS s.className (<s class>): setAttribute() to null followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to null followed by IDL get 
PASS s.className (<s class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to object "test-toString" followed by IDL get 
PASS s.className (<s class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS s.className (<s class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS s.className (<s class>): IDL set to "" should not throw 
PASS s.className (<s class>): IDL set to "" followed by getAttribute() 
PASS s.className (<s class>): IDL set to "" followed by IDL get 
PASS s.className (<s class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS s.className (<s class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS s.className (<s class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS s.className (<s class>): IDL set to undefined should not throw 
PASS s.className (<s class>): IDL set to undefined followed by getAttribute() 
PASS s.className (<s class>): IDL set to undefined followed by IDL get 
PASS s.className (<s class>): IDL set to 7 should not throw 
PASS s.className (<s class>): IDL set to 7 followed by getAttribute() 
PASS s.className (<s class>): IDL set to 7 followed by IDL get 
PASS s.className (<s class>): IDL set to 1.5 should not throw 
PASS s.className (<s class>): IDL set to 1.5 followed by getAttribute() 
PASS s.className (<s class>): IDL set to 1.5 followed by IDL get 
PASS s.className (<s class>): IDL set to true should not throw 
PASS s.className (<s class>): IDL set to true followed by getAttribute() 
PASS s.className (<s class>): IDL set to true followed by IDL get 
PASS s.className (<s class>): IDL set to false should not throw 
PASS s.className (<s class>): IDL set to false followed by getAttribute() 
PASS s.className (<s class>): IDL set to false followed by IDL get 
PASS s.className (<s class>): IDL set to object "[object Object]" should not throw 
PASS s.className (<s class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS s.className (<s class>): IDL set to object "[object Object]" followed by IDL get 
PASS s.className (<s class>): IDL set to NaN should not throw 
PASS s.className (<s class>): IDL set to NaN followed by getAttribute() 
PASS s.className (<s class>): IDL set to NaN followed by IDL get 
PASS s.className (<s class>): IDL set to Infinity should not throw 
PASS s.className (<s class>): IDL set to Infinity followed by getAttribute() 
PASS s.className (<s class>): IDL set to Infinity followed by IDL get 
PASS s.className (<s class>): IDL set to -Infinity should not throw 
PASS s.className (<s class>): IDL set to -Infinity followed by getAttribute() 
PASS s.className (<s class>): IDL set to -Infinity followed by IDL get 
PASS s.className (<s class>): IDL set to "\0" should not throw 
PASS s.className (<s class>): IDL set to "\0" followed by getAttribute() 
PASS s.className (<s class>): IDL set to "\0" followed by IDL get 
PASS s.className (<s class>): IDL set to null should not throw 
PASS s.className (<s class>): IDL set to null followed by getAttribute() 
PASS s.className (<s class>): IDL set to null followed by IDL get 
PASS s.className (<s class>): IDL set to object "test-toString" should not throw 
PASS s.className (<s class>): IDL set to object "test-toString" followed by getAttribute() 
PASS s.className (<s class>): IDL set to object "test-toString" followed by IDL get 
PASS s.className (<s class>): IDL set to object "test-valueOf" should not throw 
PASS s.className (<s class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS s.className (<s class>): IDL set to object "test-valueOf" followed by IDL get 
PASS s.hidden: typeof IDL attribute 
PASS s.hidden: IDL get with DOM attribute unset 
PASS s.hidden: setAttribute() to "" followed by getAttribute() 
PASS s.hidden: setAttribute() to "" followed by IDL get 
PASS s.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS s.hidden: setAttribute() to " foo " followed by IDL get 
PASS s.hidden: setAttribute() to undefined followed by getAttribute() 
PASS s.hidden: setAttribute() to undefined followed by IDL get 
PASS s.hidden: setAttribute() to null followed by getAttribute() 
PASS s.hidden: setAttribute() to null followed by IDL get 
PASS s.hidden: setAttribute() to 7 followed by getAttribute() 
PASS s.hidden: setAttribute() to 7 followed by IDL get 
PASS s.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS s.hidden: setAttribute() to 1.5 followed by IDL get 
PASS s.hidden: setAttribute() to true followed by getAttribute() 
PASS s.hidden: setAttribute() to true followed by IDL get 
PASS s.hidden: setAttribute() to false followed by getAttribute() 
PASS s.hidden: setAttribute() to false followed by IDL get 
PASS s.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS s.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS s.hidden: setAttribute() to NaN followed by getAttribute() 
PASS s.hidden: setAttribute() to NaN followed by IDL get 
PASS s.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS s.hidden: setAttribute() to Infinity followed by IDL get 
PASS s.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS s.hidden: setAttribute() to -Infinity followed by IDL get 
PASS s.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS s.hidden: setAttribute() to "\0" followed by IDL get 
PASS s.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS s.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS s.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS s.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS s.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS s.hidden: setAttribute() to "hidden" followed by IDL get 
PASS s.hidden: IDL set to "" should not throw 
PASS s.hidden: IDL set to "" followed by hasAttribute() 
PASS s.hidden: IDL set to "" followed by IDL get 
PASS s.hidden: IDL set to " foo " should not throw 
PASS s.hidden: IDL set to " foo " followed by hasAttribute() 
PASS s.hidden: IDL set to " foo " followed by IDL get 
PASS s.hidden: IDL set to undefined should not throw 
PASS s.hidden: IDL set to undefined followed by hasAttribute() 
PASS s.hidden: IDL set to undefined followed by IDL get 
PASS s.hidden: IDL set to null should not throw 
PASS s.hidden: IDL set to null followed by hasAttribute() 
PASS s.hidden: IDL set to null followed by IDL get 
PASS s.hidden: IDL set to 7 should not throw 
PASS s.hidden: IDL set to 7 followed by hasAttribute() 
PASS s.hidden: IDL set to 7 followed by IDL get 
PASS s.hidden: IDL set to 1.5 should not throw 
PASS s.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS s.hidden: IDL set to 1.5 followed by IDL get 
PASS s.hidden: IDL set to true should not throw 
PASS s.hidden: IDL set to true followed by hasAttribute() 
PASS s.hidden: IDL set to true followed by IDL get 
PASS s.hidden: IDL set to false should not throw 
PASS s.hidden: IDL set to false followed by hasAttribute() 
PASS s.hidden: IDL set to false followed by IDL get 
PASS s.hidden: IDL set to object "[object Object]" should not throw 
PASS s.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS s.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS s.hidden: IDL set to NaN should not throw 
PASS s.hidden: IDL set to NaN followed by hasAttribute() 
PASS s.hidden: IDL set to NaN followed by IDL get 
PASS s.hidden: IDL set to Infinity should not throw 
PASS s.hidden: IDL set to Infinity followed by hasAttribute() 
PASS s.hidden: IDL set to Infinity followed by IDL get 
PASS s.hidden: IDL set to -Infinity should not throw 
PASS s.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS s.hidden: IDL set to -Infinity followed by IDL get 
PASS s.hidden: IDL set to "\0" should not throw 
PASS s.hidden: IDL set to "\0" followed by hasAttribute() 
PASS s.hidden: IDL set to "\0" followed by IDL get 
PASS s.hidden: IDL set to object "test-toString" should not throw 
PASS s.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS s.hidden: IDL set to object "test-toString" followed by IDL get 
PASS s.hidden: IDL set to object "test-valueOf" should not throw 
PASS s.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS s.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS s.accessKey: typeof IDL attribute 
PASS s.accessKey: IDL get with DOM attribute unset 
PASS s.accessKey: setAttribute() to "" followed by getAttribute() 
PASS s.accessKey: setAttribute() to "" followed by IDL get 
PASS s.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS s.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS s.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS s.accessKey: setAttribute() to undefined followed by IDL get 
PASS s.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS s.accessKey: setAttribute() to 7 followed by IDL get 
PASS s.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS s.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS s.accessKey: setAttribute() to true followed by getAttribute() 
PASS s.accessKey: setAttribute() to true followed by IDL get 
PASS s.accessKey: setAttribute() to false followed by getAttribute() 
PASS s.accessKey: setAttribute() to false followed by IDL get 
PASS s.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS s.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS s.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS s.accessKey: setAttribute() to NaN followed by IDL get 
PASS s.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS s.accessKey: setAttribute() to Infinity followed by IDL get 
PASS s.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS s.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS s.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS s.accessKey: setAttribute() to "\0" followed by IDL get 
PASS s.accessKey: setAttribute() to null followed by getAttribute() 
PASS s.accessKey: setAttribute() to null followed by IDL get 
PASS s.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS s.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS s.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS s.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS s.accessKey: IDL set to "" should not throw 
PASS s.accessKey: IDL set to "" followed by getAttribute() 
PASS s.accessKey: IDL set to "" followed by IDL get 
PASS s.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS s.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS s.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS s.accessKey: IDL set to undefined should not throw 
PASS s.accessKey: IDL set to undefined followed by getAttribute() 
PASS s.accessKey: IDL set to undefined followed by IDL get 
PASS s.accessKey: IDL set to 7 should not throw 
PASS s.accessKey: IDL set to 7 followed by getAttribute() 
PASS s.accessKey: IDL set to 7 followed by IDL get 
PASS s.accessKey: IDL set to 1.5 should not throw 
PASS s.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS s.accessKey: IDL set to 1.5 followed by IDL get 
PASS s.accessKey: IDL set to true should not throw 
PASS s.accessKey: IDL set to true followed by getAttribute() 
PASS s.accessKey: IDL set to true followed by IDL get 
PASS s.accessKey: IDL set to false should not throw 
PASS s.accessKey: IDL set to false followed by getAttribute() 
PASS s.accessKey: IDL set to false followed by IDL get 
PASS s.accessKey: IDL set to object "[object Object]" should not throw 
PASS s.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS s.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS s.accessKey: IDL set to NaN should not throw 
PASS s.accessKey: IDL set to NaN followed by getAttribute() 
PASS s.accessKey: IDL set to NaN followed by IDL get 
PASS s.accessKey: IDL set to Infinity should not throw 
PASS s.accessKey: IDL set to Infinity followed by getAttribute() 
PASS s.accessKey: IDL set to Infinity followed by IDL get 
PASS s.accessKey: IDL set to -Infinity should not throw 
PASS s.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS s.accessKey: IDL set to -Infinity followed by IDL get 
PASS s.accessKey: IDL set to "\0" should not throw 
PASS s.accessKey: IDL set to "\0" followed by getAttribute() 
PASS s.accessKey: IDL set to "\0" followed by IDL get 
PASS s.accessKey: IDL set to null should not throw 
PASS s.accessKey: IDL set to null followed by getAttribute() 
PASS s.accessKey: IDL set to null followed by IDL get 
PASS s.accessKey: IDL set to object "test-toString" should not throw 
PASS s.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS s.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS s.accessKey: IDL set to object "test-valueOf" should not throw 
PASS s.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS s.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS s.tabIndex: typeof IDL attribute 
PASS s.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS s.tabIndex: setAttribute() to -36 followed by IDL get 
PASS s.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS s.tabIndex: setAttribute() to -1 followed by IDL get 
PASS s.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS s.tabIndex: setAttribute() to 0 followed by IDL get 
PASS s.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS s.tabIndex: setAttribute() to 1 followed by IDL get 
PASS s.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL s.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS s.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL s.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS s.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS s.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS s.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS s.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS s.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS s.tabIndex: setAttribute() to "0" followed by IDL get 
PASS s.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS s.tabIndex: setAttribute() to "1" followed by IDL get 
PASS s.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS s.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS s.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS s.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS s.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS s.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS s.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS s.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS s.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS s.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS s.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS s.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS s.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS s.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS s.tabIndex: IDL set to -36 should not throw 
PASS s.tabIndex: IDL set to -36 followed by getAttribute() 
PASS s.tabIndex: IDL set to -36 followed by IDL get 
PASS s.tabIndex: IDL set to -1 should not throw 
PASS s.tabIndex: IDL set to -1 followed by getAttribute() 
PASS s.tabIndex: IDL set to -1 followed by IDL get 
PASS s.tabIndex: IDL set to 0 should not throw 
PASS s.tabIndex: IDL set to 0 followed by getAttribute() 
PASS s.tabIndex: IDL set to 0 followed by IDL get 
PASS s.tabIndex: IDL set to 1 should not throw 
PASS s.tabIndex: IDL set to 1 followed by getAttribute() 
PASS s.tabIndex: IDL set to 1 followed by IDL get 
PASS s.tabIndex: IDL set to 2147483647 should not throw 
PASS s.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL s.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS s.tabIndex: IDL set to -2147483648 should not throw 
PASS s.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL s.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL s.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL s.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS s.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL s.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL s.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL s.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to null followed by getAttribute() 
FAIL s.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL s.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL s.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to true followed by getAttribute() 
FAIL s.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to false followed by getAttribute() 
FAIL s.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL s.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL s.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL s.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL s.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL s.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL s.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL s.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL s.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS s.itemScope: IDL set to "" should not throw 
FAIL s.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL s.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS s.itemScope: IDL set to " foo " should not throw 
PASS s.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL s.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS s.itemScope: IDL set to undefined should not throw 
FAIL s.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL s.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS s.itemScope: IDL set to null should not throw 
FAIL s.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL s.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS s.itemScope: IDL set to 7 should not throw 
PASS s.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL s.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS s.itemScope: IDL set to 1.5 should not throw 
PASS s.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL s.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS s.itemScope: IDL set to true should not throw 
PASS s.itemScope: IDL set to true followed by hasAttribute() 
PASS s.itemScope: IDL set to true followed by IDL get 
PASS s.itemScope: IDL set to false should not throw 
FAIL s.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS s.itemScope: IDL set to false followed by IDL get 
PASS s.itemScope: IDL set to object "[object Object]" should not throw 
PASS s.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL s.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS s.itemScope: IDL set to NaN should not throw 
FAIL s.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL s.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS s.itemScope: IDL set to Infinity should not throw 
PASS s.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL s.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS s.itemScope: IDL set to -Infinity should not throw 
PASS s.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL s.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS s.itemScope: IDL set to "\0" should not throw 
PASS s.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL s.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS s.itemScope: IDL set to object "test-toString" should not throw 
PASS s.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL s.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS s.itemScope: IDL set to object "test-valueOf" should not throw 
PASS s.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL s.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL s.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL s.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS s.itemId: setAttribute() to "" followed by getAttribute() 
FAIL s.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS s.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL s.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS s.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL s.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS s.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL s.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS s.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL s.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS s.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL s.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS s.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL s.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS s.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL s.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS s.itemId: setAttribute() to true followed by getAttribute() 
FAIL s.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS s.itemId: setAttribute() to false followed by getAttribute() 
FAIL s.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS s.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL s.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS s.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL s.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS s.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL s.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS s.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL s.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS s.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL s.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS s.itemId: setAttribute() to null followed by getAttribute() 
FAIL s.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS s.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL s.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS s.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL s.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS s.itemId: IDL set to "" should not throw 
FAIL s.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL s.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS s.itemId: IDL set to " foo " should not throw 
FAIL s.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL s.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS s.itemId: IDL set to "http://site.example/" should not throw 
FAIL s.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS s.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS s.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL s.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL s.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS s.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL s.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL s.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS s.itemId: IDL set to undefined should not throw 
FAIL s.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL s.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS s.itemId: IDL set to 7 should not throw 
FAIL s.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL s.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS s.itemId: IDL set to 1.5 should not throw 
FAIL s.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL s.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS s.itemId: IDL set to true should not throw 
FAIL s.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL s.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS s.itemId: IDL set to false should not throw 
FAIL s.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL s.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS s.itemId: IDL set to object "[object Object]" should not throw 
FAIL s.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL s.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS s.itemId: IDL set to NaN should not throw 
FAIL s.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL s.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS s.itemId: IDL set to Infinity should not throw 
FAIL s.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL s.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS s.itemId: IDL set to -Infinity should not throw 
FAIL s.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL s.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS s.itemId: IDL set to "\0" should not throw 
FAIL s.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL s.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS s.itemId: IDL set to null should not throw 
FAIL s.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL s.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS s.itemId: IDL set to object "test-toString" should not throw 
FAIL s.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL s.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS s.itemId: IDL set to object "test-valueOf" should not throw 
PASS s.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL s.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS cite.title: typeof IDL attribute 
PASS cite.title: IDL get with DOM attribute unset 
PASS cite.title: setAttribute() to "" followed by getAttribute() 
PASS cite.title: setAttribute() to "" followed by IDL get 
PASS cite.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS cite.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS cite.title: setAttribute() to undefined followed by getAttribute() 
PASS cite.title: setAttribute() to undefined followed by IDL get 
PASS cite.title: setAttribute() to 7 followed by getAttribute() 
PASS cite.title: setAttribute() to 7 followed by IDL get 
PASS cite.title: setAttribute() to 1.5 followed by getAttribute() 
PASS cite.title: setAttribute() to 1.5 followed by IDL get 
PASS cite.title: setAttribute() to true followed by getAttribute() 
PASS cite.title: setAttribute() to true followed by IDL get 
PASS cite.title: setAttribute() to false followed by getAttribute() 
PASS cite.title: setAttribute() to false followed by IDL get 
PASS cite.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS cite.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS cite.title: setAttribute() to NaN followed by getAttribute() 
PASS cite.title: setAttribute() to NaN followed by IDL get 
PASS cite.title: setAttribute() to Infinity followed by getAttribute() 
PASS cite.title: setAttribute() to Infinity followed by IDL get 
PASS cite.title: setAttribute() to -Infinity followed by getAttribute() 
PASS cite.title: setAttribute() to -Infinity followed by IDL get 
PASS cite.title: setAttribute() to "\0" followed by getAttribute() 
PASS cite.title: setAttribute() to "\0" followed by IDL get 
PASS cite.title: setAttribute() to null followed by getAttribute() 
PASS cite.title: setAttribute() to null followed by IDL get 
PASS cite.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS cite.title: setAttribute() to object "test-toString" followed by IDL get 
PASS cite.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS cite.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS cite.title: IDL set to "" should not throw 
PASS cite.title: IDL set to "" followed by getAttribute() 
PASS cite.title: IDL set to "" followed by IDL get 
PASS cite.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS cite.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS cite.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS cite.title: IDL set to undefined should not throw 
PASS cite.title: IDL set to undefined followed by getAttribute() 
PASS cite.title: IDL set to undefined followed by IDL get 
PASS cite.title: IDL set to 7 should not throw 
PASS cite.title: IDL set to 7 followed by getAttribute() 
PASS cite.title: IDL set to 7 followed by IDL get 
PASS cite.title: IDL set to 1.5 should not throw 
PASS cite.title: IDL set to 1.5 followed by getAttribute() 
PASS cite.title: IDL set to 1.5 followed by IDL get 
PASS cite.title: IDL set to true should not throw 
PASS cite.title: IDL set to true followed by getAttribute() 
PASS cite.title: IDL set to true followed by IDL get 
PASS cite.title: IDL set to false should not throw 
PASS cite.title: IDL set to false followed by getAttribute() 
PASS cite.title: IDL set to false followed by IDL get 
PASS cite.title: IDL set to object "[object Object]" should not throw 
PASS cite.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS cite.title: IDL set to object "[object Object]" followed by IDL get 
PASS cite.title: IDL set to NaN should not throw 
PASS cite.title: IDL set to NaN followed by getAttribute() 
PASS cite.title: IDL set to NaN followed by IDL get 
PASS cite.title: IDL set to Infinity should not throw 
PASS cite.title: IDL set to Infinity followed by getAttribute() 
PASS cite.title: IDL set to Infinity followed by IDL get 
PASS cite.title: IDL set to -Infinity should not throw 
PASS cite.title: IDL set to -Infinity followed by getAttribute() 
PASS cite.title: IDL set to -Infinity followed by IDL get 
PASS cite.title: IDL set to "\0" should not throw 
PASS cite.title: IDL set to "\0" followed by getAttribute() 
PASS cite.title: IDL set to "\0" followed by IDL get 
PASS cite.title: IDL set to null should not throw 
PASS cite.title: IDL set to null followed by getAttribute() 
PASS cite.title: IDL set to null followed by IDL get 
PASS cite.title: IDL set to object "test-toString" should not throw 
PASS cite.title: IDL set to object "test-toString" followed by getAttribute() 
PASS cite.title: IDL set to object "test-toString" followed by IDL get 
PASS cite.title: IDL set to object "test-valueOf" should not throw 
PASS cite.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS cite.title: IDL set to object "test-valueOf" followed by IDL get 
PASS cite.lang: typeof IDL attribute 
PASS cite.lang: IDL get with DOM attribute unset 
PASS cite.lang: setAttribute() to "" followed by getAttribute() 
PASS cite.lang: setAttribute() to "" followed by IDL get 
PASS cite.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS cite.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS cite.lang: setAttribute() to undefined followed by getAttribute() 
PASS cite.lang: setAttribute() to undefined followed by IDL get 
PASS cite.lang: setAttribute() to 7 followed by getAttribute() 
PASS cite.lang: setAttribute() to 7 followed by IDL get 
PASS cite.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS cite.lang: setAttribute() to 1.5 followed by IDL get 
PASS cite.lang: setAttribute() to true followed by getAttribute() 
PASS cite.lang: setAttribute() to true followed by IDL get 
PASS cite.lang: setAttribute() to false followed by getAttribute() 
PASS cite.lang: setAttribute() to false followed by IDL get 
PASS cite.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS cite.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS cite.lang: setAttribute() to NaN followed by getAttribute() 
PASS cite.lang: setAttribute() to NaN followed by IDL get 
PASS cite.lang: setAttribute() to Infinity followed by getAttribute() 
PASS cite.lang: setAttribute() to Infinity followed by IDL get 
PASS cite.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS cite.lang: setAttribute() to -Infinity followed by IDL get 
PASS cite.lang: setAttribute() to "\0" followed by getAttribute() 
PASS cite.lang: setAttribute() to "\0" followed by IDL get 
PASS cite.lang: setAttribute() to null followed by getAttribute() 
PASS cite.lang: setAttribute() to null followed by IDL get 
PASS cite.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS cite.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS cite.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS cite.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS cite.lang: IDL set to "" should not throw 
PASS cite.lang: IDL set to "" followed by getAttribute() 
PASS cite.lang: IDL set to "" followed by IDL get 
PASS cite.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS cite.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS cite.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS cite.lang: IDL set to undefined should not throw 
PASS cite.lang: IDL set to undefined followed by getAttribute() 
PASS cite.lang: IDL set to undefined followed by IDL get 
PASS cite.lang: IDL set to 7 should not throw 
PASS cite.lang: IDL set to 7 followed by getAttribute() 
PASS cite.lang: IDL set to 7 followed by IDL get 
PASS cite.lang: IDL set to 1.5 should not throw 
PASS cite.lang: IDL set to 1.5 followed by getAttribute() 
PASS cite.lang: IDL set to 1.5 followed by IDL get 
PASS cite.lang: IDL set to true should not throw 
PASS cite.lang: IDL set to true followed by getAttribute() 
PASS cite.lang: IDL set to true followed by IDL get 
PASS cite.lang: IDL set to false should not throw 
PASS cite.lang: IDL set to false followed by getAttribute() 
PASS cite.lang: IDL set to false followed by IDL get 
PASS cite.lang: IDL set to object "[object Object]" should not throw 
PASS cite.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS cite.lang: IDL set to object "[object Object]" followed by IDL get 
PASS cite.lang: IDL set to NaN should not throw 
PASS cite.lang: IDL set to NaN followed by getAttribute() 
PASS cite.lang: IDL set to NaN followed by IDL get 
PASS cite.lang: IDL set to Infinity should not throw 
PASS cite.lang: IDL set to Infinity followed by getAttribute() 
PASS cite.lang: IDL set to Infinity followed by IDL get 
PASS cite.lang: IDL set to -Infinity should not throw 
PASS cite.lang: IDL set to -Infinity followed by getAttribute() 
PASS cite.lang: IDL set to -Infinity followed by IDL get 
PASS cite.lang: IDL set to "\0" should not throw 
PASS cite.lang: IDL set to "\0" followed by getAttribute() 
PASS cite.lang: IDL set to "\0" followed by IDL get 
PASS cite.lang: IDL set to null should not throw 
PASS cite.lang: IDL set to null followed by getAttribute() 
PASS cite.lang: IDL set to null followed by IDL get 
PASS cite.lang: IDL set to object "test-toString" should not throw 
PASS cite.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS cite.lang: IDL set to object "test-toString" followed by IDL get 
PASS cite.lang: IDL set to object "test-valueOf" should not throw 
PASS cite.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS cite.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS cite.dir: typeof IDL attribute 
PASS cite.dir: IDL get with DOM attribute unset 
PASS cite.dir: setAttribute() to "" followed by getAttribute() 
PASS cite.dir: setAttribute() to "" followed by IDL get 
PASS cite.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS cite.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS cite.dir: setAttribute() to undefined followed by getAttribute() 
PASS cite.dir: setAttribute() to undefined followed by IDL get 
PASS cite.dir: setAttribute() to 7 followed by getAttribute() 
PASS cite.dir: setAttribute() to 7 followed by IDL get 
PASS cite.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS cite.dir: setAttribute() to 1.5 followed by IDL get 
PASS cite.dir: setAttribute() to true followed by getAttribute() 
PASS cite.dir: setAttribute() to true followed by IDL get 
PASS cite.dir: setAttribute() to false followed by getAttribute() 
PASS cite.dir: setAttribute() to false followed by IDL get 
PASS cite.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS cite.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS cite.dir: setAttribute() to NaN followed by getAttribute() 
PASS cite.dir: setAttribute() to NaN followed by IDL get 
PASS cite.dir: setAttribute() to Infinity followed by getAttribute() 
PASS cite.dir: setAttribute() to Infinity followed by IDL get 
PASS cite.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS cite.dir: setAttribute() to -Infinity followed by IDL get 
PASS cite.dir: setAttribute() to "\0" followed by getAttribute() 
PASS cite.dir: setAttribute() to "\0" followed by IDL get 
PASS cite.dir: setAttribute() to null followed by getAttribute() 
PASS cite.dir: setAttribute() to null followed by IDL get 
PASS cite.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS cite.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS cite.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS cite.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS cite.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS cite.dir: setAttribute() to "ltr" followed by IDL get 
PASS cite.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS cite.dir: setAttribute() to "xltr" followed by IDL get 
PASS cite.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS cite.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS cite.dir: setAttribute() to "tr" followed by getAttribute() 
PASS cite.dir: setAttribute() to "tr" followed by IDL get 
PASS cite.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS cite.dir: setAttribute() to "LTR" followed by IDL get 
PASS cite.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS cite.dir: setAttribute() to "rtl" followed by IDL get 
PASS cite.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS cite.dir: setAttribute() to "xrtl" followed by IDL get 
PASS cite.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS cite.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS cite.dir: setAttribute() to "tl" followed by getAttribute() 
PASS cite.dir: setAttribute() to "tl" followed by IDL get 
PASS cite.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS cite.dir: setAttribute() to "RTL" followed by IDL get 
PASS cite.dir: setAttribute() to "auto" followed by getAttribute() 
PASS cite.dir: setAttribute() to "auto" followed by IDL get 
PASS cite.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS cite.dir: setAttribute() to "xauto" followed by IDL get 
PASS cite.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS cite.dir: setAttribute() to "auto\0" followed by IDL get 
PASS cite.dir: setAttribute() to "uto" followed by getAttribute() 
PASS cite.dir: setAttribute() to "uto" followed by IDL get 
PASS cite.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS cite.dir: setAttribute() to "AUTO" followed by IDL get 
PASS cite.dir: IDL set to "" should not throw 
PASS cite.dir: IDL set to "" followed by getAttribute() 
PASS cite.dir: IDL set to "" followed by IDL get 
PASS cite.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS cite.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS cite.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS cite.dir: IDL set to undefined should not throw 
PASS cite.dir: IDL set to undefined followed by getAttribute() 
PASS cite.dir: IDL set to undefined followed by IDL get 
PASS cite.dir: IDL set to 7 should not throw 
PASS cite.dir: IDL set to 7 followed by getAttribute() 
PASS cite.dir: IDL set to 7 followed by IDL get 
PASS cite.dir: IDL set to 1.5 should not throw 
PASS cite.dir: IDL set to 1.5 followed by getAttribute() 
PASS cite.dir: IDL set to 1.5 followed by IDL get 
PASS cite.dir: IDL set to true should not throw 
PASS cite.dir: IDL set to true followed by getAttribute() 
PASS cite.dir: IDL set to true followed by IDL get 
PASS cite.dir: IDL set to false should not throw 
PASS cite.dir: IDL set to false followed by getAttribute() 
PASS cite.dir: IDL set to false followed by IDL get 
PASS cite.dir: IDL set to object "[object Object]" should not throw 
PASS cite.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS cite.dir: IDL set to object "[object Object]" followed by IDL get 
PASS cite.dir: IDL set to NaN should not throw 
PASS cite.dir: IDL set to NaN followed by getAttribute() 
PASS cite.dir: IDL set to NaN followed by IDL get 
PASS cite.dir: IDL set to Infinity should not throw 
PASS cite.dir: IDL set to Infinity followed by getAttribute() 
PASS cite.dir: IDL set to Infinity followed by IDL get 
PASS cite.dir: IDL set to -Infinity should not throw 
PASS cite.dir: IDL set to -Infinity followed by getAttribute() 
PASS cite.dir: IDL set to -Infinity followed by IDL get 
PASS cite.dir: IDL set to "\0" should not throw 
PASS cite.dir: IDL set to "\0" followed by getAttribute() 
PASS cite.dir: IDL set to "\0" followed by IDL get 
PASS cite.dir: IDL set to null should not throw 
PASS cite.dir: IDL set to null followed by IDL get 
PASS cite.dir: IDL set to object "test-toString" should not throw 
PASS cite.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS cite.dir: IDL set to object "test-toString" followed by IDL get 
PASS cite.dir: IDL set to object "test-valueOf" should not throw 
PASS cite.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS cite.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS cite.dir: IDL set to "ltr" should not throw 
PASS cite.dir: IDL set to "ltr" followed by getAttribute() 
PASS cite.dir: IDL set to "ltr" followed by IDL get 
PASS cite.dir: IDL set to "xltr" should not throw 
PASS cite.dir: IDL set to "xltr" followed by getAttribute() 
PASS cite.dir: IDL set to "xltr" followed by IDL get 
PASS cite.dir: IDL set to "ltr\0" should not throw 
PASS cite.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS cite.dir: IDL set to "ltr\0" followed by IDL get 
PASS cite.dir: IDL set to "tr" should not throw 
PASS cite.dir: IDL set to "tr" followed by getAttribute() 
PASS cite.dir: IDL set to "tr" followed by IDL get 
PASS cite.dir: IDL set to "LTR" should not throw 
PASS cite.dir: IDL set to "LTR" followed by getAttribute() 
PASS cite.dir: IDL set to "LTR" followed by IDL get 
PASS cite.dir: IDL set to "rtl" should not throw 
PASS cite.dir: IDL set to "rtl" followed by getAttribute() 
PASS cite.dir: IDL set to "rtl" followed by IDL get 
PASS cite.dir: IDL set to "xrtl" should not throw 
PASS cite.dir: IDL set to "xrtl" followed by getAttribute() 
PASS cite.dir: IDL set to "xrtl" followed by IDL get 
PASS cite.dir: IDL set to "rtl\0" should not throw 
PASS cite.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS cite.dir: IDL set to "rtl\0" followed by IDL get 
PASS cite.dir: IDL set to "tl" should not throw 
PASS cite.dir: IDL set to "tl" followed by getAttribute() 
PASS cite.dir: IDL set to "tl" followed by IDL get 
PASS cite.dir: IDL set to "RTL" should not throw 
PASS cite.dir: IDL set to "RTL" followed by getAttribute() 
PASS cite.dir: IDL set to "RTL" followed by IDL get 
PASS cite.dir: IDL set to "auto" should not throw 
PASS cite.dir: IDL set to "auto" followed by getAttribute() 
PASS cite.dir: IDL set to "auto" followed by IDL get 
PASS cite.dir: IDL set to "xauto" should not throw 
PASS cite.dir: IDL set to "xauto" followed by getAttribute() 
PASS cite.dir: IDL set to "xauto" followed by IDL get 
PASS cite.dir: IDL set to "auto\0" should not throw 
PASS cite.dir: IDL set to "auto\0" followed by getAttribute() 
PASS cite.dir: IDL set to "auto\0" followed by IDL get 
PASS cite.dir: IDL set to "uto" should not throw 
PASS cite.dir: IDL set to "uto" followed by getAttribute() 
PASS cite.dir: IDL set to "uto" followed by IDL get 
PASS cite.dir: IDL set to "AUTO" should not throw 
PASS cite.dir: IDL set to "AUTO" followed by getAttribute() 
PASS cite.dir: IDL set to "AUTO" followed by IDL get 
PASS cite.className (<cite class>): typeof IDL attribute 
PASS cite.className (<cite class>): IDL get with DOM attribute unset 
PASS cite.className (<cite class>): setAttribute() to "" followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to "" followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to undefined followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to undefined followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to 7 followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to 7 followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to 1.5 followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to 1.5 followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to true followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to true followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to false followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to false followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to NaN followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to NaN followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to Infinity followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to Infinity followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to -Infinity followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to -Infinity followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to "\0" followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to "\0" followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to null followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to null followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to object "test-toString" followed by IDL get 
PASS cite.className (<cite class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS cite.className (<cite class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS cite.className (<cite class>): IDL set to "" should not throw 
PASS cite.className (<cite class>): IDL set to "" followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to "" followed by IDL get 
PASS cite.className (<cite class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS cite.className (<cite class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS cite.className (<cite class>): IDL set to undefined should not throw 
PASS cite.className (<cite class>): IDL set to undefined followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to undefined followed by IDL get 
PASS cite.className (<cite class>): IDL set to 7 should not throw 
PASS cite.className (<cite class>): IDL set to 7 followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to 7 followed by IDL get 
PASS cite.className (<cite class>): IDL set to 1.5 should not throw 
PASS cite.className (<cite class>): IDL set to 1.5 followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to 1.5 followed by IDL get 
PASS cite.className (<cite class>): IDL set to true should not throw 
PASS cite.className (<cite class>): IDL set to true followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to true followed by IDL get 
PASS cite.className (<cite class>): IDL set to false should not throw 
PASS cite.className (<cite class>): IDL set to false followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to false followed by IDL get 
PASS cite.className (<cite class>): IDL set to object "[object Object]" should not throw 
PASS cite.className (<cite class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to object "[object Object]" followed by IDL get 
PASS cite.className (<cite class>): IDL set to NaN should not throw 
PASS cite.className (<cite class>): IDL set to NaN followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to NaN followed by IDL get 
PASS cite.className (<cite class>): IDL set to Infinity should not throw 
PASS cite.className (<cite class>): IDL set to Infinity followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to Infinity followed by IDL get 
PASS cite.className (<cite class>): IDL set to -Infinity should not throw 
PASS cite.className (<cite class>): IDL set to -Infinity followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to -Infinity followed by IDL get 
PASS cite.className (<cite class>): IDL set to "\0" should not throw 
PASS cite.className (<cite class>): IDL set to "\0" followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to "\0" followed by IDL get 
PASS cite.className (<cite class>): IDL set to null should not throw 
PASS cite.className (<cite class>): IDL set to null followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to null followed by IDL get 
PASS cite.className (<cite class>): IDL set to object "test-toString" should not throw 
PASS cite.className (<cite class>): IDL set to object "test-toString" followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to object "test-toString" followed by IDL get 
PASS cite.className (<cite class>): IDL set to object "test-valueOf" should not throw 
PASS cite.className (<cite class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS cite.className (<cite class>): IDL set to object "test-valueOf" followed by IDL get 
PASS cite.hidden: typeof IDL attribute 
PASS cite.hidden: IDL get with DOM attribute unset 
PASS cite.hidden: setAttribute() to "" followed by getAttribute() 
PASS cite.hidden: setAttribute() to "" followed by IDL get 
PASS cite.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS cite.hidden: setAttribute() to " foo " followed by IDL get 
PASS cite.hidden: setAttribute() to undefined followed by getAttribute() 
PASS cite.hidden: setAttribute() to undefined followed by IDL get 
PASS cite.hidden: setAttribute() to null followed by getAttribute() 
PASS cite.hidden: setAttribute() to null followed by IDL get 
PASS cite.hidden: setAttribute() to 7 followed by getAttribute() 
PASS cite.hidden: setAttribute() to 7 followed by IDL get 
PASS cite.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS cite.hidden: setAttribute() to 1.5 followed by IDL get 
PASS cite.hidden: setAttribute() to true followed by getAttribute() 
PASS cite.hidden: setAttribute() to true followed by IDL get 
PASS cite.hidden: setAttribute() to false followed by getAttribute() 
PASS cite.hidden: setAttribute() to false followed by IDL get 
PASS cite.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS cite.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS cite.hidden: setAttribute() to NaN followed by getAttribute() 
PASS cite.hidden: setAttribute() to NaN followed by IDL get 
PASS cite.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS cite.hidden: setAttribute() to Infinity followed by IDL get 
PASS cite.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS cite.hidden: setAttribute() to -Infinity followed by IDL get 
PASS cite.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS cite.hidden: setAttribute() to "\0" followed by IDL get 
PASS cite.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS cite.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS cite.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS cite.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS cite.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS cite.hidden: setAttribute() to "hidden" followed by IDL get 
PASS cite.hidden: IDL set to "" should not throw 
PASS cite.hidden: IDL set to "" followed by hasAttribute() 
PASS cite.hidden: IDL set to "" followed by IDL get 
PASS cite.hidden: IDL set to " foo " should not throw 
PASS cite.hidden: IDL set to " foo " followed by hasAttribute() 
PASS cite.hidden: IDL set to " foo " followed by IDL get 
PASS cite.hidden: IDL set to undefined should not throw 
PASS cite.hidden: IDL set to undefined followed by hasAttribute() 
PASS cite.hidden: IDL set to undefined followed by IDL get 
PASS cite.hidden: IDL set to null should not throw 
PASS cite.hidden: IDL set to null followed by hasAttribute() 
PASS cite.hidden: IDL set to null followed by IDL get 
PASS cite.hidden: IDL set to 7 should not throw 
PASS cite.hidden: IDL set to 7 followed by hasAttribute() 
PASS cite.hidden: IDL set to 7 followed by IDL get 
PASS cite.hidden: IDL set to 1.5 should not throw 
PASS cite.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS cite.hidden: IDL set to 1.5 followed by IDL get 
PASS cite.hidden: IDL set to true should not throw 
PASS cite.hidden: IDL set to true followed by hasAttribute() 
PASS cite.hidden: IDL set to true followed by IDL get 
PASS cite.hidden: IDL set to false should not throw 
PASS cite.hidden: IDL set to false followed by hasAttribute() 
PASS cite.hidden: IDL set to false followed by IDL get 
PASS cite.hidden: IDL set to object "[object Object]" should not throw 
PASS cite.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS cite.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS cite.hidden: IDL set to NaN should not throw 
PASS cite.hidden: IDL set to NaN followed by hasAttribute() 
PASS cite.hidden: IDL set to NaN followed by IDL get 
PASS cite.hidden: IDL set to Infinity should not throw 
PASS cite.hidden: IDL set to Infinity followed by hasAttribute() 
PASS cite.hidden: IDL set to Infinity followed by IDL get 
PASS cite.hidden: IDL set to -Infinity should not throw 
PASS cite.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS cite.hidden: IDL set to -Infinity followed by IDL get 
PASS cite.hidden: IDL set to "\0" should not throw 
PASS cite.hidden: IDL set to "\0" followed by hasAttribute() 
PASS cite.hidden: IDL set to "\0" followed by IDL get 
PASS cite.hidden: IDL set to object "test-toString" should not throw 
PASS cite.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS cite.hidden: IDL set to object "test-toString" followed by IDL get 
PASS cite.hidden: IDL set to object "test-valueOf" should not throw 
PASS cite.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS cite.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS cite.accessKey: typeof IDL attribute 
PASS cite.accessKey: IDL get with DOM attribute unset 
PASS cite.accessKey: setAttribute() to "" followed by getAttribute() 
PASS cite.accessKey: setAttribute() to "" followed by IDL get 
PASS cite.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS cite.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS cite.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS cite.accessKey: setAttribute() to undefined followed by IDL get 
PASS cite.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS cite.accessKey: setAttribute() to 7 followed by IDL get 
PASS cite.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS cite.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS cite.accessKey: setAttribute() to true followed by getAttribute() 
PASS cite.accessKey: setAttribute() to true followed by IDL get 
PASS cite.accessKey: setAttribute() to false followed by getAttribute() 
PASS cite.accessKey: setAttribute() to false followed by IDL get 
PASS cite.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS cite.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS cite.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS cite.accessKey: setAttribute() to NaN followed by IDL get 
PASS cite.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS cite.accessKey: setAttribute() to Infinity followed by IDL get 
PASS cite.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS cite.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS cite.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS cite.accessKey: setAttribute() to "\0" followed by IDL get 
PASS cite.accessKey: setAttribute() to null followed by getAttribute() 
PASS cite.accessKey: setAttribute() to null followed by IDL get 
PASS cite.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS cite.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS cite.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS cite.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS cite.accessKey: IDL set to "" should not throw 
PASS cite.accessKey: IDL set to "" followed by getAttribute() 
PASS cite.accessKey: IDL set to "" followed by IDL get 
PASS cite.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS cite.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS cite.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS cite.accessKey: IDL set to undefined should not throw 
PASS cite.accessKey: IDL set to undefined followed by getAttribute() 
PASS cite.accessKey: IDL set to undefined followed by IDL get 
PASS cite.accessKey: IDL set to 7 should not throw 
PASS cite.accessKey: IDL set to 7 followed by getAttribute() 
PASS cite.accessKey: IDL set to 7 followed by IDL get 
PASS cite.accessKey: IDL set to 1.5 should not throw 
PASS cite.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS cite.accessKey: IDL set to 1.5 followed by IDL get 
PASS cite.accessKey: IDL set to true should not throw 
PASS cite.accessKey: IDL set to true followed by getAttribute() 
PASS cite.accessKey: IDL set to true followed by IDL get 
PASS cite.accessKey: IDL set to false should not throw 
PASS cite.accessKey: IDL set to false followed by getAttribute() 
PASS cite.accessKey: IDL set to false followed by IDL get 
PASS cite.accessKey: IDL set to object "[object Object]" should not throw 
PASS cite.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS cite.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS cite.accessKey: IDL set to NaN should not throw 
PASS cite.accessKey: IDL set to NaN followed by getAttribute() 
PASS cite.accessKey: IDL set to NaN followed by IDL get 
PASS cite.accessKey: IDL set to Infinity should not throw 
PASS cite.accessKey: IDL set to Infinity followed by getAttribute() 
PASS cite.accessKey: IDL set to Infinity followed by IDL get 
PASS cite.accessKey: IDL set to -Infinity should not throw 
PASS cite.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS cite.accessKey: IDL set to -Infinity followed by IDL get 
PASS cite.accessKey: IDL set to "\0" should not throw 
PASS cite.accessKey: IDL set to "\0" followed by getAttribute() 
PASS cite.accessKey: IDL set to "\0" followed by IDL get 
PASS cite.accessKey: IDL set to null should not throw 
PASS cite.accessKey: IDL set to null followed by getAttribute() 
PASS cite.accessKey: IDL set to null followed by IDL get 
PASS cite.accessKey: IDL set to object "test-toString" should not throw 
PASS cite.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS cite.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS cite.accessKey: IDL set to object "test-valueOf" should not throw 
PASS cite.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS cite.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS cite.tabIndex: typeof IDL attribute 
PASS cite.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to -36 followed by IDL get 
PASS cite.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to -1 followed by IDL get 
PASS cite.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to 0 followed by IDL get 
PASS cite.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to 1 followed by IDL get 
PASS cite.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL cite.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS cite.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL cite.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS cite.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS cite.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS cite.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to "0" followed by IDL get 
PASS cite.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to "1" followed by IDL get 
PASS cite.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS cite.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS cite.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS cite.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS cite.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS cite.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS cite.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS cite.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS cite.tabIndex: IDL set to -36 should not throw 
PASS cite.tabIndex: IDL set to -36 followed by getAttribute() 
PASS cite.tabIndex: IDL set to -36 followed by IDL get 
PASS cite.tabIndex: IDL set to -1 should not throw 
PASS cite.tabIndex: IDL set to -1 followed by getAttribute() 
PASS cite.tabIndex: IDL set to -1 followed by IDL get 
PASS cite.tabIndex: IDL set to 0 should not throw 
PASS cite.tabIndex: IDL set to 0 followed by getAttribute() 
PASS cite.tabIndex: IDL set to 0 followed by IDL get 
PASS cite.tabIndex: IDL set to 1 should not throw 
PASS cite.tabIndex: IDL set to 1 followed by getAttribute() 
PASS cite.tabIndex: IDL set to 1 followed by IDL get 
PASS cite.tabIndex: IDL set to 2147483647 should not throw 
PASS cite.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL cite.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS cite.tabIndex: IDL set to -2147483648 should not throw 
PASS cite.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL cite.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL cite.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL cite.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS cite.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to null followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to true followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to false followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL cite.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS cite.itemScope: IDL set to "" should not throw 
FAIL cite.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL cite.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS cite.itemScope: IDL set to " foo " should not throw 
PASS cite.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL cite.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS cite.itemScope: IDL set to undefined should not throw 
FAIL cite.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL cite.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS cite.itemScope: IDL set to null should not throw 
FAIL cite.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL cite.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS cite.itemScope: IDL set to 7 should not throw 
PASS cite.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL cite.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS cite.itemScope: IDL set to 1.5 should not throw 
PASS cite.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL cite.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS cite.itemScope: IDL set to true should not throw 
PASS cite.itemScope: IDL set to true followed by hasAttribute() 
PASS cite.itemScope: IDL set to true followed by IDL get 
PASS cite.itemScope: IDL set to false should not throw 
FAIL cite.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS cite.itemScope: IDL set to false followed by IDL get 
PASS cite.itemScope: IDL set to object "[object Object]" should not throw 
PASS cite.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL cite.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS cite.itemScope: IDL set to NaN should not throw 
FAIL cite.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL cite.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS cite.itemScope: IDL set to Infinity should not throw 
PASS cite.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL cite.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS cite.itemScope: IDL set to -Infinity should not throw 
PASS cite.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL cite.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS cite.itemScope: IDL set to "\0" should not throw 
PASS cite.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL cite.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS cite.itemScope: IDL set to object "test-toString" should not throw 
PASS cite.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL cite.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS cite.itemScope: IDL set to object "test-valueOf" should not throw 
PASS cite.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL cite.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL cite.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL cite.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS cite.itemId: setAttribute() to "" followed by getAttribute() 
FAIL cite.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS cite.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL cite.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS cite.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL cite.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS cite.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL cite.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS cite.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL cite.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS cite.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL cite.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS cite.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL cite.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS cite.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL cite.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS cite.itemId: setAttribute() to true followed by getAttribute() 
FAIL cite.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS cite.itemId: setAttribute() to false followed by getAttribute() 
FAIL cite.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS cite.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL cite.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS cite.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL cite.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS cite.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL cite.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS cite.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL cite.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS cite.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL cite.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS cite.itemId: setAttribute() to null followed by getAttribute() 
FAIL cite.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS cite.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL cite.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS cite.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL cite.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS cite.itemId: IDL set to "" should not throw 
FAIL cite.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL cite.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS cite.itemId: IDL set to " foo " should not throw 
FAIL cite.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL cite.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS cite.itemId: IDL set to "http://site.example/" should not throw 
FAIL cite.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS cite.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS cite.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL cite.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL cite.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS cite.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL cite.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL cite.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS cite.itemId: IDL set to undefined should not throw 
FAIL cite.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL cite.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS cite.itemId: IDL set to 7 should not throw 
FAIL cite.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL cite.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS cite.itemId: IDL set to 1.5 should not throw 
FAIL cite.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL cite.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS cite.itemId: IDL set to true should not throw 
FAIL cite.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL cite.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS cite.itemId: IDL set to false should not throw 
FAIL cite.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL cite.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS cite.itemId: IDL set to object "[object Object]" should not throw 
FAIL cite.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL cite.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS cite.itemId: IDL set to NaN should not throw 
FAIL cite.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL cite.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS cite.itemId: IDL set to Infinity should not throw 
FAIL cite.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL cite.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS cite.itemId: IDL set to -Infinity should not throw 
FAIL cite.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL cite.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS cite.itemId: IDL set to "\0" should not throw 
FAIL cite.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL cite.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS cite.itemId: IDL set to null should not throw 
FAIL cite.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL cite.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS cite.itemId: IDL set to object "test-toString" should not throw 
FAIL cite.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL cite.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS cite.itemId: IDL set to object "test-valueOf" should not throw 
PASS cite.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL cite.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS q.title: typeof IDL attribute 
PASS q.title: IDL get with DOM attribute unset 
PASS q.title: setAttribute() to "" followed by getAttribute() 
PASS q.title: setAttribute() to "" followed by IDL get 
PASS q.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS q.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS q.title: setAttribute() to undefined followed by getAttribute() 
PASS q.title: setAttribute() to undefined followed by IDL get 
PASS q.title: setAttribute() to 7 followed by getAttribute() 
PASS q.title: setAttribute() to 7 followed by IDL get 
PASS q.title: setAttribute() to 1.5 followed by getAttribute() 
PASS q.title: setAttribute() to 1.5 followed by IDL get 
PASS q.title: setAttribute() to true followed by getAttribute() 
PASS q.title: setAttribute() to true followed by IDL get 
PASS q.title: setAttribute() to false followed by getAttribute() 
PASS q.title: setAttribute() to false followed by IDL get 
PASS q.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS q.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS q.title: setAttribute() to NaN followed by getAttribute() 
PASS q.title: setAttribute() to NaN followed by IDL get 
PASS q.title: setAttribute() to Infinity followed by getAttribute() 
PASS q.title: setAttribute() to Infinity followed by IDL get 
PASS q.title: setAttribute() to -Infinity followed by getAttribute() 
PASS q.title: setAttribute() to -Infinity followed by IDL get 
PASS q.title: setAttribute() to "\0" followed by getAttribute() 
PASS q.title: setAttribute() to "\0" followed by IDL get 
PASS q.title: setAttribute() to null followed by getAttribute() 
PASS q.title: setAttribute() to null followed by IDL get 
PASS q.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS q.title: setAttribute() to object "test-toString" followed by IDL get 
PASS q.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS q.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS q.title: IDL set to "" should not throw 
PASS q.title: IDL set to "" followed by getAttribute() 
PASS q.title: IDL set to "" followed by IDL get 
PASS q.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS q.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS q.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS q.title: IDL set to undefined should not throw 
PASS q.title: IDL set to undefined followed by getAttribute() 
PASS q.title: IDL set to undefined followed by IDL get 
PASS q.title: IDL set to 7 should not throw 
PASS q.title: IDL set to 7 followed by getAttribute() 
PASS q.title: IDL set to 7 followed by IDL get 
PASS q.title: IDL set to 1.5 should not throw 
PASS q.title: IDL set to 1.5 followed by getAttribute() 
PASS q.title: IDL set to 1.5 followed by IDL get 
PASS q.title: IDL set to true should not throw 
PASS q.title: IDL set to true followed by getAttribute() 
PASS q.title: IDL set to true followed by IDL get 
PASS q.title: IDL set to false should not throw 
PASS q.title: IDL set to false followed by getAttribute() 
PASS q.title: IDL set to false followed by IDL get 
PASS q.title: IDL set to object "[object Object]" should not throw 
PASS q.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS q.title: IDL set to object "[object Object]" followed by IDL get 
PASS q.title: IDL set to NaN should not throw 
PASS q.title: IDL set to NaN followed by getAttribute() 
PASS q.title: IDL set to NaN followed by IDL get 
PASS q.title: IDL set to Infinity should not throw 
PASS q.title: IDL set to Infinity followed by getAttribute() 
PASS q.title: IDL set to Infinity followed by IDL get 
PASS q.title: IDL set to -Infinity should not throw 
PASS q.title: IDL set to -Infinity followed by getAttribute() 
PASS q.title: IDL set to -Infinity followed by IDL get 
PASS q.title: IDL set to "\0" should not throw 
PASS q.title: IDL set to "\0" followed by getAttribute() 
PASS q.title: IDL set to "\0" followed by IDL get 
PASS q.title: IDL set to null should not throw 
PASS q.title: IDL set to null followed by getAttribute() 
PASS q.title: IDL set to null followed by IDL get 
PASS q.title: IDL set to object "test-toString" should not throw 
PASS q.title: IDL set to object "test-toString" followed by getAttribute() 
PASS q.title: IDL set to object "test-toString" followed by IDL get 
PASS q.title: IDL set to object "test-valueOf" should not throw 
PASS q.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS q.title: IDL set to object "test-valueOf" followed by IDL get 
PASS q.lang: typeof IDL attribute 
PASS q.lang: IDL get with DOM attribute unset 
PASS q.lang: setAttribute() to "" followed by getAttribute() 
PASS q.lang: setAttribute() to "" followed by IDL get 
PASS q.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS q.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS q.lang: setAttribute() to undefined followed by getAttribute() 
PASS q.lang: setAttribute() to undefined followed by IDL get 
PASS q.lang: setAttribute() to 7 followed by getAttribute() 
PASS q.lang: setAttribute() to 7 followed by IDL get 
PASS q.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS q.lang: setAttribute() to 1.5 followed by IDL get 
PASS q.lang: setAttribute() to true followed by getAttribute() 
PASS q.lang: setAttribute() to true followed by IDL get 
PASS q.lang: setAttribute() to false followed by getAttribute() 
PASS q.lang: setAttribute() to false followed by IDL get 
PASS q.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS q.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS q.lang: setAttribute() to NaN followed by getAttribute() 
PASS q.lang: setAttribute() to NaN followed by IDL get 
PASS q.lang: setAttribute() to Infinity followed by getAttribute() 
PASS q.lang: setAttribute() to Infinity followed by IDL get 
PASS q.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS q.lang: setAttribute() to -Infinity followed by IDL get 
PASS q.lang: setAttribute() to "\0" followed by getAttribute() 
PASS q.lang: setAttribute() to "\0" followed by IDL get 
PASS q.lang: setAttribute() to null followed by getAttribute() 
PASS q.lang: setAttribute() to null followed by IDL get 
PASS q.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS q.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS q.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS q.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS q.lang: IDL set to "" should not throw 
PASS q.lang: IDL set to "" followed by getAttribute() 
PASS q.lang: IDL set to "" followed by IDL get 
PASS q.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS q.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS q.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS q.lang: IDL set to undefined should not throw 
PASS q.lang: IDL set to undefined followed by getAttribute() 
PASS q.lang: IDL set to undefined followed by IDL get 
PASS q.lang: IDL set to 7 should not throw 
PASS q.lang: IDL set to 7 followed by getAttribute() 
PASS q.lang: IDL set to 7 followed by IDL get 
PASS q.lang: IDL set to 1.5 should not throw 
PASS q.lang: IDL set to 1.5 followed by getAttribute() 
PASS q.lang: IDL set to 1.5 followed by IDL get 
PASS q.lang: IDL set to true should not throw 
PASS q.lang: IDL set to true followed by getAttribute() 
PASS q.lang: IDL set to true followed by IDL get 
PASS q.lang: IDL set to false should not throw 
PASS q.lang: IDL set to false followed by getAttribute() 
PASS q.lang: IDL set to false followed by IDL get 
PASS q.lang: IDL set to object "[object Object]" should not throw 
PASS q.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS q.lang: IDL set to object "[object Object]" followed by IDL get 
PASS q.lang: IDL set to NaN should not throw 
PASS q.lang: IDL set to NaN followed by getAttribute() 
PASS q.lang: IDL set to NaN followed by IDL get 
PASS q.lang: IDL set to Infinity should not throw 
PASS q.lang: IDL set to Infinity followed by getAttribute() 
PASS q.lang: IDL set to Infinity followed by IDL get 
PASS q.lang: IDL set to -Infinity should not throw 
PASS q.lang: IDL set to -Infinity followed by getAttribute() 
PASS q.lang: IDL set to -Infinity followed by IDL get 
PASS q.lang: IDL set to "\0" should not throw 
PASS q.lang: IDL set to "\0" followed by getAttribute() 
PASS q.lang: IDL set to "\0" followed by IDL get 
PASS q.lang: IDL set to null should not throw 
PASS q.lang: IDL set to null followed by getAttribute() 
PASS q.lang: IDL set to null followed by IDL get 
PASS q.lang: IDL set to object "test-toString" should not throw 
PASS q.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS q.lang: IDL set to object "test-toString" followed by IDL get 
PASS q.lang: IDL set to object "test-valueOf" should not throw 
PASS q.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS q.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS q.dir: typeof IDL attribute 
PASS q.dir: IDL get with DOM attribute unset 
PASS q.dir: setAttribute() to "" followed by getAttribute() 
PASS q.dir: setAttribute() to "" followed by IDL get 
PASS q.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS q.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS q.dir: setAttribute() to undefined followed by getAttribute() 
PASS q.dir: setAttribute() to undefined followed by IDL get 
PASS q.dir: setAttribute() to 7 followed by getAttribute() 
PASS q.dir: setAttribute() to 7 followed by IDL get 
PASS q.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS q.dir: setAttribute() to 1.5 followed by IDL get 
PASS q.dir: setAttribute() to true followed by getAttribute() 
PASS q.dir: setAttribute() to true followed by IDL get 
PASS q.dir: setAttribute() to false followed by getAttribute() 
PASS q.dir: setAttribute() to false followed by IDL get 
PASS q.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS q.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS q.dir: setAttribute() to NaN followed by getAttribute() 
PASS q.dir: setAttribute() to NaN followed by IDL get 
PASS q.dir: setAttribute() to Infinity followed by getAttribute() 
PASS q.dir: setAttribute() to Infinity followed by IDL get 
PASS q.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS q.dir: setAttribute() to -Infinity followed by IDL get 
PASS q.dir: setAttribute() to "\0" followed by getAttribute() 
PASS q.dir: setAttribute() to "\0" followed by IDL get 
PASS q.dir: setAttribute() to null followed by getAttribute() 
PASS q.dir: setAttribute() to null followed by IDL get 
PASS q.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS q.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS q.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS q.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS q.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS q.dir: setAttribute() to "ltr" followed by IDL get 
PASS q.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS q.dir: setAttribute() to "xltr" followed by IDL get 
PASS q.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS q.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS q.dir: setAttribute() to "tr" followed by getAttribute() 
PASS q.dir: setAttribute() to "tr" followed by IDL get 
PASS q.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS q.dir: setAttribute() to "LTR" followed by IDL get 
PASS q.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS q.dir: setAttribute() to "rtl" followed by IDL get 
PASS q.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS q.dir: setAttribute() to "xrtl" followed by IDL get 
PASS q.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS q.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS q.dir: setAttribute() to "tl" followed by getAttribute() 
PASS q.dir: setAttribute() to "tl" followed by IDL get 
PASS q.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS q.dir: setAttribute() to "RTL" followed by IDL get 
PASS q.dir: setAttribute() to "auto" followed by getAttribute() 
PASS q.dir: setAttribute() to "auto" followed by IDL get 
PASS q.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS q.dir: setAttribute() to "xauto" followed by IDL get 
PASS q.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS q.dir: setAttribute() to "auto\0" followed by IDL get 
PASS q.dir: setAttribute() to "uto" followed by getAttribute() 
PASS q.dir: setAttribute() to "uto" followed by IDL get 
PASS q.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS q.dir: setAttribute() to "AUTO" followed by IDL get 
PASS q.dir: IDL set to "" should not throw 
PASS q.dir: IDL set to "" followed by getAttribute() 
PASS q.dir: IDL set to "" followed by IDL get 
PASS q.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS q.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS q.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS q.dir: IDL set to undefined should not throw 
PASS q.dir: IDL set to undefined followed by getAttribute() 
PASS q.dir: IDL set to undefined followed by IDL get 
PASS q.dir: IDL set to 7 should not throw 
PASS q.dir: IDL set to 7 followed by getAttribute() 
PASS q.dir: IDL set to 7 followed by IDL get 
PASS q.dir: IDL set to 1.5 should not throw 
PASS q.dir: IDL set to 1.5 followed by getAttribute() 
PASS q.dir: IDL set to 1.5 followed by IDL get 
PASS q.dir: IDL set to true should not throw 
PASS q.dir: IDL set to true followed by getAttribute() 
PASS q.dir: IDL set to true followed by IDL get 
PASS q.dir: IDL set to false should not throw 
PASS q.dir: IDL set to false followed by getAttribute() 
PASS q.dir: IDL set to false followed by IDL get 
PASS q.dir: IDL set to object "[object Object]" should not throw 
PASS q.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS q.dir: IDL set to object "[object Object]" followed by IDL get 
PASS q.dir: IDL set to NaN should not throw 
PASS q.dir: IDL set to NaN followed by getAttribute() 
PASS q.dir: IDL set to NaN followed by IDL get 
PASS q.dir: IDL set to Infinity should not throw 
PASS q.dir: IDL set to Infinity followed by getAttribute() 
PASS q.dir: IDL set to Infinity followed by IDL get 
PASS q.dir: IDL set to -Infinity should not throw 
PASS q.dir: IDL set to -Infinity followed by getAttribute() 
PASS q.dir: IDL set to -Infinity followed by IDL get 
PASS q.dir: IDL set to "\0" should not throw 
PASS q.dir: IDL set to "\0" followed by getAttribute() 
PASS q.dir: IDL set to "\0" followed by IDL get 
PASS q.dir: IDL set to null should not throw 
PASS q.dir: IDL set to null followed by IDL get 
PASS q.dir: IDL set to object "test-toString" should not throw 
PASS q.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS q.dir: IDL set to object "test-toString" followed by IDL get 
PASS q.dir: IDL set to object "test-valueOf" should not throw 
PASS q.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS q.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS q.dir: IDL set to "ltr" should not throw 
PASS q.dir: IDL set to "ltr" followed by getAttribute() 
PASS q.dir: IDL set to "ltr" followed by IDL get 
PASS q.dir: IDL set to "xltr" should not throw 
PASS q.dir: IDL set to "xltr" followed by getAttribute() 
PASS q.dir: IDL set to "xltr" followed by IDL get 
PASS q.dir: IDL set to "ltr\0" should not throw 
PASS q.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS q.dir: IDL set to "ltr\0" followed by IDL get 
PASS q.dir: IDL set to "tr" should not throw 
PASS q.dir: IDL set to "tr" followed by getAttribute() 
PASS q.dir: IDL set to "tr" followed by IDL get 
PASS q.dir: IDL set to "LTR" should not throw 
PASS q.dir: IDL set to "LTR" followed by getAttribute() 
PASS q.dir: IDL set to "LTR" followed by IDL get 
PASS q.dir: IDL set to "rtl" should not throw 
PASS q.dir: IDL set to "rtl" followed by getAttribute() 
PASS q.dir: IDL set to "rtl" followed by IDL get 
PASS q.dir: IDL set to "xrtl" should not throw 
PASS q.dir: IDL set to "xrtl" followed by getAttribute() 
PASS q.dir: IDL set to "xrtl" followed by IDL get 
PASS q.dir: IDL set to "rtl\0" should not throw 
PASS q.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS q.dir: IDL set to "rtl\0" followed by IDL get 
PASS q.dir: IDL set to "tl" should not throw 
PASS q.dir: IDL set to "tl" followed by getAttribute() 
PASS q.dir: IDL set to "tl" followed by IDL get 
PASS q.dir: IDL set to "RTL" should not throw 
PASS q.dir: IDL set to "RTL" followed by getAttribute() 
PASS q.dir: IDL set to "RTL" followed by IDL get 
PASS q.dir: IDL set to "auto" should not throw 
PASS q.dir: IDL set to "auto" followed by getAttribute() 
PASS q.dir: IDL set to "auto" followed by IDL get 
PASS q.dir: IDL set to "xauto" should not throw 
PASS q.dir: IDL set to "xauto" followed by getAttribute() 
PASS q.dir: IDL set to "xauto" followed by IDL get 
PASS q.dir: IDL set to "auto\0" should not throw 
PASS q.dir: IDL set to "auto\0" followed by getAttribute() 
PASS q.dir: IDL set to "auto\0" followed by IDL get 
PASS q.dir: IDL set to "uto" should not throw 
PASS q.dir: IDL set to "uto" followed by getAttribute() 
PASS q.dir: IDL set to "uto" followed by IDL get 
PASS q.dir: IDL set to "AUTO" should not throw 
PASS q.dir: IDL set to "AUTO" followed by getAttribute() 
PASS q.dir: IDL set to "AUTO" followed by IDL get 
PASS q.className (<q class>): typeof IDL attribute 
PASS q.className (<q class>): IDL get with DOM attribute unset 
PASS q.className (<q class>): setAttribute() to "" followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to "" followed by IDL get 
PASS q.className (<q class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS q.className (<q class>): setAttribute() to undefined followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to undefined followed by IDL get 
PASS q.className (<q class>): setAttribute() to 7 followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to 7 followed by IDL get 
PASS q.className (<q class>): setAttribute() to 1.5 followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to 1.5 followed by IDL get 
PASS q.className (<q class>): setAttribute() to true followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to true followed by IDL get 
PASS q.className (<q class>): setAttribute() to false followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to false followed by IDL get 
PASS q.className (<q class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS q.className (<q class>): setAttribute() to NaN followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to NaN followed by IDL get 
PASS q.className (<q class>): setAttribute() to Infinity followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to Infinity followed by IDL get 
PASS q.className (<q class>): setAttribute() to -Infinity followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to -Infinity followed by IDL get 
PASS q.className (<q class>): setAttribute() to "\0" followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to "\0" followed by IDL get 
PASS q.className (<q class>): setAttribute() to null followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to null followed by IDL get 
PASS q.className (<q class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to object "test-toString" followed by IDL get 
PASS q.className (<q class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS q.className (<q class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS q.className (<q class>): IDL set to "" should not throw 
PASS q.className (<q class>): IDL set to "" followed by getAttribute() 
PASS q.className (<q class>): IDL set to "" followed by IDL get 
PASS q.className (<q class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS q.className (<q class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS q.className (<q class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS q.className (<q class>): IDL set to undefined should not throw 
PASS q.className (<q class>): IDL set to undefined followed by getAttribute() 
PASS q.className (<q class>): IDL set to undefined followed by IDL get 
PASS q.className (<q class>): IDL set to 7 should not throw 
PASS q.className (<q class>): IDL set to 7 followed by getAttribute() 
PASS q.className (<q class>): IDL set to 7 followed by IDL get 
PASS q.className (<q class>): IDL set to 1.5 should not throw 
PASS q.className (<q class>): IDL set to 1.5 followed by getAttribute() 
PASS q.className (<q class>): IDL set to 1.5 followed by IDL get 
PASS q.className (<q class>): IDL set to true should not throw 
PASS q.className (<q class>): IDL set to true followed by getAttribute() 
PASS q.className (<q class>): IDL set to true followed by IDL get 
PASS q.className (<q class>): IDL set to false should not throw 
PASS q.className (<q class>): IDL set to false followed by getAttribute() 
PASS q.className (<q class>): IDL set to false followed by IDL get 
PASS q.className (<q class>): IDL set to object "[object Object]" should not throw 
PASS q.className (<q class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS q.className (<q class>): IDL set to object "[object Object]" followed by IDL get 
PASS q.className (<q class>): IDL set to NaN should not throw 
PASS q.className (<q class>): IDL set to NaN followed by getAttribute() 
PASS q.className (<q class>): IDL set to NaN followed by IDL get 
PASS q.className (<q class>): IDL set to Infinity should not throw 
PASS q.className (<q class>): IDL set to Infinity followed by getAttribute() 
PASS q.className (<q class>): IDL set to Infinity followed by IDL get 
PASS q.className (<q class>): IDL set to -Infinity should not throw 
PASS q.className (<q class>): IDL set to -Infinity followed by getAttribute() 
PASS q.className (<q class>): IDL set to -Infinity followed by IDL get 
PASS q.className (<q class>): IDL set to "\0" should not throw 
PASS q.className (<q class>): IDL set to "\0" followed by getAttribute() 
PASS q.className (<q class>): IDL set to "\0" followed by IDL get 
PASS q.className (<q class>): IDL set to null should not throw 
PASS q.className (<q class>): IDL set to null followed by getAttribute() 
PASS q.className (<q class>): IDL set to null followed by IDL get 
PASS q.className (<q class>): IDL set to object "test-toString" should not throw 
PASS q.className (<q class>): IDL set to object "test-toString" followed by getAttribute() 
PASS q.className (<q class>): IDL set to object "test-toString" followed by IDL get 
PASS q.className (<q class>): IDL set to object "test-valueOf" should not throw 
PASS q.className (<q class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS q.className (<q class>): IDL set to object "test-valueOf" followed by IDL get 
PASS q.hidden: typeof IDL attribute 
PASS q.hidden: IDL get with DOM attribute unset 
PASS q.hidden: setAttribute() to "" followed by getAttribute() 
PASS q.hidden: setAttribute() to "" followed by IDL get 
PASS q.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS q.hidden: setAttribute() to " foo " followed by IDL get 
PASS q.hidden: setAttribute() to undefined followed by getAttribute() 
PASS q.hidden: setAttribute() to undefined followed by IDL get 
PASS q.hidden: setAttribute() to null followed by getAttribute() 
PASS q.hidden: setAttribute() to null followed by IDL get 
PASS q.hidden: setAttribute() to 7 followed by getAttribute() 
PASS q.hidden: setAttribute() to 7 followed by IDL get 
PASS q.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS q.hidden: setAttribute() to 1.5 followed by IDL get 
PASS q.hidden: setAttribute() to true followed by getAttribute() 
PASS q.hidden: setAttribute() to true followed by IDL get 
PASS q.hidden: setAttribute() to false followed by getAttribute() 
PASS q.hidden: setAttribute() to false followed by IDL get 
PASS q.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS q.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS q.hidden: setAttribute() to NaN followed by getAttribute() 
PASS q.hidden: setAttribute() to NaN followed by IDL get 
PASS q.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS q.hidden: setAttribute() to Infinity followed by IDL get 
PASS q.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS q.hidden: setAttribute() to -Infinity followed by IDL get 
PASS q.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS q.hidden: setAttribute() to "\0" followed by IDL get 
PASS q.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS q.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS q.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS q.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS q.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS q.hidden: setAttribute() to "hidden" followed by IDL get 
PASS q.hidden: IDL set to "" should not throw 
PASS q.hidden: IDL set to "" followed by hasAttribute() 
PASS q.hidden: IDL set to "" followed by IDL get 
PASS q.hidden: IDL set to " foo " should not throw 
PASS q.hidden: IDL set to " foo " followed by hasAttribute() 
PASS q.hidden: IDL set to " foo " followed by IDL get 
PASS q.hidden: IDL set to undefined should not throw 
PASS q.hidden: IDL set to undefined followed by hasAttribute() 
PASS q.hidden: IDL set to undefined followed by IDL get 
PASS q.hidden: IDL set to null should not throw 
PASS q.hidden: IDL set to null followed by hasAttribute() 
PASS q.hidden: IDL set to null followed by IDL get 
PASS q.hidden: IDL set to 7 should not throw 
PASS q.hidden: IDL set to 7 followed by hasAttribute() 
PASS q.hidden: IDL set to 7 followed by IDL get 
PASS q.hidden: IDL set to 1.5 should not throw 
PASS q.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS q.hidden: IDL set to 1.5 followed by IDL get 
PASS q.hidden: IDL set to true should not throw 
PASS q.hidden: IDL set to true followed by hasAttribute() 
PASS q.hidden: IDL set to true followed by IDL get 
PASS q.hidden: IDL set to false should not throw 
PASS q.hidden: IDL set to false followed by hasAttribute() 
PASS q.hidden: IDL set to false followed by IDL get 
PASS q.hidden: IDL set to object "[object Object]" should not throw 
PASS q.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS q.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS q.hidden: IDL set to NaN should not throw 
PASS q.hidden: IDL set to NaN followed by hasAttribute() 
PASS q.hidden: IDL set to NaN followed by IDL get 
PASS q.hidden: IDL set to Infinity should not throw 
PASS q.hidden: IDL set to Infinity followed by hasAttribute() 
PASS q.hidden: IDL set to Infinity followed by IDL get 
PASS q.hidden: IDL set to -Infinity should not throw 
PASS q.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS q.hidden: IDL set to -Infinity followed by IDL get 
PASS q.hidden: IDL set to "\0" should not throw 
PASS q.hidden: IDL set to "\0" followed by hasAttribute() 
PASS q.hidden: IDL set to "\0" followed by IDL get 
PASS q.hidden: IDL set to object "test-toString" should not throw 
PASS q.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS q.hidden: IDL set to object "test-toString" followed by IDL get 
PASS q.hidden: IDL set to object "test-valueOf" should not throw 
PASS q.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS q.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS q.accessKey: typeof IDL attribute 
PASS q.accessKey: IDL get with DOM attribute unset 
PASS q.accessKey: setAttribute() to "" followed by getAttribute() 
PASS q.accessKey: setAttribute() to "" followed by IDL get 
PASS q.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS q.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS q.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS q.accessKey: setAttribute() to undefined followed by IDL get 
PASS q.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS q.accessKey: setAttribute() to 7 followed by IDL get 
PASS q.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS q.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS q.accessKey: setAttribute() to true followed by getAttribute() 
PASS q.accessKey: setAttribute() to true followed by IDL get 
PASS q.accessKey: setAttribute() to false followed by getAttribute() 
PASS q.accessKey: setAttribute() to false followed by IDL get 
PASS q.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS q.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS q.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS q.accessKey: setAttribute() to NaN followed by IDL get 
PASS q.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS q.accessKey: setAttribute() to Infinity followed by IDL get 
PASS q.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS q.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS q.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS q.accessKey: setAttribute() to "\0" followed by IDL get 
PASS q.accessKey: setAttribute() to null followed by getAttribute() 
PASS q.accessKey: setAttribute() to null followed by IDL get 
PASS q.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS q.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS q.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS q.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS q.accessKey: IDL set to "" should not throw 
PASS q.accessKey: IDL set to "" followed by getAttribute() 
PASS q.accessKey: IDL set to "" followed by IDL get 
PASS q.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS q.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS q.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS q.accessKey: IDL set to undefined should not throw 
PASS q.accessKey: IDL set to undefined followed by getAttribute() 
PASS q.accessKey: IDL set to undefined followed by IDL get 
PASS q.accessKey: IDL set to 7 should not throw 
PASS q.accessKey: IDL set to 7 followed by getAttribute() 
PASS q.accessKey: IDL set to 7 followed by IDL get 
PASS q.accessKey: IDL set to 1.5 should not throw 
PASS q.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS q.accessKey: IDL set to 1.5 followed by IDL get 
PASS q.accessKey: IDL set to true should not throw 
PASS q.accessKey: IDL set to true followed by getAttribute() 
PASS q.accessKey: IDL set to true followed by IDL get 
PASS q.accessKey: IDL set to false should not throw 
PASS q.accessKey: IDL set to false followed by getAttribute() 
PASS q.accessKey: IDL set to false followed by IDL get 
PASS q.accessKey: IDL set to object "[object Object]" should not throw 
PASS q.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS q.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS q.accessKey: IDL set to NaN should not throw 
PASS q.accessKey: IDL set to NaN followed by getAttribute() 
PASS q.accessKey: IDL set to NaN followed by IDL get 
PASS q.accessKey: IDL set to Infinity should not throw 
PASS q.accessKey: IDL set to Infinity followed by getAttribute() 
PASS q.accessKey: IDL set to Infinity followed by IDL get 
PASS q.accessKey: IDL set to -Infinity should not throw 
PASS q.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS q.accessKey: IDL set to -Infinity followed by IDL get 
PASS q.accessKey: IDL set to "\0" should not throw 
PASS q.accessKey: IDL set to "\0" followed by getAttribute() 
PASS q.accessKey: IDL set to "\0" followed by IDL get 
PASS q.accessKey: IDL set to null should not throw 
PASS q.accessKey: IDL set to null followed by getAttribute() 
PASS q.accessKey: IDL set to null followed by IDL get 
PASS q.accessKey: IDL set to object "test-toString" should not throw 
PASS q.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS q.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS q.accessKey: IDL set to object "test-valueOf" should not throw 
PASS q.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS q.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS q.tabIndex: typeof IDL attribute 
PASS q.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS q.tabIndex: setAttribute() to -36 followed by IDL get 
PASS q.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS q.tabIndex: setAttribute() to -1 followed by IDL get 
PASS q.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS q.tabIndex: setAttribute() to 0 followed by IDL get 
PASS q.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS q.tabIndex: setAttribute() to 1 followed by IDL get 
PASS q.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL q.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS q.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL q.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS q.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS q.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS q.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS q.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS q.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS q.tabIndex: setAttribute() to "0" followed by IDL get 
PASS q.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS q.tabIndex: setAttribute() to "1" followed by IDL get 
PASS q.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS q.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS q.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS q.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS q.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS q.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS q.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS q.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS q.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS q.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS q.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS q.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS q.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS q.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS q.tabIndex: IDL set to -36 should not throw 
PASS q.tabIndex: IDL set to -36 followed by getAttribute() 
PASS q.tabIndex: IDL set to -36 followed by IDL get 
PASS q.tabIndex: IDL set to -1 should not throw 
PASS q.tabIndex: IDL set to -1 followed by getAttribute() 
PASS q.tabIndex: IDL set to -1 followed by IDL get 
PASS q.tabIndex: IDL set to 0 should not throw 
PASS q.tabIndex: IDL set to 0 followed by getAttribute() 
PASS q.tabIndex: IDL set to 0 followed by IDL get 
PASS q.tabIndex: IDL set to 1 should not throw 
PASS q.tabIndex: IDL set to 1 followed by getAttribute() 
PASS q.tabIndex: IDL set to 1 followed by IDL get 
PASS q.tabIndex: IDL set to 2147483647 should not throw 
PASS q.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL q.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS q.tabIndex: IDL set to -2147483648 should not throw 
PASS q.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL q.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS q.cite: typeof IDL attribute 
PASS q.cite: IDL get with DOM attribute unset 
PASS q.cite: setAttribute() to "" followed by getAttribute() 
PASS q.cite: setAttribute() to "" followed by IDL get 
PASS q.cite: setAttribute() to " foo " followed by getAttribute() 
PASS q.cite: setAttribute() to " foo " followed by IDL get 
PASS q.cite: setAttribute() to "http://site.example/" followed by getAttribute() 
PASS q.cite: setAttribute() to "http://site.example/" followed by IDL get 
PASS q.cite: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
PASS q.cite: setAttribute() to "//site.example/path???@#l" followed by IDL get 
PASS q.cite: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS q.cite: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS q.cite: setAttribute() to undefined followed by getAttribute() 
PASS q.cite: setAttribute() to undefined followed by IDL get 
PASS q.cite: setAttribute() to 7 followed by getAttribute() 
PASS q.cite: setAttribute() to 7 followed by IDL get 
PASS q.cite: setAttribute() to 1.5 followed by getAttribute() 
PASS q.cite: setAttribute() to 1.5 followed by IDL get 
PASS q.cite: setAttribute() to true followed by getAttribute() 
PASS q.cite: setAttribute() to true followed by IDL get 
PASS q.cite: setAttribute() to false followed by getAttribute() 
PASS q.cite: setAttribute() to false followed by IDL get 
PASS q.cite: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS q.cite: setAttribute() to object "[object Object]" followed by IDL get 
PASS q.cite: setAttribute() to NaN followed by getAttribute() 
PASS q.cite: setAttribute() to NaN followed by IDL get 
PASS q.cite: setAttribute() to Infinity followed by getAttribute() 
PASS q.cite: setAttribute() to Infinity followed by IDL get 
PASS q.cite: setAttribute() to -Infinity followed by getAttribute() 
PASS q.cite: setAttribute() to -Infinity followed by IDL get 
PASS q.cite: setAttribute() to "\0" followed by getAttribute() 
PASS q.cite: setAttribute() to "\0" followed by IDL get 
PASS q.cite: setAttribute() to null followed by getAttribute() 
PASS q.cite: setAttribute() to null followed by IDL get 
PASS q.cite: setAttribute() to object "test-toString" followed by getAttribute() 
PASS q.cite: setAttribute() to object "test-toString" followed by IDL get 
PASS q.cite: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS q.cite: setAttribute() to object "test-valueOf" followed by IDL get 
PASS q.cite: IDL set to "" should not throw 
PASS q.cite: IDL set to "" followed by getAttribute() 
PASS q.cite: IDL set to "" followed by IDL get 
PASS q.cite: IDL set to " foo " should not throw 
PASS q.cite: IDL set to " foo " followed by getAttribute() 
PASS q.cite: IDL set to " foo " followed by IDL get 
PASS q.cite: IDL set to "http://site.example/" should not throw 
PASS q.cite: IDL set to "http://site.example/" followed by getAttribute() 
PASS q.cite: IDL set to "http://site.example/" followed by IDL get 
PASS q.cite: IDL set to "//site.example/path???@#l" should not throw 
PASS q.cite: IDL set to "//site.example/path???@#l" followed by getAttribute() 
PASS q.cite: IDL set to "//site.example/path???@#l" followed by IDL get 
PASS q.cite: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
PASS q.cite: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS q.cite: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS q.cite: IDL set to undefined should not throw 
PASS q.cite: IDL set to undefined followed by getAttribute() 
PASS q.cite: IDL set to undefined followed by IDL get 
PASS q.cite: IDL set to 7 should not throw 
PASS q.cite: IDL set to 7 followed by getAttribute() 
PASS q.cite: IDL set to 7 followed by IDL get 
PASS q.cite: IDL set to 1.5 should not throw 
PASS q.cite: IDL set to 1.5 followed by getAttribute() 
PASS q.cite: IDL set to 1.5 followed by IDL get 
PASS q.cite: IDL set to true should not throw 
PASS q.cite: IDL set to true followed by getAttribute() 
PASS q.cite: IDL set to true followed by IDL get 
PASS q.cite: IDL set to false should not throw 
PASS q.cite: IDL set to false followed by getAttribute() 
PASS q.cite: IDL set to false followed by IDL get 
PASS q.cite: IDL set to object "[object Object]" should not throw 
PASS q.cite: IDL set to object "[object Object]" followed by getAttribute() 
PASS q.cite: IDL set to object "[object Object]" followed by IDL get 
PASS q.cite: IDL set to NaN should not throw 
PASS q.cite: IDL set to NaN followed by getAttribute() 
PASS q.cite: IDL set to NaN followed by IDL get 
PASS q.cite: IDL set to Infinity should not throw 
PASS q.cite: IDL set to Infinity followed by getAttribute() 
PASS q.cite: IDL set to Infinity followed by IDL get 
PASS q.cite: IDL set to -Infinity should not throw 
PASS q.cite: IDL set to -Infinity followed by getAttribute() 
PASS q.cite: IDL set to -Infinity followed by IDL get 
PASS q.cite: IDL set to "\0" should not throw 
PASS q.cite: IDL set to "\0" followed by getAttribute() 
PASS q.cite: IDL set to "\0" followed by IDL get 
PASS q.cite: IDL set to null should not throw 
PASS q.cite: IDL set to null followed by getAttribute() 
PASS q.cite: IDL set to null followed by IDL get 
PASS q.cite: IDL set to object "test-toString" should not throw 
PASS q.cite: IDL set to object "test-toString" followed by getAttribute() 
PASS q.cite: IDL set to object "test-toString" followed by IDL get 
PASS q.cite: IDL set to object "test-valueOf" should not throw 
PASS q.cite: IDL set to object "test-valueOf" followed by getAttribute() 
PASS q.cite: IDL set to object "test-valueOf" followed by IDL get 
FAIL q.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL q.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS q.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL q.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL q.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL q.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to null followed by getAttribute() 
FAIL q.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL q.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL q.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to true followed by getAttribute() 
FAIL q.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to false followed by getAttribute() 
FAIL q.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL q.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL q.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL q.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL q.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL q.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL q.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL q.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL q.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS q.itemScope: IDL set to "" should not throw 
FAIL q.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL q.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS q.itemScope: IDL set to " foo " should not throw 
PASS q.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL q.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS q.itemScope: IDL set to undefined should not throw 
FAIL q.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL q.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS q.itemScope: IDL set to null should not throw 
FAIL q.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL q.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS q.itemScope: IDL set to 7 should not throw 
PASS q.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL q.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS q.itemScope: IDL set to 1.5 should not throw 
PASS q.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL q.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS q.itemScope: IDL set to true should not throw 
PASS q.itemScope: IDL set to true followed by hasAttribute() 
PASS q.itemScope: IDL set to true followed by IDL get 
PASS q.itemScope: IDL set to false should not throw 
FAIL q.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS q.itemScope: IDL set to false followed by IDL get 
PASS q.itemScope: IDL set to object "[object Object]" should not throw 
PASS q.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL q.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS q.itemScope: IDL set to NaN should not throw 
FAIL q.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL q.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS q.itemScope: IDL set to Infinity should not throw 
PASS q.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL q.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS q.itemScope: IDL set to -Infinity should not throw 
PASS q.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL q.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS q.itemScope: IDL set to "\0" should not throw 
PASS q.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL q.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS q.itemScope: IDL set to object "test-toString" should not throw 
PASS q.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL q.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS q.itemScope: IDL set to object "test-valueOf" should not throw 
PASS q.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL q.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL q.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL q.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS q.itemId: setAttribute() to "" followed by getAttribute() 
FAIL q.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS q.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL q.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS q.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL q.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS q.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL q.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS q.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL q.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS q.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL q.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS q.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL q.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS q.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL q.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS q.itemId: setAttribute() to true followed by getAttribute() 
FAIL q.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS q.itemId: setAttribute() to false followed by getAttribute() 
FAIL q.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS q.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL q.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS q.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL q.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS q.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL q.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS q.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL q.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS q.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL q.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS q.itemId: setAttribute() to null followed by getAttribute() 
FAIL q.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS q.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL q.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS q.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL q.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS q.itemId: IDL set to "" should not throw 
FAIL q.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL q.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS q.itemId: IDL set to " foo " should not throw 
FAIL q.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL q.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS q.itemId: IDL set to "http://site.example/" should not throw 
FAIL q.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS q.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS q.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL q.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL q.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS q.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL q.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL q.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS q.itemId: IDL set to undefined should not throw 
FAIL q.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL q.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS q.itemId: IDL set to 7 should not throw 
FAIL q.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL q.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS q.itemId: IDL set to 1.5 should not throw 
FAIL q.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL q.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS q.itemId: IDL set to true should not throw 
FAIL q.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL q.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS q.itemId: IDL set to false should not throw 
FAIL q.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL q.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS q.itemId: IDL set to object "[object Object]" should not throw 
FAIL q.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL q.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS q.itemId: IDL set to NaN should not throw 
FAIL q.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL q.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS q.itemId: IDL set to Infinity should not throw 
FAIL q.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL q.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS q.itemId: IDL set to -Infinity should not throw 
FAIL q.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL q.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS q.itemId: IDL set to "\0" should not throw 
FAIL q.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL q.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS q.itemId: IDL set to null should not throw 
FAIL q.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL q.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS q.itemId: IDL set to object "test-toString" should not throw 
FAIL q.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL q.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS q.itemId: IDL set to object "test-valueOf" should not throw 
PASS q.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL q.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS dfn.title: typeof IDL attribute 
PASS dfn.title: IDL get with DOM attribute unset 
PASS dfn.title: setAttribute() to "" followed by getAttribute() 
PASS dfn.title: setAttribute() to "" followed by IDL get 
PASS dfn.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dfn.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dfn.title: setAttribute() to undefined followed by getAttribute() 
PASS dfn.title: setAttribute() to undefined followed by IDL get 
PASS dfn.title: setAttribute() to 7 followed by getAttribute() 
PASS dfn.title: setAttribute() to 7 followed by IDL get 
PASS dfn.title: setAttribute() to 1.5 followed by getAttribute() 
PASS dfn.title: setAttribute() to 1.5 followed by IDL get 
PASS dfn.title: setAttribute() to true followed by getAttribute() 
PASS dfn.title: setAttribute() to true followed by IDL get 
PASS dfn.title: setAttribute() to false followed by getAttribute() 
PASS dfn.title: setAttribute() to false followed by IDL get 
PASS dfn.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dfn.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS dfn.title: setAttribute() to NaN followed by getAttribute() 
PASS dfn.title: setAttribute() to NaN followed by IDL get 
PASS dfn.title: setAttribute() to Infinity followed by getAttribute() 
PASS dfn.title: setAttribute() to Infinity followed by IDL get 
PASS dfn.title: setAttribute() to -Infinity followed by getAttribute() 
PASS dfn.title: setAttribute() to -Infinity followed by IDL get 
PASS dfn.title: setAttribute() to "\0" followed by getAttribute() 
PASS dfn.title: setAttribute() to "\0" followed by IDL get 
PASS dfn.title: setAttribute() to null followed by getAttribute() 
PASS dfn.title: setAttribute() to null followed by IDL get 
PASS dfn.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dfn.title: setAttribute() to object "test-toString" followed by IDL get 
PASS dfn.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dfn.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dfn.title: IDL set to "" should not throw 
PASS dfn.title: IDL set to "" followed by getAttribute() 
PASS dfn.title: IDL set to "" followed by IDL get 
PASS dfn.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dfn.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dfn.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dfn.title: IDL set to undefined should not throw 
PASS dfn.title: IDL set to undefined followed by getAttribute() 
PASS dfn.title: IDL set to undefined followed by IDL get 
PASS dfn.title: IDL set to 7 should not throw 
PASS dfn.title: IDL set to 7 followed by getAttribute() 
PASS dfn.title: IDL set to 7 followed by IDL get 
PASS dfn.title: IDL set to 1.5 should not throw 
PASS dfn.title: IDL set to 1.5 followed by getAttribute() 
PASS dfn.title: IDL set to 1.5 followed by IDL get 
PASS dfn.title: IDL set to true should not throw 
PASS dfn.title: IDL set to true followed by getAttribute() 
PASS dfn.title: IDL set to true followed by IDL get 
PASS dfn.title: IDL set to false should not throw 
PASS dfn.title: IDL set to false followed by getAttribute() 
PASS dfn.title: IDL set to false followed by IDL get 
PASS dfn.title: IDL set to object "[object Object]" should not throw 
PASS dfn.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS dfn.title: IDL set to object "[object Object]" followed by IDL get 
PASS dfn.title: IDL set to NaN should not throw 
PASS dfn.title: IDL set to NaN followed by getAttribute() 
PASS dfn.title: IDL set to NaN followed by IDL get 
PASS dfn.title: IDL set to Infinity should not throw 
PASS dfn.title: IDL set to Infinity followed by getAttribute() 
PASS dfn.title: IDL set to Infinity followed by IDL get 
PASS dfn.title: IDL set to -Infinity should not throw 
PASS dfn.title: IDL set to -Infinity followed by getAttribute() 
PASS dfn.title: IDL set to -Infinity followed by IDL get 
PASS dfn.title: IDL set to "\0" should not throw 
PASS dfn.title: IDL set to "\0" followed by getAttribute() 
PASS dfn.title: IDL set to "\0" followed by IDL get 
PASS dfn.title: IDL set to null should not throw 
PASS dfn.title: IDL set to null followed by getAttribute() 
PASS dfn.title: IDL set to null followed by IDL get 
PASS dfn.title: IDL set to object "test-toString" should not throw 
PASS dfn.title: IDL set to object "test-toString" followed by getAttribute() 
PASS dfn.title: IDL set to object "test-toString" followed by IDL get 
PASS dfn.title: IDL set to object "test-valueOf" should not throw 
PASS dfn.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dfn.title: IDL set to object "test-valueOf" followed by IDL get 
PASS dfn.lang: typeof IDL attribute 
PASS dfn.lang: IDL get with DOM attribute unset 
PASS dfn.lang: setAttribute() to "" followed by getAttribute() 
PASS dfn.lang: setAttribute() to "" followed by IDL get 
PASS dfn.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dfn.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dfn.lang: setAttribute() to undefined followed by getAttribute() 
PASS dfn.lang: setAttribute() to undefined followed by IDL get 
PASS dfn.lang: setAttribute() to 7 followed by getAttribute() 
PASS dfn.lang: setAttribute() to 7 followed by IDL get 
PASS dfn.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS dfn.lang: setAttribute() to 1.5 followed by IDL get 
PASS dfn.lang: setAttribute() to true followed by getAttribute() 
PASS dfn.lang: setAttribute() to true followed by IDL get 
PASS dfn.lang: setAttribute() to false followed by getAttribute() 
PASS dfn.lang: setAttribute() to false followed by IDL get 
PASS dfn.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dfn.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS dfn.lang: setAttribute() to NaN followed by getAttribute() 
PASS dfn.lang: setAttribute() to NaN followed by IDL get 
PASS dfn.lang: setAttribute() to Infinity followed by getAttribute() 
PASS dfn.lang: setAttribute() to Infinity followed by IDL get 
PASS dfn.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS dfn.lang: setAttribute() to -Infinity followed by IDL get 
PASS dfn.lang: setAttribute() to "\0" followed by getAttribute() 
PASS dfn.lang: setAttribute() to "\0" followed by IDL get 
PASS dfn.lang: setAttribute() to null followed by getAttribute() 
PASS dfn.lang: setAttribute() to null followed by IDL get 
PASS dfn.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dfn.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS dfn.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dfn.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dfn.lang: IDL set to "" should not throw 
PASS dfn.lang: IDL set to "" followed by getAttribute() 
PASS dfn.lang: IDL set to "" followed by IDL get 
PASS dfn.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dfn.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dfn.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dfn.lang: IDL set to undefined should not throw 
PASS dfn.lang: IDL set to undefined followed by getAttribute() 
PASS dfn.lang: IDL set to undefined followed by IDL get 
PASS dfn.lang: IDL set to 7 should not throw 
PASS dfn.lang: IDL set to 7 followed by getAttribute() 
PASS dfn.lang: IDL set to 7 followed by IDL get 
PASS dfn.lang: IDL set to 1.5 should not throw 
PASS dfn.lang: IDL set to 1.5 followed by getAttribute() 
PASS dfn.lang: IDL set to 1.5 followed by IDL get 
PASS dfn.lang: IDL set to true should not throw 
PASS dfn.lang: IDL set to true followed by getAttribute() 
PASS dfn.lang: IDL set to true followed by IDL get 
PASS dfn.lang: IDL set to false should not throw 
PASS dfn.lang: IDL set to false followed by getAttribute() 
PASS dfn.lang: IDL set to false followed by IDL get 
PASS dfn.lang: IDL set to object "[object Object]" should not throw 
PASS dfn.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS dfn.lang: IDL set to object "[object Object]" followed by IDL get 
PASS dfn.lang: IDL set to NaN should not throw 
PASS dfn.lang: IDL set to NaN followed by getAttribute() 
PASS dfn.lang: IDL set to NaN followed by IDL get 
PASS dfn.lang: IDL set to Infinity should not throw 
PASS dfn.lang: IDL set to Infinity followed by getAttribute() 
PASS dfn.lang: IDL set to Infinity followed by IDL get 
PASS dfn.lang: IDL set to -Infinity should not throw 
PASS dfn.lang: IDL set to -Infinity followed by getAttribute() 
PASS dfn.lang: IDL set to -Infinity followed by IDL get 
PASS dfn.lang: IDL set to "\0" should not throw 
PASS dfn.lang: IDL set to "\0" followed by getAttribute() 
PASS dfn.lang: IDL set to "\0" followed by IDL get 
PASS dfn.lang: IDL set to null should not throw 
PASS dfn.lang: IDL set to null followed by getAttribute() 
PASS dfn.lang: IDL set to null followed by IDL get 
PASS dfn.lang: IDL set to object "test-toString" should not throw 
PASS dfn.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS dfn.lang: IDL set to object "test-toString" followed by IDL get 
PASS dfn.lang: IDL set to object "test-valueOf" should not throw 
PASS dfn.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dfn.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS dfn.dir: typeof IDL attribute 
PASS dfn.dir: IDL get with DOM attribute unset 
PASS dfn.dir: setAttribute() to "" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "" followed by IDL get 
PASS dfn.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dfn.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dfn.dir: setAttribute() to undefined followed by getAttribute() 
PASS dfn.dir: setAttribute() to undefined followed by IDL get 
PASS dfn.dir: setAttribute() to 7 followed by getAttribute() 
PASS dfn.dir: setAttribute() to 7 followed by IDL get 
PASS dfn.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS dfn.dir: setAttribute() to 1.5 followed by IDL get 
PASS dfn.dir: setAttribute() to true followed by getAttribute() 
PASS dfn.dir: setAttribute() to true followed by IDL get 
PASS dfn.dir: setAttribute() to false followed by getAttribute() 
PASS dfn.dir: setAttribute() to false followed by IDL get 
PASS dfn.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dfn.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS dfn.dir: setAttribute() to NaN followed by getAttribute() 
PASS dfn.dir: setAttribute() to NaN followed by IDL get 
PASS dfn.dir: setAttribute() to Infinity followed by getAttribute() 
PASS dfn.dir: setAttribute() to Infinity followed by IDL get 
PASS dfn.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS dfn.dir: setAttribute() to -Infinity followed by IDL get 
PASS dfn.dir: setAttribute() to "\0" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "\0" followed by IDL get 
PASS dfn.dir: setAttribute() to null followed by getAttribute() 
PASS dfn.dir: setAttribute() to null followed by IDL get 
PASS dfn.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dfn.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS dfn.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dfn.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dfn.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "ltr" followed by IDL get 
PASS dfn.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "xltr" followed by IDL get 
PASS dfn.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS dfn.dir: setAttribute() to "tr" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "tr" followed by IDL get 
PASS dfn.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "LTR" followed by IDL get 
PASS dfn.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "rtl" followed by IDL get 
PASS dfn.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "xrtl" followed by IDL get 
PASS dfn.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS dfn.dir: setAttribute() to "tl" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "tl" followed by IDL get 
PASS dfn.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "RTL" followed by IDL get 
PASS dfn.dir: setAttribute() to "auto" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "auto" followed by IDL get 
PASS dfn.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "xauto" followed by IDL get 
PASS dfn.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "auto\0" followed by IDL get 
PASS dfn.dir: setAttribute() to "uto" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "uto" followed by IDL get 
PASS dfn.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS dfn.dir: setAttribute() to "AUTO" followed by IDL get 
PASS dfn.dir: IDL set to "" should not throw 
PASS dfn.dir: IDL set to "" followed by getAttribute() 
PASS dfn.dir: IDL set to "" followed by IDL get 
PASS dfn.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dfn.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dfn.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dfn.dir: IDL set to undefined should not throw 
PASS dfn.dir: IDL set to undefined followed by getAttribute() 
PASS dfn.dir: IDL set to undefined followed by IDL get 
PASS dfn.dir: IDL set to 7 should not throw 
PASS dfn.dir: IDL set to 7 followed by getAttribute() 
PASS dfn.dir: IDL set to 7 followed by IDL get 
PASS dfn.dir: IDL set to 1.5 should not throw 
PASS dfn.dir: IDL set to 1.5 followed by getAttribute() 
PASS dfn.dir: IDL set to 1.5 followed by IDL get 
PASS dfn.dir: IDL set to true should not throw 
PASS dfn.dir: IDL set to true followed by getAttribute() 
PASS dfn.dir: IDL set to true followed by IDL get 
PASS dfn.dir: IDL set to false should not throw 
PASS dfn.dir: IDL set to false followed by getAttribute() 
PASS dfn.dir: IDL set to false followed by IDL get 
PASS dfn.dir: IDL set to object "[object Object]" should not throw 
PASS dfn.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS dfn.dir: IDL set to object "[object Object]" followed by IDL get 
PASS dfn.dir: IDL set to NaN should not throw 
PASS dfn.dir: IDL set to NaN followed by getAttribute() 
PASS dfn.dir: IDL set to NaN followed by IDL get 
PASS dfn.dir: IDL set to Infinity should not throw 
PASS dfn.dir: IDL set to Infinity followed by getAttribute() 
PASS dfn.dir: IDL set to Infinity followed by IDL get 
PASS dfn.dir: IDL set to -Infinity should not throw 
PASS dfn.dir: IDL set to -Infinity followed by getAttribute() 
PASS dfn.dir: IDL set to -Infinity followed by IDL get 
PASS dfn.dir: IDL set to "\0" should not throw 
PASS dfn.dir: IDL set to "\0" followed by getAttribute() 
PASS dfn.dir: IDL set to "\0" followed by IDL get 
PASS dfn.dir: IDL set to null should not throw 
PASS dfn.dir: IDL set to null followed by IDL get 
PASS dfn.dir: IDL set to object "test-toString" should not throw 
PASS dfn.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS dfn.dir: IDL set to object "test-toString" followed by IDL get 
PASS dfn.dir: IDL set to object "test-valueOf" should not throw 
PASS dfn.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dfn.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS dfn.dir: IDL set to "ltr" should not throw 
PASS dfn.dir: IDL set to "ltr" followed by getAttribute() 
PASS dfn.dir: IDL set to "ltr" followed by IDL get 
PASS dfn.dir: IDL set to "xltr" should not throw 
PASS dfn.dir: IDL set to "xltr" followed by getAttribute() 
PASS dfn.dir: IDL set to "xltr" followed by IDL get 
PASS dfn.dir: IDL set to "ltr\0" should not throw 
PASS dfn.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS dfn.dir: IDL set to "ltr\0" followed by IDL get 
PASS dfn.dir: IDL set to "tr" should not throw 
PASS dfn.dir: IDL set to "tr" followed by getAttribute() 
PASS dfn.dir: IDL set to "tr" followed by IDL get 
PASS dfn.dir: IDL set to "LTR" should not throw 
PASS dfn.dir: IDL set to "LTR" followed by getAttribute() 
PASS dfn.dir: IDL set to "LTR" followed by IDL get 
PASS dfn.dir: IDL set to "rtl" should not throw 
PASS dfn.dir: IDL set to "rtl" followed by getAttribute() 
PASS dfn.dir: IDL set to "rtl" followed by IDL get 
PASS dfn.dir: IDL set to "xrtl" should not throw 
PASS dfn.dir: IDL set to "xrtl" followed by getAttribute() 
PASS dfn.dir: IDL set to "xrtl" followed by IDL get 
PASS dfn.dir: IDL set to "rtl\0" should not throw 
PASS dfn.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS dfn.dir: IDL set to "rtl\0" followed by IDL get 
PASS dfn.dir: IDL set to "tl" should not throw 
PASS dfn.dir: IDL set to "tl" followed by getAttribute() 
PASS dfn.dir: IDL set to "tl" followed by IDL get 
PASS dfn.dir: IDL set to "RTL" should not throw 
PASS dfn.dir: IDL set to "RTL" followed by getAttribute() 
PASS dfn.dir: IDL set to "RTL" followed by IDL get 
PASS dfn.dir: IDL set to "auto" should not throw 
PASS dfn.dir: IDL set to "auto" followed by getAttribute() 
PASS dfn.dir: IDL set to "auto" followed by IDL get 
PASS dfn.dir: IDL set to "xauto" should not throw 
PASS dfn.dir: IDL set to "xauto" followed by getAttribute() 
PASS dfn.dir: IDL set to "xauto" followed by IDL get 
PASS dfn.dir: IDL set to "auto\0" should not throw 
PASS dfn.dir: IDL set to "auto\0" followed by getAttribute() 
PASS dfn.dir: IDL set to "auto\0" followed by IDL get 
PASS dfn.dir: IDL set to "uto" should not throw 
PASS dfn.dir: IDL set to "uto" followed by getAttribute() 
PASS dfn.dir: IDL set to "uto" followed by IDL get 
PASS dfn.dir: IDL set to "AUTO" should not throw 
PASS dfn.dir: IDL set to "AUTO" followed by getAttribute() 
PASS dfn.dir: IDL set to "AUTO" followed by IDL get 
PASS dfn.className (<dfn class>): typeof IDL attribute 
PASS dfn.className (<dfn class>): IDL get with DOM attribute unset 
PASS dfn.className (<dfn class>): setAttribute() to "" followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to "" followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to undefined followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to undefined followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to 7 followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to 7 followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to 1.5 followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to 1.5 followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to true followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to true followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to false followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to false followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to NaN followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to NaN followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to Infinity followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to Infinity followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to -Infinity followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to -Infinity followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to "\0" followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to "\0" followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to null followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to null followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to object "test-toString" followed by IDL get 
PASS dfn.className (<dfn class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dfn.className (<dfn class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to "" should not throw 
PASS dfn.className (<dfn class>): IDL set to "" followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to "" followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dfn.className (<dfn class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to undefined should not throw 
PASS dfn.className (<dfn class>): IDL set to undefined followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to undefined followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to 7 should not throw 
PASS dfn.className (<dfn class>): IDL set to 7 followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to 7 followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to 1.5 should not throw 
PASS dfn.className (<dfn class>): IDL set to 1.5 followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to 1.5 followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to true should not throw 
PASS dfn.className (<dfn class>): IDL set to true followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to true followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to false should not throw 
PASS dfn.className (<dfn class>): IDL set to false followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to false followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to object "[object Object]" should not throw 
PASS dfn.className (<dfn class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to object "[object Object]" followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to NaN should not throw 
PASS dfn.className (<dfn class>): IDL set to NaN followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to NaN followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to Infinity should not throw 
PASS dfn.className (<dfn class>): IDL set to Infinity followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to Infinity followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to -Infinity should not throw 
PASS dfn.className (<dfn class>): IDL set to -Infinity followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to -Infinity followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to "\0" should not throw 
PASS dfn.className (<dfn class>): IDL set to "\0" followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to "\0" followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to null should not throw 
PASS dfn.className (<dfn class>): IDL set to null followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to null followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to object "test-toString" should not throw 
PASS dfn.className (<dfn class>): IDL set to object "test-toString" followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to object "test-toString" followed by IDL get 
PASS dfn.className (<dfn class>): IDL set to object "test-valueOf" should not throw 
PASS dfn.className (<dfn class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS dfn.className (<dfn class>): IDL set to object "test-valueOf" followed by IDL get 
PASS dfn.hidden: typeof IDL attribute 
PASS dfn.hidden: IDL get with DOM attribute unset 
PASS dfn.hidden: setAttribute() to "" followed by getAttribute() 
PASS dfn.hidden: setAttribute() to "" followed by IDL get 
PASS dfn.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS dfn.hidden: setAttribute() to " foo " followed by IDL get 
PASS dfn.hidden: setAttribute() to undefined followed by getAttribute() 
PASS dfn.hidden: setAttribute() to undefined followed by IDL get 
PASS dfn.hidden: setAttribute() to null followed by getAttribute() 
PASS dfn.hidden: setAttribute() to null followed by IDL get 
PASS dfn.hidden: setAttribute() to 7 followed by getAttribute() 
PASS dfn.hidden: setAttribute() to 7 followed by IDL get 
PASS dfn.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS dfn.hidden: setAttribute() to 1.5 followed by IDL get 
PASS dfn.hidden: setAttribute() to true followed by getAttribute() 
PASS dfn.hidden: setAttribute() to true followed by IDL get 
PASS dfn.hidden: setAttribute() to false followed by getAttribute() 
PASS dfn.hidden: setAttribute() to false followed by IDL get 
PASS dfn.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dfn.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS dfn.hidden: setAttribute() to NaN followed by getAttribute() 
PASS dfn.hidden: setAttribute() to NaN followed by IDL get 
PASS dfn.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS dfn.hidden: setAttribute() to Infinity followed by IDL get 
PASS dfn.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS dfn.hidden: setAttribute() to -Infinity followed by IDL get 
PASS dfn.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS dfn.hidden: setAttribute() to "\0" followed by IDL get 
PASS dfn.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dfn.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS dfn.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dfn.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dfn.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS dfn.hidden: setAttribute() to "hidden" followed by IDL get 
PASS dfn.hidden: IDL set to "" should not throw 
PASS dfn.hidden: IDL set to "" followed by hasAttribute() 
PASS dfn.hidden: IDL set to "" followed by IDL get 
PASS dfn.hidden: IDL set to " foo " should not throw 
PASS dfn.hidden: IDL set to " foo " followed by hasAttribute() 
PASS dfn.hidden: IDL set to " foo " followed by IDL get 
PASS dfn.hidden: IDL set to undefined should not throw 
PASS dfn.hidden: IDL set to undefined followed by hasAttribute() 
PASS dfn.hidden: IDL set to undefined followed by IDL get 
PASS dfn.hidden: IDL set to null should not throw 
PASS dfn.hidden: IDL set to null followed by hasAttribute() 
PASS dfn.hidden: IDL set to null followed by IDL get 
PASS dfn.hidden: IDL set to 7 should not throw 
PASS dfn.hidden: IDL set to 7 followed by hasAttribute() 
PASS dfn.hidden: IDL set to 7 followed by IDL get 
PASS dfn.hidden: IDL set to 1.5 should not throw 
PASS dfn.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS dfn.hidden: IDL set to 1.5 followed by IDL get 
PASS dfn.hidden: IDL set to true should not throw 
PASS dfn.hidden: IDL set to true followed by hasAttribute() 
PASS dfn.hidden: IDL set to true followed by IDL get 
PASS dfn.hidden: IDL set to false should not throw 
PASS dfn.hidden: IDL set to false followed by hasAttribute() 
PASS dfn.hidden: IDL set to false followed by IDL get 
PASS dfn.hidden: IDL set to object "[object Object]" should not throw 
PASS dfn.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS dfn.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS dfn.hidden: IDL set to NaN should not throw 
PASS dfn.hidden: IDL set to NaN followed by hasAttribute() 
PASS dfn.hidden: IDL set to NaN followed by IDL get 
PASS dfn.hidden: IDL set to Infinity should not throw 
PASS dfn.hidden: IDL set to Infinity followed by hasAttribute() 
PASS dfn.hidden: IDL set to Infinity followed by IDL get 
PASS dfn.hidden: IDL set to -Infinity should not throw 
PASS dfn.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS dfn.hidden: IDL set to -Infinity followed by IDL get 
PASS dfn.hidden: IDL set to "\0" should not throw 
PASS dfn.hidden: IDL set to "\0" followed by hasAttribute() 
PASS dfn.hidden: IDL set to "\0" followed by IDL get 
PASS dfn.hidden: IDL set to object "test-toString" should not throw 
PASS dfn.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS dfn.hidden: IDL set to object "test-toString" followed by IDL get 
PASS dfn.hidden: IDL set to object "test-valueOf" should not throw 
PASS dfn.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS dfn.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS dfn.accessKey: typeof IDL attribute 
PASS dfn.accessKey: IDL get with DOM attribute unset 
PASS dfn.accessKey: setAttribute() to "" followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to "" followed by IDL get 
PASS dfn.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dfn.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to undefined followed by IDL get 
PASS dfn.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to 7 followed by IDL get 
PASS dfn.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS dfn.accessKey: setAttribute() to true followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to true followed by IDL get 
PASS dfn.accessKey: setAttribute() to false followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to false followed by IDL get 
PASS dfn.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS dfn.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to NaN followed by IDL get 
PASS dfn.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to Infinity followed by IDL get 
PASS dfn.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS dfn.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to "\0" followed by IDL get 
PASS dfn.accessKey: setAttribute() to null followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to null followed by IDL get 
PASS dfn.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS dfn.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dfn.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dfn.accessKey: IDL set to "" should not throw 
PASS dfn.accessKey: IDL set to "" followed by getAttribute() 
PASS dfn.accessKey: IDL set to "" followed by IDL get 
PASS dfn.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dfn.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dfn.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dfn.accessKey: IDL set to undefined should not throw 
PASS dfn.accessKey: IDL set to undefined followed by getAttribute() 
PASS dfn.accessKey: IDL set to undefined followed by IDL get 
PASS dfn.accessKey: IDL set to 7 should not throw 
PASS dfn.accessKey: IDL set to 7 followed by getAttribute() 
PASS dfn.accessKey: IDL set to 7 followed by IDL get 
PASS dfn.accessKey: IDL set to 1.5 should not throw 
PASS dfn.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS dfn.accessKey: IDL set to 1.5 followed by IDL get 
PASS dfn.accessKey: IDL set to true should not throw 
PASS dfn.accessKey: IDL set to true followed by getAttribute() 
PASS dfn.accessKey: IDL set to true followed by IDL get 
PASS dfn.accessKey: IDL set to false should not throw 
PASS dfn.accessKey: IDL set to false followed by getAttribute() 
PASS dfn.accessKey: IDL set to false followed by IDL get 
PASS dfn.accessKey: IDL set to object "[object Object]" should not throw 
PASS dfn.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS dfn.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS dfn.accessKey: IDL set to NaN should not throw 
PASS dfn.accessKey: IDL set to NaN followed by getAttribute() 
PASS dfn.accessKey: IDL set to NaN followed by IDL get 
PASS dfn.accessKey: IDL set to Infinity should not throw 
PASS dfn.accessKey: IDL set to Infinity followed by getAttribute() 
PASS dfn.accessKey: IDL set to Infinity followed by IDL get 
PASS dfn.accessKey: IDL set to -Infinity should not throw 
PASS dfn.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS dfn.accessKey: IDL set to -Infinity followed by IDL get 
PASS dfn.accessKey: IDL set to "\0" should not throw 
PASS dfn.accessKey: IDL set to "\0" followed by getAttribute() 
PASS dfn.accessKey: IDL set to "\0" followed by IDL get 
PASS dfn.accessKey: IDL set to null should not throw 
PASS dfn.accessKey: IDL set to null followed by getAttribute() 
PASS dfn.accessKey: IDL set to null followed by IDL get 
PASS dfn.accessKey: IDL set to object "test-toString" should not throw 
PASS dfn.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS dfn.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS dfn.accessKey: IDL set to object "test-valueOf" should not throw 
PASS dfn.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dfn.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS dfn.tabIndex: typeof IDL attribute 
PASS dfn.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to -36 followed by IDL get 
PASS dfn.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to -1 followed by IDL get 
PASS dfn.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to 0 followed by IDL get 
PASS dfn.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to 1 followed by IDL get 
PASS dfn.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL dfn.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS dfn.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL dfn.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS dfn.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS dfn.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS dfn.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to "0" followed by IDL get 
PASS dfn.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to "1" followed by IDL get 
PASS dfn.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS dfn.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS dfn.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS dfn.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS dfn.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS dfn.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS dfn.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS dfn.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS dfn.tabIndex: IDL set to -36 should not throw 
PASS dfn.tabIndex: IDL set to -36 followed by getAttribute() 
PASS dfn.tabIndex: IDL set to -36 followed by IDL get 
PASS dfn.tabIndex: IDL set to -1 should not throw 
PASS dfn.tabIndex: IDL set to -1 followed by getAttribute() 
PASS dfn.tabIndex: IDL set to -1 followed by IDL get 
PASS dfn.tabIndex: IDL set to 0 should not throw 
PASS dfn.tabIndex: IDL set to 0 followed by getAttribute() 
PASS dfn.tabIndex: IDL set to 0 followed by IDL get 
PASS dfn.tabIndex: IDL set to 1 should not throw 
PASS dfn.tabIndex: IDL set to 1 followed by getAttribute() 
PASS dfn.tabIndex: IDL set to 1 followed by IDL get 
PASS dfn.tabIndex: IDL set to 2147483647 should not throw 
PASS dfn.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL dfn.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS dfn.tabIndex: IDL set to -2147483648 should not throw 
PASS dfn.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL dfn.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL dfn.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL dfn.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to null followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to true followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to false followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL dfn.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dfn.itemScope: IDL set to "" should not throw 
FAIL dfn.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL dfn.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS dfn.itemScope: IDL set to " foo " should not throw 
PASS dfn.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL dfn.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS dfn.itemScope: IDL set to undefined should not throw 
FAIL dfn.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL dfn.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS dfn.itemScope: IDL set to null should not throw 
FAIL dfn.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL dfn.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS dfn.itemScope: IDL set to 7 should not throw 
PASS dfn.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL dfn.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS dfn.itemScope: IDL set to 1.5 should not throw 
PASS dfn.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL dfn.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS dfn.itemScope: IDL set to true should not throw 
PASS dfn.itemScope: IDL set to true followed by hasAttribute() 
PASS dfn.itemScope: IDL set to true followed by IDL get 
PASS dfn.itemScope: IDL set to false should not throw 
FAIL dfn.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS dfn.itemScope: IDL set to false followed by IDL get 
PASS dfn.itemScope: IDL set to object "[object Object]" should not throw 
PASS dfn.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL dfn.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS dfn.itemScope: IDL set to NaN should not throw 
FAIL dfn.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL dfn.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS dfn.itemScope: IDL set to Infinity should not throw 
PASS dfn.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL dfn.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS dfn.itemScope: IDL set to -Infinity should not throw 
PASS dfn.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL dfn.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS dfn.itemScope: IDL set to "\0" should not throw 
PASS dfn.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL dfn.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS dfn.itemScope: IDL set to object "test-toString" should not throw 
PASS dfn.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL dfn.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS dfn.itemScope: IDL set to object "test-valueOf" should not throw 
PASS dfn.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL dfn.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL dfn.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL dfn.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to "" followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to true followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to false followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to null followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS dfn.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL dfn.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS dfn.itemId: IDL set to "" should not throw 
FAIL dfn.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL dfn.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS dfn.itemId: IDL set to " foo " should not throw 
FAIL dfn.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL dfn.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS dfn.itemId: IDL set to "http://site.example/" should not throw 
FAIL dfn.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS dfn.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS dfn.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL dfn.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL dfn.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS dfn.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL dfn.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL dfn.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS dfn.itemId: IDL set to undefined should not throw 
FAIL dfn.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL dfn.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS dfn.itemId: IDL set to 7 should not throw 
FAIL dfn.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL dfn.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS dfn.itemId: IDL set to 1.5 should not throw 
FAIL dfn.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL dfn.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS dfn.itemId: IDL set to true should not throw 
FAIL dfn.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL dfn.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS dfn.itemId: IDL set to false should not throw 
FAIL dfn.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL dfn.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS dfn.itemId: IDL set to object "[object Object]" should not throw 
FAIL dfn.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL dfn.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS dfn.itemId: IDL set to NaN should not throw 
FAIL dfn.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL dfn.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS dfn.itemId: IDL set to Infinity should not throw 
FAIL dfn.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL dfn.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS dfn.itemId: IDL set to -Infinity should not throw 
FAIL dfn.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL dfn.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS dfn.itemId: IDL set to "\0" should not throw 
FAIL dfn.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL dfn.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS dfn.itemId: IDL set to null should not throw 
FAIL dfn.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL dfn.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS dfn.itemId: IDL set to object "test-toString" should not throw 
FAIL dfn.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL dfn.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS dfn.itemId: IDL set to object "test-valueOf" should not throw 
PASS dfn.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL dfn.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS abbr.title: typeof IDL attribute 
PASS abbr.title: IDL get with DOM attribute unset 
PASS abbr.title: setAttribute() to "" followed by getAttribute() 
PASS abbr.title: setAttribute() to "" followed by IDL get 
PASS abbr.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS abbr.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS abbr.title: setAttribute() to undefined followed by getAttribute() 
PASS abbr.title: setAttribute() to undefined followed by IDL get 
PASS abbr.title: setAttribute() to 7 followed by getAttribute() 
PASS abbr.title: setAttribute() to 7 followed by IDL get 
PASS abbr.title: setAttribute() to 1.5 followed by getAttribute() 
PASS abbr.title: setAttribute() to 1.5 followed by IDL get 
PASS abbr.title: setAttribute() to true followed by getAttribute() 
PASS abbr.title: setAttribute() to true followed by IDL get 
PASS abbr.title: setAttribute() to false followed by getAttribute() 
PASS abbr.title: setAttribute() to false followed by IDL get 
PASS abbr.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS abbr.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS abbr.title: setAttribute() to NaN followed by getAttribute() 
PASS abbr.title: setAttribute() to NaN followed by IDL get 
PASS abbr.title: setAttribute() to Infinity followed by getAttribute() 
PASS abbr.title: setAttribute() to Infinity followed by IDL get 
PASS abbr.title: setAttribute() to -Infinity followed by getAttribute() 
PASS abbr.title: setAttribute() to -Infinity followed by IDL get 
PASS abbr.title: setAttribute() to "\0" followed by getAttribute() 
PASS abbr.title: setAttribute() to "\0" followed by IDL get 
PASS abbr.title: setAttribute() to null followed by getAttribute() 
PASS abbr.title: setAttribute() to null followed by IDL get 
PASS abbr.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS abbr.title: setAttribute() to object "test-toString" followed by IDL get 
PASS abbr.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS abbr.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS abbr.title: IDL set to "" should not throw 
PASS abbr.title: IDL set to "" followed by getAttribute() 
PASS abbr.title: IDL set to "" followed by IDL get 
PASS abbr.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS abbr.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS abbr.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS abbr.title: IDL set to undefined should not throw 
PASS abbr.title: IDL set to undefined followed by getAttribute() 
PASS abbr.title: IDL set to undefined followed by IDL get 
PASS abbr.title: IDL set to 7 should not throw 
PASS abbr.title: IDL set to 7 followed by getAttribute() 
PASS abbr.title: IDL set to 7 followed by IDL get 
PASS abbr.title: IDL set to 1.5 should not throw 
PASS abbr.title: IDL set to 1.5 followed by getAttribute() 
PASS abbr.title: IDL set to 1.5 followed by IDL get 
PASS abbr.title: IDL set to true should not throw 
PASS abbr.title: IDL set to true followed by getAttribute() 
PASS abbr.title: IDL set to true followed by IDL get 
PASS abbr.title: IDL set to false should not throw 
PASS abbr.title: IDL set to false followed by getAttribute() 
PASS abbr.title: IDL set to false followed by IDL get 
PASS abbr.title: IDL set to object "[object Object]" should not throw 
PASS abbr.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS abbr.title: IDL set to object "[object Object]" followed by IDL get 
PASS abbr.title: IDL set to NaN should not throw 
PASS abbr.title: IDL set to NaN followed by getAttribute() 
PASS abbr.title: IDL set to NaN followed by IDL get 
PASS abbr.title: IDL set to Infinity should not throw 
PASS abbr.title: IDL set to Infinity followed by getAttribute() 
PASS abbr.title: IDL set to Infinity followed by IDL get 
PASS abbr.title: IDL set to -Infinity should not throw 
PASS abbr.title: IDL set to -Infinity followed by getAttribute() 
PASS abbr.title: IDL set to -Infinity followed by IDL get 
PASS abbr.title: IDL set to "\0" should not throw 
PASS abbr.title: IDL set to "\0" followed by getAttribute() 
PASS abbr.title: IDL set to "\0" followed by IDL get 
PASS abbr.title: IDL set to null should not throw 
PASS abbr.title: IDL set to null followed by getAttribute() 
PASS abbr.title: IDL set to null followed by IDL get 
PASS abbr.title: IDL set to object "test-toString" should not throw 
PASS abbr.title: IDL set to object "test-toString" followed by getAttribute() 
PASS abbr.title: IDL set to object "test-toString" followed by IDL get 
PASS abbr.title: IDL set to object "test-valueOf" should not throw 
PASS abbr.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS abbr.title: IDL set to object "test-valueOf" followed by IDL get 
PASS abbr.lang: typeof IDL attribute 
PASS abbr.lang: IDL get with DOM attribute unset 
PASS abbr.lang: setAttribute() to "" followed by getAttribute() 
PASS abbr.lang: setAttribute() to "" followed by IDL get 
PASS abbr.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS abbr.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS abbr.lang: setAttribute() to undefined followed by getAttribute() 
PASS abbr.lang: setAttribute() to undefined followed by IDL get 
PASS abbr.lang: setAttribute() to 7 followed by getAttribute() 
PASS abbr.lang: setAttribute() to 7 followed by IDL get 
PASS abbr.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS abbr.lang: setAttribute() to 1.5 followed by IDL get 
PASS abbr.lang: setAttribute() to true followed by getAttribute() 
PASS abbr.lang: setAttribute() to true followed by IDL get 
PASS abbr.lang: setAttribute() to false followed by getAttribute() 
PASS abbr.lang: setAttribute() to false followed by IDL get 
PASS abbr.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS abbr.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS abbr.lang: setAttribute() to NaN followed by getAttribute() 
PASS abbr.lang: setAttribute() to NaN followed by IDL get 
PASS abbr.lang: setAttribute() to Infinity followed by getAttribute() 
PASS abbr.lang: setAttribute() to Infinity followed by IDL get 
PASS abbr.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS abbr.lang: setAttribute() to -Infinity followed by IDL get 
PASS abbr.lang: setAttribute() to "\0" followed by getAttribute() 
PASS abbr.lang: setAttribute() to "\0" followed by IDL get 
PASS abbr.lang: setAttribute() to null followed by getAttribute() 
PASS abbr.lang: setAttribute() to null followed by IDL get 
PASS abbr.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS abbr.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS abbr.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS abbr.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS abbr.lang: IDL set to "" should not throw 
PASS abbr.lang: IDL set to "" followed by getAttribute() 
PASS abbr.lang: IDL set to "" followed by IDL get 
PASS abbr.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS abbr.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS abbr.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS abbr.lang: IDL set to undefined should not throw 
PASS abbr.lang: IDL set to undefined followed by getAttribute() 
PASS abbr.lang: IDL set to undefined followed by IDL get 
PASS abbr.lang: IDL set to 7 should not throw 
PASS abbr.lang: IDL set to 7 followed by getAttribute() 
PASS abbr.lang: IDL set to 7 followed by IDL get 
PASS abbr.lang: IDL set to 1.5 should not throw 
PASS abbr.lang: IDL set to 1.5 followed by getAttribute() 
PASS abbr.lang: IDL set to 1.5 followed by IDL get 
PASS abbr.lang: IDL set to true should not throw 
PASS abbr.lang: IDL set to true followed by getAttribute() 
PASS abbr.lang: IDL set to true followed by IDL get 
PASS abbr.lang: IDL set to false should not throw 
PASS abbr.lang: IDL set to false followed by getAttribute() 
PASS abbr.lang: IDL set to false followed by IDL get 
PASS abbr.lang: IDL set to object "[object Object]" should not throw 
PASS abbr.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS abbr.lang: IDL set to object "[object Object]" followed by IDL get 
PASS abbr.lang: IDL set to NaN should not throw 
PASS abbr.lang: IDL set to NaN followed by getAttribute() 
PASS abbr.lang: IDL set to NaN followed by IDL get 
PASS abbr.lang: IDL set to Infinity should not throw 
PASS abbr.lang: IDL set to Infinity followed by getAttribute() 
PASS abbr.lang: IDL set to Infinity followed by IDL get 
PASS abbr.lang: IDL set to -Infinity should not throw 
PASS abbr.lang: IDL set to -Infinity followed by getAttribute() 
PASS abbr.lang: IDL set to -Infinity followed by IDL get 
PASS abbr.lang: IDL set to "\0" should not throw 
PASS abbr.lang: IDL set to "\0" followed by getAttribute() 
PASS abbr.lang: IDL set to "\0" followed by IDL get 
PASS abbr.lang: IDL set to null should not throw 
PASS abbr.lang: IDL set to null followed by getAttribute() 
PASS abbr.lang: IDL set to null followed by IDL get 
PASS abbr.lang: IDL set to object "test-toString" should not throw 
PASS abbr.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS abbr.lang: IDL set to object "test-toString" followed by IDL get 
PASS abbr.lang: IDL set to object "test-valueOf" should not throw 
PASS abbr.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS abbr.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS abbr.dir: typeof IDL attribute 
PASS abbr.dir: IDL get with DOM attribute unset 
PASS abbr.dir: setAttribute() to "" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "" followed by IDL get 
PASS abbr.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS abbr.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS abbr.dir: setAttribute() to undefined followed by getAttribute() 
PASS abbr.dir: setAttribute() to undefined followed by IDL get 
PASS abbr.dir: setAttribute() to 7 followed by getAttribute() 
PASS abbr.dir: setAttribute() to 7 followed by IDL get 
PASS abbr.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS abbr.dir: setAttribute() to 1.5 followed by IDL get 
PASS abbr.dir: setAttribute() to true followed by getAttribute() 
PASS abbr.dir: setAttribute() to true followed by IDL get 
PASS abbr.dir: setAttribute() to false followed by getAttribute() 
PASS abbr.dir: setAttribute() to false followed by IDL get 
PASS abbr.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS abbr.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS abbr.dir: setAttribute() to NaN followed by getAttribute() 
PASS abbr.dir: setAttribute() to NaN followed by IDL get 
PASS abbr.dir: setAttribute() to Infinity followed by getAttribute() 
PASS abbr.dir: setAttribute() to Infinity followed by IDL get 
PASS abbr.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS abbr.dir: setAttribute() to -Infinity followed by IDL get 
PASS abbr.dir: setAttribute() to "\0" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "\0" followed by IDL get 
PASS abbr.dir: setAttribute() to null followed by getAttribute() 
PASS abbr.dir: setAttribute() to null followed by IDL get 
PASS abbr.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS abbr.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS abbr.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS abbr.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS abbr.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "ltr" followed by IDL get 
PASS abbr.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "xltr" followed by IDL get 
PASS abbr.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS abbr.dir: setAttribute() to "tr" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "tr" followed by IDL get 
PASS abbr.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "LTR" followed by IDL get 
PASS abbr.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "rtl" followed by IDL get 
PASS abbr.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "xrtl" followed by IDL get 
PASS abbr.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS abbr.dir: setAttribute() to "tl" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "tl" followed by IDL get 
PASS abbr.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "RTL" followed by IDL get 
PASS abbr.dir: setAttribute() to "auto" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "auto" followed by IDL get 
PASS abbr.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "xauto" followed by IDL get 
PASS abbr.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "auto\0" followed by IDL get 
PASS abbr.dir: setAttribute() to "uto" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "uto" followed by IDL get 
PASS abbr.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS abbr.dir: setAttribute() to "AUTO" followed by IDL get 
PASS abbr.dir: IDL set to "" should not throw 
PASS abbr.dir: IDL set to "" followed by getAttribute() 
PASS abbr.dir: IDL set to "" followed by IDL get 
PASS abbr.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS abbr.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS abbr.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS abbr.dir: IDL set to undefined should not throw 
PASS abbr.dir: IDL set to undefined followed by getAttribute() 
PASS abbr.dir: IDL set to undefined followed by IDL get 
PASS abbr.dir: IDL set to 7 should not throw 
PASS abbr.dir: IDL set to 7 followed by getAttribute() 
PASS abbr.dir: IDL set to 7 followed by IDL get 
PASS abbr.dir: IDL set to 1.5 should not throw 
PASS abbr.dir: IDL set to 1.5 followed by getAttribute() 
PASS abbr.dir: IDL set to 1.5 followed by IDL get 
PASS abbr.dir: IDL set to true should not throw 
PASS abbr.dir: IDL set to true followed by getAttribute() 
PASS abbr.dir: IDL set to true followed by IDL get 
PASS abbr.dir: IDL set to false should not throw 
PASS abbr.dir: IDL set to false followed by getAttribute() 
PASS abbr.dir: IDL set to false followed by IDL get 
PASS abbr.dir: IDL set to object "[object Object]" should not throw 
PASS abbr.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS abbr.dir: IDL set to object "[object Object]" followed by IDL get 
PASS abbr.dir: IDL set to NaN should not throw 
PASS abbr.dir: IDL set to NaN followed by getAttribute() 
PASS abbr.dir: IDL set to NaN followed by IDL get 
PASS abbr.dir: IDL set to Infinity should not throw 
PASS abbr.dir: IDL set to Infinity followed by getAttribute() 
PASS abbr.dir: IDL set to Infinity followed by IDL get 
PASS abbr.dir: IDL set to -Infinity should not throw 
PASS abbr.dir: IDL set to -Infinity followed by getAttribute() 
PASS abbr.dir: IDL set to -Infinity followed by IDL get 
PASS abbr.dir: IDL set to "\0" should not throw 
PASS abbr.dir: IDL set to "\0" followed by getAttribute() 
PASS abbr.dir: IDL set to "\0" followed by IDL get 
PASS abbr.dir: IDL set to null should not throw 
PASS abbr.dir: IDL set to null followed by IDL get 
PASS abbr.dir: IDL set to object "test-toString" should not throw 
PASS abbr.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS abbr.dir: IDL set to object "test-toString" followed by IDL get 
PASS abbr.dir: IDL set to object "test-valueOf" should not throw 
PASS abbr.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS abbr.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS abbr.dir: IDL set to "ltr" should not throw 
PASS abbr.dir: IDL set to "ltr" followed by getAttribute() 
PASS abbr.dir: IDL set to "ltr" followed by IDL get 
PASS abbr.dir: IDL set to "xltr" should not throw 
PASS abbr.dir: IDL set to "xltr" followed by getAttribute() 
PASS abbr.dir: IDL set to "xltr" followed by IDL get 
PASS abbr.dir: IDL set to "ltr\0" should not throw 
PASS abbr.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS abbr.dir: IDL set to "ltr\0" followed by IDL get 
PASS abbr.dir: IDL set to "tr" should not throw 
PASS abbr.dir: IDL set to "tr" followed by getAttribute() 
PASS abbr.dir: IDL set to "tr" followed by IDL get 
PASS abbr.dir: IDL set to "LTR" should not throw 
PASS abbr.dir: IDL set to "LTR" followed by getAttribute() 
PASS abbr.dir: IDL set to "LTR" followed by IDL get 
PASS abbr.dir: IDL set to "rtl" should not throw 
PASS abbr.dir: IDL set to "rtl" followed by getAttribute() 
PASS abbr.dir: IDL set to "rtl" followed by IDL get 
PASS abbr.dir: IDL set to "xrtl" should not throw 
PASS abbr.dir: IDL set to "xrtl" followed by getAttribute() 
PASS abbr.dir: IDL set to "xrtl" followed by IDL get 
PASS abbr.dir: IDL set to "rtl\0" should not throw 
PASS abbr.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS abbr.dir: IDL set to "rtl\0" followed by IDL get 
PASS abbr.dir: IDL set to "tl" should not throw 
PASS abbr.dir: IDL set to "tl" followed by getAttribute() 
PASS abbr.dir: IDL set to "tl" followed by IDL get 
PASS abbr.dir: IDL set to "RTL" should not throw 
PASS abbr.dir: IDL set to "RTL" followed by getAttribute() 
PASS abbr.dir: IDL set to "RTL" followed by IDL get 
PASS abbr.dir: IDL set to "auto" should not throw 
PASS abbr.dir: IDL set to "auto" followed by getAttribute() 
PASS abbr.dir: IDL set to "auto" followed by IDL get 
PASS abbr.dir: IDL set to "xauto" should not throw 
PASS abbr.dir: IDL set to "xauto" followed by getAttribute() 
PASS abbr.dir: IDL set to "xauto" followed by IDL get 
PASS abbr.dir: IDL set to "auto\0" should not throw 
PASS abbr.dir: IDL set to "auto\0" followed by getAttribute() 
PASS abbr.dir: IDL set to "auto\0" followed by IDL get 
PASS abbr.dir: IDL set to "uto" should not throw 
PASS abbr.dir: IDL set to "uto" followed by getAttribute() 
PASS abbr.dir: IDL set to "uto" followed by IDL get 
PASS abbr.dir: IDL set to "AUTO" should not throw 
PASS abbr.dir: IDL set to "AUTO" followed by getAttribute() 
PASS abbr.dir: IDL set to "AUTO" followed by IDL get 
PASS abbr.className (<abbr class>): typeof IDL attribute 
PASS abbr.className (<abbr class>): IDL get with DOM attribute unset 
PASS abbr.className (<abbr class>): setAttribute() to "" followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to "" followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to undefined followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to undefined followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to 7 followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to 7 followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to 1.5 followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to 1.5 followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to true followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to true followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to false followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to false followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to NaN followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to NaN followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to Infinity followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to Infinity followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to -Infinity followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to -Infinity followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to "\0" followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to "\0" followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to null followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to null followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to object "test-toString" followed by IDL get 
PASS abbr.className (<abbr class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS abbr.className (<abbr class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to "" should not throw 
PASS abbr.className (<abbr class>): IDL set to "" followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to "" followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS abbr.className (<abbr class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to undefined should not throw 
PASS abbr.className (<abbr class>): IDL set to undefined followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to undefined followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to 7 should not throw 
PASS abbr.className (<abbr class>): IDL set to 7 followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to 7 followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to 1.5 should not throw 
PASS abbr.className (<abbr class>): IDL set to 1.5 followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to 1.5 followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to true should not throw 
PASS abbr.className (<abbr class>): IDL set to true followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to true followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to false should not throw 
PASS abbr.className (<abbr class>): IDL set to false followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to false followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to object "[object Object]" should not throw 
PASS abbr.className (<abbr class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to object "[object Object]" followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to NaN should not throw 
PASS abbr.className (<abbr class>): IDL set to NaN followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to NaN followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to Infinity should not throw 
PASS abbr.className (<abbr class>): IDL set to Infinity followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to Infinity followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to -Infinity should not throw 
PASS abbr.className (<abbr class>): IDL set to -Infinity followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to -Infinity followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to "\0" should not throw 
PASS abbr.className (<abbr class>): IDL set to "\0" followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to "\0" followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to null should not throw 
PASS abbr.className (<abbr class>): IDL set to null followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to null followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to object "test-toString" should not throw 
PASS abbr.className (<abbr class>): IDL set to object "test-toString" followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to object "test-toString" followed by IDL get 
PASS abbr.className (<abbr class>): IDL set to object "test-valueOf" should not throw 
PASS abbr.className (<abbr class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS abbr.className (<abbr class>): IDL set to object "test-valueOf" followed by IDL get 
PASS abbr.hidden: typeof IDL attribute 
PASS abbr.hidden: IDL get with DOM attribute unset 
PASS abbr.hidden: setAttribute() to "" followed by getAttribute() 
PASS abbr.hidden: setAttribute() to "" followed by IDL get 
PASS abbr.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS abbr.hidden: setAttribute() to " foo " followed by IDL get 
PASS abbr.hidden: setAttribute() to undefined followed by getAttribute() 
PASS abbr.hidden: setAttribute() to undefined followed by IDL get 
PASS abbr.hidden: setAttribute() to null followed by getAttribute() 
PASS abbr.hidden: setAttribute() to null followed by IDL get 
PASS abbr.hidden: setAttribute() to 7 followed by getAttribute() 
PASS abbr.hidden: setAttribute() to 7 followed by IDL get 
PASS abbr.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS abbr.hidden: setAttribute() to 1.5 followed by IDL get 
PASS abbr.hidden: setAttribute() to true followed by getAttribute() 
PASS abbr.hidden: setAttribute() to true followed by IDL get 
PASS abbr.hidden: setAttribute() to false followed by getAttribute() 
PASS abbr.hidden: setAttribute() to false followed by IDL get 
PASS abbr.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS abbr.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS abbr.hidden: setAttribute() to NaN followed by getAttribute() 
PASS abbr.hidden: setAttribute() to NaN followed by IDL get 
PASS abbr.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS abbr.hidden: setAttribute() to Infinity followed by IDL get 
PASS abbr.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS abbr.hidden: setAttribute() to -Infinity followed by IDL get 
PASS abbr.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS abbr.hidden: setAttribute() to "\0" followed by IDL get 
PASS abbr.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS abbr.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS abbr.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS abbr.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS abbr.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS abbr.hidden: setAttribute() to "hidden" followed by IDL get 
PASS abbr.hidden: IDL set to "" should not throw 
PASS abbr.hidden: IDL set to "" followed by hasAttribute() 
PASS abbr.hidden: IDL set to "" followed by IDL get 
PASS abbr.hidden: IDL set to " foo " should not throw 
PASS abbr.hidden: IDL set to " foo " followed by hasAttribute() 
PASS abbr.hidden: IDL set to " foo " followed by IDL get 
PASS abbr.hidden: IDL set to undefined should not throw 
PASS abbr.hidden: IDL set to undefined followed by hasAttribute() 
PASS abbr.hidden: IDL set to undefined followed by IDL get 
PASS abbr.hidden: IDL set to null should not throw 
PASS abbr.hidden: IDL set to null followed by hasAttribute() 
PASS abbr.hidden: IDL set to null followed by IDL get 
PASS abbr.hidden: IDL set to 7 should not throw 
PASS abbr.hidden: IDL set to 7 followed by hasAttribute() 
PASS abbr.hidden: IDL set to 7 followed by IDL get 
PASS abbr.hidden: IDL set to 1.5 should not throw 
PASS abbr.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS abbr.hidden: IDL set to 1.5 followed by IDL get 
PASS abbr.hidden: IDL set to true should not throw 
PASS abbr.hidden: IDL set to true followed by hasAttribute() 
PASS abbr.hidden: IDL set to true followed by IDL get 
PASS abbr.hidden: IDL set to false should not throw 
PASS abbr.hidden: IDL set to false followed by hasAttribute() 
PASS abbr.hidden: IDL set to false followed by IDL get 
PASS abbr.hidden: IDL set to object "[object Object]" should not throw 
PASS abbr.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS abbr.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS abbr.hidden: IDL set to NaN should not throw 
PASS abbr.hidden: IDL set to NaN followed by hasAttribute() 
PASS abbr.hidden: IDL set to NaN followed by IDL get 
PASS abbr.hidden: IDL set to Infinity should not throw 
PASS abbr.hidden: IDL set to Infinity followed by hasAttribute() 
PASS abbr.hidden: IDL set to Infinity followed by IDL get 
PASS abbr.hidden: IDL set to -Infinity should not throw 
PASS abbr.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS abbr.hidden: IDL set to -Infinity followed by IDL get 
PASS abbr.hidden: IDL set to "\0" should not throw 
PASS abbr.hidden: IDL set to "\0" followed by hasAttribute() 
PASS abbr.hidden: IDL set to "\0" followed by IDL get 
PASS abbr.hidden: IDL set to object "test-toString" should not throw 
PASS abbr.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS abbr.hidden: IDL set to object "test-toString" followed by IDL get 
PASS abbr.hidden: IDL set to object "test-valueOf" should not throw 
PASS abbr.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS abbr.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS abbr.accessKey: typeof IDL attribute 
PASS abbr.accessKey: IDL get with DOM attribute unset 
PASS abbr.accessKey: setAttribute() to "" followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to "" followed by IDL get 
PASS abbr.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS abbr.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to undefined followed by IDL get 
PASS abbr.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to 7 followed by IDL get 
PASS abbr.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS abbr.accessKey: setAttribute() to true followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to true followed by IDL get 
PASS abbr.accessKey: setAttribute() to false followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to false followed by IDL get 
PASS abbr.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS abbr.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to NaN followed by IDL get 
PASS abbr.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to Infinity followed by IDL get 
PASS abbr.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS abbr.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to "\0" followed by IDL get 
PASS abbr.accessKey: setAttribute() to null followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to null followed by IDL get 
PASS abbr.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS abbr.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS abbr.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS abbr.accessKey: IDL set to "" should not throw 
PASS abbr.accessKey: IDL set to "" followed by getAttribute() 
PASS abbr.accessKey: IDL set to "" followed by IDL get 
PASS abbr.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS abbr.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS abbr.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS abbr.accessKey: IDL set to undefined should not throw 
PASS abbr.accessKey: IDL set to undefined followed by getAttribute() 
PASS abbr.accessKey: IDL set to undefined followed by IDL get 
PASS abbr.accessKey: IDL set to 7 should not throw 
PASS abbr.accessKey: IDL set to 7 followed by getAttribute() 
PASS abbr.accessKey: IDL set to 7 followed by IDL get 
PASS abbr.accessKey: IDL set to 1.5 should not throw 
PASS abbr.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS abbr.accessKey: IDL set to 1.5 followed by IDL get 
PASS abbr.accessKey: IDL set to true should not throw 
PASS abbr.accessKey: IDL set to true followed by getAttribute() 
PASS abbr.accessKey: IDL set to true followed by IDL get 
PASS abbr.accessKey: IDL set to false should not throw 
PASS abbr.accessKey: IDL set to false followed by getAttribute() 
PASS abbr.accessKey: IDL set to false followed by IDL get 
PASS abbr.accessKey: IDL set to object "[object Object]" should not throw 
PASS abbr.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS abbr.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS abbr.accessKey: IDL set to NaN should not throw 
PASS abbr.accessKey: IDL set to NaN followed by getAttribute() 
PASS abbr.accessKey: IDL set to NaN followed by IDL get 
PASS abbr.accessKey: IDL set to Infinity should not throw 
PASS abbr.accessKey: IDL set to Infinity followed by getAttribute() 
PASS abbr.accessKey: IDL set to Infinity followed by IDL get 
PASS abbr.accessKey: IDL set to -Infinity should not throw 
PASS abbr.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS abbr.accessKey: IDL set to -Infinity followed by IDL get 
PASS abbr.accessKey: IDL set to "\0" should not throw 
PASS abbr.accessKey: IDL set to "\0" followed by getAttribute() 
PASS abbr.accessKey: IDL set to "\0" followed by IDL get 
PASS abbr.accessKey: IDL set to null should not throw 
PASS abbr.accessKey: IDL set to null followed by getAttribute() 
PASS abbr.accessKey: IDL set to null followed by IDL get 
PASS abbr.accessKey: IDL set to object "test-toString" should not throw 
PASS abbr.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS abbr.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS abbr.accessKey: IDL set to object "test-valueOf" should not throw 
PASS abbr.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS abbr.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS abbr.tabIndex: typeof IDL attribute 
PASS abbr.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to -36 followed by IDL get 
PASS abbr.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to -1 followed by IDL get 
PASS abbr.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to 0 followed by IDL get 
PASS abbr.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to 1 followed by IDL get 
PASS abbr.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL abbr.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS abbr.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL abbr.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS abbr.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS abbr.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS abbr.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to "0" followed by IDL get 
PASS abbr.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to "1" followed by IDL get 
PASS abbr.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS abbr.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS abbr.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS abbr.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS abbr.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS abbr.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS abbr.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS abbr.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS abbr.tabIndex: IDL set to -36 should not throw 
PASS abbr.tabIndex: IDL set to -36 followed by getAttribute() 
PASS abbr.tabIndex: IDL set to -36 followed by IDL get 
PASS abbr.tabIndex: IDL set to -1 should not throw 
PASS abbr.tabIndex: IDL set to -1 followed by getAttribute() 
PASS abbr.tabIndex: IDL set to -1 followed by IDL get 
PASS abbr.tabIndex: IDL set to 0 should not throw 
PASS abbr.tabIndex: IDL set to 0 followed by getAttribute() 
PASS abbr.tabIndex: IDL set to 0 followed by IDL get 
PASS abbr.tabIndex: IDL set to 1 should not throw 
PASS abbr.tabIndex: IDL set to 1 followed by getAttribute() 
PASS abbr.tabIndex: IDL set to 1 followed by IDL get 
PASS abbr.tabIndex: IDL set to 2147483647 should not throw 
PASS abbr.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL abbr.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS abbr.tabIndex: IDL set to -2147483648 should not throw 
PASS abbr.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL abbr.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL abbr.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL abbr.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to null followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to true followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to false followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL abbr.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS abbr.itemScope: IDL set to "" should not throw 
FAIL abbr.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL abbr.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS abbr.itemScope: IDL set to " foo " should not throw 
PASS abbr.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL abbr.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS abbr.itemScope: IDL set to undefined should not throw 
FAIL abbr.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL abbr.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS abbr.itemScope: IDL set to null should not throw 
FAIL abbr.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL abbr.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS abbr.itemScope: IDL set to 7 should not throw 
PASS abbr.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL abbr.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS abbr.itemScope: IDL set to 1.5 should not throw 
PASS abbr.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL abbr.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS abbr.itemScope: IDL set to true should not throw 
PASS abbr.itemScope: IDL set to true followed by hasAttribute() 
PASS abbr.itemScope: IDL set to true followed by IDL get 
PASS abbr.itemScope: IDL set to false should not throw 
FAIL abbr.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS abbr.itemScope: IDL set to false followed by IDL get 
PASS abbr.itemScope: IDL set to object "[object Object]" should not throw 
PASS abbr.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL abbr.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS abbr.itemScope: IDL set to NaN should not throw 
FAIL abbr.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL abbr.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS abbr.itemScope: IDL set to Infinity should not throw 
PASS abbr.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL abbr.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS abbr.itemScope: IDL set to -Infinity should not throw 
PASS abbr.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL abbr.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS abbr.itemScope: IDL set to "\0" should not throw 
PASS abbr.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL abbr.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS abbr.itemScope: IDL set to object "test-toString" should not throw 
PASS abbr.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL abbr.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS abbr.itemScope: IDL set to object "test-valueOf" should not throw 
PASS abbr.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL abbr.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL abbr.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL abbr.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to "" followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to true followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to false followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to null followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS abbr.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL abbr.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS abbr.itemId: IDL set to "" should not throw 
FAIL abbr.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL abbr.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS abbr.itemId: IDL set to " foo " should not throw 
FAIL abbr.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL abbr.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS abbr.itemId: IDL set to "http://site.example/" should not throw 
FAIL abbr.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS abbr.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS abbr.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL abbr.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL abbr.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS abbr.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL abbr.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL abbr.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS abbr.itemId: IDL set to undefined should not throw 
FAIL abbr.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL abbr.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS abbr.itemId: IDL set to 7 should not throw 
FAIL abbr.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL abbr.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS abbr.itemId: IDL set to 1.5 should not throw 
FAIL abbr.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL abbr.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS abbr.itemId: IDL set to true should not throw 
FAIL abbr.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL abbr.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS abbr.itemId: IDL set to false should not throw 
FAIL abbr.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL abbr.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS abbr.itemId: IDL set to object "[object Object]" should not throw 
FAIL abbr.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL abbr.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS abbr.itemId: IDL set to NaN should not throw 
FAIL abbr.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL abbr.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS abbr.itemId: IDL set to Infinity should not throw 
FAIL abbr.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL abbr.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS abbr.itemId: IDL set to -Infinity should not throw 
FAIL abbr.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL abbr.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS abbr.itemId: IDL set to "\0" should not throw 
FAIL abbr.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL abbr.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS abbr.itemId: IDL set to null should not throw 
FAIL abbr.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL abbr.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS abbr.itemId: IDL set to object "test-toString" should not throw 
FAIL abbr.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL abbr.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS abbr.itemId: IDL set to object "test-valueOf" should not throw 
PASS abbr.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL abbr.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS data.title: typeof IDL attribute 
PASS data.title: IDL get with DOM attribute unset 
PASS data.title: setAttribute() to "" followed by getAttribute() 
PASS data.title: setAttribute() to "" followed by IDL get 
PASS data.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS data.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.title: setAttribute() to undefined followed by getAttribute() 
PASS data.title: setAttribute() to undefined followed by IDL get 
PASS data.title: setAttribute() to 7 followed by getAttribute() 
PASS data.title: setAttribute() to 7 followed by IDL get 
PASS data.title: setAttribute() to 1.5 followed by getAttribute() 
PASS data.title: setAttribute() to 1.5 followed by IDL get 
PASS data.title: setAttribute() to true followed by getAttribute() 
PASS data.title: setAttribute() to true followed by IDL get 
PASS data.title: setAttribute() to false followed by getAttribute() 
PASS data.title: setAttribute() to false followed by IDL get 
PASS data.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS data.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS data.title: setAttribute() to NaN followed by getAttribute() 
PASS data.title: setAttribute() to NaN followed by IDL get 
PASS data.title: setAttribute() to Infinity followed by getAttribute() 
PASS data.title: setAttribute() to Infinity followed by IDL get 
PASS data.title: setAttribute() to -Infinity followed by getAttribute() 
PASS data.title: setAttribute() to -Infinity followed by IDL get 
PASS data.title: setAttribute() to "\0" followed by getAttribute() 
PASS data.title: setAttribute() to "\0" followed by IDL get 
PASS data.title: setAttribute() to null followed by getAttribute() 
PASS data.title: setAttribute() to null followed by IDL get 
PASS data.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS data.title: setAttribute() to object "test-toString" followed by IDL get 
PASS data.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS data.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS data.title: IDL set to "" should not throw 
PASS data.title: IDL set to "" followed by getAttribute() 
PASS data.title: IDL set to "" followed by IDL get 
PASS data.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS data.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS data.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.title: IDL set to undefined should not throw 
PASS data.title: IDL set to undefined followed by getAttribute() 
PASS data.title: IDL set to undefined followed by IDL get 
PASS data.title: IDL set to 7 should not throw 
PASS data.title: IDL set to 7 followed by getAttribute() 
PASS data.title: IDL set to 7 followed by IDL get 
PASS data.title: IDL set to 1.5 should not throw 
PASS data.title: IDL set to 1.5 followed by getAttribute() 
PASS data.title: IDL set to 1.5 followed by IDL get 
PASS data.title: IDL set to true should not throw 
PASS data.title: IDL set to true followed by getAttribute() 
PASS data.title: IDL set to true followed by IDL get 
PASS data.title: IDL set to false should not throw 
PASS data.title: IDL set to false followed by getAttribute() 
PASS data.title: IDL set to false followed by IDL get 
PASS data.title: IDL set to object "[object Object]" should not throw 
PASS data.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS data.title: IDL set to object "[object Object]" followed by IDL get 
PASS data.title: IDL set to NaN should not throw 
PASS data.title: IDL set to NaN followed by getAttribute() 
PASS data.title: IDL set to NaN followed by IDL get 
PASS data.title: IDL set to Infinity should not throw 
PASS data.title: IDL set to Infinity followed by getAttribute() 
PASS data.title: IDL set to Infinity followed by IDL get 
PASS data.title: IDL set to -Infinity should not throw 
PASS data.title: IDL set to -Infinity followed by getAttribute() 
PASS data.title: IDL set to -Infinity followed by IDL get 
PASS data.title: IDL set to "\0" should not throw 
PASS data.title: IDL set to "\0" followed by getAttribute() 
PASS data.title: IDL set to "\0" followed by IDL get 
PASS data.title: IDL set to null should not throw 
PASS data.title: IDL set to null followed by getAttribute() 
PASS data.title: IDL set to null followed by IDL get 
PASS data.title: IDL set to object "test-toString" should not throw 
PASS data.title: IDL set to object "test-toString" followed by getAttribute() 
PASS data.title: IDL set to object "test-toString" followed by IDL get 
PASS data.title: IDL set to object "test-valueOf" should not throw 
PASS data.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS data.title: IDL set to object "test-valueOf" followed by IDL get 
PASS data.lang: typeof IDL attribute 
PASS data.lang: IDL get with DOM attribute unset 
PASS data.lang: setAttribute() to "" followed by getAttribute() 
PASS data.lang: setAttribute() to "" followed by IDL get 
PASS data.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS data.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.lang: setAttribute() to undefined followed by getAttribute() 
PASS data.lang: setAttribute() to undefined followed by IDL get 
PASS data.lang: setAttribute() to 7 followed by getAttribute() 
PASS data.lang: setAttribute() to 7 followed by IDL get 
PASS data.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS data.lang: setAttribute() to 1.5 followed by IDL get 
PASS data.lang: setAttribute() to true followed by getAttribute() 
PASS data.lang: setAttribute() to true followed by IDL get 
PASS data.lang: setAttribute() to false followed by getAttribute() 
PASS data.lang: setAttribute() to false followed by IDL get 
PASS data.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS data.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS data.lang: setAttribute() to NaN followed by getAttribute() 
PASS data.lang: setAttribute() to NaN followed by IDL get 
PASS data.lang: setAttribute() to Infinity followed by getAttribute() 
PASS data.lang: setAttribute() to Infinity followed by IDL get 
PASS data.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS data.lang: setAttribute() to -Infinity followed by IDL get 
PASS data.lang: setAttribute() to "\0" followed by getAttribute() 
PASS data.lang: setAttribute() to "\0" followed by IDL get 
PASS data.lang: setAttribute() to null followed by getAttribute() 
PASS data.lang: setAttribute() to null followed by IDL get 
PASS data.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS data.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS data.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS data.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS data.lang: IDL set to "" should not throw 
PASS data.lang: IDL set to "" followed by getAttribute() 
PASS data.lang: IDL set to "" followed by IDL get 
PASS data.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS data.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS data.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.lang: IDL set to undefined should not throw 
PASS data.lang: IDL set to undefined followed by getAttribute() 
PASS data.lang: IDL set to undefined followed by IDL get 
PASS data.lang: IDL set to 7 should not throw 
PASS data.lang: IDL set to 7 followed by getAttribute() 
PASS data.lang: IDL set to 7 followed by IDL get 
PASS data.lang: IDL set to 1.5 should not throw 
PASS data.lang: IDL set to 1.5 followed by getAttribute() 
PASS data.lang: IDL set to 1.5 followed by IDL get 
PASS data.lang: IDL set to true should not throw 
PASS data.lang: IDL set to true followed by getAttribute() 
PASS data.lang: IDL set to true followed by IDL get 
PASS data.lang: IDL set to false should not throw 
PASS data.lang: IDL set to false followed by getAttribute() 
PASS data.lang: IDL set to false followed by IDL get 
PASS data.lang: IDL set to object "[object Object]" should not throw 
PASS data.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS data.lang: IDL set to object "[object Object]" followed by IDL get 
PASS data.lang: IDL set to NaN should not throw 
PASS data.lang: IDL set to NaN followed by getAttribute() 
PASS data.lang: IDL set to NaN followed by IDL get 
PASS data.lang: IDL set to Infinity should not throw 
PASS data.lang: IDL set to Infinity followed by getAttribute() 
PASS data.lang: IDL set to Infinity followed by IDL get 
PASS data.lang: IDL set to -Infinity should not throw 
PASS data.lang: IDL set to -Infinity followed by getAttribute() 
PASS data.lang: IDL set to -Infinity followed by IDL get 
PASS data.lang: IDL set to "\0" should not throw 
PASS data.lang: IDL set to "\0" followed by getAttribute() 
PASS data.lang: IDL set to "\0" followed by IDL get 
PASS data.lang: IDL set to null should not throw 
PASS data.lang: IDL set to null followed by getAttribute() 
PASS data.lang: IDL set to null followed by IDL get 
PASS data.lang: IDL set to object "test-toString" should not throw 
PASS data.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS data.lang: IDL set to object "test-toString" followed by IDL get 
PASS data.lang: IDL set to object "test-valueOf" should not throw 
PASS data.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS data.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS data.dir: typeof IDL attribute 
PASS data.dir: IDL get with DOM attribute unset 
PASS data.dir: setAttribute() to "" followed by getAttribute() 
PASS data.dir: setAttribute() to "" followed by IDL get 
PASS data.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS data.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.dir: setAttribute() to undefined followed by getAttribute() 
PASS data.dir: setAttribute() to undefined followed by IDL get 
PASS data.dir: setAttribute() to 7 followed by getAttribute() 
PASS data.dir: setAttribute() to 7 followed by IDL get 
PASS data.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS data.dir: setAttribute() to 1.5 followed by IDL get 
PASS data.dir: setAttribute() to true followed by getAttribute() 
PASS data.dir: setAttribute() to true followed by IDL get 
PASS data.dir: setAttribute() to false followed by getAttribute() 
PASS data.dir: setAttribute() to false followed by IDL get 
PASS data.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS data.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS data.dir: setAttribute() to NaN followed by getAttribute() 
PASS data.dir: setAttribute() to NaN followed by IDL get 
PASS data.dir: setAttribute() to Infinity followed by getAttribute() 
PASS data.dir: setAttribute() to Infinity followed by IDL get 
PASS data.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS data.dir: setAttribute() to -Infinity followed by IDL get 
PASS data.dir: setAttribute() to "\0" followed by getAttribute() 
PASS data.dir: setAttribute() to "\0" followed by IDL get 
PASS data.dir: setAttribute() to null followed by getAttribute() 
PASS data.dir: setAttribute() to null followed by IDL get 
PASS data.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS data.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS data.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS data.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS data.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS data.dir: setAttribute() to "ltr" followed by IDL get 
PASS data.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS data.dir: setAttribute() to "xltr" followed by IDL get 
PASS data.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS data.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS data.dir: setAttribute() to "tr" followed by getAttribute() 
PASS data.dir: setAttribute() to "tr" followed by IDL get 
PASS data.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS data.dir: setAttribute() to "LTR" followed by IDL get 
PASS data.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS data.dir: setAttribute() to "rtl" followed by IDL get 
PASS data.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS data.dir: setAttribute() to "xrtl" followed by IDL get 
PASS data.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS data.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS data.dir: setAttribute() to "tl" followed by getAttribute() 
PASS data.dir: setAttribute() to "tl" followed by IDL get 
PASS data.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS data.dir: setAttribute() to "RTL" followed by IDL get 
PASS data.dir: setAttribute() to "auto" followed by getAttribute() 
PASS data.dir: setAttribute() to "auto" followed by IDL get 
PASS data.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS data.dir: setAttribute() to "xauto" followed by IDL get 
PASS data.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS data.dir: setAttribute() to "auto\0" followed by IDL get 
PASS data.dir: setAttribute() to "uto" followed by getAttribute() 
PASS data.dir: setAttribute() to "uto" followed by IDL get 
PASS data.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS data.dir: setAttribute() to "AUTO" followed by IDL get 
PASS data.dir: IDL set to "" should not throw 
PASS data.dir: IDL set to "" followed by getAttribute() 
PASS data.dir: IDL set to "" followed by IDL get 
PASS data.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS data.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS data.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.dir: IDL set to undefined should not throw 
PASS data.dir: IDL set to undefined followed by getAttribute() 
PASS data.dir: IDL set to undefined followed by IDL get 
PASS data.dir: IDL set to 7 should not throw 
PASS data.dir: IDL set to 7 followed by getAttribute() 
PASS data.dir: IDL set to 7 followed by IDL get 
PASS data.dir: IDL set to 1.5 should not throw 
PASS data.dir: IDL set to 1.5 followed by getAttribute() 
PASS data.dir: IDL set to 1.5 followed by IDL get 
PASS data.dir: IDL set to true should not throw 
PASS data.dir: IDL set to true followed by getAttribute() 
PASS data.dir: IDL set to true followed by IDL get 
PASS data.dir: IDL set to false should not throw 
PASS data.dir: IDL set to false followed by getAttribute() 
PASS data.dir: IDL set to false followed by IDL get 
PASS data.dir: IDL set to object "[object Object]" should not throw 
PASS data.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS data.dir: IDL set to object "[object Object]" followed by IDL get 
PASS data.dir: IDL set to NaN should not throw 
PASS data.dir: IDL set to NaN followed by getAttribute() 
PASS data.dir: IDL set to NaN followed by IDL get 
PASS data.dir: IDL set to Infinity should not throw 
PASS data.dir: IDL set to Infinity followed by getAttribute() 
PASS data.dir: IDL set to Infinity followed by IDL get 
PASS data.dir: IDL set to -Infinity should not throw 
PASS data.dir: IDL set to -Infinity followed by getAttribute() 
PASS data.dir: IDL set to -Infinity followed by IDL get 
PASS data.dir: IDL set to "\0" should not throw 
PASS data.dir: IDL set to "\0" followed by getAttribute() 
PASS data.dir: IDL set to "\0" followed by IDL get 
PASS data.dir: IDL set to null should not throw 
PASS data.dir: IDL set to null followed by IDL get 
PASS data.dir: IDL set to object "test-toString" should not throw 
PASS data.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS data.dir: IDL set to object "test-toString" followed by IDL get 
PASS data.dir: IDL set to object "test-valueOf" should not throw 
PASS data.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS data.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS data.dir: IDL set to "ltr" should not throw 
PASS data.dir: IDL set to "ltr" followed by getAttribute() 
PASS data.dir: IDL set to "ltr" followed by IDL get 
PASS data.dir: IDL set to "xltr" should not throw 
PASS data.dir: IDL set to "xltr" followed by getAttribute() 
PASS data.dir: IDL set to "xltr" followed by IDL get 
PASS data.dir: IDL set to "ltr\0" should not throw 
PASS data.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS data.dir: IDL set to "ltr\0" followed by IDL get 
PASS data.dir: IDL set to "tr" should not throw 
PASS data.dir: IDL set to "tr" followed by getAttribute() 
PASS data.dir: IDL set to "tr" followed by IDL get 
PASS data.dir: IDL set to "LTR" should not throw 
PASS data.dir: IDL set to "LTR" followed by getAttribute() 
PASS data.dir: IDL set to "LTR" followed by IDL get 
PASS data.dir: IDL set to "rtl" should not throw 
PASS data.dir: IDL set to "rtl" followed by getAttribute() 
PASS data.dir: IDL set to "rtl" followed by IDL get 
PASS data.dir: IDL set to "xrtl" should not throw 
PASS data.dir: IDL set to "xrtl" followed by getAttribute() 
PASS data.dir: IDL set to "xrtl" followed by IDL get 
PASS data.dir: IDL set to "rtl\0" should not throw 
PASS data.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS data.dir: IDL set to "rtl\0" followed by IDL get 
PASS data.dir: IDL set to "tl" should not throw 
PASS data.dir: IDL set to "tl" followed by getAttribute() 
PASS data.dir: IDL set to "tl" followed by IDL get 
PASS data.dir: IDL set to "RTL" should not throw 
PASS data.dir: IDL set to "RTL" followed by getAttribute() 
PASS data.dir: IDL set to "RTL" followed by IDL get 
PASS data.dir: IDL set to "auto" should not throw 
PASS data.dir: IDL set to "auto" followed by getAttribute() 
PASS data.dir: IDL set to "auto" followed by IDL get 
PASS data.dir: IDL set to "xauto" should not throw 
PASS data.dir: IDL set to "xauto" followed by getAttribute() 
PASS data.dir: IDL set to "xauto" followed by IDL get 
PASS data.dir: IDL set to "auto\0" should not throw 
PASS data.dir: IDL set to "auto\0" followed by getAttribute() 
PASS data.dir: IDL set to "auto\0" followed by IDL get 
PASS data.dir: IDL set to "uto" should not throw 
PASS data.dir: IDL set to "uto" followed by getAttribute() 
PASS data.dir: IDL set to "uto" followed by IDL get 
PASS data.dir: IDL set to "AUTO" should not throw 
PASS data.dir: IDL set to "AUTO" followed by getAttribute() 
PASS data.dir: IDL set to "AUTO" followed by IDL get 
PASS data.className (<data class>): typeof IDL attribute 
PASS data.className (<data class>): IDL get with DOM attribute unset 
PASS data.className (<data class>): setAttribute() to "" followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to "" followed by IDL get 
PASS data.className (<data class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.className (<data class>): setAttribute() to undefined followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to undefined followed by IDL get 
PASS data.className (<data class>): setAttribute() to 7 followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to 7 followed by IDL get 
PASS data.className (<data class>): setAttribute() to 1.5 followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to 1.5 followed by IDL get 
PASS data.className (<data class>): setAttribute() to true followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to true followed by IDL get 
PASS data.className (<data class>): setAttribute() to false followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to false followed by IDL get 
PASS data.className (<data class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS data.className (<data class>): setAttribute() to NaN followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to NaN followed by IDL get 
PASS data.className (<data class>): setAttribute() to Infinity followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to Infinity followed by IDL get 
PASS data.className (<data class>): setAttribute() to -Infinity followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to -Infinity followed by IDL get 
PASS data.className (<data class>): setAttribute() to "\0" followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to "\0" followed by IDL get 
PASS data.className (<data class>): setAttribute() to null followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to null followed by IDL get 
PASS data.className (<data class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to object "test-toString" followed by IDL get 
PASS data.className (<data class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS data.className (<data class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS data.className (<data class>): IDL set to "" should not throw 
PASS data.className (<data class>): IDL set to "" followed by getAttribute() 
PASS data.className (<data class>): IDL set to "" followed by IDL get 
PASS data.className (<data class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS data.className (<data class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS data.className (<data class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.className (<data class>): IDL set to undefined should not throw 
PASS data.className (<data class>): IDL set to undefined followed by getAttribute() 
PASS data.className (<data class>): IDL set to undefined followed by IDL get 
PASS data.className (<data class>): IDL set to 7 should not throw 
PASS data.className (<data class>): IDL set to 7 followed by getAttribute() 
PASS data.className (<data class>): IDL set to 7 followed by IDL get 
PASS data.className (<data class>): IDL set to 1.5 should not throw 
PASS data.className (<data class>): IDL set to 1.5 followed by getAttribute() 
PASS data.className (<data class>): IDL set to 1.5 followed by IDL get 
PASS data.className (<data class>): IDL set to true should not throw 
PASS data.className (<data class>): IDL set to true followed by getAttribute() 
PASS data.className (<data class>): IDL set to true followed by IDL get 
PASS data.className (<data class>): IDL set to false should not throw 
PASS data.className (<data class>): IDL set to false followed by getAttribute() 
PASS data.className (<data class>): IDL set to false followed by IDL get 
PASS data.className (<data class>): IDL set to object "[object Object]" should not throw 
PASS data.className (<data class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS data.className (<data class>): IDL set to object "[object Object]" followed by IDL get 
PASS data.className (<data class>): IDL set to NaN should not throw 
PASS data.className (<data class>): IDL set to NaN followed by getAttribute() 
PASS data.className (<data class>): IDL set to NaN followed by IDL get 
PASS data.className (<data class>): IDL set to Infinity should not throw 
PASS data.className (<data class>): IDL set to Infinity followed by getAttribute() 
PASS data.className (<data class>): IDL set to Infinity followed by IDL get 
PASS data.className (<data class>): IDL set to -Infinity should not throw 
PASS data.className (<data class>): IDL set to -Infinity followed by getAttribute() 
PASS data.className (<data class>): IDL set to -Infinity followed by IDL get 
PASS data.className (<data class>): IDL set to "\0" should not throw 
PASS data.className (<data class>): IDL set to "\0" followed by getAttribute() 
PASS data.className (<data class>): IDL set to "\0" followed by IDL get 
PASS data.className (<data class>): IDL set to null should not throw 
PASS data.className (<data class>): IDL set to null followed by getAttribute() 
PASS data.className (<data class>): IDL set to null followed by IDL get 
PASS data.className (<data class>): IDL set to object "test-toString" should not throw 
PASS data.className (<data class>): IDL set to object "test-toString" followed by getAttribute() 
PASS data.className (<data class>): IDL set to object "test-toString" followed by IDL get 
PASS data.className (<data class>): IDL set to object "test-valueOf" should not throw 
PASS data.className (<data class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS data.className (<data class>): IDL set to object "test-valueOf" followed by IDL get 
PASS data.hidden: typeof IDL attribute 
PASS data.hidden: IDL get with DOM attribute unset 
PASS data.hidden: setAttribute() to "" followed by getAttribute() 
PASS data.hidden: setAttribute() to "" followed by IDL get 
PASS data.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS data.hidden: setAttribute() to " foo " followed by IDL get 
PASS data.hidden: setAttribute() to undefined followed by getAttribute() 
PASS data.hidden: setAttribute() to undefined followed by IDL get 
PASS data.hidden: setAttribute() to null followed by getAttribute() 
PASS data.hidden: setAttribute() to null followed by IDL get 
PASS data.hidden: setAttribute() to 7 followed by getAttribute() 
PASS data.hidden: setAttribute() to 7 followed by IDL get 
PASS data.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS data.hidden: setAttribute() to 1.5 followed by IDL get 
PASS data.hidden: setAttribute() to true followed by getAttribute() 
PASS data.hidden: setAttribute() to true followed by IDL get 
PASS data.hidden: setAttribute() to false followed by getAttribute() 
PASS data.hidden: setAttribute() to false followed by IDL get 
PASS data.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS data.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS data.hidden: setAttribute() to NaN followed by getAttribute() 
PASS data.hidden: setAttribute() to NaN followed by IDL get 
PASS data.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS data.hidden: setAttribute() to Infinity followed by IDL get 
PASS data.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS data.hidden: setAttribute() to -Infinity followed by IDL get 
PASS data.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS data.hidden: setAttribute() to "\0" followed by IDL get 
PASS data.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS data.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS data.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS data.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS data.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS data.hidden: setAttribute() to "hidden" followed by IDL get 
PASS data.hidden: IDL set to "" should not throw 
PASS data.hidden: IDL set to "" followed by hasAttribute() 
PASS data.hidden: IDL set to "" followed by IDL get 
PASS data.hidden: IDL set to " foo " should not throw 
PASS data.hidden: IDL set to " foo " followed by hasAttribute() 
PASS data.hidden: IDL set to " foo " followed by IDL get 
PASS data.hidden: IDL set to undefined should not throw 
PASS data.hidden: IDL set to undefined followed by hasAttribute() 
PASS data.hidden: IDL set to undefined followed by IDL get 
PASS data.hidden: IDL set to null should not throw 
PASS data.hidden: IDL set to null followed by hasAttribute() 
PASS data.hidden: IDL set to null followed by IDL get 
PASS data.hidden: IDL set to 7 should not throw 
PASS data.hidden: IDL set to 7 followed by hasAttribute() 
PASS data.hidden: IDL set to 7 followed by IDL get 
PASS data.hidden: IDL set to 1.5 should not throw 
PASS data.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS data.hidden: IDL set to 1.5 followed by IDL get 
PASS data.hidden: IDL set to true should not throw 
PASS data.hidden: IDL set to true followed by hasAttribute() 
PASS data.hidden: IDL set to true followed by IDL get 
PASS data.hidden: IDL set to false should not throw 
PASS data.hidden: IDL set to false followed by hasAttribute() 
PASS data.hidden: IDL set to false followed by IDL get 
PASS data.hidden: IDL set to object "[object Object]" should not throw 
PASS data.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS data.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS data.hidden: IDL set to NaN should not throw 
PASS data.hidden: IDL set to NaN followed by hasAttribute() 
PASS data.hidden: IDL set to NaN followed by IDL get 
PASS data.hidden: IDL set to Infinity should not throw 
PASS data.hidden: IDL set to Infinity followed by hasAttribute() 
PASS data.hidden: IDL set to Infinity followed by IDL get 
PASS data.hidden: IDL set to -Infinity should not throw 
PASS data.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS data.hidden: IDL set to -Infinity followed by IDL get 
PASS data.hidden: IDL set to "\0" should not throw 
PASS data.hidden: IDL set to "\0" followed by hasAttribute() 
PASS data.hidden: IDL set to "\0" followed by IDL get 
PASS data.hidden: IDL set to object "test-toString" should not throw 
PASS data.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS data.hidden: IDL set to object "test-toString" followed by IDL get 
PASS data.hidden: IDL set to object "test-valueOf" should not throw 
PASS data.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS data.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS data.accessKey: typeof IDL attribute 
PASS data.accessKey: IDL get with DOM attribute unset 
PASS data.accessKey: setAttribute() to "" followed by getAttribute() 
PASS data.accessKey: setAttribute() to "" followed by IDL get 
PASS data.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS data.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS data.accessKey: setAttribute() to undefined followed by IDL get 
PASS data.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS data.accessKey: setAttribute() to 7 followed by IDL get 
PASS data.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS data.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS data.accessKey: setAttribute() to true followed by getAttribute() 
PASS data.accessKey: setAttribute() to true followed by IDL get 
PASS data.accessKey: setAttribute() to false followed by getAttribute() 
PASS data.accessKey: setAttribute() to false followed by IDL get 
PASS data.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS data.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS data.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS data.accessKey: setAttribute() to NaN followed by IDL get 
PASS data.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS data.accessKey: setAttribute() to Infinity followed by IDL get 
PASS data.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS data.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS data.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS data.accessKey: setAttribute() to "\0" followed by IDL get 
PASS data.accessKey: setAttribute() to null followed by getAttribute() 
PASS data.accessKey: setAttribute() to null followed by IDL get 
PASS data.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS data.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS data.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS data.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS data.accessKey: IDL set to "" should not throw 
PASS data.accessKey: IDL set to "" followed by getAttribute() 
PASS data.accessKey: IDL set to "" followed by IDL get 
PASS data.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS data.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS data.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.accessKey: IDL set to undefined should not throw 
PASS data.accessKey: IDL set to undefined followed by getAttribute() 
PASS data.accessKey: IDL set to undefined followed by IDL get 
PASS data.accessKey: IDL set to 7 should not throw 
PASS data.accessKey: IDL set to 7 followed by getAttribute() 
PASS data.accessKey: IDL set to 7 followed by IDL get 
PASS data.accessKey: IDL set to 1.5 should not throw 
PASS data.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS data.accessKey: IDL set to 1.5 followed by IDL get 
PASS data.accessKey: IDL set to true should not throw 
PASS data.accessKey: IDL set to true followed by getAttribute() 
PASS data.accessKey: IDL set to true followed by IDL get 
PASS data.accessKey: IDL set to false should not throw 
PASS data.accessKey: IDL set to false followed by getAttribute() 
PASS data.accessKey: IDL set to false followed by IDL get 
PASS data.accessKey: IDL set to object "[object Object]" should not throw 
PASS data.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS data.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS data.accessKey: IDL set to NaN should not throw 
PASS data.accessKey: IDL set to NaN followed by getAttribute() 
PASS data.accessKey: IDL set to NaN followed by IDL get 
PASS data.accessKey: IDL set to Infinity should not throw 
PASS data.accessKey: IDL set to Infinity followed by getAttribute() 
PASS data.accessKey: IDL set to Infinity followed by IDL get 
PASS data.accessKey: IDL set to -Infinity should not throw 
PASS data.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS data.accessKey: IDL set to -Infinity followed by IDL get 
PASS data.accessKey: IDL set to "\0" should not throw 
PASS data.accessKey: IDL set to "\0" followed by getAttribute() 
PASS data.accessKey: IDL set to "\0" followed by IDL get 
PASS data.accessKey: IDL set to null should not throw 
PASS data.accessKey: IDL set to null followed by getAttribute() 
PASS data.accessKey: IDL set to null followed by IDL get 
PASS data.accessKey: IDL set to object "test-toString" should not throw 
PASS data.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS data.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS data.accessKey: IDL set to object "test-valueOf" should not throw 
PASS data.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS data.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS data.tabIndex: typeof IDL attribute 
PASS data.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS data.tabIndex: setAttribute() to -36 followed by IDL get 
PASS data.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS data.tabIndex: setAttribute() to -1 followed by IDL get 
PASS data.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS data.tabIndex: setAttribute() to 0 followed by IDL get 
PASS data.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS data.tabIndex: setAttribute() to 1 followed by IDL get 
PASS data.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL data.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS data.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL data.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS data.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS data.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS data.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS data.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS data.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS data.tabIndex: setAttribute() to "0" followed by IDL get 
PASS data.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS data.tabIndex: setAttribute() to "1" followed by IDL get 
PASS data.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS data.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS data.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS data.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS data.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS data.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS data.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS data.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS data.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS data.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS data.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS data.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS data.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS data.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS data.tabIndex: IDL set to -36 should not throw 
PASS data.tabIndex: IDL set to -36 followed by getAttribute() 
PASS data.tabIndex: IDL set to -36 followed by IDL get 
PASS data.tabIndex: IDL set to -1 should not throw 
PASS data.tabIndex: IDL set to -1 followed by getAttribute() 
PASS data.tabIndex: IDL set to -1 followed by IDL get 
PASS data.tabIndex: IDL set to 0 should not throw 
PASS data.tabIndex: IDL set to 0 followed by getAttribute() 
PASS data.tabIndex: IDL set to 0 followed by IDL get 
PASS data.tabIndex: IDL set to 1 should not throw 
PASS data.tabIndex: IDL set to 1 followed by getAttribute() 
PASS data.tabIndex: IDL set to 1 followed by IDL get 
PASS data.tabIndex: IDL set to 2147483647 should not throw 
PASS data.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL data.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS data.tabIndex: IDL set to -2147483648 should not throw 
PASS data.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL data.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS data.value: typeof IDL attribute 
PASS data.value: IDL get with DOM attribute unset 
PASS data.value: setAttribute() to "" followed by getAttribute() 
PASS data.value: setAttribute() to "" followed by IDL get 
PASS data.value: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS data.value: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.value: setAttribute() to undefined followed by getAttribute() 
PASS data.value: setAttribute() to undefined followed by IDL get 
PASS data.value: setAttribute() to 7 followed by getAttribute() 
PASS data.value: setAttribute() to 7 followed by IDL get 
PASS data.value: setAttribute() to 1.5 followed by getAttribute() 
PASS data.value: setAttribute() to 1.5 followed by IDL get 
PASS data.value: setAttribute() to true followed by getAttribute() 
PASS data.value: setAttribute() to true followed by IDL get 
PASS data.value: setAttribute() to false followed by getAttribute() 
PASS data.value: setAttribute() to false followed by IDL get 
PASS data.value: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS data.value: setAttribute() to object "[object Object]" followed by IDL get 
PASS data.value: setAttribute() to NaN followed by getAttribute() 
PASS data.value: setAttribute() to NaN followed by IDL get 
PASS data.value: setAttribute() to Infinity followed by getAttribute() 
PASS data.value: setAttribute() to Infinity followed by IDL get 
PASS data.value: setAttribute() to -Infinity followed by getAttribute() 
PASS data.value: setAttribute() to -Infinity followed by IDL get 
PASS data.value: setAttribute() to "\0" followed by getAttribute() 
PASS data.value: setAttribute() to "\0" followed by IDL get 
PASS data.value: setAttribute() to null followed by getAttribute() 
PASS data.value: setAttribute() to null followed by IDL get 
PASS data.value: setAttribute() to object "test-toString" followed by getAttribute() 
PASS data.value: setAttribute() to object "test-toString" followed by IDL get 
PASS data.value: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS data.value: setAttribute() to object "test-valueOf" followed by IDL get 
PASS data.value: IDL set to "" should not throw 
PASS data.value: IDL set to "" followed by getAttribute() 
PASS data.value: IDL set to "" followed by IDL get 
PASS data.value: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS data.value: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS data.value: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.value: IDL set to undefined should not throw 
PASS data.value: IDL set to undefined followed by getAttribute() 
PASS data.value: IDL set to undefined followed by IDL get 
PASS data.value: IDL set to 7 should not throw 
PASS data.value: IDL set to 7 followed by getAttribute() 
PASS data.value: IDL set to 7 followed by IDL get 
PASS data.value: IDL set to 1.5 should not throw 
PASS data.value: IDL set to 1.5 followed by getAttribute() 
PASS data.value: IDL set to 1.5 followed by IDL get 
PASS data.value: IDL set to true should not throw 
PASS data.value: IDL set to true followed by getAttribute() 
PASS data.value: IDL set to true followed by IDL get 
PASS data.value: IDL set to false should not throw 
PASS data.value: IDL set to false followed by getAttribute() 
PASS data.value: IDL set to false followed by IDL get 
PASS data.value: IDL set to object "[object Object]" should not throw 
PASS data.value: IDL set to object "[object Object]" followed by getAttribute() 
PASS data.value: IDL set to object "[object Object]" followed by IDL get 
PASS data.value: IDL set to NaN should not throw 
PASS data.value: IDL set to NaN followed by getAttribute() 
PASS data.value: IDL set to NaN followed by IDL get 
PASS data.value: IDL set to Infinity should not throw 
PASS data.value: IDL set to Infinity followed by getAttribute() 
PASS data.value: IDL set to Infinity followed by IDL get 
PASS data.value: IDL set to -Infinity should not throw 
PASS data.value: IDL set to -Infinity followed by getAttribute() 
PASS data.value: IDL set to -Infinity followed by IDL get 
PASS data.value: IDL set to "\0" should not throw 
PASS data.value: IDL set to "\0" followed by getAttribute() 
PASS data.value: IDL set to "\0" followed by IDL get 
PASS data.value: IDL set to null should not throw 
PASS data.value: IDL set to null followed by getAttribute() 
PASS data.value: IDL set to null followed by IDL get 
PASS data.value: IDL set to object "test-toString" should not throw 
PASS data.value: IDL set to object "test-toString" followed by getAttribute() 
PASS data.value: IDL set to object "test-toString" followed by IDL get 
PASS data.value: IDL set to object "test-valueOf" should not throw 
PASS data.value: IDL set to object "test-valueOf" followed by getAttribute() 
PASS data.value: IDL set to object "test-valueOf" followed by IDL get 
FAIL data.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL data.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS data.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL data.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL data.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL data.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to null followed by getAttribute() 
FAIL data.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL data.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL data.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to true followed by getAttribute() 
FAIL data.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to false followed by getAttribute() 
FAIL data.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL data.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL data.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL data.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL data.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL data.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL data.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL data.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL data.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS data.itemScope: IDL set to "" should not throw 
FAIL data.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL data.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS data.itemScope: IDL set to " foo " should not throw 
PASS data.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL data.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS data.itemScope: IDL set to undefined should not throw 
FAIL data.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL data.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS data.itemScope: IDL set to null should not throw 
FAIL data.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL data.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS data.itemScope: IDL set to 7 should not throw 
PASS data.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL data.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS data.itemScope: IDL set to 1.5 should not throw 
PASS data.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL data.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS data.itemScope: IDL set to true should not throw 
PASS data.itemScope: IDL set to true followed by hasAttribute() 
PASS data.itemScope: IDL set to true followed by IDL get 
PASS data.itemScope: IDL set to false should not throw 
FAIL data.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS data.itemScope: IDL set to false followed by IDL get 
PASS data.itemScope: IDL set to object "[object Object]" should not throw 
PASS data.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL data.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS data.itemScope: IDL set to NaN should not throw 
FAIL data.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL data.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS data.itemScope: IDL set to Infinity should not throw 
PASS data.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL data.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS data.itemScope: IDL set to -Infinity should not throw 
PASS data.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL data.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS data.itemScope: IDL set to "\0" should not throw 
PASS data.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL data.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS data.itemScope: IDL set to object "test-toString" should not throw 
PASS data.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL data.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS data.itemScope: IDL set to object "test-valueOf" should not throw 
PASS data.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL data.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL data.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL data.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS data.itemId: setAttribute() to "" followed by getAttribute() 
FAIL data.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS data.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL data.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS data.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL data.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS data.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL data.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS data.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL data.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS data.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL data.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS data.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL data.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS data.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL data.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS data.itemId: setAttribute() to true followed by getAttribute() 
FAIL data.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS data.itemId: setAttribute() to false followed by getAttribute() 
FAIL data.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS data.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL data.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS data.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL data.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS data.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL data.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS data.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL data.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS data.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL data.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS data.itemId: setAttribute() to null followed by getAttribute() 
FAIL data.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS data.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL data.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS data.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL data.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS data.itemId: IDL set to "" should not throw 
FAIL data.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL data.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS data.itemId: IDL set to " foo " should not throw 
FAIL data.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL data.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS data.itemId: IDL set to "http://site.example/" should not throw 
FAIL data.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS data.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS data.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL data.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL data.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS data.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL data.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL data.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS data.itemId: IDL set to undefined should not throw 
FAIL data.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL data.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS data.itemId: IDL set to 7 should not throw 
FAIL data.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL data.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS data.itemId: IDL set to 1.5 should not throw 
FAIL data.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL data.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS data.itemId: IDL set to true should not throw 
FAIL data.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL data.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS data.itemId: IDL set to false should not throw 
FAIL data.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL data.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS data.itemId: IDL set to object "[object Object]" should not throw 
FAIL data.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL data.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS data.itemId: IDL set to NaN should not throw 
FAIL data.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL data.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS data.itemId: IDL set to Infinity should not throw 
FAIL data.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL data.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS data.itemId: IDL set to -Infinity should not throw 
FAIL data.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL data.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS data.itemId: IDL set to "\0" should not throw 
FAIL data.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL data.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS data.itemId: IDL set to null should not throw 
FAIL data.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL data.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS data.itemId: IDL set to object "test-toString" should not throw 
FAIL data.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL data.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS data.itemId: IDL set to object "test-valueOf" should not throw 
PASS data.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL data.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS time.title: typeof IDL attribute 
PASS time.title: IDL get with DOM attribute unset 
PASS time.title: setAttribute() to "" followed by getAttribute() 
PASS time.title: setAttribute() to "" followed by IDL get 
PASS time.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS time.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS time.title: setAttribute() to undefined followed by getAttribute() 
PASS time.title: setAttribute() to undefined followed by IDL get 
PASS time.title: setAttribute() to 7 followed by getAttribute() 
PASS time.title: setAttribute() to 7 followed by IDL get 
PASS time.title: setAttribute() to 1.5 followed by getAttribute() 
PASS time.title: setAttribute() to 1.5 followed by IDL get 
PASS time.title: setAttribute() to true followed by getAttribute() 
PASS time.title: setAttribute() to true followed by IDL get 
PASS time.title: setAttribute() to false followed by getAttribute() 
PASS time.title: setAttribute() to false followed by IDL get 
PASS time.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS time.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS time.title: setAttribute() to NaN followed by getAttribute() 
PASS time.title: setAttribute() to NaN followed by IDL get 
PASS time.title: setAttribute() to Infinity followed by getAttribute() 
PASS time.title: setAttribute() to Infinity followed by IDL get 
PASS time.title: setAttribute() to -Infinity followed by getAttribute() 
PASS time.title: setAttribute() to -Infinity followed by IDL get 
PASS time.title: setAttribute() to "\0" followed by getAttribute() 
PASS time.title: setAttribute() to "\0" followed by IDL get 
PASS time.title: setAttribute() to null followed by getAttribute() 
PASS time.title: setAttribute() to null followed by IDL get 
PASS time.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS time.title: setAttribute() to object "test-toString" followed by IDL get 
PASS time.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS time.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS time.title: IDL set to "" should not throw 
PASS time.title: IDL set to "" followed by getAttribute() 
PASS time.title: IDL set to "" followed by IDL get 
PASS time.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS time.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS time.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS time.title: IDL set to undefined should not throw 
PASS time.title: IDL set to undefined followed by getAttribute() 
PASS time.title: IDL set to undefined followed by IDL get 
PASS time.title: IDL set to 7 should not throw 
PASS time.title: IDL set to 7 followed by getAttribute() 
PASS time.title: IDL set to 7 followed by IDL get 
PASS time.title: IDL set to 1.5 should not throw 
PASS time.title: IDL set to 1.5 followed by getAttribute() 
PASS time.title: IDL set to 1.5 followed by IDL get 
PASS time.title: IDL set to true should not throw 
PASS time.title: IDL set to true followed by getAttribute() 
PASS time.title: IDL set to true followed by IDL get 
PASS time.title: IDL set to false should not throw 
PASS time.title: IDL set to false followed by getAttribute() 
PASS time.title: IDL set to false followed by IDL get 
PASS time.title: IDL set to object "[object Object]" should not throw 
PASS time.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS time.title: IDL set to object "[object Object]" followed by IDL get 
PASS time.title: IDL set to NaN should not throw 
PASS time.title: IDL set to NaN followed by getAttribute() 
PASS time.title: IDL set to NaN followed by IDL get 
PASS time.title: IDL set to Infinity should not throw 
PASS time.title: IDL set to Infinity followed by getAttribute() 
PASS time.title: IDL set to Infinity followed by IDL get 
PASS time.title: IDL set to -Infinity should not throw 
PASS time.title: IDL set to -Infinity followed by getAttribute() 
PASS time.title: IDL set to -Infinity followed by IDL get 
PASS time.title: IDL set to "\0" should not throw 
PASS time.title: IDL set to "\0" followed by getAttribute() 
PASS time.title: IDL set to "\0" followed by IDL get 
PASS time.title: IDL set to null should not throw 
PASS time.title: IDL set to null followed by getAttribute() 
PASS time.title: IDL set to null followed by IDL get 
PASS time.title: IDL set to object "test-toString" should not throw 
PASS time.title: IDL set to object "test-toString" followed by getAttribute() 
PASS time.title: IDL set to object "test-toString" followed by IDL get 
PASS time.title: IDL set to object "test-valueOf" should not throw 
PASS time.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS time.title: IDL set to object "test-valueOf" followed by IDL get 
PASS time.lang: typeof IDL attribute 
PASS time.lang: IDL get with DOM attribute unset 
PASS time.lang: setAttribute() to "" followed by getAttribute() 
PASS time.lang: setAttribute() to "" followed by IDL get 
PASS time.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS time.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS time.lang: setAttribute() to undefined followed by getAttribute() 
PASS time.lang: setAttribute() to undefined followed by IDL get 
PASS time.lang: setAttribute() to 7 followed by getAttribute() 
PASS time.lang: setAttribute() to 7 followed by IDL get 
PASS time.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS time.lang: setAttribute() to 1.5 followed by IDL get 
PASS time.lang: setAttribute() to true followed by getAttribute() 
PASS time.lang: setAttribute() to true followed by IDL get 
PASS time.lang: setAttribute() to false followed by getAttribute() 
PASS time.lang: setAttribute() to false followed by IDL get 
PASS time.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS time.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS time.lang: setAttribute() to NaN followed by getAttribute() 
PASS time.lang: setAttribute() to NaN followed by IDL get 
PASS time.lang: setAttribute() to Infinity followed by getAttribute() 
PASS time.lang: setAttribute() to Infinity followed by IDL get 
PASS time.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS time.lang: setAttribute() to -Infinity followed by IDL get 
PASS time.lang: setAttribute() to "\0" followed by getAttribute() 
PASS time.lang: setAttribute() to "\0" followed by IDL get 
PASS time.lang: setAttribute() to null followed by getAttribute() 
PASS time.lang: setAttribute() to null followed by IDL get 
PASS time.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS time.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS time.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS time.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS time.lang: IDL set to "" should not throw 
PASS time.lang: IDL set to "" followed by getAttribute() 
PASS time.lang: IDL set to "" followed by IDL get 
PASS time.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS time.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS time.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS time.lang: IDL set to undefined should not throw 
PASS time.lang: IDL set to undefined followed by getAttribute() 
PASS time.lang: IDL set to undefined followed by IDL get 
PASS time.lang: IDL set to 7 should not throw 
PASS time.lang: IDL set to 7 followed by getAttribute() 
PASS time.lang: IDL set to 7 followed by IDL get 
PASS time.lang: IDL set to 1.5 should not throw 
PASS time.lang: IDL set to 1.5 followed by getAttribute() 
PASS time.lang: IDL set to 1.5 followed by IDL get 
PASS time.lang: IDL set to true should not throw 
PASS time.lang: IDL set to true followed by getAttribute() 
PASS time.lang: IDL set to true followed by IDL get 
PASS time.lang: IDL set to false should not throw 
PASS time.lang: IDL set to false followed by getAttribute() 
PASS time.lang: IDL set to false followed by IDL get 
PASS time.lang: IDL set to object "[object Object]" should not throw 
PASS time.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS time.lang: IDL set to object "[object Object]" followed by IDL get 
PASS time.lang: IDL set to NaN should not throw 
PASS time.lang: IDL set to NaN followed by getAttribute() 
PASS time.lang: IDL set to NaN followed by IDL get 
PASS time.lang: IDL set to Infinity should not throw 
PASS time.lang: IDL set to Infinity followed by getAttribute() 
PASS time.lang: IDL set to Infinity followed by IDL get 
PASS time.lang: IDL set to -Infinity should not throw 
PASS time.lang: IDL set to -Infinity followed by getAttribute() 
PASS time.lang: IDL set to -Infinity followed by IDL get 
PASS time.lang: IDL set to "\0" should not throw 
PASS time.lang: IDL set to "\0" followed by getAttribute() 
PASS time.lang: IDL set to "\0" followed by IDL get 
PASS time.lang: IDL set to null should not throw 
PASS time.lang: IDL set to null followed by getAttribute() 
PASS time.lang: IDL set to null followed by IDL get 
PASS time.lang: IDL set to object "test-toString" should not throw 
PASS time.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS time.lang: IDL set to object "test-toString" followed by IDL get 
PASS time.lang: IDL set to object "test-valueOf" should not throw 
PASS time.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS time.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS time.dir: typeof IDL attribute 
PASS time.dir: IDL get with DOM attribute unset 
PASS time.dir: setAttribute() to "" followed by getAttribute() 
PASS time.dir: setAttribute() to "" followed by IDL get 
PASS time.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS time.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS time.dir: setAttribute() to undefined followed by getAttribute() 
PASS time.dir: setAttribute() to undefined followed by IDL get 
PASS time.dir: setAttribute() to 7 followed by getAttribute() 
PASS time.dir: setAttribute() to 7 followed by IDL get 
PASS time.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS time.dir: setAttribute() to 1.5 followed by IDL get 
PASS time.dir: setAttribute() to true followed by getAttribute() 
PASS time.dir: setAttribute() to true followed by IDL get 
PASS time.dir: setAttribute() to false followed by getAttribute() 
PASS time.dir: setAttribute() to false followed by IDL get 
PASS time.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS time.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS time.dir: setAttribute() to NaN followed by getAttribute() 
PASS time.dir: setAttribute() to NaN followed by IDL get 
PASS time.dir: setAttribute() to Infinity followed by getAttribute() 
PASS time.dir: setAttribute() to Infinity followed by IDL get 
PASS time.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS time.dir: setAttribute() to -Infinity followed by IDL get 
PASS time.dir: setAttribute() to "\0" followed by getAttribute() 
PASS time.dir: setAttribute() to "\0" followed by IDL get 
PASS time.dir: setAttribute() to null followed by getAttribute() 
PASS time.dir: setAttribute() to null followed by IDL get 
PASS time.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS time.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS time.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS time.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS time.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS time.dir: setAttribute() to "ltr" followed by IDL get 
PASS time.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS time.dir: setAttribute() to "xltr" followed by IDL get 
PASS time.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS time.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS time.dir: setAttribute() to "tr" followed by getAttribute() 
PASS time.dir: setAttribute() to "tr" followed by IDL get 
PASS time.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS time.dir: setAttribute() to "LTR" followed by IDL get 
PASS time.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS time.dir: setAttribute() to "rtl" followed by IDL get 
PASS time.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS time.dir: setAttribute() to "xrtl" followed by IDL get 
PASS time.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS time.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS time.dir: setAttribute() to "tl" followed by getAttribute() 
PASS time.dir: setAttribute() to "tl" followed by IDL get 
PASS time.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS time.dir: setAttribute() to "RTL" followed by IDL get 
PASS time.dir: setAttribute() to "auto" followed by getAttribute() 
PASS time.dir: setAttribute() to "auto" followed by IDL get 
PASS time.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS time.dir: setAttribute() to "xauto" followed by IDL get 
PASS time.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS time.dir: setAttribute() to "auto\0" followed by IDL get 
PASS time.dir: setAttribute() to "uto" followed by getAttribute() 
PASS time.dir: setAttribute() to "uto" followed by IDL get 
PASS time.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS time.dir: setAttribute() to "AUTO" followed by IDL get 
PASS time.dir: IDL set to "" should not throw 
PASS time.dir: IDL set to "" followed by getAttribute() 
PASS time.dir: IDL set to "" followed by IDL get 
PASS time.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS time.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS time.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS time.dir: IDL set to undefined should not throw 
PASS time.dir: IDL set to undefined followed by getAttribute() 
PASS time.dir: IDL set to undefined followed by IDL get 
PASS time.dir: IDL set to 7 should not throw 
PASS time.dir: IDL set to 7 followed by getAttribute() 
PASS time.dir: IDL set to 7 followed by IDL get 
PASS time.dir: IDL set to 1.5 should not throw 
PASS time.dir: IDL set to 1.5 followed by getAttribute() 
PASS time.dir: IDL set to 1.5 followed by IDL get 
PASS time.dir: IDL set to true should not throw 
PASS time.dir: IDL set to true followed by getAttribute() 
PASS time.dir: IDL set to true followed by IDL get 
PASS time.dir: IDL set to false should not throw 
PASS time.dir: IDL set to false followed by getAttribute() 
PASS time.dir: IDL set to false followed by IDL get 
PASS time.dir: IDL set to object "[object Object]" should not throw 
PASS time.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS time.dir: IDL set to object "[object Object]" followed by IDL get 
PASS time.dir: IDL set to NaN should not throw 
PASS time.dir: IDL set to NaN followed by getAttribute() 
PASS time.dir: IDL set to NaN followed by IDL get 
PASS time.dir: IDL set to Infinity should not throw 
PASS time.dir: IDL set to Infinity followed by getAttribute() 
PASS time.dir: IDL set to Infinity followed by IDL get 
PASS time.dir: IDL set to -Infinity should not throw 
PASS time.dir: IDL set to -Infinity followed by getAttribute() 
PASS time.dir: IDL set to -Infinity followed by IDL get 
PASS time.dir: IDL set to "\0" should not throw 
PASS time.dir: IDL set to "\0" followed by getAttribute() 
PASS time.dir: IDL set to "\0" followed by IDL get 
PASS time.dir: IDL set to null should not throw 
PASS time.dir: IDL set to null followed by IDL get 
PASS time.dir: IDL set to object "test-toString" should not throw 
PASS time.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS time.dir: IDL set to object "test-toString" followed by IDL get 
PASS time.dir: IDL set to object "test-valueOf" should not throw 
PASS time.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS time.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS time.dir: IDL set to "ltr" should not throw 
PASS time.dir: IDL set to "ltr" followed by getAttribute() 
PASS time.dir: IDL set to "ltr" followed by IDL get 
PASS time.dir: IDL set to "xltr" should not throw 
PASS time.dir: IDL set to "xltr" followed by getAttribute() 
PASS time.dir: IDL set to "xltr" followed by IDL get 
PASS time.dir: IDL set to "ltr\0" should not throw 
PASS time.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS time.dir: IDL set to "ltr\0" followed by IDL get 
PASS time.dir: IDL set to "tr" should not throw 
PASS time.dir: IDL set to "tr" followed by getAttribute() 
PASS time.dir: IDL set to "tr" followed by IDL get 
PASS time.dir: IDL set to "LTR" should not throw 
PASS time.dir: IDL set to "LTR" followed by getAttribute() 
PASS time.dir: IDL set to "LTR" followed by IDL get 
PASS time.dir: IDL set to "rtl" should not throw 
PASS time.dir: IDL set to "rtl" followed by getAttribute() 
PASS time.dir: IDL set to "rtl" followed by IDL get 
PASS time.dir: IDL set to "xrtl" should not throw 
PASS time.dir: IDL set to "xrtl" followed by getAttribute() 
PASS time.dir: IDL set to "xrtl" followed by IDL get 
PASS time.dir: IDL set to "rtl\0" should not throw 
PASS time.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS time.dir: IDL set to "rtl\0" followed by IDL get 
PASS time.dir: IDL set to "tl" should not throw 
PASS time.dir: IDL set to "tl" followed by getAttribute() 
PASS time.dir: IDL set to "tl" followed by IDL get 
PASS time.dir: IDL set to "RTL" should not throw 
PASS time.dir: IDL set to "RTL" followed by getAttribute() 
PASS time.dir: IDL set to "RTL" followed by IDL get 
PASS time.dir: IDL set to "auto" should not throw 
PASS time.dir: IDL set to "auto" followed by getAttribute() 
PASS time.dir: IDL set to "auto" followed by IDL get 
PASS time.dir: IDL set to "xauto" should not throw 
PASS time.dir: IDL set to "xauto" followed by getAttribute() 
PASS time.dir: IDL set to "xauto" followed by IDL get 
PASS time.dir: IDL set to "auto\0" should not throw 
PASS time.dir: IDL set to "auto\0" followed by getAttribute() 
PASS time.dir: IDL set to "auto\0" followed by IDL get 
PASS time.dir: IDL set to "uto" should not throw 
PASS time.dir: IDL set to "uto" followed by getAttribute() 
PASS time.dir: IDL set to "uto" followed by IDL get 
PASS time.dir: IDL set to "AUTO" should not throw 
PASS time.dir: IDL set to "AUTO" followed by getAttribute() 
PASS time.dir: IDL set to "AUTO" followed by IDL get 
PASS time.className (<time class>): typeof IDL attribute 
PASS time.className (<time class>): IDL get with DOM attribute unset 
PASS time.className (<time class>): setAttribute() to "" followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to "" followed by IDL get 
PASS time.className (<time class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS time.className (<time class>): setAttribute() to undefined followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to undefined followed by IDL get 
PASS time.className (<time class>): setAttribute() to 7 followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to 7 followed by IDL get 
PASS time.className (<time class>): setAttribute() to 1.5 followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to 1.5 followed by IDL get 
PASS time.className (<time class>): setAttribute() to true followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to true followed by IDL get 
PASS time.className (<time class>): setAttribute() to false followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to false followed by IDL get 
PASS time.className (<time class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS time.className (<time class>): setAttribute() to NaN followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to NaN followed by IDL get 
PASS time.className (<time class>): setAttribute() to Infinity followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to Infinity followed by IDL get 
PASS time.className (<time class>): setAttribute() to -Infinity followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to -Infinity followed by IDL get 
PASS time.className (<time class>): setAttribute() to "\0" followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to "\0" followed by IDL get 
PASS time.className (<time class>): setAttribute() to null followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to null followed by IDL get 
PASS time.className (<time class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to object "test-toString" followed by IDL get 
PASS time.className (<time class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS time.className (<time class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS time.className (<time class>): IDL set to "" should not throw 
PASS time.className (<time class>): IDL set to "" followed by getAttribute() 
PASS time.className (<time class>): IDL set to "" followed by IDL get 
PASS time.className (<time class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS time.className (<time class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS time.className (<time class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS time.className (<time class>): IDL set to undefined should not throw 
PASS time.className (<time class>): IDL set to undefined followed by getAttribute() 
PASS time.className (<time class>): IDL set to undefined followed by IDL get 
PASS time.className (<time class>): IDL set to 7 should not throw 
PASS time.className (<time class>): IDL set to 7 followed by getAttribute() 
PASS time.className (<time class>): IDL set to 7 followed by IDL get 
PASS time.className (<time class>): IDL set to 1.5 should not throw 
PASS time.className (<time class>): IDL set to 1.5 followed by getAttribute() 
PASS time.className (<time class>): IDL set to 1.5 followed by IDL get 
PASS time.className (<time class>): IDL set to true should not throw 
PASS time.className (<time class>): IDL set to true followed by getAttribute() 
PASS time.className (<time class>): IDL set to true followed by IDL get 
PASS time.className (<time class>): IDL set to false should not throw 
PASS time.className (<time class>): IDL set to false followed by getAttribute() 
PASS time.className (<time class>): IDL set to false followed by IDL get 
PASS time.className (<time class>): IDL set to object "[object Object]" should not throw 
PASS time.className (<time class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS time.className (<time class>): IDL set to object "[object Object]" followed by IDL get 
PASS time.className (<time class>): IDL set to NaN should not throw 
PASS time.className (<time class>): IDL set to NaN followed by getAttribute() 
PASS time.className (<time class>): IDL set to NaN followed by IDL get 
PASS time.className (<time class>): IDL set to Infinity should not throw 
PASS time.className (<time class>): IDL set to Infinity followed by getAttribute() 
PASS time.className (<time class>): IDL set to Infinity followed by IDL get 
PASS time.className (<time class>): IDL set to -Infinity should not throw 
PASS time.className (<time class>): IDL set to -Infinity followed by getAttribute() 
PASS time.className (<time class>): IDL set to -Infinity followed by IDL get 
PASS time.className (<time class>): IDL set to "\0" should not throw 
PASS time.className (<time class>): IDL set to "\0" followed by getAttribute() 
PASS time.className (<time class>): IDL set to "\0" followed by IDL get 
PASS time.className (<time class>): IDL set to null should not throw 
PASS time.className (<time class>): IDL set to null followed by getAttribute() 
PASS time.className (<time class>): IDL set to null followed by IDL get 
PASS time.className (<time class>): IDL set to object "test-toString" should not throw 
PASS time.className (<time class>): IDL set to object "test-toString" followed by getAttribute() 
PASS time.className (<time class>): IDL set to object "test-toString" followed by IDL get 
PASS time.className (<time class>): IDL set to object "test-valueOf" should not throw 
PASS time.className (<time class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS time.className (<time class>): IDL set to object "test-valueOf" followed by IDL get 
PASS time.hidden: typeof IDL attribute 
PASS time.hidden: IDL get with DOM attribute unset 
PASS time.hidden: setAttribute() to "" followed by getAttribute() 
PASS time.hidden: setAttribute() to "" followed by IDL get 
PASS time.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS time.hidden: setAttribute() to " foo " followed by IDL get 
PASS time.hidden: setAttribute() to undefined followed by getAttribute() 
PASS time.hidden: setAttribute() to undefined followed by IDL get 
PASS time.hidden: setAttribute() to null followed by getAttribute() 
PASS time.hidden: setAttribute() to null followed by IDL get 
PASS time.hidden: setAttribute() to 7 followed by getAttribute() 
PASS time.hidden: setAttribute() to 7 followed by IDL get 
PASS time.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS time.hidden: setAttribute() to 1.5 followed by IDL get 
PASS time.hidden: setAttribute() to true followed by getAttribute() 
PASS time.hidden: setAttribute() to true followed by IDL get 
PASS time.hidden: setAttribute() to false followed by getAttribute() 
PASS time.hidden: setAttribute() to false followed by IDL get 
PASS time.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS time.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS time.hidden: setAttribute() to NaN followed by getAttribute() 
PASS time.hidden: setAttribute() to NaN followed by IDL get 
PASS time.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS time.hidden: setAttribute() to Infinity followed by IDL get 
PASS time.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS time.hidden: setAttribute() to -Infinity followed by IDL get 
PASS time.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS time.hidden: setAttribute() to "\0" followed by IDL get 
PASS time.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS time.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS time.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS time.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS time.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS time.hidden: setAttribute() to "hidden" followed by IDL get 
PASS time.hidden: IDL set to "" should not throw 
PASS time.hidden: IDL set to "" followed by hasAttribute() 
PASS time.hidden: IDL set to "" followed by IDL get 
PASS time.hidden: IDL set to " foo " should not throw 
PASS time.hidden: IDL set to " foo " followed by hasAttribute() 
PASS time.hidden: IDL set to " foo " followed by IDL get 
PASS time.hidden: IDL set to undefined should not throw 
PASS time.hidden: IDL set to undefined followed by hasAttribute() 
PASS time.hidden: IDL set to undefined followed by IDL get 
PASS time.hidden: IDL set to null should not throw 
PASS time.hidden: IDL set to null followed by hasAttribute() 
PASS time.hidden: IDL set to null followed by IDL get 
PASS time.hidden: IDL set to 7 should not throw 
PASS time.hidden: IDL set to 7 followed by hasAttribute() 
PASS time.hidden: IDL set to 7 followed by IDL get 
PASS time.hidden: IDL set to 1.5 should not throw 
PASS time.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS time.hidden: IDL set to 1.5 followed by IDL get 
PASS time.hidden: IDL set to true should not throw 
PASS time.hidden: IDL set to true followed by hasAttribute() 
PASS time.hidden: IDL set to true followed by IDL get 
PASS time.hidden: IDL set to false should not throw 
PASS time.hidden: IDL set to false followed by hasAttribute() 
PASS time.hidden: IDL set to false followed by IDL get 
PASS time.hidden: IDL set to object "[object Object]" should not throw 
PASS time.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS time.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS time.hidden: IDL set to NaN should not throw 
PASS time.hidden: IDL set to NaN followed by hasAttribute() 
PASS time.hidden: IDL set to NaN followed by IDL get 
PASS time.hidden: IDL set to Infinity should not throw 
PASS time.hidden: IDL set to Infinity followed by hasAttribute() 
PASS time.hidden: IDL set to Infinity followed by IDL get 
PASS time.hidden: IDL set to -Infinity should not throw 
PASS time.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS time.hidden: IDL set to -Infinity followed by IDL get 
PASS time.hidden: IDL set to "\0" should not throw 
PASS time.hidden: IDL set to "\0" followed by hasAttribute() 
PASS time.hidden: IDL set to "\0" followed by IDL get 
PASS time.hidden: IDL set to object "test-toString" should not throw 
PASS time.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS time.hidden: IDL set to object "test-toString" followed by IDL get 
PASS time.hidden: IDL set to object "test-valueOf" should not throw 
PASS time.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS time.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS time.accessKey: typeof IDL attribute 
PASS time.accessKey: IDL get with DOM attribute unset 
PASS time.accessKey: setAttribute() to "" followed by getAttribute() 
PASS time.accessKey: setAttribute() to "" followed by IDL get 
PASS time.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS time.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS time.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS time.accessKey: setAttribute() to undefined followed by IDL get 
PASS time.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS time.accessKey: setAttribute() to 7 followed by IDL get 
PASS time.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS time.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS time.accessKey: setAttribute() to true followed by getAttribute() 
PASS time.accessKey: setAttribute() to true followed by IDL get 
PASS time.accessKey: setAttribute() to false followed by getAttribute() 
PASS time.accessKey: setAttribute() to false followed by IDL get 
PASS time.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS time.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS time.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS time.accessKey: setAttribute() to NaN followed by IDL get 
PASS time.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS time.accessKey: setAttribute() to Infinity followed by IDL get 
PASS time.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS time.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS time.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS time.accessKey: setAttribute() to "\0" followed by IDL get 
PASS time.accessKey: setAttribute() to null followed by getAttribute() 
PASS time.accessKey: setAttribute() to null followed by IDL get 
PASS time.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS time.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS time.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS time.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS time.accessKey: IDL set to "" should not throw 
PASS time.accessKey: IDL set to "" followed by getAttribute() 
PASS time.accessKey: IDL set to "" followed by IDL get 
PASS time.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS time.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS time.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS time.accessKey: IDL set to undefined should not throw 
PASS time.accessKey: IDL set to undefined followed by getAttribute() 
PASS time.accessKey: IDL set to undefined followed by IDL get 
PASS time.accessKey: IDL set to 7 should not throw 
PASS time.accessKey: IDL set to 7 followed by getAttribute() 
PASS time.accessKey: IDL set to 7 followed by IDL get 
PASS time.accessKey: IDL set to 1.5 should not throw 
PASS time.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS time.accessKey: IDL set to 1.5 followed by IDL get 
PASS time.accessKey: IDL set to true should not throw 
PASS time.accessKey: IDL set to true followed by getAttribute() 
PASS time.accessKey: IDL set to true followed by IDL get 
PASS time.accessKey: IDL set to false should not throw 
PASS time.accessKey: IDL set to false followed by getAttribute() 
PASS time.accessKey: IDL set to false followed by IDL get 
PASS time.accessKey: IDL set to object "[object Object]" should not throw 
PASS time.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS time.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS time.accessKey: IDL set to NaN should not throw 
PASS time.accessKey: IDL set to NaN followed by getAttribute() 
PASS time.accessKey: IDL set to NaN followed by IDL get 
PASS time.accessKey: IDL set to Infinity should not throw 
PASS time.accessKey: IDL set to Infinity followed by getAttribute() 
PASS time.accessKey: IDL set to Infinity followed by IDL get 
PASS time.accessKey: IDL set to -Infinity should not throw 
PASS time.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS time.accessKey: IDL set to -Infinity followed by IDL get 
PASS time.accessKey: IDL set to "\0" should not throw 
PASS time.accessKey: IDL set to "\0" followed by getAttribute() 
PASS time.accessKey: IDL set to "\0" followed by IDL get 
PASS time.accessKey: IDL set to null should not throw 
PASS time.accessKey: IDL set to null followed by getAttribute() 
PASS time.accessKey: IDL set to null followed by IDL get 
PASS time.accessKey: IDL set to object "test-toString" should not throw 
PASS time.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS time.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS time.accessKey: IDL set to object "test-valueOf" should not throw 
PASS time.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS time.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS time.tabIndex: typeof IDL attribute 
PASS time.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS time.tabIndex: setAttribute() to -36 followed by IDL get 
PASS time.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS time.tabIndex: setAttribute() to -1 followed by IDL get 
PASS time.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS time.tabIndex: setAttribute() to 0 followed by IDL get 
PASS time.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS time.tabIndex: setAttribute() to 1 followed by IDL get 
PASS time.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL time.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS time.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL time.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS time.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS time.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS time.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS time.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS time.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS time.tabIndex: setAttribute() to "0" followed by IDL get 
PASS time.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS time.tabIndex: setAttribute() to "1" followed by IDL get 
PASS time.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS time.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS time.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS time.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS time.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS time.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS time.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS time.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS time.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS time.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS time.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS time.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS time.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS time.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS time.tabIndex: IDL set to -36 should not throw 
PASS time.tabIndex: IDL set to -36 followed by getAttribute() 
PASS time.tabIndex: IDL set to -36 followed by IDL get 
PASS time.tabIndex: IDL set to -1 should not throw 
PASS time.tabIndex: IDL set to -1 followed by getAttribute() 
PASS time.tabIndex: IDL set to -1 followed by IDL get 
PASS time.tabIndex: IDL set to 0 should not throw 
PASS time.tabIndex: IDL set to 0 followed by getAttribute() 
PASS time.tabIndex: IDL set to 0 followed by IDL get 
PASS time.tabIndex: IDL set to 1 should not throw 
PASS time.tabIndex: IDL set to 1 followed by getAttribute() 
PASS time.tabIndex: IDL set to 1 followed by IDL get 
PASS time.tabIndex: IDL set to 2147483647 should not throw 
PASS time.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL time.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS time.tabIndex: IDL set to -2147483648 should not throw 
PASS time.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL time.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS time.dateTime: typeof IDL attribute 
PASS time.dateTime: IDL get with DOM attribute unset 
PASS time.dateTime: setAttribute() to "" followed by getAttribute() 
PASS time.dateTime: setAttribute() to "" followed by IDL get 
PASS time.dateTime: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS time.dateTime: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS time.dateTime: setAttribute() to undefined followed by getAttribute() 
PASS time.dateTime: setAttribute() to undefined followed by IDL get 
PASS time.dateTime: setAttribute() to 7 followed by getAttribute() 
PASS time.dateTime: setAttribute() to 7 followed by IDL get 
PASS time.dateTime: setAttribute() to 1.5 followed by getAttribute() 
PASS time.dateTime: setAttribute() to 1.5 followed by IDL get 
PASS time.dateTime: setAttribute() to true followed by getAttribute() 
PASS time.dateTime: setAttribute() to true followed by IDL get 
PASS time.dateTime: setAttribute() to false followed by getAttribute() 
PASS time.dateTime: setAttribute() to false followed by IDL get 
PASS time.dateTime: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS time.dateTime: setAttribute() to object "[object Object]" followed by IDL get 
PASS time.dateTime: setAttribute() to NaN followed by getAttribute() 
PASS time.dateTime: setAttribute() to NaN followed by IDL get 
PASS time.dateTime: setAttribute() to Infinity followed by getAttribute() 
PASS time.dateTime: setAttribute() to Infinity followed by IDL get 
PASS time.dateTime: setAttribute() to -Infinity followed by getAttribute() 
PASS time.dateTime: setAttribute() to -Infinity followed by IDL get 
PASS time.dateTime: setAttribute() to "\0" followed by getAttribute() 
PASS time.dateTime: setAttribute() to "\0" followed by IDL get 
PASS time.dateTime: setAttribute() to null followed by getAttribute() 
PASS time.dateTime: setAttribute() to null followed by IDL get 
PASS time.dateTime: setAttribute() to object "test-toString" followed by getAttribute() 
PASS time.dateTime: setAttribute() to object "test-toString" followed by IDL get 
PASS time.dateTime: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS time.dateTime: setAttribute() to object "test-valueOf" followed by IDL get 
PASS time.dateTime: IDL set to "" should not throw 
PASS time.dateTime: IDL set to "" followed by getAttribute() 
PASS time.dateTime: IDL set to "" followed by IDL get 
PASS time.dateTime: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS time.dateTime: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS time.dateTime: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS time.dateTime: IDL set to undefined should not throw 
PASS time.dateTime: IDL set to undefined followed by getAttribute() 
PASS time.dateTime: IDL set to undefined followed by IDL get 
PASS time.dateTime: IDL set to 7 should not throw 
PASS time.dateTime: IDL set to 7 followed by getAttribute() 
PASS time.dateTime: IDL set to 7 followed by IDL get 
PASS time.dateTime: IDL set to 1.5 should not throw 
PASS time.dateTime: IDL set to 1.5 followed by getAttribute() 
PASS time.dateTime: IDL set to 1.5 followed by IDL get 
PASS time.dateTime: IDL set to true should not throw 
PASS time.dateTime: IDL set to true followed by getAttribute() 
PASS time.dateTime: IDL set to true followed by IDL get 
PASS time.dateTime: IDL set to false should not throw 
PASS time.dateTime: IDL set to false followed by getAttribute() 
PASS time.dateTime: IDL set to false followed by IDL get 
PASS time.dateTime: IDL set to object "[object Object]" should not throw 
PASS time.dateTime: IDL set to object "[object Object]" followed by getAttribute() 
PASS time.dateTime: IDL set to object "[object Object]" followed by IDL get 
PASS time.dateTime: IDL set to NaN should not throw 
PASS time.dateTime: IDL set to NaN followed by getAttribute() 
PASS time.dateTime: IDL set to NaN followed by IDL get 
PASS time.dateTime: IDL set to Infinity should not throw 
PASS time.dateTime: IDL set to Infinity followed by getAttribute() 
PASS time.dateTime: IDL set to Infinity followed by IDL get 
PASS time.dateTime: IDL set to -Infinity should not throw 
PASS time.dateTime: IDL set to -Infinity followed by getAttribute() 
PASS time.dateTime: IDL set to -Infinity followed by IDL get 
PASS time.dateTime: IDL set to "\0" should not throw 
PASS time.dateTime: IDL set to "\0" followed by getAttribute() 
PASS time.dateTime: IDL set to "\0" followed by IDL get 
PASS time.dateTime: IDL set to null should not throw 
PASS time.dateTime: IDL set to null followed by getAttribute() 
PASS time.dateTime: IDL set to null followed by IDL get 
PASS time.dateTime: IDL set to object "test-toString" should not throw 
PASS time.dateTime: IDL set to object "test-toString" followed by getAttribute() 
PASS time.dateTime: IDL set to object "test-toString" followed by IDL get 
PASS time.dateTime: IDL set to object "test-valueOf" should not throw 
PASS time.dateTime: IDL set to object "test-valueOf" followed by getAttribute() 
PASS time.dateTime: IDL set to object "test-valueOf" followed by IDL get 
FAIL time.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL time.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS time.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL time.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL time.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL time.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to null followed by getAttribute() 
FAIL time.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL time.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL time.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to true followed by getAttribute() 
FAIL time.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to false followed by getAttribute() 
FAIL time.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL time.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL time.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL time.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL time.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL time.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL time.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL time.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL time.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS time.itemScope: IDL set to "" should not throw 
FAIL time.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL time.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS time.itemScope: IDL set to " foo " should not throw 
PASS time.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL time.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS time.itemScope: IDL set to undefined should not throw 
FAIL time.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL time.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS time.itemScope: IDL set to null should not throw 
FAIL time.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL time.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS time.itemScope: IDL set to 7 should not throw 
PASS time.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL time.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS time.itemScope: IDL set to 1.5 should not throw 
PASS time.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL time.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS time.itemScope: IDL set to true should not throw 
PASS time.itemScope: IDL set to true followed by hasAttribute() 
PASS time.itemScope: IDL set to true followed by IDL get 
PASS time.itemScope: IDL set to false should not throw 
FAIL time.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS time.itemScope: IDL set to false followed by IDL get 
PASS time.itemScope: IDL set to object "[object Object]" should not throw 
PASS time.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL time.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS time.itemScope: IDL set to NaN should not throw 
FAIL time.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL time.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS time.itemScope: IDL set to Infinity should not throw 
PASS time.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL time.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS time.itemScope: IDL set to -Infinity should not throw 
PASS time.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL time.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS time.itemScope: IDL set to "\0" should not throw 
PASS time.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL time.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS time.itemScope: IDL set to object "test-toString" should not throw 
PASS time.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL time.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS time.itemScope: IDL set to object "test-valueOf" should not throw 
PASS time.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL time.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL time.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL time.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS time.itemId: setAttribute() to "" followed by getAttribute() 
FAIL time.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS time.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL time.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS time.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL time.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS time.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL time.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS time.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL time.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS time.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL time.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS time.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL time.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS time.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL time.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS time.itemId: setAttribute() to true followed by getAttribute() 
FAIL time.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS time.itemId: setAttribute() to false followed by getAttribute() 
FAIL time.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS time.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL time.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS time.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL time.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS time.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL time.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS time.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL time.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS time.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL time.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS time.itemId: setAttribute() to null followed by getAttribute() 
FAIL time.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS time.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL time.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS time.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL time.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS time.itemId: IDL set to "" should not throw 
FAIL time.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL time.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS time.itemId: IDL set to " foo " should not throw 
FAIL time.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL time.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS time.itemId: IDL set to "http://site.example/" should not throw 
FAIL time.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS time.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS time.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL time.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL time.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS time.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL time.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL time.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS time.itemId: IDL set to undefined should not throw 
FAIL time.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL time.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS time.itemId: IDL set to 7 should not throw 
FAIL time.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL time.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS time.itemId: IDL set to 1.5 should not throw 
FAIL time.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL time.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS time.itemId: IDL set to true should not throw 
FAIL time.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL time.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS time.itemId: IDL set to false should not throw 
FAIL time.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL time.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS time.itemId: IDL set to object "[object Object]" should not throw 
FAIL time.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL time.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS time.itemId: IDL set to NaN should not throw 
FAIL time.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL time.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS time.itemId: IDL set to Infinity should not throw 
FAIL time.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL time.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS time.itemId: IDL set to -Infinity should not throw 
FAIL time.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL time.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS time.itemId: IDL set to "\0" should not throw 
FAIL time.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL time.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS time.itemId: IDL set to null should not throw 
FAIL time.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL time.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS time.itemId: IDL set to object "test-toString" should not throw 
FAIL time.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL time.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS time.itemId: IDL set to object "test-valueOf" should not throw 
PASS time.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL time.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS code.title: typeof IDL attribute 
PASS code.title: IDL get with DOM attribute unset 
PASS code.title: setAttribute() to "" followed by getAttribute() 
PASS code.title: setAttribute() to "" followed by IDL get 
PASS code.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS code.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS code.title: setAttribute() to undefined followed by getAttribute() 
PASS code.title: setAttribute() to undefined followed by IDL get 
PASS code.title: setAttribute() to 7 followed by getAttribute() 
PASS code.title: setAttribute() to 7 followed by IDL get 
PASS code.title: setAttribute() to 1.5 followed by getAttribute() 
PASS code.title: setAttribute() to 1.5 followed by IDL get 
PASS code.title: setAttribute() to true followed by getAttribute() 
PASS code.title: setAttribute() to true followed by IDL get 
PASS code.title: setAttribute() to false followed by getAttribute() 
PASS code.title: setAttribute() to false followed by IDL get 
PASS code.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS code.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS code.title: setAttribute() to NaN followed by getAttribute() 
PASS code.title: setAttribute() to NaN followed by IDL get 
PASS code.title: setAttribute() to Infinity followed by getAttribute() 
PASS code.title: setAttribute() to Infinity followed by IDL get 
PASS code.title: setAttribute() to -Infinity followed by getAttribute() 
PASS code.title: setAttribute() to -Infinity followed by IDL get 
PASS code.title: setAttribute() to "\0" followed by getAttribute() 
PASS code.title: setAttribute() to "\0" followed by IDL get 
PASS code.title: setAttribute() to null followed by getAttribute() 
PASS code.title: setAttribute() to null followed by IDL get 
PASS code.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS code.title: setAttribute() to object "test-toString" followed by IDL get 
PASS code.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS code.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS code.title: IDL set to "" should not throw 
PASS code.title: IDL set to "" followed by getAttribute() 
PASS code.title: IDL set to "" followed by IDL get 
PASS code.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS code.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS code.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS code.title: IDL set to undefined should not throw 
PASS code.title: IDL set to undefined followed by getAttribute() 
PASS code.title: IDL set to undefined followed by IDL get 
PASS code.title: IDL set to 7 should not throw 
PASS code.title: IDL set to 7 followed by getAttribute() 
PASS code.title: IDL set to 7 followed by IDL get 
PASS code.title: IDL set to 1.5 should not throw 
PASS code.title: IDL set to 1.5 followed by getAttribute() 
PASS code.title: IDL set to 1.5 followed by IDL get 
PASS code.title: IDL set to true should not throw 
PASS code.title: IDL set to true followed by getAttribute() 
PASS code.title: IDL set to true followed by IDL get 
PASS code.title: IDL set to false should not throw 
PASS code.title: IDL set to false followed by getAttribute() 
PASS code.title: IDL set to false followed by IDL get 
PASS code.title: IDL set to object "[object Object]" should not throw 
PASS code.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS code.title: IDL set to object "[object Object]" followed by IDL get 
PASS code.title: IDL set to NaN should not throw 
PASS code.title: IDL set to NaN followed by getAttribute() 
PASS code.title: IDL set to NaN followed by IDL get 
PASS code.title: IDL set to Infinity should not throw 
PASS code.title: IDL set to Infinity followed by getAttribute() 
PASS code.title: IDL set to Infinity followed by IDL get 
PASS code.title: IDL set to -Infinity should not throw 
PASS code.title: IDL set to -Infinity followed by getAttribute() 
PASS code.title: IDL set to -Infinity followed by IDL get 
PASS code.title: IDL set to "\0" should not throw 
PASS code.title: IDL set to "\0" followed by getAttribute() 
PASS code.title: IDL set to "\0" followed by IDL get 
PASS code.title: IDL set to null should not throw 
PASS code.title: IDL set to null followed by getAttribute() 
PASS code.title: IDL set to null followed by IDL get 
PASS code.title: IDL set to object "test-toString" should not throw 
PASS code.title: IDL set to object "test-toString" followed by getAttribute() 
PASS code.title: IDL set to object "test-toString" followed by IDL get 
PASS code.title: IDL set to object "test-valueOf" should not throw 
PASS code.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS code.title: IDL set to object "test-valueOf" followed by IDL get 
PASS code.lang: typeof IDL attribute 
PASS code.lang: IDL get with DOM attribute unset 
PASS code.lang: setAttribute() to "" followed by getAttribute() 
PASS code.lang: setAttribute() to "" followed by IDL get 
PASS code.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS code.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS code.lang: setAttribute() to undefined followed by getAttribute() 
PASS code.lang: setAttribute() to undefined followed by IDL get 
PASS code.lang: setAttribute() to 7 followed by getAttribute() 
PASS code.lang: setAttribute() to 7 followed by IDL get 
PASS code.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS code.lang: setAttribute() to 1.5 followed by IDL get 
PASS code.lang: setAttribute() to true followed by getAttribute() 
PASS code.lang: setAttribute() to true followed by IDL get 
PASS code.lang: setAttribute() to false followed by getAttribute() 
PASS code.lang: setAttribute() to false followed by IDL get 
PASS code.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS code.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS code.lang: setAttribute() to NaN followed by getAttribute() 
PASS code.lang: setAttribute() to NaN followed by IDL get 
PASS code.lang: setAttribute() to Infinity followed by getAttribute() 
PASS code.lang: setAttribute() to Infinity followed by IDL get 
PASS code.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS code.lang: setAttribute() to -Infinity followed by IDL get 
PASS code.lang: setAttribute() to "\0" followed by getAttribute() 
PASS code.lang: setAttribute() to "\0" followed by IDL get 
PASS code.lang: setAttribute() to null followed by getAttribute() 
PASS code.lang: setAttribute() to null followed by IDL get 
PASS code.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS code.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS code.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS code.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS code.lang: IDL set to "" should not throw 
PASS code.lang: IDL set to "" followed by getAttribute() 
PASS code.lang: IDL set to "" followed by IDL get 
PASS code.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS code.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS code.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS code.lang: IDL set to undefined should not throw 
PASS code.lang: IDL set to undefined followed by getAttribute() 
PASS code.lang: IDL set to undefined followed by IDL get 
PASS code.lang: IDL set to 7 should not throw 
PASS code.lang: IDL set to 7 followed by getAttribute() 
PASS code.lang: IDL set to 7 followed by IDL get 
PASS code.lang: IDL set to 1.5 should not throw 
PASS code.lang: IDL set to 1.5 followed by getAttribute() 
PASS code.lang: IDL set to 1.5 followed by IDL get 
PASS code.lang: IDL set to true should not throw 
PASS code.lang: IDL set to true followed by getAttribute() 
PASS code.lang: IDL set to true followed by IDL get 
PASS code.lang: IDL set to false should not throw 
PASS code.lang: IDL set to false followed by getAttribute() 
PASS code.lang: IDL set to false followed by IDL get 
PASS code.lang: IDL set to object "[object Object]" should not throw 
PASS code.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS code.lang: IDL set to object "[object Object]" followed by IDL get 
PASS code.lang: IDL set to NaN should not throw 
PASS code.lang: IDL set to NaN followed by getAttribute() 
PASS code.lang: IDL set to NaN followed by IDL get 
PASS code.lang: IDL set to Infinity should not throw 
PASS code.lang: IDL set to Infinity followed by getAttribute() 
PASS code.lang: IDL set to Infinity followed by IDL get 
PASS code.lang: IDL set to -Infinity should not throw 
PASS code.lang: IDL set to -Infinity followed by getAttribute() 
PASS code.lang: IDL set to -Infinity followed by IDL get 
PASS code.lang: IDL set to "\0" should not throw 
PASS code.lang: IDL set to "\0" followed by getAttribute() 
PASS code.lang: IDL set to "\0" followed by IDL get 
PASS code.lang: IDL set to null should not throw 
PASS code.lang: IDL set to null followed by getAttribute() 
PASS code.lang: IDL set to null followed by IDL get 
PASS code.lang: IDL set to object "test-toString" should not throw 
PASS code.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS code.lang: IDL set to object "test-toString" followed by IDL get 
PASS code.lang: IDL set to object "test-valueOf" should not throw 
PASS code.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS code.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS code.dir: typeof IDL attribute 
PASS code.dir: IDL get with DOM attribute unset 
PASS code.dir: setAttribute() to "" followed by getAttribute() 
PASS code.dir: setAttribute() to "" followed by IDL get 
PASS code.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS code.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS code.dir: setAttribute() to undefined followed by getAttribute() 
PASS code.dir: setAttribute() to undefined followed by IDL get 
PASS code.dir: setAttribute() to 7 followed by getAttribute() 
PASS code.dir: setAttribute() to 7 followed by IDL get 
PASS code.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS code.dir: setAttribute() to 1.5 followed by IDL get 
PASS code.dir: setAttribute() to true followed by getAttribute() 
PASS code.dir: setAttribute() to true followed by IDL get 
PASS code.dir: setAttribute() to false followed by getAttribute() 
PASS code.dir: setAttribute() to false followed by IDL get 
PASS code.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS code.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS code.dir: setAttribute() to NaN followed by getAttribute() 
PASS code.dir: setAttribute() to NaN followed by IDL get 
PASS code.dir: setAttribute() to Infinity followed by getAttribute() 
PASS code.dir: setAttribute() to Infinity followed by IDL get 
PASS code.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS code.dir: setAttribute() to -Infinity followed by IDL get 
PASS code.dir: setAttribute() to "\0" followed by getAttribute() 
PASS code.dir: setAttribute() to "\0" followed by IDL get 
PASS code.dir: setAttribute() to null followed by getAttribute() 
PASS code.dir: setAttribute() to null followed by IDL get 
PASS code.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS code.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS code.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS code.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS code.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS code.dir: setAttribute() to "ltr" followed by IDL get 
PASS code.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS code.dir: setAttribute() to "xltr" followed by IDL get 
PASS code.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS code.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS code.dir: setAttribute() to "tr" followed by getAttribute() 
PASS code.dir: setAttribute() to "tr" followed by IDL get 
PASS code.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS code.dir: setAttribute() to "LTR" followed by IDL get 
PASS code.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS code.dir: setAttribute() to "rtl" followed by IDL get 
PASS code.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS code.dir: setAttribute() to "xrtl" followed by IDL get 
PASS code.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS code.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS code.dir: setAttribute() to "tl" followed by getAttribute() 
PASS code.dir: setAttribute() to "tl" followed by IDL get 
PASS code.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS code.dir: setAttribute() to "RTL" followed by IDL get 
PASS code.dir: setAttribute() to "auto" followed by getAttribute() 
PASS code.dir: setAttribute() to "auto" followed by IDL get 
PASS code.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS code.dir: setAttribute() to "xauto" followed by IDL get 
PASS code.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS code.dir: setAttribute() to "auto\0" followed by IDL get 
PASS code.dir: setAttribute() to "uto" followed by getAttribute() 
PASS code.dir: setAttribute() to "uto" followed by IDL get 
PASS code.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS code.dir: setAttribute() to "AUTO" followed by IDL get 
PASS code.dir: IDL set to "" should not throw 
PASS code.dir: IDL set to "" followed by getAttribute() 
PASS code.dir: IDL set to "" followed by IDL get 
PASS code.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS code.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS code.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS code.dir: IDL set to undefined should not throw 
PASS code.dir: IDL set to undefined followed by getAttribute() 
PASS code.dir: IDL set to undefined followed by IDL get 
PASS code.dir: IDL set to 7 should not throw 
PASS code.dir: IDL set to 7 followed by getAttribute() 
PASS code.dir: IDL set to 7 followed by IDL get 
PASS code.dir: IDL set to 1.5 should not throw 
PASS code.dir: IDL set to 1.5 followed by getAttribute() 
PASS code.dir: IDL set to 1.5 followed by IDL get 
PASS code.dir: IDL set to true should not throw 
PASS code.dir: IDL set to true followed by getAttribute() 
PASS code.dir: IDL set to true followed by IDL get 
PASS code.dir: IDL set to false should not throw 
PASS code.dir: IDL set to false followed by getAttribute() 
PASS code.dir: IDL set to false followed by IDL get 
PASS code.dir: IDL set to object "[object Object]" should not throw 
PASS code.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS code.dir: IDL set to object "[object Object]" followed by IDL get 
PASS code.dir: IDL set to NaN should not throw 
PASS code.dir: IDL set to NaN followed by getAttribute() 
PASS code.dir: IDL set to NaN followed by IDL get 
PASS code.dir: IDL set to Infinity should not throw 
PASS code.dir: IDL set to Infinity followed by getAttribute() 
PASS code.dir: IDL set to Infinity followed by IDL get 
PASS code.dir: IDL set to -Infinity should not throw 
PASS code.dir: IDL set to -Infinity followed by getAttribute() 
PASS code.dir: IDL set to -Infinity followed by IDL get 
PASS code.dir: IDL set to "\0" should not throw 
PASS code.dir: IDL set to "\0" followed by getAttribute() 
PASS code.dir: IDL set to "\0" followed by IDL get 
PASS code.dir: IDL set to null should not throw 
PASS code.dir: IDL set to null followed by IDL get 
PASS code.dir: IDL set to object "test-toString" should not throw 
PASS code.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS code.dir: IDL set to object "test-toString" followed by IDL get 
PASS code.dir: IDL set to object "test-valueOf" should not throw 
PASS code.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS code.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS code.dir: IDL set to "ltr" should not throw 
PASS code.dir: IDL set to "ltr" followed by getAttribute() 
PASS code.dir: IDL set to "ltr" followed by IDL get 
PASS code.dir: IDL set to "xltr" should not throw 
PASS code.dir: IDL set to "xltr" followed by getAttribute() 
PASS code.dir: IDL set to "xltr" followed by IDL get 
PASS code.dir: IDL set to "ltr\0" should not throw 
PASS code.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS code.dir: IDL set to "ltr\0" followed by IDL get 
PASS code.dir: IDL set to "tr" should not throw 
PASS code.dir: IDL set to "tr" followed by getAttribute() 
PASS code.dir: IDL set to "tr" followed by IDL get 
PASS code.dir: IDL set to "LTR" should not throw 
PASS code.dir: IDL set to "LTR" followed by getAttribute() 
PASS code.dir: IDL set to "LTR" followed by IDL get 
PASS code.dir: IDL set to "rtl" should not throw 
PASS code.dir: IDL set to "rtl" followed by getAttribute() 
PASS code.dir: IDL set to "rtl" followed by IDL get 
PASS code.dir: IDL set to "xrtl" should not throw 
PASS code.dir: IDL set to "xrtl" followed by getAttribute() 
PASS code.dir: IDL set to "xrtl" followed by IDL get 
PASS code.dir: IDL set to "rtl\0" should not throw 
PASS code.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS code.dir: IDL set to "rtl\0" followed by IDL get 
PASS code.dir: IDL set to "tl" should not throw 
PASS code.dir: IDL set to "tl" followed by getAttribute() 
PASS code.dir: IDL set to "tl" followed by IDL get 
PASS code.dir: IDL set to "RTL" should not throw 
PASS code.dir: IDL set to "RTL" followed by getAttribute() 
PASS code.dir: IDL set to "RTL" followed by IDL get 
PASS code.dir: IDL set to "auto" should not throw 
PASS code.dir: IDL set to "auto" followed by getAttribute() 
PASS code.dir: IDL set to "auto" followed by IDL get 
PASS code.dir: IDL set to "xauto" should not throw 
PASS code.dir: IDL set to "xauto" followed by getAttribute() 
PASS code.dir: IDL set to "xauto" followed by IDL get 
PASS code.dir: IDL set to "auto\0" should not throw 
PASS code.dir: IDL set to "auto\0" followed by getAttribute() 
PASS code.dir: IDL set to "auto\0" followed by IDL get 
PASS code.dir: IDL set to "uto" should not throw 
PASS code.dir: IDL set to "uto" followed by getAttribute() 
PASS code.dir: IDL set to "uto" followed by IDL get 
PASS code.dir: IDL set to "AUTO" should not throw 
PASS code.dir: IDL set to "AUTO" followed by getAttribute() 
PASS code.dir: IDL set to "AUTO" followed by IDL get 
PASS code.className (<code class>): typeof IDL attribute 
PASS code.className (<code class>): IDL get with DOM attribute unset 
PASS code.className (<code class>): setAttribute() to "" followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to "" followed by IDL get 
PASS code.className (<code class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS code.className (<code class>): setAttribute() to undefined followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to undefined followed by IDL get 
PASS code.className (<code class>): setAttribute() to 7 followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to 7 followed by IDL get 
PASS code.className (<code class>): setAttribute() to 1.5 followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to 1.5 followed by IDL get 
PASS code.className (<code class>): setAttribute() to true followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to true followed by IDL get 
PASS code.className (<code class>): setAttribute() to false followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to false followed by IDL get 
PASS code.className (<code class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS code.className (<code class>): setAttribute() to NaN followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to NaN followed by IDL get 
PASS code.className (<code class>): setAttribute() to Infinity followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to Infinity followed by IDL get 
PASS code.className (<code class>): setAttribute() to -Infinity followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to -Infinity followed by IDL get 
PASS code.className (<code class>): setAttribute() to "\0" followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to "\0" followed by IDL get 
PASS code.className (<code class>): setAttribute() to null followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to null followed by IDL get 
PASS code.className (<code class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to object "test-toString" followed by IDL get 
PASS code.className (<code class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS code.className (<code class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS code.className (<code class>): IDL set to "" should not throw 
PASS code.className (<code class>): IDL set to "" followed by getAttribute() 
PASS code.className (<code class>): IDL set to "" followed by IDL get 
PASS code.className (<code class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS code.className (<code class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS code.className (<code class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS code.className (<code class>): IDL set to undefined should not throw 
PASS code.className (<code class>): IDL set to undefined followed by getAttribute() 
PASS code.className (<code class>): IDL set to undefined followed by IDL get 
PASS code.className (<code class>): IDL set to 7 should not throw 
PASS code.className (<code class>): IDL set to 7 followed by getAttribute() 
PASS code.className (<code class>): IDL set to 7 followed by IDL get 
PASS code.className (<code class>): IDL set to 1.5 should not throw 
PASS code.className (<code class>): IDL set to 1.5 followed by getAttribute() 
PASS code.className (<code class>): IDL set to 1.5 followed by IDL get 
PASS code.className (<code class>): IDL set to true should not throw 
PASS code.className (<code class>): IDL set to true followed by getAttribute() 
PASS code.className (<code class>): IDL set to true followed by IDL get 
PASS code.className (<code class>): IDL set to false should not throw 
PASS code.className (<code class>): IDL set to false followed by getAttribute() 
PASS code.className (<code class>): IDL set to false followed by IDL get 
PASS code.className (<code class>): IDL set to object "[object Object]" should not throw 
PASS code.className (<code class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS code.className (<code class>): IDL set to object "[object Object]" followed by IDL get 
PASS code.className (<code class>): IDL set to NaN should not throw 
PASS code.className (<code class>): IDL set to NaN followed by getAttribute() 
PASS code.className (<code class>): IDL set to NaN followed by IDL get 
PASS code.className (<code class>): IDL set to Infinity should not throw 
PASS code.className (<code class>): IDL set to Infinity followed by getAttribute() 
PASS code.className (<code class>): IDL set to Infinity followed by IDL get 
PASS code.className (<code class>): IDL set to -Infinity should not throw 
PASS code.className (<code class>): IDL set to -Infinity followed by getAttribute() 
PASS code.className (<code class>): IDL set to -Infinity followed by IDL get 
PASS code.className (<code class>): IDL set to "\0" should not throw 
PASS code.className (<code class>): IDL set to "\0" followed by getAttribute() 
PASS code.className (<code class>): IDL set to "\0" followed by IDL get 
PASS code.className (<code class>): IDL set to null should not throw 
PASS code.className (<code class>): IDL set to null followed by getAttribute() 
PASS code.className (<code class>): IDL set to null followed by IDL get 
PASS code.className (<code class>): IDL set to object "test-toString" should not throw 
PASS code.className (<code class>): IDL set to object "test-toString" followed by getAttribute() 
PASS code.className (<code class>): IDL set to object "test-toString" followed by IDL get 
PASS code.className (<code class>): IDL set to object "test-valueOf" should not throw 
PASS code.className (<code class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS code.className (<code class>): IDL set to object "test-valueOf" followed by IDL get 
PASS code.hidden: typeof IDL attribute 
PASS code.hidden: IDL get with DOM attribute unset 
PASS code.hidden: setAttribute() to "" followed by getAttribute() 
PASS code.hidden: setAttribute() to "" followed by IDL get 
PASS code.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS code.hidden: setAttribute() to " foo " followed by IDL get 
PASS code.hidden: setAttribute() to undefined followed by getAttribute() 
PASS code.hidden: setAttribute() to undefined followed by IDL get 
PASS code.hidden: setAttribute() to null followed by getAttribute() 
PASS code.hidden: setAttribute() to null followed by IDL get 
PASS code.hidden: setAttribute() to 7 followed by getAttribute() 
PASS code.hidden: setAttribute() to 7 followed by IDL get 
PASS code.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS code.hidden: setAttribute() to 1.5 followed by IDL get 
PASS code.hidden: setAttribute() to true followed by getAttribute() 
PASS code.hidden: setAttribute() to true followed by IDL get 
PASS code.hidden: setAttribute() to false followed by getAttribute() 
PASS code.hidden: setAttribute() to false followed by IDL get 
PASS code.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS code.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS code.hidden: setAttribute() to NaN followed by getAttribute() 
PASS code.hidden: setAttribute() to NaN followed by IDL get 
PASS code.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS code.hidden: setAttribute() to Infinity followed by IDL get 
PASS code.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS code.hidden: setAttribute() to -Infinity followed by IDL get 
PASS code.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS code.hidden: setAttribute() to "\0" followed by IDL get 
PASS code.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS code.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS code.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS code.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS code.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS code.hidden: setAttribute() to "hidden" followed by IDL get 
PASS code.hidden: IDL set to "" should not throw 
PASS code.hidden: IDL set to "" followed by hasAttribute() 
PASS code.hidden: IDL set to "" followed by IDL get 
PASS code.hidden: IDL set to " foo " should not throw 
PASS code.hidden: IDL set to " foo " followed by hasAttribute() 
PASS code.hidden: IDL set to " foo " followed by IDL get 
PASS code.hidden: IDL set to undefined should not throw 
PASS code.hidden: IDL set to undefined followed by hasAttribute() 
PASS code.hidden: IDL set to undefined followed by IDL get 
PASS code.hidden: IDL set to null should not throw 
PASS code.hidden: IDL set to null followed by hasAttribute() 
PASS code.hidden: IDL set to null followed by IDL get 
PASS code.hidden: IDL set to 7 should not throw 
PASS code.hidden: IDL set to 7 followed by hasAttribute() 
PASS code.hidden: IDL set to 7 followed by IDL get 
PASS code.hidden: IDL set to 1.5 should not throw 
PASS code.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS code.hidden: IDL set to 1.5 followed by IDL get 
PASS code.hidden: IDL set to true should not throw 
PASS code.hidden: IDL set to true followed by hasAttribute() 
PASS code.hidden: IDL set to true followed by IDL get 
PASS code.hidden: IDL set to false should not throw 
PASS code.hidden: IDL set to false followed by hasAttribute() 
PASS code.hidden: IDL set to false followed by IDL get 
PASS code.hidden: IDL set to object "[object Object]" should not throw 
PASS code.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS code.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS code.hidden: IDL set to NaN should not throw 
PASS code.hidden: IDL set to NaN followed by hasAttribute() 
PASS code.hidden: IDL set to NaN followed by IDL get 
PASS code.hidden: IDL set to Infinity should not throw 
PASS code.hidden: IDL set to Infinity followed by hasAttribute() 
PASS code.hidden: IDL set to Infinity followed by IDL get 
PASS code.hidden: IDL set to -Infinity should not throw 
PASS code.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS code.hidden: IDL set to -Infinity followed by IDL get 
PASS code.hidden: IDL set to "\0" should not throw 
PASS code.hidden: IDL set to "\0" followed by hasAttribute() 
PASS code.hidden: IDL set to "\0" followed by IDL get 
PASS code.hidden: IDL set to object "test-toString" should not throw 
PASS code.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS code.hidden: IDL set to object "test-toString" followed by IDL get 
PASS code.hidden: IDL set to object "test-valueOf" should not throw 
PASS code.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS code.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS code.accessKey: typeof IDL attribute 
PASS code.accessKey: IDL get with DOM attribute unset 
PASS code.accessKey: setAttribute() to "" followed by getAttribute() 
PASS code.accessKey: setAttribute() to "" followed by IDL get 
PASS code.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS code.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS code.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS code.accessKey: setAttribute() to undefined followed by IDL get 
PASS code.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS code.accessKey: setAttribute() to 7 followed by IDL get 
PASS code.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS code.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS code.accessKey: setAttribute() to true followed by getAttribute() 
PASS code.accessKey: setAttribute() to true followed by IDL get 
PASS code.accessKey: setAttribute() to false followed by getAttribute() 
PASS code.accessKey: setAttribute() to false followed by IDL get 
PASS code.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS code.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS code.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS code.accessKey: setAttribute() to NaN followed by IDL get 
PASS code.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS code.accessKey: setAttribute() to Infinity followed by IDL get 
PASS code.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS code.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS code.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS code.accessKey: setAttribute() to "\0" followed by IDL get 
PASS code.accessKey: setAttribute() to null followed by getAttribute() 
PASS code.accessKey: setAttribute() to null followed by IDL get 
PASS code.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS code.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS code.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS code.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS code.accessKey: IDL set to "" should not throw 
PASS code.accessKey: IDL set to "" followed by getAttribute() 
PASS code.accessKey: IDL set to "" followed by IDL get 
PASS code.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS code.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS code.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS code.accessKey: IDL set to undefined should not throw 
PASS code.accessKey: IDL set to undefined followed by getAttribute() 
PASS code.accessKey: IDL set to undefined followed by IDL get 
PASS code.accessKey: IDL set to 7 should not throw 
PASS code.accessKey: IDL set to 7 followed by getAttribute() 
PASS code.accessKey: IDL set to 7 followed by IDL get 
PASS code.accessKey: IDL set to 1.5 should not throw 
PASS code.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS code.accessKey: IDL set to 1.5 followed by IDL get 
PASS code.accessKey: IDL set to true should not throw 
PASS code.accessKey: IDL set to true followed by getAttribute() 
PASS code.accessKey: IDL set to true followed by IDL get 
PASS code.accessKey: IDL set to false should not throw 
PASS code.accessKey: IDL set to false followed by getAttribute() 
PASS code.accessKey: IDL set to false followed by IDL get 
PASS code.accessKey: IDL set to object "[object Object]" should not throw 
PASS code.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS code.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS code.accessKey: IDL set to NaN should not throw 
PASS code.accessKey: IDL set to NaN followed by getAttribute() 
PASS code.accessKey: IDL set to NaN followed by IDL get 
PASS code.accessKey: IDL set to Infinity should not throw 
PASS code.accessKey: IDL set to Infinity followed by getAttribute() 
PASS code.accessKey: IDL set to Infinity followed by IDL get 
PASS code.accessKey: IDL set to -Infinity should not throw 
PASS code.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS code.accessKey: IDL set to -Infinity followed by IDL get 
PASS code.accessKey: IDL set to "\0" should not throw 
PASS code.accessKey: IDL set to "\0" followed by getAttribute() 
PASS code.accessKey: IDL set to "\0" followed by IDL get 
PASS code.accessKey: IDL set to null should not throw 
PASS code.accessKey: IDL set to null followed by getAttribute() 
PASS code.accessKey: IDL set to null followed by IDL get 
PASS code.accessKey: IDL set to object "test-toString" should not throw 
PASS code.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS code.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS code.accessKey: IDL set to object "test-valueOf" should not throw 
PASS code.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS code.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS code.tabIndex: typeof IDL attribute 
PASS code.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS code.tabIndex: setAttribute() to -36 followed by IDL get 
PASS code.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS code.tabIndex: setAttribute() to -1 followed by IDL get 
PASS code.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS code.tabIndex: setAttribute() to 0 followed by IDL get 
PASS code.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS code.tabIndex: setAttribute() to 1 followed by IDL get 
PASS code.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL code.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS code.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL code.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS code.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS code.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS code.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS code.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS code.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS code.tabIndex: setAttribute() to "0" followed by IDL get 
PASS code.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS code.tabIndex: setAttribute() to "1" followed by IDL get 
PASS code.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS code.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS code.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS code.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS code.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS code.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS code.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS code.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS code.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS code.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS code.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS code.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS code.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS code.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS code.tabIndex: IDL set to -36 should not throw 
PASS code.tabIndex: IDL set to -36 followed by getAttribute() 
PASS code.tabIndex: IDL set to -36 followed by IDL get 
PASS code.tabIndex: IDL set to -1 should not throw 
PASS code.tabIndex: IDL set to -1 followed by getAttribute() 
PASS code.tabIndex: IDL set to -1 followed by IDL get 
PASS code.tabIndex: IDL set to 0 should not throw 
PASS code.tabIndex: IDL set to 0 followed by getAttribute() 
PASS code.tabIndex: IDL set to 0 followed by IDL get 
PASS code.tabIndex: IDL set to 1 should not throw 
PASS code.tabIndex: IDL set to 1 followed by getAttribute() 
PASS code.tabIndex: IDL set to 1 followed by IDL get 
PASS code.tabIndex: IDL set to 2147483647 should not throw 
PASS code.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL code.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS code.tabIndex: IDL set to -2147483648 should not throw 
PASS code.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL code.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL code.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL code.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS code.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL code.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL code.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL code.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to null followed by getAttribute() 
FAIL code.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL code.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL code.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to true followed by getAttribute() 
FAIL code.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to false followed by getAttribute() 
FAIL code.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL code.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL code.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL code.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL code.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL code.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL code.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL code.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL code.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS code.itemScope: IDL set to "" should not throw 
FAIL code.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL code.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS code.itemScope: IDL set to " foo " should not throw 
PASS code.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL code.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS code.itemScope: IDL set to undefined should not throw 
FAIL code.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL code.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS code.itemScope: IDL set to null should not throw 
FAIL code.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL code.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS code.itemScope: IDL set to 7 should not throw 
PASS code.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL code.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS code.itemScope: IDL set to 1.5 should not throw 
PASS code.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL code.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS code.itemScope: IDL set to true should not throw 
PASS code.itemScope: IDL set to true followed by hasAttribute() 
PASS code.itemScope: IDL set to true followed by IDL get 
PASS code.itemScope: IDL set to false should not throw 
FAIL code.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS code.itemScope: IDL set to false followed by IDL get 
PASS code.itemScope: IDL set to object "[object Object]" should not throw 
PASS code.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL code.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS code.itemScope: IDL set to NaN should not throw 
FAIL code.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL code.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS code.itemScope: IDL set to Infinity should not throw 
PASS code.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL code.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS code.itemScope: IDL set to -Infinity should not throw 
PASS code.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL code.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS code.itemScope: IDL set to "\0" should not throw 
PASS code.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL code.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS code.itemScope: IDL set to object "test-toString" should not throw 
PASS code.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL code.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS code.itemScope: IDL set to object "test-valueOf" should not throw 
PASS code.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL code.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL code.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL code.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS code.itemId: setAttribute() to "" followed by getAttribute() 
FAIL code.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS code.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL code.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS code.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL code.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS code.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL code.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS code.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL code.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS code.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL code.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS code.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL code.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS code.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL code.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS code.itemId: setAttribute() to true followed by getAttribute() 
FAIL code.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS code.itemId: setAttribute() to false followed by getAttribute() 
FAIL code.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS code.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL code.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS code.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL code.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS code.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL code.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS code.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL code.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS code.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL code.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS code.itemId: setAttribute() to null followed by getAttribute() 
FAIL code.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS code.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL code.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS code.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL code.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS code.itemId: IDL set to "" should not throw 
FAIL code.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL code.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS code.itemId: IDL set to " foo " should not throw 
FAIL code.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL code.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS code.itemId: IDL set to "http://site.example/" should not throw 
FAIL code.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS code.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS code.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL code.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL code.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS code.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL code.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL code.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS code.itemId: IDL set to undefined should not throw 
FAIL code.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL code.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS code.itemId: IDL set to 7 should not throw 
FAIL code.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL code.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS code.itemId: IDL set to 1.5 should not throw 
FAIL code.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL code.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS code.itemId: IDL set to true should not throw 
FAIL code.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL code.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS code.itemId: IDL set to false should not throw 
FAIL code.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL code.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS code.itemId: IDL set to object "[object Object]" should not throw 
FAIL code.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL code.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS code.itemId: IDL set to NaN should not throw 
FAIL code.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL code.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS code.itemId: IDL set to Infinity should not throw 
FAIL code.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL code.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS code.itemId: IDL set to -Infinity should not throw 
FAIL code.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL code.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS code.itemId: IDL set to "\0" should not throw 
FAIL code.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL code.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS code.itemId: IDL set to null should not throw 
FAIL code.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL code.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS code.itemId: IDL set to object "test-toString" should not throw 
FAIL code.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL code.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS code.itemId: IDL set to object "test-valueOf" should not throw 
PASS code.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL code.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS var.title: typeof IDL attribute 
PASS var.title: IDL get with DOM attribute unset 
PASS var.title: setAttribute() to "" followed by getAttribute() 
PASS var.title: setAttribute() to "" followed by IDL get 
PASS var.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS var.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS var.title: setAttribute() to undefined followed by getAttribute() 
PASS var.title: setAttribute() to undefined followed by IDL get 
PASS var.title: setAttribute() to 7 followed by getAttribute() 
PASS var.title: setAttribute() to 7 followed by IDL get 
PASS var.title: setAttribute() to 1.5 followed by getAttribute() 
PASS var.title: setAttribute() to 1.5 followed by IDL get 
PASS var.title: setAttribute() to true followed by getAttribute() 
PASS var.title: setAttribute() to true followed by IDL get 
PASS var.title: setAttribute() to false followed by getAttribute() 
PASS var.title: setAttribute() to false followed by IDL get 
PASS var.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS var.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS var.title: setAttribute() to NaN followed by getAttribute() 
PASS var.title: setAttribute() to NaN followed by IDL get 
PASS var.title: setAttribute() to Infinity followed by getAttribute() 
PASS var.title: setAttribute() to Infinity followed by IDL get 
PASS var.title: setAttribute() to -Infinity followed by getAttribute() 
PASS var.title: setAttribute() to -Infinity followed by IDL get 
PASS var.title: setAttribute() to "\0" followed by getAttribute() 
PASS var.title: setAttribute() to "\0" followed by IDL get 
PASS var.title: setAttribute() to null followed by getAttribute() 
PASS var.title: setAttribute() to null followed by IDL get 
PASS var.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS var.title: setAttribute() to object "test-toString" followed by IDL get 
PASS var.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS var.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS var.title: IDL set to "" should not throw 
PASS var.title: IDL set to "" followed by getAttribute() 
PASS var.title: IDL set to "" followed by IDL get 
PASS var.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS var.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS var.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS var.title: IDL set to undefined should not throw 
PASS var.title: IDL set to undefined followed by getAttribute() 
PASS var.title: IDL set to undefined followed by IDL get 
PASS var.title: IDL set to 7 should not throw 
PASS var.title: IDL set to 7 followed by getAttribute() 
PASS var.title: IDL set to 7 followed by IDL get 
PASS var.title: IDL set to 1.5 should not throw 
PASS var.title: IDL set to 1.5 followed by getAttribute() 
PASS var.title: IDL set to 1.5 followed by IDL get 
PASS var.title: IDL set to true should not throw 
PASS var.title: IDL set to true followed by getAttribute() 
PASS var.title: IDL set to true followed by IDL get 
PASS var.title: IDL set to false should not throw 
PASS var.title: IDL set to false followed by getAttribute() 
PASS var.title: IDL set to false followed by IDL get 
PASS var.title: IDL set to object "[object Object]" should not throw 
PASS var.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS var.title: IDL set to object "[object Object]" followed by IDL get 
PASS var.title: IDL set to NaN should not throw 
PASS var.title: IDL set to NaN followed by getAttribute() 
PASS var.title: IDL set to NaN followed by IDL get 
PASS var.title: IDL set to Infinity should not throw 
PASS var.title: IDL set to Infinity followed by getAttribute() 
PASS var.title: IDL set to Infinity followed by IDL get 
PASS var.title: IDL set to -Infinity should not throw 
PASS var.title: IDL set to -Infinity followed by getAttribute() 
PASS var.title: IDL set to -Infinity followed by IDL get 
PASS var.title: IDL set to "\0" should not throw 
PASS var.title: IDL set to "\0" followed by getAttribute() 
PASS var.title: IDL set to "\0" followed by IDL get 
PASS var.title: IDL set to null should not throw 
PASS var.title: IDL set to null followed by getAttribute() 
PASS var.title: IDL set to null followed by IDL get 
PASS var.title: IDL set to object "test-toString" should not throw 
PASS var.title: IDL set to object "test-toString" followed by getAttribute() 
PASS var.title: IDL set to object "test-toString" followed by IDL get 
PASS var.title: IDL set to object "test-valueOf" should not throw 
PASS var.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS var.title: IDL set to object "test-valueOf" followed by IDL get 
PASS var.lang: typeof IDL attribute 
PASS var.lang: IDL get with DOM attribute unset 
PASS var.lang: setAttribute() to "" followed by getAttribute() 
PASS var.lang: setAttribute() to "" followed by IDL get 
PASS var.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS var.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS var.lang: setAttribute() to undefined followed by getAttribute() 
PASS var.lang: setAttribute() to undefined followed by IDL get 
PASS var.lang: setAttribute() to 7 followed by getAttribute() 
PASS var.lang: setAttribute() to 7 followed by IDL get 
PASS var.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS var.lang: setAttribute() to 1.5 followed by IDL get 
PASS var.lang: setAttribute() to true followed by getAttribute() 
PASS var.lang: setAttribute() to true followed by IDL get 
PASS var.lang: setAttribute() to false followed by getAttribute() 
PASS var.lang: setAttribute() to false followed by IDL get 
PASS var.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS var.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS var.lang: setAttribute() to NaN followed by getAttribute() 
PASS var.lang: setAttribute() to NaN followed by IDL get 
PASS var.lang: setAttribute() to Infinity followed by getAttribute() 
PASS var.lang: setAttribute() to Infinity followed by IDL get 
PASS var.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS var.lang: setAttribute() to -Infinity followed by IDL get 
PASS var.lang: setAttribute() to "\0" followed by getAttribute() 
PASS var.lang: setAttribute() to "\0" followed by IDL get 
PASS var.lang: setAttribute() to null followed by getAttribute() 
PASS var.lang: setAttribute() to null followed by IDL get 
PASS var.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS var.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS var.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS var.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS var.lang: IDL set to "" should not throw 
PASS var.lang: IDL set to "" followed by getAttribute() 
PASS var.lang: IDL set to "" followed by IDL get 
PASS var.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS var.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS var.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS var.lang: IDL set to undefined should not throw 
PASS var.lang: IDL set to undefined followed by getAttribute() 
PASS var.lang: IDL set to undefined followed by IDL get 
PASS var.lang: IDL set to 7 should not throw 
PASS var.lang: IDL set to 7 followed by getAttribute() 
PASS var.lang: IDL set to 7 followed by IDL get 
PASS var.lang: IDL set to 1.5 should not throw 
PASS var.lang: IDL set to 1.5 followed by getAttribute() 
PASS var.lang: IDL set to 1.5 followed by IDL get 
PASS var.lang: IDL set to true should not throw 
PASS var.lang: IDL set to true followed by getAttribute() 
PASS var.lang: IDL set to true followed by IDL get 
PASS var.lang: IDL set to false should not throw 
PASS var.lang: IDL set to false followed by getAttribute() 
PASS var.lang: IDL set to false followed by IDL get 
PASS var.lang: IDL set to object "[object Object]" should not throw 
PASS var.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS var.lang: IDL set to object "[object Object]" followed by IDL get 
PASS var.lang: IDL set to NaN should not throw 
PASS var.lang: IDL set to NaN followed by getAttribute() 
PASS var.lang: IDL set to NaN followed by IDL get 
PASS var.lang: IDL set to Infinity should not throw 
PASS var.lang: IDL set to Infinity followed by getAttribute() 
PASS var.lang: IDL set to Infinity followed by IDL get 
PASS var.lang: IDL set to -Infinity should not throw 
PASS var.lang: IDL set to -Infinity followed by getAttribute() 
PASS var.lang: IDL set to -Infinity followed by IDL get 
PASS var.lang: IDL set to "\0" should not throw 
PASS var.lang: IDL set to "\0" followed by getAttribute() 
PASS var.lang: IDL set to "\0" followed by IDL get 
PASS var.lang: IDL set to null should not throw 
PASS var.lang: IDL set to null followed by getAttribute() 
PASS var.lang: IDL set to null followed by IDL get 
PASS var.lang: IDL set to object "test-toString" should not throw 
PASS var.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS var.lang: IDL set to object "test-toString" followed by IDL get 
PASS var.lang: IDL set to object "test-valueOf" should not throw 
PASS var.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS var.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS var.dir: typeof IDL attribute 
PASS var.dir: IDL get with DOM attribute unset 
PASS var.dir: setAttribute() to "" followed by getAttribute() 
PASS var.dir: setAttribute() to "" followed by IDL get 
PASS var.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS var.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS var.dir: setAttribute() to undefined followed by getAttribute() 
PASS var.dir: setAttribute() to undefined followed by IDL get 
PASS var.dir: setAttribute() to 7 followed by getAttribute() 
PASS var.dir: setAttribute() to 7 followed by IDL get 
PASS var.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS var.dir: setAttribute() to 1.5 followed by IDL get 
PASS var.dir: setAttribute() to true followed by getAttribute() 
PASS var.dir: setAttribute() to true followed by IDL get 
PASS var.dir: setAttribute() to false followed by getAttribute() 
PASS var.dir: setAttribute() to false followed by IDL get 
PASS var.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS var.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS var.dir: setAttribute() to NaN followed by getAttribute() 
PASS var.dir: setAttribute() to NaN followed by IDL get 
PASS var.dir: setAttribute() to Infinity followed by getAttribute() 
PASS var.dir: setAttribute() to Infinity followed by IDL get 
PASS var.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS var.dir: setAttribute() to -Infinity followed by IDL get 
PASS var.dir: setAttribute() to "\0" followed by getAttribute() 
PASS var.dir: setAttribute() to "\0" followed by IDL get 
PASS var.dir: setAttribute() to null followed by getAttribute() 
PASS var.dir: setAttribute() to null followed by IDL get 
PASS var.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS var.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS var.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS var.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS var.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS var.dir: setAttribute() to "ltr" followed by IDL get 
PASS var.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS var.dir: setAttribute() to "xltr" followed by IDL get 
PASS var.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS var.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS var.dir: setAttribute() to "tr" followed by getAttribute() 
PASS var.dir: setAttribute() to "tr" followed by IDL get 
PASS var.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS var.dir: setAttribute() to "LTR" followed by IDL get 
PASS var.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS var.dir: setAttribute() to "rtl" followed by IDL get 
PASS var.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS var.dir: setAttribute() to "xrtl" followed by IDL get 
PASS var.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS var.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS var.dir: setAttribute() to "tl" followed by getAttribute() 
PASS var.dir: setAttribute() to "tl" followed by IDL get 
PASS var.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS var.dir: setAttribute() to "RTL" followed by IDL get 
PASS var.dir: setAttribute() to "auto" followed by getAttribute() 
PASS var.dir: setAttribute() to "auto" followed by IDL get 
PASS var.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS var.dir: setAttribute() to "xauto" followed by IDL get 
PASS var.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS var.dir: setAttribute() to "auto\0" followed by IDL get 
PASS var.dir: setAttribute() to "uto" followed by getAttribute() 
PASS var.dir: setAttribute() to "uto" followed by IDL get 
PASS var.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS var.dir: setAttribute() to "AUTO" followed by IDL get 
PASS var.dir: IDL set to "" should not throw 
PASS var.dir: IDL set to "" followed by getAttribute() 
PASS var.dir: IDL set to "" followed by IDL get 
PASS var.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS var.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS var.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS var.dir: IDL set to undefined should not throw 
PASS var.dir: IDL set to undefined followed by getAttribute() 
PASS var.dir: IDL set to undefined followed by IDL get 
PASS var.dir: IDL set to 7 should not throw 
PASS var.dir: IDL set to 7 followed by getAttribute() 
PASS var.dir: IDL set to 7 followed by IDL get 
PASS var.dir: IDL set to 1.5 should not throw 
PASS var.dir: IDL set to 1.5 followed by getAttribute() 
PASS var.dir: IDL set to 1.5 followed by IDL get 
PASS var.dir: IDL set to true should not throw 
PASS var.dir: IDL set to true followed by getAttribute() 
PASS var.dir: IDL set to true followed by IDL get 
PASS var.dir: IDL set to false should not throw 
PASS var.dir: IDL set to false followed by getAttribute() 
PASS var.dir: IDL set to false followed by IDL get 
PASS var.dir: IDL set to object "[object Object]" should not throw 
PASS var.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS var.dir: IDL set to object "[object Object]" followed by IDL get 
PASS var.dir: IDL set to NaN should not throw 
PASS var.dir: IDL set to NaN followed by getAttribute() 
PASS var.dir: IDL set to NaN followed by IDL get 
PASS var.dir: IDL set to Infinity should not throw 
PASS var.dir: IDL set to Infinity followed by getAttribute() 
PASS var.dir: IDL set to Infinity followed by IDL get 
PASS var.dir: IDL set to -Infinity should not throw 
PASS var.dir: IDL set to -Infinity followed by getAttribute() 
PASS var.dir: IDL set to -Infinity followed by IDL get 
PASS var.dir: IDL set to "\0" should not throw 
PASS var.dir: IDL set to "\0" followed by getAttribute() 
PASS var.dir: IDL set to "\0" followed by IDL get 
PASS var.dir: IDL set to null should not throw 
PASS var.dir: IDL set to null followed by IDL get 
PASS var.dir: IDL set to object "test-toString" should not throw 
PASS var.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS var.dir: IDL set to object "test-toString" followed by IDL get 
PASS var.dir: IDL set to object "test-valueOf" should not throw 
PASS var.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS var.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS var.dir: IDL set to "ltr" should not throw 
PASS var.dir: IDL set to "ltr" followed by getAttribute() 
PASS var.dir: IDL set to "ltr" followed by IDL get 
PASS var.dir: IDL set to "xltr" should not throw 
PASS var.dir: IDL set to "xltr" followed by getAttribute() 
PASS var.dir: IDL set to "xltr" followed by IDL get 
PASS var.dir: IDL set to "ltr\0" should not throw 
PASS var.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS var.dir: IDL set to "ltr\0" followed by IDL get 
PASS var.dir: IDL set to "tr" should not throw 
PASS var.dir: IDL set to "tr" followed by getAttribute() 
PASS var.dir: IDL set to "tr" followed by IDL get 
PASS var.dir: IDL set to "LTR" should not throw 
PASS var.dir: IDL set to "LTR" followed by getAttribute() 
PASS var.dir: IDL set to "LTR" followed by IDL get 
PASS var.dir: IDL set to "rtl" should not throw 
PASS var.dir: IDL set to "rtl" followed by getAttribute() 
PASS var.dir: IDL set to "rtl" followed by IDL get 
PASS var.dir: IDL set to "xrtl" should not throw 
PASS var.dir: IDL set to "xrtl" followed by getAttribute() 
PASS var.dir: IDL set to "xrtl" followed by IDL get 
PASS var.dir: IDL set to "rtl\0" should not throw 
PASS var.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS var.dir: IDL set to "rtl\0" followed by IDL get 
PASS var.dir: IDL set to "tl" should not throw 
PASS var.dir: IDL set to "tl" followed by getAttribute() 
PASS var.dir: IDL set to "tl" followed by IDL get 
PASS var.dir: IDL set to "RTL" should not throw 
PASS var.dir: IDL set to "RTL" followed by getAttribute() 
PASS var.dir: IDL set to "RTL" followed by IDL get 
PASS var.dir: IDL set to "auto" should not throw 
PASS var.dir: IDL set to "auto" followed by getAttribute() 
PASS var.dir: IDL set to "auto" followed by IDL get 
PASS var.dir: IDL set to "xauto" should not throw 
PASS var.dir: IDL set to "xauto" followed by getAttribute() 
PASS var.dir: IDL set to "xauto" followed by IDL get 
PASS var.dir: IDL set to "auto\0" should not throw 
PASS var.dir: IDL set to "auto\0" followed by getAttribute() 
PASS var.dir: IDL set to "auto\0" followed by IDL get 
PASS var.dir: IDL set to "uto" should not throw 
PASS var.dir: IDL set to "uto" followed by getAttribute() 
PASS var.dir: IDL set to "uto" followed by IDL get 
PASS var.dir: IDL set to "AUTO" should not throw 
PASS var.dir: IDL set to "AUTO" followed by getAttribute() 
PASS var.dir: IDL set to "AUTO" followed by IDL get 
PASS var.className (<var class>): typeof IDL attribute 
PASS var.className (<var class>): IDL get with DOM attribute unset 
PASS var.className (<var class>): setAttribute() to "" followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to "" followed by IDL get 
PASS var.className (<var class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS var.className (<var class>): setAttribute() to undefined followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to undefined followed by IDL get 
PASS var.className (<var class>): setAttribute() to 7 followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to 7 followed by IDL get 
PASS var.className (<var class>): setAttribute() to 1.5 followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to 1.5 followed by IDL get 
PASS var.className (<var class>): setAttribute() to true followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to true followed by IDL get 
PASS var.className (<var class>): setAttribute() to false followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to false followed by IDL get 
PASS var.className (<var class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS var.className (<var class>): setAttribute() to NaN followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to NaN followed by IDL get 
PASS var.className (<var class>): setAttribute() to Infinity followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to Infinity followed by IDL get 
PASS var.className (<var class>): setAttribute() to -Infinity followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to -Infinity followed by IDL get 
PASS var.className (<var class>): setAttribute() to "\0" followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to "\0" followed by IDL get 
PASS var.className (<var class>): setAttribute() to null followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to null followed by IDL get 
PASS var.className (<var class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to object "test-toString" followed by IDL get 
PASS var.className (<var class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS var.className (<var class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS var.className (<var class>): IDL set to "" should not throw 
PASS var.className (<var class>): IDL set to "" followed by getAttribute() 
PASS var.className (<var class>): IDL set to "" followed by IDL get 
PASS var.className (<var class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS var.className (<var class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS var.className (<var class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS var.className (<var class>): IDL set to undefined should not throw 
PASS var.className (<var class>): IDL set to undefined followed by getAttribute() 
PASS var.className (<var class>): IDL set to undefined followed by IDL get 
PASS var.className (<var class>): IDL set to 7 should not throw 
PASS var.className (<var class>): IDL set to 7 followed by getAttribute() 
PASS var.className (<var class>): IDL set to 7 followed by IDL get 
PASS var.className (<var class>): IDL set to 1.5 should not throw 
PASS var.className (<var class>): IDL set to 1.5 followed by getAttribute() 
PASS var.className (<var class>): IDL set to 1.5 followed by IDL get 
PASS var.className (<var class>): IDL set to true should not throw 
PASS var.className (<var class>): IDL set to true followed by getAttribute() 
PASS var.className (<var class>): IDL set to true followed by IDL get 
PASS var.className (<var class>): IDL set to false should not throw 
PASS var.className (<var class>): IDL set to false followed by getAttribute() 
PASS var.className (<var class>): IDL set to false followed by IDL get 
PASS var.className (<var class>): IDL set to object "[object Object]" should not throw 
PASS var.className (<var class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS var.className (<var class>): IDL set to object "[object Object]" followed by IDL get 
PASS var.className (<var class>): IDL set to NaN should not throw 
PASS var.className (<var class>): IDL set to NaN followed by getAttribute() 
PASS var.className (<var class>): IDL set to NaN followed by IDL get 
PASS var.className (<var class>): IDL set to Infinity should not throw 
PASS var.className (<var class>): IDL set to Infinity followed by getAttribute() 
PASS var.className (<var class>): IDL set to Infinity followed by IDL get 
PASS var.className (<var class>): IDL set to -Infinity should not throw 
PASS var.className (<var class>): IDL set to -Infinity followed by getAttribute() 
PASS var.className (<var class>): IDL set to -Infinity followed by IDL get 
PASS var.className (<var class>): IDL set to "\0" should not throw 
PASS var.className (<var class>): IDL set to "\0" followed by getAttribute() 
PASS var.className (<var class>): IDL set to "\0" followed by IDL get 
PASS var.className (<var class>): IDL set to null should not throw 
PASS var.className (<var class>): IDL set to null followed by getAttribute() 
PASS var.className (<var class>): IDL set to null followed by IDL get 
PASS var.className (<var class>): IDL set to object "test-toString" should not throw 
PASS var.className (<var class>): IDL set to object "test-toString" followed by getAttribute() 
PASS var.className (<var class>): IDL set to object "test-toString" followed by IDL get 
PASS var.className (<var class>): IDL set to object "test-valueOf" should not throw 
PASS var.className (<var class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS var.className (<var class>): IDL set to object "test-valueOf" followed by IDL get 
PASS var.hidden: typeof IDL attribute 
PASS var.hidden: IDL get with DOM attribute unset 
PASS var.hidden: setAttribute() to "" followed by getAttribute() 
PASS var.hidden: setAttribute() to "" followed by IDL get 
PASS var.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS var.hidden: setAttribute() to " foo " followed by IDL get 
PASS var.hidden: setAttribute() to undefined followed by getAttribute() 
PASS var.hidden: setAttribute() to undefined followed by IDL get 
PASS var.hidden: setAttribute() to null followed by getAttribute() 
PASS var.hidden: setAttribute() to null followed by IDL get 
PASS var.hidden: setAttribute() to 7 followed by getAttribute() 
PASS var.hidden: setAttribute() to 7 followed by IDL get 
PASS var.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS var.hidden: setAttribute() to 1.5 followed by IDL get 
PASS var.hidden: setAttribute() to true followed by getAttribute() 
PASS var.hidden: setAttribute() to true followed by IDL get 
PASS var.hidden: setAttribute() to false followed by getAttribute() 
PASS var.hidden: setAttribute() to false followed by IDL get 
PASS var.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS var.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS var.hidden: setAttribute() to NaN followed by getAttribute() 
PASS var.hidden: setAttribute() to NaN followed by IDL get 
PASS var.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS var.hidden: setAttribute() to Infinity followed by IDL get 
PASS var.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS var.hidden: setAttribute() to -Infinity followed by IDL get 
PASS var.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS var.hidden: setAttribute() to "\0" followed by IDL get 
PASS var.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS var.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS var.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS var.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS var.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS var.hidden: setAttribute() to "hidden" followed by IDL get 
PASS var.hidden: IDL set to "" should not throw 
PASS var.hidden: IDL set to "" followed by hasAttribute() 
PASS var.hidden: IDL set to "" followed by IDL get 
PASS var.hidden: IDL set to " foo " should not throw 
PASS var.hidden: IDL set to " foo " followed by hasAttribute() 
PASS var.hidden: IDL set to " foo " followed by IDL get 
PASS var.hidden: IDL set to undefined should not throw 
PASS var.hidden: IDL set to undefined followed by hasAttribute() 
PASS var.hidden: IDL set to undefined followed by IDL get 
PASS var.hidden: IDL set to null should not throw 
PASS var.hidden: IDL set to null followed by hasAttribute() 
PASS var.hidden: IDL set to null followed by IDL get 
PASS var.hidden: IDL set to 7 should not throw 
PASS var.hidden: IDL set to 7 followed by hasAttribute() 
PASS var.hidden: IDL set to 7 followed by IDL get 
PASS var.hidden: IDL set to 1.5 should not throw 
PASS var.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS var.hidden: IDL set to 1.5 followed by IDL get 
PASS var.hidden: IDL set to true should not throw 
PASS var.hidden: IDL set to true followed by hasAttribute() 
PASS var.hidden: IDL set to true followed by IDL get 
PASS var.hidden: IDL set to false should not throw 
PASS var.hidden: IDL set to false followed by hasAttribute() 
PASS var.hidden: IDL set to false followed by IDL get 
PASS var.hidden: IDL set to object "[object Object]" should not throw 
PASS var.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS var.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS var.hidden: IDL set to NaN should not throw 
PASS var.hidden: IDL set to NaN followed by hasAttribute() 
PASS var.hidden: IDL set to NaN followed by IDL get 
PASS var.hidden: IDL set to Infinity should not throw 
PASS var.hidden: IDL set to Infinity followed by hasAttribute() 
PASS var.hidden: IDL set to Infinity followed by IDL get 
PASS var.hidden: IDL set to -Infinity should not throw 
PASS var.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS var.hidden: IDL set to -Infinity followed by IDL get 
PASS var.hidden: IDL set to "\0" should not throw 
PASS var.hidden: IDL set to "\0" followed by hasAttribute() 
PASS var.hidden: IDL set to "\0" followed by IDL get 
PASS var.hidden: IDL set to object "test-toString" should not throw 
PASS var.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS var.hidden: IDL set to object "test-toString" followed by IDL get 
PASS var.hidden: IDL set to object "test-valueOf" should not throw 
PASS var.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS var.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS var.accessKey: typeof IDL attribute 
PASS var.accessKey: IDL get with DOM attribute unset 
PASS var.accessKey: setAttribute() to "" followed by getAttribute() 
PASS var.accessKey: setAttribute() to "" followed by IDL get 
PASS var.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS var.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS var.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS var.accessKey: setAttribute() to undefined followed by IDL get 
PASS var.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS var.accessKey: setAttribute() to 7 followed by IDL get 
PASS var.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS var.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS var.accessKey: setAttribute() to true followed by getAttribute() 
PASS var.accessKey: setAttribute() to true followed by IDL get 
PASS var.accessKey: setAttribute() to false followed by getAttribute() 
PASS var.accessKey: setAttribute() to false followed by IDL get 
PASS var.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS var.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS var.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS var.accessKey: setAttribute() to NaN followed by IDL get 
PASS var.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS var.accessKey: setAttribute() to Infinity followed by IDL get 
PASS var.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS var.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS var.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS var.accessKey: setAttribute() to "\0" followed by IDL get 
PASS var.accessKey: setAttribute() to null followed by getAttribute() 
PASS var.accessKey: setAttribute() to null followed by IDL get 
PASS var.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS var.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS var.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS var.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS var.accessKey: IDL set to "" should not throw 
PASS var.accessKey: IDL set to "" followed by getAttribute() 
PASS var.accessKey: IDL set to "" followed by IDL get 
PASS var.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS var.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS var.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS var.accessKey: IDL set to undefined should not throw 
PASS var.accessKey: IDL set to undefined followed by getAttribute() 
PASS var.accessKey: IDL set to undefined followed by IDL get 
PASS var.accessKey: IDL set to 7 should not throw 
PASS var.accessKey: IDL set to 7 followed by getAttribute() 
PASS var.accessKey: IDL set to 7 followed by IDL get 
PASS var.accessKey: IDL set to 1.5 should not throw 
PASS var.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS var.accessKey: IDL set to 1.5 followed by IDL get 
PASS var.accessKey: IDL set to true should not throw 
PASS var.accessKey: IDL set to true followed by getAttribute() 
PASS var.accessKey: IDL set to true followed by IDL get 
PASS var.accessKey: IDL set to false should not throw 
PASS var.accessKey: IDL set to false followed by getAttribute() 
PASS var.accessKey: IDL set to false followed by IDL get 
PASS var.accessKey: IDL set to object "[object Object]" should not throw 
PASS var.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS var.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS var.accessKey: IDL set to NaN should not throw 
PASS var.accessKey: IDL set to NaN followed by getAttribute() 
PASS var.accessKey: IDL set to NaN followed by IDL get 
PASS var.accessKey: IDL set to Infinity should not throw 
PASS var.accessKey: IDL set to Infinity followed by getAttribute() 
PASS var.accessKey: IDL set to Infinity followed by IDL get 
PASS var.accessKey: IDL set to -Infinity should not throw 
PASS var.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS var.accessKey: IDL set to -Infinity followed by IDL get 
PASS var.accessKey: IDL set to "\0" should not throw 
PASS var.accessKey: IDL set to "\0" followed by getAttribute() 
PASS var.accessKey: IDL set to "\0" followed by IDL get 
PASS var.accessKey: IDL set to null should not throw 
PASS var.accessKey: IDL set to null followed by getAttribute() 
PASS var.accessKey: IDL set to null followed by IDL get 
PASS var.accessKey: IDL set to object "test-toString" should not throw 
PASS var.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS var.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS var.accessKey: IDL set to object "test-valueOf" should not throw 
PASS var.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS var.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS var.tabIndex: typeof IDL attribute 
PASS var.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS var.tabIndex: setAttribute() to -36 followed by IDL get 
PASS var.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS var.tabIndex: setAttribute() to -1 followed by IDL get 
PASS var.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS var.tabIndex: setAttribute() to 0 followed by IDL get 
PASS var.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS var.tabIndex: setAttribute() to 1 followed by IDL get 
PASS var.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL var.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS var.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL var.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS var.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS var.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS var.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS var.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS var.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS var.tabIndex: setAttribute() to "0" followed by IDL get 
PASS var.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS var.tabIndex: setAttribute() to "1" followed by IDL get 
PASS var.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS var.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS var.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS var.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS var.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS var.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS var.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS var.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS var.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS var.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS var.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS var.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS var.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS var.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS var.tabIndex: IDL set to -36 should not throw 
PASS var.tabIndex: IDL set to -36 followed by getAttribute() 
PASS var.tabIndex: IDL set to -36 followed by IDL get 
PASS var.tabIndex: IDL set to -1 should not throw 
PASS var.tabIndex: IDL set to -1 followed by getAttribute() 
PASS var.tabIndex: IDL set to -1 followed by IDL get 
PASS var.tabIndex: IDL set to 0 should not throw 
PASS var.tabIndex: IDL set to 0 followed by getAttribute() 
PASS var.tabIndex: IDL set to 0 followed by IDL get 
PASS var.tabIndex: IDL set to 1 should not throw 
PASS var.tabIndex: IDL set to 1 followed by getAttribute() 
PASS var.tabIndex: IDL set to 1 followed by IDL get 
PASS var.tabIndex: IDL set to 2147483647 should not throw 
PASS var.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL var.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS var.tabIndex: IDL set to -2147483648 should not throw 
PASS var.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL var.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL var.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL var.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS var.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL var.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL var.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL var.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to null followed by getAttribute() 
FAIL var.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL var.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL var.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to true followed by getAttribute() 
FAIL var.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to false followed by getAttribute() 
FAIL var.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL var.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL var.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL var.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL var.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL var.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL var.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL var.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL var.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS var.itemScope: IDL set to "" should not throw 
FAIL var.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL var.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS var.itemScope: IDL set to " foo " should not throw 
PASS var.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL var.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS var.itemScope: IDL set to undefined should not throw 
FAIL var.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL var.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS var.itemScope: IDL set to null should not throw 
FAIL var.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL var.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS var.itemScope: IDL set to 7 should not throw 
PASS var.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL var.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS var.itemScope: IDL set to 1.5 should not throw 
PASS var.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL var.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS var.itemScope: IDL set to true should not throw 
PASS var.itemScope: IDL set to true followed by hasAttribute() 
PASS var.itemScope: IDL set to true followed by IDL get 
PASS var.itemScope: IDL set to false should not throw 
FAIL var.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS var.itemScope: IDL set to false followed by IDL get 
PASS var.itemScope: IDL set to object "[object Object]" should not throw 
PASS var.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL var.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS var.itemScope: IDL set to NaN should not throw 
FAIL var.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL var.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS var.itemScope: IDL set to Infinity should not throw 
PASS var.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL var.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS var.itemScope: IDL set to -Infinity should not throw 
PASS var.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL var.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS var.itemScope: IDL set to "\0" should not throw 
PASS var.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL var.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS var.itemScope: IDL set to object "test-toString" should not throw 
PASS var.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL var.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS var.itemScope: IDL set to object "test-valueOf" should not throw 
PASS var.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL var.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL var.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL var.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS var.itemId: setAttribute() to "" followed by getAttribute() 
FAIL var.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS var.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL var.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS var.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL var.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS var.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL var.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS var.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL var.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS var.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL var.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS var.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL var.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS var.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL var.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS var.itemId: setAttribute() to true followed by getAttribute() 
FAIL var.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS var.itemId: setAttribute() to false followed by getAttribute() 
FAIL var.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS var.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL var.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS var.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL var.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS var.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL var.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS var.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL var.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS var.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL var.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS var.itemId: setAttribute() to null followed by getAttribute() 
FAIL var.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS var.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL var.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS var.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL var.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS var.itemId: IDL set to "" should not throw 
FAIL var.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL var.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS var.itemId: IDL set to " foo " should not throw 
FAIL var.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL var.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS var.itemId: IDL set to "http://site.example/" should not throw 
FAIL var.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS var.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS var.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL var.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL var.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS var.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL var.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL var.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS var.itemId: IDL set to undefined should not throw 
FAIL var.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL var.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS var.itemId: IDL set to 7 should not throw 
FAIL var.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL var.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS var.itemId: IDL set to 1.5 should not throw 
FAIL var.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL var.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS var.itemId: IDL set to true should not throw 
FAIL var.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL var.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS var.itemId: IDL set to false should not throw 
FAIL var.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL var.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS var.itemId: IDL set to object "[object Object]" should not throw 
FAIL var.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL var.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS var.itemId: IDL set to NaN should not throw 
FAIL var.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL var.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS var.itemId: IDL set to Infinity should not throw 
FAIL var.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL var.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS var.itemId: IDL set to -Infinity should not throw 
FAIL var.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL var.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS var.itemId: IDL set to "\0" should not throw 
FAIL var.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL var.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS var.itemId: IDL set to null should not throw 
FAIL var.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL var.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS var.itemId: IDL set to object "test-toString" should not throw 
FAIL var.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL var.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS var.itemId: IDL set to object "test-valueOf" should not throw 
PASS var.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL var.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS samp.title: typeof IDL attribute 
PASS samp.title: IDL get with DOM attribute unset 
PASS samp.title: setAttribute() to "" followed by getAttribute() 
PASS samp.title: setAttribute() to "" followed by IDL get 
PASS samp.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS samp.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS samp.title: setAttribute() to undefined followed by getAttribute() 
PASS samp.title: setAttribute() to undefined followed by IDL get 
PASS samp.title: setAttribute() to 7 followed by getAttribute() 
PASS samp.title: setAttribute() to 7 followed by IDL get 
PASS samp.title: setAttribute() to 1.5 followed by getAttribute() 
PASS samp.title: setAttribute() to 1.5 followed by IDL get 
PASS samp.title: setAttribute() to true followed by getAttribute() 
PASS samp.title: setAttribute() to true followed by IDL get 
PASS samp.title: setAttribute() to false followed by getAttribute() 
PASS samp.title: setAttribute() to false followed by IDL get 
PASS samp.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS samp.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS samp.title: setAttribute() to NaN followed by getAttribute() 
PASS samp.title: setAttribute() to NaN followed by IDL get 
PASS samp.title: setAttribute() to Infinity followed by getAttribute() 
PASS samp.title: setAttribute() to Infinity followed by IDL get 
PASS samp.title: setAttribute() to -Infinity followed by getAttribute() 
PASS samp.title: setAttribute() to -Infinity followed by IDL get 
PASS samp.title: setAttribute() to "\0" followed by getAttribute() 
PASS samp.title: setAttribute() to "\0" followed by IDL get 
PASS samp.title: setAttribute() to null followed by getAttribute() 
PASS samp.title: setAttribute() to null followed by IDL get 
PASS samp.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS samp.title: setAttribute() to object "test-toString" followed by IDL get 
PASS samp.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS samp.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS samp.title: IDL set to "" should not throw 
PASS samp.title: IDL set to "" followed by getAttribute() 
PASS samp.title: IDL set to "" followed by IDL get 
PASS samp.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS samp.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS samp.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS samp.title: IDL set to undefined should not throw 
PASS samp.title: IDL set to undefined followed by getAttribute() 
PASS samp.title: IDL set to undefined followed by IDL get 
PASS samp.title: IDL set to 7 should not throw 
PASS samp.title: IDL set to 7 followed by getAttribute() 
PASS samp.title: IDL set to 7 followed by IDL get 
PASS samp.title: IDL set to 1.5 should not throw 
PASS samp.title: IDL set to 1.5 followed by getAttribute() 
PASS samp.title: IDL set to 1.5 followed by IDL get 
PASS samp.title: IDL set to true should not throw 
PASS samp.title: IDL set to true followed by getAttribute() 
PASS samp.title: IDL set to true followed by IDL get 
PASS samp.title: IDL set to false should not throw 
PASS samp.title: IDL set to false followed by getAttribute() 
PASS samp.title: IDL set to false followed by IDL get 
PASS samp.title: IDL set to object "[object Object]" should not throw 
PASS samp.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS samp.title: IDL set to object "[object Object]" followed by IDL get 
PASS samp.title: IDL set to NaN should not throw 
PASS samp.title: IDL set to NaN followed by getAttribute() 
PASS samp.title: IDL set to NaN followed by IDL get 
PASS samp.title: IDL set to Infinity should not throw 
PASS samp.title: IDL set to Infinity followed by getAttribute() 
PASS samp.title: IDL set to Infinity followed by IDL get 
PASS samp.title: IDL set to -Infinity should not throw 
PASS samp.title: IDL set to -Infinity followed by getAttribute() 
PASS samp.title: IDL set to -Infinity followed by IDL get 
PASS samp.title: IDL set to "\0" should not throw 
PASS samp.title: IDL set to "\0" followed by getAttribute() 
PASS samp.title: IDL set to "\0" followed by IDL get 
PASS samp.title: IDL set to null should not throw 
PASS samp.title: IDL set to null followed by getAttribute() 
PASS samp.title: IDL set to null followed by IDL get 
PASS samp.title: IDL set to object "test-toString" should not throw 
PASS samp.title: IDL set to object "test-toString" followed by getAttribute() 
PASS samp.title: IDL set to object "test-toString" followed by IDL get 
PASS samp.title: IDL set to object "test-valueOf" should not throw 
PASS samp.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS samp.title: IDL set to object "test-valueOf" followed by IDL get 
PASS samp.lang: typeof IDL attribute 
PASS samp.lang: IDL get with DOM attribute unset 
PASS samp.lang: setAttribute() to "" followed by getAttribute() 
PASS samp.lang: setAttribute() to "" followed by IDL get 
PASS samp.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS samp.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS samp.lang: setAttribute() to undefined followed by getAttribute() 
PASS samp.lang: setAttribute() to undefined followed by IDL get 
PASS samp.lang: setAttribute() to 7 followed by getAttribute() 
PASS samp.lang: setAttribute() to 7 followed by IDL get 
PASS samp.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS samp.lang: setAttribute() to 1.5 followed by IDL get 
PASS samp.lang: setAttribute() to true followed by getAttribute() 
PASS samp.lang: setAttribute() to true followed by IDL get 
PASS samp.lang: setAttribute() to false followed by getAttribute() 
PASS samp.lang: setAttribute() to false followed by IDL get 
PASS samp.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS samp.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS samp.lang: setAttribute() to NaN followed by getAttribute() 
PASS samp.lang: setAttribute() to NaN followed by IDL get 
PASS samp.lang: setAttribute() to Infinity followed by getAttribute() 
PASS samp.lang: setAttribute() to Infinity followed by IDL get 
PASS samp.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS samp.lang: setAttribute() to -Infinity followed by IDL get 
PASS samp.lang: setAttribute() to "\0" followed by getAttribute() 
PASS samp.lang: setAttribute() to "\0" followed by IDL get 
PASS samp.lang: setAttribute() to null followed by getAttribute() 
PASS samp.lang: setAttribute() to null followed by IDL get 
PASS samp.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS samp.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS samp.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS samp.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS samp.lang: IDL set to "" should not throw 
PASS samp.lang: IDL set to "" followed by getAttribute() 
PASS samp.lang: IDL set to "" followed by IDL get 
PASS samp.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS samp.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS samp.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS samp.lang: IDL set to undefined should not throw 
PASS samp.lang: IDL set to undefined followed by getAttribute() 
PASS samp.lang: IDL set to undefined followed by IDL get 
PASS samp.lang: IDL set to 7 should not throw 
PASS samp.lang: IDL set to 7 followed by getAttribute() 
PASS samp.lang: IDL set to 7 followed by IDL get 
PASS samp.lang: IDL set to 1.5 should not throw 
PASS samp.lang: IDL set to 1.5 followed by getAttribute() 
PASS samp.lang: IDL set to 1.5 followed by IDL get 
PASS samp.lang: IDL set to true should not throw 
PASS samp.lang: IDL set to true followed by getAttribute() 
PASS samp.lang: IDL set to true followed by IDL get 
PASS samp.lang: IDL set to false should not throw 
PASS samp.lang: IDL set to false followed by getAttribute() 
PASS samp.lang: IDL set to false followed by IDL get 
PASS samp.lang: IDL set to object "[object Object]" should not throw 
PASS samp.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS samp.lang: IDL set to object "[object Object]" followed by IDL get 
PASS samp.lang: IDL set to NaN should not throw 
PASS samp.lang: IDL set to NaN followed by getAttribute() 
PASS samp.lang: IDL set to NaN followed by IDL get 
PASS samp.lang: IDL set to Infinity should not throw 
PASS samp.lang: IDL set to Infinity followed by getAttribute() 
PASS samp.lang: IDL set to Infinity followed by IDL get 
PASS samp.lang: IDL set to -Infinity should not throw 
PASS samp.lang: IDL set to -Infinity followed by getAttribute() 
PASS samp.lang: IDL set to -Infinity followed by IDL get 
PASS samp.lang: IDL set to "\0" should not throw 
PASS samp.lang: IDL set to "\0" followed by getAttribute() 
PASS samp.lang: IDL set to "\0" followed by IDL get 
PASS samp.lang: IDL set to null should not throw 
PASS samp.lang: IDL set to null followed by getAttribute() 
PASS samp.lang: IDL set to null followed by IDL get 
PASS samp.lang: IDL set to object "test-toString" should not throw 
PASS samp.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS samp.lang: IDL set to object "test-toString" followed by IDL get 
PASS samp.lang: IDL set to object "test-valueOf" should not throw 
PASS samp.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS samp.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS samp.dir: typeof IDL attribute 
PASS samp.dir: IDL get with DOM attribute unset 
PASS samp.dir: setAttribute() to "" followed by getAttribute() 
PASS samp.dir: setAttribute() to "" followed by IDL get 
PASS samp.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS samp.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS samp.dir: setAttribute() to undefined followed by getAttribute() 
PASS samp.dir: setAttribute() to undefined followed by IDL get 
PASS samp.dir: setAttribute() to 7 followed by getAttribute() 
PASS samp.dir: setAttribute() to 7 followed by IDL get 
PASS samp.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS samp.dir: setAttribute() to 1.5 followed by IDL get 
PASS samp.dir: setAttribute() to true followed by getAttribute() 
PASS samp.dir: setAttribute() to true followed by IDL get 
PASS samp.dir: setAttribute() to false followed by getAttribute() 
PASS samp.dir: setAttribute() to false followed by IDL get 
PASS samp.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS samp.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS samp.dir: setAttribute() to NaN followed by getAttribute() 
PASS samp.dir: setAttribute() to NaN followed by IDL get 
PASS samp.dir: setAttribute() to Infinity followed by getAttribute() 
PASS samp.dir: setAttribute() to Infinity followed by IDL get 
PASS samp.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS samp.dir: setAttribute() to -Infinity followed by IDL get 
PASS samp.dir: setAttribute() to "\0" followed by getAttribute() 
PASS samp.dir: setAttribute() to "\0" followed by IDL get 
PASS samp.dir: setAttribute() to null followed by getAttribute() 
PASS samp.dir: setAttribute() to null followed by IDL get 
PASS samp.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS samp.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS samp.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS samp.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS samp.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS samp.dir: setAttribute() to "ltr" followed by IDL get 
PASS samp.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS samp.dir: setAttribute() to "xltr" followed by IDL get 
PASS samp.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS samp.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS samp.dir: setAttribute() to "tr" followed by getAttribute() 
PASS samp.dir: setAttribute() to "tr" followed by IDL get 
PASS samp.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS samp.dir: setAttribute() to "LTR" followed by IDL get 
PASS samp.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS samp.dir: setAttribute() to "rtl" followed by IDL get 
PASS samp.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS samp.dir: setAttribute() to "xrtl" followed by IDL get 
PASS samp.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS samp.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS samp.dir: setAttribute() to "tl" followed by getAttribute() 
PASS samp.dir: setAttribute() to "tl" followed by IDL get 
PASS samp.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS samp.dir: setAttribute() to "RTL" followed by IDL get 
PASS samp.dir: setAttribute() to "auto" followed by getAttribute() 
PASS samp.dir: setAttribute() to "auto" followed by IDL get 
PASS samp.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS samp.dir: setAttribute() to "xauto" followed by IDL get 
PASS samp.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS samp.dir: setAttribute() to "auto\0" followed by IDL get 
PASS samp.dir: setAttribute() to "uto" followed by getAttribute() 
PASS samp.dir: setAttribute() to "uto" followed by IDL get 
PASS samp.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS samp.dir: setAttribute() to "AUTO" followed by IDL get 
PASS samp.dir: IDL set to "" should not throw 
PASS samp.dir: IDL set to "" followed by getAttribute() 
PASS samp.dir: IDL set to "" followed by IDL get 
PASS samp.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS samp.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS samp.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS samp.dir: IDL set to undefined should not throw 
PASS samp.dir: IDL set to undefined followed by getAttribute() 
PASS samp.dir: IDL set to undefined followed by IDL get 
PASS samp.dir: IDL set to 7 should not throw 
PASS samp.dir: IDL set to 7 followed by getAttribute() 
PASS samp.dir: IDL set to 7 followed by IDL get 
PASS samp.dir: IDL set to 1.5 should not throw 
PASS samp.dir: IDL set to 1.5 followed by getAttribute() 
PASS samp.dir: IDL set to 1.5 followed by IDL get 
PASS samp.dir: IDL set to true should not throw 
PASS samp.dir: IDL set to true followed by getAttribute() 
PASS samp.dir: IDL set to true followed by IDL get 
PASS samp.dir: IDL set to false should not throw 
PASS samp.dir: IDL set to false followed by getAttribute() 
PASS samp.dir: IDL set to false followed by IDL get 
PASS samp.dir: IDL set to object "[object Object]" should not throw 
PASS samp.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS samp.dir: IDL set to object "[object Object]" followed by IDL get 
PASS samp.dir: IDL set to NaN should not throw 
PASS samp.dir: IDL set to NaN followed by getAttribute() 
PASS samp.dir: IDL set to NaN followed by IDL get 
PASS samp.dir: IDL set to Infinity should not throw 
PASS samp.dir: IDL set to Infinity followed by getAttribute() 
PASS samp.dir: IDL set to Infinity followed by IDL get 
PASS samp.dir: IDL set to -Infinity should not throw 
PASS samp.dir: IDL set to -Infinity followed by getAttribute() 
PASS samp.dir: IDL set to -Infinity followed by IDL get 
PASS samp.dir: IDL set to "\0" should not throw 
PASS samp.dir: IDL set to "\0" followed by getAttribute() 
PASS samp.dir: IDL set to "\0" followed by IDL get 
PASS samp.dir: IDL set to null should not throw 
PASS samp.dir: IDL set to null followed by IDL get 
PASS samp.dir: IDL set to object "test-toString" should not throw 
PASS samp.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS samp.dir: IDL set to object "test-toString" followed by IDL get 
PASS samp.dir: IDL set to object "test-valueOf" should not throw 
PASS samp.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS samp.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS samp.dir: IDL set to "ltr" should not throw 
PASS samp.dir: IDL set to "ltr" followed by getAttribute() 
PASS samp.dir: IDL set to "ltr" followed by IDL get 
PASS samp.dir: IDL set to "xltr" should not throw 
PASS samp.dir: IDL set to "xltr" followed by getAttribute() 
PASS samp.dir: IDL set to "xltr" followed by IDL get 
PASS samp.dir: IDL set to "ltr\0" should not throw 
PASS samp.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS samp.dir: IDL set to "ltr\0" followed by IDL get 
PASS samp.dir: IDL set to "tr" should not throw 
PASS samp.dir: IDL set to "tr" followed by getAttribute() 
PASS samp.dir: IDL set to "tr" followed by IDL get 
PASS samp.dir: IDL set to "LTR" should not throw 
PASS samp.dir: IDL set to "LTR" followed by getAttribute() 
PASS samp.dir: IDL set to "LTR" followed by IDL get 
PASS samp.dir: IDL set to "rtl" should not throw 
PASS samp.dir: IDL set to "rtl" followed by getAttribute() 
PASS samp.dir: IDL set to "rtl" followed by IDL get 
PASS samp.dir: IDL set to "xrtl" should not throw 
PASS samp.dir: IDL set to "xrtl" followed by getAttribute() 
PASS samp.dir: IDL set to "xrtl" followed by IDL get 
PASS samp.dir: IDL set to "rtl\0" should not throw 
PASS samp.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS samp.dir: IDL set to "rtl\0" followed by IDL get 
PASS samp.dir: IDL set to "tl" should not throw 
PASS samp.dir: IDL set to "tl" followed by getAttribute() 
PASS samp.dir: IDL set to "tl" followed by IDL get 
PASS samp.dir: IDL set to "RTL" should not throw 
PASS samp.dir: IDL set to "RTL" followed by getAttribute() 
PASS samp.dir: IDL set to "RTL" followed by IDL get 
PASS samp.dir: IDL set to "auto" should not throw 
PASS samp.dir: IDL set to "auto" followed by getAttribute() 
PASS samp.dir: IDL set to "auto" followed by IDL get 
PASS samp.dir: IDL set to "xauto" should not throw 
PASS samp.dir: IDL set to "xauto" followed by getAttribute() 
PASS samp.dir: IDL set to "xauto" followed by IDL get 
PASS samp.dir: IDL set to "auto\0" should not throw 
PASS samp.dir: IDL set to "auto\0" followed by getAttribute() 
PASS samp.dir: IDL set to "auto\0" followed by IDL get 
PASS samp.dir: IDL set to "uto" should not throw 
PASS samp.dir: IDL set to "uto" followed by getAttribute() 
PASS samp.dir: IDL set to "uto" followed by IDL get 
PASS samp.dir: IDL set to "AUTO" should not throw 
PASS samp.dir: IDL set to "AUTO" followed by getAttribute() 
PASS samp.dir: IDL set to "AUTO" followed by IDL get 
PASS samp.className (<samp class>): typeof IDL attribute 
PASS samp.className (<samp class>): IDL get with DOM attribute unset 
PASS samp.className (<samp class>): setAttribute() to "" followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to "" followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to undefined followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to undefined followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to 7 followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to 7 followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to 1.5 followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to 1.5 followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to true followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to true followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to false followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to false followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to NaN followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to NaN followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to Infinity followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to Infinity followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to -Infinity followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to -Infinity followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to "\0" followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to "\0" followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to null followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to null followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to object "test-toString" followed by IDL get 
PASS samp.className (<samp class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS samp.className (<samp class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS samp.className (<samp class>): IDL set to "" should not throw 
PASS samp.className (<samp class>): IDL set to "" followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to "" followed by IDL get 
PASS samp.className (<samp class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS samp.className (<samp class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS samp.className (<samp class>): IDL set to undefined should not throw 
PASS samp.className (<samp class>): IDL set to undefined followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to undefined followed by IDL get 
PASS samp.className (<samp class>): IDL set to 7 should not throw 
PASS samp.className (<samp class>): IDL set to 7 followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to 7 followed by IDL get 
PASS samp.className (<samp class>): IDL set to 1.5 should not throw 
PASS samp.className (<samp class>): IDL set to 1.5 followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to 1.5 followed by IDL get 
PASS samp.className (<samp class>): IDL set to true should not throw 
PASS samp.className (<samp class>): IDL set to true followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to true followed by IDL get 
PASS samp.className (<samp class>): IDL set to false should not throw 
PASS samp.className (<samp class>): IDL set to false followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to false followed by IDL get 
PASS samp.className (<samp class>): IDL set to object "[object Object]" should not throw 
PASS samp.className (<samp class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to object "[object Object]" followed by IDL get 
PASS samp.className (<samp class>): IDL set to NaN should not throw 
PASS samp.className (<samp class>): IDL set to NaN followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to NaN followed by IDL get 
PASS samp.className (<samp class>): IDL set to Infinity should not throw 
PASS samp.className (<samp class>): IDL set to Infinity followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to Infinity followed by IDL get 
PASS samp.className (<samp class>): IDL set to -Infinity should not throw 
PASS samp.className (<samp class>): IDL set to -Infinity followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to -Infinity followed by IDL get 
PASS samp.className (<samp class>): IDL set to "\0" should not throw 
PASS samp.className (<samp class>): IDL set to "\0" followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to "\0" followed by IDL get 
PASS samp.className (<samp class>): IDL set to null should not throw 
PASS samp.className (<samp class>): IDL set to null followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to null followed by IDL get 
PASS samp.className (<samp class>): IDL set to object "test-toString" should not throw 
PASS samp.className (<samp class>): IDL set to object "test-toString" followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to object "test-toString" followed by IDL get 
PASS samp.className (<samp class>): IDL set to object "test-valueOf" should not throw 
PASS samp.className (<samp class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS samp.className (<samp class>): IDL set to object "test-valueOf" followed by IDL get 
PASS samp.hidden: typeof IDL attribute 
PASS samp.hidden: IDL get with DOM attribute unset 
PASS samp.hidden: setAttribute() to "" followed by getAttribute() 
PASS samp.hidden: setAttribute() to "" followed by IDL get 
PASS samp.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS samp.hidden: setAttribute() to " foo " followed by IDL get 
PASS samp.hidden: setAttribute() to undefined followed by getAttribute() 
PASS samp.hidden: setAttribute() to undefined followed by IDL get 
PASS samp.hidden: setAttribute() to null followed by getAttribute() 
PASS samp.hidden: setAttribute() to null followed by IDL get 
PASS samp.hidden: setAttribute() to 7 followed by getAttribute() 
PASS samp.hidden: setAttribute() to 7 followed by IDL get 
PASS samp.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS samp.hidden: setAttribute() to 1.5 followed by IDL get 
PASS samp.hidden: setAttribute() to true followed by getAttribute() 
PASS samp.hidden: setAttribute() to true followed by IDL get 
PASS samp.hidden: setAttribute() to false followed by getAttribute() 
PASS samp.hidden: setAttribute() to false followed by IDL get 
PASS samp.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS samp.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS samp.hidden: setAttribute() to NaN followed by getAttribute() 
PASS samp.hidden: setAttribute() to NaN followed by IDL get 
PASS samp.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS samp.hidden: setAttribute() to Infinity followed by IDL get 
PASS samp.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS samp.hidden: setAttribute() to -Infinity followed by IDL get 
PASS samp.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS samp.hidden: setAttribute() to "\0" followed by IDL get 
PASS samp.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS samp.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS samp.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS samp.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS samp.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS samp.hidden: setAttribute() to "hidden" followed by IDL get 
PASS samp.hidden: IDL set to "" should not throw 
PASS samp.hidden: IDL set to "" followed by hasAttribute() 
PASS samp.hidden: IDL set to "" followed by IDL get 
PASS samp.hidden: IDL set to " foo " should not throw 
PASS samp.hidden: IDL set to " foo " followed by hasAttribute() 
PASS samp.hidden: IDL set to " foo " followed by IDL get 
PASS samp.hidden: IDL set to undefined should not throw 
PASS samp.hidden: IDL set to undefined followed by hasAttribute() 
PASS samp.hidden: IDL set to undefined followed by IDL get 
PASS samp.hidden: IDL set to null should not throw 
PASS samp.hidden: IDL set to null followed by hasAttribute() 
PASS samp.hidden: IDL set to null followed by IDL get 
PASS samp.hidden: IDL set to 7 should not throw 
PASS samp.hidden: IDL set to 7 followed by hasAttribute() 
PASS samp.hidden: IDL set to 7 followed by IDL get 
PASS samp.hidden: IDL set to 1.5 should not throw 
PASS samp.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS samp.hidden: IDL set to 1.5 followed by IDL get 
PASS samp.hidden: IDL set to true should not throw 
PASS samp.hidden: IDL set to true followed by hasAttribute() 
PASS samp.hidden: IDL set to true followed by IDL get 
PASS samp.hidden: IDL set to false should not throw 
PASS samp.hidden: IDL set to false followed by hasAttribute() 
PASS samp.hidden: IDL set to false followed by IDL get 
PASS samp.hidden: IDL set to object "[object Object]" should not throw 
PASS samp.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS samp.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS samp.hidden: IDL set to NaN should not throw 
PASS samp.hidden: IDL set to NaN followed by hasAttribute() 
PASS samp.hidden: IDL set to NaN followed by IDL get 
PASS samp.hidden: IDL set to Infinity should not throw 
PASS samp.hidden: IDL set to Infinity followed by hasAttribute() 
PASS samp.hidden: IDL set to Infinity followed by IDL get 
PASS samp.hidden: IDL set to -Infinity should not throw 
PASS samp.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS samp.hidden: IDL set to -Infinity followed by IDL get 
PASS samp.hidden: IDL set to "\0" should not throw 
PASS samp.hidden: IDL set to "\0" followed by hasAttribute() 
PASS samp.hidden: IDL set to "\0" followed by IDL get 
PASS samp.hidden: IDL set to object "test-toString" should not throw 
PASS samp.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS samp.hidden: IDL set to object "test-toString" followed by IDL get 
PASS samp.hidden: IDL set to object "test-valueOf" should not throw 
PASS samp.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS samp.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS samp.accessKey: typeof IDL attribute 
PASS samp.accessKey: IDL get with DOM attribute unset 
PASS samp.accessKey: setAttribute() to "" followed by getAttribute() 
PASS samp.accessKey: setAttribute() to "" followed by IDL get 
PASS samp.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS samp.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS samp.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS samp.accessKey: setAttribute() to undefined followed by IDL get 
PASS samp.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS samp.accessKey: setAttribute() to 7 followed by IDL get 
PASS samp.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS samp.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS samp.accessKey: setAttribute() to true followed by getAttribute() 
PASS samp.accessKey: setAttribute() to true followed by IDL get 
PASS samp.accessKey: setAttribute() to false followed by getAttribute() 
PASS samp.accessKey: setAttribute() to false followed by IDL get 
PASS samp.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS samp.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS samp.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS samp.accessKey: setAttribute() to NaN followed by IDL get 
PASS samp.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS samp.accessKey: setAttribute() to Infinity followed by IDL get 
PASS samp.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS samp.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS samp.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS samp.accessKey: setAttribute() to "\0" followed by IDL get 
PASS samp.accessKey: setAttribute() to null followed by getAttribute() 
PASS samp.accessKey: setAttribute() to null followed by IDL get 
PASS samp.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS samp.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS samp.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS samp.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS samp.accessKey: IDL set to "" should not throw 
PASS samp.accessKey: IDL set to "" followed by getAttribute() 
PASS samp.accessKey: IDL set to "" followed by IDL get 
PASS samp.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS samp.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS samp.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS samp.accessKey: IDL set to undefined should not throw 
PASS samp.accessKey: IDL set to undefined followed by getAttribute() 
PASS samp.accessKey: IDL set to undefined followed by IDL get 
PASS samp.accessKey: IDL set to 7 should not throw 
PASS samp.accessKey: IDL set to 7 followed by getAttribute() 
PASS samp.accessKey: IDL set to 7 followed by IDL get 
PASS samp.accessKey: IDL set to 1.5 should not throw 
PASS samp.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS samp.accessKey: IDL set to 1.5 followed by IDL get 
PASS samp.accessKey: IDL set to true should not throw 
PASS samp.accessKey: IDL set to true followed by getAttribute() 
PASS samp.accessKey: IDL set to true followed by IDL get 
PASS samp.accessKey: IDL set to false should not throw 
PASS samp.accessKey: IDL set to false followed by getAttribute() 
PASS samp.accessKey: IDL set to false followed by IDL get 
PASS samp.accessKey: IDL set to object "[object Object]" should not throw 
PASS samp.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS samp.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS samp.accessKey: IDL set to NaN should not throw 
PASS samp.accessKey: IDL set to NaN followed by getAttribute() 
PASS samp.accessKey: IDL set to NaN followed by IDL get 
PASS samp.accessKey: IDL set to Infinity should not throw 
PASS samp.accessKey: IDL set to Infinity followed by getAttribute() 
PASS samp.accessKey: IDL set to Infinity followed by IDL get 
PASS samp.accessKey: IDL set to -Infinity should not throw 
PASS samp.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS samp.accessKey: IDL set to -Infinity followed by IDL get 
PASS samp.accessKey: IDL set to "\0" should not throw 
PASS samp.accessKey: IDL set to "\0" followed by getAttribute() 
PASS samp.accessKey: IDL set to "\0" followed by IDL get 
PASS samp.accessKey: IDL set to null should not throw 
PASS samp.accessKey: IDL set to null followed by getAttribute() 
PASS samp.accessKey: IDL set to null followed by IDL get 
PASS samp.accessKey: IDL set to object "test-toString" should not throw 
PASS samp.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS samp.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS samp.accessKey: IDL set to object "test-valueOf" should not throw 
PASS samp.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS samp.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS samp.tabIndex: typeof IDL attribute 
PASS samp.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to -36 followed by IDL get 
PASS samp.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to -1 followed by IDL get 
PASS samp.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to 0 followed by IDL get 
PASS samp.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to 1 followed by IDL get 
PASS samp.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL samp.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS samp.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL samp.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS samp.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS samp.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS samp.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to "0" followed by IDL get 
PASS samp.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to "1" followed by IDL get 
PASS samp.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS samp.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS samp.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS samp.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS samp.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS samp.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS samp.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS samp.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS samp.tabIndex: IDL set to -36 should not throw 
PASS samp.tabIndex: IDL set to -36 followed by getAttribute() 
PASS samp.tabIndex: IDL set to -36 followed by IDL get 
PASS samp.tabIndex: IDL set to -1 should not throw 
PASS samp.tabIndex: IDL set to -1 followed by getAttribute() 
PASS samp.tabIndex: IDL set to -1 followed by IDL get 
PASS samp.tabIndex: IDL set to 0 should not throw 
PASS samp.tabIndex: IDL set to 0 followed by getAttribute() 
PASS samp.tabIndex: IDL set to 0 followed by IDL get 
PASS samp.tabIndex: IDL set to 1 should not throw 
PASS samp.tabIndex: IDL set to 1 followed by getAttribute() 
PASS samp.tabIndex: IDL set to 1 followed by IDL get 
PASS samp.tabIndex: IDL set to 2147483647 should not throw 
PASS samp.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL samp.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS samp.tabIndex: IDL set to -2147483648 should not throw 
PASS samp.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL samp.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL samp.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL samp.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS samp.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to null followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to true followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to false followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL samp.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS samp.itemScope: IDL set to "" should not throw 
FAIL samp.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL samp.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS samp.itemScope: IDL set to " foo " should not throw 
PASS samp.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL samp.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS samp.itemScope: IDL set to undefined should not throw 
FAIL samp.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL samp.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS samp.itemScope: IDL set to null should not throw 
FAIL samp.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL samp.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS samp.itemScope: IDL set to 7 should not throw 
PASS samp.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL samp.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS samp.itemScope: IDL set to 1.5 should not throw 
PASS samp.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL samp.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS samp.itemScope: IDL set to true should not throw 
PASS samp.itemScope: IDL set to true followed by hasAttribute() 
PASS samp.itemScope: IDL set to true followed by IDL get 
PASS samp.itemScope: IDL set to false should not throw 
FAIL samp.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS samp.itemScope: IDL set to false followed by IDL get 
PASS samp.itemScope: IDL set to object "[object Object]" should not throw 
PASS samp.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL samp.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS samp.itemScope: IDL set to NaN should not throw 
FAIL samp.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL samp.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS samp.itemScope: IDL set to Infinity should not throw 
PASS samp.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL samp.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS samp.itemScope: IDL set to -Infinity should not throw 
PASS samp.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL samp.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS samp.itemScope: IDL set to "\0" should not throw 
PASS samp.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL samp.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS samp.itemScope: IDL set to object "test-toString" should not throw 
PASS samp.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL samp.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS samp.itemScope: IDL set to object "test-valueOf" should not throw 
PASS samp.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL samp.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL samp.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL samp.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS samp.itemId: setAttribute() to "" followed by getAttribute() 
FAIL samp.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS samp.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL samp.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS samp.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL samp.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS samp.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL samp.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS samp.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL samp.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS samp.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL samp.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS samp.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL samp.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS samp.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL samp.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS samp.itemId: setAttribute() to true followed by getAttribute() 
FAIL samp.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS samp.itemId: setAttribute() to false followed by getAttribute() 
FAIL samp.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS samp.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL samp.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS samp.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL samp.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS samp.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL samp.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS samp.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL samp.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS samp.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL samp.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS samp.itemId: setAttribute() to null followed by getAttribute() 
FAIL samp.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS samp.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL samp.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS samp.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL samp.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS samp.itemId: IDL set to "" should not throw 
FAIL samp.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL samp.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS samp.itemId: IDL set to " foo " should not throw 
FAIL samp.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL samp.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS samp.itemId: IDL set to "http://site.example/" should not throw 
FAIL samp.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS samp.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS samp.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL samp.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL samp.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS samp.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL samp.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL samp.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS samp.itemId: IDL set to undefined should not throw 
FAIL samp.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL samp.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS samp.itemId: IDL set to 7 should not throw 
FAIL samp.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL samp.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS samp.itemId: IDL set to 1.5 should not throw 
FAIL samp.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL samp.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS samp.itemId: IDL set to true should not throw 
FAIL samp.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL samp.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS samp.itemId: IDL set to false should not throw 
FAIL samp.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL samp.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS samp.itemId: IDL set to object "[object Object]" should not throw 
FAIL samp.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL samp.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS samp.itemId: IDL set to NaN should not throw 
FAIL samp.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL samp.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS samp.itemId: IDL set to Infinity should not throw 
FAIL samp.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL samp.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS samp.itemId: IDL set to -Infinity should not throw 
FAIL samp.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL samp.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS samp.itemId: IDL set to "\0" should not throw 
FAIL samp.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL samp.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS samp.itemId: IDL set to null should not throw 
FAIL samp.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL samp.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS samp.itemId: IDL set to object "test-toString" should not throw 
FAIL samp.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL samp.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS samp.itemId: IDL set to object "test-valueOf" should not throw 
PASS samp.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL samp.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS kbd.title: typeof IDL attribute 
PASS kbd.title: IDL get with DOM attribute unset 
PASS kbd.title: setAttribute() to "" followed by getAttribute() 
PASS kbd.title: setAttribute() to "" followed by IDL get 
PASS kbd.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS kbd.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS kbd.title: setAttribute() to undefined followed by getAttribute() 
PASS kbd.title: setAttribute() to undefined followed by IDL get 
PASS kbd.title: setAttribute() to 7 followed by getAttribute() 
PASS kbd.title: setAttribute() to 7 followed by IDL get 
PASS kbd.title: setAttribute() to 1.5 followed by getAttribute() 
PASS kbd.title: setAttribute() to 1.5 followed by IDL get 
PASS kbd.title: setAttribute() to true followed by getAttribute() 
PASS kbd.title: setAttribute() to true followed by IDL get 
PASS kbd.title: setAttribute() to false followed by getAttribute() 
PASS kbd.title: setAttribute() to false followed by IDL get 
PASS kbd.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS kbd.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS kbd.title: setAttribute() to NaN followed by getAttribute() 
PASS kbd.title: setAttribute() to NaN followed by IDL get 
PASS kbd.title: setAttribute() to Infinity followed by getAttribute() 
PASS kbd.title: setAttribute() to Infinity followed by IDL get 
PASS kbd.title: setAttribute() to -Infinity followed by getAttribute() 
PASS kbd.title: setAttribute() to -Infinity followed by IDL get 
PASS kbd.title: setAttribute() to "\0" followed by getAttribute() 
PASS kbd.title: setAttribute() to "\0" followed by IDL get 
PASS kbd.title: setAttribute() to null followed by getAttribute() 
PASS kbd.title: setAttribute() to null followed by IDL get 
PASS kbd.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS kbd.title: setAttribute() to object "test-toString" followed by IDL get 
PASS kbd.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS kbd.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS kbd.title: IDL set to "" should not throw 
PASS kbd.title: IDL set to "" followed by getAttribute() 
PASS kbd.title: IDL set to "" followed by IDL get 
PASS kbd.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS kbd.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS kbd.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS kbd.title: IDL set to undefined should not throw 
PASS kbd.title: IDL set to undefined followed by getAttribute() 
PASS kbd.title: IDL set to undefined followed by IDL get 
PASS kbd.title: IDL set to 7 should not throw 
PASS kbd.title: IDL set to 7 followed by getAttribute() 
PASS kbd.title: IDL set to 7 followed by IDL get 
PASS kbd.title: IDL set to 1.5 should not throw 
PASS kbd.title: IDL set to 1.5 followed by getAttribute() 
PASS kbd.title: IDL set to 1.5 followed by IDL get 
PASS kbd.title: IDL set to true should not throw 
PASS kbd.title: IDL set to true followed by getAttribute() 
PASS kbd.title: IDL set to true followed by IDL get 
PASS kbd.title: IDL set to false should not throw 
PASS kbd.title: IDL set to false followed by getAttribute() 
PASS kbd.title: IDL set to false followed by IDL get 
PASS kbd.title: IDL set to object "[object Object]" should not throw 
PASS kbd.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS kbd.title: IDL set to object "[object Object]" followed by IDL get 
PASS kbd.title: IDL set to NaN should not throw 
PASS kbd.title: IDL set to NaN followed by getAttribute() 
PASS kbd.title: IDL set to NaN followed by IDL get 
PASS kbd.title: IDL set to Infinity should not throw 
PASS kbd.title: IDL set to Infinity followed by getAttribute() 
PASS kbd.title: IDL set to Infinity followed by IDL get 
PASS kbd.title: IDL set to -Infinity should not throw 
PASS kbd.title: IDL set to -Infinity followed by getAttribute() 
PASS kbd.title: IDL set to -Infinity followed by IDL get 
PASS kbd.title: IDL set to "\0" should not throw 
PASS kbd.title: IDL set to "\0" followed by getAttribute() 
PASS kbd.title: IDL set to "\0" followed by IDL get 
PASS kbd.title: IDL set to null should not throw 
PASS kbd.title: IDL set to null followed by getAttribute() 
PASS kbd.title: IDL set to null followed by IDL get 
PASS kbd.title: IDL set to object "test-toString" should not throw 
PASS kbd.title: IDL set to object "test-toString" followed by getAttribute() 
PASS kbd.title: IDL set to object "test-toString" followed by IDL get 
PASS kbd.title: IDL set to object "test-valueOf" should not throw 
PASS kbd.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS kbd.title: IDL set to object "test-valueOf" followed by IDL get 
PASS kbd.lang: typeof IDL attribute 
PASS kbd.lang: IDL get with DOM attribute unset 
PASS kbd.lang: setAttribute() to "" followed by getAttribute() 
PASS kbd.lang: setAttribute() to "" followed by IDL get 
PASS kbd.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS kbd.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS kbd.lang: setAttribute() to undefined followed by getAttribute() 
PASS kbd.lang: setAttribute() to undefined followed by IDL get 
PASS kbd.lang: setAttribute() to 7 followed by getAttribute() 
PASS kbd.lang: setAttribute() to 7 followed by IDL get 
PASS kbd.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS kbd.lang: setAttribute() to 1.5 followed by IDL get 
PASS kbd.lang: setAttribute() to true followed by getAttribute() 
PASS kbd.lang: setAttribute() to true followed by IDL get 
PASS kbd.lang: setAttribute() to false followed by getAttribute() 
PASS kbd.lang: setAttribute() to false followed by IDL get 
PASS kbd.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS kbd.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS kbd.lang: setAttribute() to NaN followed by getAttribute() 
PASS kbd.lang: setAttribute() to NaN followed by IDL get 
PASS kbd.lang: setAttribute() to Infinity followed by getAttribute() 
PASS kbd.lang: setAttribute() to Infinity followed by IDL get 
PASS kbd.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS kbd.lang: setAttribute() to -Infinity followed by IDL get 
PASS kbd.lang: setAttribute() to "\0" followed by getAttribute() 
PASS kbd.lang: setAttribute() to "\0" followed by IDL get 
PASS kbd.lang: setAttribute() to null followed by getAttribute() 
PASS kbd.lang: setAttribute() to null followed by IDL get 
PASS kbd.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS kbd.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS kbd.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS kbd.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS kbd.lang: IDL set to "" should not throw 
PASS kbd.lang: IDL set to "" followed by getAttribute() 
PASS kbd.lang: IDL set to "" followed by IDL get 
PASS kbd.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS kbd.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS kbd.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS kbd.lang: IDL set to undefined should not throw 
PASS kbd.lang: IDL set to undefined followed by getAttribute() 
PASS kbd.lang: IDL set to undefined followed by IDL get 
PASS kbd.lang: IDL set to 7 should not throw 
PASS kbd.lang: IDL set to 7 followed by getAttribute() 
PASS kbd.lang: IDL set to 7 followed by IDL get 
PASS kbd.lang: IDL set to 1.5 should not throw 
PASS kbd.lang: IDL set to 1.5 followed by getAttribute() 
PASS kbd.lang: IDL set to 1.5 followed by IDL get 
PASS kbd.lang: IDL set to true should not throw 
PASS kbd.lang: IDL set to true followed by getAttribute() 
PASS kbd.lang: IDL set to true followed by IDL get 
PASS kbd.lang: IDL set to false should not throw 
PASS kbd.lang: IDL set to false followed by getAttribute() 
PASS kbd.lang: IDL set to false followed by IDL get 
PASS kbd.lang: IDL set to object "[object Object]" should not throw 
PASS kbd.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS kbd.lang: IDL set to object "[object Object]" followed by IDL get 
PASS kbd.lang: IDL set to NaN should not throw 
PASS kbd.lang: IDL set to NaN followed by getAttribute() 
PASS kbd.lang: IDL set to NaN followed by IDL get 
PASS kbd.lang: IDL set to Infinity should not throw 
PASS kbd.lang: IDL set to Infinity followed by getAttribute() 
PASS kbd.lang: IDL set to Infinity followed by IDL get 
PASS kbd.lang: IDL set to -Infinity should not throw 
PASS kbd.lang: IDL set to -Infinity followed by getAttribute() 
PASS kbd.lang: IDL set to -Infinity followed by IDL get 
PASS kbd.lang: IDL set to "\0" should not throw 
PASS kbd.lang: IDL set to "\0" followed by getAttribute() 
PASS kbd.lang: IDL set to "\0" followed by IDL get 
PASS kbd.lang: IDL set to null should not throw 
PASS kbd.lang: IDL set to null followed by getAttribute() 
PASS kbd.lang: IDL set to null followed by IDL get 
PASS kbd.lang: IDL set to object "test-toString" should not throw 
PASS kbd.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS kbd.lang: IDL set to object "test-toString" followed by IDL get 
PASS kbd.lang: IDL set to object "test-valueOf" should not throw 
PASS kbd.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS kbd.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS kbd.dir: typeof IDL attribute 
PASS kbd.dir: IDL get with DOM attribute unset 
PASS kbd.dir: setAttribute() to "" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "" followed by IDL get 
PASS kbd.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS kbd.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS kbd.dir: setAttribute() to undefined followed by getAttribute() 
PASS kbd.dir: setAttribute() to undefined followed by IDL get 
PASS kbd.dir: setAttribute() to 7 followed by getAttribute() 
PASS kbd.dir: setAttribute() to 7 followed by IDL get 
PASS kbd.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS kbd.dir: setAttribute() to 1.5 followed by IDL get 
PASS kbd.dir: setAttribute() to true followed by getAttribute() 
PASS kbd.dir: setAttribute() to true followed by IDL get 
PASS kbd.dir: setAttribute() to false followed by getAttribute() 
PASS kbd.dir: setAttribute() to false followed by IDL get 
PASS kbd.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS kbd.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS kbd.dir: setAttribute() to NaN followed by getAttribute() 
PASS kbd.dir: setAttribute() to NaN followed by IDL get 
PASS kbd.dir: setAttribute() to Infinity followed by getAttribute() 
PASS kbd.dir: setAttribute() to Infinity followed by IDL get 
PASS kbd.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS kbd.dir: setAttribute() to -Infinity followed by IDL get 
PASS kbd.dir: setAttribute() to "\0" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "\0" followed by IDL get 
PASS kbd.dir: setAttribute() to null followed by getAttribute() 
PASS kbd.dir: setAttribute() to null followed by IDL get 
PASS kbd.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS kbd.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS kbd.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS kbd.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS kbd.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "ltr" followed by IDL get 
PASS kbd.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "xltr" followed by IDL get 
PASS kbd.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS kbd.dir: setAttribute() to "tr" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "tr" followed by IDL get 
PASS kbd.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "LTR" followed by IDL get 
PASS kbd.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "rtl" followed by IDL get 
PASS kbd.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "xrtl" followed by IDL get 
PASS kbd.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS kbd.dir: setAttribute() to "tl" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "tl" followed by IDL get 
PASS kbd.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "RTL" followed by IDL get 
PASS kbd.dir: setAttribute() to "auto" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "auto" followed by IDL get 
PASS kbd.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "xauto" followed by IDL get 
PASS kbd.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "auto\0" followed by IDL get 
PASS kbd.dir: setAttribute() to "uto" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "uto" followed by IDL get 
PASS kbd.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS kbd.dir: setAttribute() to "AUTO" followed by IDL get 
PASS kbd.dir: IDL set to "" should not throw 
PASS kbd.dir: IDL set to "" followed by getAttribute() 
PASS kbd.dir: IDL set to "" followed by IDL get 
PASS kbd.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS kbd.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS kbd.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS kbd.dir: IDL set to undefined should not throw 
PASS kbd.dir: IDL set to undefined followed by getAttribute() 
PASS kbd.dir: IDL set to undefined followed by IDL get 
PASS kbd.dir: IDL set to 7 should not throw 
PASS kbd.dir: IDL set to 7 followed by getAttribute() 
PASS kbd.dir: IDL set to 7 followed by IDL get 
PASS kbd.dir: IDL set to 1.5 should not throw 
PASS kbd.dir: IDL set to 1.5 followed by getAttribute() 
PASS kbd.dir: IDL set to 1.5 followed by IDL get 
PASS kbd.dir: IDL set to true should not throw 
PASS kbd.dir: IDL set to true followed by getAttribute() 
PASS kbd.dir: IDL set to true followed by IDL get 
PASS kbd.dir: IDL set to false should not throw 
PASS kbd.dir: IDL set to false followed by getAttribute() 
PASS kbd.dir: IDL set to false followed by IDL get 
PASS kbd.dir: IDL set to object "[object Object]" should not throw 
PASS kbd.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS kbd.dir: IDL set to object "[object Object]" followed by IDL get 
PASS kbd.dir: IDL set to NaN should not throw 
PASS kbd.dir: IDL set to NaN followed by getAttribute() 
PASS kbd.dir: IDL set to NaN followed by IDL get 
PASS kbd.dir: IDL set to Infinity should not throw 
PASS kbd.dir: IDL set to Infinity followed by getAttribute() 
PASS kbd.dir: IDL set to Infinity followed by IDL get 
PASS kbd.dir: IDL set to -Infinity should not throw 
PASS kbd.dir: IDL set to -Infinity followed by getAttribute() 
PASS kbd.dir: IDL set to -Infinity followed by IDL get 
PASS kbd.dir: IDL set to "\0" should not throw 
PASS kbd.dir: IDL set to "\0" followed by getAttribute() 
PASS kbd.dir: IDL set to "\0" followed by IDL get 
PASS kbd.dir: IDL set to null should not throw 
PASS kbd.dir: IDL set to null followed by IDL get 
PASS kbd.dir: IDL set to object "test-toString" should not throw 
PASS kbd.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS kbd.dir: IDL set to object "test-toString" followed by IDL get 
PASS kbd.dir: IDL set to object "test-valueOf" should not throw 
PASS kbd.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS kbd.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS kbd.dir: IDL set to "ltr" should not throw 
PASS kbd.dir: IDL set to "ltr" followed by getAttribute() 
PASS kbd.dir: IDL set to "ltr" followed by IDL get 
PASS kbd.dir: IDL set to "xltr" should not throw 
PASS kbd.dir: IDL set to "xltr" followed by getAttribute() 
PASS kbd.dir: IDL set to "xltr" followed by IDL get 
PASS kbd.dir: IDL set to "ltr\0" should not throw 
PASS kbd.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS kbd.dir: IDL set to "ltr\0" followed by IDL get 
PASS kbd.dir: IDL set to "tr" should not throw 
PASS kbd.dir: IDL set to "tr" followed by getAttribute() 
PASS kbd.dir: IDL set to "tr" followed by IDL get 
PASS kbd.dir: IDL set to "LTR" should not throw 
PASS kbd.dir: IDL set to "LTR" followed by getAttribute() 
PASS kbd.dir: IDL set to "LTR" followed by IDL get 
PASS kbd.dir: IDL set to "rtl" should not throw 
PASS kbd.dir: IDL set to "rtl" followed by getAttribute() 
PASS kbd.dir: IDL set to "rtl" followed by IDL get 
PASS kbd.dir: IDL set to "xrtl" should not throw 
PASS kbd.dir: IDL set to "xrtl" followed by getAttribute() 
PASS kbd.dir: IDL set to "xrtl" followed by IDL get 
PASS kbd.dir: IDL set to "rtl\0" should not throw 
PASS kbd.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS kbd.dir: IDL set to "rtl\0" followed by IDL get 
PASS kbd.dir: IDL set to "tl" should not throw 
PASS kbd.dir: IDL set to "tl" followed by getAttribute() 
PASS kbd.dir: IDL set to "tl" followed by IDL get 
PASS kbd.dir: IDL set to "RTL" should not throw 
PASS kbd.dir: IDL set to "RTL" followed by getAttribute() 
PASS kbd.dir: IDL set to "RTL" followed by IDL get 
PASS kbd.dir: IDL set to "auto" should not throw 
PASS kbd.dir: IDL set to "auto" followed by getAttribute() 
PASS kbd.dir: IDL set to "auto" followed by IDL get 
PASS kbd.dir: IDL set to "xauto" should not throw 
PASS kbd.dir: IDL set to "xauto" followed by getAttribute() 
PASS kbd.dir: IDL set to "xauto" followed by IDL get 
PASS kbd.dir: IDL set to "auto\0" should not throw 
PASS kbd.dir: IDL set to "auto\0" followed by getAttribute() 
PASS kbd.dir: IDL set to "auto\0" followed by IDL get 
PASS kbd.dir: IDL set to "uto" should not throw 
PASS kbd.dir: IDL set to "uto" followed by getAttribute() 
PASS kbd.dir: IDL set to "uto" followed by IDL get 
PASS kbd.dir: IDL set to "AUTO" should not throw 
PASS kbd.dir: IDL set to "AUTO" followed by getAttribute() 
PASS kbd.dir: IDL set to "AUTO" followed by IDL get 
PASS kbd.className (<kbd class>): typeof IDL attribute 
PASS kbd.className (<kbd class>): IDL get with DOM attribute unset 
PASS kbd.className (<kbd class>): setAttribute() to "" followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to "" followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to undefined followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to undefined followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to 7 followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to 7 followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to 1.5 followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to 1.5 followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to true followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to true followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to false followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to false followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to NaN followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to NaN followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to Infinity followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to Infinity followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to -Infinity followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to -Infinity followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to "\0" followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to "\0" followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to null followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to null followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to object "test-toString" followed by IDL get 
PASS kbd.className (<kbd class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS kbd.className (<kbd class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to "" should not throw 
PASS kbd.className (<kbd class>): IDL set to "" followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to "" followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS kbd.className (<kbd class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to undefined should not throw 
PASS kbd.className (<kbd class>): IDL set to undefined followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to undefined followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to 7 should not throw 
PASS kbd.className (<kbd class>): IDL set to 7 followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to 7 followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to 1.5 should not throw 
PASS kbd.className (<kbd class>): IDL set to 1.5 followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to 1.5 followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to true should not throw 
PASS kbd.className (<kbd class>): IDL set to true followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to true followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to false should not throw 
PASS kbd.className (<kbd class>): IDL set to false followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to false followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to object "[object Object]" should not throw 
PASS kbd.className (<kbd class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to object "[object Object]" followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to NaN should not throw 
PASS kbd.className (<kbd class>): IDL set to NaN followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to NaN followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to Infinity should not throw 
PASS kbd.className (<kbd class>): IDL set to Infinity followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to Infinity followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to -Infinity should not throw 
PASS kbd.className (<kbd class>): IDL set to -Infinity followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to -Infinity followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to "\0" should not throw 
PASS kbd.className (<kbd class>): IDL set to "\0" followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to "\0" followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to null should not throw 
PASS kbd.className (<kbd class>): IDL set to null followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to null followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to object "test-toString" should not throw 
PASS kbd.className (<kbd class>): IDL set to object "test-toString" followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to object "test-toString" followed by IDL get 
PASS kbd.className (<kbd class>): IDL set to object "test-valueOf" should not throw 
PASS kbd.className (<kbd class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS kbd.className (<kbd class>): IDL set to object "test-valueOf" followed by IDL get 
PASS kbd.hidden: typeof IDL attribute 
PASS kbd.hidden: IDL get with DOM attribute unset 
PASS kbd.hidden: setAttribute() to "" followed by getAttribute() 
PASS kbd.hidden: setAttribute() to "" followed by IDL get 
PASS kbd.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS kbd.hidden: setAttribute() to " foo " followed by IDL get 
PASS kbd.hidden: setAttribute() to undefined followed by getAttribute() 
PASS kbd.hidden: setAttribute() to undefined followed by IDL get 
PASS kbd.hidden: setAttribute() to null followed by getAttribute() 
PASS kbd.hidden: setAttribute() to null followed by IDL get 
PASS kbd.hidden: setAttribute() to 7 followed by getAttribute() 
PASS kbd.hidden: setAttribute() to 7 followed by IDL get 
PASS kbd.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS kbd.hidden: setAttribute() to 1.5 followed by IDL get 
PASS kbd.hidden: setAttribute() to true followed by getAttribute() 
PASS kbd.hidden: setAttribute() to true followed by IDL get 
PASS kbd.hidden: setAttribute() to false followed by getAttribute() 
PASS kbd.hidden: setAttribute() to false followed by IDL get 
PASS kbd.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS kbd.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS kbd.hidden: setAttribute() to NaN followed by getAttribute() 
PASS kbd.hidden: setAttribute() to NaN followed by IDL get 
PASS kbd.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS kbd.hidden: setAttribute() to Infinity followed by IDL get 
PASS kbd.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS kbd.hidden: setAttribute() to -Infinity followed by IDL get 
PASS kbd.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS kbd.hidden: setAttribute() to "\0" followed by IDL get 
PASS kbd.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS kbd.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS kbd.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS kbd.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS kbd.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS kbd.hidden: setAttribute() to "hidden" followed by IDL get 
PASS kbd.hidden: IDL set to "" should not throw 
PASS kbd.hidden: IDL set to "" followed by hasAttribute() 
PASS kbd.hidden: IDL set to "" followed by IDL get 
PASS kbd.hidden: IDL set to " foo " should not throw 
PASS kbd.hidden: IDL set to " foo " followed by hasAttribute() 
PASS kbd.hidden: IDL set to " foo " followed by IDL get 
PASS kbd.hidden: IDL set to undefined should not throw 
PASS kbd.hidden: IDL set to undefined followed by hasAttribute() 
PASS kbd.hidden: IDL set to undefined followed by IDL get 
PASS kbd.hidden: IDL set to null should not throw 
PASS kbd.hidden: IDL set to null followed by hasAttribute() 
PASS kbd.hidden: IDL set to null followed by IDL get 
PASS kbd.hidden: IDL set to 7 should not throw 
PASS kbd.hidden: IDL set to 7 followed by hasAttribute() 
PASS kbd.hidden: IDL set to 7 followed by IDL get 
PASS kbd.hidden: IDL set to 1.5 should not throw 
PASS kbd.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS kbd.hidden: IDL set to 1.5 followed by IDL get 
PASS kbd.hidden: IDL set to true should not throw 
PASS kbd.hidden: IDL set to true followed by hasAttribute() 
PASS kbd.hidden: IDL set to true followed by IDL get 
PASS kbd.hidden: IDL set to false should not throw 
PASS kbd.hidden: IDL set to false followed by hasAttribute() 
PASS kbd.hidden: IDL set to false followed by IDL get 
PASS kbd.hidden: IDL set to object "[object Object]" should not throw 
PASS kbd.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS kbd.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS kbd.hidden: IDL set to NaN should not throw 
PASS kbd.hidden: IDL set to NaN followed by hasAttribute() 
PASS kbd.hidden: IDL set to NaN followed by IDL get 
PASS kbd.hidden: IDL set to Infinity should not throw 
PASS kbd.hidden: IDL set to Infinity followed by hasAttribute() 
PASS kbd.hidden: IDL set to Infinity followed by IDL get 
PASS kbd.hidden: IDL set to -Infinity should not throw 
PASS kbd.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS kbd.hidden: IDL set to -Infinity followed by IDL get 
PASS kbd.hidden: IDL set to "\0" should not throw 
PASS kbd.hidden: IDL set to "\0" followed by hasAttribute() 
PASS kbd.hidden: IDL set to "\0" followed by IDL get 
PASS kbd.hidden: IDL set to object "test-toString" should not throw 
PASS kbd.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS kbd.hidden: IDL set to object "test-toString" followed by IDL get 
PASS kbd.hidden: IDL set to object "test-valueOf" should not throw 
PASS kbd.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS kbd.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS kbd.accessKey: typeof IDL attribute 
PASS kbd.accessKey: IDL get with DOM attribute unset 
PASS kbd.accessKey: setAttribute() to "" followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to "" followed by IDL get 
PASS kbd.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS kbd.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to undefined followed by IDL get 
PASS kbd.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to 7 followed by IDL get 
PASS kbd.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS kbd.accessKey: setAttribute() to true followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to true followed by IDL get 
PASS kbd.accessKey: setAttribute() to false followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to false followed by IDL get 
PASS kbd.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS kbd.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to NaN followed by IDL get 
PASS kbd.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to Infinity followed by IDL get 
PASS kbd.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS kbd.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to "\0" followed by IDL get 
PASS kbd.accessKey: setAttribute() to null followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to null followed by IDL get 
PASS kbd.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS kbd.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS kbd.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS kbd.accessKey: IDL set to "" should not throw 
PASS kbd.accessKey: IDL set to "" followed by getAttribute() 
PASS kbd.accessKey: IDL set to "" followed by IDL get 
PASS kbd.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS kbd.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS kbd.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS kbd.accessKey: IDL set to undefined should not throw 
PASS kbd.accessKey: IDL set to undefined followed by getAttribute() 
PASS kbd.accessKey: IDL set to undefined followed by IDL get 
PASS kbd.accessKey: IDL set to 7 should not throw 
PASS kbd.accessKey: IDL set to 7 followed by getAttribute() 
PASS kbd.accessKey: IDL set to 7 followed by IDL get 
PASS kbd.accessKey: IDL set to 1.5 should not throw 
PASS kbd.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS kbd.accessKey: IDL set to 1.5 followed by IDL get 
PASS kbd.accessKey: IDL set to true should not throw 
PASS kbd.accessKey: IDL set to true followed by getAttribute() 
PASS kbd.accessKey: IDL set to true followed by IDL get 
PASS kbd.accessKey: IDL set to false should not throw 
PASS kbd.accessKey: IDL set to false followed by getAttribute() 
PASS kbd.accessKey: IDL set to false followed by IDL get 
PASS kbd.accessKey: IDL set to object "[object Object]" should not throw 
PASS kbd.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS kbd.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS kbd.accessKey: IDL set to NaN should not throw 
PASS kbd.accessKey: IDL set to NaN followed by getAttribute() 
PASS kbd.accessKey: IDL set to NaN followed by IDL get 
PASS kbd.accessKey: IDL set to Infinity should not throw 
PASS kbd.accessKey: IDL set to Infinity followed by getAttribute() 
PASS kbd.accessKey: IDL set to Infinity followed by IDL get 
PASS kbd.accessKey: IDL set to -Infinity should not throw 
PASS kbd.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS kbd.accessKey: IDL set to -Infinity followed by IDL get 
PASS kbd.accessKey: IDL set to "\0" should not throw 
PASS kbd.accessKey: IDL set to "\0" followed by getAttribute() 
PASS kbd.accessKey: IDL set to "\0" followed by IDL get 
PASS kbd.accessKey: IDL set to null should not throw 
PASS kbd.accessKey: IDL set to null followed by getAttribute() 
PASS kbd.accessKey: IDL set to null followed by IDL get 
PASS kbd.accessKey: IDL set to object "test-toString" should not throw 
PASS kbd.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS kbd.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS kbd.accessKey: IDL set to object "test-valueOf" should not throw 
PASS kbd.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS kbd.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS kbd.tabIndex: typeof IDL attribute 
PASS kbd.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to -36 followed by IDL get 
PASS kbd.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to -1 followed by IDL get 
PASS kbd.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to 0 followed by IDL get 
PASS kbd.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to 1 followed by IDL get 
PASS kbd.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL kbd.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS kbd.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL kbd.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS kbd.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS kbd.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS kbd.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to "0" followed by IDL get 
PASS kbd.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to "1" followed by IDL get 
PASS kbd.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS kbd.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS kbd.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS kbd.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS kbd.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS kbd.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS kbd.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS kbd.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS kbd.tabIndex: IDL set to -36 should not throw 
PASS kbd.tabIndex: IDL set to -36 followed by getAttribute() 
PASS kbd.tabIndex: IDL set to -36 followed by IDL get 
PASS kbd.tabIndex: IDL set to -1 should not throw 
PASS kbd.tabIndex: IDL set to -1 followed by getAttribute() 
PASS kbd.tabIndex: IDL set to -1 followed by IDL get 
PASS kbd.tabIndex: IDL set to 0 should not throw 
PASS kbd.tabIndex: IDL set to 0 followed by getAttribute() 
PASS kbd.tabIndex: IDL set to 0 followed by IDL get 
PASS kbd.tabIndex: IDL set to 1 should not throw 
PASS kbd.tabIndex: IDL set to 1 followed by getAttribute() 
PASS kbd.tabIndex: IDL set to 1 followed by IDL get 
PASS kbd.tabIndex: IDL set to 2147483647 should not throw 
PASS kbd.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL kbd.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS kbd.tabIndex: IDL set to -2147483648 should not throw 
PASS kbd.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL kbd.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL kbd.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL kbd.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to null followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to true followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to false followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL kbd.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS kbd.itemScope: IDL set to "" should not throw 
FAIL kbd.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL kbd.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS kbd.itemScope: IDL set to " foo " should not throw 
PASS kbd.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL kbd.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS kbd.itemScope: IDL set to undefined should not throw 
FAIL kbd.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL kbd.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS kbd.itemScope: IDL set to null should not throw 
FAIL kbd.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL kbd.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS kbd.itemScope: IDL set to 7 should not throw 
PASS kbd.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL kbd.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS kbd.itemScope: IDL set to 1.5 should not throw 
PASS kbd.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL kbd.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS kbd.itemScope: IDL set to true should not throw 
PASS kbd.itemScope: IDL set to true followed by hasAttribute() 
PASS kbd.itemScope: IDL set to true followed by IDL get 
PASS kbd.itemScope: IDL set to false should not throw 
FAIL kbd.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS kbd.itemScope: IDL set to false followed by IDL get 
PASS kbd.itemScope: IDL set to object "[object Object]" should not throw 
PASS kbd.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL kbd.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS kbd.itemScope: IDL set to NaN should not throw 
FAIL kbd.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL kbd.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS kbd.itemScope: IDL set to Infinity should not throw 
PASS kbd.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL kbd.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS kbd.itemScope: IDL set to -Infinity should not throw 
PASS kbd.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL kbd.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS kbd.itemScope: IDL set to "\0" should not throw 
PASS kbd.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL kbd.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS kbd.itemScope: IDL set to object "test-toString" should not throw 
PASS kbd.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL kbd.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS kbd.itemScope: IDL set to object "test-valueOf" should not throw 
PASS kbd.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL kbd.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL kbd.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL kbd.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to "" followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to true followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to false followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to null followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS kbd.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL kbd.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS kbd.itemId: IDL set to "" should not throw 
FAIL kbd.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL kbd.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS kbd.itemId: IDL set to " foo " should not throw 
FAIL kbd.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL kbd.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS kbd.itemId: IDL set to "http://site.example/" should not throw 
FAIL kbd.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS kbd.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS kbd.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL kbd.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL kbd.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS kbd.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL kbd.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL kbd.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS kbd.itemId: IDL set to undefined should not throw 
FAIL kbd.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL kbd.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS kbd.itemId: IDL set to 7 should not throw 
FAIL kbd.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL kbd.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS kbd.itemId: IDL set to 1.5 should not throw 
FAIL kbd.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL kbd.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS kbd.itemId: IDL set to true should not throw 
FAIL kbd.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL kbd.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS kbd.itemId: IDL set to false should not throw 
FAIL kbd.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL kbd.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS kbd.itemId: IDL set to object "[object Object]" should not throw 
FAIL kbd.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL kbd.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS kbd.itemId: IDL set to NaN should not throw 
FAIL kbd.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL kbd.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS kbd.itemId: IDL set to Infinity should not throw 
FAIL kbd.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL kbd.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS kbd.itemId: IDL set to -Infinity should not throw 
FAIL kbd.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL kbd.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS kbd.itemId: IDL set to "\0" should not throw 
FAIL kbd.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL kbd.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS kbd.itemId: IDL set to null should not throw 
FAIL kbd.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL kbd.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS kbd.itemId: IDL set to object "test-toString" should not throw 
FAIL kbd.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL kbd.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS kbd.itemId: IDL set to object "test-valueOf" should not throw 
PASS kbd.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL kbd.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS sub.title: typeof IDL attribute 
PASS sub.title: IDL get with DOM attribute unset 
PASS sub.title: setAttribute() to "" followed by getAttribute() 
PASS sub.title: setAttribute() to "" followed by IDL get 
PASS sub.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sub.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sub.title: setAttribute() to undefined followed by getAttribute() 
PASS sub.title: setAttribute() to undefined followed by IDL get 
PASS sub.title: setAttribute() to 7 followed by getAttribute() 
PASS sub.title: setAttribute() to 7 followed by IDL get 
PASS sub.title: setAttribute() to 1.5 followed by getAttribute() 
PASS sub.title: setAttribute() to 1.5 followed by IDL get 
PASS sub.title: setAttribute() to true followed by getAttribute() 
PASS sub.title: setAttribute() to true followed by IDL get 
PASS sub.title: setAttribute() to false followed by getAttribute() 
PASS sub.title: setAttribute() to false followed by IDL get 
PASS sub.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS sub.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS sub.title: setAttribute() to NaN followed by getAttribute() 
PASS sub.title: setAttribute() to NaN followed by IDL get 
PASS sub.title: setAttribute() to Infinity followed by getAttribute() 
PASS sub.title: setAttribute() to Infinity followed by IDL get 
PASS sub.title: setAttribute() to -Infinity followed by getAttribute() 
PASS sub.title: setAttribute() to -Infinity followed by IDL get 
PASS sub.title: setAttribute() to "\0" followed by getAttribute() 
PASS sub.title: setAttribute() to "\0" followed by IDL get 
PASS sub.title: setAttribute() to null followed by getAttribute() 
PASS sub.title: setAttribute() to null followed by IDL get 
PASS sub.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS sub.title: setAttribute() to object "test-toString" followed by IDL get 
PASS sub.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS sub.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS sub.title: IDL set to "" should not throw 
PASS sub.title: IDL set to "" followed by getAttribute() 
PASS sub.title: IDL set to "" followed by IDL get 
PASS sub.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS sub.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sub.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sub.title: IDL set to undefined should not throw 
PASS sub.title: IDL set to undefined followed by getAttribute() 
PASS sub.title: IDL set to undefined followed by IDL get 
PASS sub.title: IDL set to 7 should not throw 
PASS sub.title: IDL set to 7 followed by getAttribute() 
PASS sub.title: IDL set to 7 followed by IDL get 
PASS sub.title: IDL set to 1.5 should not throw 
PASS sub.title: IDL set to 1.5 followed by getAttribute() 
PASS sub.title: IDL set to 1.5 followed by IDL get 
PASS sub.title: IDL set to true should not throw 
PASS sub.title: IDL set to true followed by getAttribute() 
PASS sub.title: IDL set to true followed by IDL get 
PASS sub.title: IDL set to false should not throw 
PASS sub.title: IDL set to false followed by getAttribute() 
PASS sub.title: IDL set to false followed by IDL get 
PASS sub.title: IDL set to object "[object Object]" should not throw 
PASS sub.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS sub.title: IDL set to object "[object Object]" followed by IDL get 
PASS sub.title: IDL set to NaN should not throw 
PASS sub.title: IDL set to NaN followed by getAttribute() 
PASS sub.title: IDL set to NaN followed by IDL get 
PASS sub.title: IDL set to Infinity should not throw 
PASS sub.title: IDL set to Infinity followed by getAttribute() 
PASS sub.title: IDL set to Infinity followed by IDL get 
PASS sub.title: IDL set to -Infinity should not throw 
PASS sub.title: IDL set to -Infinity followed by getAttribute() 
PASS sub.title: IDL set to -Infinity followed by IDL get 
PASS sub.title: IDL set to "\0" should not throw 
PASS sub.title: IDL set to "\0" followed by getAttribute() 
PASS sub.title: IDL set to "\0" followed by IDL get 
PASS sub.title: IDL set to null should not throw 
PASS sub.title: IDL set to null followed by getAttribute() 
PASS sub.title: IDL set to null followed by IDL get 
PASS sub.title: IDL set to object "test-toString" should not throw 
PASS sub.title: IDL set to object "test-toString" followed by getAttribute() 
PASS sub.title: IDL set to object "test-toString" followed by IDL get 
PASS sub.title: IDL set to object "test-valueOf" should not throw 
PASS sub.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS sub.title: IDL set to object "test-valueOf" followed by IDL get 
PASS sub.lang: typeof IDL attribute 
PASS sub.lang: IDL get with DOM attribute unset 
PASS sub.lang: setAttribute() to "" followed by getAttribute() 
PASS sub.lang: setAttribute() to "" followed by IDL get 
PASS sub.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sub.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sub.lang: setAttribute() to undefined followed by getAttribute() 
PASS sub.lang: setAttribute() to undefined followed by IDL get 
PASS sub.lang: setAttribute() to 7 followed by getAttribute() 
PASS sub.lang: setAttribute() to 7 followed by IDL get 
PASS sub.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS sub.lang: setAttribute() to 1.5 followed by IDL get 
PASS sub.lang: setAttribute() to true followed by getAttribute() 
PASS sub.lang: setAttribute() to true followed by IDL get 
PASS sub.lang: setAttribute() to false followed by getAttribute() 
PASS sub.lang: setAttribute() to false followed by IDL get 
PASS sub.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS sub.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS sub.lang: setAttribute() to NaN followed by getAttribute() 
PASS sub.lang: setAttribute() to NaN followed by IDL get 
PASS sub.lang: setAttribute() to Infinity followed by getAttribute() 
PASS sub.lang: setAttribute() to Infinity followed by IDL get 
PASS sub.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS sub.lang: setAttribute() to -Infinity followed by IDL get 
PASS sub.lang: setAttribute() to "\0" followed by getAttribute() 
PASS sub.lang: setAttribute() to "\0" followed by IDL get 
PASS sub.lang: setAttribute() to null followed by getAttribute() 
PASS sub.lang: setAttribute() to null followed by IDL get 
PASS sub.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS sub.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS sub.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS sub.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS sub.lang: IDL set to "" should not throw 
PASS sub.lang: IDL set to "" followed by getAttribute() 
PASS sub.lang: IDL set to "" followed by IDL get 
PASS sub.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS sub.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sub.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sub.lang: IDL set to undefined should not throw 
PASS sub.lang: IDL set to undefined followed by getAttribute() 
PASS sub.lang: IDL set to undefined followed by IDL get 
PASS sub.lang: IDL set to 7 should not throw 
PASS sub.lang: IDL set to 7 followed by getAttribute() 
PASS sub.lang: IDL set to 7 followed by IDL get 
PASS sub.lang: IDL set to 1.5 should not throw 
PASS sub.lang: IDL set to 1.5 followed by getAttribute() 
PASS sub.lang: IDL set to 1.5 followed by IDL get 
PASS sub.lang: IDL set to true should not throw 
PASS sub.lang: IDL set to true followed by getAttribute() 
PASS sub.lang: IDL set to true followed by IDL get 
PASS sub.lang: IDL set to false should not throw 
PASS sub.lang: IDL set to false followed by getAttribute() 
PASS sub.lang: IDL set to false followed by IDL get 
PASS sub.lang: IDL set to object "[object Object]" should not throw 
PASS sub.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS sub.lang: IDL set to object "[object Object]" followed by IDL get 
PASS sub.lang: IDL set to NaN should not throw 
PASS sub.lang: IDL set to NaN followed by getAttribute() 
PASS sub.lang: IDL set to NaN followed by IDL get 
PASS sub.lang: IDL set to Infinity should not throw 
PASS sub.lang: IDL set to Infinity followed by getAttribute() 
PASS sub.lang: IDL set to Infinity followed by IDL get 
PASS sub.lang: IDL set to -Infinity should not throw 
PASS sub.lang: IDL set to -Infinity followed by getAttribute() 
PASS sub.lang: IDL set to -Infinity followed by IDL get 
PASS sub.lang: IDL set to "\0" should not throw 
PASS sub.lang: IDL set to "\0" followed by getAttribute() 
PASS sub.lang: IDL set to "\0" followed by IDL get 
PASS sub.lang: IDL set to null should not throw 
PASS sub.lang: IDL set to null followed by getAttribute() 
PASS sub.lang: IDL set to null followed by IDL get 
PASS sub.lang: IDL set to object "test-toString" should not throw 
PASS sub.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS sub.lang: IDL set to object "test-toString" followed by IDL get 
PASS sub.lang: IDL set to object "test-valueOf" should not throw 
PASS sub.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS sub.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS sub.dir: typeof IDL attribute 
PASS sub.dir: IDL get with DOM attribute unset 
PASS sub.dir: setAttribute() to "" followed by getAttribute() 
PASS sub.dir: setAttribute() to "" followed by IDL get 
PASS sub.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sub.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sub.dir: setAttribute() to undefined followed by getAttribute() 
PASS sub.dir: setAttribute() to undefined followed by IDL get 
PASS sub.dir: setAttribute() to 7 followed by getAttribute() 
PASS sub.dir: setAttribute() to 7 followed by IDL get 
PASS sub.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS sub.dir: setAttribute() to 1.5 followed by IDL get 
PASS sub.dir: setAttribute() to true followed by getAttribute() 
PASS sub.dir: setAttribute() to true followed by IDL get 
PASS sub.dir: setAttribute() to false followed by getAttribute() 
PASS sub.dir: setAttribute() to false followed by IDL get 
PASS sub.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS sub.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS sub.dir: setAttribute() to NaN followed by getAttribute() 
PASS sub.dir: setAttribute() to NaN followed by IDL get 
PASS sub.dir: setAttribute() to Infinity followed by getAttribute() 
PASS sub.dir: setAttribute() to Infinity followed by IDL get 
PASS sub.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS sub.dir: setAttribute() to -Infinity followed by IDL get 
PASS sub.dir: setAttribute() to "\0" followed by getAttribute() 
PASS sub.dir: setAttribute() to "\0" followed by IDL get 
PASS sub.dir: setAttribute() to null followed by getAttribute() 
PASS sub.dir: setAttribute() to null followed by IDL get 
PASS sub.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS sub.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS sub.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS sub.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS sub.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS sub.dir: setAttribute() to "ltr" followed by IDL get 
PASS sub.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS sub.dir: setAttribute() to "xltr" followed by IDL get 
PASS sub.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS sub.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS sub.dir: setAttribute() to "tr" followed by getAttribute() 
PASS sub.dir: setAttribute() to "tr" followed by IDL get 
PASS sub.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS sub.dir: setAttribute() to "LTR" followed by IDL get 
PASS sub.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS sub.dir: setAttribute() to "rtl" followed by IDL get 
PASS sub.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS sub.dir: setAttribute() to "xrtl" followed by IDL get 
PASS sub.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS sub.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS sub.dir: setAttribute() to "tl" followed by getAttribute() 
PASS sub.dir: setAttribute() to "tl" followed by IDL get 
PASS sub.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS sub.dir: setAttribute() to "RTL" followed by IDL get 
PASS sub.dir: setAttribute() to "auto" followed by getAttribute() 
PASS sub.dir: setAttribute() to "auto" followed by IDL get 
PASS sub.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS sub.dir: setAttribute() to "xauto" followed by IDL get 
PASS sub.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS sub.dir: setAttribute() to "auto\0" followed by IDL get 
PASS sub.dir: setAttribute() to "uto" followed by getAttribute() 
PASS sub.dir: setAttribute() to "uto" followed by IDL get 
PASS sub.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS sub.dir: setAttribute() to "AUTO" followed by IDL get 
PASS sub.dir: IDL set to "" should not throw 
PASS sub.dir: IDL set to "" followed by getAttribute() 
PASS sub.dir: IDL set to "" followed by IDL get 
PASS sub.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS sub.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sub.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sub.dir: IDL set to undefined should not throw 
PASS sub.dir: IDL set to undefined followed by getAttribute() 
PASS sub.dir: IDL set to undefined followed by IDL get 
PASS sub.dir: IDL set to 7 should not throw 
PASS sub.dir: IDL set to 7 followed by getAttribute() 
PASS sub.dir: IDL set to 7 followed by IDL get 
PASS sub.dir: IDL set to 1.5 should not throw 
PASS sub.dir: IDL set to 1.5 followed by getAttribute() 
PASS sub.dir: IDL set to 1.5 followed by IDL get 
PASS sub.dir: IDL set to true should not throw 
PASS sub.dir: IDL set to true followed by getAttribute() 
PASS sub.dir: IDL set to true followed by IDL get 
PASS sub.dir: IDL set to false should not throw 
PASS sub.dir: IDL set to false followed by getAttribute() 
PASS sub.dir: IDL set to false followed by IDL get 
PASS sub.dir: IDL set to object "[object Object]" should not throw 
PASS sub.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS sub.dir: IDL set to object "[object Object]" followed by IDL get 
PASS sub.dir: IDL set to NaN should not throw 
PASS sub.dir: IDL set to NaN followed by getAttribute() 
PASS sub.dir: IDL set to NaN followed by IDL get 
PASS sub.dir: IDL set to Infinity should not throw 
PASS sub.dir: IDL set to Infinity followed by getAttribute() 
PASS sub.dir: IDL set to Infinity followed by IDL get 
PASS sub.dir: IDL set to -Infinity should not throw 
PASS sub.dir: IDL set to -Infinity followed by getAttribute() 
PASS sub.dir: IDL set to -Infinity followed by IDL get 
PASS sub.dir: IDL set to "\0" should not throw 
PASS sub.dir: IDL set to "\0" followed by getAttribute() 
PASS sub.dir: IDL set to "\0" followed by IDL get 
PASS sub.dir: IDL set to null should not throw 
PASS sub.dir: IDL set to null followed by IDL get 
PASS sub.dir: IDL set to object "test-toString" should not throw 
PASS sub.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS sub.dir: IDL set to object "test-toString" followed by IDL get 
PASS sub.dir: IDL set to object "test-valueOf" should not throw 
PASS sub.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS sub.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS sub.dir: IDL set to "ltr" should not throw 
PASS sub.dir: IDL set to "ltr" followed by getAttribute() 
PASS sub.dir: IDL set to "ltr" followed by IDL get 
PASS sub.dir: IDL set to "xltr" should not throw 
PASS sub.dir: IDL set to "xltr" followed by getAttribute() 
PASS sub.dir: IDL set to "xltr" followed by IDL get 
PASS sub.dir: IDL set to "ltr\0" should not throw 
PASS sub.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS sub.dir: IDL set to "ltr\0" followed by IDL get 
PASS sub.dir: IDL set to "tr" should not throw 
PASS sub.dir: IDL set to "tr" followed by getAttribute() 
PASS sub.dir: IDL set to "tr" followed by IDL get 
PASS sub.dir: IDL set to "LTR" should not throw 
PASS sub.dir: IDL set to "LTR" followed by getAttribute() 
PASS sub.dir: IDL set to "LTR" followed by IDL get 
PASS sub.dir: IDL set to "rtl" should not throw 
PASS sub.dir: IDL set to "rtl" followed by getAttribute() 
PASS sub.dir: IDL set to "rtl" followed by IDL get 
PASS sub.dir: IDL set to "xrtl" should not throw 
PASS sub.dir: IDL set to "xrtl" followed by getAttribute() 
PASS sub.dir: IDL set to "xrtl" followed by IDL get 
PASS sub.dir: IDL set to "rtl\0" should not throw 
PASS sub.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS sub.dir: IDL set to "rtl\0" followed by IDL get 
PASS sub.dir: IDL set to "tl" should not throw 
PASS sub.dir: IDL set to "tl" followed by getAttribute() 
PASS sub.dir: IDL set to "tl" followed by IDL get 
PASS sub.dir: IDL set to "RTL" should not throw 
PASS sub.dir: IDL set to "RTL" followed by getAttribute() 
PASS sub.dir: IDL set to "RTL" followed by IDL get 
PASS sub.dir: IDL set to "auto" should not throw 
PASS sub.dir: IDL set to "auto" followed by getAttribute() 
PASS sub.dir: IDL set to "auto" followed by IDL get 
PASS sub.dir: IDL set to "xauto" should not throw 
PASS sub.dir: IDL set to "xauto" followed by getAttribute() 
PASS sub.dir: IDL set to "xauto" followed by IDL get 
PASS sub.dir: IDL set to "auto\0" should not throw 
PASS sub.dir: IDL set to "auto\0" followed by getAttribute() 
PASS sub.dir: IDL set to "auto\0" followed by IDL get 
PASS sub.dir: IDL set to "uto" should not throw 
PASS sub.dir: IDL set to "uto" followed by getAttribute() 
PASS sub.dir: IDL set to "uto" followed by IDL get 
PASS sub.dir: IDL set to "AUTO" should not throw 
PASS sub.dir: IDL set to "AUTO" followed by getAttribute() 
PASS sub.dir: IDL set to "AUTO" followed by IDL get 
PASS sub.className (<sub class>): typeof IDL attribute 
PASS sub.className (<sub class>): IDL get with DOM attribute unset 
PASS sub.className (<sub class>): setAttribute() to "" followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to "" followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to undefined followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to undefined followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to 7 followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to 7 followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to 1.5 followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to 1.5 followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to true followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to true followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to false followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to false followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to NaN followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to NaN followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to Infinity followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to Infinity followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to -Infinity followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to -Infinity followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to "\0" followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to "\0" followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to null followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to null followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to object "test-toString" followed by IDL get 
PASS sub.className (<sub class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS sub.className (<sub class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS sub.className (<sub class>): IDL set to "" should not throw 
PASS sub.className (<sub class>): IDL set to "" followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to "" followed by IDL get 
PASS sub.className (<sub class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS sub.className (<sub class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sub.className (<sub class>): IDL set to undefined should not throw 
PASS sub.className (<sub class>): IDL set to undefined followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to undefined followed by IDL get 
PASS sub.className (<sub class>): IDL set to 7 should not throw 
PASS sub.className (<sub class>): IDL set to 7 followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to 7 followed by IDL get 
PASS sub.className (<sub class>): IDL set to 1.5 should not throw 
PASS sub.className (<sub class>): IDL set to 1.5 followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to 1.5 followed by IDL get 
PASS sub.className (<sub class>): IDL set to true should not throw 
PASS sub.className (<sub class>): IDL set to true followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to true followed by IDL get 
PASS sub.className (<sub class>): IDL set to false should not throw 
PASS sub.className (<sub class>): IDL set to false followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to false followed by IDL get 
PASS sub.className (<sub class>): IDL set to object "[object Object]" should not throw 
PASS sub.className (<sub class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to object "[object Object]" followed by IDL get 
PASS sub.className (<sub class>): IDL set to NaN should not throw 
PASS sub.className (<sub class>): IDL set to NaN followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to NaN followed by IDL get 
PASS sub.className (<sub class>): IDL set to Infinity should not throw 
PASS sub.className (<sub class>): IDL set to Infinity followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to Infinity followed by IDL get 
PASS sub.className (<sub class>): IDL set to -Infinity should not throw 
PASS sub.className (<sub class>): IDL set to -Infinity followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to -Infinity followed by IDL get 
PASS sub.className (<sub class>): IDL set to "\0" should not throw 
PASS sub.className (<sub class>): IDL set to "\0" followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to "\0" followed by IDL get 
PASS sub.className (<sub class>): IDL set to null should not throw 
PASS sub.className (<sub class>): IDL set to null followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to null followed by IDL get 
PASS sub.className (<sub class>): IDL set to object "test-toString" should not throw 
PASS sub.className (<sub class>): IDL set to object "test-toString" followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to object "test-toString" followed by IDL get 
PASS sub.className (<sub class>): IDL set to object "test-valueOf" should not throw 
PASS sub.className (<sub class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS sub.className (<sub class>): IDL set to object "test-valueOf" followed by IDL get 
PASS sub.hidden: typeof IDL attribute 
PASS sub.hidden: IDL get with DOM attribute unset 
PASS sub.hidden: setAttribute() to "" followed by getAttribute() 
PASS sub.hidden: setAttribute() to "" followed by IDL get 
PASS sub.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS sub.hidden: setAttribute() to " foo " followed by IDL get 
PASS sub.hidden: setAttribute() to undefined followed by getAttribute() 
PASS sub.hidden: setAttribute() to undefined followed by IDL get 
PASS sub.hidden: setAttribute() to null followed by getAttribute() 
PASS sub.hidden: setAttribute() to null followed by IDL get 
PASS sub.hidden: setAttribute() to 7 followed by getAttribute() 
PASS sub.hidden: setAttribute() to 7 followed by IDL get 
PASS sub.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS sub.hidden: setAttribute() to 1.5 followed by IDL get 
PASS sub.hidden: setAttribute() to true followed by getAttribute() 
PASS sub.hidden: setAttribute() to true followed by IDL get 
PASS sub.hidden: setAttribute() to false followed by getAttribute() 
PASS sub.hidden: setAttribute() to false followed by IDL get 
PASS sub.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS sub.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS sub.hidden: setAttribute() to NaN followed by getAttribute() 
PASS sub.hidden: setAttribute() to NaN followed by IDL get 
PASS sub.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS sub.hidden: setAttribute() to Infinity followed by IDL get 
PASS sub.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS sub.hidden: setAttribute() to -Infinity followed by IDL get 
PASS sub.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS sub.hidden: setAttribute() to "\0" followed by IDL get 
PASS sub.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS sub.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS sub.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS sub.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS sub.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS sub.hidden: setAttribute() to "hidden" followed by IDL get 
PASS sub.hidden: IDL set to "" should not throw 
PASS sub.hidden: IDL set to "" followed by hasAttribute() 
PASS sub.hidden: IDL set to "" followed by IDL get 
PASS sub.hidden: IDL set to " foo " should not throw 
PASS sub.hidden: IDL set to " foo " followed by hasAttribute() 
PASS sub.hidden: IDL set to " foo " followed by IDL get 
PASS sub.hidden: IDL set to undefined should not throw 
PASS sub.hidden: IDL set to undefined followed by hasAttribute() 
PASS sub.hidden: IDL set to undefined followed by IDL get 
PASS sub.hidden: IDL set to null should not throw 
PASS sub.hidden: IDL set to null followed by hasAttribute() 
PASS sub.hidden: IDL set to null followed by IDL get 
PASS sub.hidden: IDL set to 7 should not throw 
PASS sub.hidden: IDL set to 7 followed by hasAttribute() 
PASS sub.hidden: IDL set to 7 followed by IDL get 
PASS sub.hidden: IDL set to 1.5 should not throw 
PASS sub.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS sub.hidden: IDL set to 1.5 followed by IDL get 
PASS sub.hidden: IDL set to true should not throw 
PASS sub.hidden: IDL set to true followed by hasAttribute() 
PASS sub.hidden: IDL set to true followed by IDL get 
PASS sub.hidden: IDL set to false should not throw 
PASS sub.hidden: IDL set to false followed by hasAttribute() 
PASS sub.hidden: IDL set to false followed by IDL get 
PASS sub.hidden: IDL set to object "[object Object]" should not throw 
PASS sub.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS sub.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS sub.hidden: IDL set to NaN should not throw 
PASS sub.hidden: IDL set to NaN followed by hasAttribute() 
PASS sub.hidden: IDL set to NaN followed by IDL get 
PASS sub.hidden: IDL set to Infinity should not throw 
PASS sub.hidden: IDL set to Infinity followed by hasAttribute() 
PASS sub.hidden: IDL set to Infinity followed by IDL get 
PASS sub.hidden: IDL set to -Infinity should not throw 
PASS sub.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS sub.hidden: IDL set to -Infinity followed by IDL get 
PASS sub.hidden: IDL set to "\0" should not throw 
PASS sub.hidden: IDL set to "\0" followed by hasAttribute() 
PASS sub.hidden: IDL set to "\0" followed by IDL get 
PASS sub.hidden: IDL set to object "test-toString" should not throw 
PASS sub.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS sub.hidden: IDL set to object "test-toString" followed by IDL get 
PASS sub.hidden: IDL set to object "test-valueOf" should not throw 
PASS sub.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS sub.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS sub.accessKey: typeof IDL attribute 
PASS sub.accessKey: IDL get with DOM attribute unset 
PASS sub.accessKey: setAttribute() to "" followed by getAttribute() 
PASS sub.accessKey: setAttribute() to "" followed by IDL get 
PASS sub.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sub.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sub.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS sub.accessKey: setAttribute() to undefined followed by IDL get 
PASS sub.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS sub.accessKey: setAttribute() to 7 followed by IDL get 
PASS sub.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS sub.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS sub.accessKey: setAttribute() to true followed by getAttribute() 
PASS sub.accessKey: setAttribute() to true followed by IDL get 
PASS sub.accessKey: setAttribute() to false followed by getAttribute() 
PASS sub.accessKey: setAttribute() to false followed by IDL get 
PASS sub.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS sub.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS sub.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS sub.accessKey: setAttribute() to NaN followed by IDL get 
PASS sub.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS sub.accessKey: setAttribute() to Infinity followed by IDL get 
PASS sub.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS sub.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS sub.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS sub.accessKey: setAttribute() to "\0" followed by IDL get 
PASS sub.accessKey: setAttribute() to null followed by getAttribute() 
PASS sub.accessKey: setAttribute() to null followed by IDL get 
PASS sub.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS sub.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS sub.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS sub.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS sub.accessKey: IDL set to "" should not throw 
PASS sub.accessKey: IDL set to "" followed by getAttribute() 
PASS sub.accessKey: IDL set to "" followed by IDL get 
PASS sub.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS sub.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sub.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sub.accessKey: IDL set to undefined should not throw 
PASS sub.accessKey: IDL set to undefined followed by getAttribute() 
PASS sub.accessKey: IDL set to undefined followed by IDL get 
PASS sub.accessKey: IDL set to 7 should not throw 
PASS sub.accessKey: IDL set to 7 followed by getAttribute() 
PASS sub.accessKey: IDL set to 7 followed by IDL get 
PASS sub.accessKey: IDL set to 1.5 should not throw 
PASS sub.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS sub.accessKey: IDL set to 1.5 followed by IDL get 
PASS sub.accessKey: IDL set to true should not throw 
PASS sub.accessKey: IDL set to true followed by getAttribute() 
PASS sub.accessKey: IDL set to true followed by IDL get 
PASS sub.accessKey: IDL set to false should not throw 
PASS sub.accessKey: IDL set to false followed by getAttribute() 
PASS sub.accessKey: IDL set to false followed by IDL get 
PASS sub.accessKey: IDL set to object "[object Object]" should not throw 
PASS sub.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS sub.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS sub.accessKey: IDL set to NaN should not throw 
PASS sub.accessKey: IDL set to NaN followed by getAttribute() 
PASS sub.accessKey: IDL set to NaN followed by IDL get 
PASS sub.accessKey: IDL set to Infinity should not throw 
PASS sub.accessKey: IDL set to Infinity followed by getAttribute() 
PASS sub.accessKey: IDL set to Infinity followed by IDL get 
PASS sub.accessKey: IDL set to -Infinity should not throw 
PASS sub.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS sub.accessKey: IDL set to -Infinity followed by IDL get 
PASS sub.accessKey: IDL set to "\0" should not throw 
PASS sub.accessKey: IDL set to "\0" followed by getAttribute() 
PASS sub.accessKey: IDL set to "\0" followed by IDL get 
PASS sub.accessKey: IDL set to null should not throw 
PASS sub.accessKey: IDL set to null followed by getAttribute() 
PASS sub.accessKey: IDL set to null followed by IDL get 
PASS sub.accessKey: IDL set to object "test-toString" should not throw 
PASS sub.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS sub.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS sub.accessKey: IDL set to object "test-valueOf" should not throw 
PASS sub.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS sub.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS sub.tabIndex: typeof IDL attribute 
PASS sub.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to -36 followed by IDL get 
PASS sub.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to -1 followed by IDL get 
PASS sub.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to 0 followed by IDL get 
PASS sub.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to 1 followed by IDL get 
PASS sub.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL sub.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS sub.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL sub.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS sub.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS sub.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS sub.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to "0" followed by IDL get 
PASS sub.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to "1" followed by IDL get 
PASS sub.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS sub.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS sub.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS sub.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS sub.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS sub.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS sub.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS sub.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS sub.tabIndex: IDL set to -36 should not throw 
PASS sub.tabIndex: IDL set to -36 followed by getAttribute() 
PASS sub.tabIndex: IDL set to -36 followed by IDL get 
PASS sub.tabIndex: IDL set to -1 should not throw 
PASS sub.tabIndex: IDL set to -1 followed by getAttribute() 
PASS sub.tabIndex: IDL set to -1 followed by IDL get 
PASS sub.tabIndex: IDL set to 0 should not throw 
PASS sub.tabIndex: IDL set to 0 followed by getAttribute() 
PASS sub.tabIndex: IDL set to 0 followed by IDL get 
PASS sub.tabIndex: IDL set to 1 should not throw 
PASS sub.tabIndex: IDL set to 1 followed by getAttribute() 
PASS sub.tabIndex: IDL set to 1 followed by IDL get 
PASS sub.tabIndex: IDL set to 2147483647 should not throw 
PASS sub.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL sub.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS sub.tabIndex: IDL set to -2147483648 should not throw 
PASS sub.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL sub.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL sub.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL sub.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS sub.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to null followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to true followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to false followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL sub.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sub.itemScope: IDL set to "" should not throw 
FAIL sub.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL sub.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS sub.itemScope: IDL set to " foo " should not throw 
PASS sub.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL sub.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS sub.itemScope: IDL set to undefined should not throw 
FAIL sub.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL sub.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS sub.itemScope: IDL set to null should not throw 
FAIL sub.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL sub.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS sub.itemScope: IDL set to 7 should not throw 
PASS sub.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL sub.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS sub.itemScope: IDL set to 1.5 should not throw 
PASS sub.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL sub.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS sub.itemScope: IDL set to true should not throw 
PASS sub.itemScope: IDL set to true followed by hasAttribute() 
PASS sub.itemScope: IDL set to true followed by IDL get 
PASS sub.itemScope: IDL set to false should not throw 
FAIL sub.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS sub.itemScope: IDL set to false followed by IDL get 
PASS sub.itemScope: IDL set to object "[object Object]" should not throw 
PASS sub.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL sub.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS sub.itemScope: IDL set to NaN should not throw 
FAIL sub.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL sub.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS sub.itemScope: IDL set to Infinity should not throw 
PASS sub.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL sub.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS sub.itemScope: IDL set to -Infinity should not throw 
PASS sub.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL sub.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS sub.itemScope: IDL set to "\0" should not throw 
PASS sub.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL sub.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS sub.itemScope: IDL set to object "test-toString" should not throw 
PASS sub.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL sub.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS sub.itemScope: IDL set to object "test-valueOf" should not throw 
PASS sub.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL sub.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL sub.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL sub.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS sub.itemId: setAttribute() to "" followed by getAttribute() 
FAIL sub.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS sub.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL sub.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS sub.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL sub.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS sub.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL sub.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS sub.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL sub.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS sub.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL sub.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS sub.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL sub.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS sub.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL sub.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS sub.itemId: setAttribute() to true followed by getAttribute() 
FAIL sub.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS sub.itemId: setAttribute() to false followed by getAttribute() 
FAIL sub.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS sub.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL sub.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS sub.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL sub.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS sub.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL sub.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS sub.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL sub.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS sub.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL sub.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS sub.itemId: setAttribute() to null followed by getAttribute() 
FAIL sub.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS sub.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL sub.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS sub.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL sub.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS sub.itemId: IDL set to "" should not throw 
FAIL sub.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL sub.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS sub.itemId: IDL set to " foo " should not throw 
FAIL sub.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL sub.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS sub.itemId: IDL set to "http://site.example/" should not throw 
FAIL sub.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS sub.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS sub.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL sub.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL sub.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS sub.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL sub.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL sub.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS sub.itemId: IDL set to undefined should not throw 
FAIL sub.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL sub.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS sub.itemId: IDL set to 7 should not throw 
FAIL sub.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL sub.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS sub.itemId: IDL set to 1.5 should not throw 
FAIL sub.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL sub.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS sub.itemId: IDL set to true should not throw 
FAIL sub.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL sub.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS sub.itemId: IDL set to false should not throw 
FAIL sub.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL sub.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS sub.itemId: IDL set to object "[object Object]" should not throw 
FAIL sub.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL sub.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS sub.itemId: IDL set to NaN should not throw 
FAIL sub.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL sub.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS sub.itemId: IDL set to Infinity should not throw 
FAIL sub.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL sub.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS sub.itemId: IDL set to -Infinity should not throw 
FAIL sub.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL sub.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS sub.itemId: IDL set to "\0" should not throw 
FAIL sub.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL sub.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS sub.itemId: IDL set to null should not throw 
FAIL sub.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL sub.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS sub.itemId: IDL set to object "test-toString" should not throw 
FAIL sub.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL sub.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS sub.itemId: IDL set to object "test-valueOf" should not throw 
PASS sub.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL sub.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS sup.title: typeof IDL attribute 
PASS sup.title: IDL get with DOM attribute unset 
PASS sup.title: setAttribute() to "" followed by getAttribute() 
PASS sup.title: setAttribute() to "" followed by IDL get 
PASS sup.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sup.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sup.title: setAttribute() to undefined followed by getAttribute() 
PASS sup.title: setAttribute() to undefined followed by IDL get 
PASS sup.title: setAttribute() to 7 followed by getAttribute() 
PASS sup.title: setAttribute() to 7 followed by IDL get 
PASS sup.title: setAttribute() to 1.5 followed by getAttribute() 
PASS sup.title: setAttribute() to 1.5 followed by IDL get 
PASS sup.title: setAttribute() to true followed by getAttribute() 
PASS sup.title: setAttribute() to true followed by IDL get 
PASS sup.title: setAttribute() to false followed by getAttribute() 
PASS sup.title: setAttribute() to false followed by IDL get 
PASS sup.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS sup.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS sup.title: setAttribute() to NaN followed by getAttribute() 
PASS sup.title: setAttribute() to NaN followed by IDL get 
PASS sup.title: setAttribute() to Infinity followed by getAttribute() 
PASS sup.title: setAttribute() to Infinity followed by IDL get 
PASS sup.title: setAttribute() to -Infinity followed by getAttribute() 
PASS sup.title: setAttribute() to -Infinity followed by IDL get 
PASS sup.title: setAttribute() to "\0" followed by getAttribute() 
PASS sup.title: setAttribute() to "\0" followed by IDL get 
PASS sup.title: setAttribute() to null followed by getAttribute() 
PASS sup.title: setAttribute() to null followed by IDL get 
PASS sup.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS sup.title: setAttribute() to object "test-toString" followed by IDL get 
PASS sup.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS sup.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS sup.title: IDL set to "" should not throw 
PASS sup.title: IDL set to "" followed by getAttribute() 
PASS sup.title: IDL set to "" followed by IDL get 
PASS sup.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS sup.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sup.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sup.title: IDL set to undefined should not throw 
PASS sup.title: IDL set to undefined followed by getAttribute() 
PASS sup.title: IDL set to undefined followed by IDL get 
PASS sup.title: IDL set to 7 should not throw 
PASS sup.title: IDL set to 7 followed by getAttribute() 
PASS sup.title: IDL set to 7 followed by IDL get 
PASS sup.title: IDL set to 1.5 should not throw 
PASS sup.title: IDL set to 1.5 followed by getAttribute() 
PASS sup.title: IDL set to 1.5 followed by IDL get 
PASS sup.title: IDL set to true should not throw 
PASS sup.title: IDL set to true followed by getAttribute() 
PASS sup.title: IDL set to true followed by IDL get 
PASS sup.title: IDL set to false should not throw 
PASS sup.title: IDL set to false followed by getAttribute() 
PASS sup.title: IDL set to false followed by IDL get 
PASS sup.title: IDL set to object "[object Object]" should not throw 
PASS sup.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS sup.title: IDL set to object "[object Object]" followed by IDL get 
PASS sup.title: IDL set to NaN should not throw 
PASS sup.title: IDL set to NaN followed by getAttribute() 
PASS sup.title: IDL set to NaN followed by IDL get 
PASS sup.title: IDL set to Infinity should not throw 
PASS sup.title: IDL set to Infinity followed by getAttribute() 
PASS sup.title: IDL set to Infinity followed by IDL get 
PASS sup.title: IDL set to -Infinity should not throw 
PASS sup.title: IDL set to -Infinity followed by getAttribute() 
PASS sup.title: IDL set to -Infinity followed by IDL get 
PASS sup.title: IDL set to "\0" should not throw 
PASS sup.title: IDL set to "\0" followed by getAttribute() 
PASS sup.title: IDL set to "\0" followed by IDL get 
PASS sup.title: IDL set to null should not throw 
PASS sup.title: IDL set to null followed by getAttribute() 
PASS sup.title: IDL set to null followed by IDL get 
PASS sup.title: IDL set to object "test-toString" should not throw 
PASS sup.title: IDL set to object "test-toString" followed by getAttribute() 
PASS sup.title: IDL set to object "test-toString" followed by IDL get 
PASS sup.title: IDL set to object "test-valueOf" should not throw 
PASS sup.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS sup.title: IDL set to object "test-valueOf" followed by IDL get 
PASS sup.lang: typeof IDL attribute 
PASS sup.lang: IDL get with DOM attribute unset 
PASS sup.lang: setAttribute() to "" followed by getAttribute() 
PASS sup.lang: setAttribute() to "" followed by IDL get 
PASS sup.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sup.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sup.lang: setAttribute() to undefined followed by getAttribute() 
PASS sup.lang: setAttribute() to undefined followed by IDL get 
PASS sup.lang: setAttribute() to 7 followed by getAttribute() 
PASS sup.lang: setAttribute() to 7 followed by IDL get 
PASS sup.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS sup.lang: setAttribute() to 1.5 followed by IDL get 
PASS sup.lang: setAttribute() to true followed by getAttribute() 
PASS sup.lang: setAttribute() to true followed by IDL get 
PASS sup.lang: setAttribute() to false followed by getAttribute() 
PASS sup.lang: setAttribute() to false followed by IDL get 
PASS sup.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS sup.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS sup.lang: setAttribute() to NaN followed by getAttribute() 
PASS sup.lang: setAttribute() to NaN followed by IDL get 
PASS sup.lang: setAttribute() to Infinity followed by getAttribute() 
PASS sup.lang: setAttribute() to Infinity followed by IDL get 
PASS sup.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS sup.lang: setAttribute() to -Infinity followed by IDL get 
PASS sup.lang: setAttribute() to "\0" followed by getAttribute() 
PASS sup.lang: setAttribute() to "\0" followed by IDL get 
PASS sup.lang: setAttribute() to null followed by getAttribute() 
PASS sup.lang: setAttribute() to null followed by IDL get 
PASS sup.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS sup.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS sup.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS sup.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS sup.lang: IDL set to "" should not throw 
PASS sup.lang: IDL set to "" followed by getAttribute() 
PASS sup.lang: IDL set to "" followed by IDL get 
PASS sup.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS sup.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sup.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sup.lang: IDL set to undefined should not throw 
PASS sup.lang: IDL set to undefined followed by getAttribute() 
PASS sup.lang: IDL set to undefined followed by IDL get 
PASS sup.lang: IDL set to 7 should not throw 
PASS sup.lang: IDL set to 7 followed by getAttribute() 
PASS sup.lang: IDL set to 7 followed by IDL get 
PASS sup.lang: IDL set to 1.5 should not throw 
PASS sup.lang: IDL set to 1.5 followed by getAttribute() 
PASS sup.lang: IDL set to 1.5 followed by IDL get 
PASS sup.lang: IDL set to true should not throw 
PASS sup.lang: IDL set to true followed by getAttribute() 
PASS sup.lang: IDL set to true followed by IDL get 
PASS sup.lang: IDL set to false should not throw 
PASS sup.lang: IDL set to false followed by getAttribute() 
PASS sup.lang: IDL set to false followed by IDL get 
PASS sup.lang: IDL set to object "[object Object]" should not throw 
PASS sup.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS sup.lang: IDL set to object "[object Object]" followed by IDL get 
PASS sup.lang: IDL set to NaN should not throw 
PASS sup.lang: IDL set to NaN followed by getAttribute() 
PASS sup.lang: IDL set to NaN followed by IDL get 
PASS sup.lang: IDL set to Infinity should not throw 
PASS sup.lang: IDL set to Infinity followed by getAttribute() 
PASS sup.lang: IDL set to Infinity followed by IDL get 
PASS sup.lang: IDL set to -Infinity should not throw 
PASS sup.lang: IDL set to -Infinity followed by getAttribute() 
PASS sup.lang: IDL set to -Infinity followed by IDL get 
PASS sup.lang: IDL set to "\0" should not throw 
PASS sup.lang: IDL set to "\0" followed by getAttribute() 
PASS sup.lang: IDL set to "\0" followed by IDL get 
PASS sup.lang: IDL set to null should not throw 
PASS sup.lang: IDL set to null followed by getAttribute() 
PASS sup.lang: IDL set to null followed by IDL get 
PASS sup.lang: IDL set to object "test-toString" should not throw 
PASS sup.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS sup.lang: IDL set to object "test-toString" followed by IDL get 
PASS sup.lang: IDL set to object "test-valueOf" should not throw 
PASS sup.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS sup.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS sup.dir: typeof IDL attribute 
PASS sup.dir: IDL get with DOM attribute unset 
PASS sup.dir: setAttribute() to "" followed by getAttribute() 
PASS sup.dir: setAttribute() to "" followed by IDL get 
PASS sup.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sup.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sup.dir: setAttribute() to undefined followed by getAttribute() 
PASS sup.dir: setAttribute() to undefined followed by IDL get 
PASS sup.dir: setAttribute() to 7 followed by getAttribute() 
PASS sup.dir: setAttribute() to 7 followed by IDL get 
PASS sup.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS sup.dir: setAttribute() to 1.5 followed by IDL get 
PASS sup.dir: setAttribute() to true followed by getAttribute() 
PASS sup.dir: setAttribute() to true followed by IDL get 
PASS sup.dir: setAttribute() to false followed by getAttribute() 
PASS sup.dir: setAttribute() to false followed by IDL get 
PASS sup.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS sup.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS sup.dir: setAttribute() to NaN followed by getAttribute() 
PASS sup.dir: setAttribute() to NaN followed by IDL get 
PASS sup.dir: setAttribute() to Infinity followed by getAttribute() 
PASS sup.dir: setAttribute() to Infinity followed by IDL get 
PASS sup.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS sup.dir: setAttribute() to -Infinity followed by IDL get 
PASS sup.dir: setAttribute() to "\0" followed by getAttribute() 
PASS sup.dir: setAttribute() to "\0" followed by IDL get 
PASS sup.dir: setAttribute() to null followed by getAttribute() 
PASS sup.dir: setAttribute() to null followed by IDL get 
PASS sup.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS sup.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS sup.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS sup.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS sup.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS sup.dir: setAttribute() to "ltr" followed by IDL get 
PASS sup.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS sup.dir: setAttribute() to "xltr" followed by IDL get 
PASS sup.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS sup.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS sup.dir: setAttribute() to "tr" followed by getAttribute() 
PASS sup.dir: setAttribute() to "tr" followed by IDL get 
PASS sup.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS sup.dir: setAttribute() to "LTR" followed by IDL get 
PASS sup.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS sup.dir: setAttribute() to "rtl" followed by IDL get 
PASS sup.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS sup.dir: setAttribute() to "xrtl" followed by IDL get 
PASS sup.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS sup.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS sup.dir: setAttribute() to "tl" followed by getAttribute() 
PASS sup.dir: setAttribute() to "tl" followed by IDL get 
PASS sup.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS sup.dir: setAttribute() to "RTL" followed by IDL get 
PASS sup.dir: setAttribute() to "auto" followed by getAttribute() 
PASS sup.dir: setAttribute() to "auto" followed by IDL get 
PASS sup.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS sup.dir: setAttribute() to "xauto" followed by IDL get 
PASS sup.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS sup.dir: setAttribute() to "auto\0" followed by IDL get 
PASS sup.dir: setAttribute() to "uto" followed by getAttribute() 
PASS sup.dir: setAttribute() to "uto" followed by IDL get 
PASS sup.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS sup.dir: setAttribute() to "AUTO" followed by IDL get 
PASS sup.dir: IDL set to "" should not throw 
PASS sup.dir: IDL set to "" followed by getAttribute() 
PASS sup.dir: IDL set to "" followed by IDL get 
PASS sup.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS sup.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sup.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sup.dir: IDL set to undefined should not throw 
PASS sup.dir: IDL set to undefined followed by getAttribute() 
PASS sup.dir: IDL set to undefined followed by IDL get 
PASS sup.dir: IDL set to 7 should not throw 
PASS sup.dir: IDL set to 7 followed by getAttribute() 
PASS sup.dir: IDL set to 7 followed by IDL get 
PASS sup.dir: IDL set to 1.5 should not throw 
PASS sup.dir: IDL set to 1.5 followed by getAttribute() 
PASS sup.dir: IDL set to 1.5 followed by IDL get 
PASS sup.dir: IDL set to true should not throw 
PASS sup.dir: IDL set to true followed by getAttribute() 
PASS sup.dir: IDL set to true followed by IDL get 
PASS sup.dir: IDL set to false should not throw 
PASS sup.dir: IDL set to false followed by getAttribute() 
PASS sup.dir: IDL set to false followed by IDL get 
PASS sup.dir: IDL set to object "[object Object]" should not throw 
PASS sup.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS sup.dir: IDL set to object "[object Object]" followed by IDL get 
PASS sup.dir: IDL set to NaN should not throw 
PASS sup.dir: IDL set to NaN followed by getAttribute() 
PASS sup.dir: IDL set to NaN followed by IDL get 
PASS sup.dir: IDL set to Infinity should not throw 
PASS sup.dir: IDL set to Infinity followed by getAttribute() 
PASS sup.dir: IDL set to Infinity followed by IDL get 
PASS sup.dir: IDL set to -Infinity should not throw 
PASS sup.dir: IDL set to -Infinity followed by getAttribute() 
PASS sup.dir: IDL set to -Infinity followed by IDL get 
PASS sup.dir: IDL set to "\0" should not throw 
PASS sup.dir: IDL set to "\0" followed by getAttribute() 
PASS sup.dir: IDL set to "\0" followed by IDL get 
PASS sup.dir: IDL set to null should not throw 
PASS sup.dir: IDL set to null followed by IDL get 
PASS sup.dir: IDL set to object "test-toString" should not throw 
PASS sup.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS sup.dir: IDL set to object "test-toString" followed by IDL get 
PASS sup.dir: IDL set to object "test-valueOf" should not throw 
PASS sup.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS sup.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS sup.dir: IDL set to "ltr" should not throw 
PASS sup.dir: IDL set to "ltr" followed by getAttribute() 
PASS sup.dir: IDL set to "ltr" followed by IDL get 
PASS sup.dir: IDL set to "xltr" should not throw 
PASS sup.dir: IDL set to "xltr" followed by getAttribute() 
PASS sup.dir: IDL set to "xltr" followed by IDL get 
PASS sup.dir: IDL set to "ltr\0" should not throw 
PASS sup.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS sup.dir: IDL set to "ltr\0" followed by IDL get 
PASS sup.dir: IDL set to "tr" should not throw 
PASS sup.dir: IDL set to "tr" followed by getAttribute() 
PASS sup.dir: IDL set to "tr" followed by IDL get 
PASS sup.dir: IDL set to "LTR" should not throw 
PASS sup.dir: IDL set to "LTR" followed by getAttribute() 
PASS sup.dir: IDL set to "LTR" followed by IDL get 
PASS sup.dir: IDL set to "rtl" should not throw 
PASS sup.dir: IDL set to "rtl" followed by getAttribute() 
PASS sup.dir: IDL set to "rtl" followed by IDL get 
PASS sup.dir: IDL set to "xrtl" should not throw 
PASS sup.dir: IDL set to "xrtl" followed by getAttribute() 
PASS sup.dir: IDL set to "xrtl" followed by IDL get 
PASS sup.dir: IDL set to "rtl\0" should not throw 
PASS sup.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS sup.dir: IDL set to "rtl\0" followed by IDL get 
PASS sup.dir: IDL set to "tl" should not throw 
PASS sup.dir: IDL set to "tl" followed by getAttribute() 
PASS sup.dir: IDL set to "tl" followed by IDL get 
PASS sup.dir: IDL set to "RTL" should not throw 
PASS sup.dir: IDL set to "RTL" followed by getAttribute() 
PASS sup.dir: IDL set to "RTL" followed by IDL get 
PASS sup.dir: IDL set to "auto" should not throw 
PASS sup.dir: IDL set to "auto" followed by getAttribute() 
PASS sup.dir: IDL set to "auto" followed by IDL get 
PASS sup.dir: IDL set to "xauto" should not throw 
PASS sup.dir: IDL set to "xauto" followed by getAttribute() 
PASS sup.dir: IDL set to "xauto" followed by IDL get 
PASS sup.dir: IDL set to "auto\0" should not throw 
PASS sup.dir: IDL set to "auto\0" followed by getAttribute() 
PASS sup.dir: IDL set to "auto\0" followed by IDL get 
PASS sup.dir: IDL set to "uto" should not throw 
PASS sup.dir: IDL set to "uto" followed by getAttribute() 
PASS sup.dir: IDL set to "uto" followed by IDL get 
PASS sup.dir: IDL set to "AUTO" should not throw 
PASS sup.dir: IDL set to "AUTO" followed by getAttribute() 
PASS sup.dir: IDL set to "AUTO" followed by IDL get 
PASS sup.className (<sup class>): typeof IDL attribute 
PASS sup.className (<sup class>): IDL get with DOM attribute unset 
PASS sup.className (<sup class>): setAttribute() to "" followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to "" followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to undefined followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to undefined followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to 7 followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to 7 followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to 1.5 followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to 1.5 followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to true followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to true followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to false followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to false followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to NaN followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to NaN followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to Infinity followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to Infinity followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to -Infinity followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to -Infinity followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to "\0" followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to "\0" followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to null followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to null followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to object "test-toString" followed by IDL get 
PASS sup.className (<sup class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS sup.className (<sup class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS sup.className (<sup class>): IDL set to "" should not throw 
PASS sup.className (<sup class>): IDL set to "" followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to "" followed by IDL get 
PASS sup.className (<sup class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS sup.className (<sup class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sup.className (<sup class>): IDL set to undefined should not throw 
PASS sup.className (<sup class>): IDL set to undefined followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to undefined followed by IDL get 
PASS sup.className (<sup class>): IDL set to 7 should not throw 
PASS sup.className (<sup class>): IDL set to 7 followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to 7 followed by IDL get 
PASS sup.className (<sup class>): IDL set to 1.5 should not throw 
PASS sup.className (<sup class>): IDL set to 1.5 followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to 1.5 followed by IDL get 
PASS sup.className (<sup class>): IDL set to true should not throw 
PASS sup.className (<sup class>): IDL set to true followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to true followed by IDL get 
PASS sup.className (<sup class>): IDL set to false should not throw 
PASS sup.className (<sup class>): IDL set to false followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to false followed by IDL get 
PASS sup.className (<sup class>): IDL set to object "[object Object]" should not throw 
PASS sup.className (<sup class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to object "[object Object]" followed by IDL get 
PASS sup.className (<sup class>): IDL set to NaN should not throw 
PASS sup.className (<sup class>): IDL set to NaN followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to NaN followed by IDL get 
PASS sup.className (<sup class>): IDL set to Infinity should not throw 
PASS sup.className (<sup class>): IDL set to Infinity followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to Infinity followed by IDL get 
PASS sup.className (<sup class>): IDL set to -Infinity should not throw 
PASS sup.className (<sup class>): IDL set to -Infinity followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to -Infinity followed by IDL get 
PASS sup.className (<sup class>): IDL set to "\0" should not throw 
PASS sup.className (<sup class>): IDL set to "\0" followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to "\0" followed by IDL get 
PASS sup.className (<sup class>): IDL set to null should not throw 
PASS sup.className (<sup class>): IDL set to null followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to null followed by IDL get 
PASS sup.className (<sup class>): IDL set to object "test-toString" should not throw 
PASS sup.className (<sup class>): IDL set to object "test-toString" followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to object "test-toString" followed by IDL get 
PASS sup.className (<sup class>): IDL set to object "test-valueOf" should not throw 
PASS sup.className (<sup class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS sup.className (<sup class>): IDL set to object "test-valueOf" followed by IDL get 
PASS sup.hidden: typeof IDL attribute 
PASS sup.hidden: IDL get with DOM attribute unset 
PASS sup.hidden: setAttribute() to "" followed by getAttribute() 
PASS sup.hidden: setAttribute() to "" followed by IDL get 
PASS sup.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS sup.hidden: setAttribute() to " foo " followed by IDL get 
PASS sup.hidden: setAttribute() to undefined followed by getAttribute() 
PASS sup.hidden: setAttribute() to undefined followed by IDL get 
PASS sup.hidden: setAttribute() to null followed by getAttribute() 
PASS sup.hidden: setAttribute() to null followed by IDL get 
PASS sup.hidden: setAttribute() to 7 followed by getAttribute() 
PASS sup.hidden: setAttribute() to 7 followed by IDL get 
PASS sup.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS sup.hidden: setAttribute() to 1.5 followed by IDL get 
PASS sup.hidden: setAttribute() to true followed by getAttribute() 
PASS sup.hidden: setAttribute() to true followed by IDL get 
PASS sup.hidden: setAttribute() to false followed by getAttribute() 
PASS sup.hidden: setAttribute() to false followed by IDL get 
PASS sup.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS sup.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS sup.hidden: setAttribute() to NaN followed by getAttribute() 
PASS sup.hidden: setAttribute() to NaN followed by IDL get 
PASS sup.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS sup.hidden: setAttribute() to Infinity followed by IDL get 
PASS sup.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS sup.hidden: setAttribute() to -Infinity followed by IDL get 
PASS sup.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS sup.hidden: setAttribute() to "\0" followed by IDL get 
PASS sup.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS sup.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS sup.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS sup.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS sup.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS sup.hidden: setAttribute() to "hidden" followed by IDL get 
PASS sup.hidden: IDL set to "" should not throw 
PASS sup.hidden: IDL set to "" followed by hasAttribute() 
PASS sup.hidden: IDL set to "" followed by IDL get 
PASS sup.hidden: IDL set to " foo " should not throw 
PASS sup.hidden: IDL set to " foo " followed by hasAttribute() 
PASS sup.hidden: IDL set to " foo " followed by IDL get 
PASS sup.hidden: IDL set to undefined should not throw 
PASS sup.hidden: IDL set to undefined followed by hasAttribute() 
PASS sup.hidden: IDL set to undefined followed by IDL get 
PASS sup.hidden: IDL set to null should not throw 
PASS sup.hidden: IDL set to null followed by hasAttribute() 
PASS sup.hidden: IDL set to null followed by IDL get 
PASS sup.hidden: IDL set to 7 should not throw 
PASS sup.hidden: IDL set to 7 followed by hasAttribute() 
PASS sup.hidden: IDL set to 7 followed by IDL get 
PASS sup.hidden: IDL set to 1.5 should not throw 
PASS sup.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS sup.hidden: IDL set to 1.5 followed by IDL get 
PASS sup.hidden: IDL set to true should not throw 
PASS sup.hidden: IDL set to true followed by hasAttribute() 
PASS sup.hidden: IDL set to true followed by IDL get 
PASS sup.hidden: IDL set to false should not throw 
PASS sup.hidden: IDL set to false followed by hasAttribute() 
PASS sup.hidden: IDL set to false followed by IDL get 
PASS sup.hidden: IDL set to object "[object Object]" should not throw 
PASS sup.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS sup.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS sup.hidden: IDL set to NaN should not throw 
PASS sup.hidden: IDL set to NaN followed by hasAttribute() 
PASS sup.hidden: IDL set to NaN followed by IDL get 
PASS sup.hidden: IDL set to Infinity should not throw 
PASS sup.hidden: IDL set to Infinity followed by hasAttribute() 
PASS sup.hidden: IDL set to Infinity followed by IDL get 
PASS sup.hidden: IDL set to -Infinity should not throw 
PASS sup.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS sup.hidden: IDL set to -Infinity followed by IDL get 
PASS sup.hidden: IDL set to "\0" should not throw 
PASS sup.hidden: IDL set to "\0" followed by hasAttribute() 
PASS sup.hidden: IDL set to "\0" followed by IDL get 
PASS sup.hidden: IDL set to object "test-toString" should not throw 
PASS sup.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS sup.hidden: IDL set to object "test-toString" followed by IDL get 
PASS sup.hidden: IDL set to object "test-valueOf" should not throw 
PASS sup.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS sup.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS sup.accessKey: typeof IDL attribute 
PASS sup.accessKey: IDL get with DOM attribute unset 
PASS sup.accessKey: setAttribute() to "" followed by getAttribute() 
PASS sup.accessKey: setAttribute() to "" followed by IDL get 
PASS sup.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sup.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sup.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS sup.accessKey: setAttribute() to undefined followed by IDL get 
PASS sup.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS sup.accessKey: setAttribute() to 7 followed by IDL get 
PASS sup.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS sup.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS sup.accessKey: setAttribute() to true followed by getAttribute() 
PASS sup.accessKey: setAttribute() to true followed by IDL get 
PASS sup.accessKey: setAttribute() to false followed by getAttribute() 
PASS sup.accessKey: setAttribute() to false followed by IDL get 
PASS sup.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS sup.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS sup.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS sup.accessKey: setAttribute() to NaN followed by IDL get 
PASS sup.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS sup.accessKey: setAttribute() to Infinity followed by IDL get 
PASS sup.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS sup.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS sup.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS sup.accessKey: setAttribute() to "\0" followed by IDL get 
PASS sup.accessKey: setAttribute() to null followed by getAttribute() 
PASS sup.accessKey: setAttribute() to null followed by IDL get 
PASS sup.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS sup.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS sup.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS sup.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS sup.accessKey: IDL set to "" should not throw 
PASS sup.accessKey: IDL set to "" followed by getAttribute() 
PASS sup.accessKey: IDL set to "" followed by IDL get 
PASS sup.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS sup.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS sup.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS sup.accessKey: IDL set to undefined should not throw 
PASS sup.accessKey: IDL set to undefined followed by getAttribute() 
PASS sup.accessKey: IDL set to undefined followed by IDL get 
PASS sup.accessKey: IDL set to 7 should not throw 
PASS sup.accessKey: IDL set to 7 followed by getAttribute() 
PASS sup.accessKey: IDL set to 7 followed by IDL get 
PASS sup.accessKey: IDL set to 1.5 should not throw 
PASS sup.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS sup.accessKey: IDL set to 1.5 followed by IDL get 
PASS sup.accessKey: IDL set to true should not throw 
PASS sup.accessKey: IDL set to true followed by getAttribute() 
PASS sup.accessKey: IDL set to true followed by IDL get 
PASS sup.accessKey: IDL set to false should not throw 
PASS sup.accessKey: IDL set to false followed by getAttribute() 
PASS sup.accessKey: IDL set to false followed by IDL get 
PASS sup.accessKey: IDL set to object "[object Object]" should not throw 
PASS sup.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS sup.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS sup.accessKey: IDL set to NaN should not throw 
PASS sup.accessKey: IDL set to NaN followed by getAttribute() 
PASS sup.accessKey: IDL set to NaN followed by IDL get 
PASS sup.accessKey: IDL set to Infinity should not throw 
PASS sup.accessKey: IDL set to Infinity followed by getAttribute() 
PASS sup.accessKey: IDL set to Infinity followed by IDL get 
PASS sup.accessKey: IDL set to -Infinity should not throw 
PASS sup.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS sup.accessKey: IDL set to -Infinity followed by IDL get 
PASS sup.accessKey: IDL set to "\0" should not throw 
PASS sup.accessKey: IDL set to "\0" followed by getAttribute() 
PASS sup.accessKey: IDL set to "\0" followed by IDL get 
PASS sup.accessKey: IDL set to null should not throw 
PASS sup.accessKey: IDL set to null followed by getAttribute() 
PASS sup.accessKey: IDL set to null followed by IDL get 
PASS sup.accessKey: IDL set to object "test-toString" should not throw 
PASS sup.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS sup.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS sup.accessKey: IDL set to object "test-valueOf" should not throw 
PASS sup.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS sup.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS sup.tabIndex: typeof IDL attribute 
PASS sup.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to -36 followed by IDL get 
PASS sup.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to -1 followed by IDL get 
PASS sup.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to 0 followed by IDL get 
PASS sup.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to 1 followed by IDL get 
PASS sup.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL sup.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS sup.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL sup.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS sup.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS sup.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS sup.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to "0" followed by IDL get 
PASS sup.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to "1" followed by IDL get 
PASS sup.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS sup.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS sup.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS sup.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS sup.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS sup.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS sup.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS sup.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS sup.tabIndex: IDL set to -36 should not throw 
PASS sup.tabIndex: IDL set to -36 followed by getAttribute() 
PASS sup.tabIndex: IDL set to -36 followed by IDL get 
PASS sup.tabIndex: IDL set to -1 should not throw 
PASS sup.tabIndex: IDL set to -1 followed by getAttribute() 
PASS sup.tabIndex: IDL set to -1 followed by IDL get 
PASS sup.tabIndex: IDL set to 0 should not throw 
PASS sup.tabIndex: IDL set to 0 followed by getAttribute() 
PASS sup.tabIndex: IDL set to 0 followed by IDL get 
PASS sup.tabIndex: IDL set to 1 should not throw 
PASS sup.tabIndex: IDL set to 1 followed by getAttribute() 
PASS sup.tabIndex: IDL set to 1 followed by IDL get 
PASS sup.tabIndex: IDL set to 2147483647 should not throw 
PASS sup.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL sup.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS sup.tabIndex: IDL set to -2147483648 should not throw 
PASS sup.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL sup.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL sup.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL sup.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS sup.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to null followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to true followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to false followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL sup.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS sup.itemScope: IDL set to "" should not throw 
FAIL sup.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL sup.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS sup.itemScope: IDL set to " foo " should not throw 
PASS sup.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL sup.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS sup.itemScope: IDL set to undefined should not throw 
FAIL sup.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL sup.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS sup.itemScope: IDL set to null should not throw 
FAIL sup.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL sup.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS sup.itemScope: IDL set to 7 should not throw 
PASS sup.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL sup.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS sup.itemScope: IDL set to 1.5 should not throw 
PASS sup.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL sup.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS sup.itemScope: IDL set to true should not throw 
PASS sup.itemScope: IDL set to true followed by hasAttribute() 
PASS sup.itemScope: IDL set to true followed by IDL get 
PASS sup.itemScope: IDL set to false should not throw 
FAIL sup.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS sup.itemScope: IDL set to false followed by IDL get 
PASS sup.itemScope: IDL set to object "[object Object]" should not throw 
PASS sup.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL sup.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS sup.itemScope: IDL set to NaN should not throw 
FAIL sup.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL sup.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS sup.itemScope: IDL set to Infinity should not throw 
PASS sup.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL sup.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS sup.itemScope: IDL set to -Infinity should not throw 
PASS sup.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL sup.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS sup.itemScope: IDL set to "\0" should not throw 
PASS sup.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL sup.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS sup.itemScope: IDL set to object "test-toString" should not throw 
PASS sup.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL sup.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS sup.itemScope: IDL set to object "test-valueOf" should not throw 
PASS sup.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL sup.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL sup.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL sup.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS sup.itemId: setAttribute() to "" followed by getAttribute() 
FAIL sup.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS sup.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL sup.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS sup.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL sup.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS sup.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL sup.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS sup.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL sup.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS sup.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL sup.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS sup.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL sup.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS sup.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL sup.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS sup.itemId: setAttribute() to true followed by getAttribute() 
FAIL sup.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS sup.itemId: setAttribute() to false followed by getAttribute() 
FAIL sup.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS sup.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL sup.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS sup.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL sup.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS sup.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL sup.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS sup.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL sup.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS sup.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL sup.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS sup.itemId: setAttribute() to null followed by getAttribute() 
FAIL sup.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS sup.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL sup.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS sup.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL sup.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS sup.itemId: IDL set to "" should not throw 
FAIL sup.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL sup.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS sup.itemId: IDL set to " foo " should not throw 
FAIL sup.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL sup.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS sup.itemId: IDL set to "http://site.example/" should not throw 
FAIL sup.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS sup.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS sup.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL sup.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL sup.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS sup.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL sup.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL sup.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS sup.itemId: IDL set to undefined should not throw 
FAIL sup.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL sup.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS sup.itemId: IDL set to 7 should not throw 
FAIL sup.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL sup.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS sup.itemId: IDL set to 1.5 should not throw 
FAIL sup.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL sup.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS sup.itemId: IDL set to true should not throw 
FAIL sup.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL sup.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS sup.itemId: IDL set to false should not throw 
FAIL sup.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL sup.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS sup.itemId: IDL set to object "[object Object]" should not throw 
FAIL sup.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL sup.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS sup.itemId: IDL set to NaN should not throw 
FAIL sup.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL sup.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS sup.itemId: IDL set to Infinity should not throw 
FAIL sup.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL sup.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS sup.itemId: IDL set to -Infinity should not throw 
FAIL sup.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL sup.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS sup.itemId: IDL set to "\0" should not throw 
FAIL sup.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL sup.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS sup.itemId: IDL set to null should not throw 
FAIL sup.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL sup.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS sup.itemId: IDL set to object "test-toString" should not throw 
FAIL sup.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL sup.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS sup.itemId: IDL set to object "test-valueOf" should not throw 
PASS sup.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL sup.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS i.title: typeof IDL attribute 
PASS i.title: IDL get with DOM attribute unset 
PASS i.title: setAttribute() to "" followed by getAttribute() 
PASS i.title: setAttribute() to "" followed by IDL get 
PASS i.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS i.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS i.title: setAttribute() to undefined followed by getAttribute() 
PASS i.title: setAttribute() to undefined followed by IDL get 
PASS i.title: setAttribute() to 7 followed by getAttribute() 
PASS i.title: setAttribute() to 7 followed by IDL get 
PASS i.title: setAttribute() to 1.5 followed by getAttribute() 
PASS i.title: setAttribute() to 1.5 followed by IDL get 
PASS i.title: setAttribute() to true followed by getAttribute() 
PASS i.title: setAttribute() to true followed by IDL get 
PASS i.title: setAttribute() to false followed by getAttribute() 
PASS i.title: setAttribute() to false followed by IDL get 
PASS i.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS i.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS i.title: setAttribute() to NaN followed by getAttribute() 
PASS i.title: setAttribute() to NaN followed by IDL get 
PASS i.title: setAttribute() to Infinity followed by getAttribute() 
PASS i.title: setAttribute() to Infinity followed by IDL get 
PASS i.title: setAttribute() to -Infinity followed by getAttribute() 
PASS i.title: setAttribute() to -Infinity followed by IDL get 
PASS i.title: setAttribute() to "\0" followed by getAttribute() 
PASS i.title: setAttribute() to "\0" followed by IDL get 
PASS i.title: setAttribute() to null followed by getAttribute() 
PASS i.title: setAttribute() to null followed by IDL get 
PASS i.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS i.title: setAttribute() to object "test-toString" followed by IDL get 
PASS i.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS i.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS i.title: IDL set to "" should not throw 
PASS i.title: IDL set to "" followed by getAttribute() 
PASS i.title: IDL set to "" followed by IDL get 
PASS i.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS i.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS i.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS i.title: IDL set to undefined should not throw 
PASS i.title: IDL set to undefined followed by getAttribute() 
PASS i.title: IDL set to undefined followed by IDL get 
PASS i.title: IDL set to 7 should not throw 
PASS i.title: IDL set to 7 followed by getAttribute() 
PASS i.title: IDL set to 7 followed by IDL get 
PASS i.title: IDL set to 1.5 should not throw 
PASS i.title: IDL set to 1.5 followed by getAttribute() 
PASS i.title: IDL set to 1.5 followed by IDL get 
PASS i.title: IDL set to true should not throw 
PASS i.title: IDL set to true followed by getAttribute() 
PASS i.title: IDL set to true followed by IDL get 
PASS i.title: IDL set to false should not throw 
PASS i.title: IDL set to false followed by getAttribute() 
PASS i.title: IDL set to false followed by IDL get 
PASS i.title: IDL set to object "[object Object]" should not throw 
PASS i.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS i.title: IDL set to object "[object Object]" followed by IDL get 
PASS i.title: IDL set to NaN should not throw 
PASS i.title: IDL set to NaN followed by getAttribute() 
PASS i.title: IDL set to NaN followed by IDL get 
PASS i.title: IDL set to Infinity should not throw 
PASS i.title: IDL set to Infinity followed by getAttribute() 
PASS i.title: IDL set to Infinity followed by IDL get 
PASS i.title: IDL set to -Infinity should not throw 
PASS i.title: IDL set to -Infinity followed by getAttribute() 
PASS i.title: IDL set to -Infinity followed by IDL get 
PASS i.title: IDL set to "\0" should not throw 
PASS i.title: IDL set to "\0" followed by getAttribute() 
PASS i.title: IDL set to "\0" followed by IDL get 
PASS i.title: IDL set to null should not throw 
PASS i.title: IDL set to null followed by getAttribute() 
PASS i.title: IDL set to null followed by IDL get 
PASS i.title: IDL set to object "test-toString" should not throw 
PASS i.title: IDL set to object "test-toString" followed by getAttribute() 
PASS i.title: IDL set to object "test-toString" followed by IDL get 
PASS i.title: IDL set to object "test-valueOf" should not throw 
PASS i.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS i.title: IDL set to object "test-valueOf" followed by IDL get 
PASS i.lang: typeof IDL attribute 
PASS i.lang: IDL get with DOM attribute unset 
PASS i.lang: setAttribute() to "" followed by getAttribute() 
PASS i.lang: setAttribute() to "" followed by IDL get 
PASS i.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS i.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS i.lang: setAttribute() to undefined followed by getAttribute() 
PASS i.lang: setAttribute() to undefined followed by IDL get 
PASS i.lang: setAttribute() to 7 followed by getAttribute() 
PASS i.lang: setAttribute() to 7 followed by IDL get 
PASS i.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS i.lang: setAttribute() to 1.5 followed by IDL get 
PASS i.lang: setAttribute() to true followed by getAttribute() 
PASS i.lang: setAttribute() to true followed by IDL get 
PASS i.lang: setAttribute() to false followed by getAttribute() 
PASS i.lang: setAttribute() to false followed by IDL get 
PASS i.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS i.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS i.lang: setAttribute() to NaN followed by getAttribute() 
PASS i.lang: setAttribute() to NaN followed by IDL get 
PASS i.lang: setAttribute() to Infinity followed by getAttribute() 
PASS i.lang: setAttribute() to Infinity followed by IDL get 
PASS i.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS i.lang: setAttribute() to -Infinity followed by IDL get 
PASS i.lang: setAttribute() to "\0" followed by getAttribute() 
PASS i.lang: setAttribute() to "\0" followed by IDL get 
PASS i.lang: setAttribute() to null followed by getAttribute() 
PASS i.lang: setAttribute() to null followed by IDL get 
PASS i.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS i.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS i.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS i.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS i.lang: IDL set to "" should not throw 
PASS i.lang: IDL set to "" followed by getAttribute() 
PASS i.lang: IDL set to "" followed by IDL get 
PASS i.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS i.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS i.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS i.lang: IDL set to undefined should not throw 
PASS i.lang: IDL set to undefined followed by getAttribute() 
PASS i.lang: IDL set to undefined followed by IDL get 
PASS i.lang: IDL set to 7 should not throw 
PASS i.lang: IDL set to 7 followed by getAttribute() 
PASS i.lang: IDL set to 7 followed by IDL get 
PASS i.lang: IDL set to 1.5 should not throw 
PASS i.lang: IDL set to 1.5 followed by getAttribute() 
PASS i.lang: IDL set to 1.5 followed by IDL get 
PASS i.lang: IDL set to true should not throw 
PASS i.lang: IDL set to true followed by getAttribute() 
PASS i.lang: IDL set to true followed by IDL get 
PASS i.lang: IDL set to false should not throw 
PASS i.lang: IDL set to false followed by getAttribute() 
PASS i.lang: IDL set to false followed by IDL get 
PASS i.lang: IDL set to object "[object Object]" should not throw 
PASS i.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS i.lang: IDL set to object "[object Object]" followed by IDL get 
PASS i.lang: IDL set to NaN should not throw 
PASS i.lang: IDL set to NaN followed by getAttribute() 
PASS i.lang: IDL set to NaN followed by IDL get 
PASS i.lang: IDL set to Infinity should not throw 
PASS i.lang: IDL set to Infinity followed by getAttribute() 
PASS i.lang: IDL set to Infinity followed by IDL get 
PASS i.lang: IDL set to -Infinity should not throw 
PASS i.lang: IDL set to -Infinity followed by getAttribute() 
PASS i.lang: IDL set to -Infinity followed by IDL get 
PASS i.lang: IDL set to "\0" should not throw 
PASS i.lang: IDL set to "\0" followed by getAttribute() 
PASS i.lang: IDL set to "\0" followed by IDL get 
PASS i.lang: IDL set to null should not throw 
PASS i.lang: IDL set to null followed by getAttribute() 
PASS i.lang: IDL set to null followed by IDL get 
PASS i.lang: IDL set to object "test-toString" should not throw 
PASS i.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS i.lang: IDL set to object "test-toString" followed by IDL get 
PASS i.lang: IDL set to object "test-valueOf" should not throw 
PASS i.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS i.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS i.dir: typeof IDL attribute 
PASS i.dir: IDL get with DOM attribute unset 
PASS i.dir: setAttribute() to "" followed by getAttribute() 
PASS i.dir: setAttribute() to "" followed by IDL get 
PASS i.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS i.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS i.dir: setAttribute() to undefined followed by getAttribute() 
PASS i.dir: setAttribute() to undefined followed by IDL get 
PASS i.dir: setAttribute() to 7 followed by getAttribute() 
PASS i.dir: setAttribute() to 7 followed by IDL get 
PASS i.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS i.dir: setAttribute() to 1.5 followed by IDL get 
PASS i.dir: setAttribute() to true followed by getAttribute() 
PASS i.dir: setAttribute() to true followed by IDL get 
PASS i.dir: setAttribute() to false followed by getAttribute() 
PASS i.dir: setAttribute() to false followed by IDL get 
PASS i.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS i.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS i.dir: setAttribute() to NaN followed by getAttribute() 
PASS i.dir: setAttribute() to NaN followed by IDL get 
PASS i.dir: setAttribute() to Infinity followed by getAttribute() 
PASS i.dir: setAttribute() to Infinity followed by IDL get 
PASS i.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS i.dir: setAttribute() to -Infinity followed by IDL get 
PASS i.dir: setAttribute() to "\0" followed by getAttribute() 
PASS i.dir: setAttribute() to "\0" followed by IDL get 
PASS i.dir: setAttribute() to null followed by getAttribute() 
PASS i.dir: setAttribute() to null followed by IDL get 
PASS i.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS i.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS i.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS i.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS i.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS i.dir: setAttribute() to "ltr" followed by IDL get 
PASS i.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS i.dir: setAttribute() to "xltr" followed by IDL get 
PASS i.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS i.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS i.dir: setAttribute() to "tr" followed by getAttribute() 
PASS i.dir: setAttribute() to "tr" followed by IDL get 
PASS i.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS i.dir: setAttribute() to "LTR" followed by IDL get 
PASS i.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS i.dir: setAttribute() to "rtl" followed by IDL get 
PASS i.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS i.dir: setAttribute() to "xrtl" followed by IDL get 
PASS i.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS i.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS i.dir: setAttribute() to "tl" followed by getAttribute() 
PASS i.dir: setAttribute() to "tl" followed by IDL get 
PASS i.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS i.dir: setAttribute() to "RTL" followed by IDL get 
PASS i.dir: setAttribute() to "auto" followed by getAttribute() 
PASS i.dir: setAttribute() to "auto" followed by IDL get 
PASS i.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS i.dir: setAttribute() to "xauto" followed by IDL get 
PASS i.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS i.dir: setAttribute() to "auto\0" followed by IDL get 
PASS i.dir: setAttribute() to "uto" followed by getAttribute() 
PASS i.dir: setAttribute() to "uto" followed by IDL get 
PASS i.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS i.dir: setAttribute() to "AUTO" followed by IDL get 
PASS i.dir: IDL set to "" should not throw 
PASS i.dir: IDL set to "" followed by getAttribute() 
PASS i.dir: IDL set to "" followed by IDL get 
PASS i.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS i.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS i.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS i.dir: IDL set to undefined should not throw 
PASS i.dir: IDL set to undefined followed by getAttribute() 
PASS i.dir: IDL set to undefined followed by IDL get 
PASS i.dir: IDL set to 7 should not throw 
PASS i.dir: IDL set to 7 followed by getAttribute() 
PASS i.dir: IDL set to 7 followed by IDL get 
PASS i.dir: IDL set to 1.5 should not throw 
PASS i.dir: IDL set to 1.5 followed by getAttribute() 
PASS i.dir: IDL set to 1.5 followed by IDL get 
PASS i.dir: IDL set to true should not throw 
PASS i.dir: IDL set to true followed by getAttribute() 
PASS i.dir: IDL set to true followed by IDL get 
PASS i.dir: IDL set to false should not throw 
PASS i.dir: IDL set to false followed by getAttribute() 
PASS i.dir: IDL set to false followed by IDL get 
PASS i.dir: IDL set to object "[object Object]" should not throw 
PASS i.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS i.dir: IDL set to object "[object Object]" followed by IDL get 
PASS i.dir: IDL set to NaN should not throw 
PASS i.dir: IDL set to NaN followed by getAttribute() 
PASS i.dir: IDL set to NaN followed by IDL get 
PASS i.dir: IDL set to Infinity should not throw 
PASS i.dir: IDL set to Infinity followed by getAttribute() 
PASS i.dir: IDL set to Infinity followed by IDL get 
PASS i.dir: IDL set to -Infinity should not throw 
PASS i.dir: IDL set to -Infinity followed by getAttribute() 
PASS i.dir: IDL set to -Infinity followed by IDL get 
PASS i.dir: IDL set to "\0" should not throw 
PASS i.dir: IDL set to "\0" followed by getAttribute() 
PASS i.dir: IDL set to "\0" followed by IDL get 
PASS i.dir: IDL set to null should not throw 
PASS i.dir: IDL set to null followed by IDL get 
PASS i.dir: IDL set to object "test-toString" should not throw 
PASS i.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS i.dir: IDL set to object "test-toString" followed by IDL get 
PASS i.dir: IDL set to object "test-valueOf" should not throw 
PASS i.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS i.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS i.dir: IDL set to "ltr" should not throw 
PASS i.dir: IDL set to "ltr" followed by getAttribute() 
PASS i.dir: IDL set to "ltr" followed by IDL get 
PASS i.dir: IDL set to "xltr" should not throw 
PASS i.dir: IDL set to "xltr" followed by getAttribute() 
PASS i.dir: IDL set to "xltr" followed by IDL get 
PASS i.dir: IDL set to "ltr\0" should not throw 
PASS i.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS i.dir: IDL set to "ltr\0" followed by IDL get 
PASS i.dir: IDL set to "tr" should not throw 
PASS i.dir: IDL set to "tr" followed by getAttribute() 
PASS i.dir: IDL set to "tr" followed by IDL get 
PASS i.dir: IDL set to "LTR" should not throw 
PASS i.dir: IDL set to "LTR" followed by getAttribute() 
PASS i.dir: IDL set to "LTR" followed by IDL get 
PASS i.dir: IDL set to "rtl" should not throw 
PASS i.dir: IDL set to "rtl" followed by getAttribute() 
PASS i.dir: IDL set to "rtl" followed by IDL get 
PASS i.dir: IDL set to "xrtl" should not throw 
PASS i.dir: IDL set to "xrtl" followed by getAttribute() 
PASS i.dir: IDL set to "xrtl" followed by IDL get 
PASS i.dir: IDL set to "rtl\0" should not throw 
PASS i.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS i.dir: IDL set to "rtl\0" followed by IDL get 
PASS i.dir: IDL set to "tl" should not throw 
PASS i.dir: IDL set to "tl" followed by getAttribute() 
PASS i.dir: IDL set to "tl" followed by IDL get 
PASS i.dir: IDL set to "RTL" should not throw 
PASS i.dir: IDL set to "RTL" followed by getAttribute() 
PASS i.dir: IDL set to "RTL" followed by IDL get 
PASS i.dir: IDL set to "auto" should not throw 
PASS i.dir: IDL set to "auto" followed by getAttribute() 
PASS i.dir: IDL set to "auto" followed by IDL get 
PASS i.dir: IDL set to "xauto" should not throw 
PASS i.dir: IDL set to "xauto" followed by getAttribute() 
PASS i.dir: IDL set to "xauto" followed by IDL get 
PASS i.dir: IDL set to "auto\0" should not throw 
PASS i.dir: IDL set to "auto\0" followed by getAttribute() 
PASS i.dir: IDL set to "auto\0" followed by IDL get 
PASS i.dir: IDL set to "uto" should not throw 
PASS i.dir: IDL set to "uto" followed by getAttribute() 
PASS i.dir: IDL set to "uto" followed by IDL get 
PASS i.dir: IDL set to "AUTO" should not throw 
PASS i.dir: IDL set to "AUTO" followed by getAttribute() 
PASS i.dir: IDL set to "AUTO" followed by IDL get 
PASS i.className (<i class>): typeof IDL attribute 
PASS i.className (<i class>): IDL get with DOM attribute unset 
PASS i.className (<i class>): setAttribute() to "" followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to "" followed by IDL get 
PASS i.className (<i class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS i.className (<i class>): setAttribute() to undefined followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to undefined followed by IDL get 
PASS i.className (<i class>): setAttribute() to 7 followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to 7 followed by IDL get 
PASS i.className (<i class>): setAttribute() to 1.5 followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to 1.5 followed by IDL get 
PASS i.className (<i class>): setAttribute() to true followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to true followed by IDL get 
PASS i.className (<i class>): setAttribute() to false followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to false followed by IDL get 
PASS i.className (<i class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS i.className (<i class>): setAttribute() to NaN followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to NaN followed by IDL get 
PASS i.className (<i class>): setAttribute() to Infinity followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to Infinity followed by IDL get 
PASS i.className (<i class>): setAttribute() to -Infinity followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to -Infinity followed by IDL get 
PASS i.className (<i class>): setAttribute() to "\0" followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to "\0" followed by IDL get 
PASS i.className (<i class>): setAttribute() to null followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to null followed by IDL get 
PASS i.className (<i class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to object "test-toString" followed by IDL get 
PASS i.className (<i class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS i.className (<i class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS i.className (<i class>): IDL set to "" should not throw 
PASS i.className (<i class>): IDL set to "" followed by getAttribute() 
PASS i.className (<i class>): IDL set to "" followed by IDL get 
PASS i.className (<i class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS i.className (<i class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS i.className (<i class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS i.className (<i class>): IDL set to undefined should not throw 
PASS i.className (<i class>): IDL set to undefined followed by getAttribute() 
PASS i.className (<i class>): IDL set to undefined followed by IDL get 
PASS i.className (<i class>): IDL set to 7 should not throw 
PASS i.className (<i class>): IDL set to 7 followed by getAttribute() 
PASS i.className (<i class>): IDL set to 7 followed by IDL get 
PASS i.className (<i class>): IDL set to 1.5 should not throw 
PASS i.className (<i class>): IDL set to 1.5 followed by getAttribute() 
PASS i.className (<i class>): IDL set to 1.5 followed by IDL get 
PASS i.className (<i class>): IDL set to true should not throw 
PASS i.className (<i class>): IDL set to true followed by getAttribute() 
PASS i.className (<i class>): IDL set to true followed by IDL get 
PASS i.className (<i class>): IDL set to false should not throw 
PASS i.className (<i class>): IDL set to false followed by getAttribute() 
PASS i.className (<i class>): IDL set to false followed by IDL get 
PASS i.className (<i class>): IDL set to object "[object Object]" should not throw 
PASS i.className (<i class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS i.className (<i class>): IDL set to object "[object Object]" followed by IDL get 
PASS i.className (<i class>): IDL set to NaN should not throw 
PASS i.className (<i class>): IDL set to NaN followed by getAttribute() 
PASS i.className (<i class>): IDL set to NaN followed by IDL get 
PASS i.className (<i class>): IDL set to Infinity should not throw 
PASS i.className (<i class>): IDL set to Infinity followed by getAttribute() 
PASS i.className (<i class>): IDL set to Infinity followed by IDL get 
PASS i.className (<i class>): IDL set to -Infinity should not throw 
PASS i.className (<i class>): IDL set to -Infinity followed by getAttribute() 
PASS i.className (<i class>): IDL set to -Infinity followed by IDL get 
PASS i.className (<i class>): IDL set to "\0" should not throw 
PASS i.className (<i class>): IDL set to "\0" followed by getAttribute() 
PASS i.className (<i class>): IDL set to "\0" followed by IDL get 
PASS i.className (<i class>): IDL set to null should not throw 
PASS i.className (<i class>): IDL set to null followed by getAttribute() 
PASS i.className (<i class>): IDL set to null followed by IDL get 
PASS i.className (<i class>): IDL set to object "test-toString" should not throw 
PASS i.className (<i class>): IDL set to object "test-toString" followed by getAttribute() 
PASS i.className (<i class>): IDL set to object "test-toString" followed by IDL get 
PASS i.className (<i class>): IDL set to object "test-valueOf" should not throw 
PASS i.className (<i class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS i.className (<i class>): IDL set to object "test-valueOf" followed by IDL get 
PASS i.hidden: typeof IDL attribute 
PASS i.hidden: IDL get with DOM attribute unset 
PASS i.hidden: setAttribute() to "" followed by getAttribute() 
PASS i.hidden: setAttribute() to "" followed by IDL get 
PASS i.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS i.hidden: setAttribute() to " foo " followed by IDL get 
PASS i.hidden: setAttribute() to undefined followed by getAttribute() 
PASS i.hidden: setAttribute() to undefined followed by IDL get 
PASS i.hidden: setAttribute() to null followed by getAttribute() 
PASS i.hidden: setAttribute() to null followed by IDL get 
PASS i.hidden: setAttribute() to 7 followed by getAttribute() 
PASS i.hidden: setAttribute() to 7 followed by IDL get 
PASS i.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS i.hidden: setAttribute() to 1.5 followed by IDL get 
PASS i.hidden: setAttribute() to true followed by getAttribute() 
PASS i.hidden: setAttribute() to true followed by IDL get 
PASS i.hidden: setAttribute() to false followed by getAttribute() 
PASS i.hidden: setAttribute() to false followed by IDL get 
PASS i.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS i.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS i.hidden: setAttribute() to NaN followed by getAttribute() 
PASS i.hidden: setAttribute() to NaN followed by IDL get 
PASS i.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS i.hidden: setAttribute() to Infinity followed by IDL get 
PASS i.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS i.hidden: setAttribute() to -Infinity followed by IDL get 
PASS i.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS i.hidden: setAttribute() to "\0" followed by IDL get 
PASS i.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS i.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS i.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS i.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS i.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS i.hidden: setAttribute() to "hidden" followed by IDL get 
PASS i.hidden: IDL set to "" should not throw 
PASS i.hidden: IDL set to "" followed by hasAttribute() 
PASS i.hidden: IDL set to "" followed by IDL get 
PASS i.hidden: IDL set to " foo " should not throw 
PASS i.hidden: IDL set to " foo " followed by hasAttribute() 
PASS i.hidden: IDL set to " foo " followed by IDL get 
PASS i.hidden: IDL set to undefined should not throw 
PASS i.hidden: IDL set to undefined followed by hasAttribute() 
PASS i.hidden: IDL set to undefined followed by IDL get 
PASS i.hidden: IDL set to null should not throw 
PASS i.hidden: IDL set to null followed by hasAttribute() 
PASS i.hidden: IDL set to null followed by IDL get 
PASS i.hidden: IDL set to 7 should not throw 
PASS i.hidden: IDL set to 7 followed by hasAttribute() 
PASS i.hidden: IDL set to 7 followed by IDL get 
PASS i.hidden: IDL set to 1.5 should not throw 
PASS i.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS i.hidden: IDL set to 1.5 followed by IDL get 
PASS i.hidden: IDL set to true should not throw 
PASS i.hidden: IDL set to true followed by hasAttribute() 
PASS i.hidden: IDL set to true followed by IDL get 
PASS i.hidden: IDL set to false should not throw 
PASS i.hidden: IDL set to false followed by hasAttribute() 
PASS i.hidden: IDL set to false followed by IDL get 
PASS i.hidden: IDL set to object "[object Object]" should not throw 
PASS i.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS i.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS i.hidden: IDL set to NaN should not throw 
PASS i.hidden: IDL set to NaN followed by hasAttribute() 
PASS i.hidden: IDL set to NaN followed by IDL get 
PASS i.hidden: IDL set to Infinity should not throw 
PASS i.hidden: IDL set to Infinity followed by hasAttribute() 
PASS i.hidden: IDL set to Infinity followed by IDL get 
PASS i.hidden: IDL set to -Infinity should not throw 
PASS i.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS i.hidden: IDL set to -Infinity followed by IDL get 
PASS i.hidden: IDL set to "\0" should not throw 
PASS i.hidden: IDL set to "\0" followed by hasAttribute() 
PASS i.hidden: IDL set to "\0" followed by IDL get 
PASS i.hidden: IDL set to object "test-toString" should not throw 
PASS i.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS i.hidden: IDL set to object "test-toString" followed by IDL get 
PASS i.hidden: IDL set to object "test-valueOf" should not throw 
PASS i.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS i.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS i.accessKey: typeof IDL attribute 
PASS i.accessKey: IDL get with DOM attribute unset 
PASS i.accessKey: setAttribute() to "" followed by getAttribute() 
PASS i.accessKey: setAttribute() to "" followed by IDL get 
PASS i.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS i.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS i.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS i.accessKey: setAttribute() to undefined followed by IDL get 
PASS i.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS i.accessKey: setAttribute() to 7 followed by IDL get 
PASS i.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS i.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS i.accessKey: setAttribute() to true followed by getAttribute() 
PASS i.accessKey: setAttribute() to true followed by IDL get 
PASS i.accessKey: setAttribute() to false followed by getAttribute() 
PASS i.accessKey: setAttribute() to false followed by IDL get 
PASS i.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS i.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS i.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS i.accessKey: setAttribute() to NaN followed by IDL get 
PASS i.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS i.accessKey: setAttribute() to Infinity followed by IDL get 
PASS i.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS i.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS i.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS i.accessKey: setAttribute() to "\0" followed by IDL get 
PASS i.accessKey: setAttribute() to null followed by getAttribute() 
PASS i.accessKey: setAttribute() to null followed by IDL get 
PASS i.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS i.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS i.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS i.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS i.accessKey: IDL set to "" should not throw 
PASS i.accessKey: IDL set to "" followed by getAttribute() 
PASS i.accessKey: IDL set to "" followed by IDL get 
PASS i.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS i.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS i.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS i.accessKey: IDL set to undefined should not throw 
PASS i.accessKey: IDL set to undefined followed by getAttribute() 
PASS i.accessKey: IDL set to undefined followed by IDL get 
PASS i.accessKey: IDL set to 7 should not throw 
PASS i.accessKey: IDL set to 7 followed by getAttribute() 
PASS i.accessKey: IDL set to 7 followed by IDL get 
PASS i.accessKey: IDL set to 1.5 should not throw 
PASS i.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS i.accessKey: IDL set to 1.5 followed by IDL get 
PASS i.accessKey: IDL set to true should not throw 
PASS i.accessKey: IDL set to true followed by getAttribute() 
PASS i.accessKey: IDL set to true followed by IDL get 
PASS i.accessKey: IDL set to false should not throw 
PASS i.accessKey: IDL set to false followed by getAttribute() 
PASS i.accessKey: IDL set to false followed by IDL get 
PASS i.accessKey: IDL set to object "[object Object]" should not throw 
PASS i.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS i.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS i.accessKey: IDL set to NaN should not throw 
PASS i.accessKey: IDL set to NaN followed by getAttribute() 
PASS i.accessKey: IDL set to NaN followed by IDL get 
PASS i.accessKey: IDL set to Infinity should not throw 
PASS i.accessKey: IDL set to Infinity followed by getAttribute() 
PASS i.accessKey: IDL set to Infinity followed by IDL get 
PASS i.accessKey: IDL set to -Infinity should not throw 
PASS i.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS i.accessKey: IDL set to -Infinity followed by IDL get 
PASS i.accessKey: IDL set to "\0" should not throw 
PASS i.accessKey: IDL set to "\0" followed by getAttribute() 
PASS i.accessKey: IDL set to "\0" followed by IDL get 
PASS i.accessKey: IDL set to null should not throw 
PASS i.accessKey: IDL set to null followed by getAttribute() 
PASS i.accessKey: IDL set to null followed by IDL get 
PASS i.accessKey: IDL set to object "test-toString" should not throw 
PASS i.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS i.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS i.accessKey: IDL set to object "test-valueOf" should not throw 
PASS i.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS i.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS i.tabIndex: typeof IDL attribute 
PASS i.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS i.tabIndex: setAttribute() to -36 followed by IDL get 
PASS i.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS i.tabIndex: setAttribute() to -1 followed by IDL get 
PASS i.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS i.tabIndex: setAttribute() to 0 followed by IDL get 
PASS i.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS i.tabIndex: setAttribute() to 1 followed by IDL get 
PASS i.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL i.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS i.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL i.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS i.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS i.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS i.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS i.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS i.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS i.tabIndex: setAttribute() to "0" followed by IDL get 
PASS i.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS i.tabIndex: setAttribute() to "1" followed by IDL get 
PASS i.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS i.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS i.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS i.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS i.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS i.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS i.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS i.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS i.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS i.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS i.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS i.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS i.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS i.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS i.tabIndex: IDL set to -36 should not throw 
PASS i.tabIndex: IDL set to -36 followed by getAttribute() 
PASS i.tabIndex: IDL set to -36 followed by IDL get 
PASS i.tabIndex: IDL set to -1 should not throw 
PASS i.tabIndex: IDL set to -1 followed by getAttribute() 
PASS i.tabIndex: IDL set to -1 followed by IDL get 
PASS i.tabIndex: IDL set to 0 should not throw 
PASS i.tabIndex: IDL set to 0 followed by getAttribute() 
PASS i.tabIndex: IDL set to 0 followed by IDL get 
PASS i.tabIndex: IDL set to 1 should not throw 
PASS i.tabIndex: IDL set to 1 followed by getAttribute() 
PASS i.tabIndex: IDL set to 1 followed by IDL get 
PASS i.tabIndex: IDL set to 2147483647 should not throw 
PASS i.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL i.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS i.tabIndex: IDL set to -2147483648 should not throw 
PASS i.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL i.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL i.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL i.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS i.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL i.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL i.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL i.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to null followed by getAttribute() 
FAIL i.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL i.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL i.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to true followed by getAttribute() 
FAIL i.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to false followed by getAttribute() 
FAIL i.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL i.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL i.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL i.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL i.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL i.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL i.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL i.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL i.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS i.itemScope: IDL set to "" should not throw 
FAIL i.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL i.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS i.itemScope: IDL set to " foo " should not throw 
PASS i.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL i.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS i.itemScope: IDL set to undefined should not throw 
FAIL i.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL i.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS i.itemScope: IDL set to null should not throw 
FAIL i.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL i.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS i.itemScope: IDL set to 7 should not throw 
PASS i.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL i.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS i.itemScope: IDL set to 1.5 should not throw 
PASS i.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL i.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS i.itemScope: IDL set to true should not throw 
PASS i.itemScope: IDL set to true followed by hasAttribute() 
PASS i.itemScope: IDL set to true followed by IDL get 
PASS i.itemScope: IDL set to false should not throw 
FAIL i.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS i.itemScope: IDL set to false followed by IDL get 
PASS i.itemScope: IDL set to object "[object Object]" should not throw 
PASS i.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL i.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS i.itemScope: IDL set to NaN should not throw 
FAIL i.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL i.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS i.itemScope: IDL set to Infinity should not throw 
PASS i.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL i.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS i.itemScope: IDL set to -Infinity should not throw 
PASS i.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL i.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS i.itemScope: IDL set to "\0" should not throw 
PASS i.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL i.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS i.itemScope: IDL set to object "test-toString" should not throw 
PASS i.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL i.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS i.itemScope: IDL set to object "test-valueOf" should not throw 
PASS i.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL i.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL i.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL i.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS i.itemId: setAttribute() to "" followed by getAttribute() 
FAIL i.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS i.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL i.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS i.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL i.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS i.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL i.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS i.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL i.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS i.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL i.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS i.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL i.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS i.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL i.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS i.itemId: setAttribute() to true followed by getAttribute() 
FAIL i.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS i.itemId: setAttribute() to false followed by getAttribute() 
FAIL i.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS i.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL i.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS i.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL i.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS i.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL i.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS i.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL i.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS i.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL i.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS i.itemId: setAttribute() to null followed by getAttribute() 
FAIL i.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS i.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL i.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS i.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL i.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS i.itemId: IDL set to "" should not throw 
FAIL i.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL i.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS i.itemId: IDL set to " foo " should not throw 
FAIL i.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL i.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS i.itemId: IDL set to "http://site.example/" should not throw 
FAIL i.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS i.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS i.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL i.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL i.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS i.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL i.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL i.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS i.itemId: IDL set to undefined should not throw 
FAIL i.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL i.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS i.itemId: IDL set to 7 should not throw 
FAIL i.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL i.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS i.itemId: IDL set to 1.5 should not throw 
FAIL i.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL i.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS i.itemId: IDL set to true should not throw 
FAIL i.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL i.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS i.itemId: IDL set to false should not throw 
FAIL i.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL i.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS i.itemId: IDL set to object "[object Object]" should not throw 
FAIL i.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL i.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS i.itemId: IDL set to NaN should not throw 
FAIL i.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL i.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS i.itemId: IDL set to Infinity should not throw 
FAIL i.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL i.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS i.itemId: IDL set to -Infinity should not throw 
FAIL i.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL i.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS i.itemId: IDL set to "\0" should not throw 
FAIL i.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL i.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS i.itemId: IDL set to null should not throw 
FAIL i.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL i.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS i.itemId: IDL set to object "test-toString" should not throw 
FAIL i.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL i.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS i.itemId: IDL set to object "test-valueOf" should not throw 
PASS i.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL i.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS b.title: typeof IDL attribute 
PASS b.title: IDL get with DOM attribute unset 
PASS b.title: setAttribute() to "" followed by getAttribute() 
PASS b.title: setAttribute() to "" followed by IDL get 
PASS b.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS b.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS b.title: setAttribute() to undefined followed by getAttribute() 
PASS b.title: setAttribute() to undefined followed by IDL get 
PASS b.title: setAttribute() to 7 followed by getAttribute() 
PASS b.title: setAttribute() to 7 followed by IDL get 
PASS b.title: setAttribute() to 1.5 followed by getAttribute() 
PASS b.title: setAttribute() to 1.5 followed by IDL get 
PASS b.title: setAttribute() to true followed by getAttribute() 
PASS b.title: setAttribute() to true followed by IDL get 
PASS b.title: setAttribute() to false followed by getAttribute() 
PASS b.title: setAttribute() to false followed by IDL get 
PASS b.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS b.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS b.title: setAttribute() to NaN followed by getAttribute() 
PASS b.title: setAttribute() to NaN followed by IDL get 
PASS b.title: setAttribute() to Infinity followed by getAttribute() 
PASS b.title: setAttribute() to Infinity followed by IDL get 
PASS b.title: setAttribute() to -Infinity followed by getAttribute() 
PASS b.title: setAttribute() to -Infinity followed by IDL get 
PASS b.title: setAttribute() to "\0" followed by getAttribute() 
PASS b.title: setAttribute() to "\0" followed by IDL get 
PASS b.title: setAttribute() to null followed by getAttribute() 
PASS b.title: setAttribute() to null followed by IDL get 
PASS b.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS b.title: setAttribute() to object "test-toString" followed by IDL get 
PASS b.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS b.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS b.title: IDL set to "" should not throw 
PASS b.title: IDL set to "" followed by getAttribute() 
PASS b.title: IDL set to "" followed by IDL get 
PASS b.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS b.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS b.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS b.title: IDL set to undefined should not throw 
PASS b.title: IDL set to undefined followed by getAttribute() 
PASS b.title: IDL set to undefined followed by IDL get 
PASS b.title: IDL set to 7 should not throw 
PASS b.title: IDL set to 7 followed by getAttribute() 
PASS b.title: IDL set to 7 followed by IDL get 
PASS b.title: IDL set to 1.5 should not throw 
PASS b.title: IDL set to 1.5 followed by getAttribute() 
PASS b.title: IDL set to 1.5 followed by IDL get 
PASS b.title: IDL set to true should not throw 
PASS b.title: IDL set to true followed by getAttribute() 
PASS b.title: IDL set to true followed by IDL get 
PASS b.title: IDL set to false should not throw 
PASS b.title: IDL set to false followed by getAttribute() 
PASS b.title: IDL set to false followed by IDL get 
PASS b.title: IDL set to object "[object Object]" should not throw 
PASS b.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS b.title: IDL set to object "[object Object]" followed by IDL get 
PASS b.title: IDL set to NaN should not throw 
PASS b.title: IDL set to NaN followed by getAttribute() 
PASS b.title: IDL set to NaN followed by IDL get 
PASS b.title: IDL set to Infinity should not throw 
PASS b.title: IDL set to Infinity followed by getAttribute() 
PASS b.title: IDL set to Infinity followed by IDL get 
PASS b.title: IDL set to -Infinity should not throw 
PASS b.title: IDL set to -Infinity followed by getAttribute() 
PASS b.title: IDL set to -Infinity followed by IDL get 
PASS b.title: IDL set to "\0" should not throw 
PASS b.title: IDL set to "\0" followed by getAttribute() 
PASS b.title: IDL set to "\0" followed by IDL get 
PASS b.title: IDL set to null should not throw 
PASS b.title: IDL set to null followed by getAttribute() 
PASS b.title: IDL set to null followed by IDL get 
PASS b.title: IDL set to object "test-toString" should not throw 
PASS b.title: IDL set to object "test-toString" followed by getAttribute() 
PASS b.title: IDL set to object "test-toString" followed by IDL get 
PASS b.title: IDL set to object "test-valueOf" should not throw 
PASS b.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS b.title: IDL set to object "test-valueOf" followed by IDL get 
PASS b.lang: typeof IDL attribute 
PASS b.lang: IDL get with DOM attribute unset 
PASS b.lang: setAttribute() to "" followed by getAttribute() 
PASS b.lang: setAttribute() to "" followed by IDL get 
PASS b.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS b.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS b.lang: setAttribute() to undefined followed by getAttribute() 
PASS b.lang: setAttribute() to undefined followed by IDL get 
PASS b.lang: setAttribute() to 7 followed by getAttribute() 
PASS b.lang: setAttribute() to 7 followed by IDL get 
PASS b.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS b.lang: setAttribute() to 1.5 followed by IDL get 
PASS b.lang: setAttribute() to true followed by getAttribute() 
PASS b.lang: setAttribute() to true followed by IDL get 
PASS b.lang: setAttribute() to false followed by getAttribute() 
PASS b.lang: setAttribute() to false followed by IDL get 
PASS b.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS b.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS b.lang: setAttribute() to NaN followed by getAttribute() 
PASS b.lang: setAttribute() to NaN followed by IDL get 
PASS b.lang: setAttribute() to Infinity followed by getAttribute() 
PASS b.lang: setAttribute() to Infinity followed by IDL get 
PASS b.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS b.lang: setAttribute() to -Infinity followed by IDL get 
PASS b.lang: setAttribute() to "\0" followed by getAttribute() 
PASS b.lang: setAttribute() to "\0" followed by IDL get 
PASS b.lang: setAttribute() to null followed by getAttribute() 
PASS b.lang: setAttribute() to null followed by IDL get 
PASS b.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS b.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS b.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS b.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS b.lang: IDL set to "" should not throw 
PASS b.lang: IDL set to "" followed by getAttribute() 
PASS b.lang: IDL set to "" followed by IDL get 
PASS b.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS b.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS b.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS b.lang: IDL set to undefined should not throw 
PASS b.lang: IDL set to undefined followed by getAttribute() 
PASS b.lang: IDL set to undefined followed by IDL get 
PASS b.lang: IDL set to 7 should not throw 
PASS b.lang: IDL set to 7 followed by getAttribute() 
PASS b.lang: IDL set to 7 followed by IDL get 
PASS b.lang: IDL set to 1.5 should not throw 
PASS b.lang: IDL set to 1.5 followed by getAttribute() 
PASS b.lang: IDL set to 1.5 followed by IDL get 
PASS b.lang: IDL set to true should not throw 
PASS b.lang: IDL set to true followed by getAttribute() 
PASS b.lang: IDL set to true followed by IDL get 
PASS b.lang: IDL set to false should not throw 
PASS b.lang: IDL set to false followed by getAttribute() 
PASS b.lang: IDL set to false followed by IDL get 
PASS b.lang: IDL set to object "[object Object]" should not throw 
PASS b.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS b.lang: IDL set to object "[object Object]" followed by IDL get 
PASS b.lang: IDL set to NaN should not throw 
PASS b.lang: IDL set to NaN followed by getAttribute() 
PASS b.lang: IDL set to NaN followed by IDL get 
PASS b.lang: IDL set to Infinity should not throw 
PASS b.lang: IDL set to Infinity followed by getAttribute() 
PASS b.lang: IDL set to Infinity followed by IDL get 
PASS b.lang: IDL set to -Infinity should not throw 
PASS b.lang: IDL set to -Infinity followed by getAttribute() 
PASS b.lang: IDL set to -Infinity followed by IDL get 
PASS b.lang: IDL set to "\0" should not throw 
PASS b.lang: IDL set to "\0" followed by getAttribute() 
PASS b.lang: IDL set to "\0" followed by IDL get 
PASS b.lang: IDL set to null should not throw 
PASS b.lang: IDL set to null followed by getAttribute() 
PASS b.lang: IDL set to null followed by IDL get 
PASS b.lang: IDL set to object "test-toString" should not throw 
PASS b.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS b.lang: IDL set to object "test-toString" followed by IDL get 
PASS b.lang: IDL set to object "test-valueOf" should not throw 
PASS b.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS b.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS b.dir: typeof IDL attribute 
PASS b.dir: IDL get with DOM attribute unset 
PASS b.dir: setAttribute() to "" followed by getAttribute() 
PASS b.dir: setAttribute() to "" followed by IDL get 
PASS b.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS b.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS b.dir: setAttribute() to undefined followed by getAttribute() 
PASS b.dir: setAttribute() to undefined followed by IDL get 
PASS b.dir: setAttribute() to 7 followed by getAttribute() 
PASS b.dir: setAttribute() to 7 followed by IDL get 
PASS b.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS b.dir: setAttribute() to 1.5 followed by IDL get 
PASS b.dir: setAttribute() to true followed by getAttribute() 
PASS b.dir: setAttribute() to true followed by IDL get 
PASS b.dir: setAttribute() to false followed by getAttribute() 
PASS b.dir: setAttribute() to false followed by IDL get 
PASS b.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS b.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS b.dir: setAttribute() to NaN followed by getAttribute() 
PASS b.dir: setAttribute() to NaN followed by IDL get 
PASS b.dir: setAttribute() to Infinity followed by getAttribute() 
PASS b.dir: setAttribute() to Infinity followed by IDL get 
PASS b.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS b.dir: setAttribute() to -Infinity followed by IDL get 
PASS b.dir: setAttribute() to "\0" followed by getAttribute() 
PASS b.dir: setAttribute() to "\0" followed by IDL get 
PASS b.dir: setAttribute() to null followed by getAttribute() 
PASS b.dir: setAttribute() to null followed by IDL get 
PASS b.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS b.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS b.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS b.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS b.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS b.dir: setAttribute() to "ltr" followed by IDL get 
PASS b.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS b.dir: setAttribute() to "xltr" followed by IDL get 
PASS b.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS b.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS b.dir: setAttribute() to "tr" followed by getAttribute() 
PASS b.dir: setAttribute() to "tr" followed by IDL get 
PASS b.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS b.dir: setAttribute() to "LTR" followed by IDL get 
PASS b.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS b.dir: setAttribute() to "rtl" followed by IDL get 
PASS b.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS b.dir: setAttribute() to "xrtl" followed by IDL get 
PASS b.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS b.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS b.dir: setAttribute() to "tl" followed by getAttribute() 
PASS b.dir: setAttribute() to "tl" followed by IDL get 
PASS b.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS b.dir: setAttribute() to "RTL" followed by IDL get 
PASS b.dir: setAttribute() to "auto" followed by getAttribute() 
PASS b.dir: setAttribute() to "auto" followed by IDL get 
PASS b.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS b.dir: setAttribute() to "xauto" followed by IDL get 
PASS b.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS b.dir: setAttribute() to "auto\0" followed by IDL get 
PASS b.dir: setAttribute() to "uto" followed by getAttribute() 
PASS b.dir: setAttribute() to "uto" followed by IDL get 
PASS b.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS b.dir: setAttribute() to "AUTO" followed by IDL get 
PASS b.dir: IDL set to "" should not throw 
PASS b.dir: IDL set to "" followed by getAttribute() 
PASS b.dir: IDL set to "" followed by IDL get 
PASS b.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS b.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS b.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS b.dir: IDL set to undefined should not throw 
PASS b.dir: IDL set to undefined followed by getAttribute() 
PASS b.dir: IDL set to undefined followed by IDL get 
PASS b.dir: IDL set to 7 should not throw 
PASS b.dir: IDL set to 7 followed by getAttribute() 
PASS b.dir: IDL set to 7 followed by IDL get 
PASS b.dir: IDL set to 1.5 should not throw 
PASS b.dir: IDL set to 1.5 followed by getAttribute() 
PASS b.dir: IDL set to 1.5 followed by IDL get 
PASS b.dir: IDL set to true should not throw 
PASS b.dir: IDL set to true followed by getAttribute() 
PASS b.dir: IDL set to true followed by IDL get 
PASS b.dir: IDL set to false should not throw 
PASS b.dir: IDL set to false followed by getAttribute() 
PASS b.dir: IDL set to false followed by IDL get 
PASS b.dir: IDL set to object "[object Object]" should not throw 
PASS b.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS b.dir: IDL set to object "[object Object]" followed by IDL get 
PASS b.dir: IDL set to NaN should not throw 
PASS b.dir: IDL set to NaN followed by getAttribute() 
PASS b.dir: IDL set to NaN followed by IDL get 
PASS b.dir: IDL set to Infinity should not throw 
PASS b.dir: IDL set to Infinity followed by getAttribute() 
PASS b.dir: IDL set to Infinity followed by IDL get 
PASS b.dir: IDL set to -Infinity should not throw 
PASS b.dir: IDL set to -Infinity followed by getAttribute() 
PASS b.dir: IDL set to -Infinity followed by IDL get 
PASS b.dir: IDL set to "\0" should not throw 
PASS b.dir: IDL set to "\0" followed by getAttribute() 
PASS b.dir: IDL set to "\0" followed by IDL get 
PASS b.dir: IDL set to null should not throw 
PASS b.dir: IDL set to null followed by IDL get 
PASS b.dir: IDL set to object "test-toString" should not throw 
PASS b.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS b.dir: IDL set to object "test-toString" followed by IDL get 
PASS b.dir: IDL set to object "test-valueOf" should not throw 
PASS b.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS b.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS b.dir: IDL set to "ltr" should not throw 
PASS b.dir: IDL set to "ltr" followed by getAttribute() 
PASS b.dir: IDL set to "ltr" followed by IDL get 
PASS b.dir: IDL set to "xltr" should not throw 
PASS b.dir: IDL set to "xltr" followed by getAttribute() 
PASS b.dir: IDL set to "xltr" followed by IDL get 
PASS b.dir: IDL set to "ltr\0" should not throw 
PASS b.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS b.dir: IDL set to "ltr\0" followed by IDL get 
PASS b.dir: IDL set to "tr" should not throw 
PASS b.dir: IDL set to "tr" followed by getAttribute() 
PASS b.dir: IDL set to "tr" followed by IDL get 
PASS b.dir: IDL set to "LTR" should not throw 
PASS b.dir: IDL set to "LTR" followed by getAttribute() 
PASS b.dir: IDL set to "LTR" followed by IDL get 
PASS b.dir: IDL set to "rtl" should not throw 
PASS b.dir: IDL set to "rtl" followed by getAttribute() 
PASS b.dir: IDL set to "rtl" followed by IDL get 
PASS b.dir: IDL set to "xrtl" should not throw 
PASS b.dir: IDL set to "xrtl" followed by getAttribute() 
PASS b.dir: IDL set to "xrtl" followed by IDL get 
PASS b.dir: IDL set to "rtl\0" should not throw 
PASS b.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS b.dir: IDL set to "rtl\0" followed by IDL get 
PASS b.dir: IDL set to "tl" should not throw 
PASS b.dir: IDL set to "tl" followed by getAttribute() 
PASS b.dir: IDL set to "tl" followed by IDL get 
PASS b.dir: IDL set to "RTL" should not throw 
PASS b.dir: IDL set to "RTL" followed by getAttribute() 
PASS b.dir: IDL set to "RTL" followed by IDL get 
PASS b.dir: IDL set to "auto" should not throw 
PASS b.dir: IDL set to "auto" followed by getAttribute() 
PASS b.dir: IDL set to "auto" followed by IDL get 
PASS b.dir: IDL set to "xauto" should not throw 
PASS b.dir: IDL set to "xauto" followed by getAttribute() 
PASS b.dir: IDL set to "xauto" followed by IDL get 
PASS b.dir: IDL set to "auto\0" should not throw 
PASS b.dir: IDL set to "auto\0" followed by getAttribute() 
PASS b.dir: IDL set to "auto\0" followed by IDL get 
PASS b.dir: IDL set to "uto" should not throw 
PASS b.dir: IDL set to "uto" followed by getAttribute() 
PASS b.dir: IDL set to "uto" followed by IDL get 
PASS b.dir: IDL set to "AUTO" should not throw 
PASS b.dir: IDL set to "AUTO" followed by getAttribute() 
PASS b.dir: IDL set to "AUTO" followed by IDL get 
PASS b.className (<b class>): typeof IDL attribute 
PASS b.className (<b class>): IDL get with DOM attribute unset 
PASS b.className (<b class>): setAttribute() to "" followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to "" followed by IDL get 
PASS b.className (<b class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS b.className (<b class>): setAttribute() to undefined followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to undefined followed by IDL get 
PASS b.className (<b class>): setAttribute() to 7 followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to 7 followed by IDL get 
PASS b.className (<b class>): setAttribute() to 1.5 followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to 1.5 followed by IDL get 
PASS b.className (<b class>): setAttribute() to true followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to true followed by IDL get 
PASS b.className (<b class>): setAttribute() to false followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to false followed by IDL get 
PASS b.className (<b class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS b.className (<b class>): setAttribute() to NaN followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to NaN followed by IDL get 
PASS b.className (<b class>): setAttribute() to Infinity followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to Infinity followed by IDL get 
PASS b.className (<b class>): setAttribute() to -Infinity followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to -Infinity followed by IDL get 
PASS b.className (<b class>): setAttribute() to "\0" followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to "\0" followed by IDL get 
PASS b.className (<b class>): setAttribute() to null followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to null followed by IDL get 
PASS b.className (<b class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to object "test-toString" followed by IDL get 
PASS b.className (<b class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS b.className (<b class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS b.className (<b class>): IDL set to "" should not throw 
PASS b.className (<b class>): IDL set to "" followed by getAttribute() 
PASS b.className (<b class>): IDL set to "" followed by IDL get 
PASS b.className (<b class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS b.className (<b class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS b.className (<b class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS b.className (<b class>): IDL set to undefined should not throw 
PASS b.className (<b class>): IDL set to undefined followed by getAttribute() 
PASS b.className (<b class>): IDL set to undefined followed by IDL get 
PASS b.className (<b class>): IDL set to 7 should not throw 
PASS b.className (<b class>): IDL set to 7 followed by getAttribute() 
PASS b.className (<b class>): IDL set to 7 followed by IDL get 
PASS b.className (<b class>): IDL set to 1.5 should not throw 
PASS b.className (<b class>): IDL set to 1.5 followed by getAttribute() 
PASS b.className (<b class>): IDL set to 1.5 followed by IDL get 
PASS b.className (<b class>): IDL set to true should not throw 
PASS b.className (<b class>): IDL set to true followed by getAttribute() 
PASS b.className (<b class>): IDL set to true followed by IDL get 
PASS b.className (<b class>): IDL set to false should not throw 
PASS b.className (<b class>): IDL set to false followed by getAttribute() 
PASS b.className (<b class>): IDL set to false followed by IDL get 
PASS b.className (<b class>): IDL set to object "[object Object]" should not throw 
PASS b.className (<b class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS b.className (<b class>): IDL set to object "[object Object]" followed by IDL get 
PASS b.className (<b class>): IDL set to NaN should not throw 
PASS b.className (<b class>): IDL set to NaN followed by getAttribute() 
PASS b.className (<b class>): IDL set to NaN followed by IDL get 
PASS b.className (<b class>): IDL set to Infinity should not throw 
PASS b.className (<b class>): IDL set to Infinity followed by getAttribute() 
PASS b.className (<b class>): IDL set to Infinity followed by IDL get 
PASS b.className (<b class>): IDL set to -Infinity should not throw 
PASS b.className (<b class>): IDL set to -Infinity followed by getAttribute() 
PASS b.className (<b class>): IDL set to -Infinity followed by IDL get 
PASS b.className (<b class>): IDL set to "\0" should not throw 
PASS b.className (<b class>): IDL set to "\0" followed by getAttribute() 
PASS b.className (<b class>): IDL set to "\0" followed by IDL get 
PASS b.className (<b class>): IDL set to null should not throw 
PASS b.className (<b class>): IDL set to null followed by getAttribute() 
PASS b.className (<b class>): IDL set to null followed by IDL get 
PASS b.className (<b class>): IDL set to object "test-toString" should not throw 
PASS b.className (<b class>): IDL set to object "test-toString" followed by getAttribute() 
PASS b.className (<b class>): IDL set to object "test-toString" followed by IDL get 
PASS b.className (<b class>): IDL set to object "test-valueOf" should not throw 
PASS b.className (<b class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS b.className (<b class>): IDL set to object "test-valueOf" followed by IDL get 
PASS b.hidden: typeof IDL attribute 
PASS b.hidden: IDL get with DOM attribute unset 
PASS b.hidden: setAttribute() to "" followed by getAttribute() 
PASS b.hidden: setAttribute() to "" followed by IDL get 
PASS b.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS b.hidden: setAttribute() to " foo " followed by IDL get 
PASS b.hidden: setAttribute() to undefined followed by getAttribute() 
PASS b.hidden: setAttribute() to undefined followed by IDL get 
PASS b.hidden: setAttribute() to null followed by getAttribute() 
PASS b.hidden: setAttribute() to null followed by IDL get 
PASS b.hidden: setAttribute() to 7 followed by getAttribute() 
PASS b.hidden: setAttribute() to 7 followed by IDL get 
PASS b.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS b.hidden: setAttribute() to 1.5 followed by IDL get 
PASS b.hidden: setAttribute() to true followed by getAttribute() 
PASS b.hidden: setAttribute() to true followed by IDL get 
PASS b.hidden: setAttribute() to false followed by getAttribute() 
PASS b.hidden: setAttribute() to false followed by IDL get 
PASS b.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS b.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS b.hidden: setAttribute() to NaN followed by getAttribute() 
PASS b.hidden: setAttribute() to NaN followed by IDL get 
PASS b.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS b.hidden: setAttribute() to Infinity followed by IDL get 
PASS b.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS b.hidden: setAttribute() to -Infinity followed by IDL get 
PASS b.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS b.hidden: setAttribute() to "\0" followed by IDL get 
PASS b.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS b.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS b.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS b.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS b.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS b.hidden: setAttribute() to "hidden" followed by IDL get 
PASS b.hidden: IDL set to "" should not throw 
PASS b.hidden: IDL set to "" followed by hasAttribute() 
PASS b.hidden: IDL set to "" followed by IDL get 
PASS b.hidden: IDL set to " foo " should not throw 
PASS b.hidden: IDL set to " foo " followed by hasAttribute() 
PASS b.hidden: IDL set to " foo " followed by IDL get 
PASS b.hidden: IDL set to undefined should not throw 
PASS b.hidden: IDL set to undefined followed by hasAttribute() 
PASS b.hidden: IDL set to undefined followed by IDL get 
PASS b.hidden: IDL set to null should not throw 
PASS b.hidden: IDL set to null followed by hasAttribute() 
PASS b.hidden: IDL set to null followed by IDL get 
PASS b.hidden: IDL set to 7 should not throw 
PASS b.hidden: IDL set to 7 followed by hasAttribute() 
PASS b.hidden: IDL set to 7 followed by IDL get 
PASS b.hidden: IDL set to 1.5 should not throw 
PASS b.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS b.hidden: IDL set to 1.5 followed by IDL get 
PASS b.hidden: IDL set to true should not throw 
PASS b.hidden: IDL set to true followed by hasAttribute() 
PASS b.hidden: IDL set to true followed by IDL get 
PASS b.hidden: IDL set to false should not throw 
PASS b.hidden: IDL set to false followed by hasAttribute() 
PASS b.hidden: IDL set to false followed by IDL get 
PASS b.hidden: IDL set to object "[object Object]" should not throw 
PASS b.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS b.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS b.hidden: IDL set to NaN should not throw 
PASS b.hidden: IDL set to NaN followed by hasAttribute() 
PASS b.hidden: IDL set to NaN followed by IDL get 
PASS b.hidden: IDL set to Infinity should not throw 
PASS b.hidden: IDL set to Infinity followed by hasAttribute() 
PASS b.hidden: IDL set to Infinity followed by IDL get 
PASS b.hidden: IDL set to -Infinity should not throw 
PASS b.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS b.hidden: IDL set to -Infinity followed by IDL get 
PASS b.hidden: IDL set to "\0" should not throw 
PASS b.hidden: IDL set to "\0" followed by hasAttribute() 
PASS b.hidden: IDL set to "\0" followed by IDL get 
PASS b.hidden: IDL set to object "test-toString" should not throw 
PASS b.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS b.hidden: IDL set to object "test-toString" followed by IDL get 
PASS b.hidden: IDL set to object "test-valueOf" should not throw 
PASS b.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS b.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS b.accessKey: typeof IDL attribute 
PASS b.accessKey: IDL get with DOM attribute unset 
PASS b.accessKey: setAttribute() to "" followed by getAttribute() 
PASS b.accessKey: setAttribute() to "" followed by IDL get 
PASS b.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS b.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS b.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS b.accessKey: setAttribute() to undefined followed by IDL get 
PASS b.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS b.accessKey: setAttribute() to 7 followed by IDL get 
PASS b.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS b.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS b.accessKey: setAttribute() to true followed by getAttribute() 
PASS b.accessKey: setAttribute() to true followed by IDL get 
PASS b.accessKey: setAttribute() to false followed by getAttribute() 
PASS b.accessKey: setAttribute() to false followed by IDL get 
PASS b.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS b.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS b.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS b.accessKey: setAttribute() to NaN followed by IDL get 
PASS b.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS b.accessKey: setAttribute() to Infinity followed by IDL get 
PASS b.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS b.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS b.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS b.accessKey: setAttribute() to "\0" followed by IDL get 
PASS b.accessKey: setAttribute() to null followed by getAttribute() 
PASS b.accessKey: setAttribute() to null followed by IDL get 
PASS b.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS b.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS b.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS b.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS b.accessKey: IDL set to "" should not throw 
PASS b.accessKey: IDL set to "" followed by getAttribute() 
PASS b.accessKey: IDL set to "" followed by IDL get 
PASS b.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS b.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS b.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS b.accessKey: IDL set to undefined should not throw 
PASS b.accessKey: IDL set to undefined followed by getAttribute() 
PASS b.accessKey: IDL set to undefined followed by IDL get 
PASS b.accessKey: IDL set to 7 should not throw 
PASS b.accessKey: IDL set to 7 followed by getAttribute() 
PASS b.accessKey: IDL set to 7 followed by IDL get 
PASS b.accessKey: IDL set to 1.5 should not throw 
PASS b.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS b.accessKey: IDL set to 1.5 followed by IDL get 
PASS b.accessKey: IDL set to true should not throw 
PASS b.accessKey: IDL set to true followed by getAttribute() 
PASS b.accessKey: IDL set to true followed by IDL get 
PASS b.accessKey: IDL set to false should not throw 
PASS b.accessKey: IDL set to false followed by getAttribute() 
PASS b.accessKey: IDL set to false followed by IDL get 
PASS b.accessKey: IDL set to object "[object Object]" should not throw 
PASS b.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS b.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS b.accessKey: IDL set to NaN should not throw 
PASS b.accessKey: IDL set to NaN followed by getAttribute() 
PASS b.accessKey: IDL set to NaN followed by IDL get 
PASS b.accessKey: IDL set to Infinity should not throw 
PASS b.accessKey: IDL set to Infinity followed by getAttribute() 
PASS b.accessKey: IDL set to Infinity followed by IDL get 
PASS b.accessKey: IDL set to -Infinity should not throw 
PASS b.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS b.accessKey: IDL set to -Infinity followed by IDL get 
PASS b.accessKey: IDL set to "\0" should not throw 
PASS b.accessKey: IDL set to "\0" followed by getAttribute() 
PASS b.accessKey: IDL set to "\0" followed by IDL get 
PASS b.accessKey: IDL set to null should not throw 
PASS b.accessKey: IDL set to null followed by getAttribute() 
PASS b.accessKey: IDL set to null followed by IDL get 
PASS b.accessKey: IDL set to object "test-toString" should not throw 
PASS b.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS b.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS b.accessKey: IDL set to object "test-valueOf" should not throw 
PASS b.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS b.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS b.tabIndex: typeof IDL attribute 
PASS b.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS b.tabIndex: setAttribute() to -36 followed by IDL get 
PASS b.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS b.tabIndex: setAttribute() to -1 followed by IDL get 
PASS b.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS b.tabIndex: setAttribute() to 0 followed by IDL get 
PASS b.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS b.tabIndex: setAttribute() to 1 followed by IDL get 
PASS b.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL b.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS b.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL b.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS b.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS b.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS b.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS b.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS b.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS b.tabIndex: setAttribute() to "0" followed by IDL get 
PASS b.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS b.tabIndex: setAttribute() to "1" followed by IDL get 
PASS b.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS b.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS b.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS b.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS b.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS b.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS b.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS b.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS b.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS b.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS b.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS b.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS b.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS b.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS b.tabIndex: IDL set to -36 should not throw 
PASS b.tabIndex: IDL set to -36 followed by getAttribute() 
PASS b.tabIndex: IDL set to -36 followed by IDL get 
PASS b.tabIndex: IDL set to -1 should not throw 
PASS b.tabIndex: IDL set to -1 followed by getAttribute() 
PASS b.tabIndex: IDL set to -1 followed by IDL get 
PASS b.tabIndex: IDL set to 0 should not throw 
PASS b.tabIndex: IDL set to 0 followed by getAttribute() 
PASS b.tabIndex: IDL set to 0 followed by IDL get 
PASS b.tabIndex: IDL set to 1 should not throw 
PASS b.tabIndex: IDL set to 1 followed by getAttribute() 
PASS b.tabIndex: IDL set to 1 followed by IDL get 
PASS b.tabIndex: IDL set to 2147483647 should not throw 
PASS b.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL b.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS b.tabIndex: IDL set to -2147483648 should not throw 
PASS b.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL b.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL b.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL b.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS b.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL b.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL b.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL b.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to null followed by getAttribute() 
FAIL b.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL b.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL b.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to true followed by getAttribute() 
FAIL b.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to false followed by getAttribute() 
FAIL b.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL b.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL b.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL b.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL b.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL b.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL b.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL b.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL b.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS b.itemScope: IDL set to "" should not throw 
FAIL b.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL b.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS b.itemScope: IDL set to " foo " should not throw 
PASS b.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL b.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS b.itemScope: IDL set to undefined should not throw 
FAIL b.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL b.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS b.itemScope: IDL set to null should not throw 
FAIL b.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL b.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS b.itemScope: IDL set to 7 should not throw 
PASS b.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL b.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS b.itemScope: IDL set to 1.5 should not throw 
PASS b.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL b.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS b.itemScope: IDL set to true should not throw 
PASS b.itemScope: IDL set to true followed by hasAttribute() 
PASS b.itemScope: IDL set to true followed by IDL get 
PASS b.itemScope: IDL set to false should not throw 
FAIL b.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS b.itemScope: IDL set to false followed by IDL get 
PASS b.itemScope: IDL set to object "[object Object]" should not throw 
PASS b.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL b.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS b.itemScope: IDL set to NaN should not throw 
FAIL b.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL b.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS b.itemScope: IDL set to Infinity should not throw 
PASS b.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL b.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS b.itemScope: IDL set to -Infinity should not throw 
PASS b.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL b.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS b.itemScope: IDL set to "\0" should not throw 
PASS b.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL b.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS b.itemScope: IDL set to object "test-toString" should not throw 
PASS b.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL b.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS b.itemScope: IDL set to object "test-valueOf" should not throw 
PASS b.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL b.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL b.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL b.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS b.itemId: setAttribute() to "" followed by getAttribute() 
FAIL b.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS b.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL b.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS b.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL b.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS b.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL b.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS b.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL b.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS b.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL b.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS b.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL b.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS b.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL b.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS b.itemId: setAttribute() to true followed by getAttribute() 
FAIL b.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS b.itemId: setAttribute() to false followed by getAttribute() 
FAIL b.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS b.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL b.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS b.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL b.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS b.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL b.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS b.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL b.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS b.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL b.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS b.itemId: setAttribute() to null followed by getAttribute() 
FAIL b.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS b.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL b.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS b.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL b.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS b.itemId: IDL set to "" should not throw 
FAIL b.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL b.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS b.itemId: IDL set to " foo " should not throw 
FAIL b.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL b.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS b.itemId: IDL set to "http://site.example/" should not throw 
FAIL b.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS b.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS b.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL b.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL b.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS b.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL b.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL b.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS b.itemId: IDL set to undefined should not throw 
FAIL b.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL b.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS b.itemId: IDL set to 7 should not throw 
FAIL b.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL b.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS b.itemId: IDL set to 1.5 should not throw 
FAIL b.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL b.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS b.itemId: IDL set to true should not throw 
FAIL b.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL b.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS b.itemId: IDL set to false should not throw 
FAIL b.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL b.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS b.itemId: IDL set to object "[object Object]" should not throw 
FAIL b.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL b.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS b.itemId: IDL set to NaN should not throw 
FAIL b.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL b.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS b.itemId: IDL set to Infinity should not throw 
FAIL b.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL b.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS b.itemId: IDL set to -Infinity should not throw 
FAIL b.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL b.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS b.itemId: IDL set to "\0" should not throw 
FAIL b.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL b.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS b.itemId: IDL set to null should not throw 
FAIL b.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL b.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS b.itemId: IDL set to object "test-toString" should not throw 
FAIL b.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL b.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS b.itemId: IDL set to object "test-valueOf" should not throw 
PASS b.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL b.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS u.title: typeof IDL attribute 
PASS u.title: IDL get with DOM attribute unset 
PASS u.title: setAttribute() to "" followed by getAttribute() 
PASS u.title: setAttribute() to "" followed by IDL get 
PASS u.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS u.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS u.title: setAttribute() to undefined followed by getAttribute() 
PASS u.title: setAttribute() to undefined followed by IDL get 
PASS u.title: setAttribute() to 7 followed by getAttribute() 
PASS u.title: setAttribute() to 7 followed by IDL get 
PASS u.title: setAttribute() to 1.5 followed by getAttribute() 
PASS u.title: setAttribute() to 1.5 followed by IDL get 
PASS u.title: setAttribute() to true followed by getAttribute() 
PASS u.title: setAttribute() to true followed by IDL get 
PASS u.title: setAttribute() to false followed by getAttribute() 
PASS u.title: setAttribute() to false followed by IDL get 
PASS u.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS u.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS u.title: setAttribute() to NaN followed by getAttribute() 
PASS u.title: setAttribute() to NaN followed by IDL get 
PASS u.title: setAttribute() to Infinity followed by getAttribute() 
PASS u.title: setAttribute() to Infinity followed by IDL get 
PASS u.title: setAttribute() to -Infinity followed by getAttribute() 
PASS u.title: setAttribute() to -Infinity followed by IDL get 
PASS u.title: setAttribute() to "\0" followed by getAttribute() 
PASS u.title: setAttribute() to "\0" followed by IDL get 
PASS u.title: setAttribute() to null followed by getAttribute() 
PASS u.title: setAttribute() to null followed by IDL get 
PASS u.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS u.title: setAttribute() to object "test-toString" followed by IDL get 
PASS u.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS u.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS u.title: IDL set to "" should not throw 
PASS u.title: IDL set to "" followed by getAttribute() 
PASS u.title: IDL set to "" followed by IDL get 
PASS u.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS u.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS u.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS u.title: IDL set to undefined should not throw 
PASS u.title: IDL set to undefined followed by getAttribute() 
PASS u.title: IDL set to undefined followed by IDL get 
PASS u.title: IDL set to 7 should not throw 
PASS u.title: IDL set to 7 followed by getAttribute() 
PASS u.title: IDL set to 7 followed by IDL get 
PASS u.title: IDL set to 1.5 should not throw 
PASS u.title: IDL set to 1.5 followed by getAttribute() 
PASS u.title: IDL set to 1.5 followed by IDL get 
PASS u.title: IDL set to true should not throw 
PASS u.title: IDL set to true followed by getAttribute() 
PASS u.title: IDL set to true followed by IDL get 
PASS u.title: IDL set to false should not throw 
PASS u.title: IDL set to false followed by getAttribute() 
PASS u.title: IDL set to false followed by IDL get 
PASS u.title: IDL set to object "[object Object]" should not throw 
PASS u.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS u.title: IDL set to object "[object Object]" followed by IDL get 
PASS u.title: IDL set to NaN should not throw 
PASS u.title: IDL set to NaN followed by getAttribute() 
PASS u.title: IDL set to NaN followed by IDL get 
PASS u.title: IDL set to Infinity should not throw 
PASS u.title: IDL set to Infinity followed by getAttribute() 
PASS u.title: IDL set to Infinity followed by IDL get 
PASS u.title: IDL set to -Infinity should not throw 
PASS u.title: IDL set to -Infinity followed by getAttribute() 
PASS u.title: IDL set to -Infinity followed by IDL get 
PASS u.title: IDL set to "\0" should not throw 
PASS u.title: IDL set to "\0" followed by getAttribute() 
PASS u.title: IDL set to "\0" followed by IDL get 
PASS u.title: IDL set to null should not throw 
PASS u.title: IDL set to null followed by getAttribute() 
PASS u.title: IDL set to null followed by IDL get 
PASS u.title: IDL set to object "test-toString" should not throw 
PASS u.title: IDL set to object "test-toString" followed by getAttribute() 
PASS u.title: IDL set to object "test-toString" followed by IDL get 
PASS u.title: IDL set to object "test-valueOf" should not throw 
PASS u.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS u.title: IDL set to object "test-valueOf" followed by IDL get 
PASS u.lang: typeof IDL attribute 
PASS u.lang: IDL get with DOM attribute unset 
PASS u.lang: setAttribute() to "" followed by getAttribute() 
PASS u.lang: setAttribute() to "" followed by IDL get 
PASS u.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS u.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS u.lang: setAttribute() to undefined followed by getAttribute() 
PASS u.lang: setAttribute() to undefined followed by IDL get 
PASS u.lang: setAttribute() to 7 followed by getAttribute() 
PASS u.lang: setAttribute() to 7 followed by IDL get 
PASS u.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS u.lang: setAttribute() to 1.5 followed by IDL get 
PASS u.lang: setAttribute() to true followed by getAttribute() 
PASS u.lang: setAttribute() to true followed by IDL get 
PASS u.lang: setAttribute() to false followed by getAttribute() 
PASS u.lang: setAttribute() to false followed by IDL get 
PASS u.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS u.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS u.lang: setAttribute() to NaN followed by getAttribute() 
PASS u.lang: setAttribute() to NaN followed by IDL get 
PASS u.lang: setAttribute() to Infinity followed by getAttribute() 
PASS u.lang: setAttribute() to Infinity followed by IDL get 
PASS u.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS u.lang: setAttribute() to -Infinity followed by IDL get 
PASS u.lang: setAttribute() to "\0" followed by getAttribute() 
PASS u.lang: setAttribute() to "\0" followed by IDL get 
PASS u.lang: setAttribute() to null followed by getAttribute() 
PASS u.lang: setAttribute() to null followed by IDL get 
PASS u.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS u.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS u.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS u.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS u.lang: IDL set to "" should not throw 
PASS u.lang: IDL set to "" followed by getAttribute() 
PASS u.lang: IDL set to "" followed by IDL get 
PASS u.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS u.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS u.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS u.lang: IDL set to undefined should not throw 
PASS u.lang: IDL set to undefined followed by getAttribute() 
PASS u.lang: IDL set to undefined followed by IDL get 
PASS u.lang: IDL set to 7 should not throw 
PASS u.lang: IDL set to 7 followed by getAttribute() 
PASS u.lang: IDL set to 7 followed by IDL get 
PASS u.lang: IDL set to 1.5 should not throw 
PASS u.lang: IDL set to 1.5 followed by getAttribute() 
PASS u.lang: IDL set to 1.5 followed by IDL get 
PASS u.lang: IDL set to true should not throw 
PASS u.lang: IDL set to true followed by getAttribute() 
PASS u.lang: IDL set to true followed by IDL get 
PASS u.lang: IDL set to false should not throw 
PASS u.lang: IDL set to false followed by getAttribute() 
PASS u.lang: IDL set to false followed by IDL get 
PASS u.lang: IDL set to object "[object Object]" should not throw 
PASS u.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS u.lang: IDL set to object "[object Object]" followed by IDL get 
PASS u.lang: IDL set to NaN should not throw 
PASS u.lang: IDL set to NaN followed by getAttribute() 
PASS u.lang: IDL set to NaN followed by IDL get 
PASS u.lang: IDL set to Infinity should not throw 
PASS u.lang: IDL set to Infinity followed by getAttribute() 
PASS u.lang: IDL set to Infinity followed by IDL get 
PASS u.lang: IDL set to -Infinity should not throw 
PASS u.lang: IDL set to -Infinity followed by getAttribute() 
PASS u.lang: IDL set to -Infinity followed by IDL get 
PASS u.lang: IDL set to "\0" should not throw 
PASS u.lang: IDL set to "\0" followed by getAttribute() 
PASS u.lang: IDL set to "\0" followed by IDL get 
PASS u.lang: IDL set to null should not throw 
PASS u.lang: IDL set to null followed by getAttribute() 
PASS u.lang: IDL set to null followed by IDL get 
PASS u.lang: IDL set to object "test-toString" should not throw 
PASS u.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS u.lang: IDL set to object "test-toString" followed by IDL get 
PASS u.lang: IDL set to object "test-valueOf" should not throw 
PASS u.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS u.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS u.dir: typeof IDL attribute 
PASS u.dir: IDL get with DOM attribute unset 
PASS u.dir: setAttribute() to "" followed by getAttribute() 
PASS u.dir: setAttribute() to "" followed by IDL get 
PASS u.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS u.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS u.dir: setAttribute() to undefined followed by getAttribute() 
PASS u.dir: setAttribute() to undefined followed by IDL get 
PASS u.dir: setAttribute() to 7 followed by getAttribute() 
PASS u.dir: setAttribute() to 7 followed by IDL get 
PASS u.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS u.dir: setAttribute() to 1.5 followed by IDL get 
PASS u.dir: setAttribute() to true followed by getAttribute() 
PASS u.dir: setAttribute() to true followed by IDL get 
PASS u.dir: setAttribute() to false followed by getAttribute() 
PASS u.dir: setAttribute() to false followed by IDL get 
PASS u.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS u.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS u.dir: setAttribute() to NaN followed by getAttribute() 
PASS u.dir: setAttribute() to NaN followed by IDL get 
PASS u.dir: setAttribute() to Infinity followed by getAttribute() 
PASS u.dir: setAttribute() to Infinity followed by IDL get 
PASS u.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS u.dir: setAttribute() to -Infinity followed by IDL get 
PASS u.dir: setAttribute() to "\0" followed by getAttribute() 
PASS u.dir: setAttribute() to "\0" followed by IDL get 
PASS u.dir: setAttribute() to null followed by getAttribute() 
PASS u.dir: setAttribute() to null followed by IDL get 
PASS u.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS u.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS u.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS u.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS u.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS u.dir: setAttribute() to "ltr" followed by IDL get 
PASS u.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS u.dir: setAttribute() to "xltr" followed by IDL get 
PASS u.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS u.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS u.dir: setAttribute() to "tr" followed by getAttribute() 
PASS u.dir: setAttribute() to "tr" followed by IDL get 
PASS u.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS u.dir: setAttribute() to "LTR" followed by IDL get 
PASS u.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS u.dir: setAttribute() to "rtl" followed by IDL get 
PASS u.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS u.dir: setAttribute() to "xrtl" followed by IDL get 
PASS u.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS u.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS u.dir: setAttribute() to "tl" followed by getAttribute() 
PASS u.dir: setAttribute() to "tl" followed by IDL get 
PASS u.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS u.dir: setAttribute() to "RTL" followed by IDL get 
PASS u.dir: setAttribute() to "auto" followed by getAttribute() 
PASS u.dir: setAttribute() to "auto" followed by IDL get 
PASS u.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS u.dir: setAttribute() to "xauto" followed by IDL get 
PASS u.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS u.dir: setAttribute() to "auto\0" followed by IDL get 
PASS u.dir: setAttribute() to "uto" followed by getAttribute() 
PASS u.dir: setAttribute() to "uto" followed by IDL get 
PASS u.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS u.dir: setAttribute() to "AUTO" followed by IDL get 
PASS u.dir: IDL set to "" should not throw 
PASS u.dir: IDL set to "" followed by getAttribute() 
PASS u.dir: IDL set to "" followed by IDL get 
PASS u.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS u.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS u.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS u.dir: IDL set to undefined should not throw 
PASS u.dir: IDL set to undefined followed by getAttribute() 
PASS u.dir: IDL set to undefined followed by IDL get 
PASS u.dir: IDL set to 7 should not throw 
PASS u.dir: IDL set to 7 followed by getAttribute() 
PASS u.dir: IDL set to 7 followed by IDL get 
PASS u.dir: IDL set to 1.5 should not throw 
PASS u.dir: IDL set to 1.5 followed by getAttribute() 
PASS u.dir: IDL set to 1.5 followed by IDL get 
PASS u.dir: IDL set to true should not throw 
PASS u.dir: IDL set to true followed by getAttribute() 
PASS u.dir: IDL set to true followed by IDL get 
PASS u.dir: IDL set to false should not throw 
PASS u.dir: IDL set to false followed by getAttribute() 
PASS u.dir: IDL set to false followed by IDL get 
PASS u.dir: IDL set to object "[object Object]" should not throw 
PASS u.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS u.dir: IDL set to object "[object Object]" followed by IDL get 
PASS u.dir: IDL set to NaN should not throw 
PASS u.dir: IDL set to NaN followed by getAttribute() 
PASS u.dir: IDL set to NaN followed by IDL get 
PASS u.dir: IDL set to Infinity should not throw 
PASS u.dir: IDL set to Infinity followed by getAttribute() 
PASS u.dir: IDL set to Infinity followed by IDL get 
PASS u.dir: IDL set to -Infinity should not throw 
PASS u.dir: IDL set to -Infinity followed by getAttribute() 
PASS u.dir: IDL set to -Infinity followed by IDL get 
PASS u.dir: IDL set to "\0" should not throw 
PASS u.dir: IDL set to "\0" followed by getAttribute() 
PASS u.dir: IDL set to "\0" followed by IDL get 
PASS u.dir: IDL set to null should not throw 
PASS u.dir: IDL set to null followed by IDL get 
PASS u.dir: IDL set to object "test-toString" should not throw 
PASS u.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS u.dir: IDL set to object "test-toString" followed by IDL get 
PASS u.dir: IDL set to object "test-valueOf" should not throw 
PASS u.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS u.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS u.dir: IDL set to "ltr" should not throw 
PASS u.dir: IDL set to "ltr" followed by getAttribute() 
PASS u.dir: IDL set to "ltr" followed by IDL get 
PASS u.dir: IDL set to "xltr" should not throw 
PASS u.dir: IDL set to "xltr" followed by getAttribute() 
PASS u.dir: IDL set to "xltr" followed by IDL get 
PASS u.dir: IDL set to "ltr\0" should not throw 
PASS u.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS u.dir: IDL set to "ltr\0" followed by IDL get 
PASS u.dir: IDL set to "tr" should not throw 
PASS u.dir: IDL set to "tr" followed by getAttribute() 
PASS u.dir: IDL set to "tr" followed by IDL get 
PASS u.dir: IDL set to "LTR" should not throw 
PASS u.dir: IDL set to "LTR" followed by getAttribute() 
PASS u.dir: IDL set to "LTR" followed by IDL get 
PASS u.dir: IDL set to "rtl" should not throw 
PASS u.dir: IDL set to "rtl" followed by getAttribute() 
PASS u.dir: IDL set to "rtl" followed by IDL get 
PASS u.dir: IDL set to "xrtl" should not throw 
PASS u.dir: IDL set to "xrtl" followed by getAttribute() 
PASS u.dir: IDL set to "xrtl" followed by IDL get 
PASS u.dir: IDL set to "rtl\0" should not throw 
PASS u.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS u.dir: IDL set to "rtl\0" followed by IDL get 
PASS u.dir: IDL set to "tl" should not throw 
PASS u.dir: IDL set to "tl" followed by getAttribute() 
PASS u.dir: IDL set to "tl" followed by IDL get 
PASS u.dir: IDL set to "RTL" should not throw 
PASS u.dir: IDL set to "RTL" followed by getAttribute() 
PASS u.dir: IDL set to "RTL" followed by IDL get 
PASS u.dir: IDL set to "auto" should not throw 
PASS u.dir: IDL set to "auto" followed by getAttribute() 
PASS u.dir: IDL set to "auto" followed by IDL get 
PASS u.dir: IDL set to "xauto" should not throw 
PASS u.dir: IDL set to "xauto" followed by getAttribute() 
PASS u.dir: IDL set to "xauto" followed by IDL get 
PASS u.dir: IDL set to "auto\0" should not throw 
PASS u.dir: IDL set to "auto\0" followed by getAttribute() 
PASS u.dir: IDL set to "auto\0" followed by IDL get 
PASS u.dir: IDL set to "uto" should not throw 
PASS u.dir: IDL set to "uto" followed by getAttribute() 
PASS u.dir: IDL set to "uto" followed by IDL get 
PASS u.dir: IDL set to "AUTO" should not throw 
PASS u.dir: IDL set to "AUTO" followed by getAttribute() 
PASS u.dir: IDL set to "AUTO" followed by IDL get 
PASS u.className (<u class>): typeof IDL attribute 
PASS u.className (<u class>): IDL get with DOM attribute unset 
PASS u.className (<u class>): setAttribute() to "" followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to "" followed by IDL get 
PASS u.className (<u class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS u.className (<u class>): setAttribute() to undefined followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to undefined followed by IDL get 
PASS u.className (<u class>): setAttribute() to 7 followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to 7 followed by IDL get 
PASS u.className (<u class>): setAttribute() to 1.5 followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to 1.5 followed by IDL get 
PASS u.className (<u class>): setAttribute() to true followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to true followed by IDL get 
PASS u.className (<u class>): setAttribute() to false followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to false followed by IDL get 
PASS u.className (<u class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS u.className (<u class>): setAttribute() to NaN followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to NaN followed by IDL get 
PASS u.className (<u class>): setAttribute() to Infinity followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to Infinity followed by IDL get 
PASS u.className (<u class>): setAttribute() to -Infinity followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to -Infinity followed by IDL get 
PASS u.className (<u class>): setAttribute() to "\0" followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to "\0" followed by IDL get 
PASS u.className (<u class>): setAttribute() to null followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to null followed by IDL get 
PASS u.className (<u class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to object "test-toString" followed by IDL get 
PASS u.className (<u class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS u.className (<u class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS u.className (<u class>): IDL set to "" should not throw 
PASS u.className (<u class>): IDL set to "" followed by getAttribute() 
PASS u.className (<u class>): IDL set to "" followed by IDL get 
PASS u.className (<u class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS u.className (<u class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS u.className (<u class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS u.className (<u class>): IDL set to undefined should not throw 
PASS u.className (<u class>): IDL set to undefined followed by getAttribute() 
PASS u.className (<u class>): IDL set to undefined followed by IDL get 
PASS u.className (<u class>): IDL set to 7 should not throw 
PASS u.className (<u class>): IDL set to 7 followed by getAttribute() 
PASS u.className (<u class>): IDL set to 7 followed by IDL get 
PASS u.className (<u class>): IDL set to 1.5 should not throw 
PASS u.className (<u class>): IDL set to 1.5 followed by getAttribute() 
PASS u.className (<u class>): IDL set to 1.5 followed by IDL get 
PASS u.className (<u class>): IDL set to true should not throw 
PASS u.className (<u class>): IDL set to true followed by getAttribute() 
PASS u.className (<u class>): IDL set to true followed by IDL get 
PASS u.className (<u class>): IDL set to false should not throw 
PASS u.className (<u class>): IDL set to false followed by getAttribute() 
PASS u.className (<u class>): IDL set to false followed by IDL get 
PASS u.className (<u class>): IDL set to object "[object Object]" should not throw 
PASS u.className (<u class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS u.className (<u class>): IDL set to object "[object Object]" followed by IDL get 
PASS u.className (<u class>): IDL set to NaN should not throw 
PASS u.className (<u class>): IDL set to NaN followed by getAttribute() 
PASS u.className (<u class>): IDL set to NaN followed by IDL get 
PASS u.className (<u class>): IDL set to Infinity should not throw 
PASS u.className (<u class>): IDL set to Infinity followed by getAttribute() 
PASS u.className (<u class>): IDL set to Infinity followed by IDL get 
PASS u.className (<u class>): IDL set to -Infinity should not throw 
PASS u.className (<u class>): IDL set to -Infinity followed by getAttribute() 
PASS u.className (<u class>): IDL set to -Infinity followed by IDL get 
PASS u.className (<u class>): IDL set to "\0" should not throw 
PASS u.className (<u class>): IDL set to "\0" followed by getAttribute() 
PASS u.className (<u class>): IDL set to "\0" followed by IDL get 
PASS u.className (<u class>): IDL set to null should not throw 
PASS u.className (<u class>): IDL set to null followed by getAttribute() 
PASS u.className (<u class>): IDL set to null followed by IDL get 
PASS u.className (<u class>): IDL set to object "test-toString" should not throw 
PASS u.className (<u class>): IDL set to object "test-toString" followed by getAttribute() 
PASS u.className (<u class>): IDL set to object "test-toString" followed by IDL get 
PASS u.className (<u class>): IDL set to object "test-valueOf" should not throw 
PASS u.className (<u class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS u.className (<u class>): IDL set to object "test-valueOf" followed by IDL get 
PASS u.hidden: typeof IDL attribute 
PASS u.hidden: IDL get with DOM attribute unset 
PASS u.hidden: setAttribute() to "" followed by getAttribute() 
PASS u.hidden: setAttribute() to "" followed by IDL get 
PASS u.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS u.hidden: setAttribute() to " foo " followed by IDL get 
PASS u.hidden: setAttribute() to undefined followed by getAttribute() 
PASS u.hidden: setAttribute() to undefined followed by IDL get 
PASS u.hidden: setAttribute() to null followed by getAttribute() 
PASS u.hidden: setAttribute() to null followed by IDL get 
PASS u.hidden: setAttribute() to 7 followed by getAttribute() 
PASS u.hidden: setAttribute() to 7 followed by IDL get 
PASS u.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS u.hidden: setAttribute() to 1.5 followed by IDL get 
PASS u.hidden: setAttribute() to true followed by getAttribute() 
PASS u.hidden: setAttribute() to true followed by IDL get 
PASS u.hidden: setAttribute() to false followed by getAttribute() 
PASS u.hidden: setAttribute() to false followed by IDL get 
PASS u.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS u.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS u.hidden: setAttribute() to NaN followed by getAttribute() 
PASS u.hidden: setAttribute() to NaN followed by IDL get 
PASS u.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS u.hidden: setAttribute() to Infinity followed by IDL get 
PASS u.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS u.hidden: setAttribute() to -Infinity followed by IDL get 
PASS u.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS u.hidden: setAttribute() to "\0" followed by IDL get 
PASS u.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS u.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS u.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS u.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS u.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS u.hidden: setAttribute() to "hidden" followed by IDL get 
PASS u.hidden: IDL set to "" should not throw 
PASS u.hidden: IDL set to "" followed by hasAttribute() 
PASS u.hidden: IDL set to "" followed by IDL get 
PASS u.hidden: IDL set to " foo " should not throw 
PASS u.hidden: IDL set to " foo " followed by hasAttribute() 
PASS u.hidden: IDL set to " foo " followed by IDL get 
PASS u.hidden: IDL set to undefined should not throw 
PASS u.hidden: IDL set to undefined followed by hasAttribute() 
PASS u.hidden: IDL set to undefined followed by IDL get 
PASS u.hidden: IDL set to null should not throw 
PASS u.hidden: IDL set to null followed by hasAttribute() 
PASS u.hidden: IDL set to null followed by IDL get 
PASS u.hidden: IDL set to 7 should not throw 
PASS u.hidden: IDL set to 7 followed by hasAttribute() 
PASS u.hidden: IDL set to 7 followed by IDL get 
PASS u.hidden: IDL set to 1.5 should not throw 
PASS u.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS u.hidden: IDL set to 1.5 followed by IDL get 
PASS u.hidden: IDL set to true should not throw 
PASS u.hidden: IDL set to true followed by hasAttribute() 
PASS u.hidden: IDL set to true followed by IDL get 
PASS u.hidden: IDL set to false should not throw 
PASS u.hidden: IDL set to false followed by hasAttribute() 
PASS u.hidden: IDL set to false followed by IDL get 
PASS u.hidden: IDL set to object "[object Object]" should not throw 
PASS u.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS u.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS u.hidden: IDL set to NaN should not throw 
PASS u.hidden: IDL set to NaN followed by hasAttribute() 
PASS u.hidden: IDL set to NaN followed by IDL get 
PASS u.hidden: IDL set to Infinity should not throw 
PASS u.hidden: IDL set to Infinity followed by hasAttribute() 
PASS u.hidden: IDL set to Infinity followed by IDL get 
PASS u.hidden: IDL set to -Infinity should not throw 
PASS u.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS u.hidden: IDL set to -Infinity followed by IDL get 
PASS u.hidden: IDL set to "\0" should not throw 
PASS u.hidden: IDL set to "\0" followed by hasAttribute() 
PASS u.hidden: IDL set to "\0" followed by IDL get 
PASS u.hidden: IDL set to object "test-toString" should not throw 
PASS u.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS u.hidden: IDL set to object "test-toString" followed by IDL get 
PASS u.hidden: IDL set to object "test-valueOf" should not throw 
PASS u.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS u.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS u.accessKey: typeof IDL attribute 
PASS u.accessKey: IDL get with DOM attribute unset 
PASS u.accessKey: setAttribute() to "" followed by getAttribute() 
PASS u.accessKey: setAttribute() to "" followed by IDL get 
PASS u.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS u.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS u.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS u.accessKey: setAttribute() to undefined followed by IDL get 
PASS u.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS u.accessKey: setAttribute() to 7 followed by IDL get 
PASS u.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS u.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS u.accessKey: setAttribute() to true followed by getAttribute() 
PASS u.accessKey: setAttribute() to true followed by IDL get 
PASS u.accessKey: setAttribute() to false followed by getAttribute() 
PASS u.accessKey: setAttribute() to false followed by IDL get 
PASS u.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS u.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS u.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS u.accessKey: setAttribute() to NaN followed by IDL get 
PASS u.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS u.accessKey: setAttribute() to Infinity followed by IDL get 
PASS u.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS u.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS u.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS u.accessKey: setAttribute() to "\0" followed by IDL get 
PASS u.accessKey: setAttribute() to null followed by getAttribute() 
PASS u.accessKey: setAttribute() to null followed by IDL get 
PASS u.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS u.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS u.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS u.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS u.accessKey: IDL set to "" should not throw 
PASS u.accessKey: IDL set to "" followed by getAttribute() 
PASS u.accessKey: IDL set to "" followed by IDL get 
PASS u.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS u.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS u.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS u.accessKey: IDL set to undefined should not throw 
PASS u.accessKey: IDL set to undefined followed by getAttribute() 
PASS u.accessKey: IDL set to undefined followed by IDL get 
PASS u.accessKey: IDL set to 7 should not throw 
PASS u.accessKey: IDL set to 7 followed by getAttribute() 
PASS u.accessKey: IDL set to 7 followed by IDL get 
PASS u.accessKey: IDL set to 1.5 should not throw 
PASS u.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS u.accessKey: IDL set to 1.5 followed by IDL get 
PASS u.accessKey: IDL set to true should not throw 
PASS u.accessKey: IDL set to true followed by getAttribute() 
PASS u.accessKey: IDL set to true followed by IDL get 
PASS u.accessKey: IDL set to false should not throw 
PASS u.accessKey: IDL set to false followed by getAttribute() 
PASS u.accessKey: IDL set to false followed by IDL get 
PASS u.accessKey: IDL set to object "[object Object]" should not throw 
PASS u.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS u.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS u.accessKey: IDL set to NaN should not throw 
PASS u.accessKey: IDL set to NaN followed by getAttribute() 
PASS u.accessKey: IDL set to NaN followed by IDL get 
PASS u.accessKey: IDL set to Infinity should not throw 
PASS u.accessKey: IDL set to Infinity followed by getAttribute() 
PASS u.accessKey: IDL set to Infinity followed by IDL get 
PASS u.accessKey: IDL set to -Infinity should not throw 
PASS u.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS u.accessKey: IDL set to -Infinity followed by IDL get 
PASS u.accessKey: IDL set to "\0" should not throw 
PASS u.accessKey: IDL set to "\0" followed by getAttribute() 
PASS u.accessKey: IDL set to "\0" followed by IDL get 
PASS u.accessKey: IDL set to null should not throw 
PASS u.accessKey: IDL set to null followed by getAttribute() 
PASS u.accessKey: IDL set to null followed by IDL get 
PASS u.accessKey: IDL set to object "test-toString" should not throw 
PASS u.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS u.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS u.accessKey: IDL set to object "test-valueOf" should not throw 
PASS u.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS u.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS u.tabIndex: typeof IDL attribute 
PASS u.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS u.tabIndex: setAttribute() to -36 followed by IDL get 
PASS u.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS u.tabIndex: setAttribute() to -1 followed by IDL get 
PASS u.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS u.tabIndex: setAttribute() to 0 followed by IDL get 
PASS u.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS u.tabIndex: setAttribute() to 1 followed by IDL get 
PASS u.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL u.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS u.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL u.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS u.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS u.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS u.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS u.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS u.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS u.tabIndex: setAttribute() to "0" followed by IDL get 
PASS u.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS u.tabIndex: setAttribute() to "1" followed by IDL get 
PASS u.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS u.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS u.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS u.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS u.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS u.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS u.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS u.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS u.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS u.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS u.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS u.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS u.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS u.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS u.tabIndex: IDL set to -36 should not throw 
PASS u.tabIndex: IDL set to -36 followed by getAttribute() 
PASS u.tabIndex: IDL set to -36 followed by IDL get 
PASS u.tabIndex: IDL set to -1 should not throw 
PASS u.tabIndex: IDL set to -1 followed by getAttribute() 
PASS u.tabIndex: IDL set to -1 followed by IDL get 
PASS u.tabIndex: IDL set to 0 should not throw 
PASS u.tabIndex: IDL set to 0 followed by getAttribute() 
PASS u.tabIndex: IDL set to 0 followed by IDL get 
PASS u.tabIndex: IDL set to 1 should not throw 
PASS u.tabIndex: IDL set to 1 followed by getAttribute() 
PASS u.tabIndex: IDL set to 1 followed by IDL get 
PASS u.tabIndex: IDL set to 2147483647 should not throw 
PASS u.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL u.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS u.tabIndex: IDL set to -2147483648 should not throw 
PASS u.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL u.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL u.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL u.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS u.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL u.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL u.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL u.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to null followed by getAttribute() 
FAIL u.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL u.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL u.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to true followed by getAttribute() 
FAIL u.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to false followed by getAttribute() 
FAIL u.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL u.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL u.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL u.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL u.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL u.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL u.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL u.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL u.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS u.itemScope: IDL set to "" should not throw 
FAIL u.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL u.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS u.itemScope: IDL set to " foo " should not throw 
PASS u.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL u.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS u.itemScope: IDL set to undefined should not throw 
FAIL u.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL u.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS u.itemScope: IDL set to null should not throw 
FAIL u.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL u.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS u.itemScope: IDL set to 7 should not throw 
PASS u.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL u.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS u.itemScope: IDL set to 1.5 should not throw 
PASS u.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL u.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS u.itemScope: IDL set to true should not throw 
PASS u.itemScope: IDL set to true followed by hasAttribute() 
PASS u.itemScope: IDL set to true followed by IDL get 
PASS u.itemScope: IDL set to false should not throw 
FAIL u.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS u.itemScope: IDL set to false followed by IDL get 
PASS u.itemScope: IDL set to object "[object Object]" should not throw 
PASS u.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL u.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS u.itemScope: IDL set to NaN should not throw 
FAIL u.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL u.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS u.itemScope: IDL set to Infinity should not throw 
PASS u.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL u.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS u.itemScope: IDL set to -Infinity should not throw 
PASS u.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL u.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS u.itemScope: IDL set to "\0" should not throw 
PASS u.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL u.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS u.itemScope: IDL set to object "test-toString" should not throw 
PASS u.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL u.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS u.itemScope: IDL set to object "test-valueOf" should not throw 
PASS u.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL u.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL u.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL u.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS u.itemId: setAttribute() to "" followed by getAttribute() 
FAIL u.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS u.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL u.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS u.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL u.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS u.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL u.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS u.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL u.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS u.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL u.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS u.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL u.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS u.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL u.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS u.itemId: setAttribute() to true followed by getAttribute() 
FAIL u.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS u.itemId: setAttribute() to false followed by getAttribute() 
FAIL u.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS u.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL u.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS u.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL u.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS u.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL u.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS u.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL u.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS u.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL u.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS u.itemId: setAttribute() to null followed by getAttribute() 
FAIL u.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS u.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL u.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS u.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL u.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS u.itemId: IDL set to "" should not throw 
FAIL u.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL u.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS u.itemId: IDL set to " foo " should not throw 
FAIL u.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL u.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS u.itemId: IDL set to "http://site.example/" should not throw 
FAIL u.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS u.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS u.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL u.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL u.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS u.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL u.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL u.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS u.itemId: IDL set to undefined should not throw 
FAIL u.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL u.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS u.itemId: IDL set to 7 should not throw 
FAIL u.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL u.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS u.itemId: IDL set to 1.5 should not throw 
FAIL u.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL u.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS u.itemId: IDL set to true should not throw 
FAIL u.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL u.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS u.itemId: IDL set to false should not throw 
FAIL u.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL u.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS u.itemId: IDL set to object "[object Object]" should not throw 
FAIL u.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL u.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS u.itemId: IDL set to NaN should not throw 
FAIL u.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL u.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS u.itemId: IDL set to Infinity should not throw 
FAIL u.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL u.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS u.itemId: IDL set to -Infinity should not throw 
FAIL u.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL u.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS u.itemId: IDL set to "\0" should not throw 
FAIL u.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL u.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS u.itemId: IDL set to null should not throw 
FAIL u.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL u.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS u.itemId: IDL set to object "test-toString" should not throw 
FAIL u.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL u.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS u.itemId: IDL set to object "test-valueOf" should not throw 
PASS u.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL u.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS mark.title: typeof IDL attribute 
PASS mark.title: IDL get with DOM attribute unset 
PASS mark.title: setAttribute() to "" followed by getAttribute() 
PASS mark.title: setAttribute() to "" followed by IDL get 
PASS mark.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS mark.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS mark.title: setAttribute() to undefined followed by getAttribute() 
PASS mark.title: setAttribute() to undefined followed by IDL get 
PASS mark.title: setAttribute() to 7 followed by getAttribute() 
PASS mark.title: setAttribute() to 7 followed by IDL get 
PASS mark.title: setAttribute() to 1.5 followed by getAttribute() 
PASS mark.title: setAttribute() to 1.5 followed by IDL get 
PASS mark.title: setAttribute() to true followed by getAttribute() 
PASS mark.title: setAttribute() to true followed by IDL get 
PASS mark.title: setAttribute() to false followed by getAttribute() 
PASS mark.title: setAttribute() to false followed by IDL get 
PASS mark.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS mark.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS mark.title: setAttribute() to NaN followed by getAttribute() 
PASS mark.title: setAttribute() to NaN followed by IDL get 
PASS mark.title: setAttribute() to Infinity followed by getAttribute() 
PASS mark.title: setAttribute() to Infinity followed by IDL get 
PASS mark.title: setAttribute() to -Infinity followed by getAttribute() 
PASS mark.title: setAttribute() to -Infinity followed by IDL get 
PASS mark.title: setAttribute() to "\0" followed by getAttribute() 
PASS mark.title: setAttribute() to "\0" followed by IDL get 
PASS mark.title: setAttribute() to null followed by getAttribute() 
PASS mark.title: setAttribute() to null followed by IDL get 
PASS mark.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS mark.title: setAttribute() to object "test-toString" followed by IDL get 
PASS mark.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS mark.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS mark.title: IDL set to "" should not throw 
PASS mark.title: IDL set to "" followed by getAttribute() 
PASS mark.title: IDL set to "" followed by IDL get 
PASS mark.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS mark.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS mark.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS mark.title: IDL set to undefined should not throw 
PASS mark.title: IDL set to undefined followed by getAttribute() 
PASS mark.title: IDL set to undefined followed by IDL get 
PASS mark.title: IDL set to 7 should not throw 
PASS mark.title: IDL set to 7 followed by getAttribute() 
PASS mark.title: IDL set to 7 followed by IDL get 
PASS mark.title: IDL set to 1.5 should not throw 
PASS mark.title: IDL set to 1.5 followed by getAttribute() 
PASS mark.title: IDL set to 1.5 followed by IDL get 
PASS mark.title: IDL set to true should not throw 
PASS mark.title: IDL set to true followed by getAttribute() 
PASS mark.title: IDL set to true followed by IDL get 
PASS mark.title: IDL set to false should not throw 
PASS mark.title: IDL set to false followed by getAttribute() 
PASS mark.title: IDL set to false followed by IDL get 
PASS mark.title: IDL set to object "[object Object]" should not throw 
PASS mark.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS mark.title: IDL set to object "[object Object]" followed by IDL get 
PASS mark.title: IDL set to NaN should not throw 
PASS mark.title: IDL set to NaN followed by getAttribute() 
PASS mark.title: IDL set to NaN followed by IDL get 
PASS mark.title: IDL set to Infinity should not throw 
PASS mark.title: IDL set to Infinity followed by getAttribute() 
PASS mark.title: IDL set to Infinity followed by IDL get 
PASS mark.title: IDL set to -Infinity should not throw 
PASS mark.title: IDL set to -Infinity followed by getAttribute() 
PASS mark.title: IDL set to -Infinity followed by IDL get 
PASS mark.title: IDL set to "\0" should not throw 
PASS mark.title: IDL set to "\0" followed by getAttribute() 
PASS mark.title: IDL set to "\0" followed by IDL get 
PASS mark.title: IDL set to null should not throw 
PASS mark.title: IDL set to null followed by getAttribute() 
PASS mark.title: IDL set to null followed by IDL get 
PASS mark.title: IDL set to object "test-toString" should not throw 
PASS mark.title: IDL set to object "test-toString" followed by getAttribute() 
PASS mark.title: IDL set to object "test-toString" followed by IDL get 
PASS mark.title: IDL set to object "test-valueOf" should not throw 
PASS mark.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS mark.title: IDL set to object "test-valueOf" followed by IDL get 
PASS mark.lang: typeof IDL attribute 
PASS mark.lang: IDL get with DOM attribute unset 
PASS mark.lang: setAttribute() to "" followed by getAttribute() 
PASS mark.lang: setAttribute() to "" followed by IDL get 
PASS mark.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS mark.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS mark.lang: setAttribute() to undefined followed by getAttribute() 
PASS mark.lang: setAttribute() to undefined followed by IDL get 
PASS mark.lang: setAttribute() to 7 followed by getAttribute() 
PASS mark.lang: setAttribute() to 7 followed by IDL get 
PASS mark.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS mark.lang: setAttribute() to 1.5 followed by IDL get 
PASS mark.lang: setAttribute() to true followed by getAttribute() 
PASS mark.lang: setAttribute() to true followed by IDL get 
PASS mark.lang: setAttribute() to false followed by getAttribute() 
PASS mark.lang: setAttribute() to false followed by IDL get 
PASS mark.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS mark.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS mark.lang: setAttribute() to NaN followed by getAttribute() 
PASS mark.lang: setAttribute() to NaN followed by IDL get 
PASS mark.lang: setAttribute() to Infinity followed by getAttribute() 
PASS mark.lang: setAttribute() to Infinity followed by IDL get 
PASS mark.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS mark.lang: setAttribute() to -Infinity followed by IDL get 
PASS mark.lang: setAttribute() to "\0" followed by getAttribute() 
PASS mark.lang: setAttribute() to "\0" followed by IDL get 
PASS mark.lang: setAttribute() to null followed by getAttribute() 
PASS mark.lang: setAttribute() to null followed by IDL get 
PASS mark.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS mark.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS mark.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS mark.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS mark.lang: IDL set to "" should not throw 
PASS mark.lang: IDL set to "" followed by getAttribute() 
PASS mark.lang: IDL set to "" followed by IDL get 
PASS mark.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS mark.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS mark.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS mark.lang: IDL set to undefined should not throw 
PASS mark.lang: IDL set to undefined followed by getAttribute() 
PASS mark.lang: IDL set to undefined followed by IDL get 
PASS mark.lang: IDL set to 7 should not throw 
PASS mark.lang: IDL set to 7 followed by getAttribute() 
PASS mark.lang: IDL set to 7 followed by IDL get 
PASS mark.lang: IDL set to 1.5 should not throw 
PASS mark.lang: IDL set to 1.5 followed by getAttribute() 
PASS mark.lang: IDL set to 1.5 followed by IDL get 
PASS mark.lang: IDL set to true should not throw 
PASS mark.lang: IDL set to true followed by getAttribute() 
PASS mark.lang: IDL set to true followed by IDL get 
PASS mark.lang: IDL set to false should not throw 
PASS mark.lang: IDL set to false followed by getAttribute() 
PASS mark.lang: IDL set to false followed by IDL get 
PASS mark.lang: IDL set to object "[object Object]" should not throw 
PASS mark.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS mark.lang: IDL set to object "[object Object]" followed by IDL get 
PASS mark.lang: IDL set to NaN should not throw 
PASS mark.lang: IDL set to NaN followed by getAttribute() 
PASS mark.lang: IDL set to NaN followed by IDL get 
PASS mark.lang: IDL set to Infinity should not throw 
PASS mark.lang: IDL set to Infinity followed by getAttribute() 
PASS mark.lang: IDL set to Infinity followed by IDL get 
PASS mark.lang: IDL set to -Infinity should not throw 
PASS mark.lang: IDL set to -Infinity followed by getAttribute() 
PASS mark.lang: IDL set to -Infinity followed by IDL get 
PASS mark.lang: IDL set to "\0" should not throw 
PASS mark.lang: IDL set to "\0" followed by getAttribute() 
PASS mark.lang: IDL set to "\0" followed by IDL get 
PASS mark.lang: IDL set to null should not throw 
PASS mark.lang: IDL set to null followed by getAttribute() 
PASS mark.lang: IDL set to null followed by IDL get 
PASS mark.lang: IDL set to object "test-toString" should not throw 
PASS mark.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS mark.lang: IDL set to object "test-toString" followed by IDL get 
PASS mark.lang: IDL set to object "test-valueOf" should not throw 
PASS mark.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS mark.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS mark.dir: typeof IDL attribute 
PASS mark.dir: IDL get with DOM attribute unset 
PASS mark.dir: setAttribute() to "" followed by getAttribute() 
PASS mark.dir: setAttribute() to "" followed by IDL get 
PASS mark.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS mark.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS mark.dir: setAttribute() to undefined followed by getAttribute() 
PASS mark.dir: setAttribute() to undefined followed by IDL get 
PASS mark.dir: setAttribute() to 7 followed by getAttribute() 
PASS mark.dir: setAttribute() to 7 followed by IDL get 
PASS mark.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS mark.dir: setAttribute() to 1.5 followed by IDL get 
PASS mark.dir: setAttribute() to true followed by getAttribute() 
PASS mark.dir: setAttribute() to true followed by IDL get 
PASS mark.dir: setAttribute() to false followed by getAttribute() 
PASS mark.dir: setAttribute() to false followed by IDL get 
PASS mark.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS mark.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS mark.dir: setAttribute() to NaN followed by getAttribute() 
PASS mark.dir: setAttribute() to NaN followed by IDL get 
PASS mark.dir: setAttribute() to Infinity followed by getAttribute() 
PASS mark.dir: setAttribute() to Infinity followed by IDL get 
PASS mark.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS mark.dir: setAttribute() to -Infinity followed by IDL get 
PASS mark.dir: setAttribute() to "\0" followed by getAttribute() 
PASS mark.dir: setAttribute() to "\0" followed by IDL get 
PASS mark.dir: setAttribute() to null followed by getAttribute() 
PASS mark.dir: setAttribute() to null followed by IDL get 
PASS mark.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS mark.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS mark.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS mark.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS mark.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS mark.dir: setAttribute() to "ltr" followed by IDL get 
PASS mark.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS mark.dir: setAttribute() to "xltr" followed by IDL get 
PASS mark.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS mark.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS mark.dir: setAttribute() to "tr" followed by getAttribute() 
PASS mark.dir: setAttribute() to "tr" followed by IDL get 
PASS mark.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS mark.dir: setAttribute() to "LTR" followed by IDL get 
PASS mark.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS mark.dir: setAttribute() to "rtl" followed by IDL get 
PASS mark.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS mark.dir: setAttribute() to "xrtl" followed by IDL get 
PASS mark.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS mark.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS mark.dir: setAttribute() to "tl" followed by getAttribute() 
PASS mark.dir: setAttribute() to "tl" followed by IDL get 
PASS mark.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS mark.dir: setAttribute() to "RTL" followed by IDL get 
PASS mark.dir: setAttribute() to "auto" followed by getAttribute() 
PASS mark.dir: setAttribute() to "auto" followed by IDL get 
PASS mark.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS mark.dir: setAttribute() to "xauto" followed by IDL get 
PASS mark.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS mark.dir: setAttribute() to "auto\0" followed by IDL get 
PASS mark.dir: setAttribute() to "uto" followed by getAttribute() 
PASS mark.dir: setAttribute() to "uto" followed by IDL get 
PASS mark.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS mark.dir: setAttribute() to "AUTO" followed by IDL get 
PASS mark.dir: IDL set to "" should not throw 
PASS mark.dir: IDL set to "" followed by getAttribute() 
PASS mark.dir: IDL set to "" followed by IDL get 
PASS mark.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS mark.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS mark.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS mark.dir: IDL set to undefined should not throw 
PASS mark.dir: IDL set to undefined followed by getAttribute() 
PASS mark.dir: IDL set to undefined followed by IDL get 
PASS mark.dir: IDL set to 7 should not throw 
PASS mark.dir: IDL set to 7 followed by getAttribute() 
PASS mark.dir: IDL set to 7 followed by IDL get 
PASS mark.dir: IDL set to 1.5 should not throw 
PASS mark.dir: IDL set to 1.5 followed by getAttribute() 
PASS mark.dir: IDL set to 1.5 followed by IDL get 
PASS mark.dir: IDL set to true should not throw 
PASS mark.dir: IDL set to true followed by getAttribute() 
PASS mark.dir: IDL set to true followed by IDL get 
PASS mark.dir: IDL set to false should not throw 
PASS mark.dir: IDL set to false followed by getAttribute() 
PASS mark.dir: IDL set to false followed by IDL get 
PASS mark.dir: IDL set to object "[object Object]" should not throw 
PASS mark.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS mark.dir: IDL set to object "[object Object]" followed by IDL get 
PASS mark.dir: IDL set to NaN should not throw 
PASS mark.dir: IDL set to NaN followed by getAttribute() 
PASS mark.dir: IDL set to NaN followed by IDL get 
PASS mark.dir: IDL set to Infinity should not throw 
PASS mark.dir: IDL set to Infinity followed by getAttribute() 
PASS mark.dir: IDL set to Infinity followed by IDL get 
PASS mark.dir: IDL set to -Infinity should not throw 
PASS mark.dir: IDL set to -Infinity followed by getAttribute() 
PASS mark.dir: IDL set to -Infinity followed by IDL get 
PASS mark.dir: IDL set to "\0" should not throw 
PASS mark.dir: IDL set to "\0" followed by getAttribute() 
PASS mark.dir: IDL set to "\0" followed by IDL get 
PASS mark.dir: IDL set to null should not throw 
PASS mark.dir: IDL set to null followed by IDL get 
PASS mark.dir: IDL set to object "test-toString" should not throw 
PASS mark.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS mark.dir: IDL set to object "test-toString" followed by IDL get 
PASS mark.dir: IDL set to object "test-valueOf" should not throw 
PASS mark.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS mark.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS mark.dir: IDL set to "ltr" should not throw 
PASS mark.dir: IDL set to "ltr" followed by getAttribute() 
PASS mark.dir: IDL set to "ltr" followed by IDL get 
PASS mark.dir: IDL set to "xltr" should not throw 
PASS mark.dir: IDL set to "xltr" followed by getAttribute() 
PASS mark.dir: IDL set to "xltr" followed by IDL get 
PASS mark.dir: IDL set to "ltr\0" should not throw 
PASS mark.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS mark.dir: IDL set to "ltr\0" followed by IDL get 
PASS mark.dir: IDL set to "tr" should not throw 
PASS mark.dir: IDL set to "tr" followed by getAttribute() 
PASS mark.dir: IDL set to "tr" followed by IDL get 
PASS mark.dir: IDL set to "LTR" should not throw 
PASS mark.dir: IDL set to "LTR" followed by getAttribute() 
PASS mark.dir: IDL set to "LTR" followed by IDL get 
PASS mark.dir: IDL set to "rtl" should not throw 
PASS mark.dir: IDL set to "rtl" followed by getAttribute() 
PASS mark.dir: IDL set to "rtl" followed by IDL get 
PASS mark.dir: IDL set to "xrtl" should not throw 
PASS mark.dir: IDL set to "xrtl" followed by getAttribute() 
PASS mark.dir: IDL set to "xrtl" followed by IDL get 
PASS mark.dir: IDL set to "rtl\0" should not throw 
PASS mark.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS mark.dir: IDL set to "rtl\0" followed by IDL get 
PASS mark.dir: IDL set to "tl" should not throw 
PASS mark.dir: IDL set to "tl" followed by getAttribute() 
PASS mark.dir: IDL set to "tl" followed by IDL get 
PASS mark.dir: IDL set to "RTL" should not throw 
PASS mark.dir: IDL set to "RTL" followed by getAttribute() 
PASS mark.dir: IDL set to "RTL" followed by IDL get 
PASS mark.dir: IDL set to "auto" should not throw 
PASS mark.dir: IDL set to "auto" followed by getAttribute() 
PASS mark.dir: IDL set to "auto" followed by IDL get 
PASS mark.dir: IDL set to "xauto" should not throw 
PASS mark.dir: IDL set to "xauto" followed by getAttribute() 
PASS mark.dir: IDL set to "xauto" followed by IDL get 
PASS mark.dir: IDL set to "auto\0" should not throw 
PASS mark.dir: IDL set to "auto\0" followed by getAttribute() 
PASS mark.dir: IDL set to "auto\0" followed by IDL get 
PASS mark.dir: IDL set to "uto" should not throw 
PASS mark.dir: IDL set to "uto" followed by getAttribute() 
PASS mark.dir: IDL set to "uto" followed by IDL get 
PASS mark.dir: IDL set to "AUTO" should not throw 
PASS mark.dir: IDL set to "AUTO" followed by getAttribute() 
PASS mark.dir: IDL set to "AUTO" followed by IDL get 
PASS mark.className (<mark class>): typeof IDL attribute 
PASS mark.className (<mark class>): IDL get with DOM attribute unset 
PASS mark.className (<mark class>): setAttribute() to "" followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to "" followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to undefined followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to undefined followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to 7 followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to 7 followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to 1.5 followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to 1.5 followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to true followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to true followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to false followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to false followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to NaN followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to NaN followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to Infinity followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to Infinity followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to -Infinity followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to -Infinity followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to "\0" followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to "\0" followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to null followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to null followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to object "test-toString" followed by IDL get 
PASS mark.className (<mark class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS mark.className (<mark class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS mark.className (<mark class>): IDL set to "" should not throw 
PASS mark.className (<mark class>): IDL set to "" followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to "" followed by IDL get 
PASS mark.className (<mark class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS mark.className (<mark class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS mark.className (<mark class>): IDL set to undefined should not throw 
PASS mark.className (<mark class>): IDL set to undefined followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to undefined followed by IDL get 
PASS mark.className (<mark class>): IDL set to 7 should not throw 
PASS mark.className (<mark class>): IDL set to 7 followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to 7 followed by IDL get 
PASS mark.className (<mark class>): IDL set to 1.5 should not throw 
PASS mark.className (<mark class>): IDL set to 1.5 followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to 1.5 followed by IDL get 
PASS mark.className (<mark class>): IDL set to true should not throw 
PASS mark.className (<mark class>): IDL set to true followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to true followed by IDL get 
PASS mark.className (<mark class>): IDL set to false should not throw 
PASS mark.className (<mark class>): IDL set to false followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to false followed by IDL get 
PASS mark.className (<mark class>): IDL set to object "[object Object]" should not throw 
PASS mark.className (<mark class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to object "[object Object]" followed by IDL get 
PASS mark.className (<mark class>): IDL set to NaN should not throw 
PASS mark.className (<mark class>): IDL set to NaN followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to NaN followed by IDL get 
PASS mark.className (<mark class>): IDL set to Infinity should not throw 
PASS mark.className (<mark class>): IDL set to Infinity followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to Infinity followed by IDL get 
PASS mark.className (<mark class>): IDL set to -Infinity should not throw 
PASS mark.className (<mark class>): IDL set to -Infinity followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to -Infinity followed by IDL get 
PASS mark.className (<mark class>): IDL set to "\0" should not throw 
PASS mark.className (<mark class>): IDL set to "\0" followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to "\0" followed by IDL get 
PASS mark.className (<mark class>): IDL set to null should not throw 
PASS mark.className (<mark class>): IDL set to null followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to null followed by IDL get 
PASS mark.className (<mark class>): IDL set to object "test-toString" should not throw 
PASS mark.className (<mark class>): IDL set to object "test-toString" followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to object "test-toString" followed by IDL get 
PASS mark.className (<mark class>): IDL set to object "test-valueOf" should not throw 
PASS mark.className (<mark class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS mark.className (<mark class>): IDL set to object "test-valueOf" followed by IDL get 
PASS mark.hidden: typeof IDL attribute 
PASS mark.hidden: IDL get with DOM attribute unset 
PASS mark.hidden: setAttribute() to "" followed by getAttribute() 
PASS mark.hidden: setAttribute() to "" followed by IDL get 
PASS mark.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS mark.hidden: setAttribute() to " foo " followed by IDL get 
PASS mark.hidden: setAttribute() to undefined followed by getAttribute() 
PASS mark.hidden: setAttribute() to undefined followed by IDL get 
PASS mark.hidden: setAttribute() to null followed by getAttribute() 
PASS mark.hidden: setAttribute() to null followed by IDL get 
PASS mark.hidden: setAttribute() to 7 followed by getAttribute() 
PASS mark.hidden: setAttribute() to 7 followed by IDL get 
PASS mark.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS mark.hidden: setAttribute() to 1.5 followed by IDL get 
PASS mark.hidden: setAttribute() to true followed by getAttribute() 
PASS mark.hidden: setAttribute() to true followed by IDL get 
PASS mark.hidden: setAttribute() to false followed by getAttribute() 
PASS mark.hidden: setAttribute() to false followed by IDL get 
PASS mark.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS mark.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS mark.hidden: setAttribute() to NaN followed by getAttribute() 
PASS mark.hidden: setAttribute() to NaN followed by IDL get 
PASS mark.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS mark.hidden: setAttribute() to Infinity followed by IDL get 
PASS mark.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS mark.hidden: setAttribute() to -Infinity followed by IDL get 
PASS mark.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS mark.hidden: setAttribute() to "\0" followed by IDL get 
PASS mark.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS mark.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS mark.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS mark.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS mark.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS mark.hidden: setAttribute() to "hidden" followed by IDL get 
PASS mark.hidden: IDL set to "" should not throw 
PASS mark.hidden: IDL set to "" followed by hasAttribute() 
PASS mark.hidden: IDL set to "" followed by IDL get 
PASS mark.hidden: IDL set to " foo " should not throw 
PASS mark.hidden: IDL set to " foo " followed by hasAttribute() 
PASS mark.hidden: IDL set to " foo " followed by IDL get 
PASS mark.hidden: IDL set to undefined should not throw 
PASS mark.hidden: IDL set to undefined followed by hasAttribute() 
PASS mark.hidden: IDL set to undefined followed by IDL get 
PASS mark.hidden: IDL set to null should not throw 
PASS mark.hidden: IDL set to null followed by hasAttribute() 
PASS mark.hidden: IDL set to null followed by IDL get 
PASS mark.hidden: IDL set to 7 should not throw 
PASS mark.hidden: IDL set to 7 followed by hasAttribute() 
PASS mark.hidden: IDL set to 7 followed by IDL get 
PASS mark.hidden: IDL set to 1.5 should not throw 
PASS mark.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS mark.hidden: IDL set to 1.5 followed by IDL get 
PASS mark.hidden: IDL set to true should not throw 
PASS mark.hidden: IDL set to true followed by hasAttribute() 
PASS mark.hidden: IDL set to true followed by IDL get 
PASS mark.hidden: IDL set to false should not throw 
PASS mark.hidden: IDL set to false followed by hasAttribute() 
PASS mark.hidden: IDL set to false followed by IDL get 
PASS mark.hidden: IDL set to object "[object Object]" should not throw 
PASS mark.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS mark.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS mark.hidden: IDL set to NaN should not throw 
PASS mark.hidden: IDL set to NaN followed by hasAttribute() 
PASS mark.hidden: IDL set to NaN followed by IDL get 
PASS mark.hidden: IDL set to Infinity should not throw 
PASS mark.hidden: IDL set to Infinity followed by hasAttribute() 
PASS mark.hidden: IDL set to Infinity followed by IDL get 
PASS mark.hidden: IDL set to -Infinity should not throw 
PASS mark.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS mark.hidden: IDL set to -Infinity followed by IDL get 
PASS mark.hidden: IDL set to "\0" should not throw 
PASS mark.hidden: IDL set to "\0" followed by hasAttribute() 
PASS mark.hidden: IDL set to "\0" followed by IDL get 
PASS mark.hidden: IDL set to object "test-toString" should not throw 
PASS mark.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS mark.hidden: IDL set to object "test-toString" followed by IDL get 
PASS mark.hidden: IDL set to object "test-valueOf" should not throw 
PASS mark.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS mark.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS mark.accessKey: typeof IDL attribute 
PASS mark.accessKey: IDL get with DOM attribute unset 
PASS mark.accessKey: setAttribute() to "" followed by getAttribute() 
PASS mark.accessKey: setAttribute() to "" followed by IDL get 
PASS mark.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS mark.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS mark.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS mark.accessKey: setAttribute() to undefined followed by IDL get 
PASS mark.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS mark.accessKey: setAttribute() to 7 followed by IDL get 
PASS mark.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS mark.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS mark.accessKey: setAttribute() to true followed by getAttribute() 
PASS mark.accessKey: setAttribute() to true followed by IDL get 
PASS mark.accessKey: setAttribute() to false followed by getAttribute() 
PASS mark.accessKey: setAttribute() to false followed by IDL get 
PASS mark.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS mark.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS mark.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS mark.accessKey: setAttribute() to NaN followed by IDL get 
PASS mark.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS mark.accessKey: setAttribute() to Infinity followed by IDL get 
PASS mark.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS mark.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS mark.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS mark.accessKey: setAttribute() to "\0" followed by IDL get 
PASS mark.accessKey: setAttribute() to null followed by getAttribute() 
PASS mark.accessKey: setAttribute() to null followed by IDL get 
PASS mark.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS mark.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS mark.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS mark.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS mark.accessKey: IDL set to "" should not throw 
PASS mark.accessKey: IDL set to "" followed by getAttribute() 
PASS mark.accessKey: IDL set to "" followed by IDL get 
PASS mark.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS mark.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS mark.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS mark.accessKey: IDL set to undefined should not throw 
PASS mark.accessKey: IDL set to undefined followed by getAttribute() 
PASS mark.accessKey: IDL set to undefined followed by IDL get 
PASS mark.accessKey: IDL set to 7 should not throw 
PASS mark.accessKey: IDL set to 7 followed by getAttribute() 
PASS mark.accessKey: IDL set to 7 followed by IDL get 
PASS mark.accessKey: IDL set to 1.5 should not throw 
PASS mark.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS mark.accessKey: IDL set to 1.5 followed by IDL get 
PASS mark.accessKey: IDL set to true should not throw 
PASS mark.accessKey: IDL set to true followed by getAttribute() 
PASS mark.accessKey: IDL set to true followed by IDL get 
PASS mark.accessKey: IDL set to false should not throw 
PASS mark.accessKey: IDL set to false followed by getAttribute() 
PASS mark.accessKey: IDL set to false followed by IDL get 
PASS mark.accessKey: IDL set to object "[object Object]" should not throw 
PASS mark.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS mark.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS mark.accessKey: IDL set to NaN should not throw 
PASS mark.accessKey: IDL set to NaN followed by getAttribute() 
PASS mark.accessKey: IDL set to NaN followed by IDL get 
PASS mark.accessKey: IDL set to Infinity should not throw 
PASS mark.accessKey: IDL set to Infinity followed by getAttribute() 
PASS mark.accessKey: IDL set to Infinity followed by IDL get 
PASS mark.accessKey: IDL set to -Infinity should not throw 
PASS mark.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS mark.accessKey: IDL set to -Infinity followed by IDL get 
PASS mark.accessKey: IDL set to "\0" should not throw 
PASS mark.accessKey: IDL set to "\0" followed by getAttribute() 
PASS mark.accessKey: IDL set to "\0" followed by IDL get 
PASS mark.accessKey: IDL set to null should not throw 
PASS mark.accessKey: IDL set to null followed by getAttribute() 
PASS mark.accessKey: IDL set to null followed by IDL get 
PASS mark.accessKey: IDL set to object "test-toString" should not throw 
PASS mark.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS mark.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS mark.accessKey: IDL set to object "test-valueOf" should not throw 
PASS mark.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS mark.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS mark.tabIndex: typeof IDL attribute 
PASS mark.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to -36 followed by IDL get 
PASS mark.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to -1 followed by IDL get 
PASS mark.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to 0 followed by IDL get 
PASS mark.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to 1 followed by IDL get 
PASS mark.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL mark.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS mark.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL mark.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS mark.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS mark.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS mark.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to "0" followed by IDL get 
PASS mark.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to "1" followed by IDL get 
PASS mark.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS mark.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS mark.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS mark.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS mark.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS mark.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS mark.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS mark.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS mark.tabIndex: IDL set to -36 should not throw 
PASS mark.tabIndex: IDL set to -36 followed by getAttribute() 
PASS mark.tabIndex: IDL set to -36 followed by IDL get 
PASS mark.tabIndex: IDL set to -1 should not throw 
PASS mark.tabIndex: IDL set to -1 followed by getAttribute() 
PASS mark.tabIndex: IDL set to -1 followed by IDL get 
PASS mark.tabIndex: IDL set to 0 should not throw 
PASS mark.tabIndex: IDL set to 0 followed by getAttribute() 
PASS mark.tabIndex: IDL set to 0 followed by IDL get 
PASS mark.tabIndex: IDL set to 1 should not throw 
PASS mark.tabIndex: IDL set to 1 followed by getAttribute() 
PASS mark.tabIndex: IDL set to 1 followed by IDL get 
PASS mark.tabIndex: IDL set to 2147483647 should not throw 
PASS mark.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL mark.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS mark.tabIndex: IDL set to -2147483648 should not throw 
PASS mark.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL mark.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL mark.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL mark.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS mark.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to null followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to true followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to false followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL mark.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS mark.itemScope: IDL set to "" should not throw 
FAIL mark.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL mark.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS mark.itemScope: IDL set to " foo " should not throw 
PASS mark.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL mark.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS mark.itemScope: IDL set to undefined should not throw 
FAIL mark.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL mark.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS mark.itemScope: IDL set to null should not throw 
FAIL mark.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL mark.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS mark.itemScope: IDL set to 7 should not throw 
PASS mark.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL mark.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS mark.itemScope: IDL set to 1.5 should not throw 
PASS mark.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL mark.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS mark.itemScope: IDL set to true should not throw 
PASS mark.itemScope: IDL set to true followed by hasAttribute() 
PASS mark.itemScope: IDL set to true followed by IDL get 
PASS mark.itemScope: IDL set to false should not throw 
FAIL mark.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS mark.itemScope: IDL set to false followed by IDL get 
PASS mark.itemScope: IDL set to object "[object Object]" should not throw 
PASS mark.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL mark.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS mark.itemScope: IDL set to NaN should not throw 
FAIL mark.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL mark.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS mark.itemScope: IDL set to Infinity should not throw 
PASS mark.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL mark.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS mark.itemScope: IDL set to -Infinity should not throw 
PASS mark.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL mark.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS mark.itemScope: IDL set to "\0" should not throw 
PASS mark.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL mark.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS mark.itemScope: IDL set to object "test-toString" should not throw 
PASS mark.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL mark.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS mark.itemScope: IDL set to object "test-valueOf" should not throw 
PASS mark.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL mark.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL mark.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL mark.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS mark.itemId: setAttribute() to "" followed by getAttribute() 
FAIL mark.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS mark.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL mark.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS mark.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL mark.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS mark.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL mark.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS mark.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL mark.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS mark.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL mark.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS mark.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL mark.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS mark.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL mark.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS mark.itemId: setAttribute() to true followed by getAttribute() 
FAIL mark.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS mark.itemId: setAttribute() to false followed by getAttribute() 
FAIL mark.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS mark.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL mark.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS mark.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL mark.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS mark.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL mark.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS mark.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL mark.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS mark.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL mark.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS mark.itemId: setAttribute() to null followed by getAttribute() 
FAIL mark.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS mark.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL mark.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS mark.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL mark.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS mark.itemId: IDL set to "" should not throw 
FAIL mark.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL mark.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS mark.itemId: IDL set to " foo " should not throw 
FAIL mark.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL mark.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS mark.itemId: IDL set to "http://site.example/" should not throw 
FAIL mark.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS mark.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS mark.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL mark.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL mark.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS mark.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL mark.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL mark.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS mark.itemId: IDL set to undefined should not throw 
FAIL mark.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL mark.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS mark.itemId: IDL set to 7 should not throw 
FAIL mark.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL mark.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS mark.itemId: IDL set to 1.5 should not throw 
FAIL mark.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL mark.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS mark.itemId: IDL set to true should not throw 
FAIL mark.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL mark.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS mark.itemId: IDL set to false should not throw 
FAIL mark.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL mark.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS mark.itemId: IDL set to object "[object Object]" should not throw 
FAIL mark.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL mark.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS mark.itemId: IDL set to NaN should not throw 
FAIL mark.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL mark.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS mark.itemId: IDL set to Infinity should not throw 
FAIL mark.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL mark.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS mark.itemId: IDL set to -Infinity should not throw 
FAIL mark.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL mark.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS mark.itemId: IDL set to "\0" should not throw 
FAIL mark.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL mark.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS mark.itemId: IDL set to null should not throw 
FAIL mark.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL mark.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS mark.itemId: IDL set to object "test-toString" should not throw 
FAIL mark.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL mark.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS mark.itemId: IDL set to object "test-valueOf" should not throw 
PASS mark.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL mark.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS ruby.title: typeof IDL attribute 
PASS ruby.title: IDL get with DOM attribute unset 
PASS ruby.title: setAttribute() to "" followed by getAttribute() 
PASS ruby.title: setAttribute() to "" followed by IDL get 
PASS ruby.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ruby.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ruby.title: setAttribute() to undefined followed by getAttribute() 
PASS ruby.title: setAttribute() to undefined followed by IDL get 
PASS ruby.title: setAttribute() to 7 followed by getAttribute() 
PASS ruby.title: setAttribute() to 7 followed by IDL get 
PASS ruby.title: setAttribute() to 1.5 followed by getAttribute() 
PASS ruby.title: setAttribute() to 1.5 followed by IDL get 
PASS ruby.title: setAttribute() to true followed by getAttribute() 
PASS ruby.title: setAttribute() to true followed by IDL get 
PASS ruby.title: setAttribute() to false followed by getAttribute() 
PASS ruby.title: setAttribute() to false followed by IDL get 
PASS ruby.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ruby.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS ruby.title: setAttribute() to NaN followed by getAttribute() 
PASS ruby.title: setAttribute() to NaN followed by IDL get 
PASS ruby.title: setAttribute() to Infinity followed by getAttribute() 
PASS ruby.title: setAttribute() to Infinity followed by IDL get 
PASS ruby.title: setAttribute() to -Infinity followed by getAttribute() 
PASS ruby.title: setAttribute() to -Infinity followed by IDL get 
PASS ruby.title: setAttribute() to "\0" followed by getAttribute() 
PASS ruby.title: setAttribute() to "\0" followed by IDL get 
PASS ruby.title: setAttribute() to null followed by getAttribute() 
PASS ruby.title: setAttribute() to null followed by IDL get 
PASS ruby.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ruby.title: setAttribute() to object "test-toString" followed by IDL get 
PASS ruby.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ruby.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ruby.title: IDL set to "" should not throw 
PASS ruby.title: IDL set to "" followed by getAttribute() 
PASS ruby.title: IDL set to "" followed by IDL get 
PASS ruby.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ruby.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ruby.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ruby.title: IDL set to undefined should not throw 
PASS ruby.title: IDL set to undefined followed by getAttribute() 
PASS ruby.title: IDL set to undefined followed by IDL get 
PASS ruby.title: IDL set to 7 should not throw 
PASS ruby.title: IDL set to 7 followed by getAttribute() 
PASS ruby.title: IDL set to 7 followed by IDL get 
PASS ruby.title: IDL set to 1.5 should not throw 
PASS ruby.title: IDL set to 1.5 followed by getAttribute() 
PASS ruby.title: IDL set to 1.5 followed by IDL get 
PASS ruby.title: IDL set to true should not throw 
PASS ruby.title: IDL set to true followed by getAttribute() 
PASS ruby.title: IDL set to true followed by IDL get 
PASS ruby.title: IDL set to false should not throw 
PASS ruby.title: IDL set to false followed by getAttribute() 
PASS ruby.title: IDL set to false followed by IDL get 
PASS ruby.title: IDL set to object "[object Object]" should not throw 
PASS ruby.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS ruby.title: IDL set to object "[object Object]" followed by IDL get 
PASS ruby.title: IDL set to NaN should not throw 
PASS ruby.title: IDL set to NaN followed by getAttribute() 
PASS ruby.title: IDL set to NaN followed by IDL get 
PASS ruby.title: IDL set to Infinity should not throw 
PASS ruby.title: IDL set to Infinity followed by getAttribute() 
PASS ruby.title: IDL set to Infinity followed by IDL get 
PASS ruby.title: IDL set to -Infinity should not throw 
PASS ruby.title: IDL set to -Infinity followed by getAttribute() 
PASS ruby.title: IDL set to -Infinity followed by IDL get 
PASS ruby.title: IDL set to "\0" should not throw 
PASS ruby.title: IDL set to "\0" followed by getAttribute() 
PASS ruby.title: IDL set to "\0" followed by IDL get 
PASS ruby.title: IDL set to null should not throw 
PASS ruby.title: IDL set to null followed by getAttribute() 
PASS ruby.title: IDL set to null followed by IDL get 
PASS ruby.title: IDL set to object "test-toString" should not throw 
PASS ruby.title: IDL set to object "test-toString" followed by getAttribute() 
PASS ruby.title: IDL set to object "test-toString" followed by IDL get 
PASS ruby.title: IDL set to object "test-valueOf" should not throw 
PASS ruby.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ruby.title: IDL set to object "test-valueOf" followed by IDL get 
PASS ruby.lang: typeof IDL attribute 
PASS ruby.lang: IDL get with DOM attribute unset 
PASS ruby.lang: setAttribute() to "" followed by getAttribute() 
PASS ruby.lang: setAttribute() to "" followed by IDL get 
PASS ruby.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ruby.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ruby.lang: setAttribute() to undefined followed by getAttribute() 
PASS ruby.lang: setAttribute() to undefined followed by IDL get 
PASS ruby.lang: setAttribute() to 7 followed by getAttribute() 
PASS ruby.lang: setAttribute() to 7 followed by IDL get 
PASS ruby.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS ruby.lang: setAttribute() to 1.5 followed by IDL get 
PASS ruby.lang: setAttribute() to true followed by getAttribute() 
PASS ruby.lang: setAttribute() to true followed by IDL get 
PASS ruby.lang: setAttribute() to false followed by getAttribute() 
PASS ruby.lang: setAttribute() to false followed by IDL get 
PASS ruby.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ruby.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS ruby.lang: setAttribute() to NaN followed by getAttribute() 
PASS ruby.lang: setAttribute() to NaN followed by IDL get 
PASS ruby.lang: setAttribute() to Infinity followed by getAttribute() 
PASS ruby.lang: setAttribute() to Infinity followed by IDL get 
PASS ruby.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS ruby.lang: setAttribute() to -Infinity followed by IDL get 
PASS ruby.lang: setAttribute() to "\0" followed by getAttribute() 
PASS ruby.lang: setAttribute() to "\0" followed by IDL get 
PASS ruby.lang: setAttribute() to null followed by getAttribute() 
PASS ruby.lang: setAttribute() to null followed by IDL get 
PASS ruby.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ruby.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS ruby.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ruby.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ruby.lang: IDL set to "" should not throw 
PASS ruby.lang: IDL set to "" followed by getAttribute() 
PASS ruby.lang: IDL set to "" followed by IDL get 
PASS ruby.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ruby.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ruby.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ruby.lang: IDL set to undefined should not throw 
PASS ruby.lang: IDL set to undefined followed by getAttribute() 
PASS ruby.lang: IDL set to undefined followed by IDL get 
PASS ruby.lang: IDL set to 7 should not throw 
PASS ruby.lang: IDL set to 7 followed by getAttribute() 
PASS ruby.lang: IDL set to 7 followed by IDL get 
PASS ruby.lang: IDL set to 1.5 should not throw 
PASS ruby.lang: IDL set to 1.5 followed by getAttribute() 
PASS ruby.lang: IDL set to 1.5 followed by IDL get 
PASS ruby.lang: IDL set to true should not throw 
PASS ruby.lang: IDL set to true followed by getAttribute() 
PASS ruby.lang: IDL set to true followed by IDL get 
PASS ruby.lang: IDL set to false should not throw 
PASS ruby.lang: IDL set to false followed by getAttribute() 
PASS ruby.lang: IDL set to false followed by IDL get 
PASS ruby.lang: IDL set to object "[object Object]" should not throw 
PASS ruby.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS ruby.lang: IDL set to object "[object Object]" followed by IDL get 
PASS ruby.lang: IDL set to NaN should not throw 
PASS ruby.lang: IDL set to NaN followed by getAttribute() 
PASS ruby.lang: IDL set to NaN followed by IDL get 
PASS ruby.lang: IDL set to Infinity should not throw 
PASS ruby.lang: IDL set to Infinity followed by getAttribute() 
PASS ruby.lang: IDL set to Infinity followed by IDL get 
PASS ruby.lang: IDL set to -Infinity should not throw 
PASS ruby.lang: IDL set to -Infinity followed by getAttribute() 
PASS ruby.lang: IDL set to -Infinity followed by IDL get 
PASS ruby.lang: IDL set to "\0" should not throw 
PASS ruby.lang: IDL set to "\0" followed by getAttribute() 
PASS ruby.lang: IDL set to "\0" followed by IDL get 
PASS ruby.lang: IDL set to null should not throw 
PASS ruby.lang: IDL set to null followed by getAttribute() 
PASS ruby.lang: IDL set to null followed by IDL get 
PASS ruby.lang: IDL set to object "test-toString" should not throw 
PASS ruby.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS ruby.lang: IDL set to object "test-toString" followed by IDL get 
PASS ruby.lang: IDL set to object "test-valueOf" should not throw 
PASS ruby.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ruby.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS ruby.dir: typeof IDL attribute 
PASS ruby.dir: IDL get with DOM attribute unset 
PASS ruby.dir: setAttribute() to "" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "" followed by IDL get 
PASS ruby.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ruby.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ruby.dir: setAttribute() to undefined followed by getAttribute() 
PASS ruby.dir: setAttribute() to undefined followed by IDL get 
PASS ruby.dir: setAttribute() to 7 followed by getAttribute() 
PASS ruby.dir: setAttribute() to 7 followed by IDL get 
PASS ruby.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS ruby.dir: setAttribute() to 1.5 followed by IDL get 
PASS ruby.dir: setAttribute() to true followed by getAttribute() 
PASS ruby.dir: setAttribute() to true followed by IDL get 
PASS ruby.dir: setAttribute() to false followed by getAttribute() 
PASS ruby.dir: setAttribute() to false followed by IDL get 
PASS ruby.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ruby.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS ruby.dir: setAttribute() to NaN followed by getAttribute() 
PASS ruby.dir: setAttribute() to NaN followed by IDL get 
PASS ruby.dir: setAttribute() to Infinity followed by getAttribute() 
PASS ruby.dir: setAttribute() to Infinity followed by IDL get 
PASS ruby.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS ruby.dir: setAttribute() to -Infinity followed by IDL get 
PASS ruby.dir: setAttribute() to "\0" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "\0" followed by IDL get 
PASS ruby.dir: setAttribute() to null followed by getAttribute() 
PASS ruby.dir: setAttribute() to null followed by IDL get 
PASS ruby.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ruby.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS ruby.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ruby.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ruby.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "ltr" followed by IDL get 
PASS ruby.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "xltr" followed by IDL get 
PASS ruby.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS ruby.dir: setAttribute() to "tr" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "tr" followed by IDL get 
PASS ruby.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "LTR" followed by IDL get 
PASS ruby.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "rtl" followed by IDL get 
PASS ruby.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "xrtl" followed by IDL get 
PASS ruby.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS ruby.dir: setAttribute() to "tl" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "tl" followed by IDL get 
PASS ruby.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "RTL" followed by IDL get 
PASS ruby.dir: setAttribute() to "auto" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "auto" followed by IDL get 
PASS ruby.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "xauto" followed by IDL get 
PASS ruby.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "auto\0" followed by IDL get 
PASS ruby.dir: setAttribute() to "uto" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "uto" followed by IDL get 
PASS ruby.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS ruby.dir: setAttribute() to "AUTO" followed by IDL get 
PASS ruby.dir: IDL set to "" should not throw 
PASS ruby.dir: IDL set to "" followed by getAttribute() 
PASS ruby.dir: IDL set to "" followed by IDL get 
PASS ruby.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ruby.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ruby.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ruby.dir: IDL set to undefined should not throw 
PASS ruby.dir: IDL set to undefined followed by getAttribute() 
PASS ruby.dir: IDL set to undefined followed by IDL get 
PASS ruby.dir: IDL set to 7 should not throw 
PASS ruby.dir: IDL set to 7 followed by getAttribute() 
PASS ruby.dir: IDL set to 7 followed by IDL get 
PASS ruby.dir: IDL set to 1.5 should not throw 
PASS ruby.dir: IDL set to 1.5 followed by getAttribute() 
PASS ruby.dir: IDL set to 1.5 followed by IDL get 
PASS ruby.dir: IDL set to true should not throw 
PASS ruby.dir: IDL set to true followed by getAttribute() 
PASS ruby.dir: IDL set to true followed by IDL get 
PASS ruby.dir: IDL set to false should not throw 
PASS ruby.dir: IDL set to false followed by getAttribute() 
PASS ruby.dir: IDL set to false followed by IDL get 
PASS ruby.dir: IDL set to object "[object Object]" should not throw 
PASS ruby.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS ruby.dir: IDL set to object "[object Object]" followed by IDL get 
PASS ruby.dir: IDL set to NaN should not throw 
PASS ruby.dir: IDL set to NaN followed by getAttribute() 
PASS ruby.dir: IDL set to NaN followed by IDL get 
PASS ruby.dir: IDL set to Infinity should not throw 
PASS ruby.dir: IDL set to Infinity followed by getAttribute() 
PASS ruby.dir: IDL set to Infinity followed by IDL get 
PASS ruby.dir: IDL set to -Infinity should not throw 
PASS ruby.dir: IDL set to -Infinity followed by getAttribute() 
PASS ruby.dir: IDL set to -Infinity followed by IDL get 
PASS ruby.dir: IDL set to "\0" should not throw 
PASS ruby.dir: IDL set to "\0" followed by getAttribute() 
PASS ruby.dir: IDL set to "\0" followed by IDL get 
PASS ruby.dir: IDL set to null should not throw 
PASS ruby.dir: IDL set to null followed by IDL get 
PASS ruby.dir: IDL set to object "test-toString" should not throw 
PASS ruby.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS ruby.dir: IDL set to object "test-toString" followed by IDL get 
PASS ruby.dir: IDL set to object "test-valueOf" should not throw 
PASS ruby.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ruby.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS ruby.dir: IDL set to "ltr" should not throw 
PASS ruby.dir: IDL set to "ltr" followed by getAttribute() 
PASS ruby.dir: IDL set to "ltr" followed by IDL get 
PASS ruby.dir: IDL set to "xltr" should not throw 
PASS ruby.dir: IDL set to "xltr" followed by getAttribute() 
PASS ruby.dir: IDL set to "xltr" followed by IDL get 
PASS ruby.dir: IDL set to "ltr\0" should not throw 
PASS ruby.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS ruby.dir: IDL set to "ltr\0" followed by IDL get 
PASS ruby.dir: IDL set to "tr" should not throw 
PASS ruby.dir: IDL set to "tr" followed by getAttribute() 
PASS ruby.dir: IDL set to "tr" followed by IDL get 
PASS ruby.dir: IDL set to "LTR" should not throw 
PASS ruby.dir: IDL set to "LTR" followed by getAttribute() 
PASS ruby.dir: IDL set to "LTR" followed by IDL get 
PASS ruby.dir: IDL set to "rtl" should not throw 
PASS ruby.dir: IDL set to "rtl" followed by getAttribute() 
PASS ruby.dir: IDL set to "rtl" followed by IDL get 
PASS ruby.dir: IDL set to "xrtl" should not throw 
PASS ruby.dir: IDL set to "xrtl" followed by getAttribute() 
PASS ruby.dir: IDL set to "xrtl" followed by IDL get 
PASS ruby.dir: IDL set to "rtl\0" should not throw 
PASS ruby.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS ruby.dir: IDL set to "rtl\0" followed by IDL get 
PASS ruby.dir: IDL set to "tl" should not throw 
PASS ruby.dir: IDL set to "tl" followed by getAttribute() 
PASS ruby.dir: IDL set to "tl" followed by IDL get 
PASS ruby.dir: IDL set to "RTL" should not throw 
PASS ruby.dir: IDL set to "RTL" followed by getAttribute() 
PASS ruby.dir: IDL set to "RTL" followed by IDL get 
PASS ruby.dir: IDL set to "auto" should not throw 
PASS ruby.dir: IDL set to "auto" followed by getAttribute() 
PASS ruby.dir: IDL set to "auto" followed by IDL get 
PASS ruby.dir: IDL set to "xauto" should not throw 
PASS ruby.dir: IDL set to "xauto" followed by getAttribute() 
PASS ruby.dir: IDL set to "xauto" followed by IDL get 
PASS ruby.dir: IDL set to "auto\0" should not throw 
PASS ruby.dir: IDL set to "auto\0" followed by getAttribute() 
PASS ruby.dir: IDL set to "auto\0" followed by IDL get 
PASS ruby.dir: IDL set to "uto" should not throw 
PASS ruby.dir: IDL set to "uto" followed by getAttribute() 
PASS ruby.dir: IDL set to "uto" followed by IDL get 
PASS ruby.dir: IDL set to "AUTO" should not throw 
PASS ruby.dir: IDL set to "AUTO" followed by getAttribute() 
PASS ruby.dir: IDL set to "AUTO" followed by IDL get 
PASS ruby.className (<ruby class>): typeof IDL attribute 
PASS ruby.className (<ruby class>): IDL get with DOM attribute unset 
PASS ruby.className (<ruby class>): setAttribute() to "" followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to "" followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to undefined followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to undefined followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to 7 followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to 7 followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to 1.5 followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to 1.5 followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to true followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to true followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to false followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to false followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to NaN followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to NaN followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to Infinity followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to Infinity followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to -Infinity followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to -Infinity followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to "\0" followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to "\0" followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to null followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to null followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to object "test-toString" followed by IDL get 
PASS ruby.className (<ruby class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ruby.className (<ruby class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to "" should not throw 
PASS ruby.className (<ruby class>): IDL set to "" followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to "" followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ruby.className (<ruby class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to undefined should not throw 
PASS ruby.className (<ruby class>): IDL set to undefined followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to undefined followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to 7 should not throw 
PASS ruby.className (<ruby class>): IDL set to 7 followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to 7 followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to 1.5 should not throw 
PASS ruby.className (<ruby class>): IDL set to 1.5 followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to 1.5 followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to true should not throw 
PASS ruby.className (<ruby class>): IDL set to true followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to true followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to false should not throw 
PASS ruby.className (<ruby class>): IDL set to false followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to false followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to object "[object Object]" should not throw 
PASS ruby.className (<ruby class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to object "[object Object]" followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to NaN should not throw 
PASS ruby.className (<ruby class>): IDL set to NaN followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to NaN followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to Infinity should not throw 
PASS ruby.className (<ruby class>): IDL set to Infinity followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to Infinity followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to -Infinity should not throw 
PASS ruby.className (<ruby class>): IDL set to -Infinity followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to -Infinity followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to "\0" should not throw 
PASS ruby.className (<ruby class>): IDL set to "\0" followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to "\0" followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to null should not throw 
PASS ruby.className (<ruby class>): IDL set to null followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to null followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to object "test-toString" should not throw 
PASS ruby.className (<ruby class>): IDL set to object "test-toString" followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to object "test-toString" followed by IDL get 
PASS ruby.className (<ruby class>): IDL set to object "test-valueOf" should not throw 
PASS ruby.className (<ruby class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS ruby.className (<ruby class>): IDL set to object "test-valueOf" followed by IDL get 
PASS ruby.hidden: typeof IDL attribute 
PASS ruby.hidden: IDL get with DOM attribute unset 
PASS ruby.hidden: setAttribute() to "" followed by getAttribute() 
PASS ruby.hidden: setAttribute() to "" followed by IDL get 
PASS ruby.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS ruby.hidden: setAttribute() to " foo " followed by IDL get 
PASS ruby.hidden: setAttribute() to undefined followed by getAttribute() 
PASS ruby.hidden: setAttribute() to undefined followed by IDL get 
PASS ruby.hidden: setAttribute() to null followed by getAttribute() 
PASS ruby.hidden: setAttribute() to null followed by IDL get 
PASS ruby.hidden: setAttribute() to 7 followed by getAttribute() 
PASS ruby.hidden: setAttribute() to 7 followed by IDL get 
PASS ruby.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS ruby.hidden: setAttribute() to 1.5 followed by IDL get 
PASS ruby.hidden: setAttribute() to true followed by getAttribute() 
PASS ruby.hidden: setAttribute() to true followed by IDL get 
PASS ruby.hidden: setAttribute() to false followed by getAttribute() 
PASS ruby.hidden: setAttribute() to false followed by IDL get 
PASS ruby.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ruby.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS ruby.hidden: setAttribute() to NaN followed by getAttribute() 
PASS ruby.hidden: setAttribute() to NaN followed by IDL get 
PASS ruby.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS ruby.hidden: setAttribute() to Infinity followed by IDL get 
PASS ruby.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS ruby.hidden: setAttribute() to -Infinity followed by IDL get 
PASS ruby.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS ruby.hidden: setAttribute() to "\0" followed by IDL get 
PASS ruby.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ruby.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS ruby.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ruby.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ruby.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS ruby.hidden: setAttribute() to "hidden" followed by IDL get 
PASS ruby.hidden: IDL set to "" should not throw 
PASS ruby.hidden: IDL set to "" followed by hasAttribute() 
PASS ruby.hidden: IDL set to "" followed by IDL get 
PASS ruby.hidden: IDL set to " foo " should not throw 
PASS ruby.hidden: IDL set to " foo " followed by hasAttribute() 
PASS ruby.hidden: IDL set to " foo " followed by IDL get 
PASS ruby.hidden: IDL set to undefined should not throw 
PASS ruby.hidden: IDL set to undefined followed by hasAttribute() 
PASS ruby.hidden: IDL set to undefined followed by IDL get 
PASS ruby.hidden: IDL set to null should not throw 
PASS ruby.hidden: IDL set to null followed by hasAttribute() 
PASS ruby.hidden: IDL set to null followed by IDL get 
PASS ruby.hidden: IDL set to 7 should not throw 
PASS ruby.hidden: IDL set to 7 followed by hasAttribute() 
PASS ruby.hidden: IDL set to 7 followed by IDL get 
PASS ruby.hidden: IDL set to 1.5 should not throw 
PASS ruby.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS ruby.hidden: IDL set to 1.5 followed by IDL get 
PASS ruby.hidden: IDL set to true should not throw 
PASS ruby.hidden: IDL set to true followed by hasAttribute() 
PASS ruby.hidden: IDL set to true followed by IDL get 
PASS ruby.hidden: IDL set to false should not throw 
PASS ruby.hidden: IDL set to false followed by hasAttribute() 
PASS ruby.hidden: IDL set to false followed by IDL get 
PASS ruby.hidden: IDL set to object "[object Object]" should not throw 
PASS ruby.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS ruby.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS ruby.hidden: IDL set to NaN should not throw 
PASS ruby.hidden: IDL set to NaN followed by hasAttribute() 
PASS ruby.hidden: IDL set to NaN followed by IDL get 
PASS ruby.hidden: IDL set to Infinity should not throw 
PASS ruby.hidden: IDL set to Infinity followed by hasAttribute() 
PASS ruby.hidden: IDL set to Infinity followed by IDL get 
PASS ruby.hidden: IDL set to -Infinity should not throw 
PASS ruby.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS ruby.hidden: IDL set to -Infinity followed by IDL get 
PASS ruby.hidden: IDL set to "\0" should not throw 
PASS ruby.hidden: IDL set to "\0" followed by hasAttribute() 
PASS ruby.hidden: IDL set to "\0" followed by IDL get 
PASS ruby.hidden: IDL set to object "test-toString" should not throw 
PASS ruby.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS ruby.hidden: IDL set to object "test-toString" followed by IDL get 
PASS ruby.hidden: IDL set to object "test-valueOf" should not throw 
PASS ruby.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS ruby.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS ruby.accessKey: typeof IDL attribute 
PASS ruby.accessKey: IDL get with DOM attribute unset 
PASS ruby.accessKey: setAttribute() to "" followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to "" followed by IDL get 
PASS ruby.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ruby.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to undefined followed by IDL get 
PASS ruby.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to 7 followed by IDL get 
PASS ruby.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS ruby.accessKey: setAttribute() to true followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to true followed by IDL get 
PASS ruby.accessKey: setAttribute() to false followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to false followed by IDL get 
PASS ruby.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS ruby.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to NaN followed by IDL get 
PASS ruby.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to Infinity followed by IDL get 
PASS ruby.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS ruby.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to "\0" followed by IDL get 
PASS ruby.accessKey: setAttribute() to null followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to null followed by IDL get 
PASS ruby.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS ruby.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ruby.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ruby.accessKey: IDL set to "" should not throw 
PASS ruby.accessKey: IDL set to "" followed by getAttribute() 
PASS ruby.accessKey: IDL set to "" followed by IDL get 
PASS ruby.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ruby.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ruby.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ruby.accessKey: IDL set to undefined should not throw 
PASS ruby.accessKey: IDL set to undefined followed by getAttribute() 
PASS ruby.accessKey: IDL set to undefined followed by IDL get 
PASS ruby.accessKey: IDL set to 7 should not throw 
PASS ruby.accessKey: IDL set to 7 followed by getAttribute() 
PASS ruby.accessKey: IDL set to 7 followed by IDL get 
PASS ruby.accessKey: IDL set to 1.5 should not throw 
PASS ruby.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS ruby.accessKey: IDL set to 1.5 followed by IDL get 
PASS ruby.accessKey: IDL set to true should not throw 
PASS ruby.accessKey: IDL set to true followed by getAttribute() 
PASS ruby.accessKey: IDL set to true followed by IDL get 
PASS ruby.accessKey: IDL set to false should not throw 
PASS ruby.accessKey: IDL set to false followed by getAttribute() 
PASS ruby.accessKey: IDL set to false followed by IDL get 
PASS ruby.accessKey: IDL set to object "[object Object]" should not throw 
PASS ruby.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS ruby.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS ruby.accessKey: IDL set to NaN should not throw 
PASS ruby.accessKey: IDL set to NaN followed by getAttribute() 
PASS ruby.accessKey: IDL set to NaN followed by IDL get 
PASS ruby.accessKey: IDL set to Infinity should not throw 
PASS ruby.accessKey: IDL set to Infinity followed by getAttribute() 
PASS ruby.accessKey: IDL set to Infinity followed by IDL get 
PASS ruby.accessKey: IDL set to -Infinity should not throw 
PASS ruby.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS ruby.accessKey: IDL set to -Infinity followed by IDL get 
PASS ruby.accessKey: IDL set to "\0" should not throw 
PASS ruby.accessKey: IDL set to "\0" followed by getAttribute() 
PASS ruby.accessKey: IDL set to "\0" followed by IDL get 
PASS ruby.accessKey: IDL set to null should not throw 
PASS ruby.accessKey: IDL set to null followed by getAttribute() 
PASS ruby.accessKey: IDL set to null followed by IDL get 
PASS ruby.accessKey: IDL set to object "test-toString" should not throw 
PASS ruby.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS ruby.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS ruby.accessKey: IDL set to object "test-valueOf" should not throw 
PASS ruby.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ruby.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS ruby.tabIndex: typeof IDL attribute 
PASS ruby.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to -36 followed by IDL get 
PASS ruby.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to -1 followed by IDL get 
PASS ruby.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to 0 followed by IDL get 
PASS ruby.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to 1 followed by IDL get 
PASS ruby.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL ruby.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS ruby.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL ruby.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS ruby.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS ruby.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS ruby.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to "0" followed by IDL get 
PASS ruby.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to "1" followed by IDL get 
PASS ruby.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS ruby.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS ruby.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS ruby.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS ruby.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS ruby.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS ruby.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS ruby.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS ruby.tabIndex: IDL set to -36 should not throw 
PASS ruby.tabIndex: IDL set to -36 followed by getAttribute() 
PASS ruby.tabIndex: IDL set to -36 followed by IDL get 
PASS ruby.tabIndex: IDL set to -1 should not throw 
PASS ruby.tabIndex: IDL set to -1 followed by getAttribute() 
PASS ruby.tabIndex: IDL set to -1 followed by IDL get 
PASS ruby.tabIndex: IDL set to 0 should not throw 
PASS ruby.tabIndex: IDL set to 0 followed by getAttribute() 
PASS ruby.tabIndex: IDL set to 0 followed by IDL get 
PASS ruby.tabIndex: IDL set to 1 should not throw 
PASS ruby.tabIndex: IDL set to 1 followed by getAttribute() 
PASS ruby.tabIndex: IDL set to 1 followed by IDL get 
PASS ruby.tabIndex: IDL set to 2147483647 should not throw 
PASS ruby.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL ruby.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS ruby.tabIndex: IDL set to -2147483648 should not throw 
PASS ruby.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL ruby.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL ruby.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL ruby.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to null followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to true followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to false followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL ruby.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ruby.itemScope: IDL set to "" should not throw 
FAIL ruby.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL ruby.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS ruby.itemScope: IDL set to " foo " should not throw 
PASS ruby.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL ruby.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS ruby.itemScope: IDL set to undefined should not throw 
FAIL ruby.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL ruby.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS ruby.itemScope: IDL set to null should not throw 
FAIL ruby.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL ruby.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS ruby.itemScope: IDL set to 7 should not throw 
PASS ruby.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL ruby.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS ruby.itemScope: IDL set to 1.5 should not throw 
PASS ruby.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL ruby.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS ruby.itemScope: IDL set to true should not throw 
PASS ruby.itemScope: IDL set to true followed by hasAttribute() 
PASS ruby.itemScope: IDL set to true followed by IDL get 
PASS ruby.itemScope: IDL set to false should not throw 
FAIL ruby.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS ruby.itemScope: IDL set to false followed by IDL get 
PASS ruby.itemScope: IDL set to object "[object Object]" should not throw 
PASS ruby.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL ruby.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS ruby.itemScope: IDL set to NaN should not throw 
FAIL ruby.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL ruby.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS ruby.itemScope: IDL set to Infinity should not throw 
PASS ruby.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL ruby.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS ruby.itemScope: IDL set to -Infinity should not throw 
PASS ruby.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL ruby.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS ruby.itemScope: IDL set to "\0" should not throw 
PASS ruby.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL ruby.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS ruby.itemScope: IDL set to object "test-toString" should not throw 
PASS ruby.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL ruby.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS ruby.itemScope: IDL set to object "test-valueOf" should not throw 
PASS ruby.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL ruby.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL ruby.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL ruby.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to "" followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to true followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to false followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to null followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS ruby.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL ruby.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS ruby.itemId: IDL set to "" should not throw 
FAIL ruby.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL ruby.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS ruby.itemId: IDL set to " foo " should not throw 
FAIL ruby.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL ruby.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS ruby.itemId: IDL set to "http://site.example/" should not throw 
FAIL ruby.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS ruby.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS ruby.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL ruby.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL ruby.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS ruby.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL ruby.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL ruby.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS ruby.itemId: IDL set to undefined should not throw 
FAIL ruby.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL ruby.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS ruby.itemId: IDL set to 7 should not throw 
FAIL ruby.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL ruby.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS ruby.itemId: IDL set to 1.5 should not throw 
FAIL ruby.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL ruby.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS ruby.itemId: IDL set to true should not throw 
FAIL ruby.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL ruby.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS ruby.itemId: IDL set to false should not throw 
FAIL ruby.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL ruby.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS ruby.itemId: IDL set to object "[object Object]" should not throw 
FAIL ruby.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL ruby.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS ruby.itemId: IDL set to NaN should not throw 
FAIL ruby.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL ruby.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS ruby.itemId: IDL set to Infinity should not throw 
FAIL ruby.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL ruby.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS ruby.itemId: IDL set to -Infinity should not throw 
FAIL ruby.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL ruby.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS ruby.itemId: IDL set to "\0" should not throw 
FAIL ruby.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL ruby.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS ruby.itemId: IDL set to null should not throw 
FAIL ruby.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL ruby.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS ruby.itemId: IDL set to object "test-toString" should not throw 
FAIL ruby.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL ruby.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS ruby.itemId: IDL set to object "test-valueOf" should not throw 
PASS ruby.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL ruby.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS rt.title: typeof IDL attribute 
PASS rt.title: IDL get with DOM attribute unset 
PASS rt.title: setAttribute() to "" followed by getAttribute() 
PASS rt.title: setAttribute() to "" followed by IDL get 
PASS rt.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rt.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rt.title: setAttribute() to undefined followed by getAttribute() 
PASS rt.title: setAttribute() to undefined followed by IDL get 
PASS rt.title: setAttribute() to 7 followed by getAttribute() 
PASS rt.title: setAttribute() to 7 followed by IDL get 
PASS rt.title: setAttribute() to 1.5 followed by getAttribute() 
PASS rt.title: setAttribute() to 1.5 followed by IDL get 
PASS rt.title: setAttribute() to true followed by getAttribute() 
PASS rt.title: setAttribute() to true followed by IDL get 
PASS rt.title: setAttribute() to false followed by getAttribute() 
PASS rt.title: setAttribute() to false followed by IDL get 
PASS rt.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS rt.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS rt.title: setAttribute() to NaN followed by getAttribute() 
PASS rt.title: setAttribute() to NaN followed by IDL get 
PASS rt.title: setAttribute() to Infinity followed by getAttribute() 
PASS rt.title: setAttribute() to Infinity followed by IDL get 
PASS rt.title: setAttribute() to -Infinity followed by getAttribute() 
PASS rt.title: setAttribute() to -Infinity followed by IDL get 
PASS rt.title: setAttribute() to "\0" followed by getAttribute() 
PASS rt.title: setAttribute() to "\0" followed by IDL get 
PASS rt.title: setAttribute() to null followed by getAttribute() 
PASS rt.title: setAttribute() to null followed by IDL get 
PASS rt.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS rt.title: setAttribute() to object "test-toString" followed by IDL get 
PASS rt.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS rt.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS rt.title: IDL set to "" should not throw 
PASS rt.title: IDL set to "" followed by getAttribute() 
PASS rt.title: IDL set to "" followed by IDL get 
PASS rt.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS rt.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rt.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rt.title: IDL set to undefined should not throw 
PASS rt.title: IDL set to undefined followed by getAttribute() 
PASS rt.title: IDL set to undefined followed by IDL get 
PASS rt.title: IDL set to 7 should not throw 
PASS rt.title: IDL set to 7 followed by getAttribute() 
PASS rt.title: IDL set to 7 followed by IDL get 
PASS rt.title: IDL set to 1.5 should not throw 
PASS rt.title: IDL set to 1.5 followed by getAttribute() 
PASS rt.title: IDL set to 1.5 followed by IDL get 
PASS rt.title: IDL set to true should not throw 
PASS rt.title: IDL set to true followed by getAttribute() 
PASS rt.title: IDL set to true followed by IDL get 
PASS rt.title: IDL set to false should not throw 
PASS rt.title: IDL set to false followed by getAttribute() 
PASS rt.title: IDL set to false followed by IDL get 
PASS rt.title: IDL set to object "[object Object]" should not throw 
PASS rt.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS rt.title: IDL set to object "[object Object]" followed by IDL get 
PASS rt.title: IDL set to NaN should not throw 
PASS rt.title: IDL set to NaN followed by getAttribute() 
PASS rt.title: IDL set to NaN followed by IDL get 
PASS rt.title: IDL set to Infinity should not throw 
PASS rt.title: IDL set to Infinity followed by getAttribute() 
PASS rt.title: IDL set to Infinity followed by IDL get 
PASS rt.title: IDL set to -Infinity should not throw 
PASS rt.title: IDL set to -Infinity followed by getAttribute() 
PASS rt.title: IDL set to -Infinity followed by IDL get 
PASS rt.title: IDL set to "\0" should not throw 
PASS rt.title: IDL set to "\0" followed by getAttribute() 
PASS rt.title: IDL set to "\0" followed by IDL get 
PASS rt.title: IDL set to null should not throw 
PASS rt.title: IDL set to null followed by getAttribute() 
PASS rt.title: IDL set to null followed by IDL get 
PASS rt.title: IDL set to object "test-toString" should not throw 
PASS rt.title: IDL set to object "test-toString" followed by getAttribute() 
PASS rt.title: IDL set to object "test-toString" followed by IDL get 
PASS rt.title: IDL set to object "test-valueOf" should not throw 
PASS rt.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS rt.title: IDL set to object "test-valueOf" followed by IDL get 
PASS rt.lang: typeof IDL attribute 
PASS rt.lang: IDL get with DOM attribute unset 
PASS rt.lang: setAttribute() to "" followed by getAttribute() 
PASS rt.lang: setAttribute() to "" followed by IDL get 
PASS rt.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rt.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rt.lang: setAttribute() to undefined followed by getAttribute() 
PASS rt.lang: setAttribute() to undefined followed by IDL get 
PASS rt.lang: setAttribute() to 7 followed by getAttribute() 
PASS rt.lang: setAttribute() to 7 followed by IDL get 
PASS rt.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS rt.lang: setAttribute() to 1.5 followed by IDL get 
PASS rt.lang: setAttribute() to true followed by getAttribute() 
PASS rt.lang: setAttribute() to true followed by IDL get 
PASS rt.lang: setAttribute() to false followed by getAttribute() 
PASS rt.lang: setAttribute() to false followed by IDL get 
PASS rt.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS rt.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS rt.lang: setAttribute() to NaN followed by getAttribute() 
PASS rt.lang: setAttribute() to NaN followed by IDL get 
PASS rt.lang: setAttribute() to Infinity followed by getAttribute() 
PASS rt.lang: setAttribute() to Infinity followed by IDL get 
PASS rt.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS rt.lang: setAttribute() to -Infinity followed by IDL get 
PASS rt.lang: setAttribute() to "\0" followed by getAttribute() 
PASS rt.lang: setAttribute() to "\0" followed by IDL get 
PASS rt.lang: setAttribute() to null followed by getAttribute() 
PASS rt.lang: setAttribute() to null followed by IDL get 
PASS rt.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS rt.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS rt.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS rt.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS rt.lang: IDL set to "" should not throw 
PASS rt.lang: IDL set to "" followed by getAttribute() 
PASS rt.lang: IDL set to "" followed by IDL get 
PASS rt.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS rt.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rt.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rt.lang: IDL set to undefined should not throw 
PASS rt.lang: IDL set to undefined followed by getAttribute() 
PASS rt.lang: IDL set to undefined followed by IDL get 
PASS rt.lang: IDL set to 7 should not throw 
PASS rt.lang: IDL set to 7 followed by getAttribute() 
PASS rt.lang: IDL set to 7 followed by IDL get 
PASS rt.lang: IDL set to 1.5 should not throw 
PASS rt.lang: IDL set to 1.5 followed by getAttribute() 
PASS rt.lang: IDL set to 1.5 followed by IDL get 
PASS rt.lang: IDL set to true should not throw 
PASS rt.lang: IDL set to true followed by getAttribute() 
PASS rt.lang: IDL set to true followed by IDL get 
PASS rt.lang: IDL set to false should not throw 
PASS rt.lang: IDL set to false followed by getAttribute() 
PASS rt.lang: IDL set to false followed by IDL get 
PASS rt.lang: IDL set to object "[object Object]" should not throw 
PASS rt.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS rt.lang: IDL set to object "[object Object]" followed by IDL get 
PASS rt.lang: IDL set to NaN should not throw 
PASS rt.lang: IDL set to NaN followed by getAttribute() 
PASS rt.lang: IDL set to NaN followed by IDL get 
PASS rt.lang: IDL set to Infinity should not throw 
PASS rt.lang: IDL set to Infinity followed by getAttribute() 
PASS rt.lang: IDL set to Infinity followed by IDL get 
PASS rt.lang: IDL set to -Infinity should not throw 
PASS rt.lang: IDL set to -Infinity followed by getAttribute() 
PASS rt.lang: IDL set to -Infinity followed by IDL get 
PASS rt.lang: IDL set to "\0" should not throw 
PASS rt.lang: IDL set to "\0" followed by getAttribute() 
PASS rt.lang: IDL set to "\0" followed by IDL get 
PASS rt.lang: IDL set to null should not throw 
PASS rt.lang: IDL set to null followed by getAttribute() 
PASS rt.lang: IDL set to null followed by IDL get 
PASS rt.lang: IDL set to object "test-toString" should not throw 
PASS rt.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS rt.lang: IDL set to object "test-toString" followed by IDL get 
PASS rt.lang: IDL set to object "test-valueOf" should not throw 
PASS rt.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS rt.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS rt.dir: typeof IDL attribute 
PASS rt.dir: IDL get with DOM attribute unset 
PASS rt.dir: setAttribute() to "" followed by getAttribute() 
PASS rt.dir: setAttribute() to "" followed by IDL get 
PASS rt.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rt.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rt.dir: setAttribute() to undefined followed by getAttribute() 
PASS rt.dir: setAttribute() to undefined followed by IDL get 
PASS rt.dir: setAttribute() to 7 followed by getAttribute() 
PASS rt.dir: setAttribute() to 7 followed by IDL get 
PASS rt.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS rt.dir: setAttribute() to 1.5 followed by IDL get 
PASS rt.dir: setAttribute() to true followed by getAttribute() 
PASS rt.dir: setAttribute() to true followed by IDL get 
PASS rt.dir: setAttribute() to false followed by getAttribute() 
PASS rt.dir: setAttribute() to false followed by IDL get 
PASS rt.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS rt.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS rt.dir: setAttribute() to NaN followed by getAttribute() 
PASS rt.dir: setAttribute() to NaN followed by IDL get 
PASS rt.dir: setAttribute() to Infinity followed by getAttribute() 
PASS rt.dir: setAttribute() to Infinity followed by IDL get 
PASS rt.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS rt.dir: setAttribute() to -Infinity followed by IDL get 
PASS rt.dir: setAttribute() to "\0" followed by getAttribute() 
PASS rt.dir: setAttribute() to "\0" followed by IDL get 
PASS rt.dir: setAttribute() to null followed by getAttribute() 
PASS rt.dir: setAttribute() to null followed by IDL get 
PASS rt.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS rt.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS rt.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS rt.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS rt.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS rt.dir: setAttribute() to "ltr" followed by IDL get 
PASS rt.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS rt.dir: setAttribute() to "xltr" followed by IDL get 
PASS rt.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS rt.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS rt.dir: setAttribute() to "tr" followed by getAttribute() 
PASS rt.dir: setAttribute() to "tr" followed by IDL get 
PASS rt.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS rt.dir: setAttribute() to "LTR" followed by IDL get 
PASS rt.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS rt.dir: setAttribute() to "rtl" followed by IDL get 
PASS rt.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS rt.dir: setAttribute() to "xrtl" followed by IDL get 
PASS rt.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS rt.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS rt.dir: setAttribute() to "tl" followed by getAttribute() 
PASS rt.dir: setAttribute() to "tl" followed by IDL get 
PASS rt.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS rt.dir: setAttribute() to "RTL" followed by IDL get 
PASS rt.dir: setAttribute() to "auto" followed by getAttribute() 
PASS rt.dir: setAttribute() to "auto" followed by IDL get 
PASS rt.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS rt.dir: setAttribute() to "xauto" followed by IDL get 
PASS rt.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS rt.dir: setAttribute() to "auto\0" followed by IDL get 
PASS rt.dir: setAttribute() to "uto" followed by getAttribute() 
PASS rt.dir: setAttribute() to "uto" followed by IDL get 
PASS rt.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS rt.dir: setAttribute() to "AUTO" followed by IDL get 
PASS rt.dir: IDL set to "" should not throw 
PASS rt.dir: IDL set to "" followed by getAttribute() 
PASS rt.dir: IDL set to "" followed by IDL get 
PASS rt.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS rt.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rt.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rt.dir: IDL set to undefined should not throw 
PASS rt.dir: IDL set to undefined followed by getAttribute() 
PASS rt.dir: IDL set to undefined followed by IDL get 
PASS rt.dir: IDL set to 7 should not throw 
PASS rt.dir: IDL set to 7 followed by getAttribute() 
PASS rt.dir: IDL set to 7 followed by IDL get 
PASS rt.dir: IDL set to 1.5 should not throw 
PASS rt.dir: IDL set to 1.5 followed by getAttribute() 
PASS rt.dir: IDL set to 1.5 followed by IDL get 
PASS rt.dir: IDL set to true should not throw 
PASS rt.dir: IDL set to true followed by getAttribute() 
PASS rt.dir: IDL set to true followed by IDL get 
PASS rt.dir: IDL set to false should not throw 
PASS rt.dir: IDL set to false followed by getAttribute() 
PASS rt.dir: IDL set to false followed by IDL get 
PASS rt.dir: IDL set to object "[object Object]" should not throw 
PASS rt.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS rt.dir: IDL set to object "[object Object]" followed by IDL get 
PASS rt.dir: IDL set to NaN should not throw 
PASS rt.dir: IDL set to NaN followed by getAttribute() 
PASS rt.dir: IDL set to NaN followed by IDL get 
PASS rt.dir: IDL set to Infinity should not throw 
PASS rt.dir: IDL set to Infinity followed by getAttribute() 
PASS rt.dir: IDL set to Infinity followed by IDL get 
PASS rt.dir: IDL set to -Infinity should not throw 
PASS rt.dir: IDL set to -Infinity followed by getAttribute() 
PASS rt.dir: IDL set to -Infinity followed by IDL get 
PASS rt.dir: IDL set to "\0" should not throw 
PASS rt.dir: IDL set to "\0" followed by getAttribute() 
PASS rt.dir: IDL set to "\0" followed by IDL get 
PASS rt.dir: IDL set to null should not throw 
PASS rt.dir: IDL set to null followed by IDL get 
PASS rt.dir: IDL set to object "test-toString" should not throw 
PASS rt.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS rt.dir: IDL set to object "test-toString" followed by IDL get 
PASS rt.dir: IDL set to object "test-valueOf" should not throw 
PASS rt.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS rt.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS rt.dir: IDL set to "ltr" should not throw 
PASS rt.dir: IDL set to "ltr" followed by getAttribute() 
PASS rt.dir: IDL set to "ltr" followed by IDL get 
PASS rt.dir: IDL set to "xltr" should not throw 
PASS rt.dir: IDL set to "xltr" followed by getAttribute() 
PASS rt.dir: IDL set to "xltr" followed by IDL get 
PASS rt.dir: IDL set to "ltr\0" should not throw 
PASS rt.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS rt.dir: IDL set to "ltr\0" followed by IDL get 
PASS rt.dir: IDL set to "tr" should not throw 
PASS rt.dir: IDL set to "tr" followed by getAttribute() 
PASS rt.dir: IDL set to "tr" followed by IDL get 
PASS rt.dir: IDL set to "LTR" should not throw 
PASS rt.dir: IDL set to "LTR" followed by getAttribute() 
PASS rt.dir: IDL set to "LTR" followed by IDL get 
PASS rt.dir: IDL set to "rtl" should not throw 
PASS rt.dir: IDL set to "rtl" followed by getAttribute() 
PASS rt.dir: IDL set to "rtl" followed by IDL get 
PASS rt.dir: IDL set to "xrtl" should not throw 
PASS rt.dir: IDL set to "xrtl" followed by getAttribute() 
PASS rt.dir: IDL set to "xrtl" followed by IDL get 
PASS rt.dir: IDL set to "rtl\0" should not throw 
PASS rt.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS rt.dir: IDL set to "rtl\0" followed by IDL get 
PASS rt.dir: IDL set to "tl" should not throw 
PASS rt.dir: IDL set to "tl" followed by getAttribute() 
PASS rt.dir: IDL set to "tl" followed by IDL get 
PASS rt.dir: IDL set to "RTL" should not throw 
PASS rt.dir: IDL set to "RTL" followed by getAttribute() 
PASS rt.dir: IDL set to "RTL" followed by IDL get 
PASS rt.dir: IDL set to "auto" should not throw 
PASS rt.dir: IDL set to "auto" followed by getAttribute() 
PASS rt.dir: IDL set to "auto" followed by IDL get 
PASS rt.dir: IDL set to "xauto" should not throw 
PASS rt.dir: IDL set to "xauto" followed by getAttribute() 
PASS rt.dir: IDL set to "xauto" followed by IDL get 
PASS rt.dir: IDL set to "auto\0" should not throw 
PASS rt.dir: IDL set to "auto\0" followed by getAttribute() 
PASS rt.dir: IDL set to "auto\0" followed by IDL get 
PASS rt.dir: IDL set to "uto" should not throw 
PASS rt.dir: IDL set to "uto" followed by getAttribute() 
PASS rt.dir: IDL set to "uto" followed by IDL get 
PASS rt.dir: IDL set to "AUTO" should not throw 
PASS rt.dir: IDL set to "AUTO" followed by getAttribute() 
PASS rt.dir: IDL set to "AUTO" followed by IDL get 
PASS rt.className (<rt class>): typeof IDL attribute 
PASS rt.className (<rt class>): IDL get with DOM attribute unset 
PASS rt.className (<rt class>): setAttribute() to "" followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to "" followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to undefined followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to undefined followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to 7 followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to 7 followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to 1.5 followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to 1.5 followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to true followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to true followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to false followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to false followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to NaN followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to NaN followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to Infinity followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to Infinity followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to -Infinity followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to -Infinity followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to "\0" followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to "\0" followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to null followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to null followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to object "test-toString" followed by IDL get 
PASS rt.className (<rt class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS rt.className (<rt class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS rt.className (<rt class>): IDL set to "" should not throw 
PASS rt.className (<rt class>): IDL set to "" followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to "" followed by IDL get 
PASS rt.className (<rt class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS rt.className (<rt class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rt.className (<rt class>): IDL set to undefined should not throw 
PASS rt.className (<rt class>): IDL set to undefined followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to undefined followed by IDL get 
PASS rt.className (<rt class>): IDL set to 7 should not throw 
PASS rt.className (<rt class>): IDL set to 7 followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to 7 followed by IDL get 
PASS rt.className (<rt class>): IDL set to 1.5 should not throw 
PASS rt.className (<rt class>): IDL set to 1.5 followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to 1.5 followed by IDL get 
PASS rt.className (<rt class>): IDL set to true should not throw 
PASS rt.className (<rt class>): IDL set to true followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to true followed by IDL get 
PASS rt.className (<rt class>): IDL set to false should not throw 
PASS rt.className (<rt class>): IDL set to false followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to false followed by IDL get 
PASS rt.className (<rt class>): IDL set to object "[object Object]" should not throw 
PASS rt.className (<rt class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to object "[object Object]" followed by IDL get 
PASS rt.className (<rt class>): IDL set to NaN should not throw 
PASS rt.className (<rt class>): IDL set to NaN followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to NaN followed by IDL get 
PASS rt.className (<rt class>): IDL set to Infinity should not throw 
PASS rt.className (<rt class>): IDL set to Infinity followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to Infinity followed by IDL get 
PASS rt.className (<rt class>): IDL set to -Infinity should not throw 
PASS rt.className (<rt class>): IDL set to -Infinity followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to -Infinity followed by IDL get 
PASS rt.className (<rt class>): IDL set to "\0" should not throw 
PASS rt.className (<rt class>): IDL set to "\0" followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to "\0" followed by IDL get 
PASS rt.className (<rt class>): IDL set to null should not throw 
PASS rt.className (<rt class>): IDL set to null followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to null followed by IDL get 
PASS rt.className (<rt class>): IDL set to object "test-toString" should not throw 
PASS rt.className (<rt class>): IDL set to object "test-toString" followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to object "test-toString" followed by IDL get 
PASS rt.className (<rt class>): IDL set to object "test-valueOf" should not throw 
PASS rt.className (<rt class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS rt.className (<rt class>): IDL set to object "test-valueOf" followed by IDL get 
PASS rt.hidden: typeof IDL attribute 
PASS rt.hidden: IDL get with DOM attribute unset 
PASS rt.hidden: setAttribute() to "" followed by getAttribute() 
PASS rt.hidden: setAttribute() to "" followed by IDL get 
PASS rt.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS rt.hidden: setAttribute() to " foo " followed by IDL get 
PASS rt.hidden: setAttribute() to undefined followed by getAttribute() 
PASS rt.hidden: setAttribute() to undefined followed by IDL get 
PASS rt.hidden: setAttribute() to null followed by getAttribute() 
PASS rt.hidden: setAttribute() to null followed by IDL get 
PASS rt.hidden: setAttribute() to 7 followed by getAttribute() 
PASS rt.hidden: setAttribute() to 7 followed by IDL get 
PASS rt.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS rt.hidden: setAttribute() to 1.5 followed by IDL get 
PASS rt.hidden: setAttribute() to true followed by getAttribute() 
PASS rt.hidden: setAttribute() to true followed by IDL get 
PASS rt.hidden: setAttribute() to false followed by getAttribute() 
PASS rt.hidden: setAttribute() to false followed by IDL get 
PASS rt.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS rt.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS rt.hidden: setAttribute() to NaN followed by getAttribute() 
PASS rt.hidden: setAttribute() to NaN followed by IDL get 
PASS rt.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS rt.hidden: setAttribute() to Infinity followed by IDL get 
PASS rt.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS rt.hidden: setAttribute() to -Infinity followed by IDL get 
PASS rt.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS rt.hidden: setAttribute() to "\0" followed by IDL get 
PASS rt.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS rt.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS rt.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS rt.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS rt.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS rt.hidden: setAttribute() to "hidden" followed by IDL get 
PASS rt.hidden: IDL set to "" should not throw 
PASS rt.hidden: IDL set to "" followed by hasAttribute() 
PASS rt.hidden: IDL set to "" followed by IDL get 
PASS rt.hidden: IDL set to " foo " should not throw 
PASS rt.hidden: IDL set to " foo " followed by hasAttribute() 
PASS rt.hidden: IDL set to " foo " followed by IDL get 
PASS rt.hidden: IDL set to undefined should not throw 
PASS rt.hidden: IDL set to undefined followed by hasAttribute() 
PASS rt.hidden: IDL set to undefined followed by IDL get 
PASS rt.hidden: IDL set to null should not throw 
PASS rt.hidden: IDL set to null followed by hasAttribute() 
PASS rt.hidden: IDL set to null followed by IDL get 
PASS rt.hidden: IDL set to 7 should not throw 
PASS rt.hidden: IDL set to 7 followed by hasAttribute() 
PASS rt.hidden: IDL set to 7 followed by IDL get 
PASS rt.hidden: IDL set to 1.5 should not throw 
PASS rt.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS rt.hidden: IDL set to 1.5 followed by IDL get 
PASS rt.hidden: IDL set to true should not throw 
PASS rt.hidden: IDL set to true followed by hasAttribute() 
PASS rt.hidden: IDL set to true followed by IDL get 
PASS rt.hidden: IDL set to false should not throw 
PASS rt.hidden: IDL set to false followed by hasAttribute() 
PASS rt.hidden: IDL set to false followed by IDL get 
PASS rt.hidden: IDL set to object "[object Object]" should not throw 
PASS rt.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS rt.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS rt.hidden: IDL set to NaN should not throw 
PASS rt.hidden: IDL set to NaN followed by hasAttribute() 
PASS rt.hidden: IDL set to NaN followed by IDL get 
PASS rt.hidden: IDL set to Infinity should not throw 
PASS rt.hidden: IDL set to Infinity followed by hasAttribute() 
PASS rt.hidden: IDL set to Infinity followed by IDL get 
PASS rt.hidden: IDL set to -Infinity should not throw 
PASS rt.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS rt.hidden: IDL set to -Infinity followed by IDL get 
PASS rt.hidden: IDL set to "\0" should not throw 
PASS rt.hidden: IDL set to "\0" followed by hasAttribute() 
PASS rt.hidden: IDL set to "\0" followed by IDL get 
PASS rt.hidden: IDL set to object "test-toString" should not throw 
PASS rt.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS rt.hidden: IDL set to object "test-toString" followed by IDL get 
PASS rt.hidden: IDL set to object "test-valueOf" should not throw 
PASS rt.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS rt.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS rt.accessKey: typeof IDL attribute 
PASS rt.accessKey: IDL get with DOM attribute unset 
PASS rt.accessKey: setAttribute() to "" followed by getAttribute() 
PASS rt.accessKey: setAttribute() to "" followed by IDL get 
PASS rt.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rt.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rt.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS rt.accessKey: setAttribute() to undefined followed by IDL get 
PASS rt.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS rt.accessKey: setAttribute() to 7 followed by IDL get 
PASS rt.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS rt.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS rt.accessKey: setAttribute() to true followed by getAttribute() 
PASS rt.accessKey: setAttribute() to true followed by IDL get 
PASS rt.accessKey: setAttribute() to false followed by getAttribute() 
PASS rt.accessKey: setAttribute() to false followed by IDL get 
PASS rt.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS rt.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS rt.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS rt.accessKey: setAttribute() to NaN followed by IDL get 
PASS rt.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS rt.accessKey: setAttribute() to Infinity followed by IDL get 
PASS rt.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS rt.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS rt.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS rt.accessKey: setAttribute() to "\0" followed by IDL get 
PASS rt.accessKey: setAttribute() to null followed by getAttribute() 
PASS rt.accessKey: setAttribute() to null followed by IDL get 
PASS rt.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS rt.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS rt.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS rt.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS rt.accessKey: IDL set to "" should not throw 
PASS rt.accessKey: IDL set to "" followed by getAttribute() 
PASS rt.accessKey: IDL set to "" followed by IDL get 
PASS rt.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS rt.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rt.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rt.accessKey: IDL set to undefined should not throw 
PASS rt.accessKey: IDL set to undefined followed by getAttribute() 
PASS rt.accessKey: IDL set to undefined followed by IDL get 
PASS rt.accessKey: IDL set to 7 should not throw 
PASS rt.accessKey: IDL set to 7 followed by getAttribute() 
PASS rt.accessKey: IDL set to 7 followed by IDL get 
PASS rt.accessKey: IDL set to 1.5 should not throw 
PASS rt.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS rt.accessKey: IDL set to 1.5 followed by IDL get 
PASS rt.accessKey: IDL set to true should not throw 
PASS rt.accessKey: IDL set to true followed by getAttribute() 
PASS rt.accessKey: IDL set to true followed by IDL get 
PASS rt.accessKey: IDL set to false should not throw 
PASS rt.accessKey: IDL set to false followed by getAttribute() 
PASS rt.accessKey: IDL set to false followed by IDL get 
PASS rt.accessKey: IDL set to object "[object Object]" should not throw 
PASS rt.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS rt.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS rt.accessKey: IDL set to NaN should not throw 
PASS rt.accessKey: IDL set to NaN followed by getAttribute() 
PASS rt.accessKey: IDL set to NaN followed by IDL get 
PASS rt.accessKey: IDL set to Infinity should not throw 
PASS rt.accessKey: IDL set to Infinity followed by getAttribute() 
PASS rt.accessKey: IDL set to Infinity followed by IDL get 
PASS rt.accessKey: IDL set to -Infinity should not throw 
PASS rt.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS rt.accessKey: IDL set to -Infinity followed by IDL get 
PASS rt.accessKey: IDL set to "\0" should not throw 
PASS rt.accessKey: IDL set to "\0" followed by getAttribute() 
PASS rt.accessKey: IDL set to "\0" followed by IDL get 
PASS rt.accessKey: IDL set to null should not throw 
PASS rt.accessKey: IDL set to null followed by getAttribute() 
PASS rt.accessKey: IDL set to null followed by IDL get 
PASS rt.accessKey: IDL set to object "test-toString" should not throw 
PASS rt.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS rt.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS rt.accessKey: IDL set to object "test-valueOf" should not throw 
PASS rt.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS rt.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS rt.tabIndex: typeof IDL attribute 
PASS rt.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to -36 followed by IDL get 
PASS rt.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to -1 followed by IDL get 
PASS rt.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to 0 followed by IDL get 
PASS rt.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to 1 followed by IDL get 
PASS rt.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL rt.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS rt.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL rt.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS rt.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS rt.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS rt.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to "0" followed by IDL get 
PASS rt.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to "1" followed by IDL get 
PASS rt.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS rt.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS rt.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS rt.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS rt.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS rt.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS rt.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS rt.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS rt.tabIndex: IDL set to -36 should not throw 
PASS rt.tabIndex: IDL set to -36 followed by getAttribute() 
PASS rt.tabIndex: IDL set to -36 followed by IDL get 
PASS rt.tabIndex: IDL set to -1 should not throw 
PASS rt.tabIndex: IDL set to -1 followed by getAttribute() 
PASS rt.tabIndex: IDL set to -1 followed by IDL get 
PASS rt.tabIndex: IDL set to 0 should not throw 
PASS rt.tabIndex: IDL set to 0 followed by getAttribute() 
PASS rt.tabIndex: IDL set to 0 followed by IDL get 
PASS rt.tabIndex: IDL set to 1 should not throw 
PASS rt.tabIndex: IDL set to 1 followed by getAttribute() 
PASS rt.tabIndex: IDL set to 1 followed by IDL get 
PASS rt.tabIndex: IDL set to 2147483647 should not throw 
PASS rt.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL rt.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS rt.tabIndex: IDL set to -2147483648 should not throw 
PASS rt.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL rt.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL rt.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL rt.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS rt.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to null followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to true followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to false followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL rt.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rt.itemScope: IDL set to "" should not throw 
FAIL rt.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL rt.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS rt.itemScope: IDL set to " foo " should not throw 
PASS rt.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL rt.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS rt.itemScope: IDL set to undefined should not throw 
FAIL rt.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL rt.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS rt.itemScope: IDL set to null should not throw 
FAIL rt.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL rt.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS rt.itemScope: IDL set to 7 should not throw 
PASS rt.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL rt.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS rt.itemScope: IDL set to 1.5 should not throw 
PASS rt.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL rt.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS rt.itemScope: IDL set to true should not throw 
PASS rt.itemScope: IDL set to true followed by hasAttribute() 
PASS rt.itemScope: IDL set to true followed by IDL get 
PASS rt.itemScope: IDL set to false should not throw 
FAIL rt.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS rt.itemScope: IDL set to false followed by IDL get 
PASS rt.itemScope: IDL set to object "[object Object]" should not throw 
PASS rt.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL rt.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS rt.itemScope: IDL set to NaN should not throw 
FAIL rt.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL rt.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS rt.itemScope: IDL set to Infinity should not throw 
PASS rt.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL rt.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS rt.itemScope: IDL set to -Infinity should not throw 
PASS rt.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL rt.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS rt.itemScope: IDL set to "\0" should not throw 
PASS rt.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL rt.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS rt.itemScope: IDL set to object "test-toString" should not throw 
PASS rt.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL rt.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS rt.itemScope: IDL set to object "test-valueOf" should not throw 
PASS rt.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL rt.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL rt.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL rt.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS rt.itemId: setAttribute() to "" followed by getAttribute() 
FAIL rt.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS rt.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL rt.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS rt.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL rt.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS rt.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL rt.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS rt.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL rt.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS rt.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL rt.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS rt.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL rt.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS rt.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL rt.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS rt.itemId: setAttribute() to true followed by getAttribute() 
FAIL rt.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS rt.itemId: setAttribute() to false followed by getAttribute() 
FAIL rt.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS rt.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL rt.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS rt.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL rt.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS rt.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL rt.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS rt.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL rt.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS rt.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL rt.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS rt.itemId: setAttribute() to null followed by getAttribute() 
FAIL rt.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS rt.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL rt.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS rt.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL rt.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS rt.itemId: IDL set to "" should not throw 
FAIL rt.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL rt.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS rt.itemId: IDL set to " foo " should not throw 
FAIL rt.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL rt.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS rt.itemId: IDL set to "http://site.example/" should not throw 
FAIL rt.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS rt.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS rt.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL rt.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL rt.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS rt.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL rt.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL rt.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS rt.itemId: IDL set to undefined should not throw 
FAIL rt.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL rt.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS rt.itemId: IDL set to 7 should not throw 
FAIL rt.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL rt.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS rt.itemId: IDL set to 1.5 should not throw 
FAIL rt.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL rt.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS rt.itemId: IDL set to true should not throw 
FAIL rt.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL rt.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS rt.itemId: IDL set to false should not throw 
FAIL rt.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL rt.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS rt.itemId: IDL set to object "[object Object]" should not throw 
FAIL rt.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL rt.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS rt.itemId: IDL set to NaN should not throw 
FAIL rt.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL rt.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS rt.itemId: IDL set to Infinity should not throw 
FAIL rt.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL rt.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS rt.itemId: IDL set to -Infinity should not throw 
FAIL rt.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL rt.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS rt.itemId: IDL set to "\0" should not throw 
FAIL rt.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL rt.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS rt.itemId: IDL set to null should not throw 
FAIL rt.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL rt.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS rt.itemId: IDL set to object "test-toString" should not throw 
FAIL rt.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL rt.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS rt.itemId: IDL set to object "test-valueOf" should not throw 
PASS rt.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL rt.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS rp.title: typeof IDL attribute 
PASS rp.title: IDL get with DOM attribute unset 
PASS rp.title: setAttribute() to "" followed by getAttribute() 
PASS rp.title: setAttribute() to "" followed by IDL get 
PASS rp.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rp.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rp.title: setAttribute() to undefined followed by getAttribute() 
PASS rp.title: setAttribute() to undefined followed by IDL get 
PASS rp.title: setAttribute() to 7 followed by getAttribute() 
PASS rp.title: setAttribute() to 7 followed by IDL get 
PASS rp.title: setAttribute() to 1.5 followed by getAttribute() 
PASS rp.title: setAttribute() to 1.5 followed by IDL get 
PASS rp.title: setAttribute() to true followed by getAttribute() 
PASS rp.title: setAttribute() to true followed by IDL get 
PASS rp.title: setAttribute() to false followed by getAttribute() 
PASS rp.title: setAttribute() to false followed by IDL get 
PASS rp.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS rp.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS rp.title: setAttribute() to NaN followed by getAttribute() 
PASS rp.title: setAttribute() to NaN followed by IDL get 
PASS rp.title: setAttribute() to Infinity followed by getAttribute() 
PASS rp.title: setAttribute() to Infinity followed by IDL get 
PASS rp.title: setAttribute() to -Infinity followed by getAttribute() 
PASS rp.title: setAttribute() to -Infinity followed by IDL get 
PASS rp.title: setAttribute() to "\0" followed by getAttribute() 
PASS rp.title: setAttribute() to "\0" followed by IDL get 
PASS rp.title: setAttribute() to null followed by getAttribute() 
PASS rp.title: setAttribute() to null followed by IDL get 
PASS rp.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS rp.title: setAttribute() to object "test-toString" followed by IDL get 
PASS rp.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS rp.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS rp.title: IDL set to "" should not throw 
PASS rp.title: IDL set to "" followed by getAttribute() 
PASS rp.title: IDL set to "" followed by IDL get 
PASS rp.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS rp.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rp.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rp.title: IDL set to undefined should not throw 
PASS rp.title: IDL set to undefined followed by getAttribute() 
PASS rp.title: IDL set to undefined followed by IDL get 
PASS rp.title: IDL set to 7 should not throw 
PASS rp.title: IDL set to 7 followed by getAttribute() 
PASS rp.title: IDL set to 7 followed by IDL get 
PASS rp.title: IDL set to 1.5 should not throw 
PASS rp.title: IDL set to 1.5 followed by getAttribute() 
PASS rp.title: IDL set to 1.5 followed by IDL get 
PASS rp.title: IDL set to true should not throw 
PASS rp.title: IDL set to true followed by getAttribute() 
PASS rp.title: IDL set to true followed by IDL get 
PASS rp.title: IDL set to false should not throw 
PASS rp.title: IDL set to false followed by getAttribute() 
PASS rp.title: IDL set to false followed by IDL get 
PASS rp.title: IDL set to object "[object Object]" should not throw 
PASS rp.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS rp.title: IDL set to object "[object Object]" followed by IDL get 
PASS rp.title: IDL set to NaN should not throw 
PASS rp.title: IDL set to NaN followed by getAttribute() 
PASS rp.title: IDL set to NaN followed by IDL get 
PASS rp.title: IDL set to Infinity should not throw 
PASS rp.title: IDL set to Infinity followed by getAttribute() 
PASS rp.title: IDL set to Infinity followed by IDL get 
PASS rp.title: IDL set to -Infinity should not throw 
PASS rp.title: IDL set to -Infinity followed by getAttribute() 
PASS rp.title: IDL set to -Infinity followed by IDL get 
PASS rp.title: IDL set to "\0" should not throw 
PASS rp.title: IDL set to "\0" followed by getAttribute() 
PASS rp.title: IDL set to "\0" followed by IDL get 
PASS rp.title: IDL set to null should not throw 
PASS rp.title: IDL set to null followed by getAttribute() 
PASS rp.title: IDL set to null followed by IDL get 
PASS rp.title: IDL set to object "test-toString" should not throw 
PASS rp.title: IDL set to object "test-toString" followed by getAttribute() 
PASS rp.title: IDL set to object "test-toString" followed by IDL get 
PASS rp.title: IDL set to object "test-valueOf" should not throw 
PASS rp.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS rp.title: IDL set to object "test-valueOf" followed by IDL get 
PASS rp.lang: typeof IDL attribute 
PASS rp.lang: IDL get with DOM attribute unset 
PASS rp.lang: setAttribute() to "" followed by getAttribute() 
PASS rp.lang: setAttribute() to "" followed by IDL get 
PASS rp.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rp.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rp.lang: setAttribute() to undefined followed by getAttribute() 
PASS rp.lang: setAttribute() to undefined followed by IDL get 
PASS rp.lang: setAttribute() to 7 followed by getAttribute() 
PASS rp.lang: setAttribute() to 7 followed by IDL get 
PASS rp.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS rp.lang: setAttribute() to 1.5 followed by IDL get 
PASS rp.lang: setAttribute() to true followed by getAttribute() 
PASS rp.lang: setAttribute() to true followed by IDL get 
PASS rp.lang: setAttribute() to false followed by getAttribute() 
PASS rp.lang: setAttribute() to false followed by IDL get 
PASS rp.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS rp.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS rp.lang: setAttribute() to NaN followed by getAttribute() 
PASS rp.lang: setAttribute() to NaN followed by IDL get 
PASS rp.lang: setAttribute() to Infinity followed by getAttribute() 
PASS rp.lang: setAttribute() to Infinity followed by IDL get 
PASS rp.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS rp.lang: setAttribute() to -Infinity followed by IDL get 
PASS rp.lang: setAttribute() to "\0" followed by getAttribute() 
PASS rp.lang: setAttribute() to "\0" followed by IDL get 
PASS rp.lang: setAttribute() to null followed by getAttribute() 
PASS rp.lang: setAttribute() to null followed by IDL get 
PASS rp.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS rp.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS rp.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS rp.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS rp.lang: IDL set to "" should not throw 
PASS rp.lang: IDL set to "" followed by getAttribute() 
PASS rp.lang: IDL set to "" followed by IDL get 
PASS rp.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS rp.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rp.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rp.lang: IDL set to undefined should not throw 
PASS rp.lang: IDL set to undefined followed by getAttribute() 
PASS rp.lang: IDL set to undefined followed by IDL get 
PASS rp.lang: IDL set to 7 should not throw 
PASS rp.lang: IDL set to 7 followed by getAttribute() 
PASS rp.lang: IDL set to 7 followed by IDL get 
PASS rp.lang: IDL set to 1.5 should not throw 
PASS rp.lang: IDL set to 1.5 followed by getAttribute() 
PASS rp.lang: IDL set to 1.5 followed by IDL get 
PASS rp.lang: IDL set to true should not throw 
PASS rp.lang: IDL set to true followed by getAttribute() 
PASS rp.lang: IDL set to true followed by IDL get 
PASS rp.lang: IDL set to false should not throw 
PASS rp.lang: IDL set to false followed by getAttribute() 
PASS rp.lang: IDL set to false followed by IDL get 
PASS rp.lang: IDL set to object "[object Object]" should not throw 
PASS rp.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS rp.lang: IDL set to object "[object Object]" followed by IDL get 
PASS rp.lang: IDL set to NaN should not throw 
PASS rp.lang: IDL set to NaN followed by getAttribute() 
PASS rp.lang: IDL set to NaN followed by IDL get 
PASS rp.lang: IDL set to Infinity should not throw 
PASS rp.lang: IDL set to Infinity followed by getAttribute() 
PASS rp.lang: IDL set to Infinity followed by IDL get 
PASS rp.lang: IDL set to -Infinity should not throw 
PASS rp.lang: IDL set to -Infinity followed by getAttribute() 
PASS rp.lang: IDL set to -Infinity followed by IDL get 
PASS rp.lang: IDL set to "\0" should not throw 
PASS rp.lang: IDL set to "\0" followed by getAttribute() 
PASS rp.lang: IDL set to "\0" followed by IDL get 
PASS rp.lang: IDL set to null should not throw 
PASS rp.lang: IDL set to null followed by getAttribute() 
PASS rp.lang: IDL set to null followed by IDL get 
PASS rp.lang: IDL set to object "test-toString" should not throw 
PASS rp.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS rp.lang: IDL set to object "test-toString" followed by IDL get 
PASS rp.lang: IDL set to object "test-valueOf" should not throw 
PASS rp.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS rp.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS rp.dir: typeof IDL attribute 
PASS rp.dir: IDL get with DOM attribute unset 
PASS rp.dir: setAttribute() to "" followed by getAttribute() 
PASS rp.dir: setAttribute() to "" followed by IDL get 
PASS rp.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rp.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rp.dir: setAttribute() to undefined followed by getAttribute() 
PASS rp.dir: setAttribute() to undefined followed by IDL get 
PASS rp.dir: setAttribute() to 7 followed by getAttribute() 
PASS rp.dir: setAttribute() to 7 followed by IDL get 
PASS rp.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS rp.dir: setAttribute() to 1.5 followed by IDL get 
PASS rp.dir: setAttribute() to true followed by getAttribute() 
PASS rp.dir: setAttribute() to true followed by IDL get 
PASS rp.dir: setAttribute() to false followed by getAttribute() 
PASS rp.dir: setAttribute() to false followed by IDL get 
PASS rp.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS rp.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS rp.dir: setAttribute() to NaN followed by getAttribute() 
PASS rp.dir: setAttribute() to NaN followed by IDL get 
PASS rp.dir: setAttribute() to Infinity followed by getAttribute() 
PASS rp.dir: setAttribute() to Infinity followed by IDL get 
PASS rp.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS rp.dir: setAttribute() to -Infinity followed by IDL get 
PASS rp.dir: setAttribute() to "\0" followed by getAttribute() 
PASS rp.dir: setAttribute() to "\0" followed by IDL get 
PASS rp.dir: setAttribute() to null followed by getAttribute() 
PASS rp.dir: setAttribute() to null followed by IDL get 
PASS rp.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS rp.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS rp.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS rp.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS rp.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS rp.dir: setAttribute() to "ltr" followed by IDL get 
PASS rp.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS rp.dir: setAttribute() to "xltr" followed by IDL get 
PASS rp.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS rp.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS rp.dir: setAttribute() to "tr" followed by getAttribute() 
PASS rp.dir: setAttribute() to "tr" followed by IDL get 
PASS rp.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS rp.dir: setAttribute() to "LTR" followed by IDL get 
PASS rp.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS rp.dir: setAttribute() to "rtl" followed by IDL get 
PASS rp.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS rp.dir: setAttribute() to "xrtl" followed by IDL get 
PASS rp.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS rp.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS rp.dir: setAttribute() to "tl" followed by getAttribute() 
PASS rp.dir: setAttribute() to "tl" followed by IDL get 
PASS rp.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS rp.dir: setAttribute() to "RTL" followed by IDL get 
PASS rp.dir: setAttribute() to "auto" followed by getAttribute() 
PASS rp.dir: setAttribute() to "auto" followed by IDL get 
PASS rp.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS rp.dir: setAttribute() to "xauto" followed by IDL get 
PASS rp.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS rp.dir: setAttribute() to "auto\0" followed by IDL get 
PASS rp.dir: setAttribute() to "uto" followed by getAttribute() 
PASS rp.dir: setAttribute() to "uto" followed by IDL get 
PASS rp.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS rp.dir: setAttribute() to "AUTO" followed by IDL get 
PASS rp.dir: IDL set to "" should not throw 
PASS rp.dir: IDL set to "" followed by getAttribute() 
PASS rp.dir: IDL set to "" followed by IDL get 
PASS rp.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS rp.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rp.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rp.dir: IDL set to undefined should not throw 
PASS rp.dir: IDL set to undefined followed by getAttribute() 
PASS rp.dir: IDL set to undefined followed by IDL get 
PASS rp.dir: IDL set to 7 should not throw 
PASS rp.dir: IDL set to 7 followed by getAttribute() 
PASS rp.dir: IDL set to 7 followed by IDL get 
PASS rp.dir: IDL set to 1.5 should not throw 
PASS rp.dir: IDL set to 1.5 followed by getAttribute() 
PASS rp.dir: IDL set to 1.5 followed by IDL get 
PASS rp.dir: IDL set to true should not throw 
PASS rp.dir: IDL set to true followed by getAttribute() 
PASS rp.dir: IDL set to true followed by IDL get 
PASS rp.dir: IDL set to false should not throw 
PASS rp.dir: IDL set to false followed by getAttribute() 
PASS rp.dir: IDL set to false followed by IDL get 
PASS rp.dir: IDL set to object "[object Object]" should not throw 
PASS rp.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS rp.dir: IDL set to object "[object Object]" followed by IDL get 
PASS rp.dir: IDL set to NaN should not throw 
PASS rp.dir: IDL set to NaN followed by getAttribute() 
PASS rp.dir: IDL set to NaN followed by IDL get 
PASS rp.dir: IDL set to Infinity should not throw 
PASS rp.dir: IDL set to Infinity followed by getAttribute() 
PASS rp.dir: IDL set to Infinity followed by IDL get 
PASS rp.dir: IDL set to -Infinity should not throw 
PASS rp.dir: IDL set to -Infinity followed by getAttribute() 
PASS rp.dir: IDL set to -Infinity followed by IDL get 
PASS rp.dir: IDL set to "\0" should not throw 
PASS rp.dir: IDL set to "\0" followed by getAttribute() 
PASS rp.dir: IDL set to "\0" followed by IDL get 
PASS rp.dir: IDL set to null should not throw 
PASS rp.dir: IDL set to null followed by IDL get 
PASS rp.dir: IDL set to object "test-toString" should not throw 
PASS rp.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS rp.dir: IDL set to object "test-toString" followed by IDL get 
PASS rp.dir: IDL set to object "test-valueOf" should not throw 
PASS rp.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS rp.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS rp.dir: IDL set to "ltr" should not throw 
PASS rp.dir: IDL set to "ltr" followed by getAttribute() 
PASS rp.dir: IDL set to "ltr" followed by IDL get 
PASS rp.dir: IDL set to "xltr" should not throw 
PASS rp.dir: IDL set to "xltr" followed by getAttribute() 
PASS rp.dir: IDL set to "xltr" followed by IDL get 
PASS rp.dir: IDL set to "ltr\0" should not throw 
PASS rp.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS rp.dir: IDL set to "ltr\0" followed by IDL get 
PASS rp.dir: IDL set to "tr" should not throw 
PASS rp.dir: IDL set to "tr" followed by getAttribute() 
PASS rp.dir: IDL set to "tr" followed by IDL get 
PASS rp.dir: IDL set to "LTR" should not throw 
PASS rp.dir: IDL set to "LTR" followed by getAttribute() 
PASS rp.dir: IDL set to "LTR" followed by IDL get 
PASS rp.dir: IDL set to "rtl" should not throw 
PASS rp.dir: IDL set to "rtl" followed by getAttribute() 
PASS rp.dir: IDL set to "rtl" followed by IDL get 
PASS rp.dir: IDL set to "xrtl" should not throw 
PASS rp.dir: IDL set to "xrtl" followed by getAttribute() 
PASS rp.dir: IDL set to "xrtl" followed by IDL get 
PASS rp.dir: IDL set to "rtl\0" should not throw 
PASS rp.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS rp.dir: IDL set to "rtl\0" followed by IDL get 
PASS rp.dir: IDL set to "tl" should not throw 
PASS rp.dir: IDL set to "tl" followed by getAttribute() 
PASS rp.dir: IDL set to "tl" followed by IDL get 
PASS rp.dir: IDL set to "RTL" should not throw 
PASS rp.dir: IDL set to "RTL" followed by getAttribute() 
PASS rp.dir: IDL set to "RTL" followed by IDL get 
PASS rp.dir: IDL set to "auto" should not throw 
PASS rp.dir: IDL set to "auto" followed by getAttribute() 
PASS rp.dir: IDL set to "auto" followed by IDL get 
PASS rp.dir: IDL set to "xauto" should not throw 
PASS rp.dir: IDL set to "xauto" followed by getAttribute() 
PASS rp.dir: IDL set to "xauto" followed by IDL get 
PASS rp.dir: IDL set to "auto\0" should not throw 
PASS rp.dir: IDL set to "auto\0" followed by getAttribute() 
PASS rp.dir: IDL set to "auto\0" followed by IDL get 
PASS rp.dir: IDL set to "uto" should not throw 
PASS rp.dir: IDL set to "uto" followed by getAttribute() 
PASS rp.dir: IDL set to "uto" followed by IDL get 
PASS rp.dir: IDL set to "AUTO" should not throw 
PASS rp.dir: IDL set to "AUTO" followed by getAttribute() 
PASS rp.dir: IDL set to "AUTO" followed by IDL get 
PASS rp.className (<rp class>): typeof IDL attribute 
PASS rp.className (<rp class>): IDL get with DOM attribute unset 
PASS rp.className (<rp class>): setAttribute() to "" followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to "" followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to undefined followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to undefined followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to 7 followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to 7 followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to 1.5 followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to 1.5 followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to true followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to true followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to false followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to false followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to NaN followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to NaN followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to Infinity followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to Infinity followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to -Infinity followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to -Infinity followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to "\0" followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to "\0" followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to null followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to null followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to object "test-toString" followed by IDL get 
PASS rp.className (<rp class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS rp.className (<rp class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS rp.className (<rp class>): IDL set to "" should not throw 
PASS rp.className (<rp class>): IDL set to "" followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to "" followed by IDL get 
PASS rp.className (<rp class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS rp.className (<rp class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rp.className (<rp class>): IDL set to undefined should not throw 
PASS rp.className (<rp class>): IDL set to undefined followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to undefined followed by IDL get 
PASS rp.className (<rp class>): IDL set to 7 should not throw 
PASS rp.className (<rp class>): IDL set to 7 followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to 7 followed by IDL get 
PASS rp.className (<rp class>): IDL set to 1.5 should not throw 
PASS rp.className (<rp class>): IDL set to 1.5 followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to 1.5 followed by IDL get 
PASS rp.className (<rp class>): IDL set to true should not throw 
PASS rp.className (<rp class>): IDL set to true followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to true followed by IDL get 
PASS rp.className (<rp class>): IDL set to false should not throw 
PASS rp.className (<rp class>): IDL set to false followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to false followed by IDL get 
PASS rp.className (<rp class>): IDL set to object "[object Object]" should not throw 
PASS rp.className (<rp class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to object "[object Object]" followed by IDL get 
PASS rp.className (<rp class>): IDL set to NaN should not throw 
PASS rp.className (<rp class>): IDL set to NaN followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to NaN followed by IDL get 
PASS rp.className (<rp class>): IDL set to Infinity should not throw 
PASS rp.className (<rp class>): IDL set to Infinity followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to Infinity followed by IDL get 
PASS rp.className (<rp class>): IDL set to -Infinity should not throw 
PASS rp.className (<rp class>): IDL set to -Infinity followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to -Infinity followed by IDL get 
PASS rp.className (<rp class>): IDL set to "\0" should not throw 
PASS rp.className (<rp class>): IDL set to "\0" followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to "\0" followed by IDL get 
PASS rp.className (<rp class>): IDL set to null should not throw 
PASS rp.className (<rp class>): IDL set to null followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to null followed by IDL get 
PASS rp.className (<rp class>): IDL set to object "test-toString" should not throw 
PASS rp.className (<rp class>): IDL set to object "test-toString" followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to object "test-toString" followed by IDL get 
PASS rp.className (<rp class>): IDL set to object "test-valueOf" should not throw 
PASS rp.className (<rp class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS rp.className (<rp class>): IDL set to object "test-valueOf" followed by IDL get 
PASS rp.hidden: typeof IDL attribute 
PASS rp.hidden: IDL get with DOM attribute unset 
PASS rp.hidden: setAttribute() to "" followed by getAttribute() 
PASS rp.hidden: setAttribute() to "" followed by IDL get 
PASS rp.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS rp.hidden: setAttribute() to " foo " followed by IDL get 
PASS rp.hidden: setAttribute() to undefined followed by getAttribute() 
PASS rp.hidden: setAttribute() to undefined followed by IDL get 
PASS rp.hidden: setAttribute() to null followed by getAttribute() 
PASS rp.hidden: setAttribute() to null followed by IDL get 
PASS rp.hidden: setAttribute() to 7 followed by getAttribute() 
PASS rp.hidden: setAttribute() to 7 followed by IDL get 
PASS rp.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS rp.hidden: setAttribute() to 1.5 followed by IDL get 
PASS rp.hidden: setAttribute() to true followed by getAttribute() 
PASS rp.hidden: setAttribute() to true followed by IDL get 
PASS rp.hidden: setAttribute() to false followed by getAttribute() 
PASS rp.hidden: setAttribute() to false followed by IDL get 
PASS rp.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS rp.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS rp.hidden: setAttribute() to NaN followed by getAttribute() 
PASS rp.hidden: setAttribute() to NaN followed by IDL get 
PASS rp.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS rp.hidden: setAttribute() to Infinity followed by IDL get 
PASS rp.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS rp.hidden: setAttribute() to -Infinity followed by IDL get 
PASS rp.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS rp.hidden: setAttribute() to "\0" followed by IDL get 
PASS rp.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS rp.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS rp.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS rp.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS rp.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS rp.hidden: setAttribute() to "hidden" followed by IDL get 
PASS rp.hidden: IDL set to "" should not throw 
PASS rp.hidden: IDL set to "" followed by hasAttribute() 
PASS rp.hidden: IDL set to "" followed by IDL get 
PASS rp.hidden: IDL set to " foo " should not throw 
PASS rp.hidden: IDL set to " foo " followed by hasAttribute() 
PASS rp.hidden: IDL set to " foo " followed by IDL get 
PASS rp.hidden: IDL set to undefined should not throw 
PASS rp.hidden: IDL set to undefined followed by hasAttribute() 
PASS rp.hidden: IDL set to undefined followed by IDL get 
PASS rp.hidden: IDL set to null should not throw 
PASS rp.hidden: IDL set to null followed by hasAttribute() 
PASS rp.hidden: IDL set to null followed by IDL get 
PASS rp.hidden: IDL set to 7 should not throw 
PASS rp.hidden: IDL set to 7 followed by hasAttribute() 
PASS rp.hidden: IDL set to 7 followed by IDL get 
PASS rp.hidden: IDL set to 1.5 should not throw 
PASS rp.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS rp.hidden: IDL set to 1.5 followed by IDL get 
PASS rp.hidden: IDL set to true should not throw 
PASS rp.hidden: IDL set to true followed by hasAttribute() 
PASS rp.hidden: IDL set to true followed by IDL get 
PASS rp.hidden: IDL set to false should not throw 
PASS rp.hidden: IDL set to false followed by hasAttribute() 
PASS rp.hidden: IDL set to false followed by IDL get 
PASS rp.hidden: IDL set to object "[object Object]" should not throw 
PASS rp.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS rp.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS rp.hidden: IDL set to NaN should not throw 
PASS rp.hidden: IDL set to NaN followed by hasAttribute() 
PASS rp.hidden: IDL set to NaN followed by IDL get 
PASS rp.hidden: IDL set to Infinity should not throw 
PASS rp.hidden: IDL set to Infinity followed by hasAttribute() 
PASS rp.hidden: IDL set to Infinity followed by IDL get 
PASS rp.hidden: IDL set to -Infinity should not throw 
PASS rp.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS rp.hidden: IDL set to -Infinity followed by IDL get 
PASS rp.hidden: IDL set to "\0" should not throw 
PASS rp.hidden: IDL set to "\0" followed by hasAttribute() 
PASS rp.hidden: IDL set to "\0" followed by IDL get 
PASS rp.hidden: IDL set to object "test-toString" should not throw 
PASS rp.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS rp.hidden: IDL set to object "test-toString" followed by IDL get 
PASS rp.hidden: IDL set to object "test-valueOf" should not throw 
PASS rp.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS rp.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS rp.accessKey: typeof IDL attribute 
PASS rp.accessKey: IDL get with DOM attribute unset 
PASS rp.accessKey: setAttribute() to "" followed by getAttribute() 
PASS rp.accessKey: setAttribute() to "" followed by IDL get 
PASS rp.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rp.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rp.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS rp.accessKey: setAttribute() to undefined followed by IDL get 
PASS rp.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS rp.accessKey: setAttribute() to 7 followed by IDL get 
PASS rp.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS rp.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS rp.accessKey: setAttribute() to true followed by getAttribute() 
PASS rp.accessKey: setAttribute() to true followed by IDL get 
PASS rp.accessKey: setAttribute() to false followed by getAttribute() 
PASS rp.accessKey: setAttribute() to false followed by IDL get 
PASS rp.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS rp.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS rp.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS rp.accessKey: setAttribute() to NaN followed by IDL get 
PASS rp.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS rp.accessKey: setAttribute() to Infinity followed by IDL get 
PASS rp.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS rp.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS rp.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS rp.accessKey: setAttribute() to "\0" followed by IDL get 
PASS rp.accessKey: setAttribute() to null followed by getAttribute() 
PASS rp.accessKey: setAttribute() to null followed by IDL get 
PASS rp.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS rp.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS rp.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS rp.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS rp.accessKey: IDL set to "" should not throw 
PASS rp.accessKey: IDL set to "" followed by getAttribute() 
PASS rp.accessKey: IDL set to "" followed by IDL get 
PASS rp.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS rp.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS rp.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS rp.accessKey: IDL set to undefined should not throw 
PASS rp.accessKey: IDL set to undefined followed by getAttribute() 
PASS rp.accessKey: IDL set to undefined followed by IDL get 
PASS rp.accessKey: IDL set to 7 should not throw 
PASS rp.accessKey: IDL set to 7 followed by getAttribute() 
PASS rp.accessKey: IDL set to 7 followed by IDL get 
PASS rp.accessKey: IDL set to 1.5 should not throw 
PASS rp.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS rp.accessKey: IDL set to 1.5 followed by IDL get 
PASS rp.accessKey: IDL set to true should not throw 
PASS rp.accessKey: IDL set to true followed by getAttribute() 
PASS rp.accessKey: IDL set to true followed by IDL get 
PASS rp.accessKey: IDL set to false should not throw 
PASS rp.accessKey: IDL set to false followed by getAttribute() 
PASS rp.accessKey: IDL set to false followed by IDL get 
PASS rp.accessKey: IDL set to object "[object Object]" should not throw 
PASS rp.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS rp.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS rp.accessKey: IDL set to NaN should not throw 
PASS rp.accessKey: IDL set to NaN followed by getAttribute() 
PASS rp.accessKey: IDL set to NaN followed by IDL get 
PASS rp.accessKey: IDL set to Infinity should not throw 
PASS rp.accessKey: IDL set to Infinity followed by getAttribute() 
PASS rp.accessKey: IDL set to Infinity followed by IDL get 
PASS rp.accessKey: IDL set to -Infinity should not throw 
PASS rp.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS rp.accessKey: IDL set to -Infinity followed by IDL get 
PASS rp.accessKey: IDL set to "\0" should not throw 
PASS rp.accessKey: IDL set to "\0" followed by getAttribute() 
PASS rp.accessKey: IDL set to "\0" followed by IDL get 
PASS rp.accessKey: IDL set to null should not throw 
PASS rp.accessKey: IDL set to null followed by getAttribute() 
PASS rp.accessKey: IDL set to null followed by IDL get 
PASS rp.accessKey: IDL set to object "test-toString" should not throw 
PASS rp.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS rp.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS rp.accessKey: IDL set to object "test-valueOf" should not throw 
PASS rp.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS rp.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS rp.tabIndex: typeof IDL attribute 
PASS rp.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to -36 followed by IDL get 
PASS rp.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to -1 followed by IDL get 
PASS rp.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to 0 followed by IDL get 
PASS rp.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to 1 followed by IDL get 
PASS rp.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL rp.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS rp.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL rp.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS rp.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS rp.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS rp.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to "0" followed by IDL get 
PASS rp.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to "1" followed by IDL get 
PASS rp.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS rp.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS rp.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS rp.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS rp.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS rp.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS rp.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS rp.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS rp.tabIndex: IDL set to -36 should not throw 
PASS rp.tabIndex: IDL set to -36 followed by getAttribute() 
PASS rp.tabIndex: IDL set to -36 followed by IDL get 
PASS rp.tabIndex: IDL set to -1 should not throw 
PASS rp.tabIndex: IDL set to -1 followed by getAttribute() 
PASS rp.tabIndex: IDL set to -1 followed by IDL get 
PASS rp.tabIndex: IDL set to 0 should not throw 
PASS rp.tabIndex: IDL set to 0 followed by getAttribute() 
PASS rp.tabIndex: IDL set to 0 followed by IDL get 
PASS rp.tabIndex: IDL set to 1 should not throw 
PASS rp.tabIndex: IDL set to 1 followed by getAttribute() 
PASS rp.tabIndex: IDL set to 1 followed by IDL get 
PASS rp.tabIndex: IDL set to 2147483647 should not throw 
PASS rp.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL rp.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS rp.tabIndex: IDL set to -2147483648 should not throw 
PASS rp.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL rp.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL rp.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL rp.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS rp.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to null followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to true followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to false followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL rp.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS rp.itemScope: IDL set to "" should not throw 
FAIL rp.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL rp.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS rp.itemScope: IDL set to " foo " should not throw 
PASS rp.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL rp.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS rp.itemScope: IDL set to undefined should not throw 
FAIL rp.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL rp.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS rp.itemScope: IDL set to null should not throw 
FAIL rp.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL rp.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS rp.itemScope: IDL set to 7 should not throw 
PASS rp.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL rp.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS rp.itemScope: IDL set to 1.5 should not throw 
PASS rp.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL rp.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS rp.itemScope: IDL set to true should not throw 
PASS rp.itemScope: IDL set to true followed by hasAttribute() 
PASS rp.itemScope: IDL set to true followed by IDL get 
PASS rp.itemScope: IDL set to false should not throw 
FAIL rp.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS rp.itemScope: IDL set to false followed by IDL get 
PASS rp.itemScope: IDL set to object "[object Object]" should not throw 
PASS rp.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL rp.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS rp.itemScope: IDL set to NaN should not throw 
FAIL rp.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL rp.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS rp.itemScope: IDL set to Infinity should not throw 
PASS rp.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL rp.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS rp.itemScope: IDL set to -Infinity should not throw 
PASS rp.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL rp.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS rp.itemScope: IDL set to "\0" should not throw 
PASS rp.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL rp.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS rp.itemScope: IDL set to object "test-toString" should not throw 
PASS rp.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL rp.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS rp.itemScope: IDL set to object "test-valueOf" should not throw 
PASS rp.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL rp.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL rp.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL rp.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS rp.itemId: setAttribute() to "" followed by getAttribute() 
FAIL rp.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS rp.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL rp.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS rp.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL rp.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS rp.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL rp.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS rp.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL rp.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS rp.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL rp.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS rp.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL rp.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS rp.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL rp.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS rp.itemId: setAttribute() to true followed by getAttribute() 
FAIL rp.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS rp.itemId: setAttribute() to false followed by getAttribute() 
FAIL rp.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS rp.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL rp.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS rp.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL rp.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS rp.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL rp.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS rp.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL rp.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS rp.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL rp.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS rp.itemId: setAttribute() to null followed by getAttribute() 
FAIL rp.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS rp.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL rp.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS rp.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL rp.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS rp.itemId: IDL set to "" should not throw 
FAIL rp.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL rp.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS rp.itemId: IDL set to " foo " should not throw 
FAIL rp.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL rp.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS rp.itemId: IDL set to "http://site.example/" should not throw 
FAIL rp.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS rp.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS rp.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL rp.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL rp.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS rp.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL rp.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL rp.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS rp.itemId: IDL set to undefined should not throw 
FAIL rp.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL rp.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS rp.itemId: IDL set to 7 should not throw 
FAIL rp.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL rp.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS rp.itemId: IDL set to 1.5 should not throw 
FAIL rp.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL rp.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS rp.itemId: IDL set to true should not throw 
FAIL rp.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL rp.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS rp.itemId: IDL set to false should not throw 
FAIL rp.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL rp.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS rp.itemId: IDL set to object "[object Object]" should not throw 
FAIL rp.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL rp.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS rp.itemId: IDL set to NaN should not throw 
FAIL rp.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL rp.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS rp.itemId: IDL set to Infinity should not throw 
FAIL rp.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL rp.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS rp.itemId: IDL set to -Infinity should not throw 
FAIL rp.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL rp.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS rp.itemId: IDL set to "\0" should not throw 
FAIL rp.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL rp.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS rp.itemId: IDL set to null should not throw 
FAIL rp.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL rp.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS rp.itemId: IDL set to object "test-toString" should not throw 
FAIL rp.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL rp.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS rp.itemId: IDL set to object "test-valueOf" should not throw 
PASS rp.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL rp.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS bdi.title: typeof IDL attribute 
PASS bdi.title: IDL get with DOM attribute unset 
PASS bdi.title: setAttribute() to "" followed by getAttribute() 
PASS bdi.title: setAttribute() to "" followed by IDL get 
PASS bdi.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdi.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdi.title: setAttribute() to undefined followed by getAttribute() 
PASS bdi.title: setAttribute() to undefined followed by IDL get 
PASS bdi.title: setAttribute() to 7 followed by getAttribute() 
PASS bdi.title: setAttribute() to 7 followed by IDL get 
PASS bdi.title: setAttribute() to 1.5 followed by getAttribute() 
PASS bdi.title: setAttribute() to 1.5 followed by IDL get 
PASS bdi.title: setAttribute() to true followed by getAttribute() 
PASS bdi.title: setAttribute() to true followed by IDL get 
PASS bdi.title: setAttribute() to false followed by getAttribute() 
PASS bdi.title: setAttribute() to false followed by IDL get 
PASS bdi.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS bdi.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS bdi.title: setAttribute() to NaN followed by getAttribute() 
PASS bdi.title: setAttribute() to NaN followed by IDL get 
PASS bdi.title: setAttribute() to Infinity followed by getAttribute() 
PASS bdi.title: setAttribute() to Infinity followed by IDL get 
PASS bdi.title: setAttribute() to -Infinity followed by getAttribute() 
PASS bdi.title: setAttribute() to -Infinity followed by IDL get 
PASS bdi.title: setAttribute() to "\0" followed by getAttribute() 
PASS bdi.title: setAttribute() to "\0" followed by IDL get 
PASS bdi.title: setAttribute() to null followed by getAttribute() 
PASS bdi.title: setAttribute() to null followed by IDL get 
PASS bdi.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS bdi.title: setAttribute() to object "test-toString" followed by IDL get 
PASS bdi.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS bdi.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS bdi.title: IDL set to "" should not throw 
PASS bdi.title: IDL set to "" followed by getAttribute() 
PASS bdi.title: IDL set to "" followed by IDL get 
PASS bdi.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS bdi.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdi.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdi.title: IDL set to undefined should not throw 
PASS bdi.title: IDL set to undefined followed by getAttribute() 
PASS bdi.title: IDL set to undefined followed by IDL get 
PASS bdi.title: IDL set to 7 should not throw 
PASS bdi.title: IDL set to 7 followed by getAttribute() 
PASS bdi.title: IDL set to 7 followed by IDL get 
PASS bdi.title: IDL set to 1.5 should not throw 
PASS bdi.title: IDL set to 1.5 followed by getAttribute() 
PASS bdi.title: IDL set to 1.5 followed by IDL get 
PASS bdi.title: IDL set to true should not throw 
PASS bdi.title: IDL set to true followed by getAttribute() 
PASS bdi.title: IDL set to true followed by IDL get 
PASS bdi.title: IDL set to false should not throw 
PASS bdi.title: IDL set to false followed by getAttribute() 
PASS bdi.title: IDL set to false followed by IDL get 
PASS bdi.title: IDL set to object "[object Object]" should not throw 
PASS bdi.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS bdi.title: IDL set to object "[object Object]" followed by IDL get 
PASS bdi.title: IDL set to NaN should not throw 
PASS bdi.title: IDL set to NaN followed by getAttribute() 
PASS bdi.title: IDL set to NaN followed by IDL get 
PASS bdi.title: IDL set to Infinity should not throw 
PASS bdi.title: IDL set to Infinity followed by getAttribute() 
PASS bdi.title: IDL set to Infinity followed by IDL get 
PASS bdi.title: IDL set to -Infinity should not throw 
PASS bdi.title: IDL set to -Infinity followed by getAttribute() 
PASS bdi.title: IDL set to -Infinity followed by IDL get 
PASS bdi.title: IDL set to "\0" should not throw 
PASS bdi.title: IDL set to "\0" followed by getAttribute() 
PASS bdi.title: IDL set to "\0" followed by IDL get 
PASS bdi.title: IDL set to null should not throw 
PASS bdi.title: IDL set to null followed by getAttribute() 
PASS bdi.title: IDL set to null followed by IDL get 
PASS bdi.title: IDL set to object "test-toString" should not throw 
PASS bdi.title: IDL set to object "test-toString" followed by getAttribute() 
PASS bdi.title: IDL set to object "test-toString" followed by IDL get 
PASS bdi.title: IDL set to object "test-valueOf" should not throw 
PASS bdi.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS bdi.title: IDL set to object "test-valueOf" followed by IDL get 
PASS bdi.lang: typeof IDL attribute 
PASS bdi.lang: IDL get with DOM attribute unset 
PASS bdi.lang: setAttribute() to "" followed by getAttribute() 
PASS bdi.lang: setAttribute() to "" followed by IDL get 
PASS bdi.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdi.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdi.lang: setAttribute() to undefined followed by getAttribute() 
PASS bdi.lang: setAttribute() to undefined followed by IDL get 
PASS bdi.lang: setAttribute() to 7 followed by getAttribute() 
PASS bdi.lang: setAttribute() to 7 followed by IDL get 
PASS bdi.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS bdi.lang: setAttribute() to 1.5 followed by IDL get 
PASS bdi.lang: setAttribute() to true followed by getAttribute() 
PASS bdi.lang: setAttribute() to true followed by IDL get 
PASS bdi.lang: setAttribute() to false followed by getAttribute() 
PASS bdi.lang: setAttribute() to false followed by IDL get 
PASS bdi.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS bdi.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS bdi.lang: setAttribute() to NaN followed by getAttribute() 
PASS bdi.lang: setAttribute() to NaN followed by IDL get 
PASS bdi.lang: setAttribute() to Infinity followed by getAttribute() 
PASS bdi.lang: setAttribute() to Infinity followed by IDL get 
PASS bdi.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS bdi.lang: setAttribute() to -Infinity followed by IDL get 
PASS bdi.lang: setAttribute() to "\0" followed by getAttribute() 
PASS bdi.lang: setAttribute() to "\0" followed by IDL get 
PASS bdi.lang: setAttribute() to null followed by getAttribute() 
PASS bdi.lang: setAttribute() to null followed by IDL get 
PASS bdi.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS bdi.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS bdi.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS bdi.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS bdi.lang: IDL set to "" should not throw 
PASS bdi.lang: IDL set to "" followed by getAttribute() 
PASS bdi.lang: IDL set to "" followed by IDL get 
PASS bdi.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS bdi.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdi.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdi.lang: IDL set to undefined should not throw 
PASS bdi.lang: IDL set to undefined followed by getAttribute() 
PASS bdi.lang: IDL set to undefined followed by IDL get 
PASS bdi.lang: IDL set to 7 should not throw 
PASS bdi.lang: IDL set to 7 followed by getAttribute() 
PASS bdi.lang: IDL set to 7 followed by IDL get 
PASS bdi.lang: IDL set to 1.5 should not throw 
PASS bdi.lang: IDL set to 1.5 followed by getAttribute() 
PASS bdi.lang: IDL set to 1.5 followed by IDL get 
PASS bdi.lang: IDL set to true should not throw 
PASS bdi.lang: IDL set to true followed by getAttribute() 
PASS bdi.lang: IDL set to true followed by IDL get 
PASS bdi.lang: IDL set to false should not throw 
PASS bdi.lang: IDL set to false followed by getAttribute() 
PASS bdi.lang: IDL set to false followed by IDL get 
PASS bdi.lang: IDL set to object "[object Object]" should not throw 
PASS bdi.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS bdi.lang: IDL set to object "[object Object]" followed by IDL get 
PASS bdi.lang: IDL set to NaN should not throw 
PASS bdi.lang: IDL set to NaN followed by getAttribute() 
PASS bdi.lang: IDL set to NaN followed by IDL get 
PASS bdi.lang: IDL set to Infinity should not throw 
PASS bdi.lang: IDL set to Infinity followed by getAttribute() 
PASS bdi.lang: IDL set to Infinity followed by IDL get 
PASS bdi.lang: IDL set to -Infinity should not throw 
PASS bdi.lang: IDL set to -Infinity followed by getAttribute() 
PASS bdi.lang: IDL set to -Infinity followed by IDL get 
PASS bdi.lang: IDL set to "\0" should not throw 
PASS bdi.lang: IDL set to "\0" followed by getAttribute() 
PASS bdi.lang: IDL set to "\0" followed by IDL get 
PASS bdi.lang: IDL set to null should not throw 
PASS bdi.lang: IDL set to null followed by getAttribute() 
PASS bdi.lang: IDL set to null followed by IDL get 
PASS bdi.lang: IDL set to object "test-toString" should not throw 
PASS bdi.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS bdi.lang: IDL set to object "test-toString" followed by IDL get 
PASS bdi.lang: IDL set to object "test-valueOf" should not throw 
PASS bdi.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS bdi.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS bdi.dir: typeof IDL attribute 
PASS bdi.dir: IDL get with DOM attribute unset 
PASS bdi.dir: setAttribute() to "" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "" followed by IDL get 
PASS bdi.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdi.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdi.dir: setAttribute() to undefined followed by getAttribute() 
PASS bdi.dir: setAttribute() to undefined followed by IDL get 
PASS bdi.dir: setAttribute() to 7 followed by getAttribute() 
PASS bdi.dir: setAttribute() to 7 followed by IDL get 
PASS bdi.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS bdi.dir: setAttribute() to 1.5 followed by IDL get 
PASS bdi.dir: setAttribute() to true followed by getAttribute() 
PASS bdi.dir: setAttribute() to true followed by IDL get 
PASS bdi.dir: setAttribute() to false followed by getAttribute() 
PASS bdi.dir: setAttribute() to false followed by IDL get 
PASS bdi.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS bdi.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS bdi.dir: setAttribute() to NaN followed by getAttribute() 
PASS bdi.dir: setAttribute() to NaN followed by IDL get 
PASS bdi.dir: setAttribute() to Infinity followed by getAttribute() 
PASS bdi.dir: setAttribute() to Infinity followed by IDL get 
PASS bdi.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS bdi.dir: setAttribute() to -Infinity followed by IDL get 
PASS bdi.dir: setAttribute() to "\0" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "\0" followed by IDL get 
PASS bdi.dir: setAttribute() to null followed by getAttribute() 
PASS bdi.dir: setAttribute() to null followed by IDL get 
PASS bdi.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS bdi.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS bdi.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS bdi.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS bdi.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "ltr" followed by IDL get 
PASS bdi.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "xltr" followed by IDL get 
PASS bdi.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS bdi.dir: setAttribute() to "tr" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "tr" followed by IDL get 
PASS bdi.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "LTR" followed by IDL get 
PASS bdi.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "rtl" followed by IDL get 
PASS bdi.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "xrtl" followed by IDL get 
PASS bdi.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS bdi.dir: setAttribute() to "tl" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "tl" followed by IDL get 
PASS bdi.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "RTL" followed by IDL get 
PASS bdi.dir: setAttribute() to "auto" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "auto" followed by IDL get 
PASS bdi.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "xauto" followed by IDL get 
PASS bdi.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "auto\0" followed by IDL get 
PASS bdi.dir: setAttribute() to "uto" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "uto" followed by IDL get 
PASS bdi.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS bdi.dir: setAttribute() to "AUTO" followed by IDL get 
PASS bdi.dir: IDL set to "" should not throw 
PASS bdi.dir: IDL set to "" followed by getAttribute() 
PASS bdi.dir: IDL set to "" followed by IDL get 
PASS bdi.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS bdi.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdi.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdi.dir: IDL set to undefined should not throw 
PASS bdi.dir: IDL set to undefined followed by getAttribute() 
PASS bdi.dir: IDL set to undefined followed by IDL get 
PASS bdi.dir: IDL set to 7 should not throw 
PASS bdi.dir: IDL set to 7 followed by getAttribute() 
PASS bdi.dir: IDL set to 7 followed by IDL get 
PASS bdi.dir: IDL set to 1.5 should not throw 
PASS bdi.dir: IDL set to 1.5 followed by getAttribute() 
PASS bdi.dir: IDL set to 1.5 followed by IDL get 
PASS bdi.dir: IDL set to true should not throw 
PASS bdi.dir: IDL set to true followed by getAttribute() 
PASS bdi.dir: IDL set to true followed by IDL get 
PASS bdi.dir: IDL set to false should not throw 
PASS bdi.dir: IDL set to false followed by getAttribute() 
PASS bdi.dir: IDL set to false followed by IDL get 
PASS bdi.dir: IDL set to object "[object Object]" should not throw 
PASS bdi.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS bdi.dir: IDL set to object "[object Object]" followed by IDL get 
PASS bdi.dir: IDL set to NaN should not throw 
PASS bdi.dir: IDL set to NaN followed by getAttribute() 
PASS bdi.dir: IDL set to NaN followed by IDL get 
PASS bdi.dir: IDL set to Infinity should not throw 
PASS bdi.dir: IDL set to Infinity followed by getAttribute() 
PASS bdi.dir: IDL set to Infinity followed by IDL get 
PASS bdi.dir: IDL set to -Infinity should not throw 
PASS bdi.dir: IDL set to -Infinity followed by getAttribute() 
PASS bdi.dir: IDL set to -Infinity followed by IDL get 
PASS bdi.dir: IDL set to "\0" should not throw 
PASS bdi.dir: IDL set to "\0" followed by getAttribute() 
PASS bdi.dir: IDL set to "\0" followed by IDL get 
PASS bdi.dir: IDL set to null should not throw 
PASS bdi.dir: IDL set to null followed by IDL get 
PASS bdi.dir: IDL set to object "test-toString" should not throw 
PASS bdi.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS bdi.dir: IDL set to object "test-toString" followed by IDL get 
PASS bdi.dir: IDL set to object "test-valueOf" should not throw 
PASS bdi.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS bdi.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS bdi.dir: IDL set to "ltr" should not throw 
PASS bdi.dir: IDL set to "ltr" followed by getAttribute() 
PASS bdi.dir: IDL set to "ltr" followed by IDL get 
PASS bdi.dir: IDL set to "xltr" should not throw 
PASS bdi.dir: IDL set to "xltr" followed by getAttribute() 
PASS bdi.dir: IDL set to "xltr" followed by IDL get 
PASS bdi.dir: IDL set to "ltr\0" should not throw 
PASS bdi.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS bdi.dir: IDL set to "ltr\0" followed by IDL get 
PASS bdi.dir: IDL set to "tr" should not throw 
PASS bdi.dir: IDL set to "tr" followed by getAttribute() 
PASS bdi.dir: IDL set to "tr" followed by IDL get 
PASS bdi.dir: IDL set to "LTR" should not throw 
PASS bdi.dir: IDL set to "LTR" followed by getAttribute() 
PASS bdi.dir: IDL set to "LTR" followed by IDL get 
PASS bdi.dir: IDL set to "rtl" should not throw 
PASS bdi.dir: IDL set to "rtl" followed by getAttribute() 
PASS bdi.dir: IDL set to "rtl" followed by IDL get 
PASS bdi.dir: IDL set to "xrtl" should not throw 
PASS bdi.dir: IDL set to "xrtl" followed by getAttribute() 
PASS bdi.dir: IDL set to "xrtl" followed by IDL get 
PASS bdi.dir: IDL set to "rtl\0" should not throw 
PASS bdi.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS bdi.dir: IDL set to "rtl\0" followed by IDL get 
PASS bdi.dir: IDL set to "tl" should not throw 
PASS bdi.dir: IDL set to "tl" followed by getAttribute() 
PASS bdi.dir: IDL set to "tl" followed by IDL get 
PASS bdi.dir: IDL set to "RTL" should not throw 
PASS bdi.dir: IDL set to "RTL" followed by getAttribute() 
PASS bdi.dir: IDL set to "RTL" followed by IDL get 
PASS bdi.dir: IDL set to "auto" should not throw 
PASS bdi.dir: IDL set to "auto" followed by getAttribute() 
PASS bdi.dir: IDL set to "auto" followed by IDL get 
PASS bdi.dir: IDL set to "xauto" should not throw 
PASS bdi.dir: IDL set to "xauto" followed by getAttribute() 
PASS bdi.dir: IDL set to "xauto" followed by IDL get 
PASS bdi.dir: IDL set to "auto\0" should not throw 
PASS bdi.dir: IDL set to "auto\0" followed by getAttribute() 
PASS bdi.dir: IDL set to "auto\0" followed by IDL get 
PASS bdi.dir: IDL set to "uto" should not throw 
PASS bdi.dir: IDL set to "uto" followed by getAttribute() 
PASS bdi.dir: IDL set to "uto" followed by IDL get 
PASS bdi.dir: IDL set to "AUTO" should not throw 
PASS bdi.dir: IDL set to "AUTO" followed by getAttribute() 
PASS bdi.dir: IDL set to "AUTO" followed by IDL get 
PASS bdi.className (<bdi class>): typeof IDL attribute 
PASS bdi.className (<bdi class>): IDL get with DOM attribute unset 
PASS bdi.className (<bdi class>): setAttribute() to "" followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to "" followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to undefined followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to undefined followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to 7 followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to 7 followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to 1.5 followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to 1.5 followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to true followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to true followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to false followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to false followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to NaN followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to NaN followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to Infinity followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to Infinity followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to -Infinity followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to -Infinity followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to "\0" followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to "\0" followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to null followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to null followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to object "test-toString" followed by IDL get 
PASS bdi.className (<bdi class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS bdi.className (<bdi class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to "" should not throw 
PASS bdi.className (<bdi class>): IDL set to "" followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to "" followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS bdi.className (<bdi class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to undefined should not throw 
PASS bdi.className (<bdi class>): IDL set to undefined followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to undefined followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to 7 should not throw 
PASS bdi.className (<bdi class>): IDL set to 7 followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to 7 followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to 1.5 should not throw 
PASS bdi.className (<bdi class>): IDL set to 1.5 followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to 1.5 followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to true should not throw 
PASS bdi.className (<bdi class>): IDL set to true followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to true followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to false should not throw 
PASS bdi.className (<bdi class>): IDL set to false followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to false followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to object "[object Object]" should not throw 
PASS bdi.className (<bdi class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to object "[object Object]" followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to NaN should not throw 
PASS bdi.className (<bdi class>): IDL set to NaN followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to NaN followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to Infinity should not throw 
PASS bdi.className (<bdi class>): IDL set to Infinity followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to Infinity followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to -Infinity should not throw 
PASS bdi.className (<bdi class>): IDL set to -Infinity followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to -Infinity followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to "\0" should not throw 
PASS bdi.className (<bdi class>): IDL set to "\0" followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to "\0" followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to null should not throw 
PASS bdi.className (<bdi class>): IDL set to null followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to null followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to object "test-toString" should not throw 
PASS bdi.className (<bdi class>): IDL set to object "test-toString" followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to object "test-toString" followed by IDL get 
PASS bdi.className (<bdi class>): IDL set to object "test-valueOf" should not throw 
PASS bdi.className (<bdi class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS bdi.className (<bdi class>): IDL set to object "test-valueOf" followed by IDL get 
PASS bdi.hidden: typeof IDL attribute 
PASS bdi.hidden: IDL get with DOM attribute unset 
PASS bdi.hidden: setAttribute() to "" followed by getAttribute() 
PASS bdi.hidden: setAttribute() to "" followed by IDL get 
PASS bdi.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS bdi.hidden: setAttribute() to " foo " followed by IDL get 
PASS bdi.hidden: setAttribute() to undefined followed by getAttribute() 
PASS bdi.hidden: setAttribute() to undefined followed by IDL get 
PASS bdi.hidden: setAttribute() to null followed by getAttribute() 
PASS bdi.hidden: setAttribute() to null followed by IDL get 
PASS bdi.hidden: setAttribute() to 7 followed by getAttribute() 
PASS bdi.hidden: setAttribute() to 7 followed by IDL get 
PASS bdi.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS bdi.hidden: setAttribute() to 1.5 followed by IDL get 
PASS bdi.hidden: setAttribute() to true followed by getAttribute() 
PASS bdi.hidden: setAttribute() to true followed by IDL get 
PASS bdi.hidden: setAttribute() to false followed by getAttribute() 
PASS bdi.hidden: setAttribute() to false followed by IDL get 
PASS bdi.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS bdi.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS bdi.hidden: setAttribute() to NaN followed by getAttribute() 
PASS bdi.hidden: setAttribute() to NaN followed by IDL get 
PASS bdi.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS bdi.hidden: setAttribute() to Infinity followed by IDL get 
PASS bdi.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS bdi.hidden: setAttribute() to -Infinity followed by IDL get 
PASS bdi.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS bdi.hidden: setAttribute() to "\0" followed by IDL get 
PASS bdi.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS bdi.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS bdi.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS bdi.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS bdi.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS bdi.hidden: setAttribute() to "hidden" followed by IDL get 
PASS bdi.hidden: IDL set to "" should not throw 
PASS bdi.hidden: IDL set to "" followed by hasAttribute() 
PASS bdi.hidden: IDL set to "" followed by IDL get 
PASS bdi.hidden: IDL set to " foo " should not throw 
PASS bdi.hidden: IDL set to " foo " followed by hasAttribute() 
PASS bdi.hidden: IDL set to " foo " followed by IDL get 
PASS bdi.hidden: IDL set to undefined should not throw 
PASS bdi.hidden: IDL set to undefined followed by hasAttribute() 
PASS bdi.hidden: IDL set to undefined followed by IDL get 
PASS bdi.hidden: IDL set to null should not throw 
PASS bdi.hidden: IDL set to null followed by hasAttribute() 
PASS bdi.hidden: IDL set to null followed by IDL get 
PASS bdi.hidden: IDL set to 7 should not throw 
PASS bdi.hidden: IDL set to 7 followed by hasAttribute() 
PASS bdi.hidden: IDL set to 7 followed by IDL get 
PASS bdi.hidden: IDL set to 1.5 should not throw 
PASS bdi.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS bdi.hidden: IDL set to 1.5 followed by IDL get 
PASS bdi.hidden: IDL set to true should not throw 
PASS bdi.hidden: IDL set to true followed by hasAttribute() 
PASS bdi.hidden: IDL set to true followed by IDL get 
PASS bdi.hidden: IDL set to false should not throw 
PASS bdi.hidden: IDL set to false followed by hasAttribute() 
PASS bdi.hidden: IDL set to false followed by IDL get 
PASS bdi.hidden: IDL set to object "[object Object]" should not throw 
PASS bdi.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS bdi.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS bdi.hidden: IDL set to NaN should not throw 
PASS bdi.hidden: IDL set to NaN followed by hasAttribute() 
PASS bdi.hidden: IDL set to NaN followed by IDL get 
PASS bdi.hidden: IDL set to Infinity should not throw 
PASS bdi.hidden: IDL set to Infinity followed by hasAttribute() 
PASS bdi.hidden: IDL set to Infinity followed by IDL get 
PASS bdi.hidden: IDL set to -Infinity should not throw 
PASS bdi.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS bdi.hidden: IDL set to -Infinity followed by IDL get 
PASS bdi.hidden: IDL set to "\0" should not throw 
PASS bdi.hidden: IDL set to "\0" followed by hasAttribute() 
PASS bdi.hidden: IDL set to "\0" followed by IDL get 
PASS bdi.hidden: IDL set to object "test-toString" should not throw 
PASS bdi.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS bdi.hidden: IDL set to object "test-toString" followed by IDL get 
PASS bdi.hidden: IDL set to object "test-valueOf" should not throw 
PASS bdi.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS bdi.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS bdi.accessKey: typeof IDL attribute 
PASS bdi.accessKey: IDL get with DOM attribute unset 
PASS bdi.accessKey: setAttribute() to "" followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to "" followed by IDL get 
PASS bdi.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdi.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to undefined followed by IDL get 
PASS bdi.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to 7 followed by IDL get 
PASS bdi.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS bdi.accessKey: setAttribute() to true followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to true followed by IDL get 
PASS bdi.accessKey: setAttribute() to false followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to false followed by IDL get 
PASS bdi.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS bdi.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to NaN followed by IDL get 
PASS bdi.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to Infinity followed by IDL get 
PASS bdi.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS bdi.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to "\0" followed by IDL get 
PASS bdi.accessKey: setAttribute() to null followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to null followed by IDL get 
PASS bdi.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS bdi.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS bdi.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS bdi.accessKey: IDL set to "" should not throw 
PASS bdi.accessKey: IDL set to "" followed by getAttribute() 
PASS bdi.accessKey: IDL set to "" followed by IDL get 
PASS bdi.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS bdi.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdi.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdi.accessKey: IDL set to undefined should not throw 
PASS bdi.accessKey: IDL set to undefined followed by getAttribute() 
PASS bdi.accessKey: IDL set to undefined followed by IDL get 
PASS bdi.accessKey: IDL set to 7 should not throw 
PASS bdi.accessKey: IDL set to 7 followed by getAttribute() 
PASS bdi.accessKey: IDL set to 7 followed by IDL get 
PASS bdi.accessKey: IDL set to 1.5 should not throw 
PASS bdi.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS bdi.accessKey: IDL set to 1.5 followed by IDL get 
PASS bdi.accessKey: IDL set to true should not throw 
PASS bdi.accessKey: IDL set to true followed by getAttribute() 
PASS bdi.accessKey: IDL set to true followed by IDL get 
PASS bdi.accessKey: IDL set to false should not throw 
PASS bdi.accessKey: IDL set to false followed by getAttribute() 
PASS bdi.accessKey: IDL set to false followed by IDL get 
PASS bdi.accessKey: IDL set to object "[object Object]" should not throw 
PASS bdi.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS bdi.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS bdi.accessKey: IDL set to NaN should not throw 
PASS bdi.accessKey: IDL set to NaN followed by getAttribute() 
PASS bdi.accessKey: IDL set to NaN followed by IDL get 
PASS bdi.accessKey: IDL set to Infinity should not throw 
PASS bdi.accessKey: IDL set to Infinity followed by getAttribute() 
PASS bdi.accessKey: IDL set to Infinity followed by IDL get 
PASS bdi.accessKey: IDL set to -Infinity should not throw 
PASS bdi.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS bdi.accessKey: IDL set to -Infinity followed by IDL get 
PASS bdi.accessKey: IDL set to "\0" should not throw 
PASS bdi.accessKey: IDL set to "\0" followed by getAttribute() 
PASS bdi.accessKey: IDL set to "\0" followed by IDL get 
PASS bdi.accessKey: IDL set to null should not throw 
PASS bdi.accessKey: IDL set to null followed by getAttribute() 
PASS bdi.accessKey: IDL set to null followed by IDL get 
PASS bdi.accessKey: IDL set to object "test-toString" should not throw 
PASS bdi.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS bdi.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS bdi.accessKey: IDL set to object "test-valueOf" should not throw 
PASS bdi.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS bdi.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS bdi.tabIndex: typeof IDL attribute 
PASS bdi.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to -36 followed by IDL get 
PASS bdi.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to -1 followed by IDL get 
PASS bdi.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to 0 followed by IDL get 
PASS bdi.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to 1 followed by IDL get 
PASS bdi.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL bdi.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS bdi.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL bdi.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS bdi.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS bdi.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS bdi.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to "0" followed by IDL get 
PASS bdi.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to "1" followed by IDL get 
PASS bdi.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS bdi.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS bdi.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS bdi.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS bdi.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS bdi.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS bdi.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS bdi.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS bdi.tabIndex: IDL set to -36 should not throw 
PASS bdi.tabIndex: IDL set to -36 followed by getAttribute() 
PASS bdi.tabIndex: IDL set to -36 followed by IDL get 
PASS bdi.tabIndex: IDL set to -1 should not throw 
PASS bdi.tabIndex: IDL set to -1 followed by getAttribute() 
PASS bdi.tabIndex: IDL set to -1 followed by IDL get 
PASS bdi.tabIndex: IDL set to 0 should not throw 
PASS bdi.tabIndex: IDL set to 0 followed by getAttribute() 
PASS bdi.tabIndex: IDL set to 0 followed by IDL get 
PASS bdi.tabIndex: IDL set to 1 should not throw 
PASS bdi.tabIndex: IDL set to 1 followed by getAttribute() 
PASS bdi.tabIndex: IDL set to 1 followed by IDL get 
PASS bdi.tabIndex: IDL set to 2147483647 should not throw 
PASS bdi.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL bdi.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS bdi.tabIndex: IDL set to -2147483648 should not throw 
PASS bdi.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL bdi.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL bdi.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL bdi.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to null followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to true followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to false followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL bdi.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdi.itemScope: IDL set to "" should not throw 
FAIL bdi.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL bdi.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS bdi.itemScope: IDL set to " foo " should not throw 
PASS bdi.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL bdi.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS bdi.itemScope: IDL set to undefined should not throw 
FAIL bdi.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL bdi.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS bdi.itemScope: IDL set to null should not throw 
FAIL bdi.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL bdi.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS bdi.itemScope: IDL set to 7 should not throw 
PASS bdi.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL bdi.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS bdi.itemScope: IDL set to 1.5 should not throw 
PASS bdi.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL bdi.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS bdi.itemScope: IDL set to true should not throw 
PASS bdi.itemScope: IDL set to true followed by hasAttribute() 
PASS bdi.itemScope: IDL set to true followed by IDL get 
PASS bdi.itemScope: IDL set to false should not throw 
FAIL bdi.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS bdi.itemScope: IDL set to false followed by IDL get 
PASS bdi.itemScope: IDL set to object "[object Object]" should not throw 
PASS bdi.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL bdi.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS bdi.itemScope: IDL set to NaN should not throw 
FAIL bdi.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL bdi.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS bdi.itemScope: IDL set to Infinity should not throw 
PASS bdi.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL bdi.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS bdi.itemScope: IDL set to -Infinity should not throw 
PASS bdi.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL bdi.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS bdi.itemScope: IDL set to "\0" should not throw 
PASS bdi.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL bdi.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS bdi.itemScope: IDL set to object "test-toString" should not throw 
PASS bdi.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL bdi.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS bdi.itemScope: IDL set to object "test-valueOf" should not throw 
PASS bdi.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL bdi.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL bdi.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL bdi.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to "" followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to true followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to false followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to null followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS bdi.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL bdi.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS bdi.itemId: IDL set to "" should not throw 
FAIL bdi.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL bdi.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS bdi.itemId: IDL set to " foo " should not throw 
FAIL bdi.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL bdi.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS bdi.itemId: IDL set to "http://site.example/" should not throw 
FAIL bdi.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS bdi.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS bdi.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL bdi.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL bdi.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS bdi.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL bdi.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL bdi.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS bdi.itemId: IDL set to undefined should not throw 
FAIL bdi.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL bdi.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS bdi.itemId: IDL set to 7 should not throw 
FAIL bdi.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL bdi.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS bdi.itemId: IDL set to 1.5 should not throw 
FAIL bdi.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL bdi.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS bdi.itemId: IDL set to true should not throw 
FAIL bdi.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL bdi.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS bdi.itemId: IDL set to false should not throw 
FAIL bdi.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL bdi.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS bdi.itemId: IDL set to object "[object Object]" should not throw 
FAIL bdi.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL bdi.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS bdi.itemId: IDL set to NaN should not throw 
FAIL bdi.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL bdi.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS bdi.itemId: IDL set to Infinity should not throw 
FAIL bdi.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL bdi.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS bdi.itemId: IDL set to -Infinity should not throw 
FAIL bdi.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL bdi.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS bdi.itemId: IDL set to "\0" should not throw 
FAIL bdi.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL bdi.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS bdi.itemId: IDL set to null should not throw 
FAIL bdi.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL bdi.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS bdi.itemId: IDL set to object "test-toString" should not throw 
FAIL bdi.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL bdi.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS bdi.itemId: IDL set to object "test-valueOf" should not throw 
PASS bdi.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL bdi.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS bdo.title: typeof IDL attribute 
PASS bdo.title: IDL get with DOM attribute unset 
PASS bdo.title: setAttribute() to "" followed by getAttribute() 
PASS bdo.title: setAttribute() to "" followed by IDL get 
PASS bdo.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdo.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdo.title: setAttribute() to undefined followed by getAttribute() 
PASS bdo.title: setAttribute() to undefined followed by IDL get 
PASS bdo.title: setAttribute() to 7 followed by getAttribute() 
PASS bdo.title: setAttribute() to 7 followed by IDL get 
PASS bdo.title: setAttribute() to 1.5 followed by getAttribute() 
PASS bdo.title: setAttribute() to 1.5 followed by IDL get 
PASS bdo.title: setAttribute() to true followed by getAttribute() 
PASS bdo.title: setAttribute() to true followed by IDL get 
PASS bdo.title: setAttribute() to false followed by getAttribute() 
PASS bdo.title: setAttribute() to false followed by IDL get 
PASS bdo.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS bdo.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS bdo.title: setAttribute() to NaN followed by getAttribute() 
PASS bdo.title: setAttribute() to NaN followed by IDL get 
PASS bdo.title: setAttribute() to Infinity followed by getAttribute() 
PASS bdo.title: setAttribute() to Infinity followed by IDL get 
PASS bdo.title: setAttribute() to -Infinity followed by getAttribute() 
PASS bdo.title: setAttribute() to -Infinity followed by IDL get 
PASS bdo.title: setAttribute() to "\0" followed by getAttribute() 
PASS bdo.title: setAttribute() to "\0" followed by IDL get 
PASS bdo.title: setAttribute() to null followed by getAttribute() 
PASS bdo.title: setAttribute() to null followed by IDL get 
PASS bdo.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS bdo.title: setAttribute() to object "test-toString" followed by IDL get 
PASS bdo.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS bdo.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS bdo.title: IDL set to "" should not throw 
PASS bdo.title: IDL set to "" followed by getAttribute() 
PASS bdo.title: IDL set to "" followed by IDL get 
PASS bdo.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS bdo.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdo.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdo.title: IDL set to undefined should not throw 
PASS bdo.title: IDL set to undefined followed by getAttribute() 
PASS bdo.title: IDL set to undefined followed by IDL get 
PASS bdo.title: IDL set to 7 should not throw 
PASS bdo.title: IDL set to 7 followed by getAttribute() 
PASS bdo.title: IDL set to 7 followed by IDL get 
PASS bdo.title: IDL set to 1.5 should not throw 
PASS bdo.title: IDL set to 1.5 followed by getAttribute() 
PASS bdo.title: IDL set to 1.5 followed by IDL get 
PASS bdo.title: IDL set to true should not throw 
PASS bdo.title: IDL set to true followed by getAttribute() 
PASS bdo.title: IDL set to true followed by IDL get 
PASS bdo.title: IDL set to false should not throw 
PASS bdo.title: IDL set to false followed by getAttribute() 
PASS bdo.title: IDL set to false followed by IDL get 
PASS bdo.title: IDL set to object "[object Object]" should not throw 
PASS bdo.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS bdo.title: IDL set to object "[object Object]" followed by IDL get 
PASS bdo.title: IDL set to NaN should not throw 
PASS bdo.title: IDL set to NaN followed by getAttribute() 
PASS bdo.title: IDL set to NaN followed by IDL get 
PASS bdo.title: IDL set to Infinity should not throw 
PASS bdo.title: IDL set to Infinity followed by getAttribute() 
PASS bdo.title: IDL set to Infinity followed by IDL get 
PASS bdo.title: IDL set to -Infinity should not throw 
PASS bdo.title: IDL set to -Infinity followed by getAttribute() 
PASS bdo.title: IDL set to -Infinity followed by IDL get 
PASS bdo.title: IDL set to "\0" should not throw 
PASS bdo.title: IDL set to "\0" followed by getAttribute() 
PASS bdo.title: IDL set to "\0" followed by IDL get 
PASS bdo.title: IDL set to null should not throw 
PASS bdo.title: IDL set to null followed by getAttribute() 
PASS bdo.title: IDL set to null followed by IDL get 
PASS bdo.title: IDL set to object "test-toString" should not throw 
PASS bdo.title: IDL set to object "test-toString" followed by getAttribute() 
PASS bdo.title: IDL set to object "test-toString" followed by IDL get 
PASS bdo.title: IDL set to object "test-valueOf" should not throw 
PASS bdo.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS bdo.title: IDL set to object "test-valueOf" followed by IDL get 
PASS bdo.lang: typeof IDL attribute 
PASS bdo.lang: IDL get with DOM attribute unset 
PASS bdo.lang: setAttribute() to "" followed by getAttribute() 
PASS bdo.lang: setAttribute() to "" followed by IDL get 
PASS bdo.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdo.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdo.lang: setAttribute() to undefined followed by getAttribute() 
PASS bdo.lang: setAttribute() to undefined followed by IDL get 
PASS bdo.lang: setAttribute() to 7 followed by getAttribute() 
PASS bdo.lang: setAttribute() to 7 followed by IDL get 
PASS bdo.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS bdo.lang: setAttribute() to 1.5 followed by IDL get 
PASS bdo.lang: setAttribute() to true followed by getAttribute() 
PASS bdo.lang: setAttribute() to true followed by IDL get 
PASS bdo.lang: setAttribute() to false followed by getAttribute() 
PASS bdo.lang: setAttribute() to false followed by IDL get 
PASS bdo.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS bdo.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS bdo.lang: setAttribute() to NaN followed by getAttribute() 
PASS bdo.lang: setAttribute() to NaN followed by IDL get 
PASS bdo.lang: setAttribute() to Infinity followed by getAttribute() 
PASS bdo.lang: setAttribute() to Infinity followed by IDL get 
PASS bdo.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS bdo.lang: setAttribute() to -Infinity followed by IDL get 
PASS bdo.lang: setAttribute() to "\0" followed by getAttribute() 
PASS bdo.lang: setAttribute() to "\0" followed by IDL get 
PASS bdo.lang: setAttribute() to null followed by getAttribute() 
PASS bdo.lang: setAttribute() to null followed by IDL get 
PASS bdo.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS bdo.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS bdo.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS bdo.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS bdo.lang: IDL set to "" should not throw 
PASS bdo.lang: IDL set to "" followed by getAttribute() 
PASS bdo.lang: IDL set to "" followed by IDL get 
PASS bdo.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS bdo.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdo.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdo.lang: IDL set to undefined should not throw 
PASS bdo.lang: IDL set to undefined followed by getAttribute() 
PASS bdo.lang: IDL set to undefined followed by IDL get 
PASS bdo.lang: IDL set to 7 should not throw 
PASS bdo.lang: IDL set to 7 followed by getAttribute() 
PASS bdo.lang: IDL set to 7 followed by IDL get 
PASS bdo.lang: IDL set to 1.5 should not throw 
PASS bdo.lang: IDL set to 1.5 followed by getAttribute() 
PASS bdo.lang: IDL set to 1.5 followed by IDL get 
PASS bdo.lang: IDL set to true should not throw 
PASS bdo.lang: IDL set to true followed by getAttribute() 
PASS bdo.lang: IDL set to true followed by IDL get 
PASS bdo.lang: IDL set to false should not throw 
PASS bdo.lang: IDL set to false followed by getAttribute() 
PASS bdo.lang: IDL set to false followed by IDL get 
PASS bdo.lang: IDL set to object "[object Object]" should not throw 
PASS bdo.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS bdo.lang: IDL set to object "[object Object]" followed by IDL get 
PASS bdo.lang: IDL set to NaN should not throw 
PASS bdo.lang: IDL set to NaN followed by getAttribute() 
PASS bdo.lang: IDL set to NaN followed by IDL get 
PASS bdo.lang: IDL set to Infinity should not throw 
PASS bdo.lang: IDL set to Infinity followed by getAttribute() 
PASS bdo.lang: IDL set to Infinity followed by IDL get 
PASS bdo.lang: IDL set to -Infinity should not throw 
PASS bdo.lang: IDL set to -Infinity followed by getAttribute() 
PASS bdo.lang: IDL set to -Infinity followed by IDL get 
PASS bdo.lang: IDL set to "\0" should not throw 
PASS bdo.lang: IDL set to "\0" followed by getAttribute() 
PASS bdo.lang: IDL set to "\0" followed by IDL get 
PASS bdo.lang: IDL set to null should not throw 
PASS bdo.lang: IDL set to null followed by getAttribute() 
PASS bdo.lang: IDL set to null followed by IDL get 
PASS bdo.lang: IDL set to object "test-toString" should not throw 
PASS bdo.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS bdo.lang: IDL set to object "test-toString" followed by IDL get 
PASS bdo.lang: IDL set to object "test-valueOf" should not throw 
PASS bdo.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS bdo.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS bdo.dir: typeof IDL attribute 
PASS bdo.dir: IDL get with DOM attribute unset 
PASS bdo.dir: setAttribute() to "" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "" followed by IDL get 
PASS bdo.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdo.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdo.dir: setAttribute() to undefined followed by getAttribute() 
PASS bdo.dir: setAttribute() to undefined followed by IDL get 
PASS bdo.dir: setAttribute() to 7 followed by getAttribute() 
PASS bdo.dir: setAttribute() to 7 followed by IDL get 
PASS bdo.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS bdo.dir: setAttribute() to 1.5 followed by IDL get 
PASS bdo.dir: setAttribute() to true followed by getAttribute() 
PASS bdo.dir: setAttribute() to true followed by IDL get 
PASS bdo.dir: setAttribute() to false followed by getAttribute() 
PASS bdo.dir: setAttribute() to false followed by IDL get 
PASS bdo.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS bdo.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS bdo.dir: setAttribute() to NaN followed by getAttribute() 
PASS bdo.dir: setAttribute() to NaN followed by IDL get 
PASS bdo.dir: setAttribute() to Infinity followed by getAttribute() 
PASS bdo.dir: setAttribute() to Infinity followed by IDL get 
PASS bdo.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS bdo.dir: setAttribute() to -Infinity followed by IDL get 
PASS bdo.dir: setAttribute() to "\0" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "\0" followed by IDL get 
PASS bdo.dir: setAttribute() to null followed by getAttribute() 
PASS bdo.dir: setAttribute() to null followed by IDL get 
PASS bdo.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS bdo.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS bdo.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS bdo.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS bdo.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "ltr" followed by IDL get 
PASS bdo.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "xltr" followed by IDL get 
PASS bdo.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS bdo.dir: setAttribute() to "tr" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "tr" followed by IDL get 
PASS bdo.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "LTR" followed by IDL get 
PASS bdo.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "rtl" followed by IDL get 
PASS bdo.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "xrtl" followed by IDL get 
PASS bdo.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS bdo.dir: setAttribute() to "tl" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "tl" followed by IDL get 
PASS bdo.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "RTL" followed by IDL get 
PASS bdo.dir: setAttribute() to "auto" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "auto" followed by IDL get 
PASS bdo.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "xauto" followed by IDL get 
PASS bdo.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "auto\0" followed by IDL get 
PASS bdo.dir: setAttribute() to "uto" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "uto" followed by IDL get 
PASS bdo.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS bdo.dir: setAttribute() to "AUTO" followed by IDL get 
PASS bdo.dir: IDL set to "" should not throw 
PASS bdo.dir: IDL set to "" followed by getAttribute() 
PASS bdo.dir: IDL set to "" followed by IDL get 
PASS bdo.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS bdo.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdo.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdo.dir: IDL set to undefined should not throw 
PASS bdo.dir: IDL set to undefined followed by getAttribute() 
PASS bdo.dir: IDL set to undefined followed by IDL get 
PASS bdo.dir: IDL set to 7 should not throw 
PASS bdo.dir: IDL set to 7 followed by getAttribute() 
PASS bdo.dir: IDL set to 7 followed by IDL get 
PASS bdo.dir: IDL set to 1.5 should not throw 
PASS bdo.dir: IDL set to 1.5 followed by getAttribute() 
PASS bdo.dir: IDL set to 1.5 followed by IDL get 
PASS bdo.dir: IDL set to true should not throw 
PASS bdo.dir: IDL set to true followed by getAttribute() 
PASS bdo.dir: IDL set to true followed by IDL get 
PASS bdo.dir: IDL set to false should not throw 
PASS bdo.dir: IDL set to false followed by getAttribute() 
PASS bdo.dir: IDL set to false followed by IDL get 
PASS bdo.dir: IDL set to object "[object Object]" should not throw 
PASS bdo.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS bdo.dir: IDL set to object "[object Object]" followed by IDL get 
PASS bdo.dir: IDL set to NaN should not throw 
PASS bdo.dir: IDL set to NaN followed by getAttribute() 
PASS bdo.dir: IDL set to NaN followed by IDL get 
PASS bdo.dir: IDL set to Infinity should not throw 
PASS bdo.dir: IDL set to Infinity followed by getAttribute() 
PASS bdo.dir: IDL set to Infinity followed by IDL get 
PASS bdo.dir: IDL set to -Infinity should not throw 
PASS bdo.dir: IDL set to -Infinity followed by getAttribute() 
PASS bdo.dir: IDL set to -Infinity followed by IDL get 
PASS bdo.dir: IDL set to "\0" should not throw 
PASS bdo.dir: IDL set to "\0" followed by getAttribute() 
PASS bdo.dir: IDL set to "\0" followed by IDL get 
PASS bdo.dir: IDL set to null should not throw 
PASS bdo.dir: IDL set to null followed by IDL get 
PASS bdo.dir: IDL set to object "test-toString" should not throw 
PASS bdo.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS bdo.dir: IDL set to object "test-toString" followed by IDL get 
PASS bdo.dir: IDL set to object "test-valueOf" should not throw 
PASS bdo.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS bdo.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS bdo.dir: IDL set to "ltr" should not throw 
PASS bdo.dir: IDL set to "ltr" followed by getAttribute() 
PASS bdo.dir: IDL set to "ltr" followed by IDL get 
PASS bdo.dir: IDL set to "xltr" should not throw 
PASS bdo.dir: IDL set to "xltr" followed by getAttribute() 
PASS bdo.dir: IDL set to "xltr" followed by IDL get 
PASS bdo.dir: IDL set to "ltr\0" should not throw 
PASS bdo.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS bdo.dir: IDL set to "ltr\0" followed by IDL get 
PASS bdo.dir: IDL set to "tr" should not throw 
PASS bdo.dir: IDL set to "tr" followed by getAttribute() 
PASS bdo.dir: IDL set to "tr" followed by IDL get 
PASS bdo.dir: IDL set to "LTR" should not throw 
PASS bdo.dir: IDL set to "LTR" followed by getAttribute() 
PASS bdo.dir: IDL set to "LTR" followed by IDL get 
PASS bdo.dir: IDL set to "rtl" should not throw 
PASS bdo.dir: IDL set to "rtl" followed by getAttribute() 
PASS bdo.dir: IDL set to "rtl" followed by IDL get 
PASS bdo.dir: IDL set to "xrtl" should not throw 
PASS bdo.dir: IDL set to "xrtl" followed by getAttribute() 
PASS bdo.dir: IDL set to "xrtl" followed by IDL get 
PASS bdo.dir: IDL set to "rtl\0" should not throw 
PASS bdo.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS bdo.dir: IDL set to "rtl\0" followed by IDL get 
PASS bdo.dir: IDL set to "tl" should not throw 
PASS bdo.dir: IDL set to "tl" followed by getAttribute() 
PASS bdo.dir: IDL set to "tl" followed by IDL get 
PASS bdo.dir: IDL set to "RTL" should not throw 
PASS bdo.dir: IDL set to "RTL" followed by getAttribute() 
PASS bdo.dir: IDL set to "RTL" followed by IDL get 
PASS bdo.dir: IDL set to "auto" should not throw 
PASS bdo.dir: IDL set to "auto" followed by getAttribute() 
PASS bdo.dir: IDL set to "auto" followed by IDL get 
PASS bdo.dir: IDL set to "xauto" should not throw 
PASS bdo.dir: IDL set to "xauto" followed by getAttribute() 
PASS bdo.dir: IDL set to "xauto" followed by IDL get 
PASS bdo.dir: IDL set to "auto\0" should not throw 
PASS bdo.dir: IDL set to "auto\0" followed by getAttribute() 
PASS bdo.dir: IDL set to "auto\0" followed by IDL get 
PASS bdo.dir: IDL set to "uto" should not throw 
PASS bdo.dir: IDL set to "uto" followed by getAttribute() 
PASS bdo.dir: IDL set to "uto" followed by IDL get 
PASS bdo.dir: IDL set to "AUTO" should not throw 
PASS bdo.dir: IDL set to "AUTO" followed by getAttribute() 
PASS bdo.dir: IDL set to "AUTO" followed by IDL get 
PASS bdo.className (<bdo class>): typeof IDL attribute 
PASS bdo.className (<bdo class>): IDL get with DOM attribute unset 
PASS bdo.className (<bdo class>): setAttribute() to "" followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to "" followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to undefined followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to undefined followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to 7 followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to 7 followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to 1.5 followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to 1.5 followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to true followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to true followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to false followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to false followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to NaN followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to NaN followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to Infinity followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to Infinity followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to -Infinity followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to -Infinity followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to "\0" followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to "\0" followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to null followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to null followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to object "test-toString" followed by IDL get 
PASS bdo.className (<bdo class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS bdo.className (<bdo class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to "" should not throw 
PASS bdo.className (<bdo class>): IDL set to "" followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to "" followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS bdo.className (<bdo class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to undefined should not throw 
PASS bdo.className (<bdo class>): IDL set to undefined followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to undefined followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to 7 should not throw 
PASS bdo.className (<bdo class>): IDL set to 7 followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to 7 followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to 1.5 should not throw 
PASS bdo.className (<bdo class>): IDL set to 1.5 followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to 1.5 followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to true should not throw 
PASS bdo.className (<bdo class>): IDL set to true followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to true followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to false should not throw 
PASS bdo.className (<bdo class>): IDL set to false followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to false followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to object "[object Object]" should not throw 
PASS bdo.className (<bdo class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to object "[object Object]" followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to NaN should not throw 
PASS bdo.className (<bdo class>): IDL set to NaN followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to NaN followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to Infinity should not throw 
PASS bdo.className (<bdo class>): IDL set to Infinity followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to Infinity followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to -Infinity should not throw 
PASS bdo.className (<bdo class>): IDL set to -Infinity followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to -Infinity followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to "\0" should not throw 
PASS bdo.className (<bdo class>): IDL set to "\0" followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to "\0" followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to null should not throw 
PASS bdo.className (<bdo class>): IDL set to null followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to null followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to object "test-toString" should not throw 
PASS bdo.className (<bdo class>): IDL set to object "test-toString" followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to object "test-toString" followed by IDL get 
PASS bdo.className (<bdo class>): IDL set to object "test-valueOf" should not throw 
PASS bdo.className (<bdo class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS bdo.className (<bdo class>): IDL set to object "test-valueOf" followed by IDL get 
PASS bdo.hidden: typeof IDL attribute 
PASS bdo.hidden: IDL get with DOM attribute unset 
PASS bdo.hidden: setAttribute() to "" followed by getAttribute() 
PASS bdo.hidden: setAttribute() to "" followed by IDL get 
PASS bdo.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS bdo.hidden: setAttribute() to " foo " followed by IDL get 
PASS bdo.hidden: setAttribute() to undefined followed by getAttribute() 
PASS bdo.hidden: setAttribute() to undefined followed by IDL get 
PASS bdo.hidden: setAttribute() to null followed by getAttribute() 
PASS bdo.hidden: setAttribute() to null followed by IDL get 
PASS bdo.hidden: setAttribute() to 7 followed by getAttribute() 
PASS bdo.hidden: setAttribute() to 7 followed by IDL get 
PASS bdo.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS bdo.hidden: setAttribute() to 1.5 followed by IDL get 
PASS bdo.hidden: setAttribute() to true followed by getAttribute() 
PASS bdo.hidden: setAttribute() to true followed by IDL get 
PASS bdo.hidden: setAttribute() to false followed by getAttribute() 
PASS bdo.hidden: setAttribute() to false followed by IDL get 
PASS bdo.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS bdo.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS bdo.hidden: setAttribute() to NaN followed by getAttribute() 
PASS bdo.hidden: setAttribute() to NaN followed by IDL get 
PASS bdo.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS bdo.hidden: setAttribute() to Infinity followed by IDL get 
PASS bdo.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS bdo.hidden: setAttribute() to -Infinity followed by IDL get 
PASS bdo.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS bdo.hidden: setAttribute() to "\0" followed by IDL get 
PASS bdo.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS bdo.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS bdo.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS bdo.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS bdo.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS bdo.hidden: setAttribute() to "hidden" followed by IDL get 
PASS bdo.hidden: IDL set to "" should not throw 
PASS bdo.hidden: IDL set to "" followed by hasAttribute() 
PASS bdo.hidden: IDL set to "" followed by IDL get 
PASS bdo.hidden: IDL set to " foo " should not throw 
PASS bdo.hidden: IDL set to " foo " followed by hasAttribute() 
PASS bdo.hidden: IDL set to " foo " followed by IDL get 
PASS bdo.hidden: IDL set to undefined should not throw 
PASS bdo.hidden: IDL set to undefined followed by hasAttribute() 
PASS bdo.hidden: IDL set to undefined followed by IDL get 
PASS bdo.hidden: IDL set to null should not throw 
PASS bdo.hidden: IDL set to null followed by hasAttribute() 
PASS bdo.hidden: IDL set to null followed by IDL get 
PASS bdo.hidden: IDL set to 7 should not throw 
PASS bdo.hidden: IDL set to 7 followed by hasAttribute() 
PASS bdo.hidden: IDL set to 7 followed by IDL get 
PASS bdo.hidden: IDL set to 1.5 should not throw 
PASS bdo.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS bdo.hidden: IDL set to 1.5 followed by IDL get 
PASS bdo.hidden: IDL set to true should not throw 
PASS bdo.hidden: IDL set to true followed by hasAttribute() 
PASS bdo.hidden: IDL set to true followed by IDL get 
PASS bdo.hidden: IDL set to false should not throw 
PASS bdo.hidden: IDL set to false followed by hasAttribute() 
PASS bdo.hidden: IDL set to false followed by IDL get 
PASS bdo.hidden: IDL set to object "[object Object]" should not throw 
PASS bdo.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS bdo.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS bdo.hidden: IDL set to NaN should not throw 
PASS bdo.hidden: IDL set to NaN followed by hasAttribute() 
PASS bdo.hidden: IDL set to NaN followed by IDL get 
PASS bdo.hidden: IDL set to Infinity should not throw 
PASS bdo.hidden: IDL set to Infinity followed by hasAttribute() 
PASS bdo.hidden: IDL set to Infinity followed by IDL get 
PASS bdo.hidden: IDL set to -Infinity should not throw 
PASS bdo.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS bdo.hidden: IDL set to -Infinity followed by IDL get 
PASS bdo.hidden: IDL set to "\0" should not throw 
PASS bdo.hidden: IDL set to "\0" followed by hasAttribute() 
PASS bdo.hidden: IDL set to "\0" followed by IDL get 
PASS bdo.hidden: IDL set to object "test-toString" should not throw 
PASS bdo.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS bdo.hidden: IDL set to object "test-toString" followed by IDL get 
PASS bdo.hidden: IDL set to object "test-valueOf" should not throw 
PASS bdo.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS bdo.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS bdo.accessKey: typeof IDL attribute 
PASS bdo.accessKey: IDL get with DOM attribute unset 
PASS bdo.accessKey: setAttribute() to "" followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to "" followed by IDL get 
PASS bdo.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdo.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to undefined followed by IDL get 
PASS bdo.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to 7 followed by IDL get 
PASS bdo.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS bdo.accessKey: setAttribute() to true followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to true followed by IDL get 
PASS bdo.accessKey: setAttribute() to false followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to false followed by IDL get 
PASS bdo.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS bdo.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to NaN followed by IDL get 
PASS bdo.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to Infinity followed by IDL get 
PASS bdo.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS bdo.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to "\0" followed by IDL get 
PASS bdo.accessKey: setAttribute() to null followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to null followed by IDL get 
PASS bdo.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS bdo.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS bdo.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS bdo.accessKey: IDL set to "" should not throw 
PASS bdo.accessKey: IDL set to "" followed by getAttribute() 
PASS bdo.accessKey: IDL set to "" followed by IDL get 
PASS bdo.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS bdo.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS bdo.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS bdo.accessKey: IDL set to undefined should not throw 
PASS bdo.accessKey: IDL set to undefined followed by getAttribute() 
PASS bdo.accessKey: IDL set to undefined followed by IDL get 
PASS bdo.accessKey: IDL set to 7 should not throw 
PASS bdo.accessKey: IDL set to 7 followed by getAttribute() 
PASS bdo.accessKey: IDL set to 7 followed by IDL get 
PASS bdo.accessKey: IDL set to 1.5 should not throw 
PASS bdo.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS bdo.accessKey: IDL set to 1.5 followed by IDL get 
PASS bdo.accessKey: IDL set to true should not throw 
PASS bdo.accessKey: IDL set to true followed by getAttribute() 
PASS bdo.accessKey: IDL set to true followed by IDL get 
PASS bdo.accessKey: IDL set to false should not throw 
PASS bdo.accessKey: IDL set to false followed by getAttribute() 
PASS bdo.accessKey: IDL set to false followed by IDL get 
PASS bdo.accessKey: IDL set to object "[object Object]" should not throw 
PASS bdo.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS bdo.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS bdo.accessKey: IDL set to NaN should not throw 
PASS bdo.accessKey: IDL set to NaN followed by getAttribute() 
PASS bdo.accessKey: IDL set to NaN followed by IDL get 
PASS bdo.accessKey: IDL set to Infinity should not throw 
PASS bdo.accessKey: IDL set to Infinity followed by getAttribute() 
PASS bdo.accessKey: IDL set to Infinity followed by IDL get 
PASS bdo.accessKey: IDL set to -Infinity should not throw 
PASS bdo.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS bdo.accessKey: IDL set to -Infinity followed by IDL get 
PASS bdo.accessKey: IDL set to "\0" should not throw 
PASS bdo.accessKey: IDL set to "\0" followed by getAttribute() 
PASS bdo.accessKey: IDL set to "\0" followed by IDL get 
PASS bdo.accessKey: IDL set to null should not throw 
PASS bdo.accessKey: IDL set to null followed by getAttribute() 
PASS bdo.accessKey: IDL set to null followed by IDL get 
PASS bdo.accessKey: IDL set to object "test-toString" should not throw 
PASS bdo.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS bdo.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS bdo.accessKey: IDL set to object "test-valueOf" should not throw 
PASS bdo.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS bdo.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS bdo.tabIndex: typeof IDL attribute 
PASS bdo.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to -36 followed by IDL get 
PASS bdo.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to -1 followed by IDL get 
PASS bdo.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to 0 followed by IDL get 
PASS bdo.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to 1 followed by IDL get 
PASS bdo.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL bdo.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS bdo.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL bdo.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS bdo.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS bdo.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS bdo.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to "0" followed by IDL get 
PASS bdo.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to "1" followed by IDL get 
PASS bdo.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS bdo.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS bdo.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS bdo.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS bdo.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS bdo.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS bdo.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS bdo.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS bdo.tabIndex: IDL set to -36 should not throw 
PASS bdo.tabIndex: IDL set to -36 followed by getAttribute() 
PASS bdo.tabIndex: IDL set to -36 followed by IDL get 
PASS bdo.tabIndex: IDL set to -1 should not throw 
PASS bdo.tabIndex: IDL set to -1 followed by getAttribute() 
PASS bdo.tabIndex: IDL set to -1 followed by IDL get 
PASS bdo.tabIndex: IDL set to 0 should not throw 
PASS bdo.tabIndex: IDL set to 0 followed by getAttribute() 
PASS bdo.tabIndex: IDL set to 0 followed by IDL get 
PASS bdo.tabIndex: IDL set to 1 should not throw 
PASS bdo.tabIndex: IDL set to 1 followed by getAttribute() 
PASS bdo.tabIndex: IDL set to 1 followed by IDL get 
PASS bdo.tabIndex: IDL set to 2147483647 should not throw 
PASS bdo.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL bdo.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS bdo.tabIndex: IDL set to -2147483648 should not throw 
PASS bdo.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL bdo.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL bdo.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL bdo.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to null followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to true followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to false followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL bdo.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS bdo.itemScope: IDL set to "" should not throw 
FAIL bdo.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL bdo.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS bdo.itemScope: IDL set to " foo " should not throw 
PASS bdo.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL bdo.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS bdo.itemScope: IDL set to undefined should not throw 
FAIL bdo.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL bdo.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS bdo.itemScope: IDL set to null should not throw 
FAIL bdo.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL bdo.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS bdo.itemScope: IDL set to 7 should not throw 
PASS bdo.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL bdo.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS bdo.itemScope: IDL set to 1.5 should not throw 
PASS bdo.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL bdo.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS bdo.itemScope: IDL set to true should not throw 
PASS bdo.itemScope: IDL set to true followed by hasAttribute() 
PASS bdo.itemScope: IDL set to true followed by IDL get 
PASS bdo.itemScope: IDL set to false should not throw 
FAIL bdo.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS bdo.itemScope: IDL set to false followed by IDL get 
PASS bdo.itemScope: IDL set to object "[object Object]" should not throw 
PASS bdo.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL bdo.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS bdo.itemScope: IDL set to NaN should not throw 
FAIL bdo.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL bdo.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS bdo.itemScope: IDL set to Infinity should not throw 
PASS bdo.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL bdo.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS bdo.itemScope: IDL set to -Infinity should not throw 
PASS bdo.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL bdo.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS bdo.itemScope: IDL set to "\0" should not throw 
PASS bdo.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL bdo.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS bdo.itemScope: IDL set to object "test-toString" should not throw 
PASS bdo.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL bdo.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS bdo.itemScope: IDL set to object "test-valueOf" should not throw 
PASS bdo.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL bdo.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL bdo.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL bdo.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to "" followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to true followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to false followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to null followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS bdo.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL bdo.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS bdo.itemId: IDL set to "" should not throw 
FAIL bdo.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL bdo.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS bdo.itemId: IDL set to " foo " should not throw 
FAIL bdo.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL bdo.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS bdo.itemId: IDL set to "http://site.example/" should not throw 
FAIL bdo.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS bdo.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS bdo.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL bdo.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL bdo.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS bdo.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL bdo.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL bdo.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS bdo.itemId: IDL set to undefined should not throw 
FAIL bdo.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL bdo.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS bdo.itemId: IDL set to 7 should not throw 
FAIL bdo.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL bdo.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS bdo.itemId: IDL set to 1.5 should not throw 
FAIL bdo.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL bdo.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS bdo.itemId: IDL set to true should not throw 
FAIL bdo.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL bdo.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS bdo.itemId: IDL set to false should not throw 
FAIL bdo.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL bdo.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS bdo.itemId: IDL set to object "[object Object]" should not throw 
FAIL bdo.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL bdo.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS bdo.itemId: IDL set to NaN should not throw 
FAIL bdo.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL bdo.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS bdo.itemId: IDL set to Infinity should not throw 
FAIL bdo.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL bdo.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS bdo.itemId: IDL set to -Infinity should not throw 
FAIL bdo.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL bdo.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS bdo.itemId: IDL set to "\0" should not throw 
FAIL bdo.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL bdo.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS bdo.itemId: IDL set to null should not throw 
FAIL bdo.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL bdo.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS bdo.itemId: IDL set to object "test-toString" should not throw 
FAIL bdo.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL bdo.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS bdo.itemId: IDL set to object "test-valueOf" should not throw 
PASS bdo.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL bdo.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS span.title: typeof IDL attribute 
PASS span.title: IDL get with DOM attribute unset 
PASS span.title: setAttribute() to "" followed by getAttribute() 
PASS span.title: setAttribute() to "" followed by IDL get 
PASS span.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS span.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS span.title: setAttribute() to undefined followed by getAttribute() 
PASS span.title: setAttribute() to undefined followed by IDL get 
PASS span.title: setAttribute() to 7 followed by getAttribute() 
PASS span.title: setAttribute() to 7 followed by IDL get 
PASS span.title: setAttribute() to 1.5 followed by getAttribute() 
PASS span.title: setAttribute() to 1.5 followed by IDL get 
PASS span.title: setAttribute() to true followed by getAttribute() 
PASS span.title: setAttribute() to true followed by IDL get 
PASS span.title: setAttribute() to false followed by getAttribute() 
PASS span.title: setAttribute() to false followed by IDL get 
PASS span.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS span.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS span.title: setAttribute() to NaN followed by getAttribute() 
PASS span.title: setAttribute() to NaN followed by IDL get 
PASS span.title: setAttribute() to Infinity followed by getAttribute() 
PASS span.title: setAttribute() to Infinity followed by IDL get 
PASS span.title: setAttribute() to -Infinity followed by getAttribute() 
PASS span.title: setAttribute() to -Infinity followed by IDL get 
PASS span.title: setAttribute() to "\0" followed by getAttribute() 
PASS span.title: setAttribute() to "\0" followed by IDL get 
PASS span.title: setAttribute() to null followed by getAttribute() 
PASS span.title: setAttribute() to null followed by IDL get 
PASS span.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS span.title: setAttribute() to object "test-toString" followed by IDL get 
PASS span.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS span.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS span.title: IDL set to "" should not throw 
PASS span.title: IDL set to "" followed by getAttribute() 
PASS span.title: IDL set to "" followed by IDL get 
PASS span.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS span.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS span.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS span.title: IDL set to undefined should not throw 
PASS span.title: IDL set to undefined followed by getAttribute() 
PASS span.title: IDL set to undefined followed by IDL get 
PASS span.title: IDL set to 7 should not throw 
PASS span.title: IDL set to 7 followed by getAttribute() 
PASS span.title: IDL set to 7 followed by IDL get 
PASS span.title: IDL set to 1.5 should not throw 
PASS span.title: IDL set to 1.5 followed by getAttribute() 
PASS span.title: IDL set to 1.5 followed by IDL get 
PASS span.title: IDL set to true should not throw 
PASS span.title: IDL set to true followed by getAttribute() 
PASS span.title: IDL set to true followed by IDL get 
PASS span.title: IDL set to false should not throw 
PASS span.title: IDL set to false followed by getAttribute() 
PASS span.title: IDL set to false followed by IDL get 
PASS span.title: IDL set to object "[object Object]" should not throw 
PASS span.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS span.title: IDL set to object "[object Object]" followed by IDL get 
PASS span.title: IDL set to NaN should not throw 
PASS span.title: IDL set to NaN followed by getAttribute() 
PASS span.title: IDL set to NaN followed by IDL get 
PASS span.title: IDL set to Infinity should not throw 
PASS span.title: IDL set to Infinity followed by getAttribute() 
PASS span.title: IDL set to Infinity followed by IDL get 
PASS span.title: IDL set to -Infinity should not throw 
PASS span.title: IDL set to -Infinity followed by getAttribute() 
PASS span.title: IDL set to -Infinity followed by IDL get 
PASS span.title: IDL set to "\0" should not throw 
PASS span.title: IDL set to "\0" followed by getAttribute() 
PASS span.title: IDL set to "\0" followed by IDL get 
PASS span.title: IDL set to null should not throw 
PASS span.title: IDL set to null followed by getAttribute() 
PASS span.title: IDL set to null followed by IDL get 
PASS span.title: IDL set to object "test-toString" should not throw 
PASS span.title: IDL set to object "test-toString" followed by getAttribute() 
PASS span.title: IDL set to object "test-toString" followed by IDL get 
PASS span.title: IDL set to object "test-valueOf" should not throw 
PASS span.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS span.title: IDL set to object "test-valueOf" followed by IDL get 
PASS span.lang: typeof IDL attribute 
PASS span.lang: IDL get with DOM attribute unset 
PASS span.lang: setAttribute() to "" followed by getAttribute() 
PASS span.lang: setAttribute() to "" followed by IDL get 
PASS span.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS span.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS span.lang: setAttribute() to undefined followed by getAttribute() 
PASS span.lang: setAttribute() to undefined followed by IDL get 
PASS span.lang: setAttribute() to 7 followed by getAttribute() 
PASS span.lang: setAttribute() to 7 followed by IDL get 
PASS span.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS span.lang: setAttribute() to 1.5 followed by IDL get 
PASS span.lang: setAttribute() to true followed by getAttribute() 
PASS span.lang: setAttribute() to true followed by IDL get 
PASS span.lang: setAttribute() to false followed by getAttribute() 
PASS span.lang: setAttribute() to false followed by IDL get 
PASS span.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS span.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS span.lang: setAttribute() to NaN followed by getAttribute() 
PASS span.lang: setAttribute() to NaN followed by IDL get 
PASS span.lang: setAttribute() to Infinity followed by getAttribute() 
PASS span.lang: setAttribute() to Infinity followed by IDL get 
PASS span.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS span.lang: setAttribute() to -Infinity followed by IDL get 
PASS span.lang: setAttribute() to "\0" followed by getAttribute() 
PASS span.lang: setAttribute() to "\0" followed by IDL get 
PASS span.lang: setAttribute() to null followed by getAttribute() 
PASS span.lang: setAttribute() to null followed by IDL get 
PASS span.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS span.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS span.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS span.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS span.lang: IDL set to "" should not throw 
PASS span.lang: IDL set to "" followed by getAttribute() 
PASS span.lang: IDL set to "" followed by IDL get 
PASS span.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS span.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS span.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS span.lang: IDL set to undefined should not throw 
PASS span.lang: IDL set to undefined followed by getAttribute() 
PASS span.lang: IDL set to undefined followed by IDL get 
PASS span.lang: IDL set to 7 should not throw 
PASS span.lang: IDL set to 7 followed by getAttribute() 
PASS span.lang: IDL set to 7 followed by IDL get 
PASS span.lang: IDL set to 1.5 should not throw 
PASS span.lang: IDL set to 1.5 followed by getAttribute() 
PASS span.lang: IDL set to 1.5 followed by IDL get 
PASS span.lang: IDL set to true should not throw 
PASS span.lang: IDL set to true followed by getAttribute() 
PASS span.lang: IDL set to true followed by IDL get 
PASS span.lang: IDL set to false should not throw 
PASS span.lang: IDL set to false followed by getAttribute() 
PASS span.lang: IDL set to false followed by IDL get 
PASS span.lang: IDL set to object "[object Object]" should not throw 
PASS span.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS span.lang: IDL set to object "[object Object]" followed by IDL get 
PASS span.lang: IDL set to NaN should not throw 
PASS span.lang: IDL set to NaN followed by getAttribute() 
PASS span.lang: IDL set to NaN followed by IDL get 
PASS span.lang: IDL set to Infinity should not throw 
PASS span.lang: IDL set to Infinity followed by getAttribute() 
PASS span.lang: IDL set to Infinity followed by IDL get 
PASS span.lang: IDL set to -Infinity should not throw 
PASS span.lang: IDL set to -Infinity followed by getAttribute() 
PASS span.lang: IDL set to -Infinity followed by IDL get 
PASS span.lang: IDL set to "\0" should not throw 
PASS span.lang: IDL set to "\0" followed by getAttribute() 
PASS span.lang: IDL set to "\0" followed by IDL get 
PASS span.lang: IDL set to null should not throw 
PASS span.lang: IDL set to null followed by getAttribute() 
PASS span.lang: IDL set to null followed by IDL get 
PASS span.lang: IDL set to object "test-toString" should not throw 
PASS span.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS span.lang: IDL set to object "test-toString" followed by IDL get 
PASS span.lang: IDL set to object "test-valueOf" should not throw 
PASS span.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS span.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS span.dir: typeof IDL attribute 
PASS span.dir: IDL get with DOM attribute unset 
PASS span.dir: setAttribute() to "" followed by getAttribute() 
PASS span.dir: setAttribute() to "" followed by IDL get 
PASS span.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS span.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS span.dir: setAttribute() to undefined followed by getAttribute() 
PASS span.dir: setAttribute() to undefined followed by IDL get 
PASS span.dir: setAttribute() to 7 followed by getAttribute() 
PASS span.dir: setAttribute() to 7 followed by IDL get 
PASS span.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS span.dir: setAttribute() to 1.5 followed by IDL get 
PASS span.dir: setAttribute() to true followed by getAttribute() 
PASS span.dir: setAttribute() to true followed by IDL get 
PASS span.dir: setAttribute() to false followed by getAttribute() 
PASS span.dir: setAttribute() to false followed by IDL get 
PASS span.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS span.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS span.dir: setAttribute() to NaN followed by getAttribute() 
PASS span.dir: setAttribute() to NaN followed by IDL get 
PASS span.dir: setAttribute() to Infinity followed by getAttribute() 
PASS span.dir: setAttribute() to Infinity followed by IDL get 
PASS span.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS span.dir: setAttribute() to -Infinity followed by IDL get 
PASS span.dir: setAttribute() to "\0" followed by getAttribute() 
PASS span.dir: setAttribute() to "\0" followed by IDL get 
PASS span.dir: setAttribute() to null followed by getAttribute() 
PASS span.dir: setAttribute() to null followed by IDL get 
PASS span.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS span.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS span.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS span.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS span.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS span.dir: setAttribute() to "ltr" followed by IDL get 
PASS span.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS span.dir: setAttribute() to "xltr" followed by IDL get 
PASS span.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS span.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS span.dir: setAttribute() to "tr" followed by getAttribute() 
PASS span.dir: setAttribute() to "tr" followed by IDL get 
PASS span.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS span.dir: setAttribute() to "LTR" followed by IDL get 
PASS span.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS span.dir: setAttribute() to "rtl" followed by IDL get 
PASS span.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS span.dir: setAttribute() to "xrtl" followed by IDL get 
PASS span.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS span.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS span.dir: setAttribute() to "tl" followed by getAttribute() 
PASS span.dir: setAttribute() to "tl" followed by IDL get 
PASS span.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS span.dir: setAttribute() to "RTL" followed by IDL get 
PASS span.dir: setAttribute() to "auto" followed by getAttribute() 
PASS span.dir: setAttribute() to "auto" followed by IDL get 
PASS span.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS span.dir: setAttribute() to "xauto" followed by IDL get 
PASS span.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS span.dir: setAttribute() to "auto\0" followed by IDL get 
PASS span.dir: setAttribute() to "uto" followed by getAttribute() 
PASS span.dir: setAttribute() to "uto" followed by IDL get 
PASS span.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS span.dir: setAttribute() to "AUTO" followed by IDL get 
PASS span.dir: IDL set to "" should not throw 
PASS span.dir: IDL set to "" followed by getAttribute() 
PASS span.dir: IDL set to "" followed by IDL get 
PASS span.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS span.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS span.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS span.dir: IDL set to undefined should not throw 
PASS span.dir: IDL set to undefined followed by getAttribute() 
PASS span.dir: IDL set to undefined followed by IDL get 
PASS span.dir: IDL set to 7 should not throw 
PASS span.dir: IDL set to 7 followed by getAttribute() 
PASS span.dir: IDL set to 7 followed by IDL get 
PASS span.dir: IDL set to 1.5 should not throw 
PASS span.dir: IDL set to 1.5 followed by getAttribute() 
PASS span.dir: IDL set to 1.5 followed by IDL get 
PASS span.dir: IDL set to true should not throw 
PASS span.dir: IDL set to true followed by getAttribute() 
PASS span.dir: IDL set to true followed by IDL get 
PASS span.dir: IDL set to false should not throw 
PASS span.dir: IDL set to false followed by getAttribute() 
PASS span.dir: IDL set to false followed by IDL get 
PASS span.dir: IDL set to object "[object Object]" should not throw 
PASS span.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS span.dir: IDL set to object "[object Object]" followed by IDL get 
PASS span.dir: IDL set to NaN should not throw 
PASS span.dir: IDL set to NaN followed by getAttribute() 
PASS span.dir: IDL set to NaN followed by IDL get 
PASS span.dir: IDL set to Infinity should not throw 
PASS span.dir: IDL set to Infinity followed by getAttribute() 
PASS span.dir: IDL set to Infinity followed by IDL get 
PASS span.dir: IDL set to -Infinity should not throw 
PASS span.dir: IDL set to -Infinity followed by getAttribute() 
PASS span.dir: IDL set to -Infinity followed by IDL get 
PASS span.dir: IDL set to "\0" should not throw 
PASS span.dir: IDL set to "\0" followed by getAttribute() 
PASS span.dir: IDL set to "\0" followed by IDL get 
PASS span.dir: IDL set to null should not throw 
PASS span.dir: IDL set to null followed by IDL get 
PASS span.dir: IDL set to object "test-toString" should not throw 
PASS span.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS span.dir: IDL set to object "test-toString" followed by IDL get 
PASS span.dir: IDL set to object "test-valueOf" should not throw 
PASS span.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS span.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS span.dir: IDL set to "ltr" should not throw 
PASS span.dir: IDL set to "ltr" followed by getAttribute() 
PASS span.dir: IDL set to "ltr" followed by IDL get 
PASS span.dir: IDL set to "xltr" should not throw 
PASS span.dir: IDL set to "xltr" followed by getAttribute() 
PASS span.dir: IDL set to "xltr" followed by IDL get 
PASS span.dir: IDL set to "ltr\0" should not throw 
PASS span.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS span.dir: IDL set to "ltr\0" followed by IDL get 
PASS span.dir: IDL set to "tr" should not throw 
PASS span.dir: IDL set to "tr" followed by getAttribute() 
PASS span.dir: IDL set to "tr" followed by IDL get 
PASS span.dir: IDL set to "LTR" should not throw 
PASS span.dir: IDL set to "LTR" followed by getAttribute() 
PASS span.dir: IDL set to "LTR" followed by IDL get 
PASS span.dir: IDL set to "rtl" should not throw 
PASS span.dir: IDL set to "rtl" followed by getAttribute() 
PASS span.dir: IDL set to "rtl" followed by IDL get 
PASS span.dir: IDL set to "xrtl" should not throw 
PASS span.dir: IDL set to "xrtl" followed by getAttribute() 
PASS span.dir: IDL set to "xrtl" followed by IDL get 
PASS span.dir: IDL set to "rtl\0" should not throw 
PASS span.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS span.dir: IDL set to "rtl\0" followed by IDL get 
PASS span.dir: IDL set to "tl" should not throw 
PASS span.dir: IDL set to "tl" followed by getAttribute() 
PASS span.dir: IDL set to "tl" followed by IDL get 
PASS span.dir: IDL set to "RTL" should not throw 
PASS span.dir: IDL set to "RTL" followed by getAttribute() 
PASS span.dir: IDL set to "RTL" followed by IDL get 
PASS span.dir: IDL set to "auto" should not throw 
PASS span.dir: IDL set to "auto" followed by getAttribute() 
PASS span.dir: IDL set to "auto" followed by IDL get 
PASS span.dir: IDL set to "xauto" should not throw 
PASS span.dir: IDL set to "xauto" followed by getAttribute() 
PASS span.dir: IDL set to "xauto" followed by IDL get 
PASS span.dir: IDL set to "auto\0" should not throw 
PASS span.dir: IDL set to "auto\0" followed by getAttribute() 
PASS span.dir: IDL set to "auto\0" followed by IDL get 
PASS span.dir: IDL set to "uto" should not throw 
PASS span.dir: IDL set to "uto" followed by getAttribute() 
PASS span.dir: IDL set to "uto" followed by IDL get 
PASS span.dir: IDL set to "AUTO" should not throw 
PASS span.dir: IDL set to "AUTO" followed by getAttribute() 
PASS span.dir: IDL set to "AUTO" followed by IDL get 
PASS span.className (<span class>): typeof IDL attribute 
PASS span.className (<span class>): IDL get with DOM attribute unset 
PASS span.className (<span class>): setAttribute() to "" followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to "" followed by IDL get 
PASS span.className (<span class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS span.className (<span class>): setAttribute() to undefined followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to undefined followed by IDL get 
PASS span.className (<span class>): setAttribute() to 7 followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to 7 followed by IDL get 
PASS span.className (<span class>): setAttribute() to 1.5 followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to 1.5 followed by IDL get 
PASS span.className (<span class>): setAttribute() to true followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to true followed by IDL get 
PASS span.className (<span class>): setAttribute() to false followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to false followed by IDL get 
PASS span.className (<span class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS span.className (<span class>): setAttribute() to NaN followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to NaN followed by IDL get 
PASS span.className (<span class>): setAttribute() to Infinity followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to Infinity followed by IDL get 
PASS span.className (<span class>): setAttribute() to -Infinity followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to -Infinity followed by IDL get 
PASS span.className (<span class>): setAttribute() to "\0" followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to "\0" followed by IDL get 
PASS span.className (<span class>): setAttribute() to null followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to null followed by IDL get 
PASS span.className (<span class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to object "test-toString" followed by IDL get 
PASS span.className (<span class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS span.className (<span class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS span.className (<span class>): IDL set to "" should not throw 
PASS span.className (<span class>): IDL set to "" followed by getAttribute() 
PASS span.className (<span class>): IDL set to "" followed by IDL get 
PASS span.className (<span class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS span.className (<span class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS span.className (<span class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS span.className (<span class>): IDL set to undefined should not throw 
PASS span.className (<span class>): IDL set to undefined followed by getAttribute() 
PASS span.className (<span class>): IDL set to undefined followed by IDL get 
PASS span.className (<span class>): IDL set to 7 should not throw 
PASS span.className (<span class>): IDL set to 7 followed by getAttribute() 
PASS span.className (<span class>): IDL set to 7 followed by IDL get 
PASS span.className (<span class>): IDL set to 1.5 should not throw 
PASS span.className (<span class>): IDL set to 1.5 followed by getAttribute() 
PASS span.className (<span class>): IDL set to 1.5 followed by IDL get 
PASS span.className (<span class>): IDL set to true should not throw 
PASS span.className (<span class>): IDL set to true followed by getAttribute() 
PASS span.className (<span class>): IDL set to true followed by IDL get 
PASS span.className (<span class>): IDL set to false should not throw 
PASS span.className (<span class>): IDL set to false followed by getAttribute() 
PASS span.className (<span class>): IDL set to false followed by IDL get 
PASS span.className (<span class>): IDL set to object "[object Object]" should not throw 
PASS span.className (<span class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS span.className (<span class>): IDL set to object "[object Object]" followed by IDL get 
PASS span.className (<span class>): IDL set to NaN should not throw 
PASS span.className (<span class>): IDL set to NaN followed by getAttribute() 
PASS span.className (<span class>): IDL set to NaN followed by IDL get 
PASS span.className (<span class>): IDL set to Infinity should not throw 
PASS span.className (<span class>): IDL set to Infinity followed by getAttribute() 
PASS span.className (<span class>): IDL set to Infinity followed by IDL get 
PASS span.className (<span class>): IDL set to -Infinity should not throw 
PASS span.className (<span class>): IDL set to -Infinity followed by getAttribute() 
PASS span.className (<span class>): IDL set to -Infinity followed by IDL get 
PASS span.className (<span class>): IDL set to "\0" should not throw 
PASS span.className (<span class>): IDL set to "\0" followed by getAttribute() 
PASS span.className (<span class>): IDL set to "\0" followed by IDL get 
PASS span.className (<span class>): IDL set to null should not throw 
PASS span.className (<span class>): IDL set to null followed by getAttribute() 
PASS span.className (<span class>): IDL set to null followed by IDL get 
PASS span.className (<span class>): IDL set to object "test-toString" should not throw 
PASS span.className (<span class>): IDL set to object "test-toString" followed by getAttribute() 
PASS span.className (<span class>): IDL set to object "test-toString" followed by IDL get 
PASS span.className (<span class>): IDL set to object "test-valueOf" should not throw 
PASS span.className (<span class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS span.className (<span class>): IDL set to object "test-valueOf" followed by IDL get 
PASS span.hidden: typeof IDL attribute 
PASS span.hidden: IDL get with DOM attribute unset 
PASS span.hidden: setAttribute() to "" followed by getAttribute() 
PASS span.hidden: setAttribute() to "" followed by IDL get 
PASS span.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS span.hidden: setAttribute() to " foo " followed by IDL get 
PASS span.hidden: setAttribute() to undefined followed by getAttribute() 
PASS span.hidden: setAttribute() to undefined followed by IDL get 
PASS span.hidden: setAttribute() to null followed by getAttribute() 
PASS span.hidden: setAttribute() to null followed by IDL get 
PASS span.hidden: setAttribute() to 7 followed by getAttribute() 
PASS span.hidden: setAttribute() to 7 followed by IDL get 
PASS span.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS span.hidden: setAttribute() to 1.5 followed by IDL get 
PASS span.hidden: setAttribute() to true followed by getAttribute() 
PASS span.hidden: setAttribute() to true followed by IDL get 
PASS span.hidden: setAttribute() to false followed by getAttribute() 
PASS span.hidden: setAttribute() to false followed by IDL get 
PASS span.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS span.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS span.hidden: setAttribute() to NaN followed by getAttribute() 
PASS span.hidden: setAttribute() to NaN followed by IDL get 
PASS span.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS span.hidden: setAttribute() to Infinity followed by IDL get 
PASS span.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS span.hidden: setAttribute() to -Infinity followed by IDL get 
PASS span.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS span.hidden: setAttribute() to "\0" followed by IDL get 
PASS span.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS span.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS span.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS span.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS span.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS span.hidden: setAttribute() to "hidden" followed by IDL get 
PASS span.hidden: IDL set to "" should not throw 
PASS span.hidden: IDL set to "" followed by hasAttribute() 
PASS span.hidden: IDL set to "" followed by IDL get 
PASS span.hidden: IDL set to " foo " should not throw 
PASS span.hidden: IDL set to " foo " followed by hasAttribute() 
PASS span.hidden: IDL set to " foo " followed by IDL get 
PASS span.hidden: IDL set to undefined should not throw 
PASS span.hidden: IDL set to undefined followed by hasAttribute() 
PASS span.hidden: IDL set to undefined followed by IDL get 
PASS span.hidden: IDL set to null should not throw 
PASS span.hidden: IDL set to null followed by hasAttribute() 
PASS span.hidden: IDL set to null followed by IDL get 
PASS span.hidden: IDL set to 7 should not throw 
PASS span.hidden: IDL set to 7 followed by hasAttribute() 
PASS span.hidden: IDL set to 7 followed by IDL get 
PASS span.hidden: IDL set to 1.5 should not throw 
PASS span.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS span.hidden: IDL set to 1.5 followed by IDL get 
PASS span.hidden: IDL set to true should not throw 
PASS span.hidden: IDL set to true followed by hasAttribute() 
PASS span.hidden: IDL set to true followed by IDL get 
PASS span.hidden: IDL set to false should not throw 
PASS span.hidden: IDL set to false followed by hasAttribute() 
PASS span.hidden: IDL set to false followed by IDL get 
PASS span.hidden: IDL set to object "[object Object]" should not throw 
PASS span.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS span.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS span.hidden: IDL set to NaN should not throw 
PASS span.hidden: IDL set to NaN followed by hasAttribute() 
PASS span.hidden: IDL set to NaN followed by IDL get 
PASS span.hidden: IDL set to Infinity should not throw 
PASS span.hidden: IDL set to Infinity followed by hasAttribute() 
PASS span.hidden: IDL set to Infinity followed by IDL get 
PASS span.hidden: IDL set to -Infinity should not throw 
PASS span.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS span.hidden: IDL set to -Infinity followed by IDL get 
PASS span.hidden: IDL set to "\0" should not throw 
PASS span.hidden: IDL set to "\0" followed by hasAttribute() 
PASS span.hidden: IDL set to "\0" followed by IDL get 
PASS span.hidden: IDL set to object "test-toString" should not throw 
PASS span.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS span.hidden: IDL set to object "test-toString" followed by IDL get 
PASS span.hidden: IDL set to object "test-valueOf" should not throw 
PASS span.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS span.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS span.accessKey: typeof IDL attribute 
PASS span.accessKey: IDL get with DOM attribute unset 
PASS span.accessKey: setAttribute() to "" followed by getAttribute() 
PASS span.accessKey: setAttribute() to "" followed by IDL get 
PASS span.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS span.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS span.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS span.accessKey: setAttribute() to undefined followed by IDL get 
PASS span.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS span.accessKey: setAttribute() to 7 followed by IDL get 
PASS span.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS span.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS span.accessKey: setAttribute() to true followed by getAttribute() 
PASS span.accessKey: setAttribute() to true followed by IDL get 
PASS span.accessKey: setAttribute() to false followed by getAttribute() 
PASS span.accessKey: setAttribute() to false followed by IDL get 
PASS span.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS span.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS span.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS span.accessKey: setAttribute() to NaN followed by IDL get 
PASS span.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS span.accessKey: setAttribute() to Infinity followed by IDL get 
PASS span.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS span.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS span.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS span.accessKey: setAttribute() to "\0" followed by IDL get 
PASS span.accessKey: setAttribute() to null followed by getAttribute() 
PASS span.accessKey: setAttribute() to null followed by IDL get 
PASS span.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS span.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS span.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS span.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS span.accessKey: IDL set to "" should not throw 
PASS span.accessKey: IDL set to "" followed by getAttribute() 
PASS span.accessKey: IDL set to "" followed by IDL get 
PASS span.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS span.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS span.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS span.accessKey: IDL set to undefined should not throw 
PASS span.accessKey: IDL set to undefined followed by getAttribute() 
PASS span.accessKey: IDL set to undefined followed by IDL get 
PASS span.accessKey: IDL set to 7 should not throw 
PASS span.accessKey: IDL set to 7 followed by getAttribute() 
PASS span.accessKey: IDL set to 7 followed by IDL get 
PASS span.accessKey: IDL set to 1.5 should not throw 
PASS span.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS span.accessKey: IDL set to 1.5 followed by IDL get 
PASS span.accessKey: IDL set to true should not throw 
PASS span.accessKey: IDL set to true followed by getAttribute() 
PASS span.accessKey: IDL set to true followed by IDL get 
PASS span.accessKey: IDL set to false should not throw 
PASS span.accessKey: IDL set to false followed by getAttribute() 
PASS span.accessKey: IDL set to false followed by IDL get 
PASS span.accessKey: IDL set to object "[object Object]" should not throw 
PASS span.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS span.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS span.accessKey: IDL set to NaN should not throw 
PASS span.accessKey: IDL set to NaN followed by getAttribute() 
PASS span.accessKey: IDL set to NaN followed by IDL get 
PASS span.accessKey: IDL set to Infinity should not throw 
PASS span.accessKey: IDL set to Infinity followed by getAttribute() 
PASS span.accessKey: IDL set to Infinity followed by IDL get 
PASS span.accessKey: IDL set to -Infinity should not throw 
PASS span.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS span.accessKey: IDL set to -Infinity followed by IDL get 
PASS span.accessKey: IDL set to "\0" should not throw 
PASS span.accessKey: IDL set to "\0" followed by getAttribute() 
PASS span.accessKey: IDL set to "\0" followed by IDL get 
PASS span.accessKey: IDL set to null should not throw 
PASS span.accessKey: IDL set to null followed by getAttribute() 
PASS span.accessKey: IDL set to null followed by IDL get 
PASS span.accessKey: IDL set to object "test-toString" should not throw 
PASS span.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS span.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS span.accessKey: IDL set to object "test-valueOf" should not throw 
PASS span.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS span.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS span.tabIndex: typeof IDL attribute 
PASS span.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS span.tabIndex: setAttribute() to -36 followed by IDL get 
PASS span.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS span.tabIndex: setAttribute() to -1 followed by IDL get 
PASS span.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS span.tabIndex: setAttribute() to 0 followed by IDL get 
PASS span.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS span.tabIndex: setAttribute() to 1 followed by IDL get 
PASS span.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL span.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS span.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL span.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS span.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS span.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS span.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS span.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS span.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS span.tabIndex: setAttribute() to "0" followed by IDL get 
PASS span.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS span.tabIndex: setAttribute() to "1" followed by IDL get 
PASS span.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS span.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS span.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS span.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS span.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS span.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS span.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS span.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS span.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS span.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS span.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS span.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS span.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS span.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS span.tabIndex: IDL set to -36 should not throw 
PASS span.tabIndex: IDL set to -36 followed by getAttribute() 
PASS span.tabIndex: IDL set to -36 followed by IDL get 
PASS span.tabIndex: IDL set to -1 should not throw 
PASS span.tabIndex: IDL set to -1 followed by getAttribute() 
PASS span.tabIndex: IDL set to -1 followed by IDL get 
PASS span.tabIndex: IDL set to 0 should not throw 
PASS span.tabIndex: IDL set to 0 followed by getAttribute() 
PASS span.tabIndex: IDL set to 0 followed by IDL get 
PASS span.tabIndex: IDL set to 1 should not throw 
PASS span.tabIndex: IDL set to 1 followed by getAttribute() 
PASS span.tabIndex: IDL set to 1 followed by IDL get 
PASS span.tabIndex: IDL set to 2147483647 should not throw 
PASS span.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL span.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS span.tabIndex: IDL set to -2147483648 should not throw 
PASS span.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL span.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL span.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL span.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS span.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL span.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL span.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL span.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to null followed by getAttribute() 
FAIL span.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL span.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL span.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to true followed by getAttribute() 
FAIL span.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to false followed by getAttribute() 
FAIL span.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL span.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL span.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL span.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL span.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL span.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL span.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL span.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL span.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS span.itemScope: IDL set to "" should not throw 
FAIL span.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL span.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS span.itemScope: IDL set to " foo " should not throw 
PASS span.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL span.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS span.itemScope: IDL set to undefined should not throw 
FAIL span.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL span.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS span.itemScope: IDL set to null should not throw 
FAIL span.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL span.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS span.itemScope: IDL set to 7 should not throw 
PASS span.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL span.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS span.itemScope: IDL set to 1.5 should not throw 
PASS span.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL span.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS span.itemScope: IDL set to true should not throw 
PASS span.itemScope: IDL set to true followed by hasAttribute() 
PASS span.itemScope: IDL set to true followed by IDL get 
PASS span.itemScope: IDL set to false should not throw 
FAIL span.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS span.itemScope: IDL set to false followed by IDL get 
PASS span.itemScope: IDL set to object "[object Object]" should not throw 
PASS span.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL span.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS span.itemScope: IDL set to NaN should not throw 
FAIL span.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL span.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS span.itemScope: IDL set to Infinity should not throw 
PASS span.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL span.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS span.itemScope: IDL set to -Infinity should not throw 
PASS span.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL span.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS span.itemScope: IDL set to "\0" should not throw 
PASS span.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL span.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS span.itemScope: IDL set to object "test-toString" should not throw 
PASS span.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL span.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS span.itemScope: IDL set to object "test-valueOf" should not throw 
PASS span.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL span.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL span.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL span.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS span.itemId: setAttribute() to "" followed by getAttribute() 
FAIL span.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS span.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL span.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS span.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL span.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS span.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL span.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS span.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL span.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS span.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL span.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS span.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL span.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS span.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL span.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS span.itemId: setAttribute() to true followed by getAttribute() 
FAIL span.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS span.itemId: setAttribute() to false followed by getAttribute() 
FAIL span.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS span.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL span.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS span.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL span.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS span.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL span.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS span.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL span.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS span.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL span.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS span.itemId: setAttribute() to null followed by getAttribute() 
FAIL span.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS span.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL span.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS span.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL span.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS span.itemId: IDL set to "" should not throw 
FAIL span.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL span.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS span.itemId: IDL set to " foo " should not throw 
FAIL span.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL span.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS span.itemId: IDL set to "http://site.example/" should not throw 
FAIL span.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS span.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS span.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL span.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL span.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS span.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL span.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL span.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS span.itemId: IDL set to undefined should not throw 
FAIL span.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL span.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS span.itemId: IDL set to 7 should not throw 
FAIL span.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL span.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS span.itemId: IDL set to 1.5 should not throw 
FAIL span.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL span.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS span.itemId: IDL set to true should not throw 
FAIL span.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL span.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS span.itemId: IDL set to false should not throw 
FAIL span.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL span.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS span.itemId: IDL set to object "[object Object]" should not throw 
FAIL span.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL span.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS span.itemId: IDL set to NaN should not throw 
FAIL span.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL span.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS span.itemId: IDL set to Infinity should not throw 
FAIL span.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL span.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS span.itemId: IDL set to -Infinity should not throw 
FAIL span.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL span.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS span.itemId: IDL set to "\0" should not throw 
FAIL span.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL span.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS span.itemId: IDL set to null should not throw 
FAIL span.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL span.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS span.itemId: IDL set to object "test-toString" should not throw 
FAIL span.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL span.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS span.itemId: IDL set to object "test-valueOf" should not throw 
PASS span.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL span.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS br.title: typeof IDL attribute 
PASS br.title: IDL get with DOM attribute unset 
PASS br.title: setAttribute() to "" followed by getAttribute() 
PASS br.title: setAttribute() to "" followed by IDL get 
PASS br.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS br.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS br.title: setAttribute() to undefined followed by getAttribute() 
PASS br.title: setAttribute() to undefined followed by IDL get 
PASS br.title: setAttribute() to 7 followed by getAttribute() 
PASS br.title: setAttribute() to 7 followed by IDL get 
PASS br.title: setAttribute() to 1.5 followed by getAttribute() 
PASS br.title: setAttribute() to 1.5 followed by IDL get 
PASS br.title: setAttribute() to true followed by getAttribute() 
PASS br.title: setAttribute() to true followed by IDL get 
PASS br.title: setAttribute() to false followed by getAttribute() 
PASS br.title: setAttribute() to false followed by IDL get 
PASS br.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS br.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS br.title: setAttribute() to NaN followed by getAttribute() 
PASS br.title: setAttribute() to NaN followed by IDL get 
PASS br.title: setAttribute() to Infinity followed by getAttribute() 
PASS br.title: setAttribute() to Infinity followed by IDL get 
PASS br.title: setAttribute() to -Infinity followed by getAttribute() 
PASS br.title: setAttribute() to -Infinity followed by IDL get 
PASS br.title: setAttribute() to "\0" followed by getAttribute() 
PASS br.title: setAttribute() to "\0" followed by IDL get 
PASS br.title: setAttribute() to null followed by getAttribute() 
PASS br.title: setAttribute() to null followed by IDL get 
PASS br.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS br.title: setAttribute() to object "test-toString" followed by IDL get 
PASS br.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS br.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS br.title: IDL set to "" should not throw 
PASS br.title: IDL set to "" followed by getAttribute() 
PASS br.title: IDL set to "" followed by IDL get 
PASS br.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS br.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS br.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS br.title: IDL set to undefined should not throw 
PASS br.title: IDL set to undefined followed by getAttribute() 
PASS br.title: IDL set to undefined followed by IDL get 
PASS br.title: IDL set to 7 should not throw 
PASS br.title: IDL set to 7 followed by getAttribute() 
PASS br.title: IDL set to 7 followed by IDL get 
PASS br.title: IDL set to 1.5 should not throw 
PASS br.title: IDL set to 1.5 followed by getAttribute() 
PASS br.title: IDL set to 1.5 followed by IDL get 
PASS br.title: IDL set to true should not throw 
PASS br.title: IDL set to true followed by getAttribute() 
PASS br.title: IDL set to true followed by IDL get 
PASS br.title: IDL set to false should not throw 
PASS br.title: IDL set to false followed by getAttribute() 
PASS br.title: IDL set to false followed by IDL get 
PASS br.title: IDL set to object "[object Object]" should not throw 
PASS br.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS br.title: IDL set to object "[object Object]" followed by IDL get 
PASS br.title: IDL set to NaN should not throw 
PASS br.title: IDL set to NaN followed by getAttribute() 
PASS br.title: IDL set to NaN followed by IDL get 
PASS br.title: IDL set to Infinity should not throw 
PASS br.title: IDL set to Infinity followed by getAttribute() 
PASS br.title: IDL set to Infinity followed by IDL get 
PASS br.title: IDL set to -Infinity should not throw 
PASS br.title: IDL set to -Infinity followed by getAttribute() 
PASS br.title: IDL set to -Infinity followed by IDL get 
PASS br.title: IDL set to "\0" should not throw 
PASS br.title: IDL set to "\0" followed by getAttribute() 
PASS br.title: IDL set to "\0" followed by IDL get 
PASS br.title: IDL set to null should not throw 
PASS br.title: IDL set to null followed by getAttribute() 
PASS br.title: IDL set to null followed by IDL get 
PASS br.title: IDL set to object "test-toString" should not throw 
PASS br.title: IDL set to object "test-toString" followed by getAttribute() 
PASS br.title: IDL set to object "test-toString" followed by IDL get 
PASS br.title: IDL set to object "test-valueOf" should not throw 
PASS br.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS br.title: IDL set to object "test-valueOf" followed by IDL get 
PASS br.lang: typeof IDL attribute 
PASS br.lang: IDL get with DOM attribute unset 
PASS br.lang: setAttribute() to "" followed by getAttribute() 
PASS br.lang: setAttribute() to "" followed by IDL get 
PASS br.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS br.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS br.lang: setAttribute() to undefined followed by getAttribute() 
PASS br.lang: setAttribute() to undefined followed by IDL get 
PASS br.lang: setAttribute() to 7 followed by getAttribute() 
PASS br.lang: setAttribute() to 7 followed by IDL get 
PASS br.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS br.lang: setAttribute() to 1.5 followed by IDL get 
PASS br.lang: setAttribute() to true followed by getAttribute() 
PASS br.lang: setAttribute() to true followed by IDL get 
PASS br.lang: setAttribute() to false followed by getAttribute() 
PASS br.lang: setAttribute() to false followed by IDL get 
PASS br.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS br.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS br.lang: setAttribute() to NaN followed by getAttribute() 
PASS br.lang: setAttribute() to NaN followed by IDL get 
PASS br.lang: setAttribute() to Infinity followed by getAttribute() 
PASS br.lang: setAttribute() to Infinity followed by IDL get 
PASS br.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS br.lang: setAttribute() to -Infinity followed by IDL get 
PASS br.lang: setAttribute() to "\0" followed by getAttribute() 
PASS br.lang: setAttribute() to "\0" followed by IDL get 
PASS br.lang: setAttribute() to null followed by getAttribute() 
PASS br.lang: setAttribute() to null followed by IDL get 
PASS br.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS br.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS br.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS br.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS br.lang: IDL set to "" should not throw 
PASS br.lang: IDL set to "" followed by getAttribute() 
PASS br.lang: IDL set to "" followed by IDL get 
PASS br.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS br.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS br.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS br.lang: IDL set to undefined should not throw 
PASS br.lang: IDL set to undefined followed by getAttribute() 
PASS br.lang: IDL set to undefined followed by IDL get 
PASS br.lang: IDL set to 7 should not throw 
PASS br.lang: IDL set to 7 followed by getAttribute() 
PASS br.lang: IDL set to 7 followed by IDL get 
PASS br.lang: IDL set to 1.5 should not throw 
PASS br.lang: IDL set to 1.5 followed by getAttribute() 
PASS br.lang: IDL set to 1.5 followed by IDL get 
PASS br.lang: IDL set to true should not throw 
PASS br.lang: IDL set to true followed by getAttribute() 
PASS br.lang: IDL set to true followed by IDL get 
PASS br.lang: IDL set to false should not throw 
PASS br.lang: IDL set to false followed by getAttribute() 
PASS br.lang: IDL set to false followed by IDL get 
PASS br.lang: IDL set to object "[object Object]" should not throw 
PASS br.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS br.lang: IDL set to object "[object Object]" followed by IDL get 
PASS br.lang: IDL set to NaN should not throw 
PASS br.lang: IDL set to NaN followed by getAttribute() 
PASS br.lang: IDL set to NaN followed by IDL get 
PASS br.lang: IDL set to Infinity should not throw 
PASS br.lang: IDL set to Infinity followed by getAttribute() 
PASS br.lang: IDL set to Infinity followed by IDL get 
PASS br.lang: IDL set to -Infinity should not throw 
PASS br.lang: IDL set to -Infinity followed by getAttribute() 
PASS br.lang: IDL set to -Infinity followed by IDL get 
PASS br.lang: IDL set to "\0" should not throw 
PASS br.lang: IDL set to "\0" followed by getAttribute() 
PASS br.lang: IDL set to "\0" followed by IDL get 
PASS br.lang: IDL set to null should not throw 
PASS br.lang: IDL set to null followed by getAttribute() 
PASS br.lang: IDL set to null followed by IDL get 
PASS br.lang: IDL set to object "test-toString" should not throw 
PASS br.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS br.lang: IDL set to object "test-toString" followed by IDL get 
PASS br.lang: IDL set to object "test-valueOf" should not throw 
PASS br.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS br.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS br.dir: typeof IDL attribute 
PASS br.dir: IDL get with DOM attribute unset 
PASS br.dir: setAttribute() to "" followed by getAttribute() 
PASS br.dir: setAttribute() to "" followed by IDL get 
PASS br.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS br.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS br.dir: setAttribute() to undefined followed by getAttribute() 
PASS br.dir: setAttribute() to undefined followed by IDL get 
PASS br.dir: setAttribute() to 7 followed by getAttribute() 
PASS br.dir: setAttribute() to 7 followed by IDL get 
PASS br.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS br.dir: setAttribute() to 1.5 followed by IDL get 
PASS br.dir: setAttribute() to true followed by getAttribute() 
PASS br.dir: setAttribute() to true followed by IDL get 
PASS br.dir: setAttribute() to false followed by getAttribute() 
PASS br.dir: setAttribute() to false followed by IDL get 
PASS br.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS br.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS br.dir: setAttribute() to NaN followed by getAttribute() 
PASS br.dir: setAttribute() to NaN followed by IDL get 
PASS br.dir: setAttribute() to Infinity followed by getAttribute() 
PASS br.dir: setAttribute() to Infinity followed by IDL get 
PASS br.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS br.dir: setAttribute() to -Infinity followed by IDL get 
PASS br.dir: setAttribute() to "\0" followed by getAttribute() 
PASS br.dir: setAttribute() to "\0" followed by IDL get 
PASS br.dir: setAttribute() to null followed by getAttribute() 
PASS br.dir: setAttribute() to null followed by IDL get 
PASS br.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS br.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS br.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS br.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS br.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS br.dir: setAttribute() to "ltr" followed by IDL get 
PASS br.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS br.dir: setAttribute() to "xltr" followed by IDL get 
PASS br.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS br.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS br.dir: setAttribute() to "tr" followed by getAttribute() 
PASS br.dir: setAttribute() to "tr" followed by IDL get 
PASS br.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS br.dir: setAttribute() to "LTR" followed by IDL get 
PASS br.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS br.dir: setAttribute() to "rtl" followed by IDL get 
PASS br.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS br.dir: setAttribute() to "xrtl" followed by IDL get 
PASS br.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS br.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS br.dir: setAttribute() to "tl" followed by getAttribute() 
PASS br.dir: setAttribute() to "tl" followed by IDL get 
PASS br.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS br.dir: setAttribute() to "RTL" followed by IDL get 
PASS br.dir: setAttribute() to "auto" followed by getAttribute() 
PASS br.dir: setAttribute() to "auto" followed by IDL get 
PASS br.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS br.dir: setAttribute() to "xauto" followed by IDL get 
PASS br.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS br.dir: setAttribute() to "auto\0" followed by IDL get 
PASS br.dir: setAttribute() to "uto" followed by getAttribute() 
PASS br.dir: setAttribute() to "uto" followed by IDL get 
PASS br.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS br.dir: setAttribute() to "AUTO" followed by IDL get 
PASS br.dir: IDL set to "" should not throw 
PASS br.dir: IDL set to "" followed by getAttribute() 
PASS br.dir: IDL set to "" followed by IDL get 
PASS br.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS br.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS br.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS br.dir: IDL set to undefined should not throw 
PASS br.dir: IDL set to undefined followed by getAttribute() 
PASS br.dir: IDL set to undefined followed by IDL get 
PASS br.dir: IDL set to 7 should not throw 
PASS br.dir: IDL set to 7 followed by getAttribute() 
PASS br.dir: IDL set to 7 followed by IDL get 
PASS br.dir: IDL set to 1.5 should not throw 
PASS br.dir: IDL set to 1.5 followed by getAttribute() 
PASS br.dir: IDL set to 1.5 followed by IDL get 
PASS br.dir: IDL set to true should not throw 
PASS br.dir: IDL set to true followed by getAttribute() 
PASS br.dir: IDL set to true followed by IDL get 
PASS br.dir: IDL set to false should not throw 
PASS br.dir: IDL set to false followed by getAttribute() 
PASS br.dir: IDL set to false followed by IDL get 
PASS br.dir: IDL set to object "[object Object]" should not throw 
PASS br.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS br.dir: IDL set to object "[object Object]" followed by IDL get 
PASS br.dir: IDL set to NaN should not throw 
PASS br.dir: IDL set to NaN followed by getAttribute() 
PASS br.dir: IDL set to NaN followed by IDL get 
PASS br.dir: IDL set to Infinity should not throw 
PASS br.dir: IDL set to Infinity followed by getAttribute() 
PASS br.dir: IDL set to Infinity followed by IDL get 
PASS br.dir: IDL set to -Infinity should not throw 
PASS br.dir: IDL set to -Infinity followed by getAttribute() 
PASS br.dir: IDL set to -Infinity followed by IDL get 
PASS br.dir: IDL set to "\0" should not throw 
PASS br.dir: IDL set to "\0" followed by getAttribute() 
PASS br.dir: IDL set to "\0" followed by IDL get 
PASS br.dir: IDL set to null should not throw 
PASS br.dir: IDL set to null followed by IDL get 
PASS br.dir: IDL set to object "test-toString" should not throw 
PASS br.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS br.dir: IDL set to object "test-toString" followed by IDL get 
PASS br.dir: IDL set to object "test-valueOf" should not throw 
PASS br.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS br.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS br.dir: IDL set to "ltr" should not throw 
PASS br.dir: IDL set to "ltr" followed by getAttribute() 
PASS br.dir: IDL set to "ltr" followed by IDL get 
PASS br.dir: IDL set to "xltr" should not throw 
PASS br.dir: IDL set to "xltr" followed by getAttribute() 
PASS br.dir: IDL set to "xltr" followed by IDL get 
PASS br.dir: IDL set to "ltr\0" should not throw 
PASS br.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS br.dir: IDL set to "ltr\0" followed by IDL get 
PASS br.dir: IDL set to "tr" should not throw 
PASS br.dir: IDL set to "tr" followed by getAttribute() 
PASS br.dir: IDL set to "tr" followed by IDL get 
PASS br.dir: IDL set to "LTR" should not throw 
PASS br.dir: IDL set to "LTR" followed by getAttribute() 
PASS br.dir: IDL set to "LTR" followed by IDL get 
PASS br.dir: IDL set to "rtl" should not throw 
PASS br.dir: IDL set to "rtl" followed by getAttribute() 
PASS br.dir: IDL set to "rtl" followed by IDL get 
PASS br.dir: IDL set to "xrtl" should not throw 
PASS br.dir: IDL set to "xrtl" followed by getAttribute() 
PASS br.dir: IDL set to "xrtl" followed by IDL get 
PASS br.dir: IDL set to "rtl\0" should not throw 
PASS br.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS br.dir: IDL set to "rtl\0" followed by IDL get 
PASS br.dir: IDL set to "tl" should not throw 
PASS br.dir: IDL set to "tl" followed by getAttribute() 
PASS br.dir: IDL set to "tl" followed by IDL get 
PASS br.dir: IDL set to "RTL" should not throw 
PASS br.dir: IDL set to "RTL" followed by getAttribute() 
PASS br.dir: IDL set to "RTL" followed by IDL get 
PASS br.dir: IDL set to "auto" should not throw 
PASS br.dir: IDL set to "auto" followed by getAttribute() 
PASS br.dir: IDL set to "auto" followed by IDL get 
PASS br.dir: IDL set to "xauto" should not throw 
PASS br.dir: IDL set to "xauto" followed by getAttribute() 
PASS br.dir: IDL set to "xauto" followed by IDL get 
PASS br.dir: IDL set to "auto\0" should not throw 
PASS br.dir: IDL set to "auto\0" followed by getAttribute() 
PASS br.dir: IDL set to "auto\0" followed by IDL get 
PASS br.dir: IDL set to "uto" should not throw 
PASS br.dir: IDL set to "uto" followed by getAttribute() 
PASS br.dir: IDL set to "uto" followed by IDL get 
PASS br.dir: IDL set to "AUTO" should not throw 
PASS br.dir: IDL set to "AUTO" followed by getAttribute() 
PASS br.dir: IDL set to "AUTO" followed by IDL get 
PASS br.className (<br class>): typeof IDL attribute 
PASS br.className (<br class>): IDL get with DOM attribute unset 
PASS br.className (<br class>): setAttribute() to "" followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to "" followed by IDL get 
PASS br.className (<br class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS br.className (<br class>): setAttribute() to undefined followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to undefined followed by IDL get 
PASS br.className (<br class>): setAttribute() to 7 followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to 7 followed by IDL get 
PASS br.className (<br class>): setAttribute() to 1.5 followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to 1.5 followed by IDL get 
PASS br.className (<br class>): setAttribute() to true followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to true followed by IDL get 
PASS br.className (<br class>): setAttribute() to false followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to false followed by IDL get 
PASS br.className (<br class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS br.className (<br class>): setAttribute() to NaN followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to NaN followed by IDL get 
PASS br.className (<br class>): setAttribute() to Infinity followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to Infinity followed by IDL get 
PASS br.className (<br class>): setAttribute() to -Infinity followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to -Infinity followed by IDL get 
PASS br.className (<br class>): setAttribute() to "\0" followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to "\0" followed by IDL get 
PASS br.className (<br class>): setAttribute() to null followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to null followed by IDL get 
PASS br.className (<br class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to object "test-toString" followed by IDL get 
PASS br.className (<br class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS br.className (<br class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS br.className (<br class>): IDL set to "" should not throw 
PASS br.className (<br class>): IDL set to "" followed by getAttribute() 
PASS br.className (<br class>): IDL set to "" followed by IDL get 
PASS br.className (<br class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS br.className (<br class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS br.className (<br class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS br.className (<br class>): IDL set to undefined should not throw 
PASS br.className (<br class>): IDL set to undefined followed by getAttribute() 
PASS br.className (<br class>): IDL set to undefined followed by IDL get 
PASS br.className (<br class>): IDL set to 7 should not throw 
PASS br.className (<br class>): IDL set to 7 followed by getAttribute() 
PASS br.className (<br class>): IDL set to 7 followed by IDL get 
PASS br.className (<br class>): IDL set to 1.5 should not throw 
PASS br.className (<br class>): IDL set to 1.5 followed by getAttribute() 
PASS br.className (<br class>): IDL set to 1.5 followed by IDL get 
PASS br.className (<br class>): IDL set to true should not throw 
PASS br.className (<br class>): IDL set to true followed by getAttribute() 
PASS br.className (<br class>): IDL set to true followed by IDL get 
PASS br.className (<br class>): IDL set to false should not throw 
PASS br.className (<br class>): IDL set to false followed by getAttribute() 
PASS br.className (<br class>): IDL set to false followed by IDL get 
PASS br.className (<br class>): IDL set to object "[object Object]" should not throw 
PASS br.className (<br class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS br.className (<br class>): IDL set to object "[object Object]" followed by IDL get 
PASS br.className (<br class>): IDL set to NaN should not throw 
PASS br.className (<br class>): IDL set to NaN followed by getAttribute() 
PASS br.className (<br class>): IDL set to NaN followed by IDL get 
PASS br.className (<br class>): IDL set to Infinity should not throw 
PASS br.className (<br class>): IDL set to Infinity followed by getAttribute() 
PASS br.className (<br class>): IDL set to Infinity followed by IDL get 
PASS br.className (<br class>): IDL set to -Infinity should not throw 
PASS br.className (<br class>): IDL set to -Infinity followed by getAttribute() 
PASS br.className (<br class>): IDL set to -Infinity followed by IDL get 
PASS br.className (<br class>): IDL set to "\0" should not throw 
PASS br.className (<br class>): IDL set to "\0" followed by getAttribute() 
PASS br.className (<br class>): IDL set to "\0" followed by IDL get 
PASS br.className (<br class>): IDL set to null should not throw 
PASS br.className (<br class>): IDL set to null followed by getAttribute() 
PASS br.className (<br class>): IDL set to null followed by IDL get 
PASS br.className (<br class>): IDL set to object "test-toString" should not throw 
PASS br.className (<br class>): IDL set to object "test-toString" followed by getAttribute() 
PASS br.className (<br class>): IDL set to object "test-toString" followed by IDL get 
PASS br.className (<br class>): IDL set to object "test-valueOf" should not throw 
PASS br.className (<br class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS br.className (<br class>): IDL set to object "test-valueOf" followed by IDL get 
PASS br.hidden: typeof IDL attribute 
PASS br.hidden: IDL get with DOM attribute unset 
PASS br.hidden: setAttribute() to "" followed by getAttribute() 
PASS br.hidden: setAttribute() to "" followed by IDL get 
PASS br.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS br.hidden: setAttribute() to " foo " followed by IDL get 
PASS br.hidden: setAttribute() to undefined followed by getAttribute() 
PASS br.hidden: setAttribute() to undefined followed by IDL get 
PASS br.hidden: setAttribute() to null followed by getAttribute() 
PASS br.hidden: setAttribute() to null followed by IDL get 
PASS br.hidden: setAttribute() to 7 followed by getAttribute() 
PASS br.hidden: setAttribute() to 7 followed by IDL get 
PASS br.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS br.hidden: setAttribute() to 1.5 followed by IDL get 
PASS br.hidden: setAttribute() to true followed by getAttribute() 
PASS br.hidden: setAttribute() to true followed by IDL get 
PASS br.hidden: setAttribute() to false followed by getAttribute() 
PASS br.hidden: setAttribute() to false followed by IDL get 
PASS br.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS br.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS br.hidden: setAttribute() to NaN followed by getAttribute() 
PASS br.hidden: setAttribute() to NaN followed by IDL get 
PASS br.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS br.hidden: setAttribute() to Infinity followed by IDL get 
PASS br.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS br.hidden: setAttribute() to -Infinity followed by IDL get 
PASS br.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS br.hidden: setAttribute() to "\0" followed by IDL get 
PASS br.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS br.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS br.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS br.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS br.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS br.hidden: setAttribute() to "hidden" followed by IDL get 
PASS br.hidden: IDL set to "" should not throw 
PASS br.hidden: IDL set to "" followed by hasAttribute() 
PASS br.hidden: IDL set to "" followed by IDL get 
PASS br.hidden: IDL set to " foo " should not throw 
PASS br.hidden: IDL set to " foo " followed by hasAttribute() 
PASS br.hidden: IDL set to " foo " followed by IDL get 
PASS br.hidden: IDL set to undefined should not throw 
PASS br.hidden: IDL set to undefined followed by hasAttribute() 
PASS br.hidden: IDL set to undefined followed by IDL get 
PASS br.hidden: IDL set to null should not throw 
PASS br.hidden: IDL set to null followed by hasAttribute() 
PASS br.hidden: IDL set to null followed by IDL get 
PASS br.hidden: IDL set to 7 should not throw 
PASS br.hidden: IDL set to 7 followed by hasAttribute() 
PASS br.hidden: IDL set to 7 followed by IDL get 
PASS br.hidden: IDL set to 1.5 should not throw 
PASS br.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS br.hidden: IDL set to 1.5 followed by IDL get 
PASS br.hidden: IDL set to true should not throw 
PASS br.hidden: IDL set to true followed by hasAttribute() 
PASS br.hidden: IDL set to true followed by IDL get 
PASS br.hidden: IDL set to false should not throw 
PASS br.hidden: IDL set to false followed by hasAttribute() 
PASS br.hidden: IDL set to false followed by IDL get 
PASS br.hidden: IDL set to object "[object Object]" should not throw 
PASS br.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS br.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS br.hidden: IDL set to NaN should not throw 
PASS br.hidden: IDL set to NaN followed by hasAttribute() 
PASS br.hidden: IDL set to NaN followed by IDL get 
PASS br.hidden: IDL set to Infinity should not throw 
PASS br.hidden: IDL set to Infinity followed by hasAttribute() 
PASS br.hidden: IDL set to Infinity followed by IDL get 
PASS br.hidden: IDL set to -Infinity should not throw 
PASS br.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS br.hidden: IDL set to -Infinity followed by IDL get 
PASS br.hidden: IDL set to "\0" should not throw 
PASS br.hidden: IDL set to "\0" followed by hasAttribute() 
PASS br.hidden: IDL set to "\0" followed by IDL get 
PASS br.hidden: IDL set to object "test-toString" should not throw 
PASS br.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS br.hidden: IDL set to object "test-toString" followed by IDL get 
PASS br.hidden: IDL set to object "test-valueOf" should not throw 
PASS br.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS br.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS br.accessKey: typeof IDL attribute 
PASS br.accessKey: IDL get with DOM attribute unset 
PASS br.accessKey: setAttribute() to "" followed by getAttribute() 
PASS br.accessKey: setAttribute() to "" followed by IDL get 
PASS br.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS br.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS br.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS br.accessKey: setAttribute() to undefined followed by IDL get 
PASS br.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS br.accessKey: setAttribute() to 7 followed by IDL get 
PASS br.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS br.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS br.accessKey: setAttribute() to true followed by getAttribute() 
PASS br.accessKey: setAttribute() to true followed by IDL get 
PASS br.accessKey: setAttribute() to false followed by getAttribute() 
PASS br.accessKey: setAttribute() to false followed by IDL get 
PASS br.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS br.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS br.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS br.accessKey: setAttribute() to NaN followed by IDL get 
PASS br.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS br.accessKey: setAttribute() to Infinity followed by IDL get 
PASS br.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS br.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS br.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS br.accessKey: setAttribute() to "\0" followed by IDL get 
PASS br.accessKey: setAttribute() to null followed by getAttribute() 
PASS br.accessKey: setAttribute() to null followed by IDL get 
PASS br.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS br.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS br.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS br.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS br.accessKey: IDL set to "" should not throw 
PASS br.accessKey: IDL set to "" followed by getAttribute() 
PASS br.accessKey: IDL set to "" followed by IDL get 
PASS br.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS br.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS br.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS br.accessKey: IDL set to undefined should not throw 
PASS br.accessKey: IDL set to undefined followed by getAttribute() 
PASS br.accessKey: IDL set to undefined followed by IDL get 
PASS br.accessKey: IDL set to 7 should not throw 
PASS br.accessKey: IDL set to 7 followed by getAttribute() 
PASS br.accessKey: IDL set to 7 followed by IDL get 
PASS br.accessKey: IDL set to 1.5 should not throw 
PASS br.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS br.accessKey: IDL set to 1.5 followed by IDL get 
PASS br.accessKey: IDL set to true should not throw 
PASS br.accessKey: IDL set to true followed by getAttribute() 
PASS br.accessKey: IDL set to true followed by IDL get 
PASS br.accessKey: IDL set to false should not throw 
PASS br.accessKey: IDL set to false followed by getAttribute() 
PASS br.accessKey: IDL set to false followed by IDL get 
PASS br.accessKey: IDL set to object "[object Object]" should not throw 
PASS br.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS br.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS br.accessKey: IDL set to NaN should not throw 
PASS br.accessKey: IDL set to NaN followed by getAttribute() 
PASS br.accessKey: IDL set to NaN followed by IDL get 
PASS br.accessKey: IDL set to Infinity should not throw 
PASS br.accessKey: IDL set to Infinity followed by getAttribute() 
PASS br.accessKey: IDL set to Infinity followed by IDL get 
PASS br.accessKey: IDL set to -Infinity should not throw 
PASS br.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS br.accessKey: IDL set to -Infinity followed by IDL get 
PASS br.accessKey: IDL set to "\0" should not throw 
PASS br.accessKey: IDL set to "\0" followed by getAttribute() 
PASS br.accessKey: IDL set to "\0" followed by IDL get 
PASS br.accessKey: IDL set to null should not throw 
PASS br.accessKey: IDL set to null followed by getAttribute() 
PASS br.accessKey: IDL set to null followed by IDL get 
PASS br.accessKey: IDL set to object "test-toString" should not throw 
PASS br.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS br.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS br.accessKey: IDL set to object "test-valueOf" should not throw 
PASS br.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS br.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS br.tabIndex: typeof IDL attribute 
PASS br.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS br.tabIndex: setAttribute() to -36 followed by IDL get 
PASS br.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS br.tabIndex: setAttribute() to -1 followed by IDL get 
PASS br.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS br.tabIndex: setAttribute() to 0 followed by IDL get 
PASS br.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS br.tabIndex: setAttribute() to 1 followed by IDL get 
PASS br.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL br.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS br.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL br.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS br.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS br.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS br.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS br.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS br.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS br.tabIndex: setAttribute() to "0" followed by IDL get 
PASS br.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS br.tabIndex: setAttribute() to "1" followed by IDL get 
PASS br.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS br.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS br.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS br.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS br.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS br.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS br.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS br.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS br.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS br.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS br.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS br.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS br.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS br.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS br.tabIndex: IDL set to -36 should not throw 
PASS br.tabIndex: IDL set to -36 followed by getAttribute() 
PASS br.tabIndex: IDL set to -36 followed by IDL get 
PASS br.tabIndex: IDL set to -1 should not throw 
PASS br.tabIndex: IDL set to -1 followed by getAttribute() 
PASS br.tabIndex: IDL set to -1 followed by IDL get 
PASS br.tabIndex: IDL set to 0 should not throw 
PASS br.tabIndex: IDL set to 0 followed by getAttribute() 
PASS br.tabIndex: IDL set to 0 followed by IDL get 
PASS br.tabIndex: IDL set to 1 should not throw 
PASS br.tabIndex: IDL set to 1 followed by getAttribute() 
PASS br.tabIndex: IDL set to 1 followed by IDL get 
PASS br.tabIndex: IDL set to 2147483647 should not throw 
PASS br.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL br.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS br.tabIndex: IDL set to -2147483648 should not throw 
PASS br.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL br.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS br.clear: typeof IDL attribute 
PASS br.clear: IDL get with DOM attribute unset 
PASS br.clear: setAttribute() to "" followed by getAttribute() 
PASS br.clear: setAttribute() to "" followed by IDL get 
PASS br.clear: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS br.clear: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS br.clear: setAttribute() to undefined followed by getAttribute() 
PASS br.clear: setAttribute() to undefined followed by IDL get 
PASS br.clear: setAttribute() to 7 followed by getAttribute() 
PASS br.clear: setAttribute() to 7 followed by IDL get 
PASS br.clear: setAttribute() to 1.5 followed by getAttribute() 
PASS br.clear: setAttribute() to 1.5 followed by IDL get 
PASS br.clear: setAttribute() to true followed by getAttribute() 
PASS br.clear: setAttribute() to true followed by IDL get 
PASS br.clear: setAttribute() to false followed by getAttribute() 
PASS br.clear: setAttribute() to false followed by IDL get 
PASS br.clear: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS br.clear: setAttribute() to object "[object Object]" followed by IDL get 
PASS br.clear: setAttribute() to NaN followed by getAttribute() 
PASS br.clear: setAttribute() to NaN followed by IDL get 
PASS br.clear: setAttribute() to Infinity followed by getAttribute() 
PASS br.clear: setAttribute() to Infinity followed by IDL get 
PASS br.clear: setAttribute() to -Infinity followed by getAttribute() 
PASS br.clear: setAttribute() to -Infinity followed by IDL get 
PASS br.clear: setAttribute() to "\0" followed by getAttribute() 
PASS br.clear: setAttribute() to "\0" followed by IDL get 
PASS br.clear: setAttribute() to null followed by getAttribute() 
PASS br.clear: setAttribute() to null followed by IDL get 
PASS br.clear: setAttribute() to object "test-toString" followed by getAttribute() 
PASS br.clear: setAttribute() to object "test-toString" followed by IDL get 
PASS br.clear: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS br.clear: setAttribute() to object "test-valueOf" followed by IDL get 
PASS br.clear: IDL set to "" should not throw 
PASS br.clear: IDL set to "" followed by getAttribute() 
PASS br.clear: IDL set to "" followed by IDL get 
PASS br.clear: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS br.clear: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS br.clear: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS br.clear: IDL set to undefined should not throw 
PASS br.clear: IDL set to undefined followed by getAttribute() 
PASS br.clear: IDL set to undefined followed by IDL get 
PASS br.clear: IDL set to 7 should not throw 
PASS br.clear: IDL set to 7 followed by getAttribute() 
PASS br.clear: IDL set to 7 followed by IDL get 
PASS br.clear: IDL set to 1.5 should not throw 
PASS br.clear: IDL set to 1.5 followed by getAttribute() 
PASS br.clear: IDL set to 1.5 followed by IDL get 
PASS br.clear: IDL set to true should not throw 
PASS br.clear: IDL set to true followed by getAttribute() 
PASS br.clear: IDL set to true followed by IDL get 
PASS br.clear: IDL set to false should not throw 
PASS br.clear: IDL set to false followed by getAttribute() 
PASS br.clear: IDL set to false followed by IDL get 
PASS br.clear: IDL set to object "[object Object]" should not throw 
PASS br.clear: IDL set to object "[object Object]" followed by getAttribute() 
PASS br.clear: IDL set to object "[object Object]" followed by IDL get 
PASS br.clear: IDL set to NaN should not throw 
PASS br.clear: IDL set to NaN followed by getAttribute() 
PASS br.clear: IDL set to NaN followed by IDL get 
PASS br.clear: IDL set to Infinity should not throw 
PASS br.clear: IDL set to Infinity followed by getAttribute() 
PASS br.clear: IDL set to Infinity followed by IDL get 
PASS br.clear: IDL set to -Infinity should not throw 
PASS br.clear: IDL set to -Infinity followed by getAttribute() 
PASS br.clear: IDL set to -Infinity followed by IDL get 
PASS br.clear: IDL set to "\0" should not throw 
PASS br.clear: IDL set to "\0" followed by getAttribute() 
PASS br.clear: IDL set to "\0" followed by IDL get 
PASS br.clear: IDL set to null should not throw 
PASS br.clear: IDL set to null followed by getAttribute() 
PASS br.clear: IDL set to null followed by IDL get 
PASS br.clear: IDL set to object "test-toString" should not throw 
PASS br.clear: IDL set to object "test-toString" followed by getAttribute() 
PASS br.clear: IDL set to object "test-toString" followed by IDL get 
PASS br.clear: IDL set to object "test-valueOf" should not throw 
PASS br.clear: IDL set to object "test-valueOf" followed by getAttribute() 
PASS br.clear: IDL set to object "test-valueOf" followed by IDL get 
FAIL br.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL br.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS br.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL br.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL br.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL br.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to null followed by getAttribute() 
FAIL br.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL br.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL br.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to true followed by getAttribute() 
FAIL br.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to false followed by getAttribute() 
FAIL br.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL br.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL br.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL br.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL br.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL br.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL br.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL br.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL br.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS br.itemScope: IDL set to "" should not throw 
FAIL br.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL br.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS br.itemScope: IDL set to " foo " should not throw 
PASS br.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL br.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS br.itemScope: IDL set to undefined should not throw 
FAIL br.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL br.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS br.itemScope: IDL set to null should not throw 
FAIL br.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL br.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS br.itemScope: IDL set to 7 should not throw 
PASS br.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL br.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS br.itemScope: IDL set to 1.5 should not throw 
PASS br.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL br.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS br.itemScope: IDL set to true should not throw 
PASS br.itemScope: IDL set to true followed by hasAttribute() 
PASS br.itemScope: IDL set to true followed by IDL get 
PASS br.itemScope: IDL set to false should not throw 
FAIL br.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS br.itemScope: IDL set to false followed by IDL get 
PASS br.itemScope: IDL set to object "[object Object]" should not throw 
PASS br.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL br.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS br.itemScope: IDL set to NaN should not throw 
FAIL br.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL br.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS br.itemScope: IDL set to Infinity should not throw 
PASS br.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL br.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS br.itemScope: IDL set to -Infinity should not throw 
PASS br.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL br.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS br.itemScope: IDL set to "\0" should not throw 
PASS br.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL br.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS br.itemScope: IDL set to object "test-toString" should not throw 
PASS br.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL br.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS br.itemScope: IDL set to object "test-valueOf" should not throw 
PASS br.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL br.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL br.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL br.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS br.itemId: setAttribute() to "" followed by getAttribute() 
FAIL br.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS br.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL br.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS br.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL br.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS br.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL br.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS br.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL br.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS br.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL br.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS br.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL br.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS br.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL br.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS br.itemId: setAttribute() to true followed by getAttribute() 
FAIL br.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS br.itemId: setAttribute() to false followed by getAttribute() 
FAIL br.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS br.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL br.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS br.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL br.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS br.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL br.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS br.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL br.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS br.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL br.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS br.itemId: setAttribute() to null followed by getAttribute() 
FAIL br.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS br.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL br.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS br.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL br.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS br.itemId: IDL set to "" should not throw 
FAIL br.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL br.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS br.itemId: IDL set to " foo " should not throw 
FAIL br.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL br.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS br.itemId: IDL set to "http://site.example/" should not throw 
FAIL br.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS br.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS br.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL br.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL br.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS br.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL br.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL br.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS br.itemId: IDL set to undefined should not throw 
FAIL br.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL br.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS br.itemId: IDL set to 7 should not throw 
FAIL br.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL br.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS br.itemId: IDL set to 1.5 should not throw 
FAIL br.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL br.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS br.itemId: IDL set to true should not throw 
FAIL br.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL br.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS br.itemId: IDL set to false should not throw 
FAIL br.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL br.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS br.itemId: IDL set to object "[object Object]" should not throw 
FAIL br.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL br.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS br.itemId: IDL set to NaN should not throw 
FAIL br.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL br.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS br.itemId: IDL set to Infinity should not throw 
FAIL br.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL br.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS br.itemId: IDL set to -Infinity should not throw 
FAIL br.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL br.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS br.itemId: IDL set to "\0" should not throw 
FAIL br.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL br.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS br.itemId: IDL set to null should not throw 
FAIL br.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL br.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS br.itemId: IDL set to object "test-toString" should not throw 
FAIL br.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL br.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS br.itemId: IDL set to object "test-valueOf" should not throw 
PASS br.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL br.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS wbr.title: typeof IDL attribute 
PASS wbr.title: IDL get with DOM attribute unset 
PASS wbr.title: setAttribute() to "" followed by getAttribute() 
PASS wbr.title: setAttribute() to "" followed by IDL get 
PASS wbr.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS wbr.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS wbr.title: setAttribute() to undefined followed by getAttribute() 
PASS wbr.title: setAttribute() to undefined followed by IDL get 
PASS wbr.title: setAttribute() to 7 followed by getAttribute() 
PASS wbr.title: setAttribute() to 7 followed by IDL get 
PASS wbr.title: setAttribute() to 1.5 followed by getAttribute() 
PASS wbr.title: setAttribute() to 1.5 followed by IDL get 
PASS wbr.title: setAttribute() to true followed by getAttribute() 
PASS wbr.title: setAttribute() to true followed by IDL get 
PASS wbr.title: setAttribute() to false followed by getAttribute() 
PASS wbr.title: setAttribute() to false followed by IDL get 
PASS wbr.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS wbr.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS wbr.title: setAttribute() to NaN followed by getAttribute() 
PASS wbr.title: setAttribute() to NaN followed by IDL get 
PASS wbr.title: setAttribute() to Infinity followed by getAttribute() 
PASS wbr.title: setAttribute() to Infinity followed by IDL get 
PASS wbr.title: setAttribute() to -Infinity followed by getAttribute() 
PASS wbr.title: setAttribute() to -Infinity followed by IDL get 
PASS wbr.title: setAttribute() to "\0" followed by getAttribute() 
PASS wbr.title: setAttribute() to "\0" followed by IDL get 
PASS wbr.title: setAttribute() to null followed by getAttribute() 
PASS wbr.title: setAttribute() to null followed by IDL get 
PASS wbr.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS wbr.title: setAttribute() to object "test-toString" followed by IDL get 
PASS wbr.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS wbr.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS wbr.title: IDL set to "" should not throw 
PASS wbr.title: IDL set to "" followed by getAttribute() 
PASS wbr.title: IDL set to "" followed by IDL get 
PASS wbr.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS wbr.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS wbr.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS wbr.title: IDL set to undefined should not throw 
PASS wbr.title: IDL set to undefined followed by getAttribute() 
PASS wbr.title: IDL set to undefined followed by IDL get 
PASS wbr.title: IDL set to 7 should not throw 
PASS wbr.title: IDL set to 7 followed by getAttribute() 
PASS wbr.title: IDL set to 7 followed by IDL get 
PASS wbr.title: IDL set to 1.5 should not throw 
PASS wbr.title: IDL set to 1.5 followed by getAttribute() 
PASS wbr.title: IDL set to 1.5 followed by IDL get 
PASS wbr.title: IDL set to true should not throw 
PASS wbr.title: IDL set to true followed by getAttribute() 
PASS wbr.title: IDL set to true followed by IDL get 
PASS wbr.title: IDL set to false should not throw 
PASS wbr.title: IDL set to false followed by getAttribute() 
PASS wbr.title: IDL set to false followed by IDL get 
PASS wbr.title: IDL set to object "[object Object]" should not throw 
PASS wbr.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS wbr.title: IDL set to object "[object Object]" followed by IDL get 
PASS wbr.title: IDL set to NaN should not throw 
PASS wbr.title: IDL set to NaN followed by getAttribute() 
PASS wbr.title: IDL set to NaN followed by IDL get 
PASS wbr.title: IDL set to Infinity should not throw 
PASS wbr.title: IDL set to Infinity followed by getAttribute() 
PASS wbr.title: IDL set to Infinity followed by IDL get 
PASS wbr.title: IDL set to -Infinity should not throw 
PASS wbr.title: IDL set to -Infinity followed by getAttribute() 
PASS wbr.title: IDL set to -Infinity followed by IDL get 
PASS wbr.title: IDL set to "\0" should not throw 
PASS wbr.title: IDL set to "\0" followed by getAttribute() 
PASS wbr.title: IDL set to "\0" followed by IDL get 
PASS wbr.title: IDL set to null should not throw 
PASS wbr.title: IDL set to null followed by getAttribute() 
PASS wbr.title: IDL set to null followed by IDL get 
PASS wbr.title: IDL set to object "test-toString" should not throw 
PASS wbr.title: IDL set to object "test-toString" followed by getAttribute() 
PASS wbr.title: IDL set to object "test-toString" followed by IDL get 
PASS wbr.title: IDL set to object "test-valueOf" should not throw 
PASS wbr.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS wbr.title: IDL set to object "test-valueOf" followed by IDL get 
PASS wbr.lang: typeof IDL attribute 
PASS wbr.lang: IDL get with DOM attribute unset 
PASS wbr.lang: setAttribute() to "" followed by getAttribute() 
PASS wbr.lang: setAttribute() to "" followed by IDL get 
PASS wbr.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS wbr.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS wbr.lang: setAttribute() to undefined followed by getAttribute() 
PASS wbr.lang: setAttribute() to undefined followed by IDL get 
PASS wbr.lang: setAttribute() to 7 followed by getAttribute() 
PASS wbr.lang: setAttribute() to 7 followed by IDL get 
PASS wbr.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS wbr.lang: setAttribute() to 1.5 followed by IDL get 
PASS wbr.lang: setAttribute() to true followed by getAttribute() 
PASS wbr.lang: setAttribute() to true followed by IDL get 
PASS wbr.lang: setAttribute() to false followed by getAttribute() 
PASS wbr.lang: setAttribute() to false followed by IDL get 
PASS wbr.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS wbr.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS wbr.lang: setAttribute() to NaN followed by getAttribute() 
PASS wbr.lang: setAttribute() to NaN followed by IDL get 
PASS wbr.lang: setAttribute() to Infinity followed by getAttribute() 
PASS wbr.lang: setAttribute() to Infinity followed by IDL get 
PASS wbr.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS wbr.lang: setAttribute() to -Infinity followed by IDL get 
PASS wbr.lang: setAttribute() to "\0" followed by getAttribute() 
PASS wbr.lang: setAttribute() to "\0" followed by IDL get 
PASS wbr.lang: setAttribute() to null followed by getAttribute() 
PASS wbr.lang: setAttribute() to null followed by IDL get 
PASS wbr.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS wbr.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS wbr.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS wbr.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS wbr.lang: IDL set to "" should not throw 
PASS wbr.lang: IDL set to "" followed by getAttribute() 
PASS wbr.lang: IDL set to "" followed by IDL get 
PASS wbr.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS wbr.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS wbr.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS wbr.lang: IDL set to undefined should not throw 
PASS wbr.lang: IDL set to undefined followed by getAttribute() 
PASS wbr.lang: IDL set to undefined followed by IDL get 
PASS wbr.lang: IDL set to 7 should not throw 
PASS wbr.lang: IDL set to 7 followed by getAttribute() 
PASS wbr.lang: IDL set to 7 followed by IDL get 
PASS wbr.lang: IDL set to 1.5 should not throw 
PASS wbr.lang: IDL set to 1.5 followed by getAttribute() 
PASS wbr.lang: IDL set to 1.5 followed by IDL get 
PASS wbr.lang: IDL set to true should not throw 
PASS wbr.lang: IDL set to true followed by getAttribute() 
PASS wbr.lang: IDL set to true followed by IDL get 
PASS wbr.lang: IDL set to false should not throw 
PASS wbr.lang: IDL set to false followed by getAttribute() 
PASS wbr.lang: IDL set to false followed by IDL get 
PASS wbr.lang: IDL set to object "[object Object]" should not throw 
PASS wbr.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS wbr.lang: IDL set to object "[object Object]" followed by IDL get 
PASS wbr.lang: IDL set to NaN should not throw 
PASS wbr.lang: IDL set to NaN followed by getAttribute() 
PASS wbr.lang: IDL set to NaN followed by IDL get 
PASS wbr.lang: IDL set to Infinity should not throw 
PASS wbr.lang: IDL set to Infinity followed by getAttribute() 
PASS wbr.lang: IDL set to Infinity followed by IDL get 
PASS wbr.lang: IDL set to -Infinity should not throw 
PASS wbr.lang: IDL set to -Infinity followed by getAttribute() 
PASS wbr.lang: IDL set to -Infinity followed by IDL get 
PASS wbr.lang: IDL set to "\0" should not throw 
PASS wbr.lang: IDL set to "\0" followed by getAttribute() 
PASS wbr.lang: IDL set to "\0" followed by IDL get 
PASS wbr.lang: IDL set to null should not throw 
PASS wbr.lang: IDL set to null followed by getAttribute() 
PASS wbr.lang: IDL set to null followed by IDL get 
PASS wbr.lang: IDL set to object "test-toString" should not throw 
PASS wbr.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS wbr.lang: IDL set to object "test-toString" followed by IDL get 
PASS wbr.lang: IDL set to object "test-valueOf" should not throw 
PASS wbr.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS wbr.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS wbr.dir: typeof IDL attribute 
PASS wbr.dir: IDL get with DOM attribute unset 
PASS wbr.dir: setAttribute() to "" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "" followed by IDL get 
PASS wbr.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS wbr.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS wbr.dir: setAttribute() to undefined followed by getAttribute() 
PASS wbr.dir: setAttribute() to undefined followed by IDL get 
PASS wbr.dir: setAttribute() to 7 followed by getAttribute() 
PASS wbr.dir: setAttribute() to 7 followed by IDL get 
PASS wbr.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS wbr.dir: setAttribute() to 1.5 followed by IDL get 
PASS wbr.dir: setAttribute() to true followed by getAttribute() 
PASS wbr.dir: setAttribute() to true followed by IDL get 
PASS wbr.dir: setAttribute() to false followed by getAttribute() 
PASS wbr.dir: setAttribute() to false followed by IDL get 
PASS wbr.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS wbr.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS wbr.dir: setAttribute() to NaN followed by getAttribute() 
PASS wbr.dir: setAttribute() to NaN followed by IDL get 
PASS wbr.dir: setAttribute() to Infinity followed by getAttribute() 
PASS wbr.dir: setAttribute() to Infinity followed by IDL get 
PASS wbr.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS wbr.dir: setAttribute() to -Infinity followed by IDL get 
PASS wbr.dir: setAttribute() to "\0" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "\0" followed by IDL get 
PASS wbr.dir: setAttribute() to null followed by getAttribute() 
PASS wbr.dir: setAttribute() to null followed by IDL get 
PASS wbr.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS wbr.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS wbr.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS wbr.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS wbr.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "ltr" followed by IDL get 
PASS wbr.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "xltr" followed by IDL get 
PASS wbr.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS wbr.dir: setAttribute() to "tr" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "tr" followed by IDL get 
PASS wbr.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "LTR" followed by IDL get 
PASS wbr.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "rtl" followed by IDL get 
PASS wbr.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "xrtl" followed by IDL get 
PASS wbr.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS wbr.dir: setAttribute() to "tl" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "tl" followed by IDL get 
PASS wbr.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "RTL" followed by IDL get 
PASS wbr.dir: setAttribute() to "auto" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "auto" followed by IDL get 
PASS wbr.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "xauto" followed by IDL get 
PASS wbr.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "auto\0" followed by IDL get 
PASS wbr.dir: setAttribute() to "uto" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "uto" followed by IDL get 
PASS wbr.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS wbr.dir: setAttribute() to "AUTO" followed by IDL get 
PASS wbr.dir: IDL set to "" should not throw 
PASS wbr.dir: IDL set to "" followed by getAttribute() 
PASS wbr.dir: IDL set to "" followed by IDL get 
PASS wbr.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS wbr.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS wbr.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS wbr.dir: IDL set to undefined should not throw 
PASS wbr.dir: IDL set to undefined followed by getAttribute() 
PASS wbr.dir: IDL set to undefined followed by IDL get 
PASS wbr.dir: IDL set to 7 should not throw 
PASS wbr.dir: IDL set to 7 followed by getAttribute() 
PASS wbr.dir: IDL set to 7 followed by IDL get 
PASS wbr.dir: IDL set to 1.5 should not throw 
PASS wbr.dir: IDL set to 1.5 followed by getAttribute() 
PASS wbr.dir: IDL set to 1.5 followed by IDL get 
PASS wbr.dir: IDL set to true should not throw 
PASS wbr.dir: IDL set to true followed by getAttribute() 
PASS wbr.dir: IDL set to true followed by IDL get 
PASS wbr.dir: IDL set to false should not throw 
PASS wbr.dir: IDL set to false followed by getAttribute() 
PASS wbr.dir: IDL set to false followed by IDL get 
PASS wbr.dir: IDL set to object "[object Object]" should not throw 
PASS wbr.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS wbr.dir: IDL set to object "[object Object]" followed by IDL get 
PASS wbr.dir: IDL set to NaN should not throw 
PASS wbr.dir: IDL set to NaN followed by getAttribute() 
PASS wbr.dir: IDL set to NaN followed by IDL get 
PASS wbr.dir: IDL set to Infinity should not throw 
PASS wbr.dir: IDL set to Infinity followed by getAttribute() 
PASS wbr.dir: IDL set to Infinity followed by IDL get 
PASS wbr.dir: IDL set to -Infinity should not throw 
PASS wbr.dir: IDL set to -Infinity followed by getAttribute() 
PASS wbr.dir: IDL set to -Infinity followed by IDL get 
PASS wbr.dir: IDL set to "\0" should not throw 
PASS wbr.dir: IDL set to "\0" followed by getAttribute() 
PASS wbr.dir: IDL set to "\0" followed by IDL get 
PASS wbr.dir: IDL set to null should not throw 
PASS wbr.dir: IDL set to null followed by IDL get 
PASS wbr.dir: IDL set to object "test-toString" should not throw 
PASS wbr.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS wbr.dir: IDL set to object "test-toString" followed by IDL get 
PASS wbr.dir: IDL set to object "test-valueOf" should not throw 
PASS wbr.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS wbr.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS wbr.dir: IDL set to "ltr" should not throw 
PASS wbr.dir: IDL set to "ltr" followed by getAttribute() 
PASS wbr.dir: IDL set to "ltr" followed by IDL get 
PASS wbr.dir: IDL set to "xltr" should not throw 
PASS wbr.dir: IDL set to "xltr" followed by getAttribute() 
PASS wbr.dir: IDL set to "xltr" followed by IDL get 
PASS wbr.dir: IDL set to "ltr\0" should not throw 
PASS wbr.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS wbr.dir: IDL set to "ltr\0" followed by IDL get 
PASS wbr.dir: IDL set to "tr" should not throw 
PASS wbr.dir: IDL set to "tr" followed by getAttribute() 
PASS wbr.dir: IDL set to "tr" followed by IDL get 
PASS wbr.dir: IDL set to "LTR" should not throw 
PASS wbr.dir: IDL set to "LTR" followed by getAttribute() 
PASS wbr.dir: IDL set to "LTR" followed by IDL get 
PASS wbr.dir: IDL set to "rtl" should not throw 
PASS wbr.dir: IDL set to "rtl" followed by getAttribute() 
PASS wbr.dir: IDL set to "rtl" followed by IDL get 
PASS wbr.dir: IDL set to "xrtl" should not throw 
PASS wbr.dir: IDL set to "xrtl" followed by getAttribute() 
PASS wbr.dir: IDL set to "xrtl" followed by IDL get 
PASS wbr.dir: IDL set to "rtl\0" should not throw 
PASS wbr.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS wbr.dir: IDL set to "rtl\0" followed by IDL get 
PASS wbr.dir: IDL set to "tl" should not throw 
PASS wbr.dir: IDL set to "tl" followed by getAttribute() 
PASS wbr.dir: IDL set to "tl" followed by IDL get 
PASS wbr.dir: IDL set to "RTL" should not throw 
PASS wbr.dir: IDL set to "RTL" followed by getAttribute() 
PASS wbr.dir: IDL set to "RTL" followed by IDL get 
PASS wbr.dir: IDL set to "auto" should not throw 
PASS wbr.dir: IDL set to "auto" followed by getAttribute() 
PASS wbr.dir: IDL set to "auto" followed by IDL get 
PASS wbr.dir: IDL set to "xauto" should not throw 
PASS wbr.dir: IDL set to "xauto" followed by getAttribute() 
PASS wbr.dir: IDL set to "xauto" followed by IDL get 
PASS wbr.dir: IDL set to "auto\0" should not throw 
PASS wbr.dir: IDL set to "auto\0" followed by getAttribute() 
PASS wbr.dir: IDL set to "auto\0" followed by IDL get 
PASS wbr.dir: IDL set to "uto" should not throw 
PASS wbr.dir: IDL set to "uto" followed by getAttribute() 
PASS wbr.dir: IDL set to "uto" followed by IDL get 
PASS wbr.dir: IDL set to "AUTO" should not throw 
PASS wbr.dir: IDL set to "AUTO" followed by getAttribute() 
PASS wbr.dir: IDL set to "AUTO" followed by IDL get 
PASS wbr.className (<wbr class>): typeof IDL attribute 
PASS wbr.className (<wbr class>): IDL get with DOM attribute unset 
PASS wbr.className (<wbr class>): setAttribute() to "" followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to "" followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to undefined followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to undefined followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to 7 followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to 7 followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to 1.5 followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to 1.5 followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to true followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to true followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to false followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to false followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to NaN followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to NaN followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to Infinity followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to Infinity followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to -Infinity followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to -Infinity followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to "\0" followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to "\0" followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to null followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to null followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to object "test-toString" followed by IDL get 
PASS wbr.className (<wbr class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS wbr.className (<wbr class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to "" should not throw 
PASS wbr.className (<wbr class>): IDL set to "" followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to "" followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS wbr.className (<wbr class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to undefined should not throw 
PASS wbr.className (<wbr class>): IDL set to undefined followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to undefined followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to 7 should not throw 
PASS wbr.className (<wbr class>): IDL set to 7 followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to 7 followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to 1.5 should not throw 
PASS wbr.className (<wbr class>): IDL set to 1.5 followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to 1.5 followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to true should not throw 
PASS wbr.className (<wbr class>): IDL set to true followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to true followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to false should not throw 
PASS wbr.className (<wbr class>): IDL set to false followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to false followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to object "[object Object]" should not throw 
PASS wbr.className (<wbr class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to object "[object Object]" followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to NaN should not throw 
PASS wbr.className (<wbr class>): IDL set to NaN followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to NaN followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to Infinity should not throw 
PASS wbr.className (<wbr class>): IDL set to Infinity followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to Infinity followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to -Infinity should not throw 
PASS wbr.className (<wbr class>): IDL set to -Infinity followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to -Infinity followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to "\0" should not throw 
PASS wbr.className (<wbr class>): IDL set to "\0" followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to "\0" followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to null should not throw 
PASS wbr.className (<wbr class>): IDL set to null followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to null followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to object "test-toString" should not throw 
PASS wbr.className (<wbr class>): IDL set to object "test-toString" followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to object "test-toString" followed by IDL get 
PASS wbr.className (<wbr class>): IDL set to object "test-valueOf" should not throw 
PASS wbr.className (<wbr class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS wbr.className (<wbr class>): IDL set to object "test-valueOf" followed by IDL get 
PASS wbr.hidden: typeof IDL attribute 
PASS wbr.hidden: IDL get with DOM attribute unset 
PASS wbr.hidden: setAttribute() to "" followed by getAttribute() 
PASS wbr.hidden: setAttribute() to "" followed by IDL get 
PASS wbr.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS wbr.hidden: setAttribute() to " foo " followed by IDL get 
PASS wbr.hidden: setAttribute() to undefined followed by getAttribute() 
PASS wbr.hidden: setAttribute() to undefined followed by IDL get 
PASS wbr.hidden: setAttribute() to null followed by getAttribute() 
PASS wbr.hidden: setAttribute() to null followed by IDL get 
PASS wbr.hidden: setAttribute() to 7 followed by getAttribute() 
PASS wbr.hidden: setAttribute() to 7 followed by IDL get 
PASS wbr.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS wbr.hidden: setAttribute() to 1.5 followed by IDL get 
PASS wbr.hidden: setAttribute() to true followed by getAttribute() 
PASS wbr.hidden: setAttribute() to true followed by IDL get 
PASS wbr.hidden: setAttribute() to false followed by getAttribute() 
PASS wbr.hidden: setAttribute() to false followed by IDL get 
PASS wbr.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS wbr.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS wbr.hidden: setAttribute() to NaN followed by getAttribute() 
PASS wbr.hidden: setAttribute() to NaN followed by IDL get 
PASS wbr.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS wbr.hidden: setAttribute() to Infinity followed by IDL get 
PASS wbr.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS wbr.hidden: setAttribute() to -Infinity followed by IDL get 
PASS wbr.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS wbr.hidden: setAttribute() to "\0" followed by IDL get 
PASS wbr.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS wbr.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS wbr.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS wbr.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS wbr.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS wbr.hidden: setAttribute() to "hidden" followed by IDL get 
PASS wbr.hidden: IDL set to "" should not throw 
PASS wbr.hidden: IDL set to "" followed by hasAttribute() 
PASS wbr.hidden: IDL set to "" followed by IDL get 
PASS wbr.hidden: IDL set to " foo " should not throw 
PASS wbr.hidden: IDL set to " foo " followed by hasAttribute() 
PASS wbr.hidden: IDL set to " foo " followed by IDL get 
PASS wbr.hidden: IDL set to undefined should not throw 
PASS wbr.hidden: IDL set to undefined followed by hasAttribute() 
PASS wbr.hidden: IDL set to undefined followed by IDL get 
PASS wbr.hidden: IDL set to null should not throw 
PASS wbr.hidden: IDL set to null followed by hasAttribute() 
PASS wbr.hidden: IDL set to null followed by IDL get 
PASS wbr.hidden: IDL set to 7 should not throw 
PASS wbr.hidden: IDL set to 7 followed by hasAttribute() 
PASS wbr.hidden: IDL set to 7 followed by IDL get 
PASS wbr.hidden: IDL set to 1.5 should not throw 
PASS wbr.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS wbr.hidden: IDL set to 1.5 followed by IDL get 
PASS wbr.hidden: IDL set to true should not throw 
PASS wbr.hidden: IDL set to true followed by hasAttribute() 
PASS wbr.hidden: IDL set to true followed by IDL get 
PASS wbr.hidden: IDL set to false should not throw 
PASS wbr.hidden: IDL set to false followed by hasAttribute() 
PASS wbr.hidden: IDL set to false followed by IDL get 
PASS wbr.hidden: IDL set to object "[object Object]" should not throw 
PASS wbr.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS wbr.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS wbr.hidden: IDL set to NaN should not throw 
PASS wbr.hidden: IDL set to NaN followed by hasAttribute() 
PASS wbr.hidden: IDL set to NaN followed by IDL get 
PASS wbr.hidden: IDL set to Infinity should not throw 
PASS wbr.hidden: IDL set to Infinity followed by hasAttribute() 
PASS wbr.hidden: IDL set to Infinity followed by IDL get 
PASS wbr.hidden: IDL set to -Infinity should not throw 
PASS wbr.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS wbr.hidden: IDL set to -Infinity followed by IDL get 
PASS wbr.hidden: IDL set to "\0" should not throw 
PASS wbr.hidden: IDL set to "\0" followed by hasAttribute() 
PASS wbr.hidden: IDL set to "\0" followed by IDL get 
PASS wbr.hidden: IDL set to object "test-toString" should not throw 
PASS wbr.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS wbr.hidden: IDL set to object "test-toString" followed by IDL get 
PASS wbr.hidden: IDL set to object "test-valueOf" should not throw 
PASS wbr.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS wbr.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS wbr.accessKey: typeof IDL attribute 
PASS wbr.accessKey: IDL get with DOM attribute unset 
PASS wbr.accessKey: setAttribute() to "" followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to "" followed by IDL get 
PASS wbr.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS wbr.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to undefined followed by IDL get 
PASS wbr.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to 7 followed by IDL get 
PASS wbr.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS wbr.accessKey: setAttribute() to true followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to true followed by IDL get 
PASS wbr.accessKey: setAttribute() to false followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to false followed by IDL get 
PASS wbr.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS wbr.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to NaN followed by IDL get 
PASS wbr.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to Infinity followed by IDL get 
PASS wbr.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS wbr.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to "\0" followed by IDL get 
PASS wbr.accessKey: setAttribute() to null followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to null followed by IDL get 
PASS wbr.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS wbr.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS wbr.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS wbr.accessKey: IDL set to "" should not throw 
PASS wbr.accessKey: IDL set to "" followed by getAttribute() 
PASS wbr.accessKey: IDL set to "" followed by IDL get 
PASS wbr.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS wbr.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS wbr.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS wbr.accessKey: IDL set to undefined should not throw 
PASS wbr.accessKey: IDL set to undefined followed by getAttribute() 
PASS wbr.accessKey: IDL set to undefined followed by IDL get 
PASS wbr.accessKey: IDL set to 7 should not throw 
PASS wbr.accessKey: IDL set to 7 followed by getAttribute() 
PASS wbr.accessKey: IDL set to 7 followed by IDL get 
PASS wbr.accessKey: IDL set to 1.5 should not throw 
PASS wbr.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS wbr.accessKey: IDL set to 1.5 followed by IDL get 
PASS wbr.accessKey: IDL set to true should not throw 
PASS wbr.accessKey: IDL set to true followed by getAttribute() 
PASS wbr.accessKey: IDL set to true followed by IDL get 
PASS wbr.accessKey: IDL set to false should not throw 
PASS wbr.accessKey: IDL set to false followed by getAttribute() 
PASS wbr.accessKey: IDL set to false followed by IDL get 
PASS wbr.accessKey: IDL set to object "[object Object]" should not throw 
PASS wbr.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS wbr.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS wbr.accessKey: IDL set to NaN should not throw 
PASS wbr.accessKey: IDL set to NaN followed by getAttribute() 
PASS wbr.accessKey: IDL set to NaN followed by IDL get 
PASS wbr.accessKey: IDL set to Infinity should not throw 
PASS wbr.accessKey: IDL set to Infinity followed by getAttribute() 
PASS wbr.accessKey: IDL set to Infinity followed by IDL get 
PASS wbr.accessKey: IDL set to -Infinity should not throw 
PASS wbr.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS wbr.accessKey: IDL set to -Infinity followed by IDL get 
PASS wbr.accessKey: IDL set to "\0" should not throw 
PASS wbr.accessKey: IDL set to "\0" followed by getAttribute() 
PASS wbr.accessKey: IDL set to "\0" followed by IDL get 
PASS wbr.accessKey: IDL set to null should not throw 
PASS wbr.accessKey: IDL set to null followed by getAttribute() 
PASS wbr.accessKey: IDL set to null followed by IDL get 
PASS wbr.accessKey: IDL set to object "test-toString" should not throw 
PASS wbr.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS wbr.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS wbr.accessKey: IDL set to object "test-valueOf" should not throw 
PASS wbr.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS wbr.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS wbr.tabIndex: typeof IDL attribute 
PASS wbr.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to -36 followed by IDL get 
PASS wbr.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to -1 followed by IDL get 
PASS wbr.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to 0 followed by IDL get 
PASS wbr.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to 1 followed by IDL get 
PASS wbr.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL wbr.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS wbr.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL wbr.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS wbr.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS wbr.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS wbr.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to "0" followed by IDL get 
PASS wbr.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to "1" followed by IDL get 
PASS wbr.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS wbr.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS wbr.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS wbr.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS wbr.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS wbr.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS wbr.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS wbr.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS wbr.tabIndex: IDL set to -36 should not throw 
PASS wbr.tabIndex: IDL set to -36 followed by getAttribute() 
PASS wbr.tabIndex: IDL set to -36 followed by IDL get 
PASS wbr.tabIndex: IDL set to -1 should not throw 
PASS wbr.tabIndex: IDL set to -1 followed by getAttribute() 
PASS wbr.tabIndex: IDL set to -1 followed by IDL get 
PASS wbr.tabIndex: IDL set to 0 should not throw 
PASS wbr.tabIndex: IDL set to 0 followed by getAttribute() 
PASS wbr.tabIndex: IDL set to 0 followed by IDL get 
PASS wbr.tabIndex: IDL set to 1 should not throw 
PASS wbr.tabIndex: IDL set to 1 followed by getAttribute() 
PASS wbr.tabIndex: IDL set to 1 followed by IDL get 
PASS wbr.tabIndex: IDL set to 2147483647 should not throw 
PASS wbr.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL wbr.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS wbr.tabIndex: IDL set to -2147483648 should not throw 
PASS wbr.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL wbr.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL wbr.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL wbr.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to null followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to true followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to false followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL wbr.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS wbr.itemScope: IDL set to "" should not throw 
FAIL wbr.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL wbr.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS wbr.itemScope: IDL set to " foo " should not throw 
PASS wbr.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL wbr.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS wbr.itemScope: IDL set to undefined should not throw 
FAIL wbr.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL wbr.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS wbr.itemScope: IDL set to null should not throw 
FAIL wbr.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL wbr.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS wbr.itemScope: IDL set to 7 should not throw 
PASS wbr.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL wbr.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS wbr.itemScope: IDL set to 1.5 should not throw 
PASS wbr.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL wbr.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS wbr.itemScope: IDL set to true should not throw 
PASS wbr.itemScope: IDL set to true followed by hasAttribute() 
PASS wbr.itemScope: IDL set to true followed by IDL get 
PASS wbr.itemScope: IDL set to false should not throw 
FAIL wbr.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS wbr.itemScope: IDL set to false followed by IDL get 
PASS wbr.itemScope: IDL set to object "[object Object]" should not throw 
PASS wbr.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL wbr.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS wbr.itemScope: IDL set to NaN should not throw 
FAIL wbr.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL wbr.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS wbr.itemScope: IDL set to Infinity should not throw 
PASS wbr.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL wbr.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS wbr.itemScope: IDL set to -Infinity should not throw 
PASS wbr.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL wbr.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS wbr.itemScope: IDL set to "\0" should not throw 
PASS wbr.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL wbr.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS wbr.itemScope: IDL set to object "test-toString" should not throw 
PASS wbr.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL wbr.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS wbr.itemScope: IDL set to object "test-valueOf" should not throw 
PASS wbr.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL wbr.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL wbr.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL wbr.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to "" followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to true followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to false followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to null followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS wbr.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL wbr.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS wbr.itemId: IDL set to "" should not throw 
FAIL wbr.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL wbr.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS wbr.itemId: IDL set to " foo " should not throw 
FAIL wbr.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL wbr.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS wbr.itemId: IDL set to "http://site.example/" should not throw 
FAIL wbr.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS wbr.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS wbr.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL wbr.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL wbr.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS wbr.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL wbr.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL wbr.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS wbr.itemId: IDL set to undefined should not throw 
FAIL wbr.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL wbr.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS wbr.itemId: IDL set to 7 should not throw 
FAIL wbr.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL wbr.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS wbr.itemId: IDL set to 1.5 should not throw 
FAIL wbr.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL wbr.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS wbr.itemId: IDL set to true should not throw 
FAIL wbr.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL wbr.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS wbr.itemId: IDL set to false should not throw 
FAIL wbr.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL wbr.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS wbr.itemId: IDL set to object "[object Object]" should not throw 
FAIL wbr.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL wbr.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS wbr.itemId: IDL set to NaN should not throw 
FAIL wbr.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL wbr.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS wbr.itemId: IDL set to Infinity should not throw 
FAIL wbr.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL wbr.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS wbr.itemId: IDL set to -Infinity should not throw 
FAIL wbr.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL wbr.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS wbr.itemId: IDL set to "\0" should not throw 
FAIL wbr.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL wbr.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS wbr.itemId: IDL set to null should not throw 
FAIL wbr.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL wbr.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS wbr.itemId: IDL set to object "test-toString" should not throw 
FAIL wbr.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL wbr.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS wbr.itemId: IDL set to object "test-valueOf" should not throw 
PASS wbr.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL wbr.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL meta.itemValue (<meta content>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL meta.itemValue (<meta content>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to "" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to undefined followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to 7 followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to 1.5 followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to true followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to false followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to NaN followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to Infinity followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to -Infinity followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to "\0" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to null followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS meta.itemValue (<meta content>): IDL set to "" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to "" followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to undefined should not throw 
FAIL meta.itemValue (<meta content>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS meta.itemValue (<meta content>): IDL set to 7 should not throw 
FAIL meta.itemValue (<meta content>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS meta.itemValue (<meta content>): IDL set to 1.5 should not throw 
FAIL meta.itemValue (<meta content>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS meta.itemValue (<meta content>): IDL set to true should not throw 
FAIL meta.itemValue (<meta content>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS meta.itemValue (<meta content>): IDL set to false should not throw 
FAIL meta.itemValue (<meta content>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS meta.itemValue (<meta content>): IDL set to object "[object Object]" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS meta.itemValue (<meta content>): IDL set to NaN should not throw 
FAIL meta.itemValue (<meta content>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS meta.itemValue (<meta content>): IDL set to Infinity should not throw 
FAIL meta.itemValue (<meta content>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS meta.itemValue (<meta content>): IDL set to -Infinity should not throw 
FAIL meta.itemValue (<meta content>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS meta.itemValue (<meta content>): IDL set to "\0" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to "\0" followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to null should not throw 
FAIL meta.itemValue (<meta content>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS meta.itemValue (<meta content>): IDL set to object "test-toString" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS meta.itemValue (<meta content>): IDL set to object "test-valueOf" should not throw 
PASS meta.itemValue (<meta content>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
FAIL audio.itemValue (<audio src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL audio.itemValue (<audio src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to " foo " followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to undefined followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to 7 followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to true followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to false followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to NaN followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to Infinity followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "\0" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to null followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS audio.itemValue (<audio src>): IDL set to "" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS audio.itemValue (<audio src>): IDL set to " foo " should not throw 
FAIL audio.itemValue (<audio src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS audio.itemValue (<audio src>): IDL set to "http://site.example/" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS audio.itemValue (<audio src>): IDL set to "http://site.example/" followed by IDL get 
PASS audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS audio.itemValue (<audio src>): IDL set to undefined should not throw 
FAIL audio.itemValue (<audio src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS audio.itemValue (<audio src>): IDL set to 7 should not throw 
FAIL audio.itemValue (<audio src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS audio.itemValue (<audio src>): IDL set to 1.5 should not throw 
FAIL audio.itemValue (<audio src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS audio.itemValue (<audio src>): IDL set to true should not throw 
FAIL audio.itemValue (<audio src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS audio.itemValue (<audio src>): IDL set to false should not throw 
FAIL audio.itemValue (<audio src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS audio.itemValue (<audio src>): IDL set to object "[object Object]" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS audio.itemValue (<audio src>): IDL set to NaN should not throw 
FAIL audio.itemValue (<audio src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS audio.itemValue (<audio src>): IDL set to Infinity should not throw 
FAIL audio.itemValue (<audio src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS audio.itemValue (<audio src>): IDL set to -Infinity should not throw 
FAIL audio.itemValue (<audio src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS audio.itemValue (<audio src>): IDL set to "\0" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS audio.itemValue (<audio src>): IDL set to null should not throw 
FAIL audio.itemValue (<audio src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS audio.itemValue (<audio src>): IDL set to object "test-toString" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS audio.itemValue (<audio src>): IDL set to object "test-valueOf" should not throw 
PASS audio.itemValue (<audio src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL embed.itemValue (<embed src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL embed.itemValue (<embed src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to " foo " followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to undefined followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to 7 followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to true followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to false followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to NaN followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to Infinity followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "\0" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to null followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS embed.itemValue (<embed src>): IDL set to "" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS embed.itemValue (<embed src>): IDL set to " foo " should not throw 
FAIL embed.itemValue (<embed src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS embed.itemValue (<embed src>): IDL set to "http://site.example/" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS embed.itemValue (<embed src>): IDL set to "http://site.example/" followed by IDL get 
PASS embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS embed.itemValue (<embed src>): IDL set to undefined should not throw 
FAIL embed.itemValue (<embed src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS embed.itemValue (<embed src>): IDL set to 7 should not throw 
FAIL embed.itemValue (<embed src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS embed.itemValue (<embed src>): IDL set to 1.5 should not throw 
FAIL embed.itemValue (<embed src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS embed.itemValue (<embed src>): IDL set to true should not throw 
FAIL embed.itemValue (<embed src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS embed.itemValue (<embed src>): IDL set to false should not throw 
FAIL embed.itemValue (<embed src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS embed.itemValue (<embed src>): IDL set to object "[object Object]" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS embed.itemValue (<embed src>): IDL set to NaN should not throw 
FAIL embed.itemValue (<embed src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS embed.itemValue (<embed src>): IDL set to Infinity should not throw 
FAIL embed.itemValue (<embed src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS embed.itemValue (<embed src>): IDL set to -Infinity should not throw 
FAIL embed.itemValue (<embed src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS embed.itemValue (<embed src>): IDL set to "\0" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS embed.itemValue (<embed src>): IDL set to null should not throw 
FAIL embed.itemValue (<embed src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS embed.itemValue (<embed src>): IDL set to object "test-toString" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS embed.itemValue (<embed src>): IDL set to object "test-valueOf" should not throw 
PASS embed.itemValue (<embed src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL iframe.itemValue (<iframe src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL iframe.itemValue (<iframe src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to " foo " followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to undefined followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to 7 followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to true followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to false followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to NaN followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to Infinity followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "\0" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to null followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): IDL set to "" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS iframe.itemValue (<iframe src>): IDL set to " foo " should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS iframe.itemValue (<iframe src>): IDL set to "http://site.example/" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS iframe.itemValue (<iframe src>): IDL set to "http://site.example/" followed by IDL get 
PASS iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS iframe.itemValue (<iframe src>): IDL set to undefined should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): IDL set to 7 should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS iframe.itemValue (<iframe src>): IDL set to 1.5 should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS iframe.itemValue (<iframe src>): IDL set to true should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS iframe.itemValue (<iframe src>): IDL set to false should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS iframe.itemValue (<iframe src>): IDL set to object "[object Object]" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS iframe.itemValue (<iframe src>): IDL set to NaN should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS iframe.itemValue (<iframe src>): IDL set to Infinity should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS iframe.itemValue (<iframe src>): IDL set to -Infinity should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS iframe.itemValue (<iframe src>): IDL set to "\0" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS iframe.itemValue (<iframe src>): IDL set to null should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS iframe.itemValue (<iframe src>): IDL set to object "test-toString" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" should not throw 
PASS iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL img.itemValue (<img src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL img.itemValue (<img src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to " foo " followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to undefined followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to 7 followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to true followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to false followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to NaN followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to Infinity followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "\0" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to null followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS img.itemValue (<img src>): IDL set to "" should not throw 
FAIL img.itemValue (<img src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS img.itemValue (<img src>): IDL set to " foo " should not throw 
FAIL img.itemValue (<img src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS img.itemValue (<img src>): IDL set to "http://site.example/" should not throw 
FAIL img.itemValue (<img src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS img.itemValue (<img src>): IDL set to "http://site.example/" followed by IDL get 
PASS img.itemValue (<img src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL img.itemValue (<img src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS img.itemValue (<img src>): IDL set to undefined should not throw 
FAIL img.itemValue (<img src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS img.itemValue (<img src>): IDL set to 7 should not throw 
FAIL img.itemValue (<img src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS img.itemValue (<img src>): IDL set to 1.5 should not throw 
FAIL img.itemValue (<img src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS img.itemValue (<img src>): IDL set to true should not throw 
FAIL img.itemValue (<img src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS img.itemValue (<img src>): IDL set to false should not throw 
FAIL img.itemValue (<img src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS img.itemValue (<img src>): IDL set to object "[object Object]" should not throw 
FAIL img.itemValue (<img src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS img.itemValue (<img src>): IDL set to NaN should not throw 
FAIL img.itemValue (<img src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS img.itemValue (<img src>): IDL set to Infinity should not throw 
FAIL img.itemValue (<img src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS img.itemValue (<img src>): IDL set to -Infinity should not throw 
FAIL img.itemValue (<img src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS img.itemValue (<img src>): IDL set to "\0" should not throw 
FAIL img.itemValue (<img src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS img.itemValue (<img src>): IDL set to null should not throw 
FAIL img.itemValue (<img src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS img.itemValue (<img src>): IDL set to object "test-toString" should not throw 
FAIL img.itemValue (<img src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS img.itemValue (<img src>): IDL set to object "test-valueOf" should not throw 
PASS img.itemValue (<img src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL img.itemValue (<img src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL source.itemValue (<source src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL source.itemValue (<source src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to " foo " followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to undefined followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to 7 followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to true followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to false followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to NaN followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to Infinity followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "\0" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to null followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS source.itemValue (<source src>): IDL set to "" should not throw 
FAIL source.itemValue (<source src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS source.itemValue (<source src>): IDL set to " foo " should not throw 
FAIL source.itemValue (<source src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS source.itemValue (<source src>): IDL set to "http://site.example/" should not throw 
FAIL source.itemValue (<source src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS source.itemValue (<source src>): IDL set to "http://site.example/" followed by IDL get 
PASS source.itemValue (<source src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL source.itemValue (<source src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS source.itemValue (<source src>): IDL set to undefined should not throw 
FAIL source.itemValue (<source src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS source.itemValue (<source src>): IDL set to 7 should not throw 
FAIL source.itemValue (<source src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS source.itemValue (<source src>): IDL set to 1.5 should not throw 
FAIL source.itemValue (<source src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS source.itemValue (<source src>): IDL set to true should not throw 
FAIL source.itemValue (<source src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS source.itemValue (<source src>): IDL set to false should not throw 
FAIL source.itemValue (<source src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS source.itemValue (<source src>): IDL set to object "[object Object]" should not throw 
FAIL source.itemValue (<source src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS source.itemValue (<source src>): IDL set to NaN should not throw 
FAIL source.itemValue (<source src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS source.itemValue (<source src>): IDL set to Infinity should not throw 
FAIL source.itemValue (<source src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS source.itemValue (<source src>): IDL set to -Infinity should not throw 
FAIL source.itemValue (<source src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS source.itemValue (<source src>): IDL set to "\0" should not throw 
FAIL source.itemValue (<source src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS source.itemValue (<source src>): IDL set to null should not throw 
FAIL source.itemValue (<source src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS source.itemValue (<source src>): IDL set to object "test-toString" should not throw 
FAIL source.itemValue (<source src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS source.itemValue (<source src>): IDL set to object "test-valueOf" should not throw 
PASS source.itemValue (<source src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL source.itemValue (<source src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL track.itemValue (<track src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL track.itemValue (<track src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to " foo " followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to undefined followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to 7 followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to true followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to false followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to NaN followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to Infinity followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "\0" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to null followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS track.itemValue (<track src>): IDL set to "" should not throw 
FAIL track.itemValue (<track src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS track.itemValue (<track src>): IDL set to " foo " should not throw 
FAIL track.itemValue (<track src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS track.itemValue (<track src>): IDL set to "http://site.example/" should not throw 
FAIL track.itemValue (<track src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS track.itemValue (<track src>): IDL set to "http://site.example/" followed by IDL get 
PASS track.itemValue (<track src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL track.itemValue (<track src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS track.itemValue (<track src>): IDL set to undefined should not throw 
FAIL track.itemValue (<track src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS track.itemValue (<track src>): IDL set to 7 should not throw 
FAIL track.itemValue (<track src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS track.itemValue (<track src>): IDL set to 1.5 should not throw 
FAIL track.itemValue (<track src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS track.itemValue (<track src>): IDL set to true should not throw 
FAIL track.itemValue (<track src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS track.itemValue (<track src>): IDL set to false should not throw 
FAIL track.itemValue (<track src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS track.itemValue (<track src>): IDL set to object "[object Object]" should not throw 
FAIL track.itemValue (<track src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS track.itemValue (<track src>): IDL set to NaN should not throw 
FAIL track.itemValue (<track src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS track.itemValue (<track src>): IDL set to Infinity should not throw 
FAIL track.itemValue (<track src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS track.itemValue (<track src>): IDL set to -Infinity should not throw 
FAIL track.itemValue (<track src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS track.itemValue (<track src>): IDL set to "\0" should not throw 
FAIL track.itemValue (<track src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS track.itemValue (<track src>): IDL set to null should not throw 
FAIL track.itemValue (<track src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS track.itemValue (<track src>): IDL set to object "test-toString" should not throw 
FAIL track.itemValue (<track src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS track.itemValue (<track src>): IDL set to object "test-valueOf" should not throw 
PASS track.itemValue (<track src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL track.itemValue (<track src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL video.itemValue (<video src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL video.itemValue (<video src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to " foo " followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to undefined followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to 7 followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to true followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to false followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to NaN followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to Infinity followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "\0" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to null followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS video.itemValue (<video src>): IDL set to "" should not throw 
FAIL video.itemValue (<video src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS video.itemValue (<video src>): IDL set to " foo " should not throw 
FAIL video.itemValue (<video src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS video.itemValue (<video src>): IDL set to "http://site.example/" should not throw 
FAIL video.itemValue (<video src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS video.itemValue (<video src>): IDL set to "http://site.example/" followed by IDL get 
PASS video.itemValue (<video src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL video.itemValue (<video src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS video.itemValue (<video src>): IDL set to undefined should not throw 
FAIL video.itemValue (<video src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS video.itemValue (<video src>): IDL set to 7 should not throw 
FAIL video.itemValue (<video src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS video.itemValue (<video src>): IDL set to 1.5 should not throw 
FAIL video.itemValue (<video src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS video.itemValue (<video src>): IDL set to true should not throw 
FAIL video.itemValue (<video src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS video.itemValue (<video src>): IDL set to false should not throw 
FAIL video.itemValue (<video src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS video.itemValue (<video src>): IDL set to object "[object Object]" should not throw 
FAIL video.itemValue (<video src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS video.itemValue (<video src>): IDL set to NaN should not throw 
FAIL video.itemValue (<video src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS video.itemValue (<video src>): IDL set to Infinity should not throw 
FAIL video.itemValue (<video src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS video.itemValue (<video src>): IDL set to -Infinity should not throw 
FAIL video.itemValue (<video src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS video.itemValue (<video src>): IDL set to "\0" should not throw 
FAIL video.itemValue (<video src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS video.itemValue (<video src>): IDL set to null should not throw 
FAIL video.itemValue (<video src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS video.itemValue (<video src>): IDL set to object "test-toString" should not throw 
FAIL video.itemValue (<video src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS video.itemValue (<video src>): IDL set to object "test-valueOf" should not throw 
PASS video.itemValue (<video src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL video.itemValue (<video src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL a.itemValue (<a href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL a.itemValue (<a href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to " foo " followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to undefined followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to 7 followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to true followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to false followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to NaN followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to Infinity followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "\0" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to null followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS a.itemValue (<a href>): IDL set to "" should not throw 
FAIL a.itemValue (<a href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS a.itemValue (<a href>): IDL set to " foo " should not throw 
FAIL a.itemValue (<a href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS a.itemValue (<a href>): IDL set to "http://site.example/" should not throw 
FAIL a.itemValue (<a href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS a.itemValue (<a href>): IDL set to "http://site.example/" followed by IDL get 
PASS a.itemValue (<a href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL a.itemValue (<a href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS a.itemValue (<a href>): IDL set to undefined should not throw 
FAIL a.itemValue (<a href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS a.itemValue (<a href>): IDL set to 7 should not throw 
FAIL a.itemValue (<a href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS a.itemValue (<a href>): IDL set to 1.5 should not throw 
FAIL a.itemValue (<a href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS a.itemValue (<a href>): IDL set to true should not throw 
FAIL a.itemValue (<a href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS a.itemValue (<a href>): IDL set to false should not throw 
FAIL a.itemValue (<a href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS a.itemValue (<a href>): IDL set to object "[object Object]" should not throw 
FAIL a.itemValue (<a href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS a.itemValue (<a href>): IDL set to NaN should not throw 
FAIL a.itemValue (<a href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS a.itemValue (<a href>): IDL set to Infinity should not throw 
FAIL a.itemValue (<a href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS a.itemValue (<a href>): IDL set to -Infinity should not throw 
FAIL a.itemValue (<a href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS a.itemValue (<a href>): IDL set to "\0" should not throw 
FAIL a.itemValue (<a href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS a.itemValue (<a href>): IDL set to null should not throw 
FAIL a.itemValue (<a href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS a.itemValue (<a href>): IDL set to object "test-toString" should not throw 
FAIL a.itemValue (<a href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS a.itemValue (<a href>): IDL set to object "test-valueOf" should not throw 
PASS a.itemValue (<a href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL a.itemValue (<a href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL area.itemValue (<area href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL area.itemValue (<area href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to " foo " followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to undefined followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to 7 followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to true followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to false followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to NaN followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to Infinity followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "\0" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to null followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS area.itemValue (<area href>): IDL set to "" should not throw 
FAIL area.itemValue (<area href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS area.itemValue (<area href>): IDL set to " foo " should not throw 
FAIL area.itemValue (<area href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS area.itemValue (<area href>): IDL set to "http://site.example/" should not throw 
FAIL area.itemValue (<area href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS area.itemValue (<area href>): IDL set to "http://site.example/" followed by IDL get 
PASS area.itemValue (<area href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL area.itemValue (<area href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS area.itemValue (<area href>): IDL set to undefined should not throw 
FAIL area.itemValue (<area href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS area.itemValue (<area href>): IDL set to 7 should not throw 
FAIL area.itemValue (<area href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS area.itemValue (<area href>): IDL set to 1.5 should not throw 
FAIL area.itemValue (<area href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS area.itemValue (<area href>): IDL set to true should not throw 
FAIL area.itemValue (<area href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS area.itemValue (<area href>): IDL set to false should not throw 
FAIL area.itemValue (<area href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS area.itemValue (<area href>): IDL set to object "[object Object]" should not throw 
FAIL area.itemValue (<area href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS area.itemValue (<area href>): IDL set to NaN should not throw 
FAIL area.itemValue (<area href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS area.itemValue (<area href>): IDL set to Infinity should not throw 
FAIL area.itemValue (<area href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS area.itemValue (<area href>): IDL set to -Infinity should not throw 
FAIL area.itemValue (<area href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS area.itemValue (<area href>): IDL set to "\0" should not throw 
FAIL area.itemValue (<area href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS area.itemValue (<area href>): IDL set to null should not throw 
FAIL area.itemValue (<area href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS area.itemValue (<area href>): IDL set to object "test-toString" should not throw 
FAIL area.itemValue (<area href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS area.itemValue (<area href>): IDL set to object "test-valueOf" should not throw 
PASS area.itemValue (<area href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL area.itemValue (<area href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL link.itemValue (<link href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL link.itemValue (<link href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to " foo " followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to undefined followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to 7 followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to true followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to false followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to NaN followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to Infinity followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "\0" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to null followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS link.itemValue (<link href>): IDL set to "" should not throw 
FAIL link.itemValue (<link href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS link.itemValue (<link href>): IDL set to " foo " should not throw 
FAIL link.itemValue (<link href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS link.itemValue (<link href>): IDL set to "http://site.example/" should not throw 
FAIL link.itemValue (<link href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS link.itemValue (<link href>): IDL set to "http://site.example/" followed by IDL get 
PASS link.itemValue (<link href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL link.itemValue (<link href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS link.itemValue (<link href>): IDL set to undefined should not throw 
FAIL link.itemValue (<link href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS link.itemValue (<link href>): IDL set to 7 should not throw 
FAIL link.itemValue (<link href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS link.itemValue (<link href>): IDL set to 1.5 should not throw 
FAIL link.itemValue (<link href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS link.itemValue (<link href>): IDL set to true should not throw 
FAIL link.itemValue (<link href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS link.itemValue (<link href>): IDL set to false should not throw 
FAIL link.itemValue (<link href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS link.itemValue (<link href>): IDL set to object "[object Object]" should not throw 
FAIL link.itemValue (<link href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS link.itemValue (<link href>): IDL set to NaN should not throw 
FAIL link.itemValue (<link href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS link.itemValue (<link href>): IDL set to Infinity should not throw 
FAIL link.itemValue (<link href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS link.itemValue (<link href>): IDL set to -Infinity should not throw 
FAIL link.itemValue (<link href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS link.itemValue (<link href>): IDL set to "\0" should not throw 
FAIL link.itemValue (<link href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS link.itemValue (<link href>): IDL set to null should not throw 
FAIL link.itemValue (<link href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS link.itemValue (<link href>): IDL set to object "test-toString" should not throw 
FAIL link.itemValue (<link href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS link.itemValue (<link href>): IDL set to object "test-valueOf" should not throw 
PASS link.itemValue (<link href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL link.itemValue (<link href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL object.itemValue (<object data>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL object.itemValue (<object data>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to " foo " followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to undefined followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to 7 followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to 1.5 followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to true followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to false followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to NaN followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to Infinity followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to -Infinity followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "\0" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-text.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to null followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS object.itemValue (<object data>): IDL set to "" should not throw 
FAIL object.itemValue (<object data>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got ""
PASS object.itemValue (<object data>): IDL set to " foo " should not throw 
FAIL object.itemValue (<object data>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS object.itemValue (<object data>): IDL set to "http://site.example/" should not throw 
FAIL object.itemValue (<object data>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS object.itemValue (<object data>): IDL set to "http://site.example/" followed by IDL get 
PASS object.itemValue (<object data>): IDL set to "//site.example/path???@#l" should not throw 
FAIL object.itemValue (<object data>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS object.itemValue (<object data>): IDL set to undefined should not throw 
FAIL object.itemValue (<object data>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS object.itemValue (<object data>): IDL set to 7 should not throw 
FAIL object.itemValue (<object data>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS object.itemValue (<object data>): IDL set to 1.5 should not throw 
FAIL object.itemValue (<object data>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS object.itemValue (<object data>): IDL set to true should not throw 
FAIL object.itemValue (<object data>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS object.itemValue (<object data>): IDL set to false should not throw 
FAIL object.itemValue (<object data>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS object.itemValue (<object data>): IDL set to object "[object Object]" should not throw 
FAIL object.itemValue (<object data>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS object.itemValue (<object data>): IDL set to NaN should not throw 
FAIL object.itemValue (<object data>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS object.itemValue (<object data>): IDL set to Infinity should not throw 
FAIL object.itemValue (<object data>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS object.itemValue (<object data>): IDL set to -Infinity should not throw 
FAIL object.itemValue (<object data>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS object.itemValue (<object data>): IDL set to "\0" should not throw 
FAIL object.itemValue (<object data>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-text.html" but got "\0"
PASS object.itemValue (<object data>): IDL set to null should not throw 
FAIL object.itemValue (<object data>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS object.itemValue (<object data>): IDL set to object "test-toString" should not throw 
FAIL object.itemValue (<object data>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS object.itemValue (<object data>): IDL set to object "test-valueOf" should not throw 
PASS object.itemValue (<object data>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL object.itemValue (<object data>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL data.itemValue (<data value>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL data.itemValue (<data value>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to "" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to undefined followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to 7 followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to 1.5 followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to true followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to false followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to NaN followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to Infinity followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to -Infinity followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to "\0" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to null followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS data.itemValue (<data value>): IDL set to "" should not throw 
FAIL data.itemValue (<data value>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to "" followed by IDL get 
PASS data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.itemValue (<data value>): IDL set to undefined should not throw 
FAIL data.itemValue (<data value>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS data.itemValue (<data value>): IDL set to 7 should not throw 
FAIL data.itemValue (<data value>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS data.itemValue (<data value>): IDL set to 1.5 should not throw 
FAIL data.itemValue (<data value>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS data.itemValue (<data value>): IDL set to true should not throw 
FAIL data.itemValue (<data value>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS data.itemValue (<data value>): IDL set to false should not throw 
FAIL data.itemValue (<data value>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS data.itemValue (<data value>): IDL set to object "[object Object]" should not throw 
FAIL data.itemValue (<data value>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS data.itemValue (<data value>): IDL set to NaN should not throw 
FAIL data.itemValue (<data value>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS data.itemValue (<data value>): IDL set to Infinity should not throw 
FAIL data.itemValue (<data value>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS data.itemValue (<data value>): IDL set to -Infinity should not throw 
FAIL data.itemValue (<data value>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS data.itemValue (<data value>): IDL set to "\0" should not throw 
FAIL data.itemValue (<data value>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to "\0" followed by IDL get 
PASS data.itemValue (<data value>): IDL set to null should not throw 
FAIL data.itemValue (<data value>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS data.itemValue (<data value>): IDL set to object "test-toString" should not throw 
FAIL data.itemValue (<data value>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS data.itemValue (<data value>): IDL set to object "test-valueOf" should not throw 
PASS data.itemValue (<data value>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL data.itemValue (<data value>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"

