Blocked access to external URL http://site.example/
Blocked access to external URL http://site.example/path???@#l
Implementers looking to fix bugs might want to use the original version of this suite's test framework, which conveniently aggregates similar errors and only reports failures. This file is (part of) the authoritative conformance test suite, and is suitable for incorporation into automated test suites.

(Note: missing tests for types tokenlist, settable tokenlist, limited double.)


PASS form.title: typeof IDL attribute 
PASS form.title: IDL get with DOM attribute unset 
PASS form.title: setAttribute() to "" followed by getAttribute() 
PASS form.title: setAttribute() to "" followed by IDL get 
PASS form.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.title: setAttribute() to undefined followed by getAttribute() 
PASS form.title: setAttribute() to undefined followed by IDL get 
PASS form.title: setAttribute() to 7 followed by getAttribute() 
PASS form.title: setAttribute() to 7 followed by IDL get 
PASS form.title: setAttribute() to 1.5 followed by getAttribute() 
PASS form.title: setAttribute() to 1.5 followed by IDL get 
PASS form.title: setAttribute() to true followed by getAttribute() 
PASS form.title: setAttribute() to true followed by IDL get 
PASS form.title: setAttribute() to false followed by getAttribute() 
PASS form.title: setAttribute() to false followed by IDL get 
PASS form.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS form.title: setAttribute() to NaN followed by getAttribute() 
PASS form.title: setAttribute() to NaN followed by IDL get 
PASS form.title: setAttribute() to Infinity followed by getAttribute() 
PASS form.title: setAttribute() to Infinity followed by IDL get 
PASS form.title: setAttribute() to -Infinity followed by getAttribute() 
PASS form.title: setAttribute() to -Infinity followed by IDL get 
PASS form.title: setAttribute() to "\0" followed by getAttribute() 
PASS form.title: setAttribute() to "\0" followed by IDL get 
PASS form.title: setAttribute() to null followed by getAttribute() 
PASS form.title: setAttribute() to null followed by IDL get 
PASS form.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.title: setAttribute() to object "test-toString" followed by IDL get 
PASS form.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.title: IDL set to "" should not throw 
PASS form.title: IDL set to "" followed by getAttribute() 
PASS form.title: IDL set to "" followed by IDL get 
PASS form.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS form.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.title: IDL set to undefined should not throw 
PASS form.title: IDL set to undefined followed by getAttribute() 
PASS form.title: IDL set to undefined followed by IDL get 
PASS form.title: IDL set to 7 should not throw 
PASS form.title: IDL set to 7 followed by getAttribute() 
PASS form.title: IDL set to 7 followed by IDL get 
PASS form.title: IDL set to 1.5 should not throw 
PASS form.title: IDL set to 1.5 followed by getAttribute() 
PASS form.title: IDL set to 1.5 followed by IDL get 
PASS form.title: IDL set to true should not throw 
PASS form.title: IDL set to true followed by getAttribute() 
PASS form.title: IDL set to true followed by IDL get 
PASS form.title: IDL set to false should not throw 
PASS form.title: IDL set to false followed by getAttribute() 
PASS form.title: IDL set to false followed by IDL get 
PASS form.title: IDL set to object "[object Object]" should not throw 
PASS form.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS form.title: IDL set to object "[object Object]" followed by IDL get 
PASS form.title: IDL set to NaN should not throw 
PASS form.title: IDL set to NaN followed by getAttribute() 
PASS form.title: IDL set to NaN followed by IDL get 
PASS form.title: IDL set to Infinity should not throw 
PASS form.title: IDL set to Infinity followed by getAttribute() 
PASS form.title: IDL set to Infinity followed by IDL get 
PASS form.title: IDL set to -Infinity should not throw 
PASS form.title: IDL set to -Infinity followed by getAttribute() 
PASS form.title: IDL set to -Infinity followed by IDL get 
PASS form.title: IDL set to "\0" should not throw 
PASS form.title: IDL set to "\0" followed by getAttribute() 
PASS form.title: IDL set to "\0" followed by IDL get 
PASS form.title: IDL set to null should not throw 
PASS form.title: IDL set to null followed by getAttribute() 
PASS form.title: IDL set to null followed by IDL get 
PASS form.title: IDL set to object "test-toString" should not throw 
PASS form.title: IDL set to object "test-toString" followed by getAttribute() 
PASS form.title: IDL set to object "test-toString" followed by IDL get 
PASS form.title: IDL set to object "test-valueOf" should not throw 
PASS form.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS form.title: IDL set to object "test-valueOf" followed by IDL get 
PASS form.lang: typeof IDL attribute 
PASS form.lang: IDL get with DOM attribute unset 
PASS form.lang: setAttribute() to "" followed by getAttribute() 
PASS form.lang: setAttribute() to "" followed by IDL get 
PASS form.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.lang: setAttribute() to undefined followed by getAttribute() 
PASS form.lang: setAttribute() to undefined followed by IDL get 
PASS form.lang: setAttribute() to 7 followed by getAttribute() 
PASS form.lang: setAttribute() to 7 followed by IDL get 
PASS form.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS form.lang: setAttribute() to 1.5 followed by IDL get 
PASS form.lang: setAttribute() to true followed by getAttribute() 
PASS form.lang: setAttribute() to true followed by IDL get 
PASS form.lang: setAttribute() to false followed by getAttribute() 
PASS form.lang: setAttribute() to false followed by IDL get 
PASS form.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS form.lang: setAttribute() to NaN followed by getAttribute() 
PASS form.lang: setAttribute() to NaN followed by IDL get 
PASS form.lang: setAttribute() to Infinity followed by getAttribute() 
PASS form.lang: setAttribute() to Infinity followed by IDL get 
PASS form.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS form.lang: setAttribute() to -Infinity followed by IDL get 
PASS form.lang: setAttribute() to "\0" followed by getAttribute() 
PASS form.lang: setAttribute() to "\0" followed by IDL get 
PASS form.lang: setAttribute() to null followed by getAttribute() 
PASS form.lang: setAttribute() to null followed by IDL get 
PASS form.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS form.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.lang: IDL set to "" should not throw 
PASS form.lang: IDL set to "" followed by getAttribute() 
PASS form.lang: IDL set to "" followed by IDL get 
PASS form.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS form.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.lang: IDL set to undefined should not throw 
PASS form.lang: IDL set to undefined followed by getAttribute() 
PASS form.lang: IDL set to undefined followed by IDL get 
PASS form.lang: IDL set to 7 should not throw 
PASS form.lang: IDL set to 7 followed by getAttribute() 
PASS form.lang: IDL set to 7 followed by IDL get 
PASS form.lang: IDL set to 1.5 should not throw 
PASS form.lang: IDL set to 1.5 followed by getAttribute() 
PASS form.lang: IDL set to 1.5 followed by IDL get 
PASS form.lang: IDL set to true should not throw 
PASS form.lang: IDL set to true followed by getAttribute() 
PASS form.lang: IDL set to true followed by IDL get 
PASS form.lang: IDL set to false should not throw 
PASS form.lang: IDL set to false followed by getAttribute() 
PASS form.lang: IDL set to false followed by IDL get 
PASS form.lang: IDL set to object "[object Object]" should not throw 
PASS form.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS form.lang: IDL set to object "[object Object]" followed by IDL get 
PASS form.lang: IDL set to NaN should not throw 
PASS form.lang: IDL set to NaN followed by getAttribute() 
PASS form.lang: IDL set to NaN followed by IDL get 
PASS form.lang: IDL set to Infinity should not throw 
PASS form.lang: IDL set to Infinity followed by getAttribute() 
PASS form.lang: IDL set to Infinity followed by IDL get 
PASS form.lang: IDL set to -Infinity should not throw 
PASS form.lang: IDL set to -Infinity followed by getAttribute() 
PASS form.lang: IDL set to -Infinity followed by IDL get 
PASS form.lang: IDL set to "\0" should not throw 
PASS form.lang: IDL set to "\0" followed by getAttribute() 
PASS form.lang: IDL set to "\0" followed by IDL get 
PASS form.lang: IDL set to null should not throw 
PASS form.lang: IDL set to null followed by getAttribute() 
PASS form.lang: IDL set to null followed by IDL get 
PASS form.lang: IDL set to object "test-toString" should not throw 
PASS form.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS form.lang: IDL set to object "test-toString" followed by IDL get 
PASS form.lang: IDL set to object "test-valueOf" should not throw 
PASS form.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS form.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS form.dir: typeof IDL attribute 
PASS form.dir: IDL get with DOM attribute unset 
PASS form.dir: setAttribute() to "" followed by getAttribute() 
PASS form.dir: setAttribute() to "" followed by IDL get 
PASS form.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.dir: setAttribute() to undefined followed by getAttribute() 
PASS form.dir: setAttribute() to undefined followed by IDL get 
PASS form.dir: setAttribute() to 7 followed by getAttribute() 
PASS form.dir: setAttribute() to 7 followed by IDL get 
PASS form.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS form.dir: setAttribute() to 1.5 followed by IDL get 
PASS form.dir: setAttribute() to true followed by getAttribute() 
PASS form.dir: setAttribute() to true followed by IDL get 
PASS form.dir: setAttribute() to false followed by getAttribute() 
PASS form.dir: setAttribute() to false followed by IDL get 
PASS form.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS form.dir: setAttribute() to NaN followed by getAttribute() 
PASS form.dir: setAttribute() to NaN followed by IDL get 
PASS form.dir: setAttribute() to Infinity followed by getAttribute() 
PASS form.dir: setAttribute() to Infinity followed by IDL get 
PASS form.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS form.dir: setAttribute() to -Infinity followed by IDL get 
PASS form.dir: setAttribute() to "\0" followed by getAttribute() 
PASS form.dir: setAttribute() to "\0" followed by IDL get 
PASS form.dir: setAttribute() to null followed by getAttribute() 
PASS form.dir: setAttribute() to null followed by IDL get 
PASS form.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS form.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS form.dir: setAttribute() to "ltr" followed by IDL get 
PASS form.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS form.dir: setAttribute() to "xltr" followed by IDL get 
PASS form.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS form.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS form.dir: setAttribute() to "tr" followed by getAttribute() 
PASS form.dir: setAttribute() to "tr" followed by IDL get 
PASS form.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS form.dir: setAttribute() to "LTR" followed by IDL get 
PASS form.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS form.dir: setAttribute() to "rtl" followed by IDL get 
PASS form.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS form.dir: setAttribute() to "xrtl" followed by IDL get 
PASS form.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS form.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS form.dir: setAttribute() to "tl" followed by getAttribute() 
PASS form.dir: setAttribute() to "tl" followed by IDL get 
PASS form.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS form.dir: setAttribute() to "RTL" followed by IDL get 
PASS form.dir: setAttribute() to "auto" followed by getAttribute() 
PASS form.dir: setAttribute() to "auto" followed by IDL get 
PASS form.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS form.dir: setAttribute() to "xauto" followed by IDL get 
PASS form.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS form.dir: setAttribute() to "auto\0" followed by IDL get 
PASS form.dir: setAttribute() to "uto" followed by getAttribute() 
PASS form.dir: setAttribute() to "uto" followed by IDL get 
PASS form.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS form.dir: setAttribute() to "AUTO" followed by IDL get 
PASS form.dir: IDL set to "" should not throw 
PASS form.dir: IDL set to "" followed by getAttribute() 
PASS form.dir: IDL set to "" followed by IDL get 
PASS form.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS form.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.dir: IDL set to undefined should not throw 
PASS form.dir: IDL set to undefined followed by getAttribute() 
PASS form.dir: IDL set to undefined followed by IDL get 
PASS form.dir: IDL set to 7 should not throw 
PASS form.dir: IDL set to 7 followed by getAttribute() 
PASS form.dir: IDL set to 7 followed by IDL get 
PASS form.dir: IDL set to 1.5 should not throw 
PASS form.dir: IDL set to 1.5 followed by getAttribute() 
PASS form.dir: IDL set to 1.5 followed by IDL get 
PASS form.dir: IDL set to true should not throw 
PASS form.dir: IDL set to true followed by getAttribute() 
PASS form.dir: IDL set to true followed by IDL get 
PASS form.dir: IDL set to false should not throw 
PASS form.dir: IDL set to false followed by getAttribute() 
PASS form.dir: IDL set to false followed by IDL get 
PASS form.dir: IDL set to object "[object Object]" should not throw 
PASS form.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS form.dir: IDL set to object "[object Object]" followed by IDL get 
PASS form.dir: IDL set to NaN should not throw 
PASS form.dir: IDL set to NaN followed by getAttribute() 
PASS form.dir: IDL set to NaN followed by IDL get 
PASS form.dir: IDL set to Infinity should not throw 
PASS form.dir: IDL set to Infinity followed by getAttribute() 
PASS form.dir: IDL set to Infinity followed by IDL get 
PASS form.dir: IDL set to -Infinity should not throw 
PASS form.dir: IDL set to -Infinity followed by getAttribute() 
PASS form.dir: IDL set to -Infinity followed by IDL get 
PASS form.dir: IDL set to "\0" should not throw 
PASS form.dir: IDL set to "\0" followed by getAttribute() 
PASS form.dir: IDL set to "\0" followed by IDL get 
PASS form.dir: IDL set to null should not throw 
PASS form.dir: IDL set to null followed by IDL get 
PASS form.dir: IDL set to object "test-toString" should not throw 
PASS form.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS form.dir: IDL set to object "test-toString" followed by IDL get 
PASS form.dir: IDL set to object "test-valueOf" should not throw 
PASS form.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS form.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS form.dir: IDL set to "ltr" should not throw 
PASS form.dir: IDL set to "ltr" followed by getAttribute() 
PASS form.dir: IDL set to "ltr" followed by IDL get 
PASS form.dir: IDL set to "xltr" should not throw 
PASS form.dir: IDL set to "xltr" followed by getAttribute() 
PASS form.dir: IDL set to "xltr" followed by IDL get 
PASS form.dir: IDL set to "ltr\0" should not throw 
PASS form.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS form.dir: IDL set to "ltr\0" followed by IDL get 
PASS form.dir: IDL set to "tr" should not throw 
PASS form.dir: IDL set to "tr" followed by getAttribute() 
PASS form.dir: IDL set to "tr" followed by IDL get 
PASS form.dir: IDL set to "LTR" should not throw 
PASS form.dir: IDL set to "LTR" followed by getAttribute() 
PASS form.dir: IDL set to "LTR" followed by IDL get 
PASS form.dir: IDL set to "rtl" should not throw 
PASS form.dir: IDL set to "rtl" followed by getAttribute() 
PASS form.dir: IDL set to "rtl" followed by IDL get 
PASS form.dir: IDL set to "xrtl" should not throw 
PASS form.dir: IDL set to "xrtl" followed by getAttribute() 
PASS form.dir: IDL set to "xrtl" followed by IDL get 
PASS form.dir: IDL set to "rtl\0" should not throw 
PASS form.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS form.dir: IDL set to "rtl\0" followed by IDL get 
PASS form.dir: IDL set to "tl" should not throw 
PASS form.dir: IDL set to "tl" followed by getAttribute() 
PASS form.dir: IDL set to "tl" followed by IDL get 
PASS form.dir: IDL set to "RTL" should not throw 
PASS form.dir: IDL set to "RTL" followed by getAttribute() 
PASS form.dir: IDL set to "RTL" followed by IDL get 
PASS form.dir: IDL set to "auto" should not throw 
PASS form.dir: IDL set to "auto" followed by getAttribute() 
PASS form.dir: IDL set to "auto" followed by IDL get 
PASS form.dir: IDL set to "xauto" should not throw 
PASS form.dir: IDL set to "xauto" followed by getAttribute() 
PASS form.dir: IDL set to "xauto" followed by IDL get 
PASS form.dir: IDL set to "auto\0" should not throw 
PASS form.dir: IDL set to "auto\0" followed by getAttribute() 
PASS form.dir: IDL set to "auto\0" followed by IDL get 
PASS form.dir: IDL set to "uto" should not throw 
PASS form.dir: IDL set to "uto" followed by getAttribute() 
PASS form.dir: IDL set to "uto" followed by IDL get 
PASS form.dir: IDL set to "AUTO" should not throw 
PASS form.dir: IDL set to "AUTO" followed by getAttribute() 
PASS form.dir: IDL set to "AUTO" followed by IDL get 
PASS form.className (<form class>): typeof IDL attribute 
PASS form.className (<form class>): IDL get with DOM attribute unset 
PASS form.className (<form class>): setAttribute() to "" followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to "" followed by IDL get 
PASS form.className (<form class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.className (<form class>): setAttribute() to undefined followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to undefined followed by IDL get 
PASS form.className (<form class>): setAttribute() to 7 followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to 7 followed by IDL get 
PASS form.className (<form class>): setAttribute() to 1.5 followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to 1.5 followed by IDL get 
PASS form.className (<form class>): setAttribute() to true followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to true followed by IDL get 
PASS form.className (<form class>): setAttribute() to false followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to false followed by IDL get 
PASS form.className (<form class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS form.className (<form class>): setAttribute() to NaN followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to NaN followed by IDL get 
PASS form.className (<form class>): setAttribute() to Infinity followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to Infinity followed by IDL get 
PASS form.className (<form class>): setAttribute() to -Infinity followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to -Infinity followed by IDL get 
PASS form.className (<form class>): setAttribute() to "\0" followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to "\0" followed by IDL get 
PASS form.className (<form class>): setAttribute() to null followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to null followed by IDL get 
PASS form.className (<form class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to object "test-toString" followed by IDL get 
PASS form.className (<form class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.className (<form class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.className (<form class>): IDL set to "" should not throw 
PASS form.className (<form class>): IDL set to "" followed by getAttribute() 
PASS form.className (<form class>): IDL set to "" followed by IDL get 
PASS form.className (<form class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS form.className (<form class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.className (<form class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.className (<form class>): IDL set to undefined should not throw 
PASS form.className (<form class>): IDL set to undefined followed by getAttribute() 
PASS form.className (<form class>): IDL set to undefined followed by IDL get 
PASS form.className (<form class>): IDL set to 7 should not throw 
PASS form.className (<form class>): IDL set to 7 followed by getAttribute() 
PASS form.className (<form class>): IDL set to 7 followed by IDL get 
PASS form.className (<form class>): IDL set to 1.5 should not throw 
PASS form.className (<form class>): IDL set to 1.5 followed by getAttribute() 
PASS form.className (<form class>): IDL set to 1.5 followed by IDL get 
PASS form.className (<form class>): IDL set to true should not throw 
PASS form.className (<form class>): IDL set to true followed by getAttribute() 
PASS form.className (<form class>): IDL set to true followed by IDL get 
PASS form.className (<form class>): IDL set to false should not throw 
PASS form.className (<form class>): IDL set to false followed by getAttribute() 
PASS form.className (<form class>): IDL set to false followed by IDL get 
PASS form.className (<form class>): IDL set to object "[object Object]" should not throw 
PASS form.className (<form class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS form.className (<form class>): IDL set to object "[object Object]" followed by IDL get 
PASS form.className (<form class>): IDL set to NaN should not throw 
PASS form.className (<form class>): IDL set to NaN followed by getAttribute() 
PASS form.className (<form class>): IDL set to NaN followed by IDL get 
PASS form.className (<form class>): IDL set to Infinity should not throw 
PASS form.className (<form class>): IDL set to Infinity followed by getAttribute() 
PASS form.className (<form class>): IDL set to Infinity followed by IDL get 
PASS form.className (<form class>): IDL set to -Infinity should not throw 
PASS form.className (<form class>): IDL set to -Infinity followed by getAttribute() 
PASS form.className (<form class>): IDL set to -Infinity followed by IDL get 
PASS form.className (<form class>): IDL set to "\0" should not throw 
PASS form.className (<form class>): IDL set to "\0" followed by getAttribute() 
PASS form.className (<form class>): IDL set to "\0" followed by IDL get 
PASS form.className (<form class>): IDL set to null should not throw 
PASS form.className (<form class>): IDL set to null followed by getAttribute() 
PASS form.className (<form class>): IDL set to null followed by IDL get 
PASS form.className (<form class>): IDL set to object "test-toString" should not throw 
PASS form.className (<form class>): IDL set to object "test-toString" followed by getAttribute() 
PASS form.className (<form class>): IDL set to object "test-toString" followed by IDL get 
PASS form.className (<form class>): IDL set to object "test-valueOf" should not throw 
PASS form.className (<form class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS form.className (<form class>): IDL set to object "test-valueOf" followed by IDL get 
PASS form.hidden: typeof IDL attribute 
PASS form.hidden: IDL get with DOM attribute unset 
PASS form.hidden: setAttribute() to "" followed by getAttribute() 
PASS form.hidden: setAttribute() to "" followed by IDL get 
PASS form.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS form.hidden: setAttribute() to " foo " followed by IDL get 
PASS form.hidden: setAttribute() to undefined followed by getAttribute() 
PASS form.hidden: setAttribute() to undefined followed by IDL get 
PASS form.hidden: setAttribute() to null followed by getAttribute() 
PASS form.hidden: setAttribute() to null followed by IDL get 
PASS form.hidden: setAttribute() to 7 followed by getAttribute() 
PASS form.hidden: setAttribute() to 7 followed by IDL get 
PASS form.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS form.hidden: setAttribute() to 1.5 followed by IDL get 
PASS form.hidden: setAttribute() to true followed by getAttribute() 
PASS form.hidden: setAttribute() to true followed by IDL get 
PASS form.hidden: setAttribute() to false followed by getAttribute() 
PASS form.hidden: setAttribute() to false followed by IDL get 
PASS form.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS form.hidden: setAttribute() to NaN followed by getAttribute() 
PASS form.hidden: setAttribute() to NaN followed by IDL get 
PASS form.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS form.hidden: setAttribute() to Infinity followed by IDL get 
PASS form.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS form.hidden: setAttribute() to -Infinity followed by IDL get 
PASS form.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS form.hidden: setAttribute() to "\0" followed by IDL get 
PASS form.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS form.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS form.hidden: setAttribute() to "hidden" followed by IDL get 
PASS form.hidden: IDL set to "" should not throw 
PASS form.hidden: IDL set to "" followed by hasAttribute() 
PASS form.hidden: IDL set to "" followed by IDL get 
PASS form.hidden: IDL set to " foo " should not throw 
PASS form.hidden: IDL set to " foo " followed by hasAttribute() 
PASS form.hidden: IDL set to " foo " followed by IDL get 
PASS form.hidden: IDL set to undefined should not throw 
PASS form.hidden: IDL set to undefined followed by hasAttribute() 
PASS form.hidden: IDL set to undefined followed by IDL get 
PASS form.hidden: IDL set to null should not throw 
PASS form.hidden: IDL set to null followed by hasAttribute() 
PASS form.hidden: IDL set to null followed by IDL get 
PASS form.hidden: IDL set to 7 should not throw 
PASS form.hidden: IDL set to 7 followed by hasAttribute() 
PASS form.hidden: IDL set to 7 followed by IDL get 
PASS form.hidden: IDL set to 1.5 should not throw 
PASS form.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS form.hidden: IDL set to 1.5 followed by IDL get 
PASS form.hidden: IDL set to true should not throw 
PASS form.hidden: IDL set to true followed by hasAttribute() 
PASS form.hidden: IDL set to true followed by IDL get 
PASS form.hidden: IDL set to false should not throw 
PASS form.hidden: IDL set to false followed by hasAttribute() 
PASS form.hidden: IDL set to false followed by IDL get 
PASS form.hidden: IDL set to object "[object Object]" should not throw 
PASS form.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS form.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS form.hidden: IDL set to NaN should not throw 
PASS form.hidden: IDL set to NaN followed by hasAttribute() 
PASS form.hidden: IDL set to NaN followed by IDL get 
PASS form.hidden: IDL set to Infinity should not throw 
PASS form.hidden: IDL set to Infinity followed by hasAttribute() 
PASS form.hidden: IDL set to Infinity followed by IDL get 
PASS form.hidden: IDL set to -Infinity should not throw 
PASS form.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS form.hidden: IDL set to -Infinity followed by IDL get 
PASS form.hidden: IDL set to "\0" should not throw 
PASS form.hidden: IDL set to "\0" followed by hasAttribute() 
PASS form.hidden: IDL set to "\0" followed by IDL get 
PASS form.hidden: IDL set to object "test-toString" should not throw 
PASS form.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS form.hidden: IDL set to object "test-toString" followed by IDL get 
PASS form.hidden: IDL set to object "test-valueOf" should not throw 
PASS form.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS form.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS form.accessKey: typeof IDL attribute 
PASS form.accessKey: IDL get with DOM attribute unset 
PASS form.accessKey: setAttribute() to "" followed by getAttribute() 
PASS form.accessKey: setAttribute() to "" followed by IDL get 
PASS form.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS form.accessKey: setAttribute() to undefined followed by IDL get 
PASS form.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS form.accessKey: setAttribute() to 7 followed by IDL get 
PASS form.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS form.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS form.accessKey: setAttribute() to true followed by getAttribute() 
PASS form.accessKey: setAttribute() to true followed by IDL get 
PASS form.accessKey: setAttribute() to false followed by getAttribute() 
PASS form.accessKey: setAttribute() to false followed by IDL get 
PASS form.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS form.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS form.accessKey: setAttribute() to NaN followed by IDL get 
PASS form.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS form.accessKey: setAttribute() to Infinity followed by IDL get 
PASS form.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS form.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS form.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS form.accessKey: setAttribute() to "\0" followed by IDL get 
PASS form.accessKey: setAttribute() to null followed by getAttribute() 
PASS form.accessKey: setAttribute() to null followed by IDL get 
PASS form.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS form.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.accessKey: IDL set to "" should not throw 
PASS form.accessKey: IDL set to "" followed by getAttribute() 
PASS form.accessKey: IDL set to "" followed by IDL get 
PASS form.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS form.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.accessKey: IDL set to undefined should not throw 
PASS form.accessKey: IDL set to undefined followed by getAttribute() 
PASS form.accessKey: IDL set to undefined followed by IDL get 
PASS form.accessKey: IDL set to 7 should not throw 
PASS form.accessKey: IDL set to 7 followed by getAttribute() 
PASS form.accessKey: IDL set to 7 followed by IDL get 
PASS form.accessKey: IDL set to 1.5 should not throw 
PASS form.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS form.accessKey: IDL set to 1.5 followed by IDL get 
PASS form.accessKey: IDL set to true should not throw 
PASS form.accessKey: IDL set to true followed by getAttribute() 
PASS form.accessKey: IDL set to true followed by IDL get 
PASS form.accessKey: IDL set to false should not throw 
PASS form.accessKey: IDL set to false followed by getAttribute() 
PASS form.accessKey: IDL set to false followed by IDL get 
PASS form.accessKey: IDL set to object "[object Object]" should not throw 
PASS form.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS form.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS form.accessKey: IDL set to NaN should not throw 
PASS form.accessKey: IDL set to NaN followed by getAttribute() 
PASS form.accessKey: IDL set to NaN followed by IDL get 
PASS form.accessKey: IDL set to Infinity should not throw 
PASS form.accessKey: IDL set to Infinity followed by getAttribute() 
PASS form.accessKey: IDL set to Infinity followed by IDL get 
PASS form.accessKey: IDL set to -Infinity should not throw 
PASS form.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS form.accessKey: IDL set to -Infinity followed by IDL get 
PASS form.accessKey: IDL set to "\0" should not throw 
PASS form.accessKey: IDL set to "\0" followed by getAttribute() 
PASS form.accessKey: IDL set to "\0" followed by IDL get 
PASS form.accessKey: IDL set to null should not throw 
PASS form.accessKey: IDL set to null followed by getAttribute() 
PASS form.accessKey: IDL set to null followed by IDL get 
PASS form.accessKey: IDL set to object "test-toString" should not throw 
PASS form.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS form.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS form.accessKey: IDL set to object "test-valueOf" should not throw 
PASS form.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS form.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS form.tabIndex: typeof IDL attribute 
PASS form.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS form.tabIndex: setAttribute() to -36 followed by IDL get 
PASS form.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS form.tabIndex: setAttribute() to -1 followed by IDL get 
PASS form.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS form.tabIndex: setAttribute() to 0 followed by IDL get 
PASS form.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS form.tabIndex: setAttribute() to 1 followed by IDL get 
PASS form.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL form.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS form.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL form.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS form.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS form.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS form.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS form.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS form.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS form.tabIndex: setAttribute() to "0" followed by IDL get 
PASS form.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS form.tabIndex: setAttribute() to "1" followed by IDL get 
PASS form.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS form.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS form.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS form.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS form.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS form.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS form.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS form.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS form.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS form.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS form.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS form.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS form.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS form.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS form.tabIndex: IDL set to -36 should not throw 
PASS form.tabIndex: IDL set to -36 followed by getAttribute() 
PASS form.tabIndex: IDL set to -36 followed by IDL get 
PASS form.tabIndex: IDL set to -1 should not throw 
PASS form.tabIndex: IDL set to -1 followed by getAttribute() 
PASS form.tabIndex: IDL set to -1 followed by IDL get 
PASS form.tabIndex: IDL set to 0 should not throw 
PASS form.tabIndex: IDL set to 0 followed by getAttribute() 
PASS form.tabIndex: IDL set to 0 followed by IDL get 
PASS form.tabIndex: IDL set to 1 should not throw 
PASS form.tabIndex: IDL set to 1 followed by getAttribute() 
PASS form.tabIndex: IDL set to 1 followed by IDL get 
PASS form.tabIndex: IDL set to 2147483647 should not throw 
PASS form.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL form.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS form.tabIndex: IDL set to -2147483648 should not throw 
PASS form.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL form.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS form.acceptCharset (<form accept-charset>): typeof IDL attribute 
PASS form.acceptCharset (<form accept-charset>): IDL get with DOM attribute unset 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to "" followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to "" followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to undefined followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to undefined followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to 7 followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to 7 followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to 1.5 followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to 1.5 followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to true followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to true followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to false followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to false followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to object "[object Object]" followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to NaN followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to NaN followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to Infinity followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to Infinity followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to -Infinity followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to -Infinity followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to "\0" followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to "\0" followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to null followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to null followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to object "test-toString" followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to "" should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to "" followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to "" followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to undefined should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to undefined followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to undefined followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to 7 should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to 7 followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to 7 followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to 1.5 should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to 1.5 followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to 1.5 followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to true should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to true followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to true followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to false should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to false followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to false followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to object "[object Object]" should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to object "[object Object]" followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to object "[object Object]" followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to NaN should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to NaN followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to NaN followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to Infinity should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to Infinity followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to Infinity followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to -Infinity should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to -Infinity followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to -Infinity followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to "\0" should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to "\0" followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to "\0" followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to null should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to null followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to null followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to object "test-toString" should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to object "test-toString" followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to object "test-toString" followed by IDL get 
PASS form.acceptCharset (<form accept-charset>): IDL set to object "test-valueOf" should not throw 
PASS form.acceptCharset (<form accept-charset>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS form.acceptCharset (<form accept-charset>): IDL set to object "test-valueOf" followed by IDL get 
PASS form.autocomplete: typeof IDL attribute 
PASS form.autocomplete: IDL get with DOM attribute unset 
PASS form.autocomplete: setAttribute() to "" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to "" followed by IDL get 
PASS form.autocomplete: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.autocomplete: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.autocomplete: setAttribute() to undefined followed by getAttribute() 
PASS form.autocomplete: setAttribute() to undefined followed by IDL get 
PASS form.autocomplete: setAttribute() to 7 followed by getAttribute() 
PASS form.autocomplete: setAttribute() to 7 followed by IDL get 
PASS form.autocomplete: setAttribute() to 1.5 followed by getAttribute() 
PASS form.autocomplete: setAttribute() to 1.5 followed by IDL get 
PASS form.autocomplete: setAttribute() to true followed by getAttribute() 
PASS form.autocomplete: setAttribute() to true followed by IDL get 
PASS form.autocomplete: setAttribute() to false followed by getAttribute() 
PASS form.autocomplete: setAttribute() to false followed by IDL get 
PASS form.autocomplete: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to object "[object Object]" followed by IDL get 
PASS form.autocomplete: setAttribute() to NaN followed by getAttribute() 
PASS form.autocomplete: setAttribute() to NaN followed by IDL get 
PASS form.autocomplete: setAttribute() to Infinity followed by getAttribute() 
PASS form.autocomplete: setAttribute() to Infinity followed by IDL get 
PASS form.autocomplete: setAttribute() to -Infinity followed by getAttribute() 
PASS form.autocomplete: setAttribute() to -Infinity followed by IDL get 
PASS form.autocomplete: setAttribute() to "\0" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to "\0" followed by IDL get 
PASS form.autocomplete: setAttribute() to null followed by getAttribute() 
PASS form.autocomplete: setAttribute() to null followed by IDL get 
PASS form.autocomplete: setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to object "test-toString" followed by IDL get 
PASS form.autocomplete: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.autocomplete: setAttribute() to "on" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to "on" followed by IDL get 
PASS form.autocomplete: setAttribute() to "xon" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to "xon" followed by IDL get 
PASS form.autocomplete: setAttribute() to "on\0" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to "on\0" followed by IDL get 
PASS form.autocomplete: setAttribute() to "n" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to "n" followed by IDL get 
PASS form.autocomplete: setAttribute() to "ON" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to "ON" followed by IDL get 
PASS form.autocomplete: setAttribute() to "off" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to "off" followed by IDL get 
PASS form.autocomplete: setAttribute() to "xoff" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to "xoff" followed by IDL get 
PASS form.autocomplete: setAttribute() to "off\0" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to "off\0" followed by IDL get 
PASS form.autocomplete: setAttribute() to "ff" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to "ff" followed by IDL get 
PASS form.autocomplete: setAttribute() to "OFF" followed by getAttribute() 
PASS form.autocomplete: setAttribute() to "OFF" followed by IDL get 
PASS form.autocomplete: IDL set to "" should not throw 
PASS form.autocomplete: IDL set to "" followed by getAttribute() 
PASS form.autocomplete: IDL set to "" followed by IDL get 
PASS form.autocomplete: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS form.autocomplete: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.autocomplete: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.autocomplete: IDL set to undefined should not throw 
PASS form.autocomplete: IDL set to undefined followed by getAttribute() 
PASS form.autocomplete: IDL set to undefined followed by IDL get 
PASS form.autocomplete: IDL set to 7 should not throw 
PASS form.autocomplete: IDL set to 7 followed by getAttribute() 
PASS form.autocomplete: IDL set to 7 followed by IDL get 
PASS form.autocomplete: IDL set to 1.5 should not throw 
PASS form.autocomplete: IDL set to 1.5 followed by getAttribute() 
PASS form.autocomplete: IDL set to 1.5 followed by IDL get 
PASS form.autocomplete: IDL set to true should not throw 
PASS form.autocomplete: IDL set to true followed by getAttribute() 
PASS form.autocomplete: IDL set to true followed by IDL get 
PASS form.autocomplete: IDL set to false should not throw 
PASS form.autocomplete: IDL set to false followed by getAttribute() 
PASS form.autocomplete: IDL set to false followed by IDL get 
PASS form.autocomplete: IDL set to object "[object Object]" should not throw 
PASS form.autocomplete: IDL set to object "[object Object]" followed by getAttribute() 
PASS form.autocomplete: IDL set to object "[object Object]" followed by IDL get 
PASS form.autocomplete: IDL set to NaN should not throw 
PASS form.autocomplete: IDL set to NaN followed by getAttribute() 
PASS form.autocomplete: IDL set to NaN followed by IDL get 
PASS form.autocomplete: IDL set to Infinity should not throw 
PASS form.autocomplete: IDL set to Infinity followed by getAttribute() 
PASS form.autocomplete: IDL set to Infinity followed by IDL get 
PASS form.autocomplete: IDL set to -Infinity should not throw 
PASS form.autocomplete: IDL set to -Infinity followed by getAttribute() 
PASS form.autocomplete: IDL set to -Infinity followed by IDL get 
PASS form.autocomplete: IDL set to "\0" should not throw 
PASS form.autocomplete: IDL set to "\0" followed by getAttribute() 
PASS form.autocomplete: IDL set to "\0" followed by IDL get 
PASS form.autocomplete: IDL set to null should not throw 
PASS form.autocomplete: IDL set to null followed by IDL get 
PASS form.autocomplete: IDL set to object "test-toString" should not throw 
PASS form.autocomplete: IDL set to object "test-toString" followed by getAttribute() 
PASS form.autocomplete: IDL set to object "test-toString" followed by IDL get 
PASS form.autocomplete: IDL set to object "test-valueOf" should not throw 
PASS form.autocomplete: IDL set to object "test-valueOf" followed by getAttribute() 
PASS form.autocomplete: IDL set to object "test-valueOf" followed by IDL get 
PASS form.autocomplete: IDL set to "on" should not throw 
PASS form.autocomplete: IDL set to "on" followed by getAttribute() 
PASS form.autocomplete: IDL set to "on" followed by IDL get 
PASS form.autocomplete: IDL set to "xon" should not throw 
PASS form.autocomplete: IDL set to "xon" followed by getAttribute() 
PASS form.autocomplete: IDL set to "xon" followed by IDL get 
PASS form.autocomplete: IDL set to "on\0" should not throw 
PASS form.autocomplete: IDL set to "on\0" followed by getAttribute() 
PASS form.autocomplete: IDL set to "on\0" followed by IDL get 
PASS form.autocomplete: IDL set to "n" should not throw 
PASS form.autocomplete: IDL set to "n" followed by getAttribute() 
PASS form.autocomplete: IDL set to "n" followed by IDL get 
PASS form.autocomplete: IDL set to "ON" should not throw 
PASS form.autocomplete: IDL set to "ON" followed by getAttribute() 
PASS form.autocomplete: IDL set to "ON" followed by IDL get 
PASS form.autocomplete: IDL set to "off" should not throw 
PASS form.autocomplete: IDL set to "off" followed by getAttribute() 
PASS form.autocomplete: IDL set to "off" followed by IDL get 
PASS form.autocomplete: IDL set to "xoff" should not throw 
PASS form.autocomplete: IDL set to "xoff" followed by getAttribute() 
PASS form.autocomplete: IDL set to "xoff" followed by IDL get 
PASS form.autocomplete: IDL set to "off\0" should not throw 
PASS form.autocomplete: IDL set to "off\0" followed by getAttribute() 
PASS form.autocomplete: IDL set to "off\0" followed by IDL get 
PASS form.autocomplete: IDL set to "ff" should not throw 
PASS form.autocomplete: IDL set to "ff" followed by getAttribute() 
PASS form.autocomplete: IDL set to "ff" followed by IDL get 
PASS form.autocomplete: IDL set to "OFF" should not throw 
PASS form.autocomplete: IDL set to "OFF" followed by getAttribute() 
PASS form.autocomplete: IDL set to "OFF" followed by IDL get 
PASS form.enctype: typeof IDL attribute 
PASS form.enctype: IDL get with DOM attribute unset 
PASS form.enctype: setAttribute() to "" followed by getAttribute() 
PASS form.enctype: setAttribute() to "" followed by IDL get 
PASS form.enctype: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.enctype: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.enctype: setAttribute() to undefined followed by getAttribute() 
PASS form.enctype: setAttribute() to undefined followed by IDL get 
PASS form.enctype: setAttribute() to 7 followed by getAttribute() 
PASS form.enctype: setAttribute() to 7 followed by IDL get 
PASS form.enctype: setAttribute() to 1.5 followed by getAttribute() 
PASS form.enctype: setAttribute() to 1.5 followed by IDL get 
PASS form.enctype: setAttribute() to true followed by getAttribute() 
PASS form.enctype: setAttribute() to true followed by IDL get 
PASS form.enctype: setAttribute() to false followed by getAttribute() 
PASS form.enctype: setAttribute() to false followed by IDL get 
PASS form.enctype: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.enctype: setAttribute() to object "[object Object]" followed by IDL get 
PASS form.enctype: setAttribute() to NaN followed by getAttribute() 
PASS form.enctype: setAttribute() to NaN followed by IDL get 
PASS form.enctype: setAttribute() to Infinity followed by getAttribute() 
PASS form.enctype: setAttribute() to Infinity followed by IDL get 
PASS form.enctype: setAttribute() to -Infinity followed by getAttribute() 
PASS form.enctype: setAttribute() to -Infinity followed by IDL get 
PASS form.enctype: setAttribute() to "\0" followed by getAttribute() 
PASS form.enctype: setAttribute() to "\0" followed by IDL get 
PASS form.enctype: setAttribute() to null followed by getAttribute() 
PASS form.enctype: setAttribute() to null followed by IDL get 
PASS form.enctype: setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.enctype: setAttribute() to object "test-toString" followed by IDL get 
PASS form.enctype: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.enctype: setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.enctype: setAttribute() to "application/x-www-form-urlencoded" followed by getAttribute() 
PASS form.enctype: setAttribute() to "application/x-www-form-urlencoded" followed by IDL get 
PASS form.enctype: setAttribute() to "xapplication/x-www-form-urlencoded" followed by getAttribute() 
PASS form.enctype: setAttribute() to "xapplication/x-www-form-urlencoded" followed by IDL get 
PASS form.enctype: setAttribute() to "application/x-www-form-urlencoded\0" followed by getAttribute() 
PASS form.enctype: setAttribute() to "application/x-www-form-urlencoded\0" followed by IDL get 
PASS form.enctype: setAttribute() to "pplication/x-www-form-urlencoded" followed by getAttribute() 
PASS form.enctype: setAttribute() to "pplication/x-www-form-urlencoded" followed by IDL get 
PASS form.enctype: setAttribute() to "APPLICATION/X-WWW-FORM-URLENCODED" followed by getAttribute() 
PASS form.enctype: setAttribute() to "APPLICATION/X-WWW-FORM-URLENCODED" followed by IDL get 
PASS form.enctype: setAttribute() to "multipart/form-data" followed by getAttribute() 
PASS form.enctype: setAttribute() to "multipart/form-data" followed by IDL get 
PASS form.enctype: setAttribute() to "xmultipart/form-data" followed by getAttribute() 
PASS form.enctype: setAttribute() to "xmultipart/form-data" followed by IDL get 
PASS form.enctype: setAttribute() to "multipart/form-data\0" followed by getAttribute() 
PASS form.enctype: setAttribute() to "multipart/form-data\0" followed by IDL get 
PASS form.enctype: setAttribute() to "ultipart/form-data" followed by getAttribute() 
PASS form.enctype: setAttribute() to "ultipart/form-data" followed by IDL get 
PASS form.enctype: setAttribute() to "MULTIPART/FORM-DATA" followed by getAttribute() 
PASS form.enctype: setAttribute() to "MULTIPART/FORM-DATA" followed by IDL get 
PASS form.enctype: setAttribute() to "text/plain" followed by getAttribute() 
PASS form.enctype: setAttribute() to "text/plain" followed by IDL get 
PASS form.enctype: setAttribute() to "xtext/plain" followed by getAttribute() 
PASS form.enctype: setAttribute() to "xtext/plain" followed by IDL get 
PASS form.enctype: setAttribute() to "text/plain\0" followed by getAttribute() 
PASS form.enctype: setAttribute() to "text/plain\0" followed by IDL get 
PASS form.enctype: setAttribute() to "ext/plain" followed by getAttribute() 
PASS form.enctype: setAttribute() to "ext/plain" followed by IDL get 
PASS form.enctype: setAttribute() to "TEXT/PLAIN" followed by getAttribute() 
PASS form.enctype: setAttribute() to "TEXT/PLAIN" followed by IDL get 
PASS form.enctype: IDL set to "" should not throw 
PASS form.enctype: IDL set to "" followed by getAttribute() 
PASS form.enctype: IDL set to "" followed by IDL get 
PASS form.enctype: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS form.enctype: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.enctype: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.enctype: IDL set to undefined should not throw 
PASS form.enctype: IDL set to undefined followed by getAttribute() 
PASS form.enctype: IDL set to undefined followed by IDL get 
PASS form.enctype: IDL set to 7 should not throw 
PASS form.enctype: IDL set to 7 followed by getAttribute() 
PASS form.enctype: IDL set to 7 followed by IDL get 
PASS form.enctype: IDL set to 1.5 should not throw 
PASS form.enctype: IDL set to 1.5 followed by getAttribute() 
PASS form.enctype: IDL set to 1.5 followed by IDL get 
PASS form.enctype: IDL set to true should not throw 
PASS form.enctype: IDL set to true followed by getAttribute() 
PASS form.enctype: IDL set to true followed by IDL get 
PASS form.enctype: IDL set to false should not throw 
PASS form.enctype: IDL set to false followed by getAttribute() 
PASS form.enctype: IDL set to false followed by IDL get 
PASS form.enctype: IDL set to object "[object Object]" should not throw 
PASS form.enctype: IDL set to object "[object Object]" followed by getAttribute() 
PASS form.enctype: IDL set to object "[object Object]" followed by IDL get 
PASS form.enctype: IDL set to NaN should not throw 
PASS form.enctype: IDL set to NaN followed by getAttribute() 
PASS form.enctype: IDL set to NaN followed by IDL get 
PASS form.enctype: IDL set to Infinity should not throw 
PASS form.enctype: IDL set to Infinity followed by getAttribute() 
PASS form.enctype: IDL set to Infinity followed by IDL get 
PASS form.enctype: IDL set to -Infinity should not throw 
PASS form.enctype: IDL set to -Infinity followed by getAttribute() 
PASS form.enctype: IDL set to -Infinity followed by IDL get 
PASS form.enctype: IDL set to "\0" should not throw 
PASS form.enctype: IDL set to "\0" followed by getAttribute() 
PASS form.enctype: IDL set to "\0" followed by IDL get 
PASS form.enctype: IDL set to null should not throw 
PASS form.enctype: IDL set to null followed by IDL get 
PASS form.enctype: IDL set to object "test-toString" should not throw 
PASS form.enctype: IDL set to object "test-toString" followed by getAttribute() 
PASS form.enctype: IDL set to object "test-toString" followed by IDL get 
PASS form.enctype: IDL set to object "test-valueOf" should not throw 
PASS form.enctype: IDL set to object "test-valueOf" followed by getAttribute() 
PASS form.enctype: IDL set to object "test-valueOf" followed by IDL get 
PASS form.enctype: IDL set to "application/x-www-form-urlencoded" should not throw 
PASS form.enctype: IDL set to "application/x-www-form-urlencoded" followed by getAttribute() 
PASS form.enctype: IDL set to "application/x-www-form-urlencoded" followed by IDL get 
PASS form.enctype: IDL set to "xapplication/x-www-form-urlencoded" should not throw 
PASS form.enctype: IDL set to "xapplication/x-www-form-urlencoded" followed by getAttribute() 
PASS form.enctype: IDL set to "xapplication/x-www-form-urlencoded" followed by IDL get 
PASS form.enctype: IDL set to "application/x-www-form-urlencoded\0" should not throw 
PASS form.enctype: IDL set to "application/x-www-form-urlencoded\0" followed by getAttribute() 
PASS form.enctype: IDL set to "application/x-www-form-urlencoded\0" followed by IDL get 
PASS form.enctype: IDL set to "pplication/x-www-form-urlencoded" should not throw 
PASS form.enctype: IDL set to "pplication/x-www-form-urlencoded" followed by getAttribute() 
PASS form.enctype: IDL set to "pplication/x-www-form-urlencoded" followed by IDL get 
PASS form.enctype: IDL set to "APPLICATION/X-WWW-FORM-URLENCODED" should not throw 
PASS form.enctype: IDL set to "APPLICATION/X-WWW-FORM-URLENCODED" followed by getAttribute() 
PASS form.enctype: IDL set to "APPLICATION/X-WWW-FORM-URLENCODED" followed by IDL get 
PASS form.enctype: IDL set to "multipart/form-data" should not throw 
PASS form.enctype: IDL set to "multipart/form-data" followed by getAttribute() 
PASS form.enctype: IDL set to "multipart/form-data" followed by IDL get 
PASS form.enctype: IDL set to "xmultipart/form-data" should not throw 
PASS form.enctype: IDL set to "xmultipart/form-data" followed by getAttribute() 
PASS form.enctype: IDL set to "xmultipart/form-data" followed by IDL get 
PASS form.enctype: IDL set to "multipart/form-data\0" should not throw 
PASS form.enctype: IDL set to "multipart/form-data\0" followed by getAttribute() 
PASS form.enctype: IDL set to "multipart/form-data\0" followed by IDL get 
PASS form.enctype: IDL set to "ultipart/form-data" should not throw 
PASS form.enctype: IDL set to "ultipart/form-data" followed by getAttribute() 
PASS form.enctype: IDL set to "ultipart/form-data" followed by IDL get 
PASS form.enctype: IDL set to "MULTIPART/FORM-DATA" should not throw 
PASS form.enctype: IDL set to "MULTIPART/FORM-DATA" followed by getAttribute() 
PASS form.enctype: IDL set to "MULTIPART/FORM-DATA" followed by IDL get 
PASS form.enctype: IDL set to "text/plain" should not throw 
PASS form.enctype: IDL set to "text/plain" followed by getAttribute() 
PASS form.enctype: IDL set to "text/plain" followed by IDL get 
PASS form.enctype: IDL set to "xtext/plain" should not throw 
PASS form.enctype: IDL set to "xtext/plain" followed by getAttribute() 
PASS form.enctype: IDL set to "xtext/plain" followed by IDL get 
PASS form.enctype: IDL set to "text/plain\0" should not throw 
PASS form.enctype: IDL set to "text/plain\0" followed by getAttribute() 
PASS form.enctype: IDL set to "text/plain\0" followed by IDL get 
PASS form.enctype: IDL set to "ext/plain" should not throw 
PASS form.enctype: IDL set to "ext/plain" followed by getAttribute() 
PASS form.enctype: IDL set to "ext/plain" followed by IDL get 
PASS form.enctype: IDL set to "TEXT/PLAIN" should not throw 
PASS form.enctype: IDL set to "TEXT/PLAIN" followed by getAttribute() 
PASS form.enctype: IDL set to "TEXT/PLAIN" followed by IDL get 
PASS form.encoding (<form enctype>): typeof IDL attribute 
PASS form.encoding (<form enctype>): IDL get with DOM attribute unset 
PASS form.encoding (<form enctype>): setAttribute() to "" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to undefined followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to undefined followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to 7 followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to 7 followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to 1.5 followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to 1.5 followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to true followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to true followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to false followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to false followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to object "[object Object]" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to NaN followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to NaN followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to Infinity followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to Infinity followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to -Infinity followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to -Infinity followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "\0" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "\0" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to null followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to null followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to object "test-toString" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "application/x-www-form-urlencoded" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "application/x-www-form-urlencoded" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "xapplication/x-www-form-urlencoded" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "xapplication/x-www-form-urlencoded" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "application/x-www-form-urlencoded\0" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "application/x-www-form-urlencoded\0" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "pplication/x-www-form-urlencoded" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "pplication/x-www-form-urlencoded" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "APPLICATION/X-WWW-FORM-URLENCODED" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "APPLICATION/X-WWW-FORM-URLENCODED" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "multipart/form-data" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "multipart/form-data" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "xmultipart/form-data" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "xmultipart/form-data" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "multipart/form-data\0" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "multipart/form-data\0" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "ultipart/form-data" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "ultipart/form-data" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "MULTIPART/FORM-DATA" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "MULTIPART/FORM-DATA" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "text/plain" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "text/plain" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "xtext/plain" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "xtext/plain" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "text/plain\0" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "text/plain\0" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "ext/plain" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "ext/plain" followed by IDL get 
PASS form.encoding (<form enctype>): setAttribute() to "TEXT/PLAIN" followed by getAttribute() 
PASS form.encoding (<form enctype>): setAttribute() to "TEXT/PLAIN" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "" should not throw 
PASS form.encoding (<form enctype>): IDL set to "" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS form.encoding (<form enctype>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to undefined should not throw 
PASS form.encoding (<form enctype>): IDL set to undefined followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to undefined followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to 7 should not throw 
PASS form.encoding (<form enctype>): IDL set to 7 followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to 7 followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to 1.5 should not throw 
PASS form.encoding (<form enctype>): IDL set to 1.5 followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to 1.5 followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to true should not throw 
PASS form.encoding (<form enctype>): IDL set to true followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to true followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to false should not throw 
PASS form.encoding (<form enctype>): IDL set to false followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to false followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to object "[object Object]" should not throw 
PASS form.encoding (<form enctype>): IDL set to object "[object Object]" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to object "[object Object]" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to NaN should not throw 
PASS form.encoding (<form enctype>): IDL set to NaN followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to NaN followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to Infinity should not throw 
PASS form.encoding (<form enctype>): IDL set to Infinity followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to Infinity followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to -Infinity should not throw 
PASS form.encoding (<form enctype>): IDL set to -Infinity followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to -Infinity followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "\0" should not throw 
PASS form.encoding (<form enctype>): IDL set to "\0" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "\0" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to null should not throw 
PASS form.encoding (<form enctype>): IDL set to null followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to object "test-toString" should not throw 
PASS form.encoding (<form enctype>): IDL set to object "test-toString" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to object "test-toString" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to object "test-valueOf" should not throw 
PASS form.encoding (<form enctype>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to object "test-valueOf" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "application/x-www-form-urlencoded" should not throw 
PASS form.encoding (<form enctype>): IDL set to "application/x-www-form-urlencoded" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "application/x-www-form-urlencoded" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "xapplication/x-www-form-urlencoded" should not throw 
PASS form.encoding (<form enctype>): IDL set to "xapplication/x-www-form-urlencoded" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "xapplication/x-www-form-urlencoded" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "application/x-www-form-urlencoded\0" should not throw 
PASS form.encoding (<form enctype>): IDL set to "application/x-www-form-urlencoded\0" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "application/x-www-form-urlencoded\0" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "pplication/x-www-form-urlencoded" should not throw 
PASS form.encoding (<form enctype>): IDL set to "pplication/x-www-form-urlencoded" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "pplication/x-www-form-urlencoded" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "APPLICATION/X-WWW-FORM-URLENCODED" should not throw 
PASS form.encoding (<form enctype>): IDL set to "APPLICATION/X-WWW-FORM-URLENCODED" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "APPLICATION/X-WWW-FORM-URLENCODED" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "multipart/form-data" should not throw 
PASS form.encoding (<form enctype>): IDL set to "multipart/form-data" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "multipart/form-data" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "xmultipart/form-data" should not throw 
PASS form.encoding (<form enctype>): IDL set to "xmultipart/form-data" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "xmultipart/form-data" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "multipart/form-data\0" should not throw 
PASS form.encoding (<form enctype>): IDL set to "multipart/form-data\0" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "multipart/form-data\0" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "ultipart/form-data" should not throw 
PASS form.encoding (<form enctype>): IDL set to "ultipart/form-data" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "ultipart/form-data" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "MULTIPART/FORM-DATA" should not throw 
PASS form.encoding (<form enctype>): IDL set to "MULTIPART/FORM-DATA" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "MULTIPART/FORM-DATA" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "text/plain" should not throw 
PASS form.encoding (<form enctype>): IDL set to "text/plain" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "text/plain" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "xtext/plain" should not throw 
PASS form.encoding (<form enctype>): IDL set to "xtext/plain" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "xtext/plain" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "text/plain\0" should not throw 
PASS form.encoding (<form enctype>): IDL set to "text/plain\0" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "text/plain\0" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "ext/plain" should not throw 
PASS form.encoding (<form enctype>): IDL set to "ext/plain" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "ext/plain" followed by IDL get 
PASS form.encoding (<form enctype>): IDL set to "TEXT/PLAIN" should not throw 
PASS form.encoding (<form enctype>): IDL set to "TEXT/PLAIN" followed by getAttribute() 
PASS form.encoding (<form enctype>): IDL set to "TEXT/PLAIN" followed by IDL get 
PASS form.method: typeof IDL attribute 
PASS form.method: IDL get with DOM attribute unset 
PASS form.method: setAttribute() to "" followed by getAttribute() 
PASS form.method: setAttribute() to "" followed by IDL get 
PASS form.method: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.method: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.method: setAttribute() to undefined followed by getAttribute() 
PASS form.method: setAttribute() to undefined followed by IDL get 
PASS form.method: setAttribute() to 7 followed by getAttribute() 
PASS form.method: setAttribute() to 7 followed by IDL get 
PASS form.method: setAttribute() to 1.5 followed by getAttribute() 
PASS form.method: setAttribute() to 1.5 followed by IDL get 
PASS form.method: setAttribute() to true followed by getAttribute() 
PASS form.method: setAttribute() to true followed by IDL get 
PASS form.method: setAttribute() to false followed by getAttribute() 
PASS form.method: setAttribute() to false followed by IDL get 
PASS form.method: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.method: setAttribute() to object "[object Object]" followed by IDL get 
PASS form.method: setAttribute() to NaN followed by getAttribute() 
PASS form.method: setAttribute() to NaN followed by IDL get 
PASS form.method: setAttribute() to Infinity followed by getAttribute() 
PASS form.method: setAttribute() to Infinity followed by IDL get 
PASS form.method: setAttribute() to -Infinity followed by getAttribute() 
PASS form.method: setAttribute() to -Infinity followed by IDL get 
PASS form.method: setAttribute() to "\0" followed by getAttribute() 
PASS form.method: setAttribute() to "\0" followed by IDL get 
PASS form.method: setAttribute() to null followed by getAttribute() 
PASS form.method: setAttribute() to null followed by IDL get 
PASS form.method: setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.method: setAttribute() to object "test-toString" followed by IDL get 
PASS form.method: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.method: setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.method: setAttribute() to "get" followed by getAttribute() 
PASS form.method: setAttribute() to "get" followed by IDL get 
PASS form.method: setAttribute() to "xget" followed by getAttribute() 
PASS form.method: setAttribute() to "xget" followed by IDL get 
PASS form.method: setAttribute() to "get\0" followed by getAttribute() 
PASS form.method: setAttribute() to "get\0" followed by IDL get 
PASS form.method: setAttribute() to "et" followed by getAttribute() 
PASS form.method: setAttribute() to "et" followed by IDL get 
PASS form.method: setAttribute() to "GET" followed by getAttribute() 
PASS form.method: setAttribute() to "GET" followed by IDL get 
PASS form.method: setAttribute() to "post" followed by getAttribute() 
PASS form.method: setAttribute() to "post" followed by IDL get 
PASS form.method: setAttribute() to "xpost" followed by getAttribute() 
PASS form.method: setAttribute() to "xpost" followed by IDL get 
PASS form.method: setAttribute() to "post\0" followed by getAttribute() 
PASS form.method: setAttribute() to "post\0" followed by IDL get 
PASS form.method: setAttribute() to "ost" followed by getAttribute() 
PASS form.method: setAttribute() to "ost" followed by IDL get 
PASS form.method: setAttribute() to "POST" followed by getAttribute() 
PASS form.method: setAttribute() to "POST" followed by IDL get 
PASS form.method: setAttribute() to "dialog" followed by getAttribute() 
FAIL form.method: setAttribute() to "dialog" followed by IDL get assert_equals: expected "dialog" but got "get"
PASS form.method: setAttribute() to "xdialog" followed by getAttribute() 
PASS form.method: setAttribute() to "xdialog" followed by IDL get 
PASS form.method: setAttribute() to "dialog\0" followed by getAttribute() 
PASS form.method: setAttribute() to "dialog\0" followed by IDL get 
PASS form.method: setAttribute() to "ialog" followed by getAttribute() 
PASS form.method: setAttribute() to "ialog" followed by IDL get 
PASS form.method: setAttribute() to "DIALOG" followed by getAttribute() 
FAIL form.method: setAttribute() to "DIALOG" followed by IDL get assert_equals: expected "dialog" but got "get"
PASS form.method: IDL set to "" should not throw 
PASS form.method: IDL set to "" followed by getAttribute() 
PASS form.method: IDL set to "" followed by IDL get 
PASS form.method: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS form.method: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.method: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.method: IDL set to undefined should not throw 
PASS form.method: IDL set to undefined followed by getAttribute() 
PASS form.method: IDL set to undefined followed by IDL get 
PASS form.method: IDL set to 7 should not throw 
PASS form.method: IDL set to 7 followed by getAttribute() 
PASS form.method: IDL set to 7 followed by IDL get 
PASS form.method: IDL set to 1.5 should not throw 
PASS form.method: IDL set to 1.5 followed by getAttribute() 
PASS form.method: IDL set to 1.5 followed by IDL get 
PASS form.method: IDL set to true should not throw 
PASS form.method: IDL set to true followed by getAttribute() 
PASS form.method: IDL set to true followed by IDL get 
PASS form.method: IDL set to false should not throw 
PASS form.method: IDL set to false followed by getAttribute() 
PASS form.method: IDL set to false followed by IDL get 
PASS form.method: IDL set to object "[object Object]" should not throw 
PASS form.method: IDL set to object "[object Object]" followed by getAttribute() 
PASS form.method: IDL set to object "[object Object]" followed by IDL get 
PASS form.method: IDL set to NaN should not throw 
PASS form.method: IDL set to NaN followed by getAttribute() 
PASS form.method: IDL set to NaN followed by IDL get 
PASS form.method: IDL set to Infinity should not throw 
PASS form.method: IDL set to Infinity followed by getAttribute() 
PASS form.method: IDL set to Infinity followed by IDL get 
PASS form.method: IDL set to -Infinity should not throw 
PASS form.method: IDL set to -Infinity followed by getAttribute() 
PASS form.method: IDL set to -Infinity followed by IDL get 
PASS form.method: IDL set to "\0" should not throw 
PASS form.method: IDL set to "\0" followed by getAttribute() 
PASS form.method: IDL set to "\0" followed by IDL get 
PASS form.method: IDL set to null should not throw 
PASS form.method: IDL set to null followed by IDL get 
PASS form.method: IDL set to object "test-toString" should not throw 
PASS form.method: IDL set to object "test-toString" followed by getAttribute() 
PASS form.method: IDL set to object "test-toString" followed by IDL get 
PASS form.method: IDL set to object "test-valueOf" should not throw 
PASS form.method: IDL set to object "test-valueOf" followed by getAttribute() 
PASS form.method: IDL set to object "test-valueOf" followed by IDL get 
PASS form.method: IDL set to "get" should not throw 
PASS form.method: IDL set to "get" followed by getAttribute() 
PASS form.method: IDL set to "get" followed by IDL get 
PASS form.method: IDL set to "xget" should not throw 
PASS form.method: IDL set to "xget" followed by getAttribute() 
PASS form.method: IDL set to "xget" followed by IDL get 
PASS form.method: IDL set to "get\0" should not throw 
PASS form.method: IDL set to "get\0" followed by getAttribute() 
PASS form.method: IDL set to "get\0" followed by IDL get 
PASS form.method: IDL set to "et" should not throw 
PASS form.method: IDL set to "et" followed by getAttribute() 
PASS form.method: IDL set to "et" followed by IDL get 
PASS form.method: IDL set to "GET" should not throw 
PASS form.method: IDL set to "GET" followed by getAttribute() 
PASS form.method: IDL set to "GET" followed by IDL get 
PASS form.method: IDL set to "post" should not throw 
PASS form.method: IDL set to "post" followed by getAttribute() 
PASS form.method: IDL set to "post" followed by IDL get 
PASS form.method: IDL set to "xpost" should not throw 
PASS form.method: IDL set to "xpost" followed by getAttribute() 
PASS form.method: IDL set to "xpost" followed by IDL get 
PASS form.method: IDL set to "post\0" should not throw 
PASS form.method: IDL set to "post\0" followed by getAttribute() 
PASS form.method: IDL set to "post\0" followed by IDL get 
PASS form.method: IDL set to "ost" should not throw 
PASS form.method: IDL set to "ost" followed by getAttribute() 
PASS form.method: IDL set to "ost" followed by IDL get 
PASS form.method: IDL set to "POST" should not throw 
PASS form.method: IDL set to "POST" followed by getAttribute() 
PASS form.method: IDL set to "POST" followed by IDL get 
PASS form.method: IDL set to "dialog" should not throw 
PASS form.method: IDL set to "dialog" followed by getAttribute() 
FAIL form.method: IDL set to "dialog" followed by IDL get assert_equals: expected "dialog" but got "get"
PASS form.method: IDL set to "xdialog" should not throw 
PASS form.method: IDL set to "xdialog" followed by getAttribute() 
PASS form.method: IDL set to "xdialog" followed by IDL get 
PASS form.method: IDL set to "dialog\0" should not throw 
PASS form.method: IDL set to "dialog\0" followed by getAttribute() 
PASS form.method: IDL set to "dialog\0" followed by IDL get 
PASS form.method: IDL set to "ialog" should not throw 
PASS form.method: IDL set to "ialog" followed by getAttribute() 
PASS form.method: IDL set to "ialog" followed by IDL get 
PASS form.method: IDL set to "DIALOG" should not throw 
PASS form.method: IDL set to "DIALOG" followed by getAttribute() 
FAIL form.method: IDL set to "DIALOG" followed by IDL get assert_equals: expected "dialog" but got "get"
PASS form.name: typeof IDL attribute 
PASS form.name: IDL get with DOM attribute unset 
PASS form.name: setAttribute() to "" followed by getAttribute() 
PASS form.name: setAttribute() to "" followed by IDL get 
PASS form.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.name: setAttribute() to undefined followed by getAttribute() 
PASS form.name: setAttribute() to undefined followed by IDL get 
PASS form.name: setAttribute() to 7 followed by getAttribute() 
PASS form.name: setAttribute() to 7 followed by IDL get 
PASS form.name: setAttribute() to 1.5 followed by getAttribute() 
PASS form.name: setAttribute() to 1.5 followed by IDL get 
PASS form.name: setAttribute() to true followed by getAttribute() 
PASS form.name: setAttribute() to true followed by IDL get 
PASS form.name: setAttribute() to false followed by getAttribute() 
PASS form.name: setAttribute() to false followed by IDL get 
PASS form.name: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.name: setAttribute() to object "[object Object]" followed by IDL get 
PASS form.name: setAttribute() to NaN followed by getAttribute() 
PASS form.name: setAttribute() to NaN followed by IDL get 
PASS form.name: setAttribute() to Infinity followed by getAttribute() 
PASS form.name: setAttribute() to Infinity followed by IDL get 
PASS form.name: setAttribute() to -Infinity followed by getAttribute() 
PASS form.name: setAttribute() to -Infinity followed by IDL get 
PASS form.name: setAttribute() to "\0" followed by getAttribute() 
PASS form.name: setAttribute() to "\0" followed by IDL get 
PASS form.name: setAttribute() to null followed by getAttribute() 
PASS form.name: setAttribute() to null followed by IDL get 
PASS form.name: setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.name: setAttribute() to object "test-toString" followed by IDL get 
PASS form.name: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.name: setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.name: IDL set to "" should not throw 
PASS form.name: IDL set to "" followed by getAttribute() 
PASS form.name: IDL set to "" followed by IDL get 
PASS form.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS form.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.name: IDL set to undefined should not throw 
PASS form.name: IDL set to undefined followed by getAttribute() 
PASS form.name: IDL set to undefined followed by IDL get 
PASS form.name: IDL set to 7 should not throw 
PASS form.name: IDL set to 7 followed by getAttribute() 
PASS form.name: IDL set to 7 followed by IDL get 
PASS form.name: IDL set to 1.5 should not throw 
PASS form.name: IDL set to 1.5 followed by getAttribute() 
PASS form.name: IDL set to 1.5 followed by IDL get 
PASS form.name: IDL set to true should not throw 
PASS form.name: IDL set to true followed by getAttribute() 
PASS form.name: IDL set to true followed by IDL get 
PASS form.name: IDL set to false should not throw 
PASS form.name: IDL set to false followed by getAttribute() 
PASS form.name: IDL set to false followed by IDL get 
PASS form.name: IDL set to object "[object Object]" should not throw 
PASS form.name: IDL set to object "[object Object]" followed by getAttribute() 
PASS form.name: IDL set to object "[object Object]" followed by IDL get 
PASS form.name: IDL set to NaN should not throw 
PASS form.name: IDL set to NaN followed by getAttribute() 
PASS form.name: IDL set to NaN followed by IDL get 
PASS form.name: IDL set to Infinity should not throw 
PASS form.name: IDL set to Infinity followed by getAttribute() 
PASS form.name: IDL set to Infinity followed by IDL get 
PASS form.name: IDL set to -Infinity should not throw 
PASS form.name: IDL set to -Infinity followed by getAttribute() 
PASS form.name: IDL set to -Infinity followed by IDL get 
PASS form.name: IDL set to "\0" should not throw 
PASS form.name: IDL set to "\0" followed by getAttribute() 
PASS form.name: IDL set to "\0" followed by IDL get 
PASS form.name: IDL set to null should not throw 
PASS form.name: IDL set to null followed by getAttribute() 
PASS form.name: IDL set to null followed by IDL get 
PASS form.name: IDL set to object "test-toString" should not throw 
PASS form.name: IDL set to object "test-toString" followed by getAttribute() 
PASS form.name: IDL set to object "test-toString" followed by IDL get 
PASS form.name: IDL set to object "test-valueOf" should not throw 
PASS form.name: IDL set to object "test-valueOf" followed by getAttribute() 
PASS form.name: IDL set to object "test-valueOf" followed by IDL get 
PASS form.noValidate: typeof IDL attribute 
PASS form.noValidate: IDL get with DOM attribute unset 
PASS form.noValidate: setAttribute() to "" followed by getAttribute() 
PASS form.noValidate: setAttribute() to "" followed by IDL get 
PASS form.noValidate: setAttribute() to " foo " followed by getAttribute() 
PASS form.noValidate: setAttribute() to " foo " followed by IDL get 
PASS form.noValidate: setAttribute() to undefined followed by getAttribute() 
PASS form.noValidate: setAttribute() to undefined followed by IDL get 
PASS form.noValidate: setAttribute() to null followed by getAttribute() 
PASS form.noValidate: setAttribute() to null followed by IDL get 
PASS form.noValidate: setAttribute() to 7 followed by getAttribute() 
PASS form.noValidate: setAttribute() to 7 followed by IDL get 
PASS form.noValidate: setAttribute() to 1.5 followed by getAttribute() 
PASS form.noValidate: setAttribute() to 1.5 followed by IDL get 
PASS form.noValidate: setAttribute() to true followed by getAttribute() 
PASS form.noValidate: setAttribute() to true followed by IDL get 
PASS form.noValidate: setAttribute() to false followed by getAttribute() 
PASS form.noValidate: setAttribute() to false followed by IDL get 
PASS form.noValidate: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.noValidate: setAttribute() to object "[object Object]" followed by IDL get 
PASS form.noValidate: setAttribute() to NaN followed by getAttribute() 
PASS form.noValidate: setAttribute() to NaN followed by IDL get 
PASS form.noValidate: setAttribute() to Infinity followed by getAttribute() 
PASS form.noValidate: setAttribute() to Infinity followed by IDL get 
PASS form.noValidate: setAttribute() to -Infinity followed by getAttribute() 
PASS form.noValidate: setAttribute() to -Infinity followed by IDL get 
PASS form.noValidate: setAttribute() to "\0" followed by getAttribute() 
PASS form.noValidate: setAttribute() to "\0" followed by IDL get 
PASS form.noValidate: setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.noValidate: setAttribute() to object "test-toString" followed by IDL get 
PASS form.noValidate: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.noValidate: setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.noValidate: setAttribute() to "noValidate" followed by getAttribute() 
PASS form.noValidate: setAttribute() to "noValidate" followed by IDL get 
PASS form.noValidate: IDL set to "" should not throw 
PASS form.noValidate: IDL set to "" followed by hasAttribute() 
PASS form.noValidate: IDL set to "" followed by IDL get 
PASS form.noValidate: IDL set to " foo " should not throw 
PASS form.noValidate: IDL set to " foo " followed by hasAttribute() 
PASS form.noValidate: IDL set to " foo " followed by IDL get 
PASS form.noValidate: IDL set to undefined should not throw 
PASS form.noValidate: IDL set to undefined followed by hasAttribute() 
PASS form.noValidate: IDL set to undefined followed by IDL get 
PASS form.noValidate: IDL set to null should not throw 
PASS form.noValidate: IDL set to null followed by hasAttribute() 
PASS form.noValidate: IDL set to null followed by IDL get 
PASS form.noValidate: IDL set to 7 should not throw 
PASS form.noValidate: IDL set to 7 followed by hasAttribute() 
PASS form.noValidate: IDL set to 7 followed by IDL get 
PASS form.noValidate: IDL set to 1.5 should not throw 
PASS form.noValidate: IDL set to 1.5 followed by hasAttribute() 
PASS form.noValidate: IDL set to 1.5 followed by IDL get 
PASS form.noValidate: IDL set to true should not throw 
PASS form.noValidate: IDL set to true followed by hasAttribute() 
PASS form.noValidate: IDL set to true followed by IDL get 
PASS form.noValidate: IDL set to false should not throw 
PASS form.noValidate: IDL set to false followed by hasAttribute() 
PASS form.noValidate: IDL set to false followed by IDL get 
PASS form.noValidate: IDL set to object "[object Object]" should not throw 
PASS form.noValidate: IDL set to object "[object Object]" followed by hasAttribute() 
PASS form.noValidate: IDL set to object "[object Object]" followed by IDL get 
PASS form.noValidate: IDL set to NaN should not throw 
PASS form.noValidate: IDL set to NaN followed by hasAttribute() 
PASS form.noValidate: IDL set to NaN followed by IDL get 
PASS form.noValidate: IDL set to Infinity should not throw 
PASS form.noValidate: IDL set to Infinity followed by hasAttribute() 
PASS form.noValidate: IDL set to Infinity followed by IDL get 
PASS form.noValidate: IDL set to -Infinity should not throw 
PASS form.noValidate: IDL set to -Infinity followed by hasAttribute() 
PASS form.noValidate: IDL set to -Infinity followed by IDL get 
PASS form.noValidate: IDL set to "\0" should not throw 
PASS form.noValidate: IDL set to "\0" followed by hasAttribute() 
PASS form.noValidate: IDL set to "\0" followed by IDL get 
PASS form.noValidate: IDL set to object "test-toString" should not throw 
PASS form.noValidate: IDL set to object "test-toString" followed by hasAttribute() 
PASS form.noValidate: IDL set to object "test-toString" followed by IDL get 
PASS form.noValidate: IDL set to object "test-valueOf" should not throw 
PASS form.noValidate: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS form.noValidate: IDL set to object "test-valueOf" followed by IDL get 
PASS form.target: typeof IDL attribute 
PASS form.target: IDL get with DOM attribute unset 
PASS form.target: setAttribute() to "" followed by getAttribute() 
PASS form.target: setAttribute() to "" followed by IDL get 
PASS form.target: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.target: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.target: setAttribute() to undefined followed by getAttribute() 
PASS form.target: setAttribute() to undefined followed by IDL get 
PASS form.target: setAttribute() to 7 followed by getAttribute() 
PASS form.target: setAttribute() to 7 followed by IDL get 
PASS form.target: setAttribute() to 1.5 followed by getAttribute() 
PASS form.target: setAttribute() to 1.5 followed by IDL get 
PASS form.target: setAttribute() to true followed by getAttribute() 
PASS form.target: setAttribute() to true followed by IDL get 
PASS form.target: setAttribute() to false followed by getAttribute() 
PASS form.target: setAttribute() to false followed by IDL get 
PASS form.target: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS form.target: setAttribute() to object "[object Object]" followed by IDL get 
PASS form.target: setAttribute() to NaN followed by getAttribute() 
PASS form.target: setAttribute() to NaN followed by IDL get 
PASS form.target: setAttribute() to Infinity followed by getAttribute() 
PASS form.target: setAttribute() to Infinity followed by IDL get 
PASS form.target: setAttribute() to -Infinity followed by getAttribute() 
PASS form.target: setAttribute() to -Infinity followed by IDL get 
PASS form.target: setAttribute() to "\0" followed by getAttribute() 
PASS form.target: setAttribute() to "\0" followed by IDL get 
PASS form.target: setAttribute() to null followed by getAttribute() 
PASS form.target: setAttribute() to null followed by IDL get 
PASS form.target: setAttribute() to object "test-toString" followed by getAttribute() 
PASS form.target: setAttribute() to object "test-toString" followed by IDL get 
PASS form.target: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS form.target: setAttribute() to object "test-valueOf" followed by IDL get 
PASS form.target: IDL set to "" should not throw 
PASS form.target: IDL set to "" followed by getAttribute() 
PASS form.target: IDL set to "" followed by IDL get 
PASS form.target: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS form.target: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS form.target: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS form.target: IDL set to undefined should not throw 
PASS form.target: IDL set to undefined followed by getAttribute() 
PASS form.target: IDL set to undefined followed by IDL get 
PASS form.target: IDL set to 7 should not throw 
PASS form.target: IDL set to 7 followed by getAttribute() 
PASS form.target: IDL set to 7 followed by IDL get 
PASS form.target: IDL set to 1.5 should not throw 
PASS form.target: IDL set to 1.5 followed by getAttribute() 
PASS form.target: IDL set to 1.5 followed by IDL get 
PASS form.target: IDL set to true should not throw 
PASS form.target: IDL set to true followed by getAttribute() 
PASS form.target: IDL set to true followed by IDL get 
PASS form.target: IDL set to false should not throw 
PASS form.target: IDL set to false followed by getAttribute() 
PASS form.target: IDL set to false followed by IDL get 
PASS form.target: IDL set to object "[object Object]" should not throw 
PASS form.target: IDL set to object "[object Object]" followed by getAttribute() 
PASS form.target: IDL set to object "[object Object]" followed by IDL get 
PASS form.target: IDL set to NaN should not throw 
PASS form.target: IDL set to NaN followed by getAttribute() 
PASS form.target: IDL set to NaN followed by IDL get 
PASS form.target: IDL set to Infinity should not throw 
PASS form.target: IDL set to Infinity followed by getAttribute() 
PASS form.target: IDL set to Infinity followed by IDL get 
PASS form.target: IDL set to -Infinity should not throw 
PASS form.target: IDL set to -Infinity followed by getAttribute() 
PASS form.target: IDL set to -Infinity followed by IDL get 
PASS form.target: IDL set to "\0" should not throw 
PASS form.target: IDL set to "\0" followed by getAttribute() 
PASS form.target: IDL set to "\0" followed by IDL get 
PASS form.target: IDL set to null should not throw 
PASS form.target: IDL set to null followed by getAttribute() 
PASS form.target: IDL set to null followed by IDL get 
PASS form.target: IDL set to object "test-toString" should not throw 
PASS form.target: IDL set to object "test-toString" followed by getAttribute() 
PASS form.target: IDL set to object "test-toString" followed by IDL get 
PASS form.target: IDL set to object "test-valueOf" should not throw 
PASS form.target: IDL set to object "test-valueOf" followed by getAttribute() 
PASS form.target: IDL set to object "test-valueOf" followed by IDL get 
FAIL form.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL form.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS form.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL form.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL form.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL form.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to null followed by getAttribute() 
FAIL form.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL form.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL form.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to true followed by getAttribute() 
FAIL form.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to false followed by getAttribute() 
FAIL form.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL form.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL form.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL form.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL form.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL form.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL form.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL form.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL form.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS form.itemScope: IDL set to "" should not throw 
FAIL form.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL form.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS form.itemScope: IDL set to " foo " should not throw 
PASS form.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL form.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS form.itemScope: IDL set to undefined should not throw 
FAIL form.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL form.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS form.itemScope: IDL set to null should not throw 
FAIL form.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL form.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS form.itemScope: IDL set to 7 should not throw 
PASS form.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL form.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS form.itemScope: IDL set to 1.5 should not throw 
PASS form.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL form.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS form.itemScope: IDL set to true should not throw 
PASS form.itemScope: IDL set to true followed by hasAttribute() 
PASS form.itemScope: IDL set to true followed by IDL get 
PASS form.itemScope: IDL set to false should not throw 
FAIL form.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS form.itemScope: IDL set to false followed by IDL get 
PASS form.itemScope: IDL set to object "[object Object]" should not throw 
PASS form.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL form.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS form.itemScope: IDL set to NaN should not throw 
FAIL form.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL form.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS form.itemScope: IDL set to Infinity should not throw 
PASS form.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL form.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS form.itemScope: IDL set to -Infinity should not throw 
PASS form.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL form.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS form.itemScope: IDL set to "\0" should not throw 
PASS form.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL form.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS form.itemScope: IDL set to object "test-toString" should not throw 
PASS form.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL form.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS form.itemScope: IDL set to object "test-valueOf" should not throw 
PASS form.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL form.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL form.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL form.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS form.itemId: setAttribute() to "" followed by getAttribute() 
FAIL form.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS form.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL form.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS form.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL form.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS form.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL form.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS form.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL form.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS form.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL form.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS form.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL form.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS form.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL form.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS form.itemId: setAttribute() to true followed by getAttribute() 
FAIL form.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS form.itemId: setAttribute() to false followed by getAttribute() 
FAIL form.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS form.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL form.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS form.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL form.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS form.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL form.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS form.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL form.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS form.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL form.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS form.itemId: setAttribute() to null followed by getAttribute() 
FAIL form.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS form.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL form.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS form.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL form.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS form.itemId: IDL set to "" should not throw 
FAIL form.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL form.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS form.itemId: IDL set to " foo " should not throw 
FAIL form.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL form.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS form.itemId: IDL set to "http://site.example/" should not throw 
FAIL form.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS form.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS form.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL form.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL form.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS form.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL form.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL form.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS form.itemId: IDL set to undefined should not throw 
FAIL form.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL form.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS form.itemId: IDL set to 7 should not throw 
FAIL form.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL form.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS form.itemId: IDL set to 1.5 should not throw 
FAIL form.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL form.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS form.itemId: IDL set to true should not throw 
FAIL form.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL form.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS form.itemId: IDL set to false should not throw 
FAIL form.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL form.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS form.itemId: IDL set to object "[object Object]" should not throw 
FAIL form.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL form.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS form.itemId: IDL set to NaN should not throw 
FAIL form.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL form.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS form.itemId: IDL set to Infinity should not throw 
FAIL form.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL form.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS form.itemId: IDL set to -Infinity should not throw 
FAIL form.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL form.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS form.itemId: IDL set to "\0" should not throw 
FAIL form.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL form.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS form.itemId: IDL set to null should not throw 
FAIL form.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL form.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS form.itemId: IDL set to object "test-toString" should not throw 
FAIL form.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL form.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS form.itemId: IDL set to object "test-valueOf" should not throw 
PASS form.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL form.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS fieldset.title: typeof IDL attribute 
PASS fieldset.title: IDL get with DOM attribute unset 
PASS fieldset.title: setAttribute() to "" followed by getAttribute() 
PASS fieldset.title: setAttribute() to "" followed by IDL get 
PASS fieldset.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS fieldset.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS fieldset.title: setAttribute() to undefined followed by getAttribute() 
PASS fieldset.title: setAttribute() to undefined followed by IDL get 
PASS fieldset.title: setAttribute() to 7 followed by getAttribute() 
PASS fieldset.title: setAttribute() to 7 followed by IDL get 
PASS fieldset.title: setAttribute() to 1.5 followed by getAttribute() 
PASS fieldset.title: setAttribute() to 1.5 followed by IDL get 
PASS fieldset.title: setAttribute() to true followed by getAttribute() 
PASS fieldset.title: setAttribute() to true followed by IDL get 
PASS fieldset.title: setAttribute() to false followed by getAttribute() 
PASS fieldset.title: setAttribute() to false followed by IDL get 
PASS fieldset.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS fieldset.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS fieldset.title: setAttribute() to NaN followed by getAttribute() 
PASS fieldset.title: setAttribute() to NaN followed by IDL get 
PASS fieldset.title: setAttribute() to Infinity followed by getAttribute() 
PASS fieldset.title: setAttribute() to Infinity followed by IDL get 
PASS fieldset.title: setAttribute() to -Infinity followed by getAttribute() 
PASS fieldset.title: setAttribute() to -Infinity followed by IDL get 
PASS fieldset.title: setAttribute() to "\0" followed by getAttribute() 
PASS fieldset.title: setAttribute() to "\0" followed by IDL get 
PASS fieldset.title: setAttribute() to null followed by getAttribute() 
PASS fieldset.title: setAttribute() to null followed by IDL get 
PASS fieldset.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS fieldset.title: setAttribute() to object "test-toString" followed by IDL get 
PASS fieldset.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS fieldset.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS fieldset.title: IDL set to "" should not throw 
PASS fieldset.title: IDL set to "" followed by getAttribute() 
PASS fieldset.title: IDL set to "" followed by IDL get 
PASS fieldset.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS fieldset.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS fieldset.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS fieldset.title: IDL set to undefined should not throw 
PASS fieldset.title: IDL set to undefined followed by getAttribute() 
PASS fieldset.title: IDL set to undefined followed by IDL get 
PASS fieldset.title: IDL set to 7 should not throw 
PASS fieldset.title: IDL set to 7 followed by getAttribute() 
PASS fieldset.title: IDL set to 7 followed by IDL get 
PASS fieldset.title: IDL set to 1.5 should not throw 
PASS fieldset.title: IDL set to 1.5 followed by getAttribute() 
PASS fieldset.title: IDL set to 1.5 followed by IDL get 
PASS fieldset.title: IDL set to true should not throw 
PASS fieldset.title: IDL set to true followed by getAttribute() 
PASS fieldset.title: IDL set to true followed by IDL get 
PASS fieldset.title: IDL set to false should not throw 
PASS fieldset.title: IDL set to false followed by getAttribute() 
PASS fieldset.title: IDL set to false followed by IDL get 
PASS fieldset.title: IDL set to object "[object Object]" should not throw 
PASS fieldset.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS fieldset.title: IDL set to object "[object Object]" followed by IDL get 
PASS fieldset.title: IDL set to NaN should not throw 
PASS fieldset.title: IDL set to NaN followed by getAttribute() 
PASS fieldset.title: IDL set to NaN followed by IDL get 
PASS fieldset.title: IDL set to Infinity should not throw 
PASS fieldset.title: IDL set to Infinity followed by getAttribute() 
PASS fieldset.title: IDL set to Infinity followed by IDL get 
PASS fieldset.title: IDL set to -Infinity should not throw 
PASS fieldset.title: IDL set to -Infinity followed by getAttribute() 
PASS fieldset.title: IDL set to -Infinity followed by IDL get 
PASS fieldset.title: IDL set to "\0" should not throw 
PASS fieldset.title: IDL set to "\0" followed by getAttribute() 
PASS fieldset.title: IDL set to "\0" followed by IDL get 
PASS fieldset.title: IDL set to null should not throw 
PASS fieldset.title: IDL set to null followed by getAttribute() 
PASS fieldset.title: IDL set to null followed by IDL get 
PASS fieldset.title: IDL set to object "test-toString" should not throw 
PASS fieldset.title: IDL set to object "test-toString" followed by getAttribute() 
PASS fieldset.title: IDL set to object "test-toString" followed by IDL get 
PASS fieldset.title: IDL set to object "test-valueOf" should not throw 
PASS fieldset.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS fieldset.title: IDL set to object "test-valueOf" followed by IDL get 
PASS fieldset.lang: typeof IDL attribute 
PASS fieldset.lang: IDL get with DOM attribute unset 
PASS fieldset.lang: setAttribute() to "" followed by getAttribute() 
PASS fieldset.lang: setAttribute() to "" followed by IDL get 
PASS fieldset.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS fieldset.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS fieldset.lang: setAttribute() to undefined followed by getAttribute() 
PASS fieldset.lang: setAttribute() to undefined followed by IDL get 
PASS fieldset.lang: setAttribute() to 7 followed by getAttribute() 
PASS fieldset.lang: setAttribute() to 7 followed by IDL get 
PASS fieldset.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS fieldset.lang: setAttribute() to 1.5 followed by IDL get 
PASS fieldset.lang: setAttribute() to true followed by getAttribute() 
PASS fieldset.lang: setAttribute() to true followed by IDL get 
PASS fieldset.lang: setAttribute() to false followed by getAttribute() 
PASS fieldset.lang: setAttribute() to false followed by IDL get 
PASS fieldset.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS fieldset.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS fieldset.lang: setAttribute() to NaN followed by getAttribute() 
PASS fieldset.lang: setAttribute() to NaN followed by IDL get 
PASS fieldset.lang: setAttribute() to Infinity followed by getAttribute() 
PASS fieldset.lang: setAttribute() to Infinity followed by IDL get 
PASS fieldset.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS fieldset.lang: setAttribute() to -Infinity followed by IDL get 
PASS fieldset.lang: setAttribute() to "\0" followed by getAttribute() 
PASS fieldset.lang: setAttribute() to "\0" followed by IDL get 
PASS fieldset.lang: setAttribute() to null followed by getAttribute() 
PASS fieldset.lang: setAttribute() to null followed by IDL get 
PASS fieldset.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS fieldset.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS fieldset.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS fieldset.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS fieldset.lang: IDL set to "" should not throw 
PASS fieldset.lang: IDL set to "" followed by getAttribute() 
PASS fieldset.lang: IDL set to "" followed by IDL get 
PASS fieldset.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS fieldset.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS fieldset.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS fieldset.lang: IDL set to undefined should not throw 
PASS fieldset.lang: IDL set to undefined followed by getAttribute() 
PASS fieldset.lang: IDL set to undefined followed by IDL get 
PASS fieldset.lang: IDL set to 7 should not throw 
PASS fieldset.lang: IDL set to 7 followed by getAttribute() 
PASS fieldset.lang: IDL set to 7 followed by IDL get 
PASS fieldset.lang: IDL set to 1.5 should not throw 
PASS fieldset.lang: IDL set to 1.5 followed by getAttribute() 
PASS fieldset.lang: IDL set to 1.5 followed by IDL get 
PASS fieldset.lang: IDL set to true should not throw 
PASS fieldset.lang: IDL set to true followed by getAttribute() 
PASS fieldset.lang: IDL set to true followed by IDL get 
PASS fieldset.lang: IDL set to false should not throw 
PASS fieldset.lang: IDL set to false followed by getAttribute() 
PASS fieldset.lang: IDL set to false followed by IDL get 
PASS fieldset.lang: IDL set to object "[object Object]" should not throw 
PASS fieldset.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS fieldset.lang: IDL set to object "[object Object]" followed by IDL get 
PASS fieldset.lang: IDL set to NaN should not throw 
PASS fieldset.lang: IDL set to NaN followed by getAttribute() 
PASS fieldset.lang: IDL set to NaN followed by IDL get 
PASS fieldset.lang: IDL set to Infinity should not throw 
PASS fieldset.lang: IDL set to Infinity followed by getAttribute() 
PASS fieldset.lang: IDL set to Infinity followed by IDL get 
PASS fieldset.lang: IDL set to -Infinity should not throw 
PASS fieldset.lang: IDL set to -Infinity followed by getAttribute() 
PASS fieldset.lang: IDL set to -Infinity followed by IDL get 
PASS fieldset.lang: IDL set to "\0" should not throw 
PASS fieldset.lang: IDL set to "\0" followed by getAttribute() 
PASS fieldset.lang: IDL set to "\0" followed by IDL get 
PASS fieldset.lang: IDL set to null should not throw 
PASS fieldset.lang: IDL set to null followed by getAttribute() 
PASS fieldset.lang: IDL set to null followed by IDL get 
PASS fieldset.lang: IDL set to object "test-toString" should not throw 
PASS fieldset.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS fieldset.lang: IDL set to object "test-toString" followed by IDL get 
PASS fieldset.lang: IDL set to object "test-valueOf" should not throw 
PASS fieldset.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS fieldset.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS fieldset.dir: typeof IDL attribute 
PASS fieldset.dir: IDL get with DOM attribute unset 
PASS fieldset.dir: setAttribute() to "" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "" followed by IDL get 
PASS fieldset.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS fieldset.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS fieldset.dir: setAttribute() to undefined followed by getAttribute() 
PASS fieldset.dir: setAttribute() to undefined followed by IDL get 
PASS fieldset.dir: setAttribute() to 7 followed by getAttribute() 
PASS fieldset.dir: setAttribute() to 7 followed by IDL get 
PASS fieldset.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS fieldset.dir: setAttribute() to 1.5 followed by IDL get 
PASS fieldset.dir: setAttribute() to true followed by getAttribute() 
PASS fieldset.dir: setAttribute() to true followed by IDL get 
PASS fieldset.dir: setAttribute() to false followed by getAttribute() 
PASS fieldset.dir: setAttribute() to false followed by IDL get 
PASS fieldset.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS fieldset.dir: setAttribute() to NaN followed by getAttribute() 
PASS fieldset.dir: setAttribute() to NaN followed by IDL get 
PASS fieldset.dir: setAttribute() to Infinity followed by getAttribute() 
PASS fieldset.dir: setAttribute() to Infinity followed by IDL get 
PASS fieldset.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS fieldset.dir: setAttribute() to -Infinity followed by IDL get 
PASS fieldset.dir: setAttribute() to "\0" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "\0" followed by IDL get 
PASS fieldset.dir: setAttribute() to null followed by getAttribute() 
PASS fieldset.dir: setAttribute() to null followed by IDL get 
PASS fieldset.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS fieldset.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS fieldset.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "ltr" followed by IDL get 
PASS fieldset.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "xltr" followed by IDL get 
PASS fieldset.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS fieldset.dir: setAttribute() to "tr" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "tr" followed by IDL get 
PASS fieldset.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "LTR" followed by IDL get 
PASS fieldset.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "rtl" followed by IDL get 
PASS fieldset.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "xrtl" followed by IDL get 
PASS fieldset.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS fieldset.dir: setAttribute() to "tl" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "tl" followed by IDL get 
PASS fieldset.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "RTL" followed by IDL get 
PASS fieldset.dir: setAttribute() to "auto" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "auto" followed by IDL get 
PASS fieldset.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "xauto" followed by IDL get 
PASS fieldset.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "auto\0" followed by IDL get 
PASS fieldset.dir: setAttribute() to "uto" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "uto" followed by IDL get 
PASS fieldset.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS fieldset.dir: setAttribute() to "AUTO" followed by IDL get 
PASS fieldset.dir: IDL set to "" should not throw 
PASS fieldset.dir: IDL set to "" followed by getAttribute() 
PASS fieldset.dir: IDL set to "" followed by IDL get 
PASS fieldset.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS fieldset.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS fieldset.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS fieldset.dir: IDL set to undefined should not throw 
PASS fieldset.dir: IDL set to undefined followed by getAttribute() 
PASS fieldset.dir: IDL set to undefined followed by IDL get 
PASS fieldset.dir: IDL set to 7 should not throw 
PASS fieldset.dir: IDL set to 7 followed by getAttribute() 
PASS fieldset.dir: IDL set to 7 followed by IDL get 
PASS fieldset.dir: IDL set to 1.5 should not throw 
PASS fieldset.dir: IDL set to 1.5 followed by getAttribute() 
PASS fieldset.dir: IDL set to 1.5 followed by IDL get 
PASS fieldset.dir: IDL set to true should not throw 
PASS fieldset.dir: IDL set to true followed by getAttribute() 
PASS fieldset.dir: IDL set to true followed by IDL get 
PASS fieldset.dir: IDL set to false should not throw 
PASS fieldset.dir: IDL set to false followed by getAttribute() 
PASS fieldset.dir: IDL set to false followed by IDL get 
PASS fieldset.dir: IDL set to object "[object Object]" should not throw 
PASS fieldset.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS fieldset.dir: IDL set to object "[object Object]" followed by IDL get 
PASS fieldset.dir: IDL set to NaN should not throw 
PASS fieldset.dir: IDL set to NaN followed by getAttribute() 
PASS fieldset.dir: IDL set to NaN followed by IDL get 
PASS fieldset.dir: IDL set to Infinity should not throw 
PASS fieldset.dir: IDL set to Infinity followed by getAttribute() 
PASS fieldset.dir: IDL set to Infinity followed by IDL get 
PASS fieldset.dir: IDL set to -Infinity should not throw 
PASS fieldset.dir: IDL set to -Infinity followed by getAttribute() 
PASS fieldset.dir: IDL set to -Infinity followed by IDL get 
PASS fieldset.dir: IDL set to "\0" should not throw 
PASS fieldset.dir: IDL set to "\0" followed by getAttribute() 
PASS fieldset.dir: IDL set to "\0" followed by IDL get 
PASS fieldset.dir: IDL set to null should not throw 
PASS fieldset.dir: IDL set to null followed by IDL get 
PASS fieldset.dir: IDL set to object "test-toString" should not throw 
PASS fieldset.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS fieldset.dir: IDL set to object "test-toString" followed by IDL get 
PASS fieldset.dir: IDL set to object "test-valueOf" should not throw 
PASS fieldset.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS fieldset.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS fieldset.dir: IDL set to "ltr" should not throw 
PASS fieldset.dir: IDL set to "ltr" followed by getAttribute() 
PASS fieldset.dir: IDL set to "ltr" followed by IDL get 
PASS fieldset.dir: IDL set to "xltr" should not throw 
PASS fieldset.dir: IDL set to "xltr" followed by getAttribute() 
PASS fieldset.dir: IDL set to "xltr" followed by IDL get 
PASS fieldset.dir: IDL set to "ltr\0" should not throw 
PASS fieldset.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS fieldset.dir: IDL set to "ltr\0" followed by IDL get 
PASS fieldset.dir: IDL set to "tr" should not throw 
PASS fieldset.dir: IDL set to "tr" followed by getAttribute() 
PASS fieldset.dir: IDL set to "tr" followed by IDL get 
PASS fieldset.dir: IDL set to "LTR" should not throw 
PASS fieldset.dir: IDL set to "LTR" followed by getAttribute() 
PASS fieldset.dir: IDL set to "LTR" followed by IDL get 
PASS fieldset.dir: IDL set to "rtl" should not throw 
PASS fieldset.dir: IDL set to "rtl" followed by getAttribute() 
PASS fieldset.dir: IDL set to "rtl" followed by IDL get 
PASS fieldset.dir: IDL set to "xrtl" should not throw 
PASS fieldset.dir: IDL set to "xrtl" followed by getAttribute() 
PASS fieldset.dir: IDL set to "xrtl" followed by IDL get 
PASS fieldset.dir: IDL set to "rtl\0" should not throw 
PASS fieldset.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS fieldset.dir: IDL set to "rtl\0" followed by IDL get 
PASS fieldset.dir: IDL set to "tl" should not throw 
PASS fieldset.dir: IDL set to "tl" followed by getAttribute() 
PASS fieldset.dir: IDL set to "tl" followed by IDL get 
PASS fieldset.dir: IDL set to "RTL" should not throw 
PASS fieldset.dir: IDL set to "RTL" followed by getAttribute() 
PASS fieldset.dir: IDL set to "RTL" followed by IDL get 
PASS fieldset.dir: IDL set to "auto" should not throw 
PASS fieldset.dir: IDL set to "auto" followed by getAttribute() 
PASS fieldset.dir: IDL set to "auto" followed by IDL get 
PASS fieldset.dir: IDL set to "xauto" should not throw 
PASS fieldset.dir: IDL set to "xauto" followed by getAttribute() 
PASS fieldset.dir: IDL set to "xauto" followed by IDL get 
PASS fieldset.dir: IDL set to "auto\0" should not throw 
PASS fieldset.dir: IDL set to "auto\0" followed by getAttribute() 
PASS fieldset.dir: IDL set to "auto\0" followed by IDL get 
PASS fieldset.dir: IDL set to "uto" should not throw 
PASS fieldset.dir: IDL set to "uto" followed by getAttribute() 
PASS fieldset.dir: IDL set to "uto" followed by IDL get 
PASS fieldset.dir: IDL set to "AUTO" should not throw 
PASS fieldset.dir: IDL set to "AUTO" followed by getAttribute() 
PASS fieldset.dir: IDL set to "AUTO" followed by IDL get 
PASS fieldset.className (<fieldset class>): typeof IDL attribute 
PASS fieldset.className (<fieldset class>): IDL get with DOM attribute unset 
PASS fieldset.className (<fieldset class>): setAttribute() to "" followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to "" followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to undefined followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to undefined followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to 7 followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to 7 followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to 1.5 followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to 1.5 followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to true followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to true followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to false followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to false followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to NaN followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to NaN followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to Infinity followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to Infinity followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to -Infinity followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to -Infinity followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to "\0" followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to "\0" followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to null followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to null followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to object "test-toString" followed by IDL get 
PASS fieldset.className (<fieldset class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS fieldset.className (<fieldset class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to "" should not throw 
PASS fieldset.className (<fieldset class>): IDL set to "" followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to "" followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS fieldset.className (<fieldset class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to undefined should not throw 
PASS fieldset.className (<fieldset class>): IDL set to undefined followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to undefined followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to 7 should not throw 
PASS fieldset.className (<fieldset class>): IDL set to 7 followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to 7 followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to 1.5 should not throw 
PASS fieldset.className (<fieldset class>): IDL set to 1.5 followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to 1.5 followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to true should not throw 
PASS fieldset.className (<fieldset class>): IDL set to true followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to true followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to false should not throw 
PASS fieldset.className (<fieldset class>): IDL set to false followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to false followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to object "[object Object]" should not throw 
PASS fieldset.className (<fieldset class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to object "[object Object]" followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to NaN should not throw 
PASS fieldset.className (<fieldset class>): IDL set to NaN followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to NaN followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to Infinity should not throw 
PASS fieldset.className (<fieldset class>): IDL set to Infinity followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to Infinity followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to -Infinity should not throw 
PASS fieldset.className (<fieldset class>): IDL set to -Infinity followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to -Infinity followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to "\0" should not throw 
PASS fieldset.className (<fieldset class>): IDL set to "\0" followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to "\0" followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to null should not throw 
PASS fieldset.className (<fieldset class>): IDL set to null followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to null followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to object "test-toString" should not throw 
PASS fieldset.className (<fieldset class>): IDL set to object "test-toString" followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to object "test-toString" followed by IDL get 
PASS fieldset.className (<fieldset class>): IDL set to object "test-valueOf" should not throw 
PASS fieldset.className (<fieldset class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS fieldset.className (<fieldset class>): IDL set to object "test-valueOf" followed by IDL get 
PASS fieldset.hidden: typeof IDL attribute 
PASS fieldset.hidden: IDL get with DOM attribute unset 
PASS fieldset.hidden: setAttribute() to "" followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to "" followed by IDL get 
PASS fieldset.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to " foo " followed by IDL get 
PASS fieldset.hidden: setAttribute() to undefined followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to undefined followed by IDL get 
PASS fieldset.hidden: setAttribute() to null followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to null followed by IDL get 
PASS fieldset.hidden: setAttribute() to 7 followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to 7 followed by IDL get 
PASS fieldset.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to 1.5 followed by IDL get 
PASS fieldset.hidden: setAttribute() to true followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to true followed by IDL get 
PASS fieldset.hidden: setAttribute() to false followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to false followed by IDL get 
PASS fieldset.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS fieldset.hidden: setAttribute() to NaN followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to NaN followed by IDL get 
PASS fieldset.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to Infinity followed by IDL get 
PASS fieldset.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to -Infinity followed by IDL get 
PASS fieldset.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to "\0" followed by IDL get 
PASS fieldset.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS fieldset.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS fieldset.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS fieldset.hidden: setAttribute() to "hidden" followed by IDL get 
PASS fieldset.hidden: IDL set to "" should not throw 
PASS fieldset.hidden: IDL set to "" followed by hasAttribute() 
PASS fieldset.hidden: IDL set to "" followed by IDL get 
PASS fieldset.hidden: IDL set to " foo " should not throw 
PASS fieldset.hidden: IDL set to " foo " followed by hasAttribute() 
PASS fieldset.hidden: IDL set to " foo " followed by IDL get 
PASS fieldset.hidden: IDL set to undefined should not throw 
PASS fieldset.hidden: IDL set to undefined followed by hasAttribute() 
PASS fieldset.hidden: IDL set to undefined followed by IDL get 
PASS fieldset.hidden: IDL set to null should not throw 
PASS fieldset.hidden: IDL set to null followed by hasAttribute() 
PASS fieldset.hidden: IDL set to null followed by IDL get 
PASS fieldset.hidden: IDL set to 7 should not throw 
PASS fieldset.hidden: IDL set to 7 followed by hasAttribute() 
PASS fieldset.hidden: IDL set to 7 followed by IDL get 
PASS fieldset.hidden: IDL set to 1.5 should not throw 
PASS fieldset.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS fieldset.hidden: IDL set to 1.5 followed by IDL get 
PASS fieldset.hidden: IDL set to true should not throw 
PASS fieldset.hidden: IDL set to true followed by hasAttribute() 
PASS fieldset.hidden: IDL set to true followed by IDL get 
PASS fieldset.hidden: IDL set to false should not throw 
PASS fieldset.hidden: IDL set to false followed by hasAttribute() 
PASS fieldset.hidden: IDL set to false followed by IDL get 
PASS fieldset.hidden: IDL set to object "[object Object]" should not throw 
PASS fieldset.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS fieldset.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS fieldset.hidden: IDL set to NaN should not throw 
PASS fieldset.hidden: IDL set to NaN followed by hasAttribute() 
PASS fieldset.hidden: IDL set to NaN followed by IDL get 
PASS fieldset.hidden: IDL set to Infinity should not throw 
PASS fieldset.hidden: IDL set to Infinity followed by hasAttribute() 
PASS fieldset.hidden: IDL set to Infinity followed by IDL get 
PASS fieldset.hidden: IDL set to -Infinity should not throw 
PASS fieldset.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS fieldset.hidden: IDL set to -Infinity followed by IDL get 
PASS fieldset.hidden: IDL set to "\0" should not throw 
PASS fieldset.hidden: IDL set to "\0" followed by hasAttribute() 
PASS fieldset.hidden: IDL set to "\0" followed by IDL get 
PASS fieldset.hidden: IDL set to object "test-toString" should not throw 
PASS fieldset.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS fieldset.hidden: IDL set to object "test-toString" followed by IDL get 
PASS fieldset.hidden: IDL set to object "test-valueOf" should not throw 
PASS fieldset.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS fieldset.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS fieldset.accessKey: typeof IDL attribute 
PASS fieldset.accessKey: IDL get with DOM attribute unset 
PASS fieldset.accessKey: setAttribute() to "" followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to "" followed by IDL get 
PASS fieldset.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS fieldset.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to undefined followed by IDL get 
PASS fieldset.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to 7 followed by IDL get 
PASS fieldset.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS fieldset.accessKey: setAttribute() to true followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to true followed by IDL get 
PASS fieldset.accessKey: setAttribute() to false followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to false followed by IDL get 
PASS fieldset.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS fieldset.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to NaN followed by IDL get 
PASS fieldset.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to Infinity followed by IDL get 
PASS fieldset.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS fieldset.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to "\0" followed by IDL get 
PASS fieldset.accessKey: setAttribute() to null followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to null followed by IDL get 
PASS fieldset.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS fieldset.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS fieldset.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS fieldset.accessKey: IDL set to "" should not throw 
PASS fieldset.accessKey: IDL set to "" followed by getAttribute() 
PASS fieldset.accessKey: IDL set to "" followed by IDL get 
PASS fieldset.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS fieldset.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS fieldset.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS fieldset.accessKey: IDL set to undefined should not throw 
PASS fieldset.accessKey: IDL set to undefined followed by getAttribute() 
PASS fieldset.accessKey: IDL set to undefined followed by IDL get 
PASS fieldset.accessKey: IDL set to 7 should not throw 
PASS fieldset.accessKey: IDL set to 7 followed by getAttribute() 
PASS fieldset.accessKey: IDL set to 7 followed by IDL get 
PASS fieldset.accessKey: IDL set to 1.5 should not throw 
PASS fieldset.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS fieldset.accessKey: IDL set to 1.5 followed by IDL get 
PASS fieldset.accessKey: IDL set to true should not throw 
PASS fieldset.accessKey: IDL set to true followed by getAttribute() 
PASS fieldset.accessKey: IDL set to true followed by IDL get 
PASS fieldset.accessKey: IDL set to false should not throw 
PASS fieldset.accessKey: IDL set to false followed by getAttribute() 
PASS fieldset.accessKey: IDL set to false followed by IDL get 
PASS fieldset.accessKey: IDL set to object "[object Object]" should not throw 
PASS fieldset.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS fieldset.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS fieldset.accessKey: IDL set to NaN should not throw 
PASS fieldset.accessKey: IDL set to NaN followed by getAttribute() 
PASS fieldset.accessKey: IDL set to NaN followed by IDL get 
PASS fieldset.accessKey: IDL set to Infinity should not throw 
PASS fieldset.accessKey: IDL set to Infinity followed by getAttribute() 
PASS fieldset.accessKey: IDL set to Infinity followed by IDL get 
PASS fieldset.accessKey: IDL set to -Infinity should not throw 
PASS fieldset.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS fieldset.accessKey: IDL set to -Infinity followed by IDL get 
PASS fieldset.accessKey: IDL set to "\0" should not throw 
PASS fieldset.accessKey: IDL set to "\0" followed by getAttribute() 
PASS fieldset.accessKey: IDL set to "\0" followed by IDL get 
PASS fieldset.accessKey: IDL set to null should not throw 
PASS fieldset.accessKey: IDL set to null followed by getAttribute() 
PASS fieldset.accessKey: IDL set to null followed by IDL get 
PASS fieldset.accessKey: IDL set to object "test-toString" should not throw 
PASS fieldset.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS fieldset.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS fieldset.accessKey: IDL set to object "test-valueOf" should not throw 
PASS fieldset.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS fieldset.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS fieldset.tabIndex: typeof IDL attribute 
PASS fieldset.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to -36 followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to -1 followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to 0 followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to 1 followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL fieldset.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS fieldset.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL fieldset.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS fieldset.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to "0" followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to "1" followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS fieldset.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS fieldset.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS fieldset.tabIndex: IDL set to -36 should not throw 
PASS fieldset.tabIndex: IDL set to -36 followed by getAttribute() 
PASS fieldset.tabIndex: IDL set to -36 followed by IDL get 
PASS fieldset.tabIndex: IDL set to -1 should not throw 
PASS fieldset.tabIndex: IDL set to -1 followed by getAttribute() 
PASS fieldset.tabIndex: IDL set to -1 followed by IDL get 
PASS fieldset.tabIndex: IDL set to 0 should not throw 
PASS fieldset.tabIndex: IDL set to 0 followed by getAttribute() 
PASS fieldset.tabIndex: IDL set to 0 followed by IDL get 
PASS fieldset.tabIndex: IDL set to 1 should not throw 
PASS fieldset.tabIndex: IDL set to 1 followed by getAttribute() 
PASS fieldset.tabIndex: IDL set to 1 followed by IDL get 
PASS fieldset.tabIndex: IDL set to 2147483647 should not throw 
PASS fieldset.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL fieldset.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS fieldset.tabIndex: IDL set to -2147483648 should not throw 
PASS fieldset.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL fieldset.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS fieldset.disabled: typeof IDL attribute 
PASS fieldset.disabled: IDL get with DOM attribute unset 
PASS fieldset.disabled: setAttribute() to "" followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to "" followed by IDL get 
PASS fieldset.disabled: setAttribute() to " foo " followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to " foo " followed by IDL get 
PASS fieldset.disabled: setAttribute() to undefined followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to undefined followed by IDL get 
PASS fieldset.disabled: setAttribute() to null followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to null followed by IDL get 
PASS fieldset.disabled: setAttribute() to 7 followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to 7 followed by IDL get 
PASS fieldset.disabled: setAttribute() to 1.5 followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to 1.5 followed by IDL get 
PASS fieldset.disabled: setAttribute() to true followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to true followed by IDL get 
PASS fieldset.disabled: setAttribute() to false followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to false followed by IDL get 
PASS fieldset.disabled: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to object "[object Object]" followed by IDL get 
PASS fieldset.disabled: setAttribute() to NaN followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to NaN followed by IDL get 
PASS fieldset.disabled: setAttribute() to Infinity followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to Infinity followed by IDL get 
PASS fieldset.disabled: setAttribute() to -Infinity followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to -Infinity followed by IDL get 
PASS fieldset.disabled: setAttribute() to "\0" followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to "\0" followed by IDL get 
PASS fieldset.disabled: setAttribute() to object "test-toString" followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to object "test-toString" followed by IDL get 
PASS fieldset.disabled: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to object "test-valueOf" followed by IDL get 
PASS fieldset.disabled: setAttribute() to "disabled" followed by getAttribute() 
PASS fieldset.disabled: setAttribute() to "disabled" followed by IDL get 
PASS fieldset.disabled: IDL set to "" should not throw 
PASS fieldset.disabled: IDL set to "" followed by hasAttribute() 
PASS fieldset.disabled: IDL set to "" followed by IDL get 
PASS fieldset.disabled: IDL set to " foo " should not throw 
PASS fieldset.disabled: IDL set to " foo " followed by hasAttribute() 
PASS fieldset.disabled: IDL set to " foo " followed by IDL get 
PASS fieldset.disabled: IDL set to undefined should not throw 
PASS fieldset.disabled: IDL set to undefined followed by hasAttribute() 
PASS fieldset.disabled: IDL set to undefined followed by IDL get 
PASS fieldset.disabled: IDL set to null should not throw 
PASS fieldset.disabled: IDL set to null followed by hasAttribute() 
PASS fieldset.disabled: IDL set to null followed by IDL get 
PASS fieldset.disabled: IDL set to 7 should not throw 
PASS fieldset.disabled: IDL set to 7 followed by hasAttribute() 
PASS fieldset.disabled: IDL set to 7 followed by IDL get 
PASS fieldset.disabled: IDL set to 1.5 should not throw 
PASS fieldset.disabled: IDL set to 1.5 followed by hasAttribute() 
PASS fieldset.disabled: IDL set to 1.5 followed by IDL get 
PASS fieldset.disabled: IDL set to true should not throw 
PASS fieldset.disabled: IDL set to true followed by hasAttribute() 
PASS fieldset.disabled: IDL set to true followed by IDL get 
PASS fieldset.disabled: IDL set to false should not throw 
PASS fieldset.disabled: IDL set to false followed by hasAttribute() 
PASS fieldset.disabled: IDL set to false followed by IDL get 
PASS fieldset.disabled: IDL set to object "[object Object]" should not throw 
PASS fieldset.disabled: IDL set to object "[object Object]" followed by hasAttribute() 
PASS fieldset.disabled: IDL set to object "[object Object]" followed by IDL get 
PASS fieldset.disabled: IDL set to NaN should not throw 
PASS fieldset.disabled: IDL set to NaN followed by hasAttribute() 
PASS fieldset.disabled: IDL set to NaN followed by IDL get 
PASS fieldset.disabled: IDL set to Infinity should not throw 
PASS fieldset.disabled: IDL set to Infinity followed by hasAttribute() 
PASS fieldset.disabled: IDL set to Infinity followed by IDL get 
PASS fieldset.disabled: IDL set to -Infinity should not throw 
PASS fieldset.disabled: IDL set to -Infinity followed by hasAttribute() 
PASS fieldset.disabled: IDL set to -Infinity followed by IDL get 
PASS fieldset.disabled: IDL set to "\0" should not throw 
PASS fieldset.disabled: IDL set to "\0" followed by hasAttribute() 
PASS fieldset.disabled: IDL set to "\0" followed by IDL get 
PASS fieldset.disabled: IDL set to object "test-toString" should not throw 
PASS fieldset.disabled: IDL set to object "test-toString" followed by hasAttribute() 
PASS fieldset.disabled: IDL set to object "test-toString" followed by IDL get 
PASS fieldset.disabled: IDL set to object "test-valueOf" should not throw 
PASS fieldset.disabled: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS fieldset.disabled: IDL set to object "test-valueOf" followed by IDL get 
PASS fieldset.name: typeof IDL attribute 
PASS fieldset.name: IDL get with DOM attribute unset 
PASS fieldset.name: setAttribute() to "" followed by getAttribute() 
PASS fieldset.name: setAttribute() to "" followed by IDL get 
PASS fieldset.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS fieldset.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS fieldset.name: setAttribute() to undefined followed by getAttribute() 
PASS fieldset.name: setAttribute() to undefined followed by IDL get 
PASS fieldset.name: setAttribute() to 7 followed by getAttribute() 
PASS fieldset.name: setAttribute() to 7 followed by IDL get 
PASS fieldset.name: setAttribute() to 1.5 followed by getAttribute() 
PASS fieldset.name: setAttribute() to 1.5 followed by IDL get 
PASS fieldset.name: setAttribute() to true followed by getAttribute() 
PASS fieldset.name: setAttribute() to true followed by IDL get 
PASS fieldset.name: setAttribute() to false followed by getAttribute() 
PASS fieldset.name: setAttribute() to false followed by IDL get 
PASS fieldset.name: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS fieldset.name: setAttribute() to object "[object Object]" followed by IDL get 
PASS fieldset.name: setAttribute() to NaN followed by getAttribute() 
PASS fieldset.name: setAttribute() to NaN followed by IDL get 
PASS fieldset.name: setAttribute() to Infinity followed by getAttribute() 
PASS fieldset.name: setAttribute() to Infinity followed by IDL get 
PASS fieldset.name: setAttribute() to -Infinity followed by getAttribute() 
PASS fieldset.name: setAttribute() to -Infinity followed by IDL get 
PASS fieldset.name: setAttribute() to "\0" followed by getAttribute() 
PASS fieldset.name: setAttribute() to "\0" followed by IDL get 
PASS fieldset.name: setAttribute() to null followed by getAttribute() 
PASS fieldset.name: setAttribute() to null followed by IDL get 
PASS fieldset.name: setAttribute() to object "test-toString" followed by getAttribute() 
PASS fieldset.name: setAttribute() to object "test-toString" followed by IDL get 
PASS fieldset.name: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS fieldset.name: setAttribute() to object "test-valueOf" followed by IDL get 
PASS fieldset.name: IDL set to "" should not throw 
PASS fieldset.name: IDL set to "" followed by getAttribute() 
PASS fieldset.name: IDL set to "" followed by IDL get 
PASS fieldset.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS fieldset.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS fieldset.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS fieldset.name: IDL set to undefined should not throw 
PASS fieldset.name: IDL set to undefined followed by getAttribute() 
PASS fieldset.name: IDL set to undefined followed by IDL get 
PASS fieldset.name: IDL set to 7 should not throw 
PASS fieldset.name: IDL set to 7 followed by getAttribute() 
PASS fieldset.name: IDL set to 7 followed by IDL get 
PASS fieldset.name: IDL set to 1.5 should not throw 
PASS fieldset.name: IDL set to 1.5 followed by getAttribute() 
PASS fieldset.name: IDL set to 1.5 followed by IDL get 
PASS fieldset.name: IDL set to true should not throw 
PASS fieldset.name: IDL set to true followed by getAttribute() 
PASS fieldset.name: IDL set to true followed by IDL get 
PASS fieldset.name: IDL set to false should not throw 
PASS fieldset.name: IDL set to false followed by getAttribute() 
PASS fieldset.name: IDL set to false followed by IDL get 
PASS fieldset.name: IDL set to object "[object Object]" should not throw 
PASS fieldset.name: IDL set to object "[object Object]" followed by getAttribute() 
PASS fieldset.name: IDL set to object "[object Object]" followed by IDL get 
PASS fieldset.name: IDL set to NaN should not throw 
PASS fieldset.name: IDL set to NaN followed by getAttribute() 
PASS fieldset.name: IDL set to NaN followed by IDL get 
PASS fieldset.name: IDL set to Infinity should not throw 
PASS fieldset.name: IDL set to Infinity followed by getAttribute() 
PASS fieldset.name: IDL set to Infinity followed by IDL get 
PASS fieldset.name: IDL set to -Infinity should not throw 
PASS fieldset.name: IDL set to -Infinity followed by getAttribute() 
PASS fieldset.name: IDL set to -Infinity followed by IDL get 
PASS fieldset.name: IDL set to "\0" should not throw 
PASS fieldset.name: IDL set to "\0" followed by getAttribute() 
PASS fieldset.name: IDL set to "\0" followed by IDL get 
PASS fieldset.name: IDL set to null should not throw 
PASS fieldset.name: IDL set to null followed by getAttribute() 
PASS fieldset.name: IDL set to null followed by IDL get 
PASS fieldset.name: IDL set to object "test-toString" should not throw 
PASS fieldset.name: IDL set to object "test-toString" followed by getAttribute() 
PASS fieldset.name: IDL set to object "test-toString" followed by IDL get 
PASS fieldset.name: IDL set to object "test-valueOf" should not throw 
PASS fieldset.name: IDL set to object "test-valueOf" followed by getAttribute() 
PASS fieldset.name: IDL set to object "test-valueOf" followed by IDL get 
FAIL fieldset.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL fieldset.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to null followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to true followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to false followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL fieldset.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS fieldset.itemScope: IDL set to "" should not throw 
FAIL fieldset.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL fieldset.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS fieldset.itemScope: IDL set to " foo " should not throw 
PASS fieldset.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL fieldset.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS fieldset.itemScope: IDL set to undefined should not throw 
FAIL fieldset.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL fieldset.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS fieldset.itemScope: IDL set to null should not throw 
FAIL fieldset.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL fieldset.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS fieldset.itemScope: IDL set to 7 should not throw 
PASS fieldset.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL fieldset.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS fieldset.itemScope: IDL set to 1.5 should not throw 
PASS fieldset.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL fieldset.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS fieldset.itemScope: IDL set to true should not throw 
PASS fieldset.itemScope: IDL set to true followed by hasAttribute() 
PASS fieldset.itemScope: IDL set to true followed by IDL get 
PASS fieldset.itemScope: IDL set to false should not throw 
FAIL fieldset.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS fieldset.itemScope: IDL set to false followed by IDL get 
PASS fieldset.itemScope: IDL set to object "[object Object]" should not throw 
PASS fieldset.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL fieldset.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS fieldset.itemScope: IDL set to NaN should not throw 
FAIL fieldset.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL fieldset.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS fieldset.itemScope: IDL set to Infinity should not throw 
PASS fieldset.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL fieldset.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS fieldset.itemScope: IDL set to -Infinity should not throw 
PASS fieldset.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL fieldset.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS fieldset.itemScope: IDL set to "\0" should not throw 
PASS fieldset.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL fieldset.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS fieldset.itemScope: IDL set to object "test-toString" should not throw 
PASS fieldset.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL fieldset.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS fieldset.itemScope: IDL set to object "test-valueOf" should not throw 
PASS fieldset.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL fieldset.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL fieldset.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL fieldset.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to "" followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to true followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to false followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to null followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS fieldset.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL fieldset.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS fieldset.itemId: IDL set to "" should not throw 
FAIL fieldset.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS fieldset.itemId: IDL set to " foo " should not throw 
FAIL fieldset.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL fieldset.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS fieldset.itemId: IDL set to "http://site.example/" should not throw 
FAIL fieldset.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS fieldset.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS fieldset.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL fieldset.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS fieldset.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL fieldset.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL fieldset.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS fieldset.itemId: IDL set to undefined should not throw 
FAIL fieldset.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS fieldset.itemId: IDL set to 7 should not throw 
FAIL fieldset.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS fieldset.itemId: IDL set to 1.5 should not throw 
FAIL fieldset.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS fieldset.itemId: IDL set to true should not throw 
FAIL fieldset.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS fieldset.itemId: IDL set to false should not throw 
FAIL fieldset.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS fieldset.itemId: IDL set to object "[object Object]" should not throw 
FAIL fieldset.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS fieldset.itemId: IDL set to NaN should not throw 
FAIL fieldset.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS fieldset.itemId: IDL set to Infinity should not throw 
FAIL fieldset.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS fieldset.itemId: IDL set to -Infinity should not throw 
FAIL fieldset.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS fieldset.itemId: IDL set to "\0" should not throw 
FAIL fieldset.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS fieldset.itemId: IDL set to null should not throw 
FAIL fieldset.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS fieldset.itemId: IDL set to object "test-toString" should not throw 
FAIL fieldset.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL fieldset.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS fieldset.itemId: IDL set to object "test-valueOf" should not throw 
PASS fieldset.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL fieldset.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS legend.title: typeof IDL attribute 
PASS legend.title: IDL get with DOM attribute unset 
PASS legend.title: setAttribute() to "" followed by getAttribute() 
PASS legend.title: setAttribute() to "" followed by IDL get 
PASS legend.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS legend.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS legend.title: setAttribute() to undefined followed by getAttribute() 
PASS legend.title: setAttribute() to undefined followed by IDL get 
PASS legend.title: setAttribute() to 7 followed by getAttribute() 
PASS legend.title: setAttribute() to 7 followed by IDL get 
PASS legend.title: setAttribute() to 1.5 followed by getAttribute() 
PASS legend.title: setAttribute() to 1.5 followed by IDL get 
PASS legend.title: setAttribute() to true followed by getAttribute() 
PASS legend.title: setAttribute() to true followed by IDL get 
PASS legend.title: setAttribute() to false followed by getAttribute() 
PASS legend.title: setAttribute() to false followed by IDL get 
PASS legend.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS legend.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS legend.title: setAttribute() to NaN followed by getAttribute() 
PASS legend.title: setAttribute() to NaN followed by IDL get 
PASS legend.title: setAttribute() to Infinity followed by getAttribute() 
PASS legend.title: setAttribute() to Infinity followed by IDL get 
PASS legend.title: setAttribute() to -Infinity followed by getAttribute() 
PASS legend.title: setAttribute() to -Infinity followed by IDL get 
PASS legend.title: setAttribute() to "\0" followed by getAttribute() 
PASS legend.title: setAttribute() to "\0" followed by IDL get 
PASS legend.title: setAttribute() to null followed by getAttribute() 
PASS legend.title: setAttribute() to null followed by IDL get 
PASS legend.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS legend.title: setAttribute() to object "test-toString" followed by IDL get 
PASS legend.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS legend.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS legend.title: IDL set to "" should not throw 
PASS legend.title: IDL set to "" followed by getAttribute() 
PASS legend.title: IDL set to "" followed by IDL get 
PASS legend.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS legend.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS legend.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS legend.title: IDL set to undefined should not throw 
PASS legend.title: IDL set to undefined followed by getAttribute() 
PASS legend.title: IDL set to undefined followed by IDL get 
PASS legend.title: IDL set to 7 should not throw 
PASS legend.title: IDL set to 7 followed by getAttribute() 
PASS legend.title: IDL set to 7 followed by IDL get 
PASS legend.title: IDL set to 1.5 should not throw 
PASS legend.title: IDL set to 1.5 followed by getAttribute() 
PASS legend.title: IDL set to 1.5 followed by IDL get 
PASS legend.title: IDL set to true should not throw 
PASS legend.title: IDL set to true followed by getAttribute() 
PASS legend.title: IDL set to true followed by IDL get 
PASS legend.title: IDL set to false should not throw 
PASS legend.title: IDL set to false followed by getAttribute() 
PASS legend.title: IDL set to false followed by IDL get 
PASS legend.title: IDL set to object "[object Object]" should not throw 
PASS legend.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS legend.title: IDL set to object "[object Object]" followed by IDL get 
PASS legend.title: IDL set to NaN should not throw 
PASS legend.title: IDL set to NaN followed by getAttribute() 
PASS legend.title: IDL set to NaN followed by IDL get 
PASS legend.title: IDL set to Infinity should not throw 
PASS legend.title: IDL set to Infinity followed by getAttribute() 
PASS legend.title: IDL set to Infinity followed by IDL get 
PASS legend.title: IDL set to -Infinity should not throw 
PASS legend.title: IDL set to -Infinity followed by getAttribute() 
PASS legend.title: IDL set to -Infinity followed by IDL get 
PASS legend.title: IDL set to "\0" should not throw 
PASS legend.title: IDL set to "\0" followed by getAttribute() 
PASS legend.title: IDL set to "\0" followed by IDL get 
PASS legend.title: IDL set to null should not throw 
PASS legend.title: IDL set to null followed by getAttribute() 
PASS legend.title: IDL set to null followed by IDL get 
PASS legend.title: IDL set to object "test-toString" should not throw 
PASS legend.title: IDL set to object "test-toString" followed by getAttribute() 
PASS legend.title: IDL set to object "test-toString" followed by IDL get 
PASS legend.title: IDL set to object "test-valueOf" should not throw 
PASS legend.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS legend.title: IDL set to object "test-valueOf" followed by IDL get 
PASS legend.lang: typeof IDL attribute 
PASS legend.lang: IDL get with DOM attribute unset 
PASS legend.lang: setAttribute() to "" followed by getAttribute() 
PASS legend.lang: setAttribute() to "" followed by IDL get 
PASS legend.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS legend.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS legend.lang: setAttribute() to undefined followed by getAttribute() 
PASS legend.lang: setAttribute() to undefined followed by IDL get 
PASS legend.lang: setAttribute() to 7 followed by getAttribute() 
PASS legend.lang: setAttribute() to 7 followed by IDL get 
PASS legend.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS legend.lang: setAttribute() to 1.5 followed by IDL get 
PASS legend.lang: setAttribute() to true followed by getAttribute() 
PASS legend.lang: setAttribute() to true followed by IDL get 
PASS legend.lang: setAttribute() to false followed by getAttribute() 
PASS legend.lang: setAttribute() to false followed by IDL get 
PASS legend.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS legend.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS legend.lang: setAttribute() to NaN followed by getAttribute() 
PASS legend.lang: setAttribute() to NaN followed by IDL get 
PASS legend.lang: setAttribute() to Infinity followed by getAttribute() 
PASS legend.lang: setAttribute() to Infinity followed by IDL get 
PASS legend.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS legend.lang: setAttribute() to -Infinity followed by IDL get 
PASS legend.lang: setAttribute() to "\0" followed by getAttribute() 
PASS legend.lang: setAttribute() to "\0" followed by IDL get 
PASS legend.lang: setAttribute() to null followed by getAttribute() 
PASS legend.lang: setAttribute() to null followed by IDL get 
PASS legend.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS legend.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS legend.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS legend.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS legend.lang: IDL set to "" should not throw 
PASS legend.lang: IDL set to "" followed by getAttribute() 
PASS legend.lang: IDL set to "" followed by IDL get 
PASS legend.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS legend.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS legend.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS legend.lang: IDL set to undefined should not throw 
PASS legend.lang: IDL set to undefined followed by getAttribute() 
PASS legend.lang: IDL set to undefined followed by IDL get 
PASS legend.lang: IDL set to 7 should not throw 
PASS legend.lang: IDL set to 7 followed by getAttribute() 
PASS legend.lang: IDL set to 7 followed by IDL get 
PASS legend.lang: IDL set to 1.5 should not throw 
PASS legend.lang: IDL set to 1.5 followed by getAttribute() 
PASS legend.lang: IDL set to 1.5 followed by IDL get 
PASS legend.lang: IDL set to true should not throw 
PASS legend.lang: IDL set to true followed by getAttribute() 
PASS legend.lang: IDL set to true followed by IDL get 
PASS legend.lang: IDL set to false should not throw 
PASS legend.lang: IDL set to false followed by getAttribute() 
PASS legend.lang: IDL set to false followed by IDL get 
PASS legend.lang: IDL set to object "[object Object]" should not throw 
PASS legend.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS legend.lang: IDL set to object "[object Object]" followed by IDL get 
PASS legend.lang: IDL set to NaN should not throw 
PASS legend.lang: IDL set to NaN followed by getAttribute() 
PASS legend.lang: IDL set to NaN followed by IDL get 
PASS legend.lang: IDL set to Infinity should not throw 
PASS legend.lang: IDL set to Infinity followed by getAttribute() 
PASS legend.lang: IDL set to Infinity followed by IDL get 
PASS legend.lang: IDL set to -Infinity should not throw 
PASS legend.lang: IDL set to -Infinity followed by getAttribute() 
PASS legend.lang: IDL set to -Infinity followed by IDL get 
PASS legend.lang: IDL set to "\0" should not throw 
PASS legend.lang: IDL set to "\0" followed by getAttribute() 
PASS legend.lang: IDL set to "\0" followed by IDL get 
PASS legend.lang: IDL set to null should not throw 
PASS legend.lang: IDL set to null followed by getAttribute() 
PASS legend.lang: IDL set to null followed by IDL get 
PASS legend.lang: IDL set to object "test-toString" should not throw 
PASS legend.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS legend.lang: IDL set to object "test-toString" followed by IDL get 
PASS legend.lang: IDL set to object "test-valueOf" should not throw 
PASS legend.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS legend.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS legend.dir: typeof IDL attribute 
PASS legend.dir: IDL get with DOM attribute unset 
PASS legend.dir: setAttribute() to "" followed by getAttribute() 
PASS legend.dir: setAttribute() to "" followed by IDL get 
PASS legend.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS legend.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS legend.dir: setAttribute() to undefined followed by getAttribute() 
PASS legend.dir: setAttribute() to undefined followed by IDL get 
PASS legend.dir: setAttribute() to 7 followed by getAttribute() 
PASS legend.dir: setAttribute() to 7 followed by IDL get 
PASS legend.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS legend.dir: setAttribute() to 1.5 followed by IDL get 
PASS legend.dir: setAttribute() to true followed by getAttribute() 
PASS legend.dir: setAttribute() to true followed by IDL get 
PASS legend.dir: setAttribute() to false followed by getAttribute() 
PASS legend.dir: setAttribute() to false followed by IDL get 
PASS legend.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS legend.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS legend.dir: setAttribute() to NaN followed by getAttribute() 
PASS legend.dir: setAttribute() to NaN followed by IDL get 
PASS legend.dir: setAttribute() to Infinity followed by getAttribute() 
PASS legend.dir: setAttribute() to Infinity followed by IDL get 
PASS legend.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS legend.dir: setAttribute() to -Infinity followed by IDL get 
PASS legend.dir: setAttribute() to "\0" followed by getAttribute() 
PASS legend.dir: setAttribute() to "\0" followed by IDL get 
PASS legend.dir: setAttribute() to null followed by getAttribute() 
PASS legend.dir: setAttribute() to null followed by IDL get 
PASS legend.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS legend.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS legend.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS legend.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS legend.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS legend.dir: setAttribute() to "ltr" followed by IDL get 
PASS legend.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS legend.dir: setAttribute() to "xltr" followed by IDL get 
PASS legend.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS legend.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS legend.dir: setAttribute() to "tr" followed by getAttribute() 
PASS legend.dir: setAttribute() to "tr" followed by IDL get 
PASS legend.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS legend.dir: setAttribute() to "LTR" followed by IDL get 
PASS legend.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS legend.dir: setAttribute() to "rtl" followed by IDL get 
PASS legend.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS legend.dir: setAttribute() to "xrtl" followed by IDL get 
PASS legend.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS legend.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS legend.dir: setAttribute() to "tl" followed by getAttribute() 
PASS legend.dir: setAttribute() to "tl" followed by IDL get 
PASS legend.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS legend.dir: setAttribute() to "RTL" followed by IDL get 
PASS legend.dir: setAttribute() to "auto" followed by getAttribute() 
PASS legend.dir: setAttribute() to "auto" followed by IDL get 
PASS legend.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS legend.dir: setAttribute() to "xauto" followed by IDL get 
PASS legend.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS legend.dir: setAttribute() to "auto\0" followed by IDL get 
PASS legend.dir: setAttribute() to "uto" followed by getAttribute() 
PASS legend.dir: setAttribute() to "uto" followed by IDL get 
PASS legend.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS legend.dir: setAttribute() to "AUTO" followed by IDL get 
PASS legend.dir: IDL set to "" should not throw 
PASS legend.dir: IDL set to "" followed by getAttribute() 
PASS legend.dir: IDL set to "" followed by IDL get 
PASS legend.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS legend.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS legend.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS legend.dir: IDL set to undefined should not throw 
PASS legend.dir: IDL set to undefined followed by getAttribute() 
PASS legend.dir: IDL set to undefined followed by IDL get 
PASS legend.dir: IDL set to 7 should not throw 
PASS legend.dir: IDL set to 7 followed by getAttribute() 
PASS legend.dir: IDL set to 7 followed by IDL get 
PASS legend.dir: IDL set to 1.5 should not throw 
PASS legend.dir: IDL set to 1.5 followed by getAttribute() 
PASS legend.dir: IDL set to 1.5 followed by IDL get 
PASS legend.dir: IDL set to true should not throw 
PASS legend.dir: IDL set to true followed by getAttribute() 
PASS legend.dir: IDL set to true followed by IDL get 
PASS legend.dir: IDL set to false should not throw 
PASS legend.dir: IDL set to false followed by getAttribute() 
PASS legend.dir: IDL set to false followed by IDL get 
PASS legend.dir: IDL set to object "[object Object]" should not throw 
PASS legend.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS legend.dir: IDL set to object "[object Object]" followed by IDL get 
PASS legend.dir: IDL set to NaN should not throw 
PASS legend.dir: IDL set to NaN followed by getAttribute() 
PASS legend.dir: IDL set to NaN followed by IDL get 
PASS legend.dir: IDL set to Infinity should not throw 
PASS legend.dir: IDL set to Infinity followed by getAttribute() 
PASS legend.dir: IDL set to Infinity followed by IDL get 
PASS legend.dir: IDL set to -Infinity should not throw 
PASS legend.dir: IDL set to -Infinity followed by getAttribute() 
PASS legend.dir: IDL set to -Infinity followed by IDL get 
PASS legend.dir: IDL set to "\0" should not throw 
PASS legend.dir: IDL set to "\0" followed by getAttribute() 
PASS legend.dir: IDL set to "\0" followed by IDL get 
PASS legend.dir: IDL set to null should not throw 
PASS legend.dir: IDL set to null followed by IDL get 
PASS legend.dir: IDL set to object "test-toString" should not throw 
PASS legend.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS legend.dir: IDL set to object "test-toString" followed by IDL get 
PASS legend.dir: IDL set to object "test-valueOf" should not throw 
PASS legend.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS legend.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS legend.dir: IDL set to "ltr" should not throw 
PASS legend.dir: IDL set to "ltr" followed by getAttribute() 
PASS legend.dir: IDL set to "ltr" followed by IDL get 
PASS legend.dir: IDL set to "xltr" should not throw 
PASS legend.dir: IDL set to "xltr" followed by getAttribute() 
PASS legend.dir: IDL set to "xltr" followed by IDL get 
PASS legend.dir: IDL set to "ltr\0" should not throw 
PASS legend.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS legend.dir: IDL set to "ltr\0" followed by IDL get 
PASS legend.dir: IDL set to "tr" should not throw 
PASS legend.dir: IDL set to "tr" followed by getAttribute() 
PASS legend.dir: IDL set to "tr" followed by IDL get 
PASS legend.dir: IDL set to "LTR" should not throw 
PASS legend.dir: IDL set to "LTR" followed by getAttribute() 
PASS legend.dir: IDL set to "LTR" followed by IDL get 
PASS legend.dir: IDL set to "rtl" should not throw 
PASS legend.dir: IDL set to "rtl" followed by getAttribute() 
PASS legend.dir: IDL set to "rtl" followed by IDL get 
PASS legend.dir: IDL set to "xrtl" should not throw 
PASS legend.dir: IDL set to "xrtl" followed by getAttribute() 
PASS legend.dir: IDL set to "xrtl" followed by IDL get 
PASS legend.dir: IDL set to "rtl\0" should not throw 
PASS legend.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS legend.dir: IDL set to "rtl\0" followed by IDL get 
PASS legend.dir: IDL set to "tl" should not throw 
PASS legend.dir: IDL set to "tl" followed by getAttribute() 
PASS legend.dir: IDL set to "tl" followed by IDL get 
PASS legend.dir: IDL set to "RTL" should not throw 
PASS legend.dir: IDL set to "RTL" followed by getAttribute() 
PASS legend.dir: IDL set to "RTL" followed by IDL get 
PASS legend.dir: IDL set to "auto" should not throw 
PASS legend.dir: IDL set to "auto" followed by getAttribute() 
PASS legend.dir: IDL set to "auto" followed by IDL get 
PASS legend.dir: IDL set to "xauto" should not throw 
PASS legend.dir: IDL set to "xauto" followed by getAttribute() 
PASS legend.dir: IDL set to "xauto" followed by IDL get 
PASS legend.dir: IDL set to "auto\0" should not throw 
PASS legend.dir: IDL set to "auto\0" followed by getAttribute() 
PASS legend.dir: IDL set to "auto\0" followed by IDL get 
PASS legend.dir: IDL set to "uto" should not throw 
PASS legend.dir: IDL set to "uto" followed by getAttribute() 
PASS legend.dir: IDL set to "uto" followed by IDL get 
PASS legend.dir: IDL set to "AUTO" should not throw 
PASS legend.dir: IDL set to "AUTO" followed by getAttribute() 
PASS legend.dir: IDL set to "AUTO" followed by IDL get 
PASS legend.className (<legend class>): typeof IDL attribute 
PASS legend.className (<legend class>): IDL get with DOM attribute unset 
PASS legend.className (<legend class>): setAttribute() to "" followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to "" followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to undefined followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to undefined followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to 7 followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to 7 followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to 1.5 followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to 1.5 followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to true followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to true followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to false followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to false followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to NaN followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to NaN followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to Infinity followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to Infinity followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to -Infinity followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to -Infinity followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to "\0" followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to "\0" followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to null followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to null followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to object "test-toString" followed by IDL get 
PASS legend.className (<legend class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS legend.className (<legend class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS legend.className (<legend class>): IDL set to "" should not throw 
PASS legend.className (<legend class>): IDL set to "" followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to "" followed by IDL get 
PASS legend.className (<legend class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS legend.className (<legend class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS legend.className (<legend class>): IDL set to undefined should not throw 
PASS legend.className (<legend class>): IDL set to undefined followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to undefined followed by IDL get 
PASS legend.className (<legend class>): IDL set to 7 should not throw 
PASS legend.className (<legend class>): IDL set to 7 followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to 7 followed by IDL get 
PASS legend.className (<legend class>): IDL set to 1.5 should not throw 
PASS legend.className (<legend class>): IDL set to 1.5 followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to 1.5 followed by IDL get 
PASS legend.className (<legend class>): IDL set to true should not throw 
PASS legend.className (<legend class>): IDL set to true followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to true followed by IDL get 
PASS legend.className (<legend class>): IDL set to false should not throw 
PASS legend.className (<legend class>): IDL set to false followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to false followed by IDL get 
PASS legend.className (<legend class>): IDL set to object "[object Object]" should not throw 
PASS legend.className (<legend class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to object "[object Object]" followed by IDL get 
PASS legend.className (<legend class>): IDL set to NaN should not throw 
PASS legend.className (<legend class>): IDL set to NaN followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to NaN followed by IDL get 
PASS legend.className (<legend class>): IDL set to Infinity should not throw 
PASS legend.className (<legend class>): IDL set to Infinity followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to Infinity followed by IDL get 
PASS legend.className (<legend class>): IDL set to -Infinity should not throw 
PASS legend.className (<legend class>): IDL set to -Infinity followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to -Infinity followed by IDL get 
PASS legend.className (<legend class>): IDL set to "\0" should not throw 
PASS legend.className (<legend class>): IDL set to "\0" followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to "\0" followed by IDL get 
PASS legend.className (<legend class>): IDL set to null should not throw 
PASS legend.className (<legend class>): IDL set to null followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to null followed by IDL get 
PASS legend.className (<legend class>): IDL set to object "test-toString" should not throw 
PASS legend.className (<legend class>): IDL set to object "test-toString" followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to object "test-toString" followed by IDL get 
PASS legend.className (<legend class>): IDL set to object "test-valueOf" should not throw 
PASS legend.className (<legend class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS legend.className (<legend class>): IDL set to object "test-valueOf" followed by IDL get 
PASS legend.hidden: typeof IDL attribute 
PASS legend.hidden: IDL get with DOM attribute unset 
PASS legend.hidden: setAttribute() to "" followed by getAttribute() 
PASS legend.hidden: setAttribute() to "" followed by IDL get 
PASS legend.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS legend.hidden: setAttribute() to " foo " followed by IDL get 
PASS legend.hidden: setAttribute() to undefined followed by getAttribute() 
PASS legend.hidden: setAttribute() to undefined followed by IDL get 
PASS legend.hidden: setAttribute() to null followed by getAttribute() 
PASS legend.hidden: setAttribute() to null followed by IDL get 
PASS legend.hidden: setAttribute() to 7 followed by getAttribute() 
PASS legend.hidden: setAttribute() to 7 followed by IDL get 
PASS legend.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS legend.hidden: setAttribute() to 1.5 followed by IDL get 
PASS legend.hidden: setAttribute() to true followed by getAttribute() 
PASS legend.hidden: setAttribute() to true followed by IDL get 
PASS legend.hidden: setAttribute() to false followed by getAttribute() 
PASS legend.hidden: setAttribute() to false followed by IDL get 
PASS legend.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS legend.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS legend.hidden: setAttribute() to NaN followed by getAttribute() 
PASS legend.hidden: setAttribute() to NaN followed by IDL get 
PASS legend.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS legend.hidden: setAttribute() to Infinity followed by IDL get 
PASS legend.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS legend.hidden: setAttribute() to -Infinity followed by IDL get 
PASS legend.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS legend.hidden: setAttribute() to "\0" followed by IDL get 
PASS legend.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS legend.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS legend.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS legend.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS legend.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS legend.hidden: setAttribute() to "hidden" followed by IDL get 
PASS legend.hidden: IDL set to "" should not throw 
PASS legend.hidden: IDL set to "" followed by hasAttribute() 
PASS legend.hidden: IDL set to "" followed by IDL get 
PASS legend.hidden: IDL set to " foo " should not throw 
PASS legend.hidden: IDL set to " foo " followed by hasAttribute() 
PASS legend.hidden: IDL set to " foo " followed by IDL get 
PASS legend.hidden: IDL set to undefined should not throw 
PASS legend.hidden: IDL set to undefined followed by hasAttribute() 
PASS legend.hidden: IDL set to undefined followed by IDL get 
PASS legend.hidden: IDL set to null should not throw 
PASS legend.hidden: IDL set to null followed by hasAttribute() 
PASS legend.hidden: IDL set to null followed by IDL get 
PASS legend.hidden: IDL set to 7 should not throw 
PASS legend.hidden: IDL set to 7 followed by hasAttribute() 
PASS legend.hidden: IDL set to 7 followed by IDL get 
PASS legend.hidden: IDL set to 1.5 should not throw 
PASS legend.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS legend.hidden: IDL set to 1.5 followed by IDL get 
PASS legend.hidden: IDL set to true should not throw 
PASS legend.hidden: IDL set to true followed by hasAttribute() 
PASS legend.hidden: IDL set to true followed by IDL get 
PASS legend.hidden: IDL set to false should not throw 
PASS legend.hidden: IDL set to false followed by hasAttribute() 
PASS legend.hidden: IDL set to false followed by IDL get 
PASS legend.hidden: IDL set to object "[object Object]" should not throw 
PASS legend.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS legend.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS legend.hidden: IDL set to NaN should not throw 
PASS legend.hidden: IDL set to NaN followed by hasAttribute() 
PASS legend.hidden: IDL set to NaN followed by IDL get 
PASS legend.hidden: IDL set to Infinity should not throw 
PASS legend.hidden: IDL set to Infinity followed by hasAttribute() 
PASS legend.hidden: IDL set to Infinity followed by IDL get 
PASS legend.hidden: IDL set to -Infinity should not throw 
PASS legend.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS legend.hidden: IDL set to -Infinity followed by IDL get 
PASS legend.hidden: IDL set to "\0" should not throw 
PASS legend.hidden: IDL set to "\0" followed by hasAttribute() 
PASS legend.hidden: IDL set to "\0" followed by IDL get 
PASS legend.hidden: IDL set to object "test-toString" should not throw 
PASS legend.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS legend.hidden: IDL set to object "test-toString" followed by IDL get 
PASS legend.hidden: IDL set to object "test-valueOf" should not throw 
PASS legend.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS legend.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS legend.accessKey: typeof IDL attribute 
PASS legend.accessKey: IDL get with DOM attribute unset 
PASS legend.accessKey: setAttribute() to "" followed by getAttribute() 
PASS legend.accessKey: setAttribute() to "" followed by IDL get 
PASS legend.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS legend.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS legend.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS legend.accessKey: setAttribute() to undefined followed by IDL get 
PASS legend.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS legend.accessKey: setAttribute() to 7 followed by IDL get 
PASS legend.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS legend.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS legend.accessKey: setAttribute() to true followed by getAttribute() 
PASS legend.accessKey: setAttribute() to true followed by IDL get 
PASS legend.accessKey: setAttribute() to false followed by getAttribute() 
PASS legend.accessKey: setAttribute() to false followed by IDL get 
PASS legend.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS legend.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS legend.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS legend.accessKey: setAttribute() to NaN followed by IDL get 
PASS legend.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS legend.accessKey: setAttribute() to Infinity followed by IDL get 
PASS legend.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS legend.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS legend.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS legend.accessKey: setAttribute() to "\0" followed by IDL get 
PASS legend.accessKey: setAttribute() to null followed by getAttribute() 
PASS legend.accessKey: setAttribute() to null followed by IDL get 
PASS legend.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS legend.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS legend.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS legend.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS legend.accessKey: IDL set to "" should not throw 
PASS legend.accessKey: IDL set to "" followed by getAttribute() 
PASS legend.accessKey: IDL set to "" followed by IDL get 
PASS legend.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS legend.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS legend.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS legend.accessKey: IDL set to undefined should not throw 
PASS legend.accessKey: IDL set to undefined followed by getAttribute() 
PASS legend.accessKey: IDL set to undefined followed by IDL get 
PASS legend.accessKey: IDL set to 7 should not throw 
PASS legend.accessKey: IDL set to 7 followed by getAttribute() 
PASS legend.accessKey: IDL set to 7 followed by IDL get 
PASS legend.accessKey: IDL set to 1.5 should not throw 
PASS legend.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS legend.accessKey: IDL set to 1.5 followed by IDL get 
PASS legend.accessKey: IDL set to true should not throw 
PASS legend.accessKey: IDL set to true followed by getAttribute() 
PASS legend.accessKey: IDL set to true followed by IDL get 
PASS legend.accessKey: IDL set to false should not throw 
PASS legend.accessKey: IDL set to false followed by getAttribute() 
PASS legend.accessKey: IDL set to false followed by IDL get 
PASS legend.accessKey: IDL set to object "[object Object]" should not throw 
PASS legend.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS legend.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS legend.accessKey: IDL set to NaN should not throw 
PASS legend.accessKey: IDL set to NaN followed by getAttribute() 
PASS legend.accessKey: IDL set to NaN followed by IDL get 
PASS legend.accessKey: IDL set to Infinity should not throw 
PASS legend.accessKey: IDL set to Infinity followed by getAttribute() 
PASS legend.accessKey: IDL set to Infinity followed by IDL get 
PASS legend.accessKey: IDL set to -Infinity should not throw 
PASS legend.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS legend.accessKey: IDL set to -Infinity followed by IDL get 
PASS legend.accessKey: IDL set to "\0" should not throw 
PASS legend.accessKey: IDL set to "\0" followed by getAttribute() 
PASS legend.accessKey: IDL set to "\0" followed by IDL get 
PASS legend.accessKey: IDL set to null should not throw 
PASS legend.accessKey: IDL set to null followed by getAttribute() 
PASS legend.accessKey: IDL set to null followed by IDL get 
PASS legend.accessKey: IDL set to object "test-toString" should not throw 
PASS legend.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS legend.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS legend.accessKey: IDL set to object "test-valueOf" should not throw 
PASS legend.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS legend.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS legend.tabIndex: typeof IDL attribute 
PASS legend.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to -36 followed by IDL get 
PASS legend.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to -1 followed by IDL get 
PASS legend.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to 0 followed by IDL get 
PASS legend.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to 1 followed by IDL get 
PASS legend.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL legend.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS legend.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL legend.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS legend.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS legend.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS legend.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to "0" followed by IDL get 
PASS legend.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to "1" followed by IDL get 
PASS legend.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS legend.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS legend.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS legend.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS legend.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS legend.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS legend.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS legend.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS legend.tabIndex: IDL set to -36 should not throw 
PASS legend.tabIndex: IDL set to -36 followed by getAttribute() 
PASS legend.tabIndex: IDL set to -36 followed by IDL get 
PASS legend.tabIndex: IDL set to -1 should not throw 
PASS legend.tabIndex: IDL set to -1 followed by getAttribute() 
PASS legend.tabIndex: IDL set to -1 followed by IDL get 
PASS legend.tabIndex: IDL set to 0 should not throw 
PASS legend.tabIndex: IDL set to 0 followed by getAttribute() 
PASS legend.tabIndex: IDL set to 0 followed by IDL get 
PASS legend.tabIndex: IDL set to 1 should not throw 
PASS legend.tabIndex: IDL set to 1 followed by getAttribute() 
PASS legend.tabIndex: IDL set to 1 followed by IDL get 
PASS legend.tabIndex: IDL set to 2147483647 should not throw 
PASS legend.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL legend.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS legend.tabIndex: IDL set to -2147483648 should not throw 
PASS legend.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL legend.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS legend.align: typeof IDL attribute 
PASS legend.align: IDL get with DOM attribute unset 
PASS legend.align: setAttribute() to "" followed by getAttribute() 
PASS legend.align: setAttribute() to "" followed by IDL get 
PASS legend.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS legend.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS legend.align: setAttribute() to undefined followed by getAttribute() 
PASS legend.align: setAttribute() to undefined followed by IDL get 
PASS legend.align: setAttribute() to 7 followed by getAttribute() 
PASS legend.align: setAttribute() to 7 followed by IDL get 
PASS legend.align: setAttribute() to 1.5 followed by getAttribute() 
PASS legend.align: setAttribute() to 1.5 followed by IDL get 
PASS legend.align: setAttribute() to true followed by getAttribute() 
PASS legend.align: setAttribute() to true followed by IDL get 
PASS legend.align: setAttribute() to false followed by getAttribute() 
PASS legend.align: setAttribute() to false followed by IDL get 
PASS legend.align: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS legend.align: setAttribute() to object "[object Object]" followed by IDL get 
PASS legend.align: setAttribute() to NaN followed by getAttribute() 
PASS legend.align: setAttribute() to NaN followed by IDL get 
PASS legend.align: setAttribute() to Infinity followed by getAttribute() 
PASS legend.align: setAttribute() to Infinity followed by IDL get 
PASS legend.align: setAttribute() to -Infinity followed by getAttribute() 
PASS legend.align: setAttribute() to -Infinity followed by IDL get 
PASS legend.align: setAttribute() to "\0" followed by getAttribute() 
PASS legend.align: setAttribute() to "\0" followed by IDL get 
PASS legend.align: setAttribute() to null followed by getAttribute() 
PASS legend.align: setAttribute() to null followed by IDL get 
PASS legend.align: setAttribute() to object "test-toString" followed by getAttribute() 
PASS legend.align: setAttribute() to object "test-toString" followed by IDL get 
PASS legend.align: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS legend.align: setAttribute() to object "test-valueOf" followed by IDL get 
PASS legend.align: IDL set to "" should not throw 
PASS legend.align: IDL set to "" followed by getAttribute() 
PASS legend.align: IDL set to "" followed by IDL get 
PASS legend.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS legend.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS legend.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS legend.align: IDL set to undefined should not throw 
PASS legend.align: IDL set to undefined followed by getAttribute() 
PASS legend.align: IDL set to undefined followed by IDL get 
PASS legend.align: IDL set to 7 should not throw 
PASS legend.align: IDL set to 7 followed by getAttribute() 
PASS legend.align: IDL set to 7 followed by IDL get 
PASS legend.align: IDL set to 1.5 should not throw 
PASS legend.align: IDL set to 1.5 followed by getAttribute() 
PASS legend.align: IDL set to 1.5 followed by IDL get 
PASS legend.align: IDL set to true should not throw 
PASS legend.align: IDL set to true followed by getAttribute() 
PASS legend.align: IDL set to true followed by IDL get 
PASS legend.align: IDL set to false should not throw 
PASS legend.align: IDL set to false followed by getAttribute() 
PASS legend.align: IDL set to false followed by IDL get 
PASS legend.align: IDL set to object "[object Object]" should not throw 
PASS legend.align: IDL set to object "[object Object]" followed by getAttribute() 
PASS legend.align: IDL set to object "[object Object]" followed by IDL get 
PASS legend.align: IDL set to NaN should not throw 
PASS legend.align: IDL set to NaN followed by getAttribute() 
PASS legend.align: IDL set to NaN followed by IDL get 
PASS legend.align: IDL set to Infinity should not throw 
PASS legend.align: IDL set to Infinity followed by getAttribute() 
PASS legend.align: IDL set to Infinity followed by IDL get 
PASS legend.align: IDL set to -Infinity should not throw 
PASS legend.align: IDL set to -Infinity followed by getAttribute() 
PASS legend.align: IDL set to -Infinity followed by IDL get 
PASS legend.align: IDL set to "\0" should not throw 
PASS legend.align: IDL set to "\0" followed by getAttribute() 
PASS legend.align: IDL set to "\0" followed by IDL get 
PASS legend.align: IDL set to null should not throw 
PASS legend.align: IDL set to null followed by getAttribute() 
PASS legend.align: IDL set to null followed by IDL get 
PASS legend.align: IDL set to object "test-toString" should not throw 
PASS legend.align: IDL set to object "test-toString" followed by getAttribute() 
PASS legend.align: IDL set to object "test-toString" followed by IDL get 
PASS legend.align: IDL set to object "test-valueOf" should not throw 
PASS legend.align: IDL set to object "test-valueOf" followed by getAttribute() 
PASS legend.align: IDL set to object "test-valueOf" followed by IDL get 
FAIL legend.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL legend.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS legend.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to null followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to true followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to false followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL legend.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS legend.itemScope: IDL set to "" should not throw 
FAIL legend.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL legend.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS legend.itemScope: IDL set to " foo " should not throw 
PASS legend.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL legend.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS legend.itemScope: IDL set to undefined should not throw 
FAIL legend.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL legend.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS legend.itemScope: IDL set to null should not throw 
FAIL legend.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL legend.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS legend.itemScope: IDL set to 7 should not throw 
PASS legend.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL legend.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS legend.itemScope: IDL set to 1.5 should not throw 
PASS legend.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL legend.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS legend.itemScope: IDL set to true should not throw 
PASS legend.itemScope: IDL set to true followed by hasAttribute() 
PASS legend.itemScope: IDL set to true followed by IDL get 
PASS legend.itemScope: IDL set to false should not throw 
FAIL legend.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS legend.itemScope: IDL set to false followed by IDL get 
PASS legend.itemScope: IDL set to object "[object Object]" should not throw 
PASS legend.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL legend.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS legend.itemScope: IDL set to NaN should not throw 
FAIL legend.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL legend.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS legend.itemScope: IDL set to Infinity should not throw 
PASS legend.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL legend.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS legend.itemScope: IDL set to -Infinity should not throw 
PASS legend.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL legend.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS legend.itemScope: IDL set to "\0" should not throw 
PASS legend.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL legend.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS legend.itemScope: IDL set to object "test-toString" should not throw 
PASS legend.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL legend.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS legend.itemScope: IDL set to object "test-valueOf" should not throw 
PASS legend.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL legend.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL legend.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL legend.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS legend.itemId: setAttribute() to "" followed by getAttribute() 
FAIL legend.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS legend.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL legend.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS legend.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL legend.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS legend.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL legend.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS legend.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL legend.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS legend.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL legend.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS legend.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL legend.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS legend.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL legend.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS legend.itemId: setAttribute() to true followed by getAttribute() 
FAIL legend.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS legend.itemId: setAttribute() to false followed by getAttribute() 
FAIL legend.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS legend.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL legend.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS legend.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL legend.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS legend.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL legend.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS legend.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL legend.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS legend.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL legend.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS legend.itemId: setAttribute() to null followed by getAttribute() 
FAIL legend.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS legend.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL legend.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS legend.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL legend.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS legend.itemId: IDL set to "" should not throw 
FAIL legend.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL legend.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS legend.itemId: IDL set to " foo " should not throw 
FAIL legend.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL legend.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS legend.itemId: IDL set to "http://site.example/" should not throw 
FAIL legend.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS legend.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS legend.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL legend.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL legend.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS legend.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL legend.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL legend.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS legend.itemId: IDL set to undefined should not throw 
FAIL legend.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL legend.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS legend.itemId: IDL set to 7 should not throw 
FAIL legend.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL legend.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS legend.itemId: IDL set to 1.5 should not throw 
FAIL legend.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL legend.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS legend.itemId: IDL set to true should not throw 
FAIL legend.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL legend.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS legend.itemId: IDL set to false should not throw 
FAIL legend.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL legend.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS legend.itemId: IDL set to object "[object Object]" should not throw 
FAIL legend.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL legend.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS legend.itemId: IDL set to NaN should not throw 
FAIL legend.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL legend.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS legend.itemId: IDL set to Infinity should not throw 
FAIL legend.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL legend.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS legend.itemId: IDL set to -Infinity should not throw 
FAIL legend.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL legend.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS legend.itemId: IDL set to "\0" should not throw 
FAIL legend.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL legend.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS legend.itemId: IDL set to null should not throw 
FAIL legend.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL legend.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS legend.itemId: IDL set to object "test-toString" should not throw 
FAIL legend.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL legend.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS legend.itemId: IDL set to object "test-valueOf" should not throw 
PASS legend.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL legend.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS label.title: typeof IDL attribute 
PASS label.title: IDL get with DOM attribute unset 
PASS label.title: setAttribute() to "" followed by getAttribute() 
PASS label.title: setAttribute() to "" followed by IDL get 
PASS label.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS label.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS label.title: setAttribute() to undefined followed by getAttribute() 
PASS label.title: setAttribute() to undefined followed by IDL get 
PASS label.title: setAttribute() to 7 followed by getAttribute() 
PASS label.title: setAttribute() to 7 followed by IDL get 
PASS label.title: setAttribute() to 1.5 followed by getAttribute() 
PASS label.title: setAttribute() to 1.5 followed by IDL get 
PASS label.title: setAttribute() to true followed by getAttribute() 
PASS label.title: setAttribute() to true followed by IDL get 
PASS label.title: setAttribute() to false followed by getAttribute() 
PASS label.title: setAttribute() to false followed by IDL get 
PASS label.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS label.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS label.title: setAttribute() to NaN followed by getAttribute() 
PASS label.title: setAttribute() to NaN followed by IDL get 
PASS label.title: setAttribute() to Infinity followed by getAttribute() 
PASS label.title: setAttribute() to Infinity followed by IDL get 
PASS label.title: setAttribute() to -Infinity followed by getAttribute() 
PASS label.title: setAttribute() to -Infinity followed by IDL get 
PASS label.title: setAttribute() to "\0" followed by getAttribute() 
PASS label.title: setAttribute() to "\0" followed by IDL get 
PASS label.title: setAttribute() to null followed by getAttribute() 
PASS label.title: setAttribute() to null followed by IDL get 
PASS label.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS label.title: setAttribute() to object "test-toString" followed by IDL get 
PASS label.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS label.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS label.title: IDL set to "" should not throw 
PASS label.title: IDL set to "" followed by getAttribute() 
PASS label.title: IDL set to "" followed by IDL get 
PASS label.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS label.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS label.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS label.title: IDL set to undefined should not throw 
PASS label.title: IDL set to undefined followed by getAttribute() 
PASS label.title: IDL set to undefined followed by IDL get 
PASS label.title: IDL set to 7 should not throw 
PASS label.title: IDL set to 7 followed by getAttribute() 
PASS label.title: IDL set to 7 followed by IDL get 
PASS label.title: IDL set to 1.5 should not throw 
PASS label.title: IDL set to 1.5 followed by getAttribute() 
PASS label.title: IDL set to 1.5 followed by IDL get 
PASS label.title: IDL set to true should not throw 
PASS label.title: IDL set to true followed by getAttribute() 
PASS label.title: IDL set to true followed by IDL get 
PASS label.title: IDL set to false should not throw 
PASS label.title: IDL set to false followed by getAttribute() 
PASS label.title: IDL set to false followed by IDL get 
PASS label.title: IDL set to object "[object Object]" should not throw 
PASS label.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS label.title: IDL set to object "[object Object]" followed by IDL get 
PASS label.title: IDL set to NaN should not throw 
PASS label.title: IDL set to NaN followed by getAttribute() 
PASS label.title: IDL set to NaN followed by IDL get 
PASS label.title: IDL set to Infinity should not throw 
PASS label.title: IDL set to Infinity followed by getAttribute() 
PASS label.title: IDL set to Infinity followed by IDL get 
PASS label.title: IDL set to -Infinity should not throw 
PASS label.title: IDL set to -Infinity followed by getAttribute() 
PASS label.title: IDL set to -Infinity followed by IDL get 
PASS label.title: IDL set to "\0" should not throw 
PASS label.title: IDL set to "\0" followed by getAttribute() 
PASS label.title: IDL set to "\0" followed by IDL get 
PASS label.title: IDL set to null should not throw 
PASS label.title: IDL set to null followed by getAttribute() 
PASS label.title: IDL set to null followed by IDL get 
PASS label.title: IDL set to object "test-toString" should not throw 
PASS label.title: IDL set to object "test-toString" followed by getAttribute() 
PASS label.title: IDL set to object "test-toString" followed by IDL get 
PASS label.title: IDL set to object "test-valueOf" should not throw 
PASS label.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS label.title: IDL set to object "test-valueOf" followed by IDL get 
PASS label.lang: typeof IDL attribute 
PASS label.lang: IDL get with DOM attribute unset 
PASS label.lang: setAttribute() to "" followed by getAttribute() 
PASS label.lang: setAttribute() to "" followed by IDL get 
PASS label.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS label.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS label.lang: setAttribute() to undefined followed by getAttribute() 
PASS label.lang: setAttribute() to undefined followed by IDL get 
PASS label.lang: setAttribute() to 7 followed by getAttribute() 
PASS label.lang: setAttribute() to 7 followed by IDL get 
PASS label.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS label.lang: setAttribute() to 1.5 followed by IDL get 
PASS label.lang: setAttribute() to true followed by getAttribute() 
PASS label.lang: setAttribute() to true followed by IDL get 
PASS label.lang: setAttribute() to false followed by getAttribute() 
PASS label.lang: setAttribute() to false followed by IDL get 
PASS label.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS label.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS label.lang: setAttribute() to NaN followed by getAttribute() 
PASS label.lang: setAttribute() to NaN followed by IDL get 
PASS label.lang: setAttribute() to Infinity followed by getAttribute() 
PASS label.lang: setAttribute() to Infinity followed by IDL get 
PASS label.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS label.lang: setAttribute() to -Infinity followed by IDL get 
PASS label.lang: setAttribute() to "\0" followed by getAttribute() 
PASS label.lang: setAttribute() to "\0" followed by IDL get 
PASS label.lang: setAttribute() to null followed by getAttribute() 
PASS label.lang: setAttribute() to null followed by IDL get 
PASS label.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS label.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS label.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS label.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS label.lang: IDL set to "" should not throw 
PASS label.lang: IDL set to "" followed by getAttribute() 
PASS label.lang: IDL set to "" followed by IDL get 
PASS label.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS label.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS label.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS label.lang: IDL set to undefined should not throw 
PASS label.lang: IDL set to undefined followed by getAttribute() 
PASS label.lang: IDL set to undefined followed by IDL get 
PASS label.lang: IDL set to 7 should not throw 
PASS label.lang: IDL set to 7 followed by getAttribute() 
PASS label.lang: IDL set to 7 followed by IDL get 
PASS label.lang: IDL set to 1.5 should not throw 
PASS label.lang: IDL set to 1.5 followed by getAttribute() 
PASS label.lang: IDL set to 1.5 followed by IDL get 
PASS label.lang: IDL set to true should not throw 
PASS label.lang: IDL set to true followed by getAttribute() 
PASS label.lang: IDL set to true followed by IDL get 
PASS label.lang: IDL set to false should not throw 
PASS label.lang: IDL set to false followed by getAttribute() 
PASS label.lang: IDL set to false followed by IDL get 
PASS label.lang: IDL set to object "[object Object]" should not throw 
PASS label.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS label.lang: IDL set to object "[object Object]" followed by IDL get 
PASS label.lang: IDL set to NaN should not throw 
PASS label.lang: IDL set to NaN followed by getAttribute() 
PASS label.lang: IDL set to NaN followed by IDL get 
PASS label.lang: IDL set to Infinity should not throw 
PASS label.lang: IDL set to Infinity followed by getAttribute() 
PASS label.lang: IDL set to Infinity followed by IDL get 
PASS label.lang: IDL set to -Infinity should not throw 
PASS label.lang: IDL set to -Infinity followed by getAttribute() 
PASS label.lang: IDL set to -Infinity followed by IDL get 
PASS label.lang: IDL set to "\0" should not throw 
PASS label.lang: IDL set to "\0" followed by getAttribute() 
PASS label.lang: IDL set to "\0" followed by IDL get 
PASS label.lang: IDL set to null should not throw 
PASS label.lang: IDL set to null followed by getAttribute() 
PASS label.lang: IDL set to null followed by IDL get 
PASS label.lang: IDL set to object "test-toString" should not throw 
PASS label.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS label.lang: IDL set to object "test-toString" followed by IDL get 
PASS label.lang: IDL set to object "test-valueOf" should not throw 
PASS label.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS label.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS label.dir: typeof IDL attribute 
PASS label.dir: IDL get with DOM attribute unset 
PASS label.dir: setAttribute() to "" followed by getAttribute() 
PASS label.dir: setAttribute() to "" followed by IDL get 
PASS label.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS label.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS label.dir: setAttribute() to undefined followed by getAttribute() 
PASS label.dir: setAttribute() to undefined followed by IDL get 
PASS label.dir: setAttribute() to 7 followed by getAttribute() 
PASS label.dir: setAttribute() to 7 followed by IDL get 
PASS label.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS label.dir: setAttribute() to 1.5 followed by IDL get 
PASS label.dir: setAttribute() to true followed by getAttribute() 
PASS label.dir: setAttribute() to true followed by IDL get 
PASS label.dir: setAttribute() to false followed by getAttribute() 
PASS label.dir: setAttribute() to false followed by IDL get 
PASS label.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS label.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS label.dir: setAttribute() to NaN followed by getAttribute() 
PASS label.dir: setAttribute() to NaN followed by IDL get 
PASS label.dir: setAttribute() to Infinity followed by getAttribute() 
PASS label.dir: setAttribute() to Infinity followed by IDL get 
PASS label.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS label.dir: setAttribute() to -Infinity followed by IDL get 
PASS label.dir: setAttribute() to "\0" followed by getAttribute() 
PASS label.dir: setAttribute() to "\0" followed by IDL get 
PASS label.dir: setAttribute() to null followed by getAttribute() 
PASS label.dir: setAttribute() to null followed by IDL get 
PASS label.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS label.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS label.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS label.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS label.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS label.dir: setAttribute() to "ltr" followed by IDL get 
PASS label.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS label.dir: setAttribute() to "xltr" followed by IDL get 
PASS label.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS label.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS label.dir: setAttribute() to "tr" followed by getAttribute() 
PASS label.dir: setAttribute() to "tr" followed by IDL get 
PASS label.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS label.dir: setAttribute() to "LTR" followed by IDL get 
PASS label.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS label.dir: setAttribute() to "rtl" followed by IDL get 
PASS label.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS label.dir: setAttribute() to "xrtl" followed by IDL get 
PASS label.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS label.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS label.dir: setAttribute() to "tl" followed by getAttribute() 
PASS label.dir: setAttribute() to "tl" followed by IDL get 
PASS label.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS label.dir: setAttribute() to "RTL" followed by IDL get 
PASS label.dir: setAttribute() to "auto" followed by getAttribute() 
PASS label.dir: setAttribute() to "auto" followed by IDL get 
PASS label.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS label.dir: setAttribute() to "xauto" followed by IDL get 
PASS label.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS label.dir: setAttribute() to "auto\0" followed by IDL get 
PASS label.dir: setAttribute() to "uto" followed by getAttribute() 
PASS label.dir: setAttribute() to "uto" followed by IDL get 
PASS label.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS label.dir: setAttribute() to "AUTO" followed by IDL get 
PASS label.dir: IDL set to "" should not throw 
PASS label.dir: IDL set to "" followed by getAttribute() 
PASS label.dir: IDL set to "" followed by IDL get 
PASS label.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS label.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS label.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS label.dir: IDL set to undefined should not throw 
PASS label.dir: IDL set to undefined followed by getAttribute() 
PASS label.dir: IDL set to undefined followed by IDL get 
PASS label.dir: IDL set to 7 should not throw 
PASS label.dir: IDL set to 7 followed by getAttribute() 
PASS label.dir: IDL set to 7 followed by IDL get 
PASS label.dir: IDL set to 1.5 should not throw 
PASS label.dir: IDL set to 1.5 followed by getAttribute() 
PASS label.dir: IDL set to 1.5 followed by IDL get 
PASS label.dir: IDL set to true should not throw 
PASS label.dir: IDL set to true followed by getAttribute() 
PASS label.dir: IDL set to true followed by IDL get 
PASS label.dir: IDL set to false should not throw 
PASS label.dir: IDL set to false followed by getAttribute() 
PASS label.dir: IDL set to false followed by IDL get 
PASS label.dir: IDL set to object "[object Object]" should not throw 
PASS label.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS label.dir: IDL set to object "[object Object]" followed by IDL get 
PASS label.dir: IDL set to NaN should not throw 
PASS label.dir: IDL set to NaN followed by getAttribute() 
PASS label.dir: IDL set to NaN followed by IDL get 
PASS label.dir: IDL set to Infinity should not throw 
PASS label.dir: IDL set to Infinity followed by getAttribute() 
PASS label.dir: IDL set to Infinity followed by IDL get 
PASS label.dir: IDL set to -Infinity should not throw 
PASS label.dir: IDL set to -Infinity followed by getAttribute() 
PASS label.dir: IDL set to -Infinity followed by IDL get 
PASS label.dir: IDL set to "\0" should not throw 
PASS label.dir: IDL set to "\0" followed by getAttribute() 
PASS label.dir: IDL set to "\0" followed by IDL get 
PASS label.dir: IDL set to null should not throw 
PASS label.dir: IDL set to null followed by IDL get 
PASS label.dir: IDL set to object "test-toString" should not throw 
PASS label.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS label.dir: IDL set to object "test-toString" followed by IDL get 
PASS label.dir: IDL set to object "test-valueOf" should not throw 
PASS label.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS label.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS label.dir: IDL set to "ltr" should not throw 
PASS label.dir: IDL set to "ltr" followed by getAttribute() 
PASS label.dir: IDL set to "ltr" followed by IDL get 
PASS label.dir: IDL set to "xltr" should not throw 
PASS label.dir: IDL set to "xltr" followed by getAttribute() 
PASS label.dir: IDL set to "xltr" followed by IDL get 
PASS label.dir: IDL set to "ltr\0" should not throw 
PASS label.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS label.dir: IDL set to "ltr\0" followed by IDL get 
PASS label.dir: IDL set to "tr" should not throw 
PASS label.dir: IDL set to "tr" followed by getAttribute() 
PASS label.dir: IDL set to "tr" followed by IDL get 
PASS label.dir: IDL set to "LTR" should not throw 
PASS label.dir: IDL set to "LTR" followed by getAttribute() 
PASS label.dir: IDL set to "LTR" followed by IDL get 
PASS label.dir: IDL set to "rtl" should not throw 
PASS label.dir: IDL set to "rtl" followed by getAttribute() 
PASS label.dir: IDL set to "rtl" followed by IDL get 
PASS label.dir: IDL set to "xrtl" should not throw 
PASS label.dir: IDL set to "xrtl" followed by getAttribute() 
PASS label.dir: IDL set to "xrtl" followed by IDL get 
PASS label.dir: IDL set to "rtl\0" should not throw 
PASS label.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS label.dir: IDL set to "rtl\0" followed by IDL get 
PASS label.dir: IDL set to "tl" should not throw 
PASS label.dir: IDL set to "tl" followed by getAttribute() 
PASS label.dir: IDL set to "tl" followed by IDL get 
PASS label.dir: IDL set to "RTL" should not throw 
PASS label.dir: IDL set to "RTL" followed by getAttribute() 
PASS label.dir: IDL set to "RTL" followed by IDL get 
PASS label.dir: IDL set to "auto" should not throw 
PASS label.dir: IDL set to "auto" followed by getAttribute() 
PASS label.dir: IDL set to "auto" followed by IDL get 
PASS label.dir: IDL set to "xauto" should not throw 
PASS label.dir: IDL set to "xauto" followed by getAttribute() 
PASS label.dir: IDL set to "xauto" followed by IDL get 
PASS label.dir: IDL set to "auto\0" should not throw 
PASS label.dir: IDL set to "auto\0" followed by getAttribute() 
PASS label.dir: IDL set to "auto\0" followed by IDL get 
PASS label.dir: IDL set to "uto" should not throw 
PASS label.dir: IDL set to "uto" followed by getAttribute() 
PASS label.dir: IDL set to "uto" followed by IDL get 
PASS label.dir: IDL set to "AUTO" should not throw 
PASS label.dir: IDL set to "AUTO" followed by getAttribute() 
PASS label.dir: IDL set to "AUTO" followed by IDL get 
PASS label.className (<label class>): typeof IDL attribute 
PASS label.className (<label class>): IDL get with DOM attribute unset 
PASS label.className (<label class>): setAttribute() to "" followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to "" followed by IDL get 
PASS label.className (<label class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS label.className (<label class>): setAttribute() to undefined followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to undefined followed by IDL get 
PASS label.className (<label class>): setAttribute() to 7 followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to 7 followed by IDL get 
PASS label.className (<label class>): setAttribute() to 1.5 followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to 1.5 followed by IDL get 
PASS label.className (<label class>): setAttribute() to true followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to true followed by IDL get 
PASS label.className (<label class>): setAttribute() to false followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to false followed by IDL get 
PASS label.className (<label class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS label.className (<label class>): setAttribute() to NaN followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to NaN followed by IDL get 
PASS label.className (<label class>): setAttribute() to Infinity followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to Infinity followed by IDL get 
PASS label.className (<label class>): setAttribute() to -Infinity followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to -Infinity followed by IDL get 
PASS label.className (<label class>): setAttribute() to "\0" followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to "\0" followed by IDL get 
PASS label.className (<label class>): setAttribute() to null followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to null followed by IDL get 
PASS label.className (<label class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to object "test-toString" followed by IDL get 
PASS label.className (<label class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS label.className (<label class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS label.className (<label class>): IDL set to "" should not throw 
PASS label.className (<label class>): IDL set to "" followed by getAttribute() 
PASS label.className (<label class>): IDL set to "" followed by IDL get 
PASS label.className (<label class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS label.className (<label class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS label.className (<label class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS label.className (<label class>): IDL set to undefined should not throw 
PASS label.className (<label class>): IDL set to undefined followed by getAttribute() 
PASS label.className (<label class>): IDL set to undefined followed by IDL get 
PASS label.className (<label class>): IDL set to 7 should not throw 
PASS label.className (<label class>): IDL set to 7 followed by getAttribute() 
PASS label.className (<label class>): IDL set to 7 followed by IDL get 
PASS label.className (<label class>): IDL set to 1.5 should not throw 
PASS label.className (<label class>): IDL set to 1.5 followed by getAttribute() 
PASS label.className (<label class>): IDL set to 1.5 followed by IDL get 
PASS label.className (<label class>): IDL set to true should not throw 
PASS label.className (<label class>): IDL set to true followed by getAttribute() 
PASS label.className (<label class>): IDL set to true followed by IDL get 
PASS label.className (<label class>): IDL set to false should not throw 
PASS label.className (<label class>): IDL set to false followed by getAttribute() 
PASS label.className (<label class>): IDL set to false followed by IDL get 
PASS label.className (<label class>): IDL set to object "[object Object]" should not throw 
PASS label.className (<label class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS label.className (<label class>): IDL set to object "[object Object]" followed by IDL get 
PASS label.className (<label class>): IDL set to NaN should not throw 
PASS label.className (<label class>): IDL set to NaN followed by getAttribute() 
PASS label.className (<label class>): IDL set to NaN followed by IDL get 
PASS label.className (<label class>): IDL set to Infinity should not throw 
PASS label.className (<label class>): IDL set to Infinity followed by getAttribute() 
PASS label.className (<label class>): IDL set to Infinity followed by IDL get 
PASS label.className (<label class>): IDL set to -Infinity should not throw 
PASS label.className (<label class>): IDL set to -Infinity followed by getAttribute() 
PASS label.className (<label class>): IDL set to -Infinity followed by IDL get 
PASS label.className (<label class>): IDL set to "\0" should not throw 
PASS label.className (<label class>): IDL set to "\0" followed by getAttribute() 
PASS label.className (<label class>): IDL set to "\0" followed by IDL get 
PASS label.className (<label class>): IDL set to null should not throw 
PASS label.className (<label class>): IDL set to null followed by getAttribute() 
PASS label.className (<label class>): IDL set to null followed by IDL get 
PASS label.className (<label class>): IDL set to object "test-toString" should not throw 
PASS label.className (<label class>): IDL set to object "test-toString" followed by getAttribute() 
PASS label.className (<label class>): IDL set to object "test-toString" followed by IDL get 
PASS label.className (<label class>): IDL set to object "test-valueOf" should not throw 
PASS label.className (<label class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS label.className (<label class>): IDL set to object "test-valueOf" followed by IDL get 
PASS label.hidden: typeof IDL attribute 
PASS label.hidden: IDL get with DOM attribute unset 
PASS label.hidden: setAttribute() to "" followed by getAttribute() 
PASS label.hidden: setAttribute() to "" followed by IDL get 
PASS label.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS label.hidden: setAttribute() to " foo " followed by IDL get 
PASS label.hidden: setAttribute() to undefined followed by getAttribute() 
PASS label.hidden: setAttribute() to undefined followed by IDL get 
PASS label.hidden: setAttribute() to null followed by getAttribute() 
PASS label.hidden: setAttribute() to null followed by IDL get 
PASS label.hidden: setAttribute() to 7 followed by getAttribute() 
PASS label.hidden: setAttribute() to 7 followed by IDL get 
PASS label.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS label.hidden: setAttribute() to 1.5 followed by IDL get 
PASS label.hidden: setAttribute() to true followed by getAttribute() 
PASS label.hidden: setAttribute() to true followed by IDL get 
PASS label.hidden: setAttribute() to false followed by getAttribute() 
PASS label.hidden: setAttribute() to false followed by IDL get 
PASS label.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS label.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS label.hidden: setAttribute() to NaN followed by getAttribute() 
PASS label.hidden: setAttribute() to NaN followed by IDL get 
PASS label.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS label.hidden: setAttribute() to Infinity followed by IDL get 
PASS label.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS label.hidden: setAttribute() to -Infinity followed by IDL get 
PASS label.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS label.hidden: setAttribute() to "\0" followed by IDL get 
PASS label.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS label.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS label.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS label.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS label.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS label.hidden: setAttribute() to "hidden" followed by IDL get 
PASS label.hidden: IDL set to "" should not throw 
PASS label.hidden: IDL set to "" followed by hasAttribute() 
PASS label.hidden: IDL set to "" followed by IDL get 
PASS label.hidden: IDL set to " foo " should not throw 
PASS label.hidden: IDL set to " foo " followed by hasAttribute() 
PASS label.hidden: IDL set to " foo " followed by IDL get 
PASS label.hidden: IDL set to undefined should not throw 
PASS label.hidden: IDL set to undefined followed by hasAttribute() 
PASS label.hidden: IDL set to undefined followed by IDL get 
PASS label.hidden: IDL set to null should not throw 
PASS label.hidden: IDL set to null followed by hasAttribute() 
PASS label.hidden: IDL set to null followed by IDL get 
PASS label.hidden: IDL set to 7 should not throw 
PASS label.hidden: IDL set to 7 followed by hasAttribute() 
PASS label.hidden: IDL set to 7 followed by IDL get 
PASS label.hidden: IDL set to 1.5 should not throw 
PASS label.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS label.hidden: IDL set to 1.5 followed by IDL get 
PASS label.hidden: IDL set to true should not throw 
PASS label.hidden: IDL set to true followed by hasAttribute() 
PASS label.hidden: IDL set to true followed by IDL get 
PASS label.hidden: IDL set to false should not throw 
PASS label.hidden: IDL set to false followed by hasAttribute() 
PASS label.hidden: IDL set to false followed by IDL get 
PASS label.hidden: IDL set to object "[object Object]" should not throw 
PASS label.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS label.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS label.hidden: IDL set to NaN should not throw 
PASS label.hidden: IDL set to NaN followed by hasAttribute() 
PASS label.hidden: IDL set to NaN followed by IDL get 
PASS label.hidden: IDL set to Infinity should not throw 
PASS label.hidden: IDL set to Infinity followed by hasAttribute() 
PASS label.hidden: IDL set to Infinity followed by IDL get 
PASS label.hidden: IDL set to -Infinity should not throw 
PASS label.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS label.hidden: IDL set to -Infinity followed by IDL get 
PASS label.hidden: IDL set to "\0" should not throw 
PASS label.hidden: IDL set to "\0" followed by hasAttribute() 
PASS label.hidden: IDL set to "\0" followed by IDL get 
PASS label.hidden: IDL set to object "test-toString" should not throw 
PASS label.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS label.hidden: IDL set to object "test-toString" followed by IDL get 
PASS label.hidden: IDL set to object "test-valueOf" should not throw 
PASS label.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS label.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS label.accessKey: typeof IDL attribute 
PASS label.accessKey: IDL get with DOM attribute unset 
PASS label.accessKey: setAttribute() to "" followed by getAttribute() 
PASS label.accessKey: setAttribute() to "" followed by IDL get 
PASS label.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS label.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS label.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS label.accessKey: setAttribute() to undefined followed by IDL get 
PASS label.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS label.accessKey: setAttribute() to 7 followed by IDL get 
PASS label.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS label.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS label.accessKey: setAttribute() to true followed by getAttribute() 
PASS label.accessKey: setAttribute() to true followed by IDL get 
PASS label.accessKey: setAttribute() to false followed by getAttribute() 
PASS label.accessKey: setAttribute() to false followed by IDL get 
PASS label.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS label.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS label.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS label.accessKey: setAttribute() to NaN followed by IDL get 
PASS label.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS label.accessKey: setAttribute() to Infinity followed by IDL get 
PASS label.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS label.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS label.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS label.accessKey: setAttribute() to "\0" followed by IDL get 
PASS label.accessKey: setAttribute() to null followed by getAttribute() 
PASS label.accessKey: setAttribute() to null followed by IDL get 
PASS label.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS label.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS label.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS label.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS label.accessKey: IDL set to "" should not throw 
PASS label.accessKey: IDL set to "" followed by getAttribute() 
PASS label.accessKey: IDL set to "" followed by IDL get 
PASS label.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS label.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS label.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS label.accessKey: IDL set to undefined should not throw 
PASS label.accessKey: IDL set to undefined followed by getAttribute() 
PASS label.accessKey: IDL set to undefined followed by IDL get 
PASS label.accessKey: IDL set to 7 should not throw 
PASS label.accessKey: IDL set to 7 followed by getAttribute() 
PASS label.accessKey: IDL set to 7 followed by IDL get 
PASS label.accessKey: IDL set to 1.5 should not throw 
PASS label.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS label.accessKey: IDL set to 1.5 followed by IDL get 
PASS label.accessKey: IDL set to true should not throw 
PASS label.accessKey: IDL set to true followed by getAttribute() 
PASS label.accessKey: IDL set to true followed by IDL get 
PASS label.accessKey: IDL set to false should not throw 
PASS label.accessKey: IDL set to false followed by getAttribute() 
PASS label.accessKey: IDL set to false followed by IDL get 
PASS label.accessKey: IDL set to object "[object Object]" should not throw 
PASS label.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS label.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS label.accessKey: IDL set to NaN should not throw 
PASS label.accessKey: IDL set to NaN followed by getAttribute() 
PASS label.accessKey: IDL set to NaN followed by IDL get 
PASS label.accessKey: IDL set to Infinity should not throw 
PASS label.accessKey: IDL set to Infinity followed by getAttribute() 
PASS label.accessKey: IDL set to Infinity followed by IDL get 
PASS label.accessKey: IDL set to -Infinity should not throw 
PASS label.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS label.accessKey: IDL set to -Infinity followed by IDL get 
PASS label.accessKey: IDL set to "\0" should not throw 
PASS label.accessKey: IDL set to "\0" followed by getAttribute() 
PASS label.accessKey: IDL set to "\0" followed by IDL get 
PASS label.accessKey: IDL set to null should not throw 
PASS label.accessKey: IDL set to null followed by getAttribute() 
PASS label.accessKey: IDL set to null followed by IDL get 
PASS label.accessKey: IDL set to object "test-toString" should not throw 
PASS label.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS label.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS label.accessKey: IDL set to object "test-valueOf" should not throw 
PASS label.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS label.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS label.tabIndex: typeof IDL attribute 
PASS label.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS label.tabIndex: setAttribute() to -36 followed by IDL get 
PASS label.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS label.tabIndex: setAttribute() to -1 followed by IDL get 
PASS label.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS label.tabIndex: setAttribute() to 0 followed by IDL get 
PASS label.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS label.tabIndex: setAttribute() to 1 followed by IDL get 
PASS label.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL label.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS label.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL label.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS label.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS label.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS label.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS label.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS label.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS label.tabIndex: setAttribute() to "0" followed by IDL get 
PASS label.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS label.tabIndex: setAttribute() to "1" followed by IDL get 
PASS label.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS label.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS label.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS label.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS label.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS label.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS label.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS label.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS label.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS label.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS label.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS label.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS label.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS label.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS label.tabIndex: IDL set to -36 should not throw 
PASS label.tabIndex: IDL set to -36 followed by getAttribute() 
PASS label.tabIndex: IDL set to -36 followed by IDL get 
PASS label.tabIndex: IDL set to -1 should not throw 
PASS label.tabIndex: IDL set to -1 followed by getAttribute() 
PASS label.tabIndex: IDL set to -1 followed by IDL get 
PASS label.tabIndex: IDL set to 0 should not throw 
PASS label.tabIndex: IDL set to 0 followed by getAttribute() 
PASS label.tabIndex: IDL set to 0 followed by IDL get 
PASS label.tabIndex: IDL set to 1 should not throw 
PASS label.tabIndex: IDL set to 1 followed by getAttribute() 
PASS label.tabIndex: IDL set to 1 followed by IDL get 
PASS label.tabIndex: IDL set to 2147483647 should not throw 
PASS label.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL label.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS label.tabIndex: IDL set to -2147483648 should not throw 
PASS label.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL label.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS label.htmlFor (<label for>): typeof IDL attribute 
PASS label.htmlFor (<label for>): IDL get with DOM attribute unset 
PASS label.htmlFor (<label for>): setAttribute() to "" followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to "" followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to undefined followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to undefined followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to 7 followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to 7 followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to 1.5 followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to 1.5 followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to true followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to true followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to false followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to false followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to object "[object Object]" followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to NaN followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to NaN followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to Infinity followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to Infinity followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to -Infinity followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to -Infinity followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to "\0" followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to "\0" followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to null followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to null followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to object "test-toString" followed by IDL get 
PASS label.htmlFor (<label for>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS label.htmlFor (<label for>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to "" should not throw 
PASS label.htmlFor (<label for>): IDL set to "" followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to "" followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS label.htmlFor (<label for>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to undefined should not throw 
PASS label.htmlFor (<label for>): IDL set to undefined followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to undefined followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to 7 should not throw 
PASS label.htmlFor (<label for>): IDL set to 7 followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to 7 followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to 1.5 should not throw 
PASS label.htmlFor (<label for>): IDL set to 1.5 followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to 1.5 followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to true should not throw 
PASS label.htmlFor (<label for>): IDL set to true followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to true followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to false should not throw 
PASS label.htmlFor (<label for>): IDL set to false followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to false followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to object "[object Object]" should not throw 
PASS label.htmlFor (<label for>): IDL set to object "[object Object]" followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to object "[object Object]" followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to NaN should not throw 
PASS label.htmlFor (<label for>): IDL set to NaN followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to NaN followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to Infinity should not throw 
PASS label.htmlFor (<label for>): IDL set to Infinity followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to Infinity followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to -Infinity should not throw 
PASS label.htmlFor (<label for>): IDL set to -Infinity followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to -Infinity followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to "\0" should not throw 
PASS label.htmlFor (<label for>): IDL set to "\0" followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to "\0" followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to null should not throw 
PASS label.htmlFor (<label for>): IDL set to null followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to null followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to object "test-toString" should not throw 
PASS label.htmlFor (<label for>): IDL set to object "test-toString" followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to object "test-toString" followed by IDL get 
PASS label.htmlFor (<label for>): IDL set to object "test-valueOf" should not throw 
PASS label.htmlFor (<label for>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS label.htmlFor (<label for>): IDL set to object "test-valueOf" followed by IDL get 
FAIL label.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL label.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS label.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL label.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL label.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL label.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to null followed by getAttribute() 
FAIL label.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL label.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL label.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to true followed by getAttribute() 
FAIL label.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to false followed by getAttribute() 
FAIL label.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL label.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL label.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL label.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL label.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL label.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL label.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL label.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL label.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS label.itemScope: IDL set to "" should not throw 
FAIL label.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL label.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS label.itemScope: IDL set to " foo " should not throw 
PASS label.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL label.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS label.itemScope: IDL set to undefined should not throw 
FAIL label.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL label.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS label.itemScope: IDL set to null should not throw 
FAIL label.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL label.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS label.itemScope: IDL set to 7 should not throw 
PASS label.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL label.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS label.itemScope: IDL set to 1.5 should not throw 
PASS label.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL label.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS label.itemScope: IDL set to true should not throw 
PASS label.itemScope: IDL set to true followed by hasAttribute() 
PASS label.itemScope: IDL set to true followed by IDL get 
PASS label.itemScope: IDL set to false should not throw 
FAIL label.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS label.itemScope: IDL set to false followed by IDL get 
PASS label.itemScope: IDL set to object "[object Object]" should not throw 
PASS label.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL label.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS label.itemScope: IDL set to NaN should not throw 
FAIL label.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL label.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS label.itemScope: IDL set to Infinity should not throw 
PASS label.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL label.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS label.itemScope: IDL set to -Infinity should not throw 
PASS label.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL label.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS label.itemScope: IDL set to "\0" should not throw 
PASS label.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL label.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS label.itemScope: IDL set to object "test-toString" should not throw 
PASS label.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL label.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS label.itemScope: IDL set to object "test-valueOf" should not throw 
PASS label.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL label.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL label.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL label.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS label.itemId: setAttribute() to "" followed by getAttribute() 
FAIL label.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS label.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL label.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS label.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL label.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS label.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL label.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS label.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL label.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS label.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL label.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS label.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL label.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS label.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL label.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS label.itemId: setAttribute() to true followed by getAttribute() 
FAIL label.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS label.itemId: setAttribute() to false followed by getAttribute() 
FAIL label.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS label.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL label.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS label.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL label.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS label.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL label.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS label.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL label.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS label.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL label.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS label.itemId: setAttribute() to null followed by getAttribute() 
FAIL label.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS label.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL label.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS label.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL label.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS label.itemId: IDL set to "" should not throw 
FAIL label.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL label.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS label.itemId: IDL set to " foo " should not throw 
FAIL label.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL label.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS label.itemId: IDL set to "http://site.example/" should not throw 
FAIL label.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS label.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS label.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL label.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL label.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS label.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL label.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL label.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS label.itemId: IDL set to undefined should not throw 
FAIL label.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL label.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS label.itemId: IDL set to 7 should not throw 
FAIL label.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL label.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS label.itemId: IDL set to 1.5 should not throw 
FAIL label.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL label.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS label.itemId: IDL set to true should not throw 
FAIL label.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL label.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS label.itemId: IDL set to false should not throw 
FAIL label.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL label.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS label.itemId: IDL set to object "[object Object]" should not throw 
FAIL label.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL label.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS label.itemId: IDL set to NaN should not throw 
FAIL label.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL label.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS label.itemId: IDL set to Infinity should not throw 
FAIL label.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL label.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS label.itemId: IDL set to -Infinity should not throw 
FAIL label.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL label.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS label.itemId: IDL set to "\0" should not throw 
FAIL label.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL label.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS label.itemId: IDL set to null should not throw 
FAIL label.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL label.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS label.itemId: IDL set to object "test-toString" should not throw 
FAIL label.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL label.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS label.itemId: IDL set to object "test-valueOf" should not throw 
PASS label.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL label.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS input.title: typeof IDL attribute 
PASS input.title: IDL get with DOM attribute unset 
PASS input.title: setAttribute() to "" followed by getAttribute() 
PASS input.title: setAttribute() to "" followed by IDL get 
PASS input.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.title: setAttribute() to undefined followed by getAttribute() 
PASS input.title: setAttribute() to undefined followed by IDL get 
PASS input.title: setAttribute() to 7 followed by getAttribute() 
PASS input.title: setAttribute() to 7 followed by IDL get 
PASS input.title: setAttribute() to 1.5 followed by getAttribute() 
PASS input.title: setAttribute() to 1.5 followed by IDL get 
PASS input.title: setAttribute() to true followed by getAttribute() 
PASS input.title: setAttribute() to true followed by IDL get 
PASS input.title: setAttribute() to false followed by getAttribute() 
PASS input.title: setAttribute() to false followed by IDL get 
PASS input.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.title: setAttribute() to NaN followed by getAttribute() 
PASS input.title: setAttribute() to NaN followed by IDL get 
PASS input.title: setAttribute() to Infinity followed by getAttribute() 
PASS input.title: setAttribute() to Infinity followed by IDL get 
PASS input.title: setAttribute() to -Infinity followed by getAttribute() 
PASS input.title: setAttribute() to -Infinity followed by IDL get 
PASS input.title: setAttribute() to "\0" followed by getAttribute() 
PASS input.title: setAttribute() to "\0" followed by IDL get 
PASS input.title: setAttribute() to null followed by getAttribute() 
PASS input.title: setAttribute() to null followed by IDL get 
PASS input.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.title: setAttribute() to object "test-toString" followed by IDL get 
PASS input.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.title: IDL set to "" should not throw 
PASS input.title: IDL set to "" followed by getAttribute() 
PASS input.title: IDL set to "" followed by IDL get 
PASS input.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.title: IDL set to undefined should not throw 
PASS input.title: IDL set to undefined followed by getAttribute() 
PASS input.title: IDL set to undefined followed by IDL get 
PASS input.title: IDL set to 7 should not throw 
PASS input.title: IDL set to 7 followed by getAttribute() 
PASS input.title: IDL set to 7 followed by IDL get 
PASS input.title: IDL set to 1.5 should not throw 
PASS input.title: IDL set to 1.5 followed by getAttribute() 
PASS input.title: IDL set to 1.5 followed by IDL get 
PASS input.title: IDL set to true should not throw 
PASS input.title: IDL set to true followed by getAttribute() 
PASS input.title: IDL set to true followed by IDL get 
PASS input.title: IDL set to false should not throw 
PASS input.title: IDL set to false followed by getAttribute() 
PASS input.title: IDL set to false followed by IDL get 
PASS input.title: IDL set to object "[object Object]" should not throw 
PASS input.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.title: IDL set to object "[object Object]" followed by IDL get 
PASS input.title: IDL set to NaN should not throw 
PASS input.title: IDL set to NaN followed by getAttribute() 
PASS input.title: IDL set to NaN followed by IDL get 
PASS input.title: IDL set to Infinity should not throw 
PASS input.title: IDL set to Infinity followed by getAttribute() 
PASS input.title: IDL set to Infinity followed by IDL get 
PASS input.title: IDL set to -Infinity should not throw 
PASS input.title: IDL set to -Infinity followed by getAttribute() 
PASS input.title: IDL set to -Infinity followed by IDL get 
PASS input.title: IDL set to "\0" should not throw 
PASS input.title: IDL set to "\0" followed by getAttribute() 
PASS input.title: IDL set to "\0" followed by IDL get 
PASS input.title: IDL set to null should not throw 
PASS input.title: IDL set to null followed by getAttribute() 
PASS input.title: IDL set to null followed by IDL get 
PASS input.title: IDL set to object "test-toString" should not throw 
PASS input.title: IDL set to object "test-toString" followed by getAttribute() 
PASS input.title: IDL set to object "test-toString" followed by IDL get 
PASS input.title: IDL set to object "test-valueOf" should not throw 
PASS input.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.title: IDL set to object "test-valueOf" followed by IDL get 
PASS input.lang: typeof IDL attribute 
PASS input.lang: IDL get with DOM attribute unset 
PASS input.lang: setAttribute() to "" followed by getAttribute() 
PASS input.lang: setAttribute() to "" followed by IDL get 
PASS input.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.lang: setAttribute() to undefined followed by getAttribute() 
PASS input.lang: setAttribute() to undefined followed by IDL get 
PASS input.lang: setAttribute() to 7 followed by getAttribute() 
PASS input.lang: setAttribute() to 7 followed by IDL get 
PASS input.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS input.lang: setAttribute() to 1.5 followed by IDL get 
PASS input.lang: setAttribute() to true followed by getAttribute() 
PASS input.lang: setAttribute() to true followed by IDL get 
PASS input.lang: setAttribute() to false followed by getAttribute() 
PASS input.lang: setAttribute() to false followed by IDL get 
PASS input.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.lang: setAttribute() to NaN followed by getAttribute() 
PASS input.lang: setAttribute() to NaN followed by IDL get 
PASS input.lang: setAttribute() to Infinity followed by getAttribute() 
PASS input.lang: setAttribute() to Infinity followed by IDL get 
PASS input.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS input.lang: setAttribute() to -Infinity followed by IDL get 
PASS input.lang: setAttribute() to "\0" followed by getAttribute() 
PASS input.lang: setAttribute() to "\0" followed by IDL get 
PASS input.lang: setAttribute() to null followed by getAttribute() 
PASS input.lang: setAttribute() to null followed by IDL get 
PASS input.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS input.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.lang: IDL set to "" should not throw 
PASS input.lang: IDL set to "" followed by getAttribute() 
PASS input.lang: IDL set to "" followed by IDL get 
PASS input.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.lang: IDL set to undefined should not throw 
PASS input.lang: IDL set to undefined followed by getAttribute() 
PASS input.lang: IDL set to undefined followed by IDL get 
PASS input.lang: IDL set to 7 should not throw 
PASS input.lang: IDL set to 7 followed by getAttribute() 
PASS input.lang: IDL set to 7 followed by IDL get 
PASS input.lang: IDL set to 1.5 should not throw 
PASS input.lang: IDL set to 1.5 followed by getAttribute() 
PASS input.lang: IDL set to 1.5 followed by IDL get 
PASS input.lang: IDL set to true should not throw 
PASS input.lang: IDL set to true followed by getAttribute() 
PASS input.lang: IDL set to true followed by IDL get 
PASS input.lang: IDL set to false should not throw 
PASS input.lang: IDL set to false followed by getAttribute() 
PASS input.lang: IDL set to false followed by IDL get 
PASS input.lang: IDL set to object "[object Object]" should not throw 
PASS input.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.lang: IDL set to object "[object Object]" followed by IDL get 
PASS input.lang: IDL set to NaN should not throw 
PASS input.lang: IDL set to NaN followed by getAttribute() 
PASS input.lang: IDL set to NaN followed by IDL get 
PASS input.lang: IDL set to Infinity should not throw 
PASS input.lang: IDL set to Infinity followed by getAttribute() 
PASS input.lang: IDL set to Infinity followed by IDL get 
PASS input.lang: IDL set to -Infinity should not throw 
PASS input.lang: IDL set to -Infinity followed by getAttribute() 
PASS input.lang: IDL set to -Infinity followed by IDL get 
PASS input.lang: IDL set to "\0" should not throw 
PASS input.lang: IDL set to "\0" followed by getAttribute() 
PASS input.lang: IDL set to "\0" followed by IDL get 
PASS input.lang: IDL set to null should not throw 
PASS input.lang: IDL set to null followed by getAttribute() 
PASS input.lang: IDL set to null followed by IDL get 
PASS input.lang: IDL set to object "test-toString" should not throw 
PASS input.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS input.lang: IDL set to object "test-toString" followed by IDL get 
PASS input.lang: IDL set to object "test-valueOf" should not throw 
PASS input.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS input.dir: typeof IDL attribute 
PASS input.dir: IDL get with DOM attribute unset 
PASS input.dir: setAttribute() to "" followed by getAttribute() 
PASS input.dir: setAttribute() to "" followed by IDL get 
PASS input.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.dir: setAttribute() to undefined followed by getAttribute() 
PASS input.dir: setAttribute() to undefined followed by IDL get 
PASS input.dir: setAttribute() to 7 followed by getAttribute() 
PASS input.dir: setAttribute() to 7 followed by IDL get 
PASS input.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS input.dir: setAttribute() to 1.5 followed by IDL get 
PASS input.dir: setAttribute() to true followed by getAttribute() 
PASS input.dir: setAttribute() to true followed by IDL get 
PASS input.dir: setAttribute() to false followed by getAttribute() 
PASS input.dir: setAttribute() to false followed by IDL get 
PASS input.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.dir: setAttribute() to NaN followed by getAttribute() 
PASS input.dir: setAttribute() to NaN followed by IDL get 
PASS input.dir: setAttribute() to Infinity followed by getAttribute() 
PASS input.dir: setAttribute() to Infinity followed by IDL get 
PASS input.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS input.dir: setAttribute() to -Infinity followed by IDL get 
PASS input.dir: setAttribute() to "\0" followed by getAttribute() 
PASS input.dir: setAttribute() to "\0" followed by IDL get 
PASS input.dir: setAttribute() to null followed by getAttribute() 
PASS input.dir: setAttribute() to null followed by IDL get 
PASS input.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS input.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS input.dir: setAttribute() to "ltr" followed by IDL get 
PASS input.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS input.dir: setAttribute() to "xltr" followed by IDL get 
PASS input.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS input.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS input.dir: setAttribute() to "tr" followed by getAttribute() 
PASS input.dir: setAttribute() to "tr" followed by IDL get 
PASS input.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS input.dir: setAttribute() to "LTR" followed by IDL get 
PASS input.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS input.dir: setAttribute() to "rtl" followed by IDL get 
PASS input.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS input.dir: setAttribute() to "xrtl" followed by IDL get 
PASS input.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS input.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS input.dir: setAttribute() to "tl" followed by getAttribute() 
PASS input.dir: setAttribute() to "tl" followed by IDL get 
PASS input.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS input.dir: setAttribute() to "RTL" followed by IDL get 
PASS input.dir: setAttribute() to "auto" followed by getAttribute() 
PASS input.dir: setAttribute() to "auto" followed by IDL get 
PASS input.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS input.dir: setAttribute() to "xauto" followed by IDL get 
PASS input.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS input.dir: setAttribute() to "auto\0" followed by IDL get 
PASS input.dir: setAttribute() to "uto" followed by getAttribute() 
PASS input.dir: setAttribute() to "uto" followed by IDL get 
PASS input.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS input.dir: setAttribute() to "AUTO" followed by IDL get 
PASS input.dir: IDL set to "" should not throw 
PASS input.dir: IDL set to "" followed by getAttribute() 
PASS input.dir: IDL set to "" followed by IDL get 
PASS input.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.dir: IDL set to undefined should not throw 
PASS input.dir: IDL set to undefined followed by getAttribute() 
PASS input.dir: IDL set to undefined followed by IDL get 
PASS input.dir: IDL set to 7 should not throw 
PASS input.dir: IDL set to 7 followed by getAttribute() 
PASS input.dir: IDL set to 7 followed by IDL get 
PASS input.dir: IDL set to 1.5 should not throw 
PASS input.dir: IDL set to 1.5 followed by getAttribute() 
PASS input.dir: IDL set to 1.5 followed by IDL get 
PASS input.dir: IDL set to true should not throw 
PASS input.dir: IDL set to true followed by getAttribute() 
PASS input.dir: IDL set to true followed by IDL get 
PASS input.dir: IDL set to false should not throw 
PASS input.dir: IDL set to false followed by getAttribute() 
PASS input.dir: IDL set to false followed by IDL get 
PASS input.dir: IDL set to object "[object Object]" should not throw 
PASS input.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.dir: IDL set to object "[object Object]" followed by IDL get 
PASS input.dir: IDL set to NaN should not throw 
PASS input.dir: IDL set to NaN followed by getAttribute() 
PASS input.dir: IDL set to NaN followed by IDL get 
PASS input.dir: IDL set to Infinity should not throw 
PASS input.dir: IDL set to Infinity followed by getAttribute() 
PASS input.dir: IDL set to Infinity followed by IDL get 
PASS input.dir: IDL set to -Infinity should not throw 
PASS input.dir: IDL set to -Infinity followed by getAttribute() 
PASS input.dir: IDL set to -Infinity followed by IDL get 
PASS input.dir: IDL set to "\0" should not throw 
PASS input.dir: IDL set to "\0" followed by getAttribute() 
PASS input.dir: IDL set to "\0" followed by IDL get 
PASS input.dir: IDL set to null should not throw 
PASS input.dir: IDL set to null followed by IDL get 
PASS input.dir: IDL set to object "test-toString" should not throw 
PASS input.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS input.dir: IDL set to object "test-toString" followed by IDL get 
PASS input.dir: IDL set to object "test-valueOf" should not throw 
PASS input.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS input.dir: IDL set to "ltr" should not throw 
PASS input.dir: IDL set to "ltr" followed by getAttribute() 
PASS input.dir: IDL set to "ltr" followed by IDL get 
PASS input.dir: IDL set to "xltr" should not throw 
PASS input.dir: IDL set to "xltr" followed by getAttribute() 
PASS input.dir: IDL set to "xltr" followed by IDL get 
PASS input.dir: IDL set to "ltr\0" should not throw 
PASS input.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS input.dir: IDL set to "ltr\0" followed by IDL get 
PASS input.dir: IDL set to "tr" should not throw 
PASS input.dir: IDL set to "tr" followed by getAttribute() 
PASS input.dir: IDL set to "tr" followed by IDL get 
PASS input.dir: IDL set to "LTR" should not throw 
PASS input.dir: IDL set to "LTR" followed by getAttribute() 
PASS input.dir: IDL set to "LTR" followed by IDL get 
PASS input.dir: IDL set to "rtl" should not throw 
PASS input.dir: IDL set to "rtl" followed by getAttribute() 
PASS input.dir: IDL set to "rtl" followed by IDL get 
PASS input.dir: IDL set to "xrtl" should not throw 
PASS input.dir: IDL set to "xrtl" followed by getAttribute() 
PASS input.dir: IDL set to "xrtl" followed by IDL get 
PASS input.dir: IDL set to "rtl\0" should not throw 
PASS input.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS input.dir: IDL set to "rtl\0" followed by IDL get 
PASS input.dir: IDL set to "tl" should not throw 
PASS input.dir: IDL set to "tl" followed by getAttribute() 
PASS input.dir: IDL set to "tl" followed by IDL get 
PASS input.dir: IDL set to "RTL" should not throw 
PASS input.dir: IDL set to "RTL" followed by getAttribute() 
PASS input.dir: IDL set to "RTL" followed by IDL get 
PASS input.dir: IDL set to "auto" should not throw 
PASS input.dir: IDL set to "auto" followed by getAttribute() 
PASS input.dir: IDL set to "auto" followed by IDL get 
PASS input.dir: IDL set to "xauto" should not throw 
PASS input.dir: IDL set to "xauto" followed by getAttribute() 
PASS input.dir: IDL set to "xauto" followed by IDL get 
PASS input.dir: IDL set to "auto\0" should not throw 
PASS input.dir: IDL set to "auto\0" followed by getAttribute() 
PASS input.dir: IDL set to "auto\0" followed by IDL get 
PASS input.dir: IDL set to "uto" should not throw 
PASS input.dir: IDL set to "uto" followed by getAttribute() 
PASS input.dir: IDL set to "uto" followed by IDL get 
PASS input.dir: IDL set to "AUTO" should not throw 
PASS input.dir: IDL set to "AUTO" followed by getAttribute() 
PASS input.dir: IDL set to "AUTO" followed by IDL get 
PASS input.className (<input class>): typeof IDL attribute 
PASS input.className (<input class>): IDL get with DOM attribute unset 
PASS input.className (<input class>): setAttribute() to "" followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to "" followed by IDL get 
PASS input.className (<input class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.className (<input class>): setAttribute() to undefined followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to undefined followed by IDL get 
PASS input.className (<input class>): setAttribute() to 7 followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to 7 followed by IDL get 
PASS input.className (<input class>): setAttribute() to 1.5 followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to 1.5 followed by IDL get 
PASS input.className (<input class>): setAttribute() to true followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to true followed by IDL get 
PASS input.className (<input class>): setAttribute() to false followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to false followed by IDL get 
PASS input.className (<input class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS input.className (<input class>): setAttribute() to NaN followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to NaN followed by IDL get 
PASS input.className (<input class>): setAttribute() to Infinity followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to Infinity followed by IDL get 
PASS input.className (<input class>): setAttribute() to -Infinity followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to -Infinity followed by IDL get 
PASS input.className (<input class>): setAttribute() to "\0" followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to "\0" followed by IDL get 
PASS input.className (<input class>): setAttribute() to null followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to null followed by IDL get 
PASS input.className (<input class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to object "test-toString" followed by IDL get 
PASS input.className (<input class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.className (<input class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.className (<input class>): IDL set to "" should not throw 
PASS input.className (<input class>): IDL set to "" followed by getAttribute() 
PASS input.className (<input class>): IDL set to "" followed by IDL get 
PASS input.className (<input class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.className (<input class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.className (<input class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.className (<input class>): IDL set to undefined should not throw 
PASS input.className (<input class>): IDL set to undefined followed by getAttribute() 
PASS input.className (<input class>): IDL set to undefined followed by IDL get 
PASS input.className (<input class>): IDL set to 7 should not throw 
PASS input.className (<input class>): IDL set to 7 followed by getAttribute() 
PASS input.className (<input class>): IDL set to 7 followed by IDL get 
PASS input.className (<input class>): IDL set to 1.5 should not throw 
PASS input.className (<input class>): IDL set to 1.5 followed by getAttribute() 
PASS input.className (<input class>): IDL set to 1.5 followed by IDL get 
PASS input.className (<input class>): IDL set to true should not throw 
PASS input.className (<input class>): IDL set to true followed by getAttribute() 
PASS input.className (<input class>): IDL set to true followed by IDL get 
PASS input.className (<input class>): IDL set to false should not throw 
PASS input.className (<input class>): IDL set to false followed by getAttribute() 
PASS input.className (<input class>): IDL set to false followed by IDL get 
PASS input.className (<input class>): IDL set to object "[object Object]" should not throw 
PASS input.className (<input class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS input.className (<input class>): IDL set to object "[object Object]" followed by IDL get 
PASS input.className (<input class>): IDL set to NaN should not throw 
PASS input.className (<input class>): IDL set to NaN followed by getAttribute() 
PASS input.className (<input class>): IDL set to NaN followed by IDL get 
PASS input.className (<input class>): IDL set to Infinity should not throw 
PASS input.className (<input class>): IDL set to Infinity followed by getAttribute() 
PASS input.className (<input class>): IDL set to Infinity followed by IDL get 
PASS input.className (<input class>): IDL set to -Infinity should not throw 
PASS input.className (<input class>): IDL set to -Infinity followed by getAttribute() 
PASS input.className (<input class>): IDL set to -Infinity followed by IDL get 
PASS input.className (<input class>): IDL set to "\0" should not throw 
PASS input.className (<input class>): IDL set to "\0" followed by getAttribute() 
PASS input.className (<input class>): IDL set to "\0" followed by IDL get 
PASS input.className (<input class>): IDL set to null should not throw 
PASS input.className (<input class>): IDL set to null followed by getAttribute() 
PASS input.className (<input class>): IDL set to null followed by IDL get 
PASS input.className (<input class>): IDL set to object "test-toString" should not throw 
PASS input.className (<input class>): IDL set to object "test-toString" followed by getAttribute() 
PASS input.className (<input class>): IDL set to object "test-toString" followed by IDL get 
PASS input.className (<input class>): IDL set to object "test-valueOf" should not throw 
PASS input.className (<input class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.className (<input class>): IDL set to object "test-valueOf" followed by IDL get 
PASS input.hidden: typeof IDL attribute 
PASS input.hidden: IDL get with DOM attribute unset 
PASS input.hidden: setAttribute() to "" followed by getAttribute() 
PASS input.hidden: setAttribute() to "" followed by IDL get 
PASS input.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS input.hidden: setAttribute() to " foo " followed by IDL get 
PASS input.hidden: setAttribute() to undefined followed by getAttribute() 
PASS input.hidden: setAttribute() to undefined followed by IDL get 
PASS input.hidden: setAttribute() to null followed by getAttribute() 
PASS input.hidden: setAttribute() to null followed by IDL get 
PASS input.hidden: setAttribute() to 7 followed by getAttribute() 
PASS input.hidden: setAttribute() to 7 followed by IDL get 
PASS input.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS input.hidden: setAttribute() to 1.5 followed by IDL get 
PASS input.hidden: setAttribute() to true followed by getAttribute() 
PASS input.hidden: setAttribute() to true followed by IDL get 
PASS input.hidden: setAttribute() to false followed by getAttribute() 
PASS input.hidden: setAttribute() to false followed by IDL get 
PASS input.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.hidden: setAttribute() to NaN followed by getAttribute() 
PASS input.hidden: setAttribute() to NaN followed by IDL get 
PASS input.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS input.hidden: setAttribute() to Infinity followed by IDL get 
PASS input.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS input.hidden: setAttribute() to -Infinity followed by IDL get 
PASS input.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS input.hidden: setAttribute() to "\0" followed by IDL get 
PASS input.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS input.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS input.hidden: setAttribute() to "hidden" followed by IDL get 
PASS input.hidden: IDL set to "" should not throw 
PASS input.hidden: IDL set to "" followed by hasAttribute() 
PASS input.hidden: IDL set to "" followed by IDL get 
PASS input.hidden: IDL set to " foo " should not throw 
PASS input.hidden: IDL set to " foo " followed by hasAttribute() 
PASS input.hidden: IDL set to " foo " followed by IDL get 
PASS input.hidden: IDL set to undefined should not throw 
PASS input.hidden: IDL set to undefined followed by hasAttribute() 
PASS input.hidden: IDL set to undefined followed by IDL get 
PASS input.hidden: IDL set to null should not throw 
PASS input.hidden: IDL set to null followed by hasAttribute() 
PASS input.hidden: IDL set to null followed by IDL get 
PASS input.hidden: IDL set to 7 should not throw 
PASS input.hidden: IDL set to 7 followed by hasAttribute() 
PASS input.hidden: IDL set to 7 followed by IDL get 
PASS input.hidden: IDL set to 1.5 should not throw 
PASS input.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS input.hidden: IDL set to 1.5 followed by IDL get 
PASS input.hidden: IDL set to true should not throw 
PASS input.hidden: IDL set to true followed by hasAttribute() 
PASS input.hidden: IDL set to true followed by IDL get 
PASS input.hidden: IDL set to false should not throw 
PASS input.hidden: IDL set to false followed by hasAttribute() 
PASS input.hidden: IDL set to false followed by IDL get 
PASS input.hidden: IDL set to object "[object Object]" should not throw 
PASS input.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS input.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS input.hidden: IDL set to NaN should not throw 
PASS input.hidden: IDL set to NaN followed by hasAttribute() 
PASS input.hidden: IDL set to NaN followed by IDL get 
PASS input.hidden: IDL set to Infinity should not throw 
PASS input.hidden: IDL set to Infinity followed by hasAttribute() 
PASS input.hidden: IDL set to Infinity followed by IDL get 
PASS input.hidden: IDL set to -Infinity should not throw 
PASS input.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS input.hidden: IDL set to -Infinity followed by IDL get 
PASS input.hidden: IDL set to "\0" should not throw 
PASS input.hidden: IDL set to "\0" followed by hasAttribute() 
PASS input.hidden: IDL set to "\0" followed by IDL get 
PASS input.hidden: IDL set to object "test-toString" should not throw 
PASS input.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS input.hidden: IDL set to object "test-toString" followed by IDL get 
PASS input.hidden: IDL set to object "test-valueOf" should not throw 
PASS input.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS input.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS input.accessKey: typeof IDL attribute 
PASS input.accessKey: IDL get with DOM attribute unset 
PASS input.accessKey: setAttribute() to "" followed by getAttribute() 
PASS input.accessKey: setAttribute() to "" followed by IDL get 
PASS input.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS input.accessKey: setAttribute() to undefined followed by IDL get 
PASS input.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS input.accessKey: setAttribute() to 7 followed by IDL get 
PASS input.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS input.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS input.accessKey: setAttribute() to true followed by getAttribute() 
PASS input.accessKey: setAttribute() to true followed by IDL get 
PASS input.accessKey: setAttribute() to false followed by getAttribute() 
PASS input.accessKey: setAttribute() to false followed by IDL get 
PASS input.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS input.accessKey: setAttribute() to NaN followed by IDL get 
PASS input.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS input.accessKey: setAttribute() to Infinity followed by IDL get 
PASS input.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS input.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS input.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS input.accessKey: setAttribute() to "\0" followed by IDL get 
PASS input.accessKey: setAttribute() to null followed by getAttribute() 
PASS input.accessKey: setAttribute() to null followed by IDL get 
PASS input.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS input.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.accessKey: IDL set to "" should not throw 
PASS input.accessKey: IDL set to "" followed by getAttribute() 
PASS input.accessKey: IDL set to "" followed by IDL get 
PASS input.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.accessKey: IDL set to undefined should not throw 
PASS input.accessKey: IDL set to undefined followed by getAttribute() 
PASS input.accessKey: IDL set to undefined followed by IDL get 
PASS input.accessKey: IDL set to 7 should not throw 
PASS input.accessKey: IDL set to 7 followed by getAttribute() 
PASS input.accessKey: IDL set to 7 followed by IDL get 
PASS input.accessKey: IDL set to 1.5 should not throw 
PASS input.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS input.accessKey: IDL set to 1.5 followed by IDL get 
PASS input.accessKey: IDL set to true should not throw 
PASS input.accessKey: IDL set to true followed by getAttribute() 
PASS input.accessKey: IDL set to true followed by IDL get 
PASS input.accessKey: IDL set to false should not throw 
PASS input.accessKey: IDL set to false followed by getAttribute() 
PASS input.accessKey: IDL set to false followed by IDL get 
PASS input.accessKey: IDL set to object "[object Object]" should not throw 
PASS input.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS input.accessKey: IDL set to NaN should not throw 
PASS input.accessKey: IDL set to NaN followed by getAttribute() 
PASS input.accessKey: IDL set to NaN followed by IDL get 
PASS input.accessKey: IDL set to Infinity should not throw 
PASS input.accessKey: IDL set to Infinity followed by getAttribute() 
PASS input.accessKey: IDL set to Infinity followed by IDL get 
PASS input.accessKey: IDL set to -Infinity should not throw 
PASS input.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS input.accessKey: IDL set to -Infinity followed by IDL get 
PASS input.accessKey: IDL set to "\0" should not throw 
PASS input.accessKey: IDL set to "\0" followed by getAttribute() 
PASS input.accessKey: IDL set to "\0" followed by IDL get 
PASS input.accessKey: IDL set to null should not throw 
PASS input.accessKey: IDL set to null followed by getAttribute() 
PASS input.accessKey: IDL set to null followed by IDL get 
PASS input.accessKey: IDL set to object "test-toString" should not throw 
PASS input.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS input.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS input.accessKey: IDL set to object "test-valueOf" should not throw 
PASS input.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS input.tabIndex: typeof IDL attribute 
PASS input.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS input.tabIndex: setAttribute() to -36 followed by IDL get 
PASS input.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS input.tabIndex: setAttribute() to -1 followed by IDL get 
PASS input.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS input.tabIndex: setAttribute() to 0 followed by IDL get 
PASS input.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS input.tabIndex: setAttribute() to 1 followed by IDL get 
PASS input.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL input.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS input.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL input.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS input.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS input.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS input.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS input.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS input.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS input.tabIndex: setAttribute() to "0" followed by IDL get 
PASS input.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS input.tabIndex: setAttribute() to "1" followed by IDL get 
PASS input.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS input.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS input.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS input.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS input.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS input.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS input.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS input.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS input.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS input.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS input.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS input.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS input.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS input.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS input.tabIndex: IDL set to -36 should not throw 
PASS input.tabIndex: IDL set to -36 followed by getAttribute() 
PASS input.tabIndex: IDL set to -36 followed by IDL get 
PASS input.tabIndex: IDL set to -1 should not throw 
PASS input.tabIndex: IDL set to -1 followed by getAttribute() 
PASS input.tabIndex: IDL set to -1 followed by IDL get 
PASS input.tabIndex: IDL set to 0 should not throw 
PASS input.tabIndex: IDL set to 0 followed by getAttribute() 
PASS input.tabIndex: IDL set to 0 followed by IDL get 
PASS input.tabIndex: IDL set to 1 should not throw 
PASS input.tabIndex: IDL set to 1 followed by getAttribute() 
PASS input.tabIndex: IDL set to 1 followed by IDL get 
PASS input.tabIndex: IDL set to 2147483647 should not throw 
PASS input.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL input.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS input.tabIndex: IDL set to -2147483648 should not throw 
PASS input.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL input.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS input.accept: typeof IDL attribute 
PASS input.accept: IDL get with DOM attribute unset 
PASS input.accept: setAttribute() to "" followed by getAttribute() 
PASS input.accept: setAttribute() to "" followed by IDL get 
PASS input.accept: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.accept: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.accept: setAttribute() to undefined followed by getAttribute() 
PASS input.accept: setAttribute() to undefined followed by IDL get 
PASS input.accept: setAttribute() to 7 followed by getAttribute() 
PASS input.accept: setAttribute() to 7 followed by IDL get 
PASS input.accept: setAttribute() to 1.5 followed by getAttribute() 
PASS input.accept: setAttribute() to 1.5 followed by IDL get 
PASS input.accept: setAttribute() to true followed by getAttribute() 
PASS input.accept: setAttribute() to true followed by IDL get 
PASS input.accept: setAttribute() to false followed by getAttribute() 
PASS input.accept: setAttribute() to false followed by IDL get 
PASS input.accept: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.accept: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.accept: setAttribute() to NaN followed by getAttribute() 
PASS input.accept: setAttribute() to NaN followed by IDL get 
PASS input.accept: setAttribute() to Infinity followed by getAttribute() 
PASS input.accept: setAttribute() to Infinity followed by IDL get 
PASS input.accept: setAttribute() to -Infinity followed by getAttribute() 
PASS input.accept: setAttribute() to -Infinity followed by IDL get 
PASS input.accept: setAttribute() to "\0" followed by getAttribute() 
PASS input.accept: setAttribute() to "\0" followed by IDL get 
PASS input.accept: setAttribute() to null followed by getAttribute() 
PASS input.accept: setAttribute() to null followed by IDL get 
PASS input.accept: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.accept: setAttribute() to object "test-toString" followed by IDL get 
PASS input.accept: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.accept: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.accept: IDL set to "" should not throw 
PASS input.accept: IDL set to "" followed by getAttribute() 
PASS input.accept: IDL set to "" followed by IDL get 
PASS input.accept: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.accept: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.accept: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.accept: IDL set to undefined should not throw 
PASS input.accept: IDL set to undefined followed by getAttribute() 
PASS input.accept: IDL set to undefined followed by IDL get 
PASS input.accept: IDL set to 7 should not throw 
PASS input.accept: IDL set to 7 followed by getAttribute() 
PASS input.accept: IDL set to 7 followed by IDL get 
PASS input.accept: IDL set to 1.5 should not throw 
PASS input.accept: IDL set to 1.5 followed by getAttribute() 
PASS input.accept: IDL set to 1.5 followed by IDL get 
PASS input.accept: IDL set to true should not throw 
PASS input.accept: IDL set to true followed by getAttribute() 
PASS input.accept: IDL set to true followed by IDL get 
PASS input.accept: IDL set to false should not throw 
PASS input.accept: IDL set to false followed by getAttribute() 
PASS input.accept: IDL set to false followed by IDL get 
PASS input.accept: IDL set to object "[object Object]" should not throw 
PASS input.accept: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.accept: IDL set to object "[object Object]" followed by IDL get 
PASS input.accept: IDL set to NaN should not throw 
PASS input.accept: IDL set to NaN followed by getAttribute() 
PASS input.accept: IDL set to NaN followed by IDL get 
PASS input.accept: IDL set to Infinity should not throw 
PASS input.accept: IDL set to Infinity followed by getAttribute() 
PASS input.accept: IDL set to Infinity followed by IDL get 
PASS input.accept: IDL set to -Infinity should not throw 
PASS input.accept: IDL set to -Infinity followed by getAttribute() 
PASS input.accept: IDL set to -Infinity followed by IDL get 
PASS input.accept: IDL set to "\0" should not throw 
PASS input.accept: IDL set to "\0" followed by getAttribute() 
PASS input.accept: IDL set to "\0" followed by IDL get 
PASS input.accept: IDL set to null should not throw 
PASS input.accept: IDL set to null followed by getAttribute() 
PASS input.accept: IDL set to null followed by IDL get 
PASS input.accept: IDL set to object "test-toString" should not throw 
PASS input.accept: IDL set to object "test-toString" followed by getAttribute() 
PASS input.accept: IDL set to object "test-toString" followed by IDL get 
PASS input.accept: IDL set to object "test-valueOf" should not throw 
PASS input.accept: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.accept: IDL set to object "test-valueOf" followed by IDL get 
PASS input.alt: typeof IDL attribute 
PASS input.alt: IDL get with DOM attribute unset 
PASS input.alt: setAttribute() to "" followed by getAttribute() 
PASS input.alt: setAttribute() to "" followed by IDL get 
PASS input.alt: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.alt: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.alt: setAttribute() to undefined followed by getAttribute() 
PASS input.alt: setAttribute() to undefined followed by IDL get 
PASS input.alt: setAttribute() to 7 followed by getAttribute() 
PASS input.alt: setAttribute() to 7 followed by IDL get 
PASS input.alt: setAttribute() to 1.5 followed by getAttribute() 
PASS input.alt: setAttribute() to 1.5 followed by IDL get 
PASS input.alt: setAttribute() to true followed by getAttribute() 
PASS input.alt: setAttribute() to true followed by IDL get 
PASS input.alt: setAttribute() to false followed by getAttribute() 
PASS input.alt: setAttribute() to false followed by IDL get 
PASS input.alt: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.alt: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.alt: setAttribute() to NaN followed by getAttribute() 
PASS input.alt: setAttribute() to NaN followed by IDL get 
PASS input.alt: setAttribute() to Infinity followed by getAttribute() 
PASS input.alt: setAttribute() to Infinity followed by IDL get 
PASS input.alt: setAttribute() to -Infinity followed by getAttribute() 
PASS input.alt: setAttribute() to -Infinity followed by IDL get 
PASS input.alt: setAttribute() to "\0" followed by getAttribute() 
PASS input.alt: setAttribute() to "\0" followed by IDL get 
PASS input.alt: setAttribute() to null followed by getAttribute() 
PASS input.alt: setAttribute() to null followed by IDL get 
PASS input.alt: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.alt: setAttribute() to object "test-toString" followed by IDL get 
PASS input.alt: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.alt: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.alt: IDL set to "" should not throw 
PASS input.alt: IDL set to "" followed by getAttribute() 
PASS input.alt: IDL set to "" followed by IDL get 
PASS input.alt: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.alt: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.alt: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.alt: IDL set to undefined should not throw 
PASS input.alt: IDL set to undefined followed by getAttribute() 
PASS input.alt: IDL set to undefined followed by IDL get 
PASS input.alt: IDL set to 7 should not throw 
PASS input.alt: IDL set to 7 followed by getAttribute() 
PASS input.alt: IDL set to 7 followed by IDL get 
PASS input.alt: IDL set to 1.5 should not throw 
PASS input.alt: IDL set to 1.5 followed by getAttribute() 
PASS input.alt: IDL set to 1.5 followed by IDL get 
PASS input.alt: IDL set to true should not throw 
PASS input.alt: IDL set to true followed by getAttribute() 
PASS input.alt: IDL set to true followed by IDL get 
PASS input.alt: IDL set to false should not throw 
PASS input.alt: IDL set to false followed by getAttribute() 
PASS input.alt: IDL set to false followed by IDL get 
PASS input.alt: IDL set to object "[object Object]" should not throw 
PASS input.alt: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.alt: IDL set to object "[object Object]" followed by IDL get 
PASS input.alt: IDL set to NaN should not throw 
PASS input.alt: IDL set to NaN followed by getAttribute() 
PASS input.alt: IDL set to NaN followed by IDL get 
PASS input.alt: IDL set to Infinity should not throw 
PASS input.alt: IDL set to Infinity followed by getAttribute() 
PASS input.alt: IDL set to Infinity followed by IDL get 
PASS input.alt: IDL set to -Infinity should not throw 
PASS input.alt: IDL set to -Infinity followed by getAttribute() 
PASS input.alt: IDL set to -Infinity followed by IDL get 
PASS input.alt: IDL set to "\0" should not throw 
PASS input.alt: IDL set to "\0" followed by getAttribute() 
PASS input.alt: IDL set to "\0" followed by IDL get 
PASS input.alt: IDL set to null should not throw 
PASS input.alt: IDL set to null followed by getAttribute() 
PASS input.alt: IDL set to null followed by IDL get 
PASS input.alt: IDL set to object "test-toString" should not throw 
PASS input.alt: IDL set to object "test-toString" followed by getAttribute() 
PASS input.alt: IDL set to object "test-toString" followed by IDL get 
PASS input.alt: IDL set to object "test-valueOf" should not throw 
PASS input.alt: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.alt: IDL set to object "test-valueOf" followed by IDL get 
PASS input.autofocus: typeof IDL attribute 
PASS input.autofocus: IDL get with DOM attribute unset 
PASS input.autofocus: setAttribute() to "" followed by getAttribute() 
PASS input.autofocus: setAttribute() to "" followed by IDL get 
PASS input.autofocus: setAttribute() to " foo " followed by getAttribute() 
PASS input.autofocus: setAttribute() to " foo " followed by IDL get 
PASS input.autofocus: setAttribute() to undefined followed by getAttribute() 
PASS input.autofocus: setAttribute() to undefined followed by IDL get 
PASS input.autofocus: setAttribute() to null followed by getAttribute() 
PASS input.autofocus: setAttribute() to null followed by IDL get 
PASS input.autofocus: setAttribute() to 7 followed by getAttribute() 
PASS input.autofocus: setAttribute() to 7 followed by IDL get 
PASS input.autofocus: setAttribute() to 1.5 followed by getAttribute() 
PASS input.autofocus: setAttribute() to 1.5 followed by IDL get 
PASS input.autofocus: setAttribute() to true followed by getAttribute() 
PASS input.autofocus: setAttribute() to true followed by IDL get 
PASS input.autofocus: setAttribute() to false followed by getAttribute() 
PASS input.autofocus: setAttribute() to false followed by IDL get 
PASS input.autofocus: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.autofocus: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.autofocus: setAttribute() to NaN followed by getAttribute() 
PASS input.autofocus: setAttribute() to NaN followed by IDL get 
PASS input.autofocus: setAttribute() to Infinity followed by getAttribute() 
PASS input.autofocus: setAttribute() to Infinity followed by IDL get 
PASS input.autofocus: setAttribute() to -Infinity followed by getAttribute() 
PASS input.autofocus: setAttribute() to -Infinity followed by IDL get 
PASS input.autofocus: setAttribute() to "\0" followed by getAttribute() 
PASS input.autofocus: setAttribute() to "\0" followed by IDL get 
PASS input.autofocus: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.autofocus: setAttribute() to object "test-toString" followed by IDL get 
PASS input.autofocus: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.autofocus: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.autofocus: setAttribute() to "autofocus" followed by getAttribute() 
PASS input.autofocus: setAttribute() to "autofocus" followed by IDL get 
PASS input.autofocus: IDL set to "" should not throw 
PASS input.autofocus: IDL set to "" followed by hasAttribute() 
PASS input.autofocus: IDL set to "" followed by IDL get 
PASS input.autofocus: IDL set to " foo " should not throw 
PASS input.autofocus: IDL set to " foo " followed by hasAttribute() 
PASS input.autofocus: IDL set to " foo " followed by IDL get 
PASS input.autofocus: IDL set to undefined should not throw 
PASS input.autofocus: IDL set to undefined followed by hasAttribute() 
PASS input.autofocus: IDL set to undefined followed by IDL get 
PASS input.autofocus: IDL set to null should not throw 
PASS input.autofocus: IDL set to null followed by hasAttribute() 
PASS input.autofocus: IDL set to null followed by IDL get 
PASS input.autofocus: IDL set to 7 should not throw 
PASS input.autofocus: IDL set to 7 followed by hasAttribute() 
PASS input.autofocus: IDL set to 7 followed by IDL get 
PASS input.autofocus: IDL set to 1.5 should not throw 
PASS input.autofocus: IDL set to 1.5 followed by hasAttribute() 
PASS input.autofocus: IDL set to 1.5 followed by IDL get 
PASS input.autofocus: IDL set to true should not throw 
PASS input.autofocus: IDL set to true followed by hasAttribute() 
PASS input.autofocus: IDL set to true followed by IDL get 
PASS input.autofocus: IDL set to false should not throw 
PASS input.autofocus: IDL set to false followed by hasAttribute() 
PASS input.autofocus: IDL set to false followed by IDL get 
PASS input.autofocus: IDL set to object "[object Object]" should not throw 
PASS input.autofocus: IDL set to object "[object Object]" followed by hasAttribute() 
PASS input.autofocus: IDL set to object "[object Object]" followed by IDL get 
PASS input.autofocus: IDL set to NaN should not throw 
PASS input.autofocus: IDL set to NaN followed by hasAttribute() 
PASS input.autofocus: IDL set to NaN followed by IDL get 
PASS input.autofocus: IDL set to Infinity should not throw 
PASS input.autofocus: IDL set to Infinity followed by hasAttribute() 
PASS input.autofocus: IDL set to Infinity followed by IDL get 
PASS input.autofocus: IDL set to -Infinity should not throw 
PASS input.autofocus: IDL set to -Infinity followed by hasAttribute() 
PASS input.autofocus: IDL set to -Infinity followed by IDL get 
PASS input.autofocus: IDL set to "\0" should not throw 
PASS input.autofocus: IDL set to "\0" followed by hasAttribute() 
PASS input.autofocus: IDL set to "\0" followed by IDL get 
PASS input.autofocus: IDL set to object "test-toString" should not throw 
PASS input.autofocus: IDL set to object "test-toString" followed by hasAttribute() 
PASS input.autofocus: IDL set to object "test-toString" followed by IDL get 
PASS input.autofocus: IDL set to object "test-valueOf" should not throw 
PASS input.autofocus: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS input.autofocus: IDL set to object "test-valueOf" followed by IDL get 
PASS input.defaultChecked (<input checked>): typeof IDL attribute 
PASS input.defaultChecked (<input checked>): IDL get with DOM attribute unset 
PASS input.defaultChecked (<input checked>): setAttribute() to "" followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to "" followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to " foo " followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to " foo " followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to undefined followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to undefined followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to null followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to null followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to 7 followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to 7 followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to 1.5 followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to 1.5 followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to true followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to true followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to false followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to false followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to object "[object Object]" followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to NaN followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to NaN followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to Infinity followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to Infinity followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to -Infinity followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to -Infinity followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to "\0" followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to "\0" followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to object "test-toString" followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.defaultChecked (<input checked>): setAttribute() to "checked" followed by getAttribute() 
PASS input.defaultChecked (<input checked>): setAttribute() to "checked" followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to "" should not throw 
PASS input.defaultChecked (<input checked>): IDL set to "" followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to "" followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to " foo " should not throw 
PASS input.defaultChecked (<input checked>): IDL set to " foo " followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to " foo " followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to undefined should not throw 
PASS input.defaultChecked (<input checked>): IDL set to undefined followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to undefined followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to null should not throw 
PASS input.defaultChecked (<input checked>): IDL set to null followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to null followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to 7 should not throw 
PASS input.defaultChecked (<input checked>): IDL set to 7 followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to 7 followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to 1.5 should not throw 
PASS input.defaultChecked (<input checked>): IDL set to 1.5 followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to 1.5 followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to true should not throw 
PASS input.defaultChecked (<input checked>): IDL set to true followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to true followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to false should not throw 
PASS input.defaultChecked (<input checked>): IDL set to false followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to false followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to object "[object Object]" should not throw 
PASS input.defaultChecked (<input checked>): IDL set to object "[object Object]" followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to object "[object Object]" followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to NaN should not throw 
PASS input.defaultChecked (<input checked>): IDL set to NaN followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to NaN followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to Infinity should not throw 
PASS input.defaultChecked (<input checked>): IDL set to Infinity followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to Infinity followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to -Infinity should not throw 
PASS input.defaultChecked (<input checked>): IDL set to -Infinity followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to -Infinity followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to "\0" should not throw 
PASS input.defaultChecked (<input checked>): IDL set to "\0" followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to "\0" followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to object "test-toString" should not throw 
PASS input.defaultChecked (<input checked>): IDL set to object "test-toString" followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to object "test-toString" followed by IDL get 
PASS input.defaultChecked (<input checked>): IDL set to object "test-valueOf" should not throw 
PASS input.defaultChecked (<input checked>): IDL set to object "test-valueOf" followed by hasAttribute() 
PASS input.defaultChecked (<input checked>): IDL set to object "test-valueOf" followed by IDL get 
PASS input.dirName: typeof IDL attribute 
PASS input.dirName: IDL get with DOM attribute unset 
PASS input.dirName: setAttribute() to "" followed by getAttribute() 
PASS input.dirName: setAttribute() to "" followed by IDL get 
PASS input.dirName: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.dirName: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.dirName: setAttribute() to undefined followed by getAttribute() 
PASS input.dirName: setAttribute() to undefined followed by IDL get 
PASS input.dirName: setAttribute() to 7 followed by getAttribute() 
PASS input.dirName: setAttribute() to 7 followed by IDL get 
PASS input.dirName: setAttribute() to 1.5 followed by getAttribute() 
PASS input.dirName: setAttribute() to 1.5 followed by IDL get 
PASS input.dirName: setAttribute() to true followed by getAttribute() 
PASS input.dirName: setAttribute() to true followed by IDL get 
PASS input.dirName: setAttribute() to false followed by getAttribute() 
PASS input.dirName: setAttribute() to false followed by IDL get 
PASS input.dirName: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.dirName: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.dirName: setAttribute() to NaN followed by getAttribute() 
PASS input.dirName: setAttribute() to NaN followed by IDL get 
PASS input.dirName: setAttribute() to Infinity followed by getAttribute() 
PASS input.dirName: setAttribute() to Infinity followed by IDL get 
PASS input.dirName: setAttribute() to -Infinity followed by getAttribute() 
PASS input.dirName: setAttribute() to -Infinity followed by IDL get 
PASS input.dirName: setAttribute() to "\0" followed by getAttribute() 
PASS input.dirName: setAttribute() to "\0" followed by IDL get 
PASS input.dirName: setAttribute() to null followed by getAttribute() 
PASS input.dirName: setAttribute() to null followed by IDL get 
PASS input.dirName: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.dirName: setAttribute() to object "test-toString" followed by IDL get 
PASS input.dirName: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.dirName: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.dirName: IDL set to "" should not throw 
PASS input.dirName: IDL set to "" followed by getAttribute() 
PASS input.dirName: IDL set to "" followed by IDL get 
PASS input.dirName: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.dirName: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.dirName: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.dirName: IDL set to undefined should not throw 
PASS input.dirName: IDL set to undefined followed by getAttribute() 
PASS input.dirName: IDL set to undefined followed by IDL get 
PASS input.dirName: IDL set to 7 should not throw 
PASS input.dirName: IDL set to 7 followed by getAttribute() 
PASS input.dirName: IDL set to 7 followed by IDL get 
PASS input.dirName: IDL set to 1.5 should not throw 
PASS input.dirName: IDL set to 1.5 followed by getAttribute() 
PASS input.dirName: IDL set to 1.5 followed by IDL get 
PASS input.dirName: IDL set to true should not throw 
PASS input.dirName: IDL set to true followed by getAttribute() 
PASS input.dirName: IDL set to true followed by IDL get 
PASS input.dirName: IDL set to false should not throw 
PASS input.dirName: IDL set to false followed by getAttribute() 
PASS input.dirName: IDL set to false followed by IDL get 
PASS input.dirName: IDL set to object "[object Object]" should not throw 
PASS input.dirName: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.dirName: IDL set to object "[object Object]" followed by IDL get 
PASS input.dirName: IDL set to NaN should not throw 
PASS input.dirName: IDL set to NaN followed by getAttribute() 
PASS input.dirName: IDL set to NaN followed by IDL get 
PASS input.dirName: IDL set to Infinity should not throw 
PASS input.dirName: IDL set to Infinity followed by getAttribute() 
PASS input.dirName: IDL set to Infinity followed by IDL get 
PASS input.dirName: IDL set to -Infinity should not throw 
PASS input.dirName: IDL set to -Infinity followed by getAttribute() 
PASS input.dirName: IDL set to -Infinity followed by IDL get 
PASS input.dirName: IDL set to "\0" should not throw 
PASS input.dirName: IDL set to "\0" followed by getAttribute() 
PASS input.dirName: IDL set to "\0" followed by IDL get 
PASS input.dirName: IDL set to null should not throw 
PASS input.dirName: IDL set to null followed by getAttribute() 
PASS input.dirName: IDL set to null followed by IDL get 
PASS input.dirName: IDL set to object "test-toString" should not throw 
PASS input.dirName: IDL set to object "test-toString" followed by getAttribute() 
PASS input.dirName: IDL set to object "test-toString" followed by IDL get 
PASS input.dirName: IDL set to object "test-valueOf" should not throw 
PASS input.dirName: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.dirName: IDL set to object "test-valueOf" followed by IDL get 
PASS input.disabled: typeof IDL attribute 
PASS input.disabled: IDL get with DOM attribute unset 
PASS input.disabled: setAttribute() to "" followed by getAttribute() 
PASS input.disabled: setAttribute() to "" followed by IDL get 
PASS input.disabled: setAttribute() to " foo " followed by getAttribute() 
PASS input.disabled: setAttribute() to " foo " followed by IDL get 
PASS input.disabled: setAttribute() to undefined followed by getAttribute() 
PASS input.disabled: setAttribute() to undefined followed by IDL get 
PASS input.disabled: setAttribute() to null followed by getAttribute() 
PASS input.disabled: setAttribute() to null followed by IDL get 
PASS input.disabled: setAttribute() to 7 followed by getAttribute() 
PASS input.disabled: setAttribute() to 7 followed by IDL get 
PASS input.disabled: setAttribute() to 1.5 followed by getAttribute() 
PASS input.disabled: setAttribute() to 1.5 followed by IDL get 
PASS input.disabled: setAttribute() to true followed by getAttribute() 
PASS input.disabled: setAttribute() to true followed by IDL get 
PASS input.disabled: setAttribute() to false followed by getAttribute() 
PASS input.disabled: setAttribute() to false followed by IDL get 
PASS input.disabled: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.disabled: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.disabled: setAttribute() to NaN followed by getAttribute() 
PASS input.disabled: setAttribute() to NaN followed by IDL get 
PASS input.disabled: setAttribute() to Infinity followed by getAttribute() 
PASS input.disabled: setAttribute() to Infinity followed by IDL get 
PASS input.disabled: setAttribute() to -Infinity followed by getAttribute() 
PASS input.disabled: setAttribute() to -Infinity followed by IDL get 
PASS input.disabled: setAttribute() to "\0" followed by getAttribute() 
PASS input.disabled: setAttribute() to "\0" followed by IDL get 
PASS input.disabled: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.disabled: setAttribute() to object "test-toString" followed by IDL get 
PASS input.disabled: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.disabled: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.disabled: setAttribute() to "disabled" followed by getAttribute() 
PASS input.disabled: setAttribute() to "disabled" followed by IDL get 
PASS input.disabled: IDL set to "" should not throw 
PASS input.disabled: IDL set to "" followed by hasAttribute() 
PASS input.disabled: IDL set to "" followed by IDL get 
PASS input.disabled: IDL set to " foo " should not throw 
PASS input.disabled: IDL set to " foo " followed by hasAttribute() 
PASS input.disabled: IDL set to " foo " followed by IDL get 
PASS input.disabled: IDL set to undefined should not throw 
PASS input.disabled: IDL set to undefined followed by hasAttribute() 
PASS input.disabled: IDL set to undefined followed by IDL get 
PASS input.disabled: IDL set to null should not throw 
PASS input.disabled: IDL set to null followed by hasAttribute() 
PASS input.disabled: IDL set to null followed by IDL get 
PASS input.disabled: IDL set to 7 should not throw 
PASS input.disabled: IDL set to 7 followed by hasAttribute() 
PASS input.disabled: IDL set to 7 followed by IDL get 
PASS input.disabled: IDL set to 1.5 should not throw 
PASS input.disabled: IDL set to 1.5 followed by hasAttribute() 
PASS input.disabled: IDL set to 1.5 followed by IDL get 
PASS input.disabled: IDL set to true should not throw 
PASS input.disabled: IDL set to true followed by hasAttribute() 
PASS input.disabled: IDL set to true followed by IDL get 
PASS input.disabled: IDL set to false should not throw 
PASS input.disabled: IDL set to false followed by hasAttribute() 
PASS input.disabled: IDL set to false followed by IDL get 
PASS input.disabled: IDL set to object "[object Object]" should not throw 
PASS input.disabled: IDL set to object "[object Object]" followed by hasAttribute() 
PASS input.disabled: IDL set to object "[object Object]" followed by IDL get 
PASS input.disabled: IDL set to NaN should not throw 
PASS input.disabled: IDL set to NaN followed by hasAttribute() 
PASS input.disabled: IDL set to NaN followed by IDL get 
PASS input.disabled: IDL set to Infinity should not throw 
PASS input.disabled: IDL set to Infinity followed by hasAttribute() 
PASS input.disabled: IDL set to Infinity followed by IDL get 
PASS input.disabled: IDL set to -Infinity should not throw 
PASS input.disabled: IDL set to -Infinity followed by hasAttribute() 
PASS input.disabled: IDL set to -Infinity followed by IDL get 
PASS input.disabled: IDL set to "\0" should not throw 
PASS input.disabled: IDL set to "\0" followed by hasAttribute() 
PASS input.disabled: IDL set to "\0" followed by IDL get 
PASS input.disabled: IDL set to object "test-toString" should not throw 
PASS input.disabled: IDL set to object "test-toString" followed by hasAttribute() 
PASS input.disabled: IDL set to object "test-toString" followed by IDL get 
PASS input.disabled: IDL set to object "test-valueOf" should not throw 
PASS input.disabled: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS input.disabled: IDL set to object "test-valueOf" followed by IDL get 
PASS input.formEnctype: typeof IDL attribute 
PASS input.formEnctype: IDL get with DOM attribute unset 
PASS input.formEnctype: setAttribute() to "" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "" followed by IDL get 
PASS input.formEnctype: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.formEnctype: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.formEnctype: setAttribute() to undefined followed by getAttribute() 
PASS input.formEnctype: setAttribute() to undefined followed by IDL get 
PASS input.formEnctype: setAttribute() to 7 followed by getAttribute() 
PASS input.formEnctype: setAttribute() to 7 followed by IDL get 
PASS input.formEnctype: setAttribute() to 1.5 followed by getAttribute() 
PASS input.formEnctype: setAttribute() to 1.5 followed by IDL get 
PASS input.formEnctype: setAttribute() to true followed by getAttribute() 
PASS input.formEnctype: setAttribute() to true followed by IDL get 
PASS input.formEnctype: setAttribute() to false followed by getAttribute() 
PASS input.formEnctype: setAttribute() to false followed by IDL get 
PASS input.formEnctype: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.formEnctype: setAttribute() to NaN followed by getAttribute() 
PASS input.formEnctype: setAttribute() to NaN followed by IDL get 
PASS input.formEnctype: setAttribute() to Infinity followed by getAttribute() 
PASS input.formEnctype: setAttribute() to Infinity followed by IDL get 
PASS input.formEnctype: setAttribute() to -Infinity followed by getAttribute() 
PASS input.formEnctype: setAttribute() to -Infinity followed by IDL get 
PASS input.formEnctype: setAttribute() to "\0" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "\0" followed by IDL get 
PASS input.formEnctype: setAttribute() to null followed by getAttribute() 
PASS input.formEnctype: setAttribute() to null followed by IDL get 
PASS input.formEnctype: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to object "test-toString" followed by IDL get 
PASS input.formEnctype: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.formEnctype: setAttribute() to "application/x-www-form-urlencoded" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "application/x-www-form-urlencoded" followed by IDL get 
PASS input.formEnctype: setAttribute() to "xapplication/x-www-form-urlencoded" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "xapplication/x-www-form-urlencoded" followed by IDL get 
PASS input.formEnctype: setAttribute() to "application/x-www-form-urlencoded\0" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "application/x-www-form-urlencoded\0" followed by IDL get 
PASS input.formEnctype: setAttribute() to "pplication/x-www-form-urlencoded" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "pplication/x-www-form-urlencoded" followed by IDL get 
PASS input.formEnctype: setAttribute() to "APPLICATION/X-WWW-FORM-URLENCODED" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "APPLICATION/X-WWW-FORM-URLENCODED" followed by IDL get 
PASS input.formEnctype: setAttribute() to "multipart/form-data" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "multipart/form-data" followed by IDL get 
PASS input.formEnctype: setAttribute() to "xmultipart/form-data" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "xmultipart/form-data" followed by IDL get 
PASS input.formEnctype: setAttribute() to "multipart/form-data\0" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "multipart/form-data\0" followed by IDL get 
PASS input.formEnctype: setAttribute() to "ultipart/form-data" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "ultipart/form-data" followed by IDL get 
PASS input.formEnctype: setAttribute() to "MULTIPART/FORM-DATA" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "MULTIPART/FORM-DATA" followed by IDL get 
PASS input.formEnctype: setAttribute() to "text/plain" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "text/plain" followed by IDL get 
PASS input.formEnctype: setAttribute() to "xtext/plain" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "xtext/plain" followed by IDL get 
PASS input.formEnctype: setAttribute() to "text/plain\0" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "text/plain\0" followed by IDL get 
PASS input.formEnctype: setAttribute() to "ext/plain" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "ext/plain" followed by IDL get 
PASS input.formEnctype: setAttribute() to "TEXT/PLAIN" followed by getAttribute() 
PASS input.formEnctype: setAttribute() to "TEXT/PLAIN" followed by IDL get 
PASS input.formEnctype: IDL set to "" should not throw 
PASS input.formEnctype: IDL set to "" followed by getAttribute() 
PASS input.formEnctype: IDL set to "" followed by IDL get 
PASS input.formEnctype: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.formEnctype: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.formEnctype: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.formEnctype: IDL set to undefined should not throw 
PASS input.formEnctype: IDL set to undefined followed by getAttribute() 
PASS input.formEnctype: IDL set to undefined followed by IDL get 
PASS input.formEnctype: IDL set to 7 should not throw 
PASS input.formEnctype: IDL set to 7 followed by getAttribute() 
PASS input.formEnctype: IDL set to 7 followed by IDL get 
PASS input.formEnctype: IDL set to 1.5 should not throw 
PASS input.formEnctype: IDL set to 1.5 followed by getAttribute() 
PASS input.formEnctype: IDL set to 1.5 followed by IDL get 
PASS input.formEnctype: IDL set to true should not throw 
PASS input.formEnctype: IDL set to true followed by getAttribute() 
PASS input.formEnctype: IDL set to true followed by IDL get 
PASS input.formEnctype: IDL set to false should not throw 
PASS input.formEnctype: IDL set to false followed by getAttribute() 
PASS input.formEnctype: IDL set to false followed by IDL get 
PASS input.formEnctype: IDL set to object "[object Object]" should not throw 
PASS input.formEnctype: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.formEnctype: IDL set to object "[object Object]" followed by IDL get 
PASS input.formEnctype: IDL set to NaN should not throw 
PASS input.formEnctype: IDL set to NaN followed by getAttribute() 
PASS input.formEnctype: IDL set to NaN followed by IDL get 
PASS input.formEnctype: IDL set to Infinity should not throw 
PASS input.formEnctype: IDL set to Infinity followed by getAttribute() 
PASS input.formEnctype: IDL set to Infinity followed by IDL get 
PASS input.formEnctype: IDL set to -Infinity should not throw 
PASS input.formEnctype: IDL set to -Infinity followed by getAttribute() 
PASS input.formEnctype: IDL set to -Infinity followed by IDL get 
PASS input.formEnctype: IDL set to "\0" should not throw 
PASS input.formEnctype: IDL set to "\0" followed by getAttribute() 
PASS input.formEnctype: IDL set to "\0" followed by IDL get 
PASS input.formEnctype: IDL set to null should not throw 
FAIL input.formEnctype: IDL set to null followed by IDL get assert_equals: expected "application/x-www-form-urlencoded" but got ""
PASS input.formEnctype: IDL set to object "test-toString" should not throw 
PASS input.formEnctype: IDL set to object "test-toString" followed by getAttribute() 
PASS input.formEnctype: IDL set to object "test-toString" followed by IDL get 
PASS input.formEnctype: IDL set to object "test-valueOf" should not throw 
PASS input.formEnctype: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.formEnctype: IDL set to object "test-valueOf" followed by IDL get 
PASS input.formEnctype: IDL set to "application/x-www-form-urlencoded" should not throw 
PASS input.formEnctype: IDL set to "application/x-www-form-urlencoded" followed by getAttribute() 
PASS input.formEnctype: IDL set to "application/x-www-form-urlencoded" followed by IDL get 
PASS input.formEnctype: IDL set to "xapplication/x-www-form-urlencoded" should not throw 
PASS input.formEnctype: IDL set to "xapplication/x-www-form-urlencoded" followed by getAttribute() 
PASS input.formEnctype: IDL set to "xapplication/x-www-form-urlencoded" followed by IDL get 
PASS input.formEnctype: IDL set to "application/x-www-form-urlencoded\0" should not throw 
PASS input.formEnctype: IDL set to "application/x-www-form-urlencoded\0" followed by getAttribute() 
PASS input.formEnctype: IDL set to "application/x-www-form-urlencoded\0" followed by IDL get 
PASS input.formEnctype: IDL set to "pplication/x-www-form-urlencoded" should not throw 
PASS input.formEnctype: IDL set to "pplication/x-www-form-urlencoded" followed by getAttribute() 
PASS input.formEnctype: IDL set to "pplication/x-www-form-urlencoded" followed by IDL get 
PASS input.formEnctype: IDL set to "APPLICATION/X-WWW-FORM-URLENCODED" should not throw 
PASS input.formEnctype: IDL set to "APPLICATION/X-WWW-FORM-URLENCODED" followed by getAttribute() 
PASS input.formEnctype: IDL set to "APPLICATION/X-WWW-FORM-URLENCODED" followed by IDL get 
PASS input.formEnctype: IDL set to "multipart/form-data" should not throw 
PASS input.formEnctype: IDL set to "multipart/form-data" followed by getAttribute() 
PASS input.formEnctype: IDL set to "multipart/form-data" followed by IDL get 
PASS input.formEnctype: IDL set to "xmultipart/form-data" should not throw 
PASS input.formEnctype: IDL set to "xmultipart/form-data" followed by getAttribute() 
PASS input.formEnctype: IDL set to "xmultipart/form-data" followed by IDL get 
PASS input.formEnctype: IDL set to "multipart/form-data\0" should not throw 
PASS input.formEnctype: IDL set to "multipart/form-data\0" followed by getAttribute() 
PASS input.formEnctype: IDL set to "multipart/form-data\0" followed by IDL get 
PASS input.formEnctype: IDL set to "ultipart/form-data" should not throw 
PASS input.formEnctype: IDL set to "ultipart/form-data" followed by getAttribute() 
PASS input.formEnctype: IDL set to "ultipart/form-data" followed by IDL get 
PASS input.formEnctype: IDL set to "MULTIPART/FORM-DATA" should not throw 
PASS input.formEnctype: IDL set to "MULTIPART/FORM-DATA" followed by getAttribute() 
PASS input.formEnctype: IDL set to "MULTIPART/FORM-DATA" followed by IDL get 
PASS input.formEnctype: IDL set to "text/plain" should not throw 
PASS input.formEnctype: IDL set to "text/plain" followed by getAttribute() 
PASS input.formEnctype: IDL set to "text/plain" followed by IDL get 
PASS input.formEnctype: IDL set to "xtext/plain" should not throw 
PASS input.formEnctype: IDL set to "xtext/plain" followed by getAttribute() 
PASS input.formEnctype: IDL set to "xtext/plain" followed by IDL get 
PASS input.formEnctype: IDL set to "text/plain\0" should not throw 
PASS input.formEnctype: IDL set to "text/plain\0" followed by getAttribute() 
PASS input.formEnctype: IDL set to "text/plain\0" followed by IDL get 
PASS input.formEnctype: IDL set to "ext/plain" should not throw 
PASS input.formEnctype: IDL set to "ext/plain" followed by getAttribute() 
PASS input.formEnctype: IDL set to "ext/plain" followed by IDL get 
PASS input.formEnctype: IDL set to "TEXT/PLAIN" should not throw 
PASS input.formEnctype: IDL set to "TEXT/PLAIN" followed by getAttribute() 
PASS input.formEnctype: IDL set to "TEXT/PLAIN" followed by IDL get 
PASS input.formMethod: typeof IDL attribute 
PASS input.formMethod: IDL get with DOM attribute unset 
PASS input.formMethod: setAttribute() to "" followed by getAttribute() 
PASS input.formMethod: setAttribute() to "" followed by IDL get 
PASS input.formMethod: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.formMethod: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.formMethod: setAttribute() to undefined followed by getAttribute() 
PASS input.formMethod: setAttribute() to undefined followed by IDL get 
PASS input.formMethod: setAttribute() to 7 followed by getAttribute() 
PASS input.formMethod: setAttribute() to 7 followed by IDL get 
PASS input.formMethod: setAttribute() to 1.5 followed by getAttribute() 
PASS input.formMethod: setAttribute() to 1.5 followed by IDL get 
PASS input.formMethod: setAttribute() to true followed by getAttribute() 
PASS input.formMethod: setAttribute() to true followed by IDL get 
PASS input.formMethod: setAttribute() to false followed by getAttribute() 
PASS input.formMethod: setAttribute() to false followed by IDL get 
PASS input.formMethod: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.formMethod: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.formMethod: setAttribute() to NaN followed by getAttribute() 
PASS input.formMethod: setAttribute() to NaN followed by IDL get 
PASS input.formMethod: setAttribute() to Infinity followed by getAttribute() 
PASS input.formMethod: setAttribute() to Infinity followed by IDL get 
PASS input.formMethod: setAttribute() to -Infinity followed by getAttribute() 
PASS input.formMethod: setAttribute() to -Infinity followed by IDL get 
PASS input.formMethod: setAttribute() to "\0" followed by getAttribute() 
PASS input.formMethod: setAttribute() to "\0" followed by IDL get 
PASS input.formMethod: setAttribute() to null followed by getAttribute() 
PASS input.formMethod: setAttribute() to null followed by IDL get 
PASS input.formMethod: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.formMethod: setAttribute() to object "test-toString" followed by IDL get 
PASS input.formMethod: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.formMethod: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.formMethod: setAttribute() to "get" followed by getAttribute() 
PASS input.formMethod: setAttribute() to "get" followed by IDL get 
PASS input.formMethod: setAttribute() to "xget" followed by getAttribute() 
PASS input.formMethod: setAttribute() to "xget" followed by IDL get 
PASS input.formMethod: setAttribute() to "get\0" followed by getAttribute() 
PASS input.formMethod: setAttribute() to "get\0" followed by IDL get 
PASS input.formMethod: setAttribute() to "et" followed by getAttribute() 
PASS input.formMethod: setAttribute() to "et" followed by IDL get 
PASS input.formMethod: setAttribute() to "GET" followed by getAttribute() 
PASS input.formMethod: setAttribute() to "GET" followed by IDL get 
PASS input.formMethod: setAttribute() to "post" followed by getAttribute() 
PASS input.formMethod: setAttribute() to "post" followed by IDL get 
PASS input.formMethod: setAttribute() to "xpost" followed by getAttribute() 
PASS input.formMethod: setAttribute() to "xpost" followed by IDL get 
PASS input.formMethod: setAttribute() to "post\0" followed by getAttribute() 
PASS input.formMethod: setAttribute() to "post\0" followed by IDL get 
PASS input.formMethod: setAttribute() to "ost" followed by getAttribute() 
PASS input.formMethod: setAttribute() to "ost" followed by IDL get 
PASS input.formMethod: setAttribute() to "POST" followed by getAttribute() 
PASS input.formMethod: setAttribute() to "POST" followed by IDL get 
PASS input.formMethod: IDL set to "" should not throw 
PASS input.formMethod: IDL set to "" followed by getAttribute() 
PASS input.formMethod: IDL set to "" followed by IDL get 
PASS input.formMethod: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.formMethod: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.formMethod: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.formMethod: IDL set to undefined should not throw 
PASS input.formMethod: IDL set to undefined followed by getAttribute() 
PASS input.formMethod: IDL set to undefined followed by IDL get 
PASS input.formMethod: IDL set to 7 should not throw 
PASS input.formMethod: IDL set to 7 followed by getAttribute() 
PASS input.formMethod: IDL set to 7 followed by IDL get 
PASS input.formMethod: IDL set to 1.5 should not throw 
PASS input.formMethod: IDL set to 1.5 followed by getAttribute() 
PASS input.formMethod: IDL set to 1.5 followed by IDL get 
PASS input.formMethod: IDL set to true should not throw 
PASS input.formMethod: IDL set to true followed by getAttribute() 
PASS input.formMethod: IDL set to true followed by IDL get 
PASS input.formMethod: IDL set to false should not throw 
PASS input.formMethod: IDL set to false followed by getAttribute() 
PASS input.formMethod: IDL set to false followed by IDL get 
PASS input.formMethod: IDL set to object "[object Object]" should not throw 
PASS input.formMethod: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.formMethod: IDL set to object "[object Object]" followed by IDL get 
PASS input.formMethod: IDL set to NaN should not throw 
PASS input.formMethod: IDL set to NaN followed by getAttribute() 
PASS input.formMethod: IDL set to NaN followed by IDL get 
PASS input.formMethod: IDL set to Infinity should not throw 
PASS input.formMethod: IDL set to Infinity followed by getAttribute() 
PASS input.formMethod: IDL set to Infinity followed by IDL get 
PASS input.formMethod: IDL set to -Infinity should not throw 
PASS input.formMethod: IDL set to -Infinity followed by getAttribute() 
PASS input.formMethod: IDL set to -Infinity followed by IDL get 
PASS input.formMethod: IDL set to "\0" should not throw 
PASS input.formMethod: IDL set to "\0" followed by getAttribute() 
PASS input.formMethod: IDL set to "\0" followed by IDL get 
PASS input.formMethod: IDL set to null should not throw 
FAIL input.formMethod: IDL set to null followed by IDL get assert_equals: expected "get" but got ""
PASS input.formMethod: IDL set to object "test-toString" should not throw 
PASS input.formMethod: IDL set to object "test-toString" followed by getAttribute() 
PASS input.formMethod: IDL set to object "test-toString" followed by IDL get 
PASS input.formMethod: IDL set to object "test-valueOf" should not throw 
PASS input.formMethod: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.formMethod: IDL set to object "test-valueOf" followed by IDL get 
PASS input.formMethod: IDL set to "get" should not throw 
PASS input.formMethod: IDL set to "get" followed by getAttribute() 
PASS input.formMethod: IDL set to "get" followed by IDL get 
PASS input.formMethod: IDL set to "xget" should not throw 
PASS input.formMethod: IDL set to "xget" followed by getAttribute() 
PASS input.formMethod: IDL set to "xget" followed by IDL get 
PASS input.formMethod: IDL set to "get\0" should not throw 
PASS input.formMethod: IDL set to "get\0" followed by getAttribute() 
PASS input.formMethod: IDL set to "get\0" followed by IDL get 
PASS input.formMethod: IDL set to "et" should not throw 
PASS input.formMethod: IDL set to "et" followed by getAttribute() 
PASS input.formMethod: IDL set to "et" followed by IDL get 
PASS input.formMethod: IDL set to "GET" should not throw 
PASS input.formMethod: IDL set to "GET" followed by getAttribute() 
PASS input.formMethod: IDL set to "GET" followed by IDL get 
PASS input.formMethod: IDL set to "post" should not throw 
PASS input.formMethod: IDL set to "post" followed by getAttribute() 
PASS input.formMethod: IDL set to "post" followed by IDL get 
PASS input.formMethod: IDL set to "xpost" should not throw 
PASS input.formMethod: IDL set to "xpost" followed by getAttribute() 
PASS input.formMethod: IDL set to "xpost" followed by IDL get 
PASS input.formMethod: IDL set to "post\0" should not throw 
PASS input.formMethod: IDL set to "post\0" followed by getAttribute() 
PASS input.formMethod: IDL set to "post\0" followed by IDL get 
PASS input.formMethod: IDL set to "ost" should not throw 
PASS input.formMethod: IDL set to "ost" followed by getAttribute() 
PASS input.formMethod: IDL set to "ost" followed by IDL get 
PASS input.formMethod: IDL set to "POST" should not throw 
PASS input.formMethod: IDL set to "POST" followed by getAttribute() 
PASS input.formMethod: IDL set to "POST" followed by IDL get 
PASS input.formNoValidate: typeof IDL attribute 
PASS input.formNoValidate: IDL get with DOM attribute unset 
PASS input.formNoValidate: setAttribute() to "" followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to "" followed by IDL get 
PASS input.formNoValidate: setAttribute() to " foo " followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to " foo " followed by IDL get 
PASS input.formNoValidate: setAttribute() to undefined followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to undefined followed by IDL get 
PASS input.formNoValidate: setAttribute() to null followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to null followed by IDL get 
PASS input.formNoValidate: setAttribute() to 7 followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to 7 followed by IDL get 
PASS input.formNoValidate: setAttribute() to 1.5 followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to 1.5 followed by IDL get 
PASS input.formNoValidate: setAttribute() to true followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to true followed by IDL get 
PASS input.formNoValidate: setAttribute() to false followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to false followed by IDL get 
PASS input.formNoValidate: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.formNoValidate: setAttribute() to NaN followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to NaN followed by IDL get 
PASS input.formNoValidate: setAttribute() to Infinity followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to Infinity followed by IDL get 
PASS input.formNoValidate: setAttribute() to -Infinity followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to -Infinity followed by IDL get 
PASS input.formNoValidate: setAttribute() to "\0" followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to "\0" followed by IDL get 
PASS input.formNoValidate: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to object "test-toString" followed by IDL get 
PASS input.formNoValidate: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.formNoValidate: setAttribute() to "formNoValidate" followed by getAttribute() 
PASS input.formNoValidate: setAttribute() to "formNoValidate" followed by IDL get 
PASS input.formNoValidate: IDL set to "" should not throw 
PASS input.formNoValidate: IDL set to "" followed by hasAttribute() 
PASS input.formNoValidate: IDL set to "" followed by IDL get 
PASS input.formNoValidate: IDL set to " foo " should not throw 
PASS input.formNoValidate: IDL set to " foo " followed by hasAttribute() 
PASS input.formNoValidate: IDL set to " foo " followed by IDL get 
PASS input.formNoValidate: IDL set to undefined should not throw 
PASS input.formNoValidate: IDL set to undefined followed by hasAttribute() 
PASS input.formNoValidate: IDL set to undefined followed by IDL get 
PASS input.formNoValidate: IDL set to null should not throw 
PASS input.formNoValidate: IDL set to null followed by hasAttribute() 
PASS input.formNoValidate: IDL set to null followed by IDL get 
PASS input.formNoValidate: IDL set to 7 should not throw 
PASS input.formNoValidate: IDL set to 7 followed by hasAttribute() 
PASS input.formNoValidate: IDL set to 7 followed by IDL get 
PASS input.formNoValidate: IDL set to 1.5 should not throw 
PASS input.formNoValidate: IDL set to 1.5 followed by hasAttribute() 
PASS input.formNoValidate: IDL set to 1.5 followed by IDL get 
PASS input.formNoValidate: IDL set to true should not throw 
PASS input.formNoValidate: IDL set to true followed by hasAttribute() 
PASS input.formNoValidate: IDL set to true followed by IDL get 
PASS input.formNoValidate: IDL set to false should not throw 
PASS input.formNoValidate: IDL set to false followed by hasAttribute() 
PASS input.formNoValidate: IDL set to false followed by IDL get 
PASS input.formNoValidate: IDL set to object "[object Object]" should not throw 
PASS input.formNoValidate: IDL set to object "[object Object]" followed by hasAttribute() 
PASS input.formNoValidate: IDL set to object "[object Object]" followed by IDL get 
PASS input.formNoValidate: IDL set to NaN should not throw 
PASS input.formNoValidate: IDL set to NaN followed by hasAttribute() 
PASS input.formNoValidate: IDL set to NaN followed by IDL get 
PASS input.formNoValidate: IDL set to Infinity should not throw 
PASS input.formNoValidate: IDL set to Infinity followed by hasAttribute() 
PASS input.formNoValidate: IDL set to Infinity followed by IDL get 
PASS input.formNoValidate: IDL set to -Infinity should not throw 
PASS input.formNoValidate: IDL set to -Infinity followed by hasAttribute() 
PASS input.formNoValidate: IDL set to -Infinity followed by IDL get 
PASS input.formNoValidate: IDL set to "\0" should not throw 
PASS input.formNoValidate: IDL set to "\0" followed by hasAttribute() 
PASS input.formNoValidate: IDL set to "\0" followed by IDL get 
PASS input.formNoValidate: IDL set to object "test-toString" should not throw 
PASS input.formNoValidate: IDL set to object "test-toString" followed by hasAttribute() 
PASS input.formNoValidate: IDL set to object "test-toString" followed by IDL get 
PASS input.formNoValidate: IDL set to object "test-valueOf" should not throw 
PASS input.formNoValidate: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS input.formNoValidate: IDL set to object "test-valueOf" followed by IDL get 
PASS input.formTarget: typeof IDL attribute 
PASS input.formTarget: IDL get with DOM attribute unset 
PASS input.formTarget: setAttribute() to "" followed by getAttribute() 
PASS input.formTarget: setAttribute() to "" followed by IDL get 
PASS input.formTarget: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.formTarget: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.formTarget: setAttribute() to undefined followed by getAttribute() 
PASS input.formTarget: setAttribute() to undefined followed by IDL get 
PASS input.formTarget: setAttribute() to 7 followed by getAttribute() 
PASS input.formTarget: setAttribute() to 7 followed by IDL get 
PASS input.formTarget: setAttribute() to 1.5 followed by getAttribute() 
PASS input.formTarget: setAttribute() to 1.5 followed by IDL get 
PASS input.formTarget: setAttribute() to true followed by getAttribute() 
PASS input.formTarget: setAttribute() to true followed by IDL get 
PASS input.formTarget: setAttribute() to false followed by getAttribute() 
PASS input.formTarget: setAttribute() to false followed by IDL get 
PASS input.formTarget: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.formTarget: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.formTarget: setAttribute() to NaN followed by getAttribute() 
PASS input.formTarget: setAttribute() to NaN followed by IDL get 
PASS input.formTarget: setAttribute() to Infinity followed by getAttribute() 
PASS input.formTarget: setAttribute() to Infinity followed by IDL get 
PASS input.formTarget: setAttribute() to -Infinity followed by getAttribute() 
PASS input.formTarget: setAttribute() to -Infinity followed by IDL get 
PASS input.formTarget: setAttribute() to "\0" followed by getAttribute() 
PASS input.formTarget: setAttribute() to "\0" followed by IDL get 
PASS input.formTarget: setAttribute() to null followed by getAttribute() 
PASS input.formTarget: setAttribute() to null followed by IDL get 
PASS input.formTarget: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.formTarget: setAttribute() to object "test-toString" followed by IDL get 
PASS input.formTarget: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.formTarget: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.formTarget: IDL set to "" should not throw 
PASS input.formTarget: IDL set to "" followed by getAttribute() 
PASS input.formTarget: IDL set to "" followed by IDL get 
PASS input.formTarget: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.formTarget: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.formTarget: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.formTarget: IDL set to undefined should not throw 
PASS input.formTarget: IDL set to undefined followed by getAttribute() 
PASS input.formTarget: IDL set to undefined followed by IDL get 
PASS input.formTarget: IDL set to 7 should not throw 
PASS input.formTarget: IDL set to 7 followed by getAttribute() 
PASS input.formTarget: IDL set to 7 followed by IDL get 
PASS input.formTarget: IDL set to 1.5 should not throw 
PASS input.formTarget: IDL set to 1.5 followed by getAttribute() 
PASS input.formTarget: IDL set to 1.5 followed by IDL get 
PASS input.formTarget: IDL set to true should not throw 
PASS input.formTarget: IDL set to true followed by getAttribute() 
PASS input.formTarget: IDL set to true followed by IDL get 
PASS input.formTarget: IDL set to false should not throw 
PASS input.formTarget: IDL set to false followed by getAttribute() 
PASS input.formTarget: IDL set to false followed by IDL get 
PASS input.formTarget: IDL set to object "[object Object]" should not throw 
PASS input.formTarget: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.formTarget: IDL set to object "[object Object]" followed by IDL get 
PASS input.formTarget: IDL set to NaN should not throw 
PASS input.formTarget: IDL set to NaN followed by getAttribute() 
PASS input.formTarget: IDL set to NaN followed by IDL get 
PASS input.formTarget: IDL set to Infinity should not throw 
PASS input.formTarget: IDL set to Infinity followed by getAttribute() 
PASS input.formTarget: IDL set to Infinity followed by IDL get 
PASS input.formTarget: IDL set to -Infinity should not throw 
PASS input.formTarget: IDL set to -Infinity followed by getAttribute() 
PASS input.formTarget: IDL set to -Infinity followed by IDL get 
PASS input.formTarget: IDL set to "\0" should not throw 
PASS input.formTarget: IDL set to "\0" followed by getAttribute() 
PASS input.formTarget: IDL set to "\0" followed by IDL get 
PASS input.formTarget: IDL set to null should not throw 
PASS input.formTarget: IDL set to null followed by getAttribute() 
PASS input.formTarget: IDL set to null followed by IDL get 
PASS input.formTarget: IDL set to object "test-toString" should not throw 
PASS input.formTarget: IDL set to object "test-toString" followed by getAttribute() 
PASS input.formTarget: IDL set to object "test-toString" followed by IDL get 
PASS input.formTarget: IDL set to object "test-valueOf" should not throw 
PASS input.formTarget: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.formTarget: IDL set to object "test-valueOf" followed by IDL get 
FAIL input.inputMode: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL input.inputMode: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL input.inputMode: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to undefined followed by getAttribute() 
FAIL input.inputMode: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to 7 followed by getAttribute() 
FAIL input.inputMode: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to 1.5 followed by getAttribute() 
FAIL input.inputMode: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to true followed by getAttribute() 
FAIL input.inputMode: setAttribute() to true followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to false followed by getAttribute() 
FAIL input.inputMode: setAttribute() to false followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to NaN followed by getAttribute() 
FAIL input.inputMode: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to Infinity followed by getAttribute() 
FAIL input.inputMode: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to -Infinity followed by getAttribute() 
FAIL input.inputMode: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "\0" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to null followed by getAttribute() 
FAIL input.inputMode: setAttribute() to null followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "verbatim" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "verbatim" followed by IDL get assert_equals: expected (string) "verbatim" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "xverbatim" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "xverbatim" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "verbatim\0" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "verbatim\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "erbatim" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "erbatim" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "VERBATIM" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "VERBATIM" followed by IDL get assert_equals: expected (string) "verbatim" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "latin" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "latin" followed by IDL get assert_equals: expected (string) "latin" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "xlatin" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "xlatin" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "latin\0" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "latin\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "atin" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "atin" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "LATIN" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "LATIN" followed by IDL get assert_equals: expected (string) "latin" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "latin-name" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "latin-name" followed by IDL get assert_equals: expected (string) "latin-name" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "xlatin-name" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "xlatin-name" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "latin-name\0" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "latin-name\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "atin-name" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "atin-name" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "LATIN-NAME" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "LATIN-NAME" followed by IDL get assert_equals: expected (string) "latin-name" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "latin-prose" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "latin-prose" followed by IDL get assert_equals: expected (string) "latin-prose" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "xlatin-prose" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "xlatin-prose" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "latin-prose\0" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "latin-prose\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "atin-prose" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "atin-prose" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "LATIN-PROSE" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "LATIN-PROSE" followed by IDL get assert_equals: expected (string) "latin-prose" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "full-width-latin" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "full-width-latin" followed by IDL get assert_equals: expected (string) "full-width-latin" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "xfull-width-latin" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "xfull-width-latin" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "full-width-latin\0" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "full-width-latin\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "ull-width-latin" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "ull-width-latin" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "FULL-WIDTH-LATIN" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "FULL-WIDTH-LATIN" followed by IDL get assert_equals: expected (string) "full-width-latin" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "kana" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "kana" followed by IDL get assert_equals: expected (string) "kana" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "xkana" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "xkana" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "kana\0" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "kana\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "ana" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "ana" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "KANA" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "KANA" followed by IDL get assert_equals: expected (string) "kana" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "katakana" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "katakana" followed by IDL get assert_equals: expected (string) "katakana" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "xkatakana" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "xkatakana" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "katakana\0" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "katakana\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "atakana" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "atakana" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "KATAKANA" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "KATAKANA" followed by IDL get assert_equals: expected (string) "katakana" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "numeric" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "numeric" followed by IDL get assert_equals: expected (string) "numeric" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "xnumeric" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "xnumeric" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "numeric\0" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "numeric\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "umeric" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "umeric" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "NUMERIC" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "NUMERIC" followed by IDL get assert_equals: expected (string) "numeric" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "tel" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "tel" followed by IDL get assert_equals: expected (string) "tel" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "xtel" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "xtel" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "tel\0" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "tel\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "el" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "el" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "TEL" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "TEL" followed by IDL get assert_equals: expected (string) "tel" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "email" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "email" followed by IDL get assert_equals: expected (string) "email" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "xemail" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "xemail" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "email\0" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "email\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "mail" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "mail" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "EMAIL" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "EMAIL" followed by IDL get assert_equals: expected (string) "email" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "url" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "url" followed by IDL get assert_equals: expected (string) "url" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "xurl" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "xurl" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "url\0" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "url\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "rl" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "rl" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: setAttribute() to "URL" followed by getAttribute() 
FAIL input.inputMode: setAttribute() to "URL" followed by IDL get assert_equals: expected (string) "url" but got (undefined) undefined
PASS input.inputMode: IDL set to "" should not throw 
FAIL input.inputMode: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "URL"
PASS input.inputMode: IDL set to "" followed by IDL get 
PASS input.inputMode: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL input.inputMode: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "URL"
FAIL input.inputMode: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected "" but got " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo "
PASS input.inputMode: IDL set to undefined should not throw 
FAIL input.inputMode: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "URL"
FAIL input.inputMode: IDL set to undefined followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS input.inputMode: IDL set to 7 should not throw 
FAIL input.inputMode: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "URL"
FAIL input.inputMode: IDL set to 7 followed by IDL get assert_equals: expected (string) "" but got (number) 7
PASS input.inputMode: IDL set to 1.5 should not throw 
FAIL input.inputMode: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "URL"
FAIL input.inputMode: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "" but got (number) 1.5
PASS input.inputMode: IDL set to true should not throw 
FAIL input.inputMode: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "URL"
FAIL input.inputMode: IDL set to true followed by IDL get assert_equals: expected (string) "" but got (boolean) true
PASS input.inputMode: IDL set to false should not throw 
FAIL input.inputMode: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "URL"
FAIL input.inputMode: IDL set to false followed by IDL get assert_equals: expected (string) "" but got (boolean) false
PASS input.inputMode: IDL set to object "[object Object]" should not throw 
FAIL input.inputMode: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "URL"
FAIL input.inputMode: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "" but got (object) object "[object Object]"
PASS input.inputMode: IDL set to NaN should not throw 
FAIL input.inputMode: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "URL"
FAIL input.inputMode: IDL set to NaN followed by IDL get assert_equals: expected (string) "" but got (number) NaN
PASS input.inputMode: IDL set to Infinity should not throw 
FAIL input.inputMode: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "URL"
FAIL input.inputMode: IDL set to Infinity followed by IDL get assert_equals: expected (string) "" but got (number) Infinity
PASS input.inputMode: IDL set to -Infinity should not throw 
FAIL input.inputMode: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "URL"
FAIL input.inputMode: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "" but got (number) -Infinity
PASS input.inputMode: IDL set to "\0" should not throw 
FAIL input.inputMode: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "URL"
FAIL input.inputMode: IDL set to "\0" followed by IDL get assert_equals: expected "" but got "\0"
PASS input.inputMode: IDL set to null should not throw 
FAIL input.inputMode: IDL set to null followed by IDL get assert_equals: expected (string) "" but got (object) null
PASS input.inputMode: IDL set to object "test-toString" should not throw 
FAIL input.inputMode: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "URL"
FAIL input.inputMode: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "" but got (object) object "test-toString"
PASS input.inputMode: IDL set to object "test-valueOf" should not throw 
FAIL input.inputMode: IDL set to object "test-valueOf" followed by getAttribute() assert_equals: expected "test-valueOf" but got "URL"
FAIL input.inputMode: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "" but got (object) object "test-valueOf"
PASS input.inputMode: IDL set to "verbatim" should not throw 
FAIL input.inputMode: IDL set to "verbatim" followed by getAttribute() assert_equals: expected "verbatim" but got "URL"
PASS input.inputMode: IDL set to "verbatim" followed by IDL get 
PASS input.inputMode: IDL set to "xverbatim" should not throw 
FAIL input.inputMode: IDL set to "xverbatim" followed by getAttribute() assert_equals: expected "xverbatim" but got "URL"
FAIL input.inputMode: IDL set to "xverbatim" followed by IDL get assert_equals: expected "" but got "xverbatim"
PASS input.inputMode: IDL set to "verbatim\0" should not throw 
FAIL input.inputMode: IDL set to "verbatim\0" followed by getAttribute() assert_equals: expected "verbatim\0" but got "URL"
FAIL input.inputMode: IDL set to "verbatim\0" followed by IDL get assert_equals: expected "" but got "verbatim\0"
PASS input.inputMode: IDL set to "erbatim" should not throw 
FAIL input.inputMode: IDL set to "erbatim" followed by getAttribute() assert_equals: expected "erbatim" but got "URL"
FAIL input.inputMode: IDL set to "erbatim" followed by IDL get assert_equals: expected "" but got "erbatim"
PASS input.inputMode: IDL set to "VERBATIM" should not throw 
FAIL input.inputMode: IDL set to "VERBATIM" followed by getAttribute() assert_equals: expected "VERBATIM" but got "URL"
FAIL input.inputMode: IDL set to "VERBATIM" followed by IDL get assert_equals: expected "verbatim" but got "VERBATIM"
PASS input.inputMode: IDL set to "latin" should not throw 
FAIL input.inputMode: IDL set to "latin" followed by getAttribute() assert_equals: expected "latin" but got "URL"
PASS input.inputMode: IDL set to "latin" followed by IDL get 
PASS input.inputMode: IDL set to "xlatin" should not throw 
FAIL input.inputMode: IDL set to "xlatin" followed by getAttribute() assert_equals: expected "xlatin" but got "URL"
FAIL input.inputMode: IDL set to "xlatin" followed by IDL get assert_equals: expected "" but got "xlatin"
PASS input.inputMode: IDL set to "latin\0" should not throw 
FAIL input.inputMode: IDL set to "latin\0" followed by getAttribute() assert_equals: expected "latin\0" but got "URL"
FAIL input.inputMode: IDL set to "latin\0" followed by IDL get assert_equals: expected "" but got "latin\0"
PASS input.inputMode: IDL set to "atin" should not throw 
FAIL input.inputMode: IDL set to "atin" followed by getAttribute() assert_equals: expected "atin" but got "URL"
FAIL input.inputMode: IDL set to "atin" followed by IDL get assert_equals: expected "" but got "atin"
PASS input.inputMode: IDL set to "LATIN" should not throw 
FAIL input.inputMode: IDL set to "LATIN" followed by getAttribute() assert_equals: expected "LATIN" but got "URL"
FAIL input.inputMode: IDL set to "LATIN" followed by IDL get assert_equals: expected "latin" but got "LATIN"
PASS input.inputMode: IDL set to "latin-name" should not throw 
FAIL input.inputMode: IDL set to "latin-name" followed by getAttribute() assert_equals: expected "latin-name" but got "URL"
PASS input.inputMode: IDL set to "latin-name" followed by IDL get 
PASS input.inputMode: IDL set to "xlatin-name" should not throw 
FAIL input.inputMode: IDL set to "xlatin-name" followed by getAttribute() assert_equals: expected "xlatin-name" but got "URL"
FAIL input.inputMode: IDL set to "xlatin-name" followed by IDL get assert_equals: expected "" but got "xlatin-name"
PASS input.inputMode: IDL set to "latin-name\0" should not throw 
FAIL input.inputMode: IDL set to "latin-name\0" followed by getAttribute() assert_equals: expected "latin-name\0" but got "URL"
FAIL input.inputMode: IDL set to "latin-name\0" followed by IDL get assert_equals: expected "" but got "latin-name\0"
PASS input.inputMode: IDL set to "atin-name" should not throw 
FAIL input.inputMode: IDL set to "atin-name" followed by getAttribute() assert_equals: expected "atin-name" but got "URL"
FAIL input.inputMode: IDL set to "atin-name" followed by IDL get assert_equals: expected "" but got "atin-name"
PASS input.inputMode: IDL set to "LATIN-NAME" should not throw 
FAIL input.inputMode: IDL set to "LATIN-NAME" followed by getAttribute() assert_equals: expected "LATIN-NAME" but got "URL"
FAIL input.inputMode: IDL set to "LATIN-NAME" followed by IDL get assert_equals: expected "latin-name" but got "LATIN-NAME"
PASS input.inputMode: IDL set to "latin-prose" should not throw 
FAIL input.inputMode: IDL set to "latin-prose" followed by getAttribute() assert_equals: expected "latin-prose" but got "URL"
PASS input.inputMode: IDL set to "latin-prose" followed by IDL get 
PASS input.inputMode: IDL set to "xlatin-prose" should not throw 
FAIL input.inputMode: IDL set to "xlatin-prose" followed by getAttribute() assert_equals: expected "xlatin-prose" but got "URL"
FAIL input.inputMode: IDL set to "xlatin-prose" followed by IDL get assert_equals: expected "" but got "xlatin-prose"
PASS input.inputMode: IDL set to "latin-prose\0" should not throw 
FAIL input.inputMode: IDL set to "latin-prose\0" followed by getAttribute() assert_equals: expected "latin-prose\0" but got "URL"
FAIL input.inputMode: IDL set to "latin-prose\0" followed by IDL get assert_equals: expected "" but got "latin-prose\0"
PASS input.inputMode: IDL set to "atin-prose" should not throw 
FAIL input.inputMode: IDL set to "atin-prose" followed by getAttribute() assert_equals: expected "atin-prose" but got "URL"
FAIL input.inputMode: IDL set to "atin-prose" followed by IDL get assert_equals: expected "" but got "atin-prose"
PASS input.inputMode: IDL set to "LATIN-PROSE" should not throw 
FAIL input.inputMode: IDL set to "LATIN-PROSE" followed by getAttribute() assert_equals: expected "LATIN-PROSE" but got "URL"
FAIL input.inputMode: IDL set to "LATIN-PROSE" followed by IDL get assert_equals: expected "latin-prose" but got "LATIN-PROSE"
PASS input.inputMode: IDL set to "full-width-latin" should not throw 
FAIL input.inputMode: IDL set to "full-width-latin" followed by getAttribute() assert_equals: expected "full-width-latin" but got "URL"
PASS input.inputMode: IDL set to "full-width-latin" followed by IDL get 
PASS input.inputMode: IDL set to "xfull-width-latin" should not throw 
FAIL input.inputMode: IDL set to "xfull-width-latin" followed by getAttribute() assert_equals: expected "xfull-width-latin" but got "URL"
FAIL input.inputMode: IDL set to "xfull-width-latin" followed by IDL get assert_equals: expected "" but got "xfull-width-latin"
PASS input.inputMode: IDL set to "full-width-latin\0" should not throw 
FAIL input.inputMode: IDL set to "full-width-latin\0" followed by getAttribute() assert_equals: expected "full-width-latin\0" but got "URL"
FAIL input.inputMode: IDL set to "full-width-latin\0" followed by IDL get assert_equals: expected "" but got "full-width-latin\0"
PASS input.inputMode: IDL set to "ull-width-latin" should not throw 
FAIL input.inputMode: IDL set to "ull-width-latin" followed by getAttribute() assert_equals: expected "ull-width-latin" but got "URL"
FAIL input.inputMode: IDL set to "ull-width-latin" followed by IDL get assert_equals: expected "" but got "ull-width-latin"
PASS input.inputMode: IDL set to "FULL-WIDTH-LATIN" should not throw 
FAIL input.inputMode: IDL set to "FULL-WIDTH-LATIN" followed by getAttribute() assert_equals: expected "FULL-WIDTH-LATIN" but got "URL"
FAIL input.inputMode: IDL set to "FULL-WIDTH-LATIN" followed by IDL get assert_equals: expected "full-width-latin" but got "FULL-WIDTH-LATIN"
PASS input.inputMode: IDL set to "kana" should not throw 
FAIL input.inputMode: IDL set to "kana" followed by getAttribute() assert_equals: expected "kana" but got "URL"
PASS input.inputMode: IDL set to "kana" followed by IDL get 
PASS input.inputMode: IDL set to "xkana" should not throw 
FAIL input.inputMode: IDL set to "xkana" followed by getAttribute() assert_equals: expected "xkana" but got "URL"
FAIL input.inputMode: IDL set to "xkana" followed by IDL get assert_equals: expected "" but got "xkana"
PASS input.inputMode: IDL set to "kana\0" should not throw 
FAIL input.inputMode: IDL set to "kana\0" followed by getAttribute() assert_equals: expected "kana\0" but got "URL"
FAIL input.inputMode: IDL set to "kana\0" followed by IDL get assert_equals: expected "" but got "kana\0"
PASS input.inputMode: IDL set to "ana" should not throw 
FAIL input.inputMode: IDL set to "ana" followed by getAttribute() assert_equals: expected "ana" but got "URL"
FAIL input.inputMode: IDL set to "ana" followed by IDL get assert_equals: expected "" but got "ana"
PASS input.inputMode: IDL set to "KANA" should not throw 
FAIL input.inputMode: IDL set to "KANA" followed by getAttribute() assert_equals: expected "KANA" but got "URL"
FAIL input.inputMode: IDL set to "KANA" followed by IDL get assert_equals: expected "kana" but got "KANA"
PASS input.inputMode: IDL set to "katakana" should not throw 
FAIL input.inputMode: IDL set to "katakana" followed by getAttribute() assert_equals: expected "katakana" but got "URL"
PASS input.inputMode: IDL set to "katakana" followed by IDL get 
PASS input.inputMode: IDL set to "xkatakana" should not throw 
FAIL input.inputMode: IDL set to "xkatakana" followed by getAttribute() assert_equals: expected "xkatakana" but got "URL"
FAIL input.inputMode: IDL set to "xkatakana" followed by IDL get assert_equals: expected "" but got "xkatakana"
PASS input.inputMode: IDL set to "katakana\0" should not throw 
FAIL input.inputMode: IDL set to "katakana\0" followed by getAttribute() assert_equals: expected "katakana\0" but got "URL"
FAIL input.inputMode: IDL set to "katakana\0" followed by IDL get assert_equals: expected "" but got "katakana\0"
PASS input.inputMode: IDL set to "atakana" should not throw 
FAIL input.inputMode: IDL set to "atakana" followed by getAttribute() assert_equals: expected "atakana" but got "URL"
FAIL input.inputMode: IDL set to "atakana" followed by IDL get assert_equals: expected "" but got "atakana"
PASS input.inputMode: IDL set to "KATAKANA" should not throw 
FAIL input.inputMode: IDL set to "KATAKANA" followed by getAttribute() assert_equals: expected "KATAKANA" but got "URL"
FAIL input.inputMode: IDL set to "KATAKANA" followed by IDL get assert_equals: expected "katakana" but got "KATAKANA"
PASS input.inputMode: IDL set to "numeric" should not throw 
FAIL input.inputMode: IDL set to "numeric" followed by getAttribute() assert_equals: expected "numeric" but got "URL"
PASS input.inputMode: IDL set to "numeric" followed by IDL get 
PASS input.inputMode: IDL set to "xnumeric" should not throw 
FAIL input.inputMode: IDL set to "xnumeric" followed by getAttribute() assert_equals: expected "xnumeric" but got "URL"
FAIL input.inputMode: IDL set to "xnumeric" followed by IDL get assert_equals: expected "" but got "xnumeric"
PASS input.inputMode: IDL set to "numeric\0" should not throw 
FAIL input.inputMode: IDL set to "numeric\0" followed by getAttribute() assert_equals: expected "numeric\0" but got "URL"
FAIL input.inputMode: IDL set to "numeric\0" followed by IDL get assert_equals: expected "" but got "numeric\0"
PASS input.inputMode: IDL set to "umeric" should not throw 
FAIL input.inputMode: IDL set to "umeric" followed by getAttribute() assert_equals: expected "umeric" but got "URL"
FAIL input.inputMode: IDL set to "umeric" followed by IDL get assert_equals: expected "" but got "umeric"
PASS input.inputMode: IDL set to "NUMERIC" should not throw 
FAIL input.inputMode: IDL set to "NUMERIC" followed by getAttribute() assert_equals: expected "NUMERIC" but got "URL"
FAIL input.inputMode: IDL set to "NUMERIC" followed by IDL get assert_equals: expected "numeric" but got "NUMERIC"
PASS input.inputMode: IDL set to "tel" should not throw 
FAIL input.inputMode: IDL set to "tel" followed by getAttribute() assert_equals: expected "tel" but got "URL"
PASS input.inputMode: IDL set to "tel" followed by IDL get 
PASS input.inputMode: IDL set to "xtel" should not throw 
FAIL input.inputMode: IDL set to "xtel" followed by getAttribute() assert_equals: expected "xtel" but got "URL"
FAIL input.inputMode: IDL set to "xtel" followed by IDL get assert_equals: expected "" but got "xtel"
PASS input.inputMode: IDL set to "tel\0" should not throw 
FAIL input.inputMode: IDL set to "tel\0" followed by getAttribute() assert_equals: expected "tel\0" but got "URL"
FAIL input.inputMode: IDL set to "tel\0" followed by IDL get assert_equals: expected "" but got "tel\0"
PASS input.inputMode: IDL set to "el" should not throw 
FAIL input.inputMode: IDL set to "el" followed by getAttribute() assert_equals: expected "el" but got "URL"
FAIL input.inputMode: IDL set to "el" followed by IDL get assert_equals: expected "" but got "el"
PASS input.inputMode: IDL set to "TEL" should not throw 
FAIL input.inputMode: IDL set to "TEL" followed by getAttribute() assert_equals: expected "TEL" but got "URL"
FAIL input.inputMode: IDL set to "TEL" followed by IDL get assert_equals: expected "tel" but got "TEL"
PASS input.inputMode: IDL set to "email" should not throw 
FAIL input.inputMode: IDL set to "email" followed by getAttribute() assert_equals: expected "email" but got "URL"
PASS input.inputMode: IDL set to "email" followed by IDL get 
PASS input.inputMode: IDL set to "xemail" should not throw 
FAIL input.inputMode: IDL set to "xemail" followed by getAttribute() assert_equals: expected "xemail" but got "URL"
FAIL input.inputMode: IDL set to "xemail" followed by IDL get assert_equals: expected "" but got "xemail"
PASS input.inputMode: IDL set to "email\0" should not throw 
FAIL input.inputMode: IDL set to "email\0" followed by getAttribute() assert_equals: expected "email\0" but got "URL"
FAIL input.inputMode: IDL set to "email\0" followed by IDL get assert_equals: expected "" but got "email\0"
PASS input.inputMode: IDL set to "mail" should not throw 
FAIL input.inputMode: IDL set to "mail" followed by getAttribute() assert_equals: expected "mail" but got "URL"
FAIL input.inputMode: IDL set to "mail" followed by IDL get assert_equals: expected "" but got "mail"
PASS input.inputMode: IDL set to "EMAIL" should not throw 
FAIL input.inputMode: IDL set to "EMAIL" followed by getAttribute() assert_equals: expected "EMAIL" but got "URL"
FAIL input.inputMode: IDL set to "EMAIL" followed by IDL get assert_equals: expected "email" but got "EMAIL"
PASS input.inputMode: IDL set to "url" should not throw 
FAIL input.inputMode: IDL set to "url" followed by getAttribute() assert_equals: expected "url" but got "URL"
PASS input.inputMode: IDL set to "url" followed by IDL get 
PASS input.inputMode: IDL set to "xurl" should not throw 
FAIL input.inputMode: IDL set to "xurl" followed by getAttribute() assert_equals: expected "xurl" but got "URL"
FAIL input.inputMode: IDL set to "xurl" followed by IDL get assert_equals: expected "" but got "xurl"
PASS input.inputMode: IDL set to "url\0" should not throw 
FAIL input.inputMode: IDL set to "url\0" followed by getAttribute() assert_equals: expected "url\0" but got "URL"
FAIL input.inputMode: IDL set to "url\0" followed by IDL get assert_equals: expected "" but got "url\0"
PASS input.inputMode: IDL set to "rl" should not throw 
FAIL input.inputMode: IDL set to "rl" followed by getAttribute() assert_equals: expected "rl" but got "URL"
FAIL input.inputMode: IDL set to "rl" followed by IDL get assert_equals: expected "" but got "rl"
PASS input.inputMode: IDL set to "URL" should not throw 
PASS input.inputMode: IDL set to "URL" followed by getAttribute() 
FAIL input.inputMode: IDL set to "URL" followed by IDL get assert_equals: expected "url" but got "URL"
PASS input.max: typeof IDL attribute 
PASS input.max: IDL get with DOM attribute unset 
PASS input.max: setAttribute() to "" followed by getAttribute() 
PASS input.max: setAttribute() to "" followed by IDL get 
PASS input.max: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.max: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.max: setAttribute() to undefined followed by getAttribute() 
PASS input.max: setAttribute() to undefined followed by IDL get 
PASS input.max: setAttribute() to 7 followed by getAttribute() 
PASS input.max: setAttribute() to 7 followed by IDL get 
PASS input.max: setAttribute() to 1.5 followed by getAttribute() 
PASS input.max: setAttribute() to 1.5 followed by IDL get 
PASS input.max: setAttribute() to true followed by getAttribute() 
PASS input.max: setAttribute() to true followed by IDL get 
PASS input.max: setAttribute() to false followed by getAttribute() 
PASS input.max: setAttribute() to false followed by IDL get 
PASS input.max: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.max: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.max: setAttribute() to NaN followed by getAttribute() 
PASS input.max: setAttribute() to NaN followed by IDL get 
PASS input.max: setAttribute() to Infinity followed by getAttribute() 
PASS input.max: setAttribute() to Infinity followed by IDL get 
PASS input.max: setAttribute() to -Infinity followed by getAttribute() 
PASS input.max: setAttribute() to -Infinity followed by IDL get 
PASS input.max: setAttribute() to "\0" followed by getAttribute() 
PASS input.max: setAttribute() to "\0" followed by IDL get 
PASS input.max: setAttribute() to null followed by getAttribute() 
PASS input.max: setAttribute() to null followed by IDL get 
PASS input.max: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.max: setAttribute() to object "test-toString" followed by IDL get 
PASS input.max: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.max: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.max: IDL set to "" should not throw 
PASS input.max: IDL set to "" followed by getAttribute() 
PASS input.max: IDL set to "" followed by IDL get 
PASS input.max: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.max: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.max: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.max: IDL set to undefined should not throw 
PASS input.max: IDL set to undefined followed by getAttribute() 
PASS input.max: IDL set to undefined followed by IDL get 
PASS input.max: IDL set to 7 should not throw 
PASS input.max: IDL set to 7 followed by getAttribute() 
PASS input.max: IDL set to 7 followed by IDL get 
PASS input.max: IDL set to 1.5 should not throw 
PASS input.max: IDL set to 1.5 followed by getAttribute() 
PASS input.max: IDL set to 1.5 followed by IDL get 
PASS input.max: IDL set to true should not throw 
PASS input.max: IDL set to true followed by getAttribute() 
PASS input.max: IDL set to true followed by IDL get 
PASS input.max: IDL set to false should not throw 
PASS input.max: IDL set to false followed by getAttribute() 
PASS input.max: IDL set to false followed by IDL get 
PASS input.max: IDL set to object "[object Object]" should not throw 
PASS input.max: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.max: IDL set to object "[object Object]" followed by IDL get 
PASS input.max: IDL set to NaN should not throw 
PASS input.max: IDL set to NaN followed by getAttribute() 
PASS input.max: IDL set to NaN followed by IDL get 
PASS input.max: IDL set to Infinity should not throw 
PASS input.max: IDL set to Infinity followed by getAttribute() 
PASS input.max: IDL set to Infinity followed by IDL get 
PASS input.max: IDL set to -Infinity should not throw 
PASS input.max: IDL set to -Infinity followed by getAttribute() 
PASS input.max: IDL set to -Infinity followed by IDL get 
PASS input.max: IDL set to "\0" should not throw 
PASS input.max: IDL set to "\0" followed by getAttribute() 
PASS input.max: IDL set to "\0" followed by IDL get 
PASS input.max: IDL set to null should not throw 
PASS input.max: IDL set to null followed by getAttribute() 
PASS input.max: IDL set to null followed by IDL get 
PASS input.max: IDL set to object "test-toString" should not throw 
PASS input.max: IDL set to object "test-toString" followed by getAttribute() 
PASS input.max: IDL set to object "test-toString" followed by IDL get 
PASS input.max: IDL set to object "test-valueOf" should not throw 
PASS input.max: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.max: IDL set to object "test-valueOf" followed by IDL get 
PASS input.maxLength: typeof IDL attribute 
FAIL input.maxLength: IDL get with DOM attribute unset assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to -2147483649 followed by getAttribute() 
FAIL input.maxLength: setAttribute() to -2147483649 followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to -2147483648 followed by getAttribute() 
FAIL input.maxLength: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to -36 followed by getAttribute() 
FAIL input.maxLength: setAttribute() to -36 followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to -1 followed by getAttribute() 
FAIL input.maxLength: setAttribute() to -1 followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to -0 followed by getAttribute() 
PASS input.maxLength: setAttribute() to -0 followed by IDL get 
PASS input.maxLength: setAttribute() to 0 followed by getAttribute() 
PASS input.maxLength: setAttribute() to 0 followed by IDL get 
PASS input.maxLength: setAttribute() to 1 followed by getAttribute() 
PASS input.maxLength: setAttribute() to 1 followed by IDL get 
PASS input.maxLength: setAttribute() to 2147483647 followed by getAttribute() 
FAIL input.maxLength: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 524288
PASS input.maxLength: setAttribute() to 2147483648 followed by getAttribute() 
FAIL input.maxLength: setAttribute() to 2147483648 followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to 4294967295 followed by getAttribute() 
FAIL input.maxLength: setAttribute() to 4294967295 followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to 4294967296 followed by getAttribute() 
FAIL input.maxLength: setAttribute() to 4294967296 followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to "" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to "" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to "-1" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to "-1" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to "-0" followed by getAttribute() 
PASS input.maxLength: setAttribute() to "-0" followed by IDL get 
PASS input.maxLength: setAttribute() to "0" followed by getAttribute() 
PASS input.maxLength: setAttribute() to "0" followed by IDL get 
PASS input.maxLength: setAttribute() to "1" followed by getAttribute() 
PASS input.maxLength: setAttribute() to "1" followed by IDL get 
PASS input.maxLength: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to "\t7" followed by getAttribute() 
PASS input.maxLength: setAttribute() to "\t7" followed by IDL get 
PASS input.maxLength: setAttribute() to "\v7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to "\v7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to "\f7" followed by getAttribute() 
PASS input.maxLength: setAttribute() to "\f7" followed by IDL get 
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
PASS input.maxLength: setAttribute() to " 7" followed by IDL get 
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to "﻿7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to "﻿7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to "\n7" followed by getAttribute() 
PASS input.maxLength: setAttribute() to "\n7" followed by IDL get 
PASS input.maxLength: setAttribute() to "\r7" followed by getAttribute() 
PASS input.maxLength: setAttribute() to "\r7" followed by IDL get 
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to "᠎7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to "᠎7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to "　7" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to "　7" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to undefined followed by getAttribute() 
FAIL input.maxLength: setAttribute() to undefined followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to 1.5 followed by getAttribute() 
PASS input.maxLength: setAttribute() to 1.5 followed by IDL get 
PASS input.maxLength: setAttribute() to true followed by getAttribute() 
FAIL input.maxLength: setAttribute() to true followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to false followed by getAttribute() 
FAIL input.maxLength: setAttribute() to false followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to NaN followed by getAttribute() 
FAIL input.maxLength: setAttribute() to NaN followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to Infinity followed by getAttribute() 
FAIL input.maxLength: setAttribute() to Infinity followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to -Infinity followed by getAttribute() 
FAIL input.maxLength: setAttribute() to -Infinity followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to "\0" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to "\0" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: setAttribute() to object "2" followed by getAttribute() 
PASS input.maxLength: setAttribute() to object "2" followed by IDL get 
PASS input.maxLength: setAttribute() to object "3" followed by getAttribute() 
FAIL input.maxLength: setAttribute() to object "3" followed by IDL get assert_equals: expected -1 but got 524288
PASS input.maxLength: IDL set to -2147483648 must throw INDEX_SIZE_ERR 
PASS input.maxLength: IDL set to -36 must throw INDEX_SIZE_ERR 
PASS input.maxLength: IDL set to -1 must throw INDEX_SIZE_ERR 
PASS input.maxLength: IDL set to 0 should not throw 
PASS input.maxLength: IDL set to 0 followed by getAttribute() 
PASS input.maxLength: IDL set to 0 followed by IDL get 
PASS input.maxLength: IDL set to 1 should not throw 
PASS input.maxLength: IDL set to 1 followed by getAttribute() 
PASS input.maxLength: IDL set to 1 followed by IDL get 
PASS input.maxLength: IDL set to 2147483647 should not throw 
PASS input.maxLength: IDL set to 2147483647 followed by getAttribute() 
FAIL input.maxLength: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 524288
PASS input.min: typeof IDL attribute 
PASS input.min: IDL get with DOM attribute unset 
PASS input.min: setAttribute() to "" followed by getAttribute() 
PASS input.min: setAttribute() to "" followed by IDL get 
PASS input.min: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.min: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.min: setAttribute() to undefined followed by getAttribute() 
PASS input.min: setAttribute() to undefined followed by IDL get 
PASS input.min: setAttribute() to 7 followed by getAttribute() 
PASS input.min: setAttribute() to 7 followed by IDL get 
PASS input.min: setAttribute() to 1.5 followed by getAttribute() 
PASS input.min: setAttribute() to 1.5 followed by IDL get 
PASS input.min: setAttribute() to true followed by getAttribute() 
PASS input.min: setAttribute() to true followed by IDL get 
PASS input.min: setAttribute() to false followed by getAttribute() 
PASS input.min: setAttribute() to false followed by IDL get 
PASS input.min: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.min: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.min: setAttribute() to NaN followed by getAttribute() 
PASS input.min: setAttribute() to NaN followed by IDL get 
PASS input.min: setAttribute() to Infinity followed by getAttribute() 
PASS input.min: setAttribute() to Infinity followed by IDL get 
PASS input.min: setAttribute() to -Infinity followed by getAttribute() 
PASS input.min: setAttribute() to -Infinity followed by IDL get 
PASS input.min: setAttribute() to "\0" followed by getAttribute() 
PASS input.min: setAttribute() to "\0" followed by IDL get 
PASS input.min: setAttribute() to null followed by getAttribute() 
PASS input.min: setAttribute() to null followed by IDL get 
PASS input.min: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.min: setAttribute() to object "test-toString" followed by IDL get 
PASS input.min: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.min: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.min: IDL set to "" should not throw 
PASS input.min: IDL set to "" followed by getAttribute() 
PASS input.min: IDL set to "" followed by IDL get 
PASS input.min: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.min: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.min: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.min: IDL set to undefined should not throw 
PASS input.min: IDL set to undefined followed by getAttribute() 
PASS input.min: IDL set to undefined followed by IDL get 
PASS input.min: IDL set to 7 should not throw 
PASS input.min: IDL set to 7 followed by getAttribute() 
PASS input.min: IDL set to 7 followed by IDL get 
PASS input.min: IDL set to 1.5 should not throw 
PASS input.min: IDL set to 1.5 followed by getAttribute() 
PASS input.min: IDL set to 1.5 followed by IDL get 
PASS input.min: IDL set to true should not throw 
PASS input.min: IDL set to true followed by getAttribute() 
PASS input.min: IDL set to true followed by IDL get 
PASS input.min: IDL set to false should not throw 
PASS input.min: IDL set to false followed by getAttribute() 
PASS input.min: IDL set to false followed by IDL get 
PASS input.min: IDL set to object "[object Object]" should not throw 
PASS input.min: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.min: IDL set to object "[object Object]" followed by IDL get 
PASS input.min: IDL set to NaN should not throw 
PASS input.min: IDL set to NaN followed by getAttribute() 
PASS input.min: IDL set to NaN followed by IDL get 
PASS input.min: IDL set to Infinity should not throw 
PASS input.min: IDL set to Infinity followed by getAttribute() 
PASS input.min: IDL set to Infinity followed by IDL get 
PASS input.min: IDL set to -Infinity should not throw 
PASS input.min: IDL set to -Infinity followed by getAttribute() 
PASS input.min: IDL set to -Infinity followed by IDL get 
PASS input.min: IDL set to "\0" should not throw 
PASS input.min: IDL set to "\0" followed by getAttribute() 
PASS input.min: IDL set to "\0" followed by IDL get 
PASS input.min: IDL set to null should not throw 
PASS input.min: IDL set to null followed by getAttribute() 
PASS input.min: IDL set to null followed by IDL get 
PASS input.min: IDL set to object "test-toString" should not throw 
PASS input.min: IDL set to object "test-toString" followed by getAttribute() 
PASS input.min: IDL set to object "test-toString" followed by IDL get 
PASS input.min: IDL set to object "test-valueOf" should not throw 
PASS input.min: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.min: IDL set to object "test-valueOf" followed by IDL get 
PASS input.multiple: typeof IDL attribute 
PASS input.multiple: IDL get with DOM attribute unset 
PASS input.multiple: setAttribute() to "" followed by getAttribute() 
PASS input.multiple: setAttribute() to "" followed by IDL get 
PASS input.multiple: setAttribute() to " foo " followed by getAttribute() 
PASS input.multiple: setAttribute() to " foo " followed by IDL get 
PASS input.multiple: setAttribute() to undefined followed by getAttribute() 
PASS input.multiple: setAttribute() to undefined followed by IDL get 
PASS input.multiple: setAttribute() to null followed by getAttribute() 
PASS input.multiple: setAttribute() to null followed by IDL get 
PASS input.multiple: setAttribute() to 7 followed by getAttribute() 
PASS input.multiple: setAttribute() to 7 followed by IDL get 
PASS input.multiple: setAttribute() to 1.5 followed by getAttribute() 
PASS input.multiple: setAttribute() to 1.5 followed by IDL get 
PASS input.multiple: setAttribute() to true followed by getAttribute() 
PASS input.multiple: setAttribute() to true followed by IDL get 
PASS input.multiple: setAttribute() to false followed by getAttribute() 
PASS input.multiple: setAttribute() to false followed by IDL get 
PASS input.multiple: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.multiple: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.multiple: setAttribute() to NaN followed by getAttribute() 
PASS input.multiple: setAttribute() to NaN followed by IDL get 
PASS input.multiple: setAttribute() to Infinity followed by getAttribute() 
PASS input.multiple: setAttribute() to Infinity followed by IDL get 
PASS input.multiple: setAttribute() to -Infinity followed by getAttribute() 
PASS input.multiple: setAttribute() to -Infinity followed by IDL get 
PASS input.multiple: setAttribute() to "\0" followed by getAttribute() 
PASS input.multiple: setAttribute() to "\0" followed by IDL get 
PASS input.multiple: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.multiple: setAttribute() to object "test-toString" followed by IDL get 
PASS input.multiple: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.multiple: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.multiple: setAttribute() to "multiple" followed by getAttribute() 
PASS input.multiple: setAttribute() to "multiple" followed by IDL get 
PASS input.multiple: IDL set to "" should not throw 
PASS input.multiple: IDL set to "" followed by hasAttribute() 
PASS input.multiple: IDL set to "" followed by IDL get 
PASS input.multiple: IDL set to " foo " should not throw 
PASS input.multiple: IDL set to " foo " followed by hasAttribute() 
PASS input.multiple: IDL set to " foo " followed by IDL get 
PASS input.multiple: IDL set to undefined should not throw 
PASS input.multiple: IDL set to undefined followed by hasAttribute() 
PASS input.multiple: IDL set to undefined followed by IDL get 
PASS input.multiple: IDL set to null should not throw 
PASS input.multiple: IDL set to null followed by hasAttribute() 
PASS input.multiple: IDL set to null followed by IDL get 
PASS input.multiple: IDL set to 7 should not throw 
PASS input.multiple: IDL set to 7 followed by hasAttribute() 
PASS input.multiple: IDL set to 7 followed by IDL get 
PASS input.multiple: IDL set to 1.5 should not throw 
PASS input.multiple: IDL set to 1.5 followed by hasAttribute() 
PASS input.multiple: IDL set to 1.5 followed by IDL get 
PASS input.multiple: IDL set to true should not throw 
PASS input.multiple: IDL set to true followed by hasAttribute() 
PASS input.multiple: IDL set to true followed by IDL get 
PASS input.multiple: IDL set to false should not throw 
PASS input.multiple: IDL set to false followed by hasAttribute() 
PASS input.multiple: IDL set to false followed by IDL get 
PASS input.multiple: IDL set to object "[object Object]" should not throw 
PASS input.multiple: IDL set to object "[object Object]" followed by hasAttribute() 
PASS input.multiple: IDL set to object "[object Object]" followed by IDL get 
PASS input.multiple: IDL set to NaN should not throw 
PASS input.multiple: IDL set to NaN followed by hasAttribute() 
PASS input.multiple: IDL set to NaN followed by IDL get 
PASS input.multiple: IDL set to Infinity should not throw 
PASS input.multiple: IDL set to Infinity followed by hasAttribute() 
PASS input.multiple: IDL set to Infinity followed by IDL get 
PASS input.multiple: IDL set to -Infinity should not throw 
PASS input.multiple: IDL set to -Infinity followed by hasAttribute() 
PASS input.multiple: IDL set to -Infinity followed by IDL get 
PASS input.multiple: IDL set to "\0" should not throw 
PASS input.multiple: IDL set to "\0" followed by hasAttribute() 
PASS input.multiple: IDL set to "\0" followed by IDL get 
PASS input.multiple: IDL set to object "test-toString" should not throw 
PASS input.multiple: IDL set to object "test-toString" followed by hasAttribute() 
PASS input.multiple: IDL set to object "test-toString" followed by IDL get 
PASS input.multiple: IDL set to object "test-valueOf" should not throw 
PASS input.multiple: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS input.multiple: IDL set to object "test-valueOf" followed by IDL get 
PASS input.name: typeof IDL attribute 
PASS input.name: IDL get with DOM attribute unset 
PASS input.name: setAttribute() to "" followed by getAttribute() 
PASS input.name: setAttribute() to "" followed by IDL get 
PASS input.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.name: setAttribute() to undefined followed by getAttribute() 
PASS input.name: setAttribute() to undefined followed by IDL get 
PASS input.name: setAttribute() to 7 followed by getAttribute() 
PASS input.name: setAttribute() to 7 followed by IDL get 
PASS input.name: setAttribute() to 1.5 followed by getAttribute() 
PASS input.name: setAttribute() to 1.5 followed by IDL get 
PASS input.name: setAttribute() to true followed by getAttribute() 
PASS input.name: setAttribute() to true followed by IDL get 
PASS input.name: setAttribute() to false followed by getAttribute() 
PASS input.name: setAttribute() to false followed by IDL get 
PASS input.name: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.name: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.name: setAttribute() to NaN followed by getAttribute() 
PASS input.name: setAttribute() to NaN followed by IDL get 
PASS input.name: setAttribute() to Infinity followed by getAttribute() 
PASS input.name: setAttribute() to Infinity followed by IDL get 
PASS input.name: setAttribute() to -Infinity followed by getAttribute() 
PASS input.name: setAttribute() to -Infinity followed by IDL get 
PASS input.name: setAttribute() to "\0" followed by getAttribute() 
PASS input.name: setAttribute() to "\0" followed by IDL get 
PASS input.name: setAttribute() to null followed by getAttribute() 
PASS input.name: setAttribute() to null followed by IDL get 
PASS input.name: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.name: setAttribute() to object "test-toString" followed by IDL get 
PASS input.name: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.name: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.name: IDL set to "" should not throw 
PASS input.name: IDL set to "" followed by getAttribute() 
PASS input.name: IDL set to "" followed by IDL get 
PASS input.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.name: IDL set to undefined should not throw 
PASS input.name: IDL set to undefined followed by getAttribute() 
PASS input.name: IDL set to undefined followed by IDL get 
PASS input.name: IDL set to 7 should not throw 
PASS input.name: IDL set to 7 followed by getAttribute() 
PASS input.name: IDL set to 7 followed by IDL get 
PASS input.name: IDL set to 1.5 should not throw 
PASS input.name: IDL set to 1.5 followed by getAttribute() 
PASS input.name: IDL set to 1.5 followed by IDL get 
PASS input.name: IDL set to true should not throw 
PASS input.name: IDL set to true followed by getAttribute() 
PASS input.name: IDL set to true followed by IDL get 
PASS input.name: IDL set to false should not throw 
PASS input.name: IDL set to false followed by getAttribute() 
PASS input.name: IDL set to false followed by IDL get 
PASS input.name: IDL set to object "[object Object]" should not throw 
PASS input.name: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.name: IDL set to object "[object Object]" followed by IDL get 
PASS input.name: IDL set to NaN should not throw 
PASS input.name: IDL set to NaN followed by getAttribute() 
PASS input.name: IDL set to NaN followed by IDL get 
PASS input.name: IDL set to Infinity should not throw 
PASS input.name: IDL set to Infinity followed by getAttribute() 
PASS input.name: IDL set to Infinity followed by IDL get 
PASS input.name: IDL set to -Infinity should not throw 
PASS input.name: IDL set to -Infinity followed by getAttribute() 
PASS input.name: IDL set to -Infinity followed by IDL get 
PASS input.name: IDL set to "\0" should not throw 
PASS input.name: IDL set to "\0" followed by getAttribute() 
PASS input.name: IDL set to "\0" followed by IDL get 
PASS input.name: IDL set to null should not throw 
PASS input.name: IDL set to null followed by getAttribute() 
PASS input.name: IDL set to null followed by IDL get 
PASS input.name: IDL set to object "test-toString" should not throw 
PASS input.name: IDL set to object "test-toString" followed by getAttribute() 
PASS input.name: IDL set to object "test-toString" followed by IDL get 
PASS input.name: IDL set to object "test-valueOf" should not throw 
PASS input.name: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.name: IDL set to object "test-valueOf" followed by IDL get 
PASS input.pattern: typeof IDL attribute 
PASS input.pattern: IDL get with DOM attribute unset 
PASS input.pattern: setAttribute() to "" followed by getAttribute() 
PASS input.pattern: setAttribute() to "" followed by IDL get 
PASS input.pattern: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.pattern: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.pattern: setAttribute() to undefined followed by getAttribute() 
PASS input.pattern: setAttribute() to undefined followed by IDL get 
PASS input.pattern: setAttribute() to 7 followed by getAttribute() 
PASS input.pattern: setAttribute() to 7 followed by IDL get 
PASS input.pattern: setAttribute() to 1.5 followed by getAttribute() 
PASS input.pattern: setAttribute() to 1.5 followed by IDL get 
PASS input.pattern: setAttribute() to true followed by getAttribute() 
PASS input.pattern: setAttribute() to true followed by IDL get 
PASS input.pattern: setAttribute() to false followed by getAttribute() 
PASS input.pattern: setAttribute() to false followed by IDL get 
PASS input.pattern: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.pattern: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.pattern: setAttribute() to NaN followed by getAttribute() 
PASS input.pattern: setAttribute() to NaN followed by IDL get 
PASS input.pattern: setAttribute() to Infinity followed by getAttribute() 
PASS input.pattern: setAttribute() to Infinity followed by IDL get 
PASS input.pattern: setAttribute() to -Infinity followed by getAttribute() 
PASS input.pattern: setAttribute() to -Infinity followed by IDL get 
PASS input.pattern: setAttribute() to "\0" followed by getAttribute() 
PASS input.pattern: setAttribute() to "\0" followed by IDL get 
PASS input.pattern: setAttribute() to null followed by getAttribute() 
PASS input.pattern: setAttribute() to null followed by IDL get 
PASS input.pattern: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.pattern: setAttribute() to object "test-toString" followed by IDL get 
PASS input.pattern: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.pattern: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.pattern: IDL set to "" should not throw 
PASS input.pattern: IDL set to "" followed by getAttribute() 
PASS input.pattern: IDL set to "" followed by IDL get 
PASS input.pattern: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.pattern: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.pattern: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.pattern: IDL set to undefined should not throw 
PASS input.pattern: IDL set to undefined followed by getAttribute() 
PASS input.pattern: IDL set to undefined followed by IDL get 
PASS input.pattern: IDL set to 7 should not throw 
PASS input.pattern: IDL set to 7 followed by getAttribute() 
PASS input.pattern: IDL set to 7 followed by IDL get 
PASS input.pattern: IDL set to 1.5 should not throw 
PASS input.pattern: IDL set to 1.5 followed by getAttribute() 
PASS input.pattern: IDL set to 1.5 followed by IDL get 
PASS input.pattern: IDL set to true should not throw 
PASS input.pattern: IDL set to true followed by getAttribute() 
PASS input.pattern: IDL set to true followed by IDL get 
PASS input.pattern: IDL set to false should not throw 
PASS input.pattern: IDL set to false followed by getAttribute() 
PASS input.pattern: IDL set to false followed by IDL get 
PASS input.pattern: IDL set to object "[object Object]" should not throw 
PASS input.pattern: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.pattern: IDL set to object "[object Object]" followed by IDL get 
PASS input.pattern: IDL set to NaN should not throw 
PASS input.pattern: IDL set to NaN followed by getAttribute() 
PASS input.pattern: IDL set to NaN followed by IDL get 
PASS input.pattern: IDL set to Infinity should not throw 
PASS input.pattern: IDL set to Infinity followed by getAttribute() 
PASS input.pattern: IDL set to Infinity followed by IDL get 
PASS input.pattern: IDL set to -Infinity should not throw 
PASS input.pattern: IDL set to -Infinity followed by getAttribute() 
PASS input.pattern: IDL set to -Infinity followed by IDL get 
PASS input.pattern: IDL set to "\0" should not throw 
PASS input.pattern: IDL set to "\0" followed by getAttribute() 
PASS input.pattern: IDL set to "\0" followed by IDL get 
PASS input.pattern: IDL set to null should not throw 
PASS input.pattern: IDL set to null followed by getAttribute() 
PASS input.pattern: IDL set to null followed by IDL get 
PASS input.pattern: IDL set to object "test-toString" should not throw 
PASS input.pattern: IDL set to object "test-toString" followed by getAttribute() 
PASS input.pattern: IDL set to object "test-toString" followed by IDL get 
PASS input.pattern: IDL set to object "test-valueOf" should not throw 
PASS input.pattern: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.pattern: IDL set to object "test-valueOf" followed by IDL get 
PASS input.placeholder: typeof IDL attribute 
PASS input.placeholder: IDL get with DOM attribute unset 
PASS input.placeholder: setAttribute() to "" followed by getAttribute() 
PASS input.placeholder: setAttribute() to "" followed by IDL get 
PASS input.placeholder: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.placeholder: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.placeholder: setAttribute() to undefined followed by getAttribute() 
PASS input.placeholder: setAttribute() to undefined followed by IDL get 
PASS input.placeholder: setAttribute() to 7 followed by getAttribute() 
PASS input.placeholder: setAttribute() to 7 followed by IDL get 
PASS input.placeholder: setAttribute() to 1.5 followed by getAttribute() 
PASS input.placeholder: setAttribute() to 1.5 followed by IDL get 
PASS input.placeholder: setAttribute() to true followed by getAttribute() 
PASS input.placeholder: setAttribute() to true followed by IDL get 
PASS input.placeholder: setAttribute() to false followed by getAttribute() 
PASS input.placeholder: setAttribute() to false followed by IDL get 
PASS input.placeholder: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.placeholder: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.placeholder: setAttribute() to NaN followed by getAttribute() 
PASS input.placeholder: setAttribute() to NaN followed by IDL get 
PASS input.placeholder: setAttribute() to Infinity followed by getAttribute() 
PASS input.placeholder: setAttribute() to Infinity followed by IDL get 
PASS input.placeholder: setAttribute() to -Infinity followed by getAttribute() 
PASS input.placeholder: setAttribute() to -Infinity followed by IDL get 
PASS input.placeholder: setAttribute() to "\0" followed by getAttribute() 
PASS input.placeholder: setAttribute() to "\0" followed by IDL get 
PASS input.placeholder: setAttribute() to null followed by getAttribute() 
PASS input.placeholder: setAttribute() to null followed by IDL get 
PASS input.placeholder: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.placeholder: setAttribute() to object "test-toString" followed by IDL get 
PASS input.placeholder: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.placeholder: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.placeholder: IDL set to "" should not throw 
PASS input.placeholder: IDL set to "" followed by getAttribute() 
PASS input.placeholder: IDL set to "" followed by IDL get 
PASS input.placeholder: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.placeholder: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.placeholder: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.placeholder: IDL set to undefined should not throw 
PASS input.placeholder: IDL set to undefined followed by getAttribute() 
PASS input.placeholder: IDL set to undefined followed by IDL get 
PASS input.placeholder: IDL set to 7 should not throw 
PASS input.placeholder: IDL set to 7 followed by getAttribute() 
PASS input.placeholder: IDL set to 7 followed by IDL get 
PASS input.placeholder: IDL set to 1.5 should not throw 
PASS input.placeholder: IDL set to 1.5 followed by getAttribute() 
PASS input.placeholder: IDL set to 1.5 followed by IDL get 
PASS input.placeholder: IDL set to true should not throw 
PASS input.placeholder: IDL set to true followed by getAttribute() 
PASS input.placeholder: IDL set to true followed by IDL get 
PASS input.placeholder: IDL set to false should not throw 
PASS input.placeholder: IDL set to false followed by getAttribute() 
PASS input.placeholder: IDL set to false followed by IDL get 
PASS input.placeholder: IDL set to object "[object Object]" should not throw 
PASS input.placeholder: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.placeholder: IDL set to object "[object Object]" followed by IDL get 
PASS input.placeholder: IDL set to NaN should not throw 
PASS input.placeholder: IDL set to NaN followed by getAttribute() 
PASS input.placeholder: IDL set to NaN followed by IDL get 
PASS input.placeholder: IDL set to Infinity should not throw 
PASS input.placeholder: IDL set to Infinity followed by getAttribute() 
PASS input.placeholder: IDL set to Infinity followed by IDL get 
PASS input.placeholder: IDL set to -Infinity should not throw 
PASS input.placeholder: IDL set to -Infinity followed by getAttribute() 
PASS input.placeholder: IDL set to -Infinity followed by IDL get 
PASS input.placeholder: IDL set to "\0" should not throw 
PASS input.placeholder: IDL set to "\0" followed by getAttribute() 
PASS input.placeholder: IDL set to "\0" followed by IDL get 
PASS input.placeholder: IDL set to null should not throw 
PASS input.placeholder: IDL set to null followed by getAttribute() 
PASS input.placeholder: IDL set to null followed by IDL get 
PASS input.placeholder: IDL set to object "test-toString" should not throw 
PASS input.placeholder: IDL set to object "test-toString" followed by getAttribute() 
PASS input.placeholder: IDL set to object "test-toString" followed by IDL get 
PASS input.placeholder: IDL set to object "test-valueOf" should not throw 
PASS input.placeholder: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.placeholder: IDL set to object "test-valueOf" followed by IDL get 
PASS input.readOnly: typeof IDL attribute 
PASS input.readOnly: IDL get with DOM attribute unset 
PASS input.readOnly: setAttribute() to "" followed by getAttribute() 
PASS input.readOnly: setAttribute() to "" followed by IDL get 
PASS input.readOnly: setAttribute() to " foo " followed by getAttribute() 
PASS input.readOnly: setAttribute() to " foo " followed by IDL get 
PASS input.readOnly: setAttribute() to undefined followed by getAttribute() 
PASS input.readOnly: setAttribute() to undefined followed by IDL get 
PASS input.readOnly: setAttribute() to null followed by getAttribute() 
PASS input.readOnly: setAttribute() to null followed by IDL get 
PASS input.readOnly: setAttribute() to 7 followed by getAttribute() 
PASS input.readOnly: setAttribute() to 7 followed by IDL get 
PASS input.readOnly: setAttribute() to 1.5 followed by getAttribute() 
PASS input.readOnly: setAttribute() to 1.5 followed by IDL get 
PASS input.readOnly: setAttribute() to true followed by getAttribute() 
PASS input.readOnly: setAttribute() to true followed by IDL get 
PASS input.readOnly: setAttribute() to false followed by getAttribute() 
PASS input.readOnly: setAttribute() to false followed by IDL get 
PASS input.readOnly: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.readOnly: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.readOnly: setAttribute() to NaN followed by getAttribute() 
PASS input.readOnly: setAttribute() to NaN followed by IDL get 
PASS input.readOnly: setAttribute() to Infinity followed by getAttribute() 
PASS input.readOnly: setAttribute() to Infinity followed by IDL get 
PASS input.readOnly: setAttribute() to -Infinity followed by getAttribute() 
PASS input.readOnly: setAttribute() to -Infinity followed by IDL get 
PASS input.readOnly: setAttribute() to "\0" followed by getAttribute() 
PASS input.readOnly: setAttribute() to "\0" followed by IDL get 
PASS input.readOnly: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.readOnly: setAttribute() to object "test-toString" followed by IDL get 
PASS input.readOnly: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.readOnly: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.readOnly: setAttribute() to "readOnly" followed by getAttribute() 
PASS input.readOnly: setAttribute() to "readOnly" followed by IDL get 
PASS input.readOnly: IDL set to "" should not throw 
PASS input.readOnly: IDL set to "" followed by hasAttribute() 
PASS input.readOnly: IDL set to "" followed by IDL get 
PASS input.readOnly: IDL set to " foo " should not throw 
PASS input.readOnly: IDL set to " foo " followed by hasAttribute() 
PASS input.readOnly: IDL set to " foo " followed by IDL get 
PASS input.readOnly: IDL set to undefined should not throw 
PASS input.readOnly: IDL set to undefined followed by hasAttribute() 
PASS input.readOnly: IDL set to undefined followed by IDL get 
PASS input.readOnly: IDL set to null should not throw 
PASS input.readOnly: IDL set to null followed by hasAttribute() 
PASS input.readOnly: IDL set to null followed by IDL get 
PASS input.readOnly: IDL set to 7 should not throw 
PASS input.readOnly: IDL set to 7 followed by hasAttribute() 
PASS input.readOnly: IDL set to 7 followed by IDL get 
PASS input.readOnly: IDL set to 1.5 should not throw 
PASS input.readOnly: IDL set to 1.5 followed by hasAttribute() 
PASS input.readOnly: IDL set to 1.5 followed by IDL get 
PASS input.readOnly: IDL set to true should not throw 
PASS input.readOnly: IDL set to true followed by hasAttribute() 
PASS input.readOnly: IDL set to true followed by IDL get 
PASS input.readOnly: IDL set to false should not throw 
PASS input.readOnly: IDL set to false followed by hasAttribute() 
PASS input.readOnly: IDL set to false followed by IDL get 
PASS input.readOnly: IDL set to object "[object Object]" should not throw 
PASS input.readOnly: IDL set to object "[object Object]" followed by hasAttribute() 
PASS input.readOnly: IDL set to object "[object Object]" followed by IDL get 
PASS input.readOnly: IDL set to NaN should not throw 
PASS input.readOnly: IDL set to NaN followed by hasAttribute() 
PASS input.readOnly: IDL set to NaN followed by IDL get 
PASS input.readOnly: IDL set to Infinity should not throw 
PASS input.readOnly: IDL set to Infinity followed by hasAttribute() 
PASS input.readOnly: IDL set to Infinity followed by IDL get 
PASS input.readOnly: IDL set to -Infinity should not throw 
PASS input.readOnly: IDL set to -Infinity followed by hasAttribute() 
PASS input.readOnly: IDL set to -Infinity followed by IDL get 
PASS input.readOnly: IDL set to "\0" should not throw 
PASS input.readOnly: IDL set to "\0" followed by hasAttribute() 
PASS input.readOnly: IDL set to "\0" followed by IDL get 
PASS input.readOnly: IDL set to object "test-toString" should not throw 
PASS input.readOnly: IDL set to object "test-toString" followed by hasAttribute() 
PASS input.readOnly: IDL set to object "test-toString" followed by IDL get 
PASS input.readOnly: IDL set to object "test-valueOf" should not throw 
PASS input.readOnly: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS input.readOnly: IDL set to object "test-valueOf" followed by IDL get 
PASS input.required: typeof IDL attribute 
PASS input.required: IDL get with DOM attribute unset 
PASS input.required: setAttribute() to "" followed by getAttribute() 
PASS input.required: setAttribute() to "" followed by IDL get 
PASS input.required: setAttribute() to " foo " followed by getAttribute() 
PASS input.required: setAttribute() to " foo " followed by IDL get 
PASS input.required: setAttribute() to undefined followed by getAttribute() 
PASS input.required: setAttribute() to undefined followed by IDL get 
PASS input.required: setAttribute() to null followed by getAttribute() 
PASS input.required: setAttribute() to null followed by IDL get 
PASS input.required: setAttribute() to 7 followed by getAttribute() 
PASS input.required: setAttribute() to 7 followed by IDL get 
PASS input.required: setAttribute() to 1.5 followed by getAttribute() 
PASS input.required: setAttribute() to 1.5 followed by IDL get 
PASS input.required: setAttribute() to true followed by getAttribute() 
PASS input.required: setAttribute() to true followed by IDL get 
PASS input.required: setAttribute() to false followed by getAttribute() 
PASS input.required: setAttribute() to false followed by IDL get 
PASS input.required: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.required: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.required: setAttribute() to NaN followed by getAttribute() 
PASS input.required: setAttribute() to NaN followed by IDL get 
PASS input.required: setAttribute() to Infinity followed by getAttribute() 
PASS input.required: setAttribute() to Infinity followed by IDL get 
PASS input.required: setAttribute() to -Infinity followed by getAttribute() 
PASS input.required: setAttribute() to -Infinity followed by IDL get 
PASS input.required: setAttribute() to "\0" followed by getAttribute() 
PASS input.required: setAttribute() to "\0" followed by IDL get 
PASS input.required: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.required: setAttribute() to object "test-toString" followed by IDL get 
PASS input.required: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.required: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.required: setAttribute() to "required" followed by getAttribute() 
PASS input.required: setAttribute() to "required" followed by IDL get 
PASS input.required: IDL set to "" should not throw 
PASS input.required: IDL set to "" followed by hasAttribute() 
PASS input.required: IDL set to "" followed by IDL get 
PASS input.required: IDL set to " foo " should not throw 
PASS input.required: IDL set to " foo " followed by hasAttribute() 
PASS input.required: IDL set to " foo " followed by IDL get 
PASS input.required: IDL set to undefined should not throw 
PASS input.required: IDL set to undefined followed by hasAttribute() 
PASS input.required: IDL set to undefined followed by IDL get 
PASS input.required: IDL set to null should not throw 
PASS input.required: IDL set to null followed by hasAttribute() 
PASS input.required: IDL set to null followed by IDL get 
PASS input.required: IDL set to 7 should not throw 
PASS input.required: IDL set to 7 followed by hasAttribute() 
PASS input.required: IDL set to 7 followed by IDL get 
PASS input.required: IDL set to 1.5 should not throw 
PASS input.required: IDL set to 1.5 followed by hasAttribute() 
PASS input.required: IDL set to 1.5 followed by IDL get 
PASS input.required: IDL set to true should not throw 
PASS input.required: IDL set to true followed by hasAttribute() 
PASS input.required: IDL set to true followed by IDL get 
PASS input.required: IDL set to false should not throw 
PASS input.required: IDL set to false followed by hasAttribute() 
PASS input.required: IDL set to false followed by IDL get 
PASS input.required: IDL set to object "[object Object]" should not throw 
PASS input.required: IDL set to object "[object Object]" followed by hasAttribute() 
PASS input.required: IDL set to object "[object Object]" followed by IDL get 
PASS input.required: IDL set to NaN should not throw 
PASS input.required: IDL set to NaN followed by hasAttribute() 
PASS input.required: IDL set to NaN followed by IDL get 
PASS input.required: IDL set to Infinity should not throw 
PASS input.required: IDL set to Infinity followed by hasAttribute() 
PASS input.required: IDL set to Infinity followed by IDL get 
PASS input.required: IDL set to -Infinity should not throw 
PASS input.required: IDL set to -Infinity followed by hasAttribute() 
PASS input.required: IDL set to -Infinity followed by IDL get 
PASS input.required: IDL set to "\0" should not throw 
PASS input.required: IDL set to "\0" followed by hasAttribute() 
PASS input.required: IDL set to "\0" followed by IDL get 
PASS input.required: IDL set to object "test-toString" should not throw 
PASS input.required: IDL set to object "test-toString" followed by hasAttribute() 
PASS input.required: IDL set to object "test-toString" followed by IDL get 
PASS input.required: IDL set to object "test-valueOf" should not throw 
PASS input.required: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS input.required: IDL set to object "test-valueOf" followed by IDL get 
PASS input.size: typeof IDL attribute 
PASS input.size: IDL get with DOM attribute unset 
PASS input.size: setAttribute() to -2147483649 followed by getAttribute() 
PASS input.size: setAttribute() to -2147483649 followed by IDL get 
PASS input.size: setAttribute() to -2147483648 followed by getAttribute() 
PASS input.size: setAttribute() to -2147483648 followed by IDL get 
PASS input.size: setAttribute() to -36 followed by getAttribute() 
PASS input.size: setAttribute() to -36 followed by IDL get 
PASS input.size: setAttribute() to -1 followed by getAttribute() 
PASS input.size: setAttribute() to -1 followed by IDL get 
PASS input.size: setAttribute() to 0 followed by getAttribute() 
PASS input.size: setAttribute() to 0 followed by IDL get 
PASS input.size: setAttribute() to 1 followed by getAttribute() 
PASS input.size: setAttribute() to 1 followed by IDL get 
PASS input.size: setAttribute() to 2147483647 followed by getAttribute() 
PASS input.size: setAttribute() to 2147483647 followed by IDL get 
PASS input.size: setAttribute() to 2147483648 followed by getAttribute() 
PASS input.size: setAttribute() to 2147483648 followed by IDL get 
PASS input.size: setAttribute() to 4294967295 followed by getAttribute() 
PASS input.size: setAttribute() to 4294967295 followed by IDL get 
PASS input.size: setAttribute() to 4294967296 followed by getAttribute() 
PASS input.size: setAttribute() to 4294967296 followed by IDL get 
PASS input.size: setAttribute() to "" followed by getAttribute() 
PASS input.size: setAttribute() to "" followed by IDL get 
PASS input.size: setAttribute() to "-1" followed by getAttribute() 
PASS input.size: setAttribute() to "-1" followed by IDL get 
PASS input.size: setAttribute() to "-0" followed by getAttribute() 
PASS input.size: setAttribute() to "-0" followed by IDL get 
PASS input.size: setAttribute() to "0" followed by getAttribute() 
PASS input.size: setAttribute() to "0" followed by IDL get 
PASS input.size: setAttribute() to "1" followed by getAttribute() 
PASS input.size: setAttribute() to "1" followed by IDL get 
PASS input.size: setAttribute() to "\t7" followed by getAttribute() 
PASS input.size: setAttribute() to "\t7" followed by IDL get 
PASS input.size: setAttribute() to "\v7" followed by getAttribute() 
FAIL input.size: setAttribute() to "\v7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to "\f7" followed by getAttribute() 
PASS input.size: setAttribute() to "\f7" followed by IDL get 
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
PASS input.size: setAttribute() to " 7" followed by IDL get 
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
PASS input.size: setAttribute() to " 7" followed by IDL get 
PASS input.size: setAttribute() to "﻿7" followed by getAttribute() 
PASS input.size: setAttribute() to "﻿7" followed by IDL get 
PASS input.size: setAttribute() to "\n7" followed by getAttribute() 
PASS input.size: setAttribute() to "\n7" followed by IDL get 
PASS input.size: setAttribute() to "\r7" followed by getAttribute() 
PASS input.size: setAttribute() to "\r7" followed by IDL get 
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
PASS input.size: setAttribute() to " 7" followed by IDL get 
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to "᠎7" followed by getAttribute() 
PASS input.size: setAttribute() to "᠎7" followed by IDL get 
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
FAIL input.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " 7" followed by getAttribute() 
PASS input.size: setAttribute() to " 7" followed by IDL get 
PASS input.size: setAttribute() to "　7" followed by getAttribute() 
FAIL input.size: setAttribute() to "　7" followed by IDL get assert_equals: expected 20 but got 7
PASS input.size: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.size: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.size: setAttribute() to undefined followed by getAttribute() 
PASS input.size: setAttribute() to undefined followed by IDL get 
PASS input.size: setAttribute() to 1.5 followed by getAttribute() 
PASS input.size: setAttribute() to 1.5 followed by IDL get 
PASS input.size: setAttribute() to true followed by getAttribute() 
PASS input.size: setAttribute() to true followed by IDL get 
PASS input.size: setAttribute() to false followed by getAttribute() 
PASS input.size: setAttribute() to false followed by IDL get 
PASS input.size: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.size: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.size: setAttribute() to NaN followed by getAttribute() 
PASS input.size: setAttribute() to NaN followed by IDL get 
PASS input.size: setAttribute() to Infinity followed by getAttribute() 
PASS input.size: setAttribute() to Infinity followed by IDL get 
PASS input.size: setAttribute() to -Infinity followed by getAttribute() 
PASS input.size: setAttribute() to -Infinity followed by IDL get 
PASS input.size: setAttribute() to "\0" followed by getAttribute() 
PASS input.size: setAttribute() to "\0" followed by IDL get 
PASS input.size: setAttribute() to object "2" followed by getAttribute() 
PASS input.size: setAttribute() to object "2" followed by IDL get 
PASS input.size: setAttribute() to object "3" followed by getAttribute() 
PASS input.size: setAttribute() to object "3" followed by IDL get 
PASS input.size: IDL set to 0 must throw INDEX_SIZE_ERR 
PASS input.size: IDL set to 1 should not throw 
PASS input.size: IDL set to 1 followed by getAttribute() 
PASS input.size: IDL set to 1 followed by IDL get 
PASS input.size: IDL set to 2147483647 should not throw 
PASS input.size: IDL set to 2147483647 followed by getAttribute() 
PASS input.size: IDL set to 2147483647 followed by IDL get 
PASS input.size: IDL set to 2147483648 should not throw 
PASS input.size: IDL set to 2147483648 followed by getAttribute() 
PASS input.size: IDL set to 2147483648 followed by IDL get 
PASS input.size: IDL set to 4294967295 should not throw 
PASS input.size: IDL set to 4294967295 followed by getAttribute() 
PASS input.size: IDL set to 4294967295 followed by IDL get 
PASS input.src: typeof IDL attribute 
PASS input.src: IDL get with DOM attribute unset 
PASS input.src: setAttribute() to "" followed by getAttribute() 
PASS input.src: setAttribute() to "" followed by IDL get 
PASS input.src: setAttribute() to " foo " followed by getAttribute() 
PASS input.src: setAttribute() to " foo " followed by IDL get 
PASS input.src: setAttribute() to "http://site.example/" followed by getAttribute() 
PASS input.src: setAttribute() to "http://site.example/" followed by IDL get 
PASS input.src: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
PASS input.src: setAttribute() to "//site.example/path???@#l" followed by IDL get 
PASS input.src: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS input.src: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS input.src: setAttribute() to undefined followed by getAttribute() 
PASS input.src: setAttribute() to undefined followed by IDL get 
PASS input.src: setAttribute() to 7 followed by getAttribute() 
PASS input.src: setAttribute() to 7 followed by IDL get 
PASS input.src: setAttribute() to 1.5 followed by getAttribute() 
PASS input.src: setAttribute() to 1.5 followed by IDL get 
PASS input.src: setAttribute() to true followed by getAttribute() 
PASS input.src: setAttribute() to true followed by IDL get 
PASS input.src: setAttribute() to false followed by getAttribute() 
PASS input.src: setAttribute() to false followed by IDL get 
PASS input.src: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.src: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.src: setAttribute() to NaN followed by getAttribute() 
PASS input.src: setAttribute() to NaN followed by IDL get 
PASS input.src: setAttribute() to Infinity followed by getAttribute() 
PASS input.src: setAttribute() to Infinity followed by IDL get 
PASS input.src: setAttribute() to -Infinity followed by getAttribute() 
PASS input.src: setAttribute() to -Infinity followed by IDL get 
PASS input.src: setAttribute() to "\0" followed by getAttribute() 
PASS input.src: setAttribute() to "\0" followed by IDL get 
PASS input.src: setAttribute() to null followed by getAttribute() 
PASS input.src: setAttribute() to null followed by IDL get 
PASS input.src: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.src: setAttribute() to object "test-toString" followed by IDL get 
PASS input.src: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.src: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.src: IDL set to "" should not throw 
PASS input.src: IDL set to "" followed by getAttribute() 
PASS input.src: IDL set to "" followed by IDL get 
PASS input.src: IDL set to " foo " should not throw 
PASS input.src: IDL set to " foo " followed by getAttribute() 
PASS input.src: IDL set to " foo " followed by IDL get 
PASS input.src: IDL set to "http://site.example/" should not throw 
PASS input.src: IDL set to "http://site.example/" followed by getAttribute() 
PASS input.src: IDL set to "http://site.example/" followed by IDL get 
PASS input.src: IDL set to "//site.example/path???@#l" should not throw 
PASS input.src: IDL set to "//site.example/path???@#l" followed by getAttribute() 
PASS input.src: IDL set to "//site.example/path???@#l" followed by IDL get 
PASS input.src: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
PASS input.src: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS input.src: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS input.src: IDL set to undefined should not throw 
PASS input.src: IDL set to undefined followed by getAttribute() 
PASS input.src: IDL set to undefined followed by IDL get 
PASS input.src: IDL set to 7 should not throw 
PASS input.src: IDL set to 7 followed by getAttribute() 
PASS input.src: IDL set to 7 followed by IDL get 
PASS input.src: IDL set to 1.5 should not throw 
PASS input.src: IDL set to 1.5 followed by getAttribute() 
PASS input.src: IDL set to 1.5 followed by IDL get 
PASS input.src: IDL set to true should not throw 
PASS input.src: IDL set to true followed by getAttribute() 
PASS input.src: IDL set to true followed by IDL get 
PASS input.src: IDL set to false should not throw 
PASS input.src: IDL set to false followed by getAttribute() 
PASS input.src: IDL set to false followed by IDL get 
PASS input.src: IDL set to object "[object Object]" should not throw 
PASS input.src: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.src: IDL set to object "[object Object]" followed by IDL get 
PASS input.src: IDL set to NaN should not throw 
PASS input.src: IDL set to NaN followed by getAttribute() 
PASS input.src: IDL set to NaN followed by IDL get 
PASS input.src: IDL set to Infinity should not throw 
PASS input.src: IDL set to Infinity followed by getAttribute() 
PASS input.src: IDL set to Infinity followed by IDL get 
PASS input.src: IDL set to -Infinity should not throw 
PASS input.src: IDL set to -Infinity followed by getAttribute() 
PASS input.src: IDL set to -Infinity followed by IDL get 
PASS input.src: IDL set to "\0" should not throw 
PASS input.src: IDL set to "\0" followed by getAttribute() 
PASS input.src: IDL set to "\0" followed by IDL get 
PASS input.src: IDL set to null should not throw 
PASS input.src: IDL set to null followed by getAttribute() 
PASS input.src: IDL set to null followed by IDL get 
PASS input.src: IDL set to object "test-toString" should not throw 
PASS input.src: IDL set to object "test-toString" followed by getAttribute() 
PASS input.src: IDL set to object "test-toString" followed by IDL get 
PASS input.src: IDL set to object "test-valueOf" should not throw 
PASS input.src: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.src: IDL set to object "test-valueOf" followed by IDL get 
PASS input.step: typeof IDL attribute 
PASS input.step: IDL get with DOM attribute unset 
PASS input.step: setAttribute() to "" followed by getAttribute() 
PASS input.step: setAttribute() to "" followed by IDL get 
PASS input.step: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.step: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.step: setAttribute() to undefined followed by getAttribute() 
PASS input.step: setAttribute() to undefined followed by IDL get 
PASS input.step: setAttribute() to 7 followed by getAttribute() 
PASS input.step: setAttribute() to 7 followed by IDL get 
PASS input.step: setAttribute() to 1.5 followed by getAttribute() 
PASS input.step: setAttribute() to 1.5 followed by IDL get 
PASS input.step: setAttribute() to true followed by getAttribute() 
PASS input.step: setAttribute() to true followed by IDL get 
PASS input.step: setAttribute() to false followed by getAttribute() 
PASS input.step: setAttribute() to false followed by IDL get 
PASS input.step: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.step: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.step: setAttribute() to NaN followed by getAttribute() 
PASS input.step: setAttribute() to NaN followed by IDL get 
PASS input.step: setAttribute() to Infinity followed by getAttribute() 
PASS input.step: setAttribute() to Infinity followed by IDL get 
PASS input.step: setAttribute() to -Infinity followed by getAttribute() 
PASS input.step: setAttribute() to -Infinity followed by IDL get 
PASS input.step: setAttribute() to "\0" followed by getAttribute() 
PASS input.step: setAttribute() to "\0" followed by IDL get 
PASS input.step: setAttribute() to null followed by getAttribute() 
PASS input.step: setAttribute() to null followed by IDL get 
PASS input.step: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.step: setAttribute() to object "test-toString" followed by IDL get 
PASS input.step: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.step: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.step: IDL set to "" should not throw 
PASS input.step: IDL set to "" followed by getAttribute() 
PASS input.step: IDL set to "" followed by IDL get 
PASS input.step: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.step: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.step: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.step: IDL set to undefined should not throw 
PASS input.step: IDL set to undefined followed by getAttribute() 
PASS input.step: IDL set to undefined followed by IDL get 
PASS input.step: IDL set to 7 should not throw 
PASS input.step: IDL set to 7 followed by getAttribute() 
PASS input.step: IDL set to 7 followed by IDL get 
PASS input.step: IDL set to 1.5 should not throw 
PASS input.step: IDL set to 1.5 followed by getAttribute() 
PASS input.step: IDL set to 1.5 followed by IDL get 
PASS input.step: IDL set to true should not throw 
PASS input.step: IDL set to true followed by getAttribute() 
PASS input.step: IDL set to true followed by IDL get 
PASS input.step: IDL set to false should not throw 
PASS input.step: IDL set to false followed by getAttribute() 
PASS input.step: IDL set to false followed by IDL get 
PASS input.step: IDL set to object "[object Object]" should not throw 
PASS input.step: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.step: IDL set to object "[object Object]" followed by IDL get 
PASS input.step: IDL set to NaN should not throw 
PASS input.step: IDL set to NaN followed by getAttribute() 
PASS input.step: IDL set to NaN followed by IDL get 
PASS input.step: IDL set to Infinity should not throw 
PASS input.step: IDL set to Infinity followed by getAttribute() 
PASS input.step: IDL set to Infinity followed by IDL get 
PASS input.step: IDL set to -Infinity should not throw 
PASS input.step: IDL set to -Infinity followed by getAttribute() 
PASS input.step: IDL set to -Infinity followed by IDL get 
PASS input.step: IDL set to "\0" should not throw 
PASS input.step: IDL set to "\0" followed by getAttribute() 
PASS input.step: IDL set to "\0" followed by IDL get 
PASS input.step: IDL set to null should not throw 
PASS input.step: IDL set to null followed by getAttribute() 
PASS input.step: IDL set to null followed by IDL get 
PASS input.step: IDL set to object "test-toString" should not throw 
PASS input.step: IDL set to object "test-toString" followed by getAttribute() 
PASS input.step: IDL set to object "test-toString" followed by IDL get 
PASS input.step: IDL set to object "test-valueOf" should not throw 
PASS input.step: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.step: IDL set to object "test-valueOf" followed by IDL get 
PASS input.type: typeof IDL attribute 
PASS input.type: IDL get with DOM attribute unset 
PASS input.type: setAttribute() to "" followed by getAttribute() 
PASS input.type: setAttribute() to "" followed by IDL get 
PASS input.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.type: setAttribute() to undefined followed by getAttribute() 
PASS input.type: setAttribute() to undefined followed by IDL get 
PASS input.type: setAttribute() to 7 followed by getAttribute() 
PASS input.type: setAttribute() to 7 followed by IDL get 
PASS input.type: setAttribute() to 1.5 followed by getAttribute() 
PASS input.type: setAttribute() to 1.5 followed by IDL get 
PASS input.type: setAttribute() to true followed by getAttribute() 
PASS input.type: setAttribute() to true followed by IDL get 
PASS input.type: setAttribute() to false followed by getAttribute() 
PASS input.type: setAttribute() to false followed by IDL get 
PASS input.type: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.type: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.type: setAttribute() to NaN followed by getAttribute() 
PASS input.type: setAttribute() to NaN followed by IDL get 
PASS input.type: setAttribute() to Infinity followed by getAttribute() 
PASS input.type: setAttribute() to Infinity followed by IDL get 
PASS input.type: setAttribute() to -Infinity followed by getAttribute() 
PASS input.type: setAttribute() to -Infinity followed by IDL get 
PASS input.type: setAttribute() to "\0" followed by getAttribute() 
PASS input.type: setAttribute() to "\0" followed by IDL get 
PASS input.type: setAttribute() to null followed by getAttribute() 
PASS input.type: setAttribute() to null followed by IDL get 
PASS input.type: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.type: setAttribute() to object "test-toString" followed by IDL get 
PASS input.type: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.type: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.type: setAttribute() to "hidden" followed by getAttribute() 
PASS input.type: setAttribute() to "hidden" followed by IDL get 
PASS input.type: setAttribute() to "xhidden" followed by getAttribute() 
PASS input.type: setAttribute() to "xhidden" followed by IDL get 
PASS input.type: setAttribute() to "hidden\0" followed by getAttribute() 
PASS input.type: setAttribute() to "hidden\0" followed by IDL get 
PASS input.type: setAttribute() to "idden" followed by getAttribute() 
PASS input.type: setAttribute() to "idden" followed by IDL get 
PASS input.type: setAttribute() to "HIDDEN" followed by getAttribute() 
PASS input.type: setAttribute() to "HIDDEN" followed by IDL get 
PASS input.type: setAttribute() to "text" followed by getAttribute() 
PASS input.type: setAttribute() to "text" followed by IDL get 
PASS input.type: setAttribute() to "xtext" followed by getAttribute() 
PASS input.type: setAttribute() to "xtext" followed by IDL get 
PASS input.type: setAttribute() to "text\0" followed by getAttribute() 
PASS input.type: setAttribute() to "text\0" followed by IDL get 
PASS input.type: setAttribute() to "ext" followed by getAttribute() 
PASS input.type: setAttribute() to "ext" followed by IDL get 
PASS input.type: setAttribute() to "TEXT" followed by getAttribute() 
PASS input.type: setAttribute() to "TEXT" followed by IDL get 
PASS input.type: setAttribute() to "search" followed by getAttribute() 
PASS input.type: setAttribute() to "search" followed by IDL get 
PASS input.type: setAttribute() to "xsearch" followed by getAttribute() 
PASS input.type: setAttribute() to "xsearch" followed by IDL get 
PASS input.type: setAttribute() to "search\0" followed by getAttribute() 
PASS input.type: setAttribute() to "search\0" followed by IDL get 
PASS input.type: setAttribute() to "earch" followed by getAttribute() 
PASS input.type: setAttribute() to "earch" followed by IDL get 
PASS input.type: setAttribute() to "SEARCH" followed by getAttribute() 
PASS input.type: setAttribute() to "SEARCH" followed by IDL get 
PASS input.type: setAttribute() to "tel" followed by getAttribute() 
PASS input.type: setAttribute() to "tel" followed by IDL get 
PASS input.type: setAttribute() to "xtel" followed by getAttribute() 
PASS input.type: setAttribute() to "xtel" followed by IDL get 
PASS input.type: setAttribute() to "tel\0" followed by getAttribute() 
PASS input.type: setAttribute() to "tel\0" followed by IDL get 
PASS input.type: setAttribute() to "el" followed by getAttribute() 
PASS input.type: setAttribute() to "el" followed by IDL get 
PASS input.type: setAttribute() to "TEL" followed by getAttribute() 
PASS input.type: setAttribute() to "TEL" followed by IDL get 
PASS input.type: setAttribute() to "url" followed by getAttribute() 
PASS input.type: setAttribute() to "url" followed by IDL get 
PASS input.type: setAttribute() to "xurl" followed by getAttribute() 
PASS input.type: setAttribute() to "xurl" followed by IDL get 
PASS input.type: setAttribute() to "url\0" followed by getAttribute() 
PASS input.type: setAttribute() to "url\0" followed by IDL get 
PASS input.type: setAttribute() to "rl" followed by getAttribute() 
PASS input.type: setAttribute() to "rl" followed by IDL get 
PASS input.type: setAttribute() to "URL" followed by getAttribute() 
PASS input.type: setAttribute() to "URL" followed by IDL get 
PASS input.type: setAttribute() to "email" followed by getAttribute() 
PASS input.type: setAttribute() to "email" followed by IDL get 
PASS input.type: setAttribute() to "xemail" followed by getAttribute() 
PASS input.type: setAttribute() to "xemail" followed by IDL get 
PASS input.type: setAttribute() to "email\0" followed by getAttribute() 
PASS input.type: setAttribute() to "email\0" followed by IDL get 
PASS input.type: setAttribute() to "mail" followed by getAttribute() 
PASS input.type: setAttribute() to "mail" followed by IDL get 
PASS input.type: setAttribute() to "EMAIL" followed by getAttribute() 
PASS input.type: setAttribute() to "EMAIL" followed by IDL get 
PASS input.type: setAttribute() to "password" followed by getAttribute() 
PASS input.type: setAttribute() to "password" followed by IDL get 
PASS input.type: setAttribute() to "xpassword" followed by getAttribute() 
PASS input.type: setAttribute() to "xpassword" followed by IDL get 
PASS input.type: setAttribute() to "password\0" followed by getAttribute() 
PASS input.type: setAttribute() to "password\0" followed by IDL get 
PASS input.type: setAttribute() to "assword" followed by getAttribute() 
PASS input.type: setAttribute() to "assword" followed by IDL get 
PASS input.type: setAttribute() to "PASSWORD" followed by getAttribute() 
PASS input.type: setAttribute() to "PASSWORD" followed by IDL get 
PASS input.type: setAttribute() to "datetime" followed by getAttribute() 
FAIL input.type: setAttribute() to "datetime" followed by IDL get assert_equals: expected "datetime" but got "text"
PASS input.type: setAttribute() to "xdatetime" followed by getAttribute() 
PASS input.type: setAttribute() to "xdatetime" followed by IDL get 
PASS input.type: setAttribute() to "datetime\0" followed by getAttribute() 
PASS input.type: setAttribute() to "datetime\0" followed by IDL get 
PASS input.type: setAttribute() to "atetime" followed by getAttribute() 
PASS input.type: setAttribute() to "atetime" followed by IDL get 
PASS input.type: setAttribute() to "DATETIME" followed by getAttribute() 
FAIL input.type: setAttribute() to "DATETIME" followed by IDL get assert_equals: expected "datetime" but got "text"
PASS input.type: setAttribute() to "date" followed by getAttribute() 
FAIL input.type: setAttribute() to "date" followed by IDL get assert_equals: expected "date" but got "text"
PASS input.type: setAttribute() to "xdate" followed by getAttribute() 
PASS input.type: setAttribute() to "xdate" followed by IDL get 
PASS input.type: setAttribute() to "date\0" followed by getAttribute() 
PASS input.type: setAttribute() to "date\0" followed by IDL get 
PASS input.type: setAttribute() to "ate" followed by getAttribute() 
PASS input.type: setAttribute() to "ate" followed by IDL get 
PASS input.type: setAttribute() to "DATE" followed by getAttribute() 
FAIL input.type: setAttribute() to "DATE" followed by IDL get assert_equals: expected "date" but got "text"
PASS input.type: setAttribute() to "month" followed by getAttribute() 
FAIL input.type: setAttribute() to "month" followed by IDL get assert_equals: expected "month" but got "text"
PASS input.type: setAttribute() to "xmonth" followed by getAttribute() 
PASS input.type: setAttribute() to "xmonth" followed by IDL get 
PASS input.type: setAttribute() to "month\0" followed by getAttribute() 
PASS input.type: setAttribute() to "month\0" followed by IDL get 
PASS input.type: setAttribute() to "onth" followed by getAttribute() 
PASS input.type: setAttribute() to "onth" followed by IDL get 
PASS input.type: setAttribute() to "MONTH" followed by getAttribute() 
FAIL input.type: setAttribute() to "MONTH" followed by IDL get assert_equals: expected "month" but got "text"
PASS input.type: setAttribute() to "week" followed by getAttribute() 
FAIL input.type: setAttribute() to "week" followed by IDL get assert_equals: expected "week" but got "text"
PASS input.type: setAttribute() to "xweek" followed by getAttribute() 
PASS input.type: setAttribute() to "xweek" followed by IDL get 
PASS input.type: setAttribute() to "week\0" followed by getAttribute() 
PASS input.type: setAttribute() to "week\0" followed by IDL get 
PASS input.type: setAttribute() to "eek" followed by getAttribute() 
PASS input.type: setAttribute() to "eek" followed by IDL get 
PASS input.type: setAttribute() to "WEEK" followed by getAttribute() 
FAIL input.type: setAttribute() to "WEEK" followed by IDL get assert_equals: expected "week" but got "text"
PASS input.type: setAttribute() to "time" followed by getAttribute() 
FAIL input.type: setAttribute() to "time" followed by IDL get assert_equals: expected "time" but got "text"
PASS input.type: setAttribute() to "xtime" followed by getAttribute() 
PASS input.type: setAttribute() to "xtime" followed by IDL get 
PASS input.type: setAttribute() to "time\0" followed by getAttribute() 
PASS input.type: setAttribute() to "time\0" followed by IDL get 
PASS input.type: setAttribute() to "ime" followed by getAttribute() 
PASS input.type: setAttribute() to "ime" followed by IDL get 
PASS input.type: setAttribute() to "TIME" followed by getAttribute() 
FAIL input.type: setAttribute() to "TIME" followed by IDL get assert_equals: expected "time" but got "text"
PASS input.type: setAttribute() to "datetime-local" followed by getAttribute() 
FAIL input.type: setAttribute() to "datetime-local" followed by IDL get assert_equals: expected "datetime-local" but got "text"
PASS input.type: setAttribute() to "xdatetime-local" followed by getAttribute() 
PASS input.type: setAttribute() to "xdatetime-local" followed by IDL get 
PASS input.type: setAttribute() to "datetime-local\0" followed by getAttribute() 
PASS input.type: setAttribute() to "datetime-local\0" followed by IDL get 
PASS input.type: setAttribute() to "atetime-local" followed by getAttribute() 
PASS input.type: setAttribute() to "atetime-local" followed by IDL get 
PASS input.type: setAttribute() to "DATETIME-LOCAL" followed by getAttribute() 
FAIL input.type: setAttribute() to "DATETIME-LOCAL" followed by IDL get assert_equals: expected "datetime-local" but got "text"
PASS input.type: setAttribute() to "number" followed by getAttribute() 
PASS input.type: setAttribute() to "number" followed by IDL get 
PASS input.type: setAttribute() to "xnumber" followed by getAttribute() 
PASS input.type: setAttribute() to "xnumber" followed by IDL get 
PASS input.type: setAttribute() to "number\0" followed by getAttribute() 
PASS input.type: setAttribute() to "number\0" followed by IDL get 
PASS input.type: setAttribute() to "umber" followed by getAttribute() 
PASS input.type: setAttribute() to "umber" followed by IDL get 
PASS input.type: setAttribute() to "NUMBER" followed by getAttribute() 
PASS input.type: setAttribute() to "NUMBER" followed by IDL get 
PASS input.type: setAttribute() to "range" followed by getAttribute() 
PASS input.type: setAttribute() to "range" followed by IDL get 
PASS input.type: setAttribute() to "xrange" followed by getAttribute() 
PASS input.type: setAttribute() to "xrange" followed by IDL get 
PASS input.type: setAttribute() to "range\0" followed by getAttribute() 
PASS input.type: setAttribute() to "range\0" followed by IDL get 
PASS input.type: setAttribute() to "ange" followed by getAttribute() 
PASS input.type: setAttribute() to "ange" followed by IDL get 
PASS input.type: setAttribute() to "RANGE" followed by getAttribute() 
PASS input.type: setAttribute() to "RANGE" followed by IDL get 
PASS input.type: setAttribute() to "color" followed by getAttribute() 
PASS input.type: setAttribute() to "color" followed by IDL get 
PASS input.type: setAttribute() to "xcolor" followed by getAttribute() 
PASS input.type: setAttribute() to "xcolor" followed by IDL get 
PASS input.type: setAttribute() to "color\0" followed by getAttribute() 
PASS input.type: setAttribute() to "color\0" followed by IDL get 
PASS input.type: setAttribute() to "olor" followed by getAttribute() 
PASS input.type: setAttribute() to "olor" followed by IDL get 
PASS input.type: setAttribute() to "COLOR" followed by getAttribute() 
PASS input.type: setAttribute() to "COLOR" followed by IDL get 
PASS input.type: setAttribute() to "checkbox" followed by getAttribute() 
PASS input.type: setAttribute() to "checkbox" followed by IDL get 
PASS input.type: setAttribute() to "xcheckbox" followed by getAttribute() 
PASS input.type: setAttribute() to "xcheckbox" followed by IDL get 
PASS input.type: setAttribute() to "checkbox\0" followed by getAttribute() 
PASS input.type: setAttribute() to "checkbox\0" followed by IDL get 
PASS input.type: setAttribute() to "heckbox" followed by getAttribute() 
PASS input.type: setAttribute() to "heckbox" followed by IDL get 
PASS input.type: setAttribute() to "CHECKBOX" followed by getAttribute() 
PASS input.type: setAttribute() to "CHECKBOX" followed by IDL get 
PASS input.type: setAttribute() to "radio" followed by getAttribute() 
PASS input.type: setAttribute() to "radio" followed by IDL get 
PASS input.type: setAttribute() to "xradio" followed by getAttribute() 
PASS input.type: setAttribute() to "xradio" followed by IDL get 
PASS input.type: setAttribute() to "radio\0" followed by getAttribute() 
PASS input.type: setAttribute() to "radio\0" followed by IDL get 
PASS input.type: setAttribute() to "adio" followed by getAttribute() 
PASS input.type: setAttribute() to "adio" followed by IDL get 
PASS input.type: setAttribute() to "RADIO" followed by getAttribute() 
PASS input.type: setAttribute() to "RADIO" followed by IDL get 
FAIL input.type: setAttribute() to "file" followed by getAttribute() assert_equals: expected "file" but got "radio"
FAIL input.type: setAttribute() to "file" followed by IDL get assert_equals: expected "file" but got "radio"
PASS input.type: setAttribute() to "xfile" followed by getAttribute() 
PASS input.type: setAttribute() to "xfile" followed by IDL get 
PASS input.type: setAttribute() to "file\0" followed by getAttribute() 
PASS input.type: setAttribute() to "file\0" followed by IDL get 
PASS input.type: setAttribute() to "ile" followed by getAttribute() 
PASS input.type: setAttribute() to "ile" followed by IDL get 
FAIL input.type: setAttribute() to "FILE" followed by getAttribute() assert_equals: expected "FILE" but got "text"
FAIL input.type: setAttribute() to "FILE" followed by IDL get assert_equals: expected "file" but got "text"
PASS input.type: setAttribute() to "submit" followed by getAttribute() 
PASS input.type: setAttribute() to "submit" followed by IDL get 
PASS input.type: setAttribute() to "xsubmit" followed by getAttribute() 
PASS input.type: setAttribute() to "xsubmit" followed by IDL get 
PASS input.type: setAttribute() to "submit\0" followed by getAttribute() 
PASS input.type: setAttribute() to "submit\0" followed by IDL get 
PASS input.type: setAttribute() to "ubmit" followed by getAttribute() 
PASS input.type: setAttribute() to "ubmit" followed by IDL get 
PASS input.type: setAttribute() to "SUBMIT" followed by getAttribute() 
PASS input.type: setAttribute() to "SUBMIT" followed by IDL get 
PASS input.type: setAttribute() to "image" followed by getAttribute() 
PASS input.type: setAttribute() to "image" followed by IDL get 
PASS input.type: setAttribute() to "ximage" followed by getAttribute() 
PASS input.type: setAttribute() to "ximage" followed by IDL get 
PASS input.type: setAttribute() to "image\0" followed by getAttribute() 
PASS input.type: setAttribute() to "image\0" followed by IDL get 
PASS input.type: setAttribute() to "mage" followed by getAttribute() 
PASS input.type: setAttribute() to "mage" followed by IDL get 
PASS input.type: setAttribute() to "IMAGE" followed by getAttribute() 
PASS input.type: setAttribute() to "IMAGE" followed by IDL get 
PASS input.type: setAttribute() to "reset" followed by getAttribute() 
PASS input.type: setAttribute() to "reset" followed by IDL get 
PASS input.type: setAttribute() to "xreset" followed by getAttribute() 
PASS input.type: setAttribute() to "xreset" followed by IDL get 
PASS input.type: setAttribute() to "reset\0" followed by getAttribute() 
PASS input.type: setAttribute() to "reset\0" followed by IDL get 
PASS input.type: setAttribute() to "eset" followed by getAttribute() 
PASS input.type: setAttribute() to "eset" followed by IDL get 
PASS input.type: setAttribute() to "RESET" followed by getAttribute() 
PASS input.type: setAttribute() to "RESET" followed by IDL get 
PASS input.type: setAttribute() to "button" followed by getAttribute() 
PASS input.type: setAttribute() to "button" followed by IDL get 
PASS input.type: setAttribute() to "xbutton" followed by getAttribute() 
PASS input.type: setAttribute() to "xbutton" followed by IDL get 
PASS input.type: setAttribute() to "button\0" followed by getAttribute() 
PASS input.type: setAttribute() to "button\0" followed by IDL get 
PASS input.type: setAttribute() to "utton" followed by getAttribute() 
PASS input.type: setAttribute() to "utton" followed by IDL get 
PASS input.type: setAttribute() to "BUTTON" followed by getAttribute() 
PASS input.type: setAttribute() to "BUTTON" followed by IDL get 
PASS input.type: IDL set to "" should not throw 
PASS input.type: IDL set to "" followed by getAttribute() 
PASS input.type: IDL set to "" followed by IDL get 
PASS input.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.type: IDL set to undefined should not throw 
PASS input.type: IDL set to undefined followed by getAttribute() 
PASS input.type: IDL set to undefined followed by IDL get 
PASS input.type: IDL set to 7 should not throw 
PASS input.type: IDL set to 7 followed by getAttribute() 
PASS input.type: IDL set to 7 followed by IDL get 
PASS input.type: IDL set to 1.5 should not throw 
PASS input.type: IDL set to 1.5 followed by getAttribute() 
PASS input.type: IDL set to 1.5 followed by IDL get 
PASS input.type: IDL set to true should not throw 
PASS input.type: IDL set to true followed by getAttribute() 
PASS input.type: IDL set to true followed by IDL get 
PASS input.type: IDL set to false should not throw 
PASS input.type: IDL set to false followed by getAttribute() 
PASS input.type: IDL set to false followed by IDL get 
PASS input.type: IDL set to object "[object Object]" should not throw 
PASS input.type: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.type: IDL set to object "[object Object]" followed by IDL get 
PASS input.type: IDL set to NaN should not throw 
PASS input.type: IDL set to NaN followed by getAttribute() 
PASS input.type: IDL set to NaN followed by IDL get 
PASS input.type: IDL set to Infinity should not throw 
PASS input.type: IDL set to Infinity followed by getAttribute() 
PASS input.type: IDL set to Infinity followed by IDL get 
PASS input.type: IDL set to -Infinity should not throw 
PASS input.type: IDL set to -Infinity followed by getAttribute() 
PASS input.type: IDL set to -Infinity followed by IDL get 
PASS input.type: IDL set to "\0" should not throw 
PASS input.type: IDL set to "\0" followed by getAttribute() 
PASS input.type: IDL set to "\0" followed by IDL get 
PASS input.type: IDL set to null should not throw 
PASS input.type: IDL set to null followed by IDL get 
PASS input.type: IDL set to object "test-toString" should not throw 
PASS input.type: IDL set to object "test-toString" followed by getAttribute() 
PASS input.type: IDL set to object "test-toString" followed by IDL get 
PASS input.type: IDL set to object "test-valueOf" should not throw 
PASS input.type: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.type: IDL set to object "test-valueOf" followed by IDL get 
PASS input.type: IDL set to "hidden" should not throw 
PASS input.type: IDL set to "hidden" followed by getAttribute() 
PASS input.type: IDL set to "hidden" followed by IDL get 
PASS input.type: IDL set to "xhidden" should not throw 
PASS input.type: IDL set to "xhidden" followed by getAttribute() 
PASS input.type: IDL set to "xhidden" followed by IDL get 
PASS input.type: IDL set to "hidden\0" should not throw 
PASS input.type: IDL set to "hidden\0" followed by getAttribute() 
PASS input.type: IDL set to "hidden\0" followed by IDL get 
PASS input.type: IDL set to "idden" should not throw 
PASS input.type: IDL set to "idden" followed by getAttribute() 
PASS input.type: IDL set to "idden" followed by IDL get 
PASS input.type: IDL set to "HIDDEN" should not throw 
PASS input.type: IDL set to "HIDDEN" followed by getAttribute() 
PASS input.type: IDL set to "HIDDEN" followed by IDL get 
PASS input.type: IDL set to "text" should not throw 
PASS input.type: IDL set to "text" followed by getAttribute() 
PASS input.type: IDL set to "text" followed by IDL get 
PASS input.type: IDL set to "xtext" should not throw 
PASS input.type: IDL set to "xtext" followed by getAttribute() 
PASS input.type: IDL set to "xtext" followed by IDL get 
PASS input.type: IDL set to "text\0" should not throw 
PASS input.type: IDL set to "text\0" followed by getAttribute() 
PASS input.type: IDL set to "text\0" followed by IDL get 
PASS input.type: IDL set to "ext" should not throw 
PASS input.type: IDL set to "ext" followed by getAttribute() 
PASS input.type: IDL set to "ext" followed by IDL get 
PASS input.type: IDL set to "TEXT" should not throw 
PASS input.type: IDL set to "TEXT" followed by getAttribute() 
PASS input.type: IDL set to "TEXT" followed by IDL get 
PASS input.type: IDL set to "search" should not throw 
PASS input.type: IDL set to "search" followed by getAttribute() 
PASS input.type: IDL set to "search" followed by IDL get 
PASS input.type: IDL set to "xsearch" should not throw 
PASS input.type: IDL set to "xsearch" followed by getAttribute() 
PASS input.type: IDL set to "xsearch" followed by IDL get 
PASS input.type: IDL set to "search\0" should not throw 
PASS input.type: IDL set to "search\0" followed by getAttribute() 
PASS input.type: IDL set to "search\0" followed by IDL get 
PASS input.type: IDL set to "earch" should not throw 
PASS input.type: IDL set to "earch" followed by getAttribute() 
PASS input.type: IDL set to "earch" followed by IDL get 
PASS input.type: IDL set to "SEARCH" should not throw 
PASS input.type: IDL set to "SEARCH" followed by getAttribute() 
PASS input.type: IDL set to "SEARCH" followed by IDL get 
PASS input.type: IDL set to "tel" should not throw 
PASS input.type: IDL set to "tel" followed by getAttribute() 
PASS input.type: IDL set to "tel" followed by IDL get 
PASS input.type: IDL set to "xtel" should not throw 
PASS input.type: IDL set to "xtel" followed by getAttribute() 
PASS input.type: IDL set to "xtel" followed by IDL get 
PASS input.type: IDL set to "tel\0" should not throw 
PASS input.type: IDL set to "tel\0" followed by getAttribute() 
PASS input.type: IDL set to "tel\0" followed by IDL get 
PASS input.type: IDL set to "el" should not throw 
PASS input.type: IDL set to "el" followed by getAttribute() 
PASS input.type: IDL set to "el" followed by IDL get 
PASS input.type: IDL set to "TEL" should not throw 
PASS input.type: IDL set to "TEL" followed by getAttribute() 
PASS input.type: IDL set to "TEL" followed by IDL get 
PASS input.type: IDL set to "url" should not throw 
PASS input.type: IDL set to "url" followed by getAttribute() 
PASS input.type: IDL set to "url" followed by IDL get 
PASS input.type: IDL set to "xurl" should not throw 
PASS input.type: IDL set to "xurl" followed by getAttribute() 
PASS input.type: IDL set to "xurl" followed by IDL get 
PASS input.type: IDL set to "url\0" should not throw 
PASS input.type: IDL set to "url\0" followed by getAttribute() 
PASS input.type: IDL set to "url\0" followed by IDL get 
PASS input.type: IDL set to "rl" should not throw 
PASS input.type: IDL set to "rl" followed by getAttribute() 
PASS input.type: IDL set to "rl" followed by IDL get 
PASS input.type: IDL set to "URL" should not throw 
PASS input.type: IDL set to "URL" followed by getAttribute() 
PASS input.type: IDL set to "URL" followed by IDL get 
PASS input.type: IDL set to "email" should not throw 
PASS input.type: IDL set to "email" followed by getAttribute() 
PASS input.type: IDL set to "email" followed by IDL get 
PASS input.type: IDL set to "xemail" should not throw 
PASS input.type: IDL set to "xemail" followed by getAttribute() 
PASS input.type: IDL set to "xemail" followed by IDL get 
PASS input.type: IDL set to "email\0" should not throw 
PASS input.type: IDL set to "email\0" followed by getAttribute() 
PASS input.type: IDL set to "email\0" followed by IDL get 
PASS input.type: IDL set to "mail" should not throw 
PASS input.type: IDL set to "mail" followed by getAttribute() 
PASS input.type: IDL set to "mail" followed by IDL get 
PASS input.type: IDL set to "EMAIL" should not throw 
PASS input.type: IDL set to "EMAIL" followed by getAttribute() 
PASS input.type: IDL set to "EMAIL" followed by IDL get 
PASS input.type: IDL set to "password" should not throw 
PASS input.type: IDL set to "password" followed by getAttribute() 
PASS input.type: IDL set to "password" followed by IDL get 
PASS input.type: IDL set to "xpassword" should not throw 
PASS input.type: IDL set to "xpassword" followed by getAttribute() 
PASS input.type: IDL set to "xpassword" followed by IDL get 
PASS input.type: IDL set to "password\0" should not throw 
PASS input.type: IDL set to "password\0" followed by getAttribute() 
PASS input.type: IDL set to "password\0" followed by IDL get 
PASS input.type: IDL set to "assword" should not throw 
PASS input.type: IDL set to "assword" followed by getAttribute() 
PASS input.type: IDL set to "assword" followed by IDL get 
PASS input.type: IDL set to "PASSWORD" should not throw 
PASS input.type: IDL set to "PASSWORD" followed by getAttribute() 
PASS input.type: IDL set to "PASSWORD" followed by IDL get 
PASS input.type: IDL set to "datetime" should not throw 
PASS input.type: IDL set to "datetime" followed by getAttribute() 
FAIL input.type: IDL set to "datetime" followed by IDL get assert_equals: expected "datetime" but got "text"
PASS input.type: IDL set to "xdatetime" should not throw 
PASS input.type: IDL set to "xdatetime" followed by getAttribute() 
PASS input.type: IDL set to "xdatetime" followed by IDL get 
PASS input.type: IDL set to "datetime\0" should not throw 
PASS input.type: IDL set to "datetime\0" followed by getAttribute() 
PASS input.type: IDL set to "datetime\0" followed by IDL get 
PASS input.type: IDL set to "atetime" should not throw 
PASS input.type: IDL set to "atetime" followed by getAttribute() 
PASS input.type: IDL set to "atetime" followed by IDL get 
PASS input.type: IDL set to "DATETIME" should not throw 
PASS input.type: IDL set to "DATETIME" followed by getAttribute() 
FAIL input.type: IDL set to "DATETIME" followed by IDL get assert_equals: expected "datetime" but got "text"
PASS input.type: IDL set to "date" should not throw 
PASS input.type: IDL set to "date" followed by getAttribute() 
FAIL input.type: IDL set to "date" followed by IDL get assert_equals: expected "date" but got "text"
PASS input.type: IDL set to "xdate" should not throw 
PASS input.type: IDL set to "xdate" followed by getAttribute() 
PASS input.type: IDL set to "xdate" followed by IDL get 
PASS input.type: IDL set to "date\0" should not throw 
PASS input.type: IDL set to "date\0" followed by getAttribute() 
PASS input.type: IDL set to "date\0" followed by IDL get 
PASS input.type: IDL set to "ate" should not throw 
PASS input.type: IDL set to "ate" followed by getAttribute() 
PASS input.type: IDL set to "ate" followed by IDL get 
PASS input.type: IDL set to "DATE" should not throw 
PASS input.type: IDL set to "DATE" followed by getAttribute() 
FAIL input.type: IDL set to "DATE" followed by IDL get assert_equals: expected "date" but got "text"
PASS input.type: IDL set to "month" should not throw 
PASS input.type: IDL set to "month" followed by getAttribute() 
FAIL input.type: IDL set to "month" followed by IDL get assert_equals: expected "month" but got "text"
PASS input.type: IDL set to "xmonth" should not throw 
PASS input.type: IDL set to "xmonth" followed by getAttribute() 
PASS input.type: IDL set to "xmonth" followed by IDL get 
PASS input.type: IDL set to "month\0" should not throw 
PASS input.type: IDL set to "month\0" followed by getAttribute() 
PASS input.type: IDL set to "month\0" followed by IDL get 
PASS input.type: IDL set to "onth" should not throw 
PASS input.type: IDL set to "onth" followed by getAttribute() 
PASS input.type: IDL set to "onth" followed by IDL get 
PASS input.type: IDL set to "MONTH" should not throw 
PASS input.type: IDL set to "MONTH" followed by getAttribute() 
FAIL input.type: IDL set to "MONTH" followed by IDL get assert_equals: expected "month" but got "text"
PASS input.type: IDL set to "week" should not throw 
PASS input.type: IDL set to "week" followed by getAttribute() 
FAIL input.type: IDL set to "week" followed by IDL get assert_equals: expected "week" but got "text"
PASS input.type: IDL set to "xweek" should not throw 
PASS input.type: IDL set to "xweek" followed by getAttribute() 
PASS input.type: IDL set to "xweek" followed by IDL get 
PASS input.type: IDL set to "week\0" should not throw 
PASS input.type: IDL set to "week\0" followed by getAttribute() 
PASS input.type: IDL set to "week\0" followed by IDL get 
PASS input.type: IDL set to "eek" should not throw 
PASS input.type: IDL set to "eek" followed by getAttribute() 
PASS input.type: IDL set to "eek" followed by IDL get 
PASS input.type: IDL set to "WEEK" should not throw 
PASS input.type: IDL set to "WEEK" followed by getAttribute() 
FAIL input.type: IDL set to "WEEK" followed by IDL get assert_equals: expected "week" but got "text"
PASS input.type: IDL set to "time" should not throw 
PASS input.type: IDL set to "time" followed by getAttribute() 
FAIL input.type: IDL set to "time" followed by IDL get assert_equals: expected "time" but got "text"
PASS input.type: IDL set to "xtime" should not throw 
PASS input.type: IDL set to "xtime" followed by getAttribute() 
PASS input.type: IDL set to "xtime" followed by IDL get 
PASS input.type: IDL set to "time\0" should not throw 
PASS input.type: IDL set to "time\0" followed by getAttribute() 
PASS input.type: IDL set to "time\0" followed by IDL get 
PASS input.type: IDL set to "ime" should not throw 
PASS input.type: IDL set to "ime" followed by getAttribute() 
PASS input.type: IDL set to "ime" followed by IDL get 
PASS input.type: IDL set to "TIME" should not throw 
PASS input.type: IDL set to "TIME" followed by getAttribute() 
FAIL input.type: IDL set to "TIME" followed by IDL get assert_equals: expected "time" but got "text"
PASS input.type: IDL set to "datetime-local" should not throw 
PASS input.type: IDL set to "datetime-local" followed by getAttribute() 
FAIL input.type: IDL set to "datetime-local" followed by IDL get assert_equals: expected "datetime-local" but got "text"
PASS input.type: IDL set to "xdatetime-local" should not throw 
PASS input.type: IDL set to "xdatetime-local" followed by getAttribute() 
PASS input.type: IDL set to "xdatetime-local" followed by IDL get 
PASS input.type: IDL set to "datetime-local\0" should not throw 
PASS input.type: IDL set to "datetime-local\0" followed by getAttribute() 
PASS input.type: IDL set to "datetime-local\0" followed by IDL get 
PASS input.type: IDL set to "atetime-local" should not throw 
PASS input.type: IDL set to "atetime-local" followed by getAttribute() 
PASS input.type: IDL set to "atetime-local" followed by IDL get 
PASS input.type: IDL set to "DATETIME-LOCAL" should not throw 
PASS input.type: IDL set to "DATETIME-LOCAL" followed by getAttribute() 
FAIL input.type: IDL set to "DATETIME-LOCAL" followed by IDL get assert_equals: expected "datetime-local" but got "text"
PASS input.type: IDL set to "number" should not throw 
PASS input.type: IDL set to "number" followed by getAttribute() 
PASS input.type: IDL set to "number" followed by IDL get 
PASS input.type: IDL set to "xnumber" should not throw 
PASS input.type: IDL set to "xnumber" followed by getAttribute() 
PASS input.type: IDL set to "xnumber" followed by IDL get 
PASS input.type: IDL set to "number\0" should not throw 
PASS input.type: IDL set to "number\0" followed by getAttribute() 
PASS input.type: IDL set to "number\0" followed by IDL get 
PASS input.type: IDL set to "umber" should not throw 
PASS input.type: IDL set to "umber" followed by getAttribute() 
PASS input.type: IDL set to "umber" followed by IDL get 
PASS input.type: IDL set to "NUMBER" should not throw 
PASS input.type: IDL set to "NUMBER" followed by getAttribute() 
PASS input.type: IDL set to "NUMBER" followed by IDL get 
PASS input.type: IDL set to "range" should not throw 
PASS input.type: IDL set to "range" followed by getAttribute() 
PASS input.type: IDL set to "range" followed by IDL get 
PASS input.type: IDL set to "xrange" should not throw 
PASS input.type: IDL set to "xrange" followed by getAttribute() 
PASS input.type: IDL set to "xrange" followed by IDL get 
PASS input.type: IDL set to "range\0" should not throw 
PASS input.type: IDL set to "range\0" followed by getAttribute() 
PASS input.type: IDL set to "range\0" followed by IDL get 
PASS input.type: IDL set to "ange" should not throw 
PASS input.type: IDL set to "ange" followed by getAttribute() 
PASS input.type: IDL set to "ange" followed by IDL get 
PASS input.type: IDL set to "RANGE" should not throw 
PASS input.type: IDL set to "RANGE" followed by getAttribute() 
PASS input.type: IDL set to "RANGE" followed by IDL get 
PASS input.type: IDL set to "color" should not throw 
PASS input.type: IDL set to "color" followed by getAttribute() 
PASS input.type: IDL set to "color" followed by IDL get 
PASS input.type: IDL set to "xcolor" should not throw 
PASS input.type: IDL set to "xcolor" followed by getAttribute() 
PASS input.type: IDL set to "xcolor" followed by IDL get 
PASS input.type: IDL set to "color\0" should not throw 
PASS input.type: IDL set to "color\0" followed by getAttribute() 
PASS input.type: IDL set to "color\0" followed by IDL get 
PASS input.type: IDL set to "olor" should not throw 
PASS input.type: IDL set to "olor" followed by getAttribute() 
PASS input.type: IDL set to "olor" followed by IDL get 
PASS input.type: IDL set to "COLOR" should not throw 
PASS input.type: IDL set to "COLOR" followed by getAttribute() 
PASS input.type: IDL set to "COLOR" followed by IDL get 
PASS input.type: IDL set to "checkbox" should not throw 
PASS input.type: IDL set to "checkbox" followed by getAttribute() 
PASS input.type: IDL set to "checkbox" followed by IDL get 
PASS input.type: IDL set to "xcheckbox" should not throw 
PASS input.type: IDL set to "xcheckbox" followed by getAttribute() 
PASS input.type: IDL set to "xcheckbox" followed by IDL get 
PASS input.type: IDL set to "checkbox\0" should not throw 
PASS input.type: IDL set to "checkbox\0" followed by getAttribute() 
PASS input.type: IDL set to "checkbox\0" followed by IDL get 
PASS input.type: IDL set to "heckbox" should not throw 
PASS input.type: IDL set to "heckbox" followed by getAttribute() 
PASS input.type: IDL set to "heckbox" followed by IDL get 
PASS input.type: IDL set to "CHECKBOX" should not throw 
PASS input.type: IDL set to "CHECKBOX" followed by getAttribute() 
PASS input.type: IDL set to "CHECKBOX" followed by IDL get 
PASS input.type: IDL set to "radio" should not throw 
PASS input.type: IDL set to "radio" followed by getAttribute() 
PASS input.type: IDL set to "radio" followed by IDL get 
PASS input.type: IDL set to "xradio" should not throw 
PASS input.type: IDL set to "xradio" followed by getAttribute() 
PASS input.type: IDL set to "xradio" followed by IDL get 
PASS input.type: IDL set to "radio\0" should not throw 
PASS input.type: IDL set to "radio\0" followed by getAttribute() 
PASS input.type: IDL set to "radio\0" followed by IDL get 
PASS input.type: IDL set to "adio" should not throw 
PASS input.type: IDL set to "adio" followed by getAttribute() 
PASS input.type: IDL set to "adio" followed by IDL get 
PASS input.type: IDL set to "RADIO" should not throw 
PASS input.type: IDL set to "RADIO" followed by getAttribute() 
PASS input.type: IDL set to "RADIO" followed by IDL get 
PASS input.type: IDL set to "file" should not throw 
FAIL input.type: IDL set to "file" followed by getAttribute() assert_equals: expected "file" but got "radio"
FAIL input.type: IDL set to "file" followed by IDL get assert_equals: expected "file" but got "radio"
PASS input.type: IDL set to "xfile" should not throw 
PASS input.type: IDL set to "xfile" followed by getAttribute() 
PASS input.type: IDL set to "xfile" followed by IDL get 
PASS input.type: IDL set to "file\0" should not throw 
PASS input.type: IDL set to "file\0" followed by getAttribute() 
PASS input.type: IDL set to "file\0" followed by IDL get 
PASS input.type: IDL set to "ile" should not throw 
PASS input.type: IDL set to "ile" followed by getAttribute() 
PASS input.type: IDL set to "ile" followed by IDL get 
PASS input.type: IDL set to "FILE" should not throw 
FAIL input.type: IDL set to "FILE" followed by getAttribute() assert_equals: expected "FILE" but got "text"
FAIL input.type: IDL set to "FILE" followed by IDL get assert_equals: expected "file" but got "text"
PASS input.type: IDL set to "submit" should not throw 
PASS input.type: IDL set to "submit" followed by getAttribute() 
PASS input.type: IDL set to "submit" followed by IDL get 
PASS input.type: IDL set to "xsubmit" should not throw 
PASS input.type: IDL set to "xsubmit" followed by getAttribute() 
PASS input.type: IDL set to "xsubmit" followed by IDL get 
PASS input.type: IDL set to "submit\0" should not throw 
PASS input.type: IDL set to "submit\0" followed by getAttribute() 
PASS input.type: IDL set to "submit\0" followed by IDL get 
PASS input.type: IDL set to "ubmit" should not throw 
PASS input.type: IDL set to "ubmit" followed by getAttribute() 
PASS input.type: IDL set to "ubmit" followed by IDL get 
PASS input.type: IDL set to "SUBMIT" should not throw 
PASS input.type: IDL set to "SUBMIT" followed by getAttribute() 
PASS input.type: IDL set to "SUBMIT" followed by IDL get 
PASS input.type: IDL set to "image" should not throw 
PASS input.type: IDL set to "image" followed by getAttribute() 
PASS input.type: IDL set to "image" followed by IDL get 
PASS input.type: IDL set to "ximage" should not throw 
PASS input.type: IDL set to "ximage" followed by getAttribute() 
PASS input.type: IDL set to "ximage" followed by IDL get 
PASS input.type: IDL set to "image\0" should not throw 
PASS input.type: IDL set to "image\0" followed by getAttribute() 
PASS input.type: IDL set to "image\0" followed by IDL get 
PASS input.type: IDL set to "mage" should not throw 
PASS input.type: IDL set to "mage" followed by getAttribute() 
PASS input.type: IDL set to "mage" followed by IDL get 
PASS input.type: IDL set to "IMAGE" should not throw 
PASS input.type: IDL set to "IMAGE" followed by getAttribute() 
PASS input.type: IDL set to "IMAGE" followed by IDL get 
PASS input.type: IDL set to "reset" should not throw 
PASS input.type: IDL set to "reset" followed by getAttribute() 
PASS input.type: IDL set to "reset" followed by IDL get 
PASS input.type: IDL set to "xreset" should not throw 
PASS input.type: IDL set to "xreset" followed by getAttribute() 
PASS input.type: IDL set to "xreset" followed by IDL get 
PASS input.type: IDL set to "reset\0" should not throw 
PASS input.type: IDL set to "reset\0" followed by getAttribute() 
PASS input.type: IDL set to "reset\0" followed by IDL get 
PASS input.type: IDL set to "eset" should not throw 
PASS input.type: IDL set to "eset" followed by getAttribute() 
PASS input.type: IDL set to "eset" followed by IDL get 
PASS input.type: IDL set to "RESET" should not throw 
PASS input.type: IDL set to "RESET" followed by getAttribute() 
PASS input.type: IDL set to "RESET" followed by IDL get 
PASS input.type: IDL set to "button" should not throw 
PASS input.type: IDL set to "button" followed by getAttribute() 
PASS input.type: IDL set to "button" followed by IDL get 
PASS input.type: IDL set to "xbutton" should not throw 
PASS input.type: IDL set to "xbutton" followed by getAttribute() 
PASS input.type: IDL set to "xbutton" followed by IDL get 
PASS input.type: IDL set to "button\0" should not throw 
PASS input.type: IDL set to "button\0" followed by getAttribute() 
PASS input.type: IDL set to "button\0" followed by IDL get 
PASS input.type: IDL set to "utton" should not throw 
PASS input.type: IDL set to "utton" followed by getAttribute() 
PASS input.type: IDL set to "utton" followed by IDL get 
PASS input.type: IDL set to "BUTTON" should not throw 
PASS input.type: IDL set to "BUTTON" followed by getAttribute() 
PASS input.type: IDL set to "BUTTON" followed by IDL get 
PASS input.defaultValue (<input value>): typeof IDL attribute 
PASS input.defaultValue (<input value>): IDL get with DOM attribute unset 
PASS input.defaultValue (<input value>): setAttribute() to "" followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to "" followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to undefined followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to undefined followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to 7 followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to 7 followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to 1.5 followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to 1.5 followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to true followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to true followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to false followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to false followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to object "[object Object]" followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to NaN followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to NaN followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to Infinity followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to Infinity followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to -Infinity followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to -Infinity followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to "\0" followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to "\0" followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to null followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to null followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to object "test-toString" followed by IDL get 
PASS input.defaultValue (<input value>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.defaultValue (<input value>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to "" should not throw 
PASS input.defaultValue (<input value>): IDL set to "" followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to "" followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.defaultValue (<input value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to undefined should not throw 
PASS input.defaultValue (<input value>): IDL set to undefined followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to undefined followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to 7 should not throw 
PASS input.defaultValue (<input value>): IDL set to 7 followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to 7 followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to 1.5 should not throw 
PASS input.defaultValue (<input value>): IDL set to 1.5 followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to 1.5 followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to true should not throw 
PASS input.defaultValue (<input value>): IDL set to true followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to true followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to false should not throw 
PASS input.defaultValue (<input value>): IDL set to false followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to false followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to object "[object Object]" should not throw 
PASS input.defaultValue (<input value>): IDL set to object "[object Object]" followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to object "[object Object]" followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to NaN should not throw 
PASS input.defaultValue (<input value>): IDL set to NaN followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to NaN followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to Infinity should not throw 
PASS input.defaultValue (<input value>): IDL set to Infinity followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to Infinity followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to -Infinity should not throw 
PASS input.defaultValue (<input value>): IDL set to -Infinity followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to -Infinity followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to "\0" should not throw 
PASS input.defaultValue (<input value>): IDL set to "\0" followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to "\0" followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to null should not throw 
PASS input.defaultValue (<input value>): IDL set to null followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to null followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to object "test-toString" should not throw 
PASS input.defaultValue (<input value>): IDL set to object "test-toString" followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to object "test-toString" followed by IDL get 
PASS input.defaultValue (<input value>): IDL set to object "test-valueOf" should not throw 
PASS input.defaultValue (<input value>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.defaultValue (<input value>): IDL set to object "test-valueOf" followed by IDL get 
PASS input.align: typeof IDL attribute 
PASS input.align: IDL get with DOM attribute unset 
PASS input.align: setAttribute() to "" followed by getAttribute() 
PASS input.align: setAttribute() to "" followed by IDL get 
PASS input.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.align: setAttribute() to undefined followed by getAttribute() 
PASS input.align: setAttribute() to undefined followed by IDL get 
PASS input.align: setAttribute() to 7 followed by getAttribute() 
PASS input.align: setAttribute() to 7 followed by IDL get 
PASS input.align: setAttribute() to 1.5 followed by getAttribute() 
PASS input.align: setAttribute() to 1.5 followed by IDL get 
PASS input.align: setAttribute() to true followed by getAttribute() 
PASS input.align: setAttribute() to true followed by IDL get 
PASS input.align: setAttribute() to false followed by getAttribute() 
PASS input.align: setAttribute() to false followed by IDL get 
PASS input.align: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.align: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.align: setAttribute() to NaN followed by getAttribute() 
PASS input.align: setAttribute() to NaN followed by IDL get 
PASS input.align: setAttribute() to Infinity followed by getAttribute() 
PASS input.align: setAttribute() to Infinity followed by IDL get 
PASS input.align: setAttribute() to -Infinity followed by getAttribute() 
PASS input.align: setAttribute() to -Infinity followed by IDL get 
PASS input.align: setAttribute() to "\0" followed by getAttribute() 
PASS input.align: setAttribute() to "\0" followed by IDL get 
PASS input.align: setAttribute() to null followed by getAttribute() 
PASS input.align: setAttribute() to null followed by IDL get 
PASS input.align: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.align: setAttribute() to object "test-toString" followed by IDL get 
PASS input.align: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.align: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.align: IDL set to "" should not throw 
PASS input.align: IDL set to "" followed by getAttribute() 
PASS input.align: IDL set to "" followed by IDL get 
PASS input.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.align: IDL set to undefined should not throw 
PASS input.align: IDL set to undefined followed by getAttribute() 
PASS input.align: IDL set to undefined followed by IDL get 
PASS input.align: IDL set to 7 should not throw 
PASS input.align: IDL set to 7 followed by getAttribute() 
PASS input.align: IDL set to 7 followed by IDL get 
PASS input.align: IDL set to 1.5 should not throw 
PASS input.align: IDL set to 1.5 followed by getAttribute() 
PASS input.align: IDL set to 1.5 followed by IDL get 
PASS input.align: IDL set to true should not throw 
PASS input.align: IDL set to true followed by getAttribute() 
PASS input.align: IDL set to true followed by IDL get 
PASS input.align: IDL set to false should not throw 
PASS input.align: IDL set to false followed by getAttribute() 
PASS input.align: IDL set to false followed by IDL get 
PASS input.align: IDL set to object "[object Object]" should not throw 
PASS input.align: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.align: IDL set to object "[object Object]" followed by IDL get 
PASS input.align: IDL set to NaN should not throw 
PASS input.align: IDL set to NaN followed by getAttribute() 
PASS input.align: IDL set to NaN followed by IDL get 
PASS input.align: IDL set to Infinity should not throw 
PASS input.align: IDL set to Infinity followed by getAttribute() 
PASS input.align: IDL set to Infinity followed by IDL get 
PASS input.align: IDL set to -Infinity should not throw 
PASS input.align: IDL set to -Infinity followed by getAttribute() 
PASS input.align: IDL set to -Infinity followed by IDL get 
PASS input.align: IDL set to "\0" should not throw 
PASS input.align: IDL set to "\0" followed by getAttribute() 
PASS input.align: IDL set to "\0" followed by IDL get 
PASS input.align: IDL set to null should not throw 
PASS input.align: IDL set to null followed by getAttribute() 
PASS input.align: IDL set to null followed by IDL get 
PASS input.align: IDL set to object "test-toString" should not throw 
PASS input.align: IDL set to object "test-toString" followed by getAttribute() 
PASS input.align: IDL set to object "test-toString" followed by IDL get 
PASS input.align: IDL set to object "test-valueOf" should not throw 
PASS input.align: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.align: IDL set to object "test-valueOf" followed by IDL get 
PASS input.useMap: typeof IDL attribute 
PASS input.useMap: IDL get with DOM attribute unset 
PASS input.useMap: setAttribute() to "" followed by getAttribute() 
PASS input.useMap: setAttribute() to "" followed by IDL get 
PASS input.useMap: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.useMap: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.useMap: setAttribute() to undefined followed by getAttribute() 
PASS input.useMap: setAttribute() to undefined followed by IDL get 
PASS input.useMap: setAttribute() to 7 followed by getAttribute() 
PASS input.useMap: setAttribute() to 7 followed by IDL get 
PASS input.useMap: setAttribute() to 1.5 followed by getAttribute() 
PASS input.useMap: setAttribute() to 1.5 followed by IDL get 
PASS input.useMap: setAttribute() to true followed by getAttribute() 
PASS input.useMap: setAttribute() to true followed by IDL get 
PASS input.useMap: setAttribute() to false followed by getAttribute() 
PASS input.useMap: setAttribute() to false followed by IDL get 
PASS input.useMap: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS input.useMap: setAttribute() to object "[object Object]" followed by IDL get 
PASS input.useMap: setAttribute() to NaN followed by getAttribute() 
PASS input.useMap: setAttribute() to NaN followed by IDL get 
PASS input.useMap: setAttribute() to Infinity followed by getAttribute() 
PASS input.useMap: setAttribute() to Infinity followed by IDL get 
PASS input.useMap: setAttribute() to -Infinity followed by getAttribute() 
PASS input.useMap: setAttribute() to -Infinity followed by IDL get 
PASS input.useMap: setAttribute() to "\0" followed by getAttribute() 
PASS input.useMap: setAttribute() to "\0" followed by IDL get 
PASS input.useMap: setAttribute() to null followed by getAttribute() 
PASS input.useMap: setAttribute() to null followed by IDL get 
PASS input.useMap: setAttribute() to object "test-toString" followed by getAttribute() 
PASS input.useMap: setAttribute() to object "test-toString" followed by IDL get 
PASS input.useMap: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS input.useMap: setAttribute() to object "test-valueOf" followed by IDL get 
PASS input.useMap: IDL set to "" should not throw 
PASS input.useMap: IDL set to "" followed by getAttribute() 
PASS input.useMap: IDL set to "" followed by IDL get 
PASS input.useMap: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS input.useMap: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS input.useMap: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS input.useMap: IDL set to undefined should not throw 
PASS input.useMap: IDL set to undefined followed by getAttribute() 
PASS input.useMap: IDL set to undefined followed by IDL get 
PASS input.useMap: IDL set to 7 should not throw 
PASS input.useMap: IDL set to 7 followed by getAttribute() 
PASS input.useMap: IDL set to 7 followed by IDL get 
PASS input.useMap: IDL set to 1.5 should not throw 
PASS input.useMap: IDL set to 1.5 followed by getAttribute() 
PASS input.useMap: IDL set to 1.5 followed by IDL get 
PASS input.useMap: IDL set to true should not throw 
PASS input.useMap: IDL set to true followed by getAttribute() 
PASS input.useMap: IDL set to true followed by IDL get 
PASS input.useMap: IDL set to false should not throw 
PASS input.useMap: IDL set to false followed by getAttribute() 
PASS input.useMap: IDL set to false followed by IDL get 
PASS input.useMap: IDL set to object "[object Object]" should not throw 
PASS input.useMap: IDL set to object "[object Object]" followed by getAttribute() 
PASS input.useMap: IDL set to object "[object Object]" followed by IDL get 
PASS input.useMap: IDL set to NaN should not throw 
PASS input.useMap: IDL set to NaN followed by getAttribute() 
PASS input.useMap: IDL set to NaN followed by IDL get 
PASS input.useMap: IDL set to Infinity should not throw 
PASS input.useMap: IDL set to Infinity followed by getAttribute() 
PASS input.useMap: IDL set to Infinity followed by IDL get 
PASS input.useMap: IDL set to -Infinity should not throw 
PASS input.useMap: IDL set to -Infinity followed by getAttribute() 
PASS input.useMap: IDL set to -Infinity followed by IDL get 
PASS input.useMap: IDL set to "\0" should not throw 
PASS input.useMap: IDL set to "\0" followed by getAttribute() 
PASS input.useMap: IDL set to "\0" followed by IDL get 
PASS input.useMap: IDL set to null should not throw 
PASS input.useMap: IDL set to null followed by getAttribute() 
PASS input.useMap: IDL set to null followed by IDL get 
PASS input.useMap: IDL set to object "test-toString" should not throw 
PASS input.useMap: IDL set to object "test-toString" followed by getAttribute() 
PASS input.useMap: IDL set to object "test-toString" followed by IDL get 
PASS input.useMap: IDL set to object "test-valueOf" should not throw 
PASS input.useMap: IDL set to object "test-valueOf" followed by getAttribute() 
PASS input.useMap: IDL set to object "test-valueOf" followed by IDL get 
FAIL input.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL input.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS input.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL input.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL input.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL input.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to null followed by getAttribute() 
FAIL input.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL input.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL input.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to true followed by getAttribute() 
FAIL input.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to false followed by getAttribute() 
FAIL input.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL input.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL input.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL input.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL input.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL input.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL input.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL input.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL input.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS input.itemScope: IDL set to "" should not throw 
FAIL input.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL input.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS input.itemScope: IDL set to " foo " should not throw 
PASS input.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL input.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS input.itemScope: IDL set to undefined should not throw 
FAIL input.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL input.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS input.itemScope: IDL set to null should not throw 
FAIL input.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL input.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS input.itemScope: IDL set to 7 should not throw 
PASS input.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL input.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS input.itemScope: IDL set to 1.5 should not throw 
PASS input.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL input.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS input.itemScope: IDL set to true should not throw 
PASS input.itemScope: IDL set to true followed by hasAttribute() 
PASS input.itemScope: IDL set to true followed by IDL get 
PASS input.itemScope: IDL set to false should not throw 
FAIL input.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS input.itemScope: IDL set to false followed by IDL get 
PASS input.itemScope: IDL set to object "[object Object]" should not throw 
PASS input.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL input.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS input.itemScope: IDL set to NaN should not throw 
FAIL input.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL input.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS input.itemScope: IDL set to Infinity should not throw 
PASS input.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL input.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS input.itemScope: IDL set to -Infinity should not throw 
PASS input.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL input.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS input.itemScope: IDL set to "\0" should not throw 
PASS input.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL input.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS input.itemScope: IDL set to object "test-toString" should not throw 
PASS input.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL input.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS input.itemScope: IDL set to object "test-valueOf" should not throw 
PASS input.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL input.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL input.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL input.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS input.itemId: setAttribute() to "" followed by getAttribute() 
FAIL input.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS input.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL input.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS input.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL input.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS input.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL input.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS input.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL input.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS input.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL input.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS input.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL input.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS input.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL input.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS input.itemId: setAttribute() to true followed by getAttribute() 
FAIL input.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS input.itemId: setAttribute() to false followed by getAttribute() 
FAIL input.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS input.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL input.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS input.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL input.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS input.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL input.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS input.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL input.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS input.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL input.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS input.itemId: setAttribute() to null followed by getAttribute() 
FAIL input.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS input.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL input.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS input.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL input.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS input.itemId: IDL set to "" should not throw 
FAIL input.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL input.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS input.itemId: IDL set to " foo " should not throw 
FAIL input.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL input.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS input.itemId: IDL set to "http://site.example/" should not throw 
FAIL input.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS input.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS input.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL input.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL input.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS input.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL input.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL input.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS input.itemId: IDL set to undefined should not throw 
FAIL input.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL input.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS input.itemId: IDL set to 7 should not throw 
FAIL input.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL input.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS input.itemId: IDL set to 1.5 should not throw 
FAIL input.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL input.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS input.itemId: IDL set to true should not throw 
FAIL input.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL input.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS input.itemId: IDL set to false should not throw 
FAIL input.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL input.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS input.itemId: IDL set to object "[object Object]" should not throw 
FAIL input.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL input.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS input.itemId: IDL set to NaN should not throw 
FAIL input.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL input.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS input.itemId: IDL set to Infinity should not throw 
FAIL input.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL input.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS input.itemId: IDL set to -Infinity should not throw 
FAIL input.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL input.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS input.itemId: IDL set to "\0" should not throw 
FAIL input.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL input.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS input.itemId: IDL set to null should not throw 
FAIL input.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL input.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS input.itemId: IDL set to object "test-toString" should not throw 
FAIL input.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL input.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS input.itemId: IDL set to object "test-valueOf" should not throw 
PASS input.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL input.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS button.title: typeof IDL attribute 
PASS button.title: IDL get with DOM attribute unset 
PASS button.title: setAttribute() to "" followed by getAttribute() 
PASS button.title: setAttribute() to "" followed by IDL get 
PASS button.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.title: setAttribute() to undefined followed by getAttribute() 
PASS button.title: setAttribute() to undefined followed by IDL get 
PASS button.title: setAttribute() to 7 followed by getAttribute() 
PASS button.title: setAttribute() to 7 followed by IDL get 
PASS button.title: setAttribute() to 1.5 followed by getAttribute() 
PASS button.title: setAttribute() to 1.5 followed by IDL get 
PASS button.title: setAttribute() to true followed by getAttribute() 
PASS button.title: setAttribute() to true followed by IDL get 
PASS button.title: setAttribute() to false followed by getAttribute() 
PASS button.title: setAttribute() to false followed by IDL get 
PASS button.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.title: setAttribute() to NaN followed by getAttribute() 
PASS button.title: setAttribute() to NaN followed by IDL get 
PASS button.title: setAttribute() to Infinity followed by getAttribute() 
PASS button.title: setAttribute() to Infinity followed by IDL get 
PASS button.title: setAttribute() to -Infinity followed by getAttribute() 
PASS button.title: setAttribute() to -Infinity followed by IDL get 
PASS button.title: setAttribute() to "\0" followed by getAttribute() 
PASS button.title: setAttribute() to "\0" followed by IDL get 
PASS button.title: setAttribute() to null followed by getAttribute() 
PASS button.title: setAttribute() to null followed by IDL get 
PASS button.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.title: setAttribute() to object "test-toString" followed by IDL get 
PASS button.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.title: IDL set to "" should not throw 
PASS button.title: IDL set to "" followed by getAttribute() 
PASS button.title: IDL set to "" followed by IDL get 
PASS button.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS button.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.title: IDL set to undefined should not throw 
PASS button.title: IDL set to undefined followed by getAttribute() 
PASS button.title: IDL set to undefined followed by IDL get 
PASS button.title: IDL set to 7 should not throw 
PASS button.title: IDL set to 7 followed by getAttribute() 
PASS button.title: IDL set to 7 followed by IDL get 
PASS button.title: IDL set to 1.5 should not throw 
PASS button.title: IDL set to 1.5 followed by getAttribute() 
PASS button.title: IDL set to 1.5 followed by IDL get 
PASS button.title: IDL set to true should not throw 
PASS button.title: IDL set to true followed by getAttribute() 
PASS button.title: IDL set to true followed by IDL get 
PASS button.title: IDL set to false should not throw 
PASS button.title: IDL set to false followed by getAttribute() 
PASS button.title: IDL set to false followed by IDL get 
PASS button.title: IDL set to object "[object Object]" should not throw 
PASS button.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS button.title: IDL set to object "[object Object]" followed by IDL get 
PASS button.title: IDL set to NaN should not throw 
PASS button.title: IDL set to NaN followed by getAttribute() 
PASS button.title: IDL set to NaN followed by IDL get 
PASS button.title: IDL set to Infinity should not throw 
PASS button.title: IDL set to Infinity followed by getAttribute() 
PASS button.title: IDL set to Infinity followed by IDL get 
PASS button.title: IDL set to -Infinity should not throw 
PASS button.title: IDL set to -Infinity followed by getAttribute() 
PASS button.title: IDL set to -Infinity followed by IDL get 
PASS button.title: IDL set to "\0" should not throw 
PASS button.title: IDL set to "\0" followed by getAttribute() 
PASS button.title: IDL set to "\0" followed by IDL get 
PASS button.title: IDL set to null should not throw 
PASS button.title: IDL set to null followed by getAttribute() 
PASS button.title: IDL set to null followed by IDL get 
PASS button.title: IDL set to object "test-toString" should not throw 
PASS button.title: IDL set to object "test-toString" followed by getAttribute() 
PASS button.title: IDL set to object "test-toString" followed by IDL get 
PASS button.title: IDL set to object "test-valueOf" should not throw 
PASS button.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS button.title: IDL set to object "test-valueOf" followed by IDL get 
PASS button.lang: typeof IDL attribute 
PASS button.lang: IDL get with DOM attribute unset 
PASS button.lang: setAttribute() to "" followed by getAttribute() 
PASS button.lang: setAttribute() to "" followed by IDL get 
PASS button.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.lang: setAttribute() to undefined followed by getAttribute() 
PASS button.lang: setAttribute() to undefined followed by IDL get 
PASS button.lang: setAttribute() to 7 followed by getAttribute() 
PASS button.lang: setAttribute() to 7 followed by IDL get 
PASS button.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS button.lang: setAttribute() to 1.5 followed by IDL get 
PASS button.lang: setAttribute() to true followed by getAttribute() 
PASS button.lang: setAttribute() to true followed by IDL get 
PASS button.lang: setAttribute() to false followed by getAttribute() 
PASS button.lang: setAttribute() to false followed by IDL get 
PASS button.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.lang: setAttribute() to NaN followed by getAttribute() 
PASS button.lang: setAttribute() to NaN followed by IDL get 
PASS button.lang: setAttribute() to Infinity followed by getAttribute() 
PASS button.lang: setAttribute() to Infinity followed by IDL get 
PASS button.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS button.lang: setAttribute() to -Infinity followed by IDL get 
PASS button.lang: setAttribute() to "\0" followed by getAttribute() 
PASS button.lang: setAttribute() to "\0" followed by IDL get 
PASS button.lang: setAttribute() to null followed by getAttribute() 
PASS button.lang: setAttribute() to null followed by IDL get 
PASS button.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS button.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.lang: IDL set to "" should not throw 
PASS button.lang: IDL set to "" followed by getAttribute() 
PASS button.lang: IDL set to "" followed by IDL get 
PASS button.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS button.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.lang: IDL set to undefined should not throw 
PASS button.lang: IDL set to undefined followed by getAttribute() 
PASS button.lang: IDL set to undefined followed by IDL get 
PASS button.lang: IDL set to 7 should not throw 
PASS button.lang: IDL set to 7 followed by getAttribute() 
PASS button.lang: IDL set to 7 followed by IDL get 
PASS button.lang: IDL set to 1.5 should not throw 
PASS button.lang: IDL set to 1.5 followed by getAttribute() 
PASS button.lang: IDL set to 1.5 followed by IDL get 
PASS button.lang: IDL set to true should not throw 
PASS button.lang: IDL set to true followed by getAttribute() 
PASS button.lang: IDL set to true followed by IDL get 
PASS button.lang: IDL set to false should not throw 
PASS button.lang: IDL set to false followed by getAttribute() 
PASS button.lang: IDL set to false followed by IDL get 
PASS button.lang: IDL set to object "[object Object]" should not throw 
PASS button.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS button.lang: IDL set to object "[object Object]" followed by IDL get 
PASS button.lang: IDL set to NaN should not throw 
PASS button.lang: IDL set to NaN followed by getAttribute() 
PASS button.lang: IDL set to NaN followed by IDL get 
PASS button.lang: IDL set to Infinity should not throw 
PASS button.lang: IDL set to Infinity followed by getAttribute() 
PASS button.lang: IDL set to Infinity followed by IDL get 
PASS button.lang: IDL set to -Infinity should not throw 
PASS button.lang: IDL set to -Infinity followed by getAttribute() 
PASS button.lang: IDL set to -Infinity followed by IDL get 
PASS button.lang: IDL set to "\0" should not throw 
PASS button.lang: IDL set to "\0" followed by getAttribute() 
PASS button.lang: IDL set to "\0" followed by IDL get 
PASS button.lang: IDL set to null should not throw 
PASS button.lang: IDL set to null followed by getAttribute() 
PASS button.lang: IDL set to null followed by IDL get 
PASS button.lang: IDL set to object "test-toString" should not throw 
PASS button.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS button.lang: IDL set to object "test-toString" followed by IDL get 
PASS button.lang: IDL set to object "test-valueOf" should not throw 
PASS button.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS button.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS button.dir: typeof IDL attribute 
PASS button.dir: IDL get with DOM attribute unset 
PASS button.dir: setAttribute() to "" followed by getAttribute() 
PASS button.dir: setAttribute() to "" followed by IDL get 
PASS button.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.dir: setAttribute() to undefined followed by getAttribute() 
PASS button.dir: setAttribute() to undefined followed by IDL get 
PASS button.dir: setAttribute() to 7 followed by getAttribute() 
PASS button.dir: setAttribute() to 7 followed by IDL get 
PASS button.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS button.dir: setAttribute() to 1.5 followed by IDL get 
PASS button.dir: setAttribute() to true followed by getAttribute() 
PASS button.dir: setAttribute() to true followed by IDL get 
PASS button.dir: setAttribute() to false followed by getAttribute() 
PASS button.dir: setAttribute() to false followed by IDL get 
PASS button.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.dir: setAttribute() to NaN followed by getAttribute() 
PASS button.dir: setAttribute() to NaN followed by IDL get 
PASS button.dir: setAttribute() to Infinity followed by getAttribute() 
PASS button.dir: setAttribute() to Infinity followed by IDL get 
PASS button.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS button.dir: setAttribute() to -Infinity followed by IDL get 
PASS button.dir: setAttribute() to "\0" followed by getAttribute() 
PASS button.dir: setAttribute() to "\0" followed by IDL get 
PASS button.dir: setAttribute() to null followed by getAttribute() 
PASS button.dir: setAttribute() to null followed by IDL get 
PASS button.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS button.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS button.dir: setAttribute() to "ltr" followed by IDL get 
PASS button.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS button.dir: setAttribute() to "xltr" followed by IDL get 
PASS button.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS button.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS button.dir: setAttribute() to "tr" followed by getAttribute() 
PASS button.dir: setAttribute() to "tr" followed by IDL get 
PASS button.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS button.dir: setAttribute() to "LTR" followed by IDL get 
PASS button.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS button.dir: setAttribute() to "rtl" followed by IDL get 
PASS button.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS button.dir: setAttribute() to "xrtl" followed by IDL get 
PASS button.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS button.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS button.dir: setAttribute() to "tl" followed by getAttribute() 
PASS button.dir: setAttribute() to "tl" followed by IDL get 
PASS button.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS button.dir: setAttribute() to "RTL" followed by IDL get 
PASS button.dir: setAttribute() to "auto" followed by getAttribute() 
PASS button.dir: setAttribute() to "auto" followed by IDL get 
PASS button.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS button.dir: setAttribute() to "xauto" followed by IDL get 
PASS button.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS button.dir: setAttribute() to "auto\0" followed by IDL get 
PASS button.dir: setAttribute() to "uto" followed by getAttribute() 
PASS button.dir: setAttribute() to "uto" followed by IDL get 
PASS button.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS button.dir: setAttribute() to "AUTO" followed by IDL get 
PASS button.dir: IDL set to "" should not throw 
PASS button.dir: IDL set to "" followed by getAttribute() 
PASS button.dir: IDL set to "" followed by IDL get 
PASS button.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS button.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.dir: IDL set to undefined should not throw 
PASS button.dir: IDL set to undefined followed by getAttribute() 
PASS button.dir: IDL set to undefined followed by IDL get 
PASS button.dir: IDL set to 7 should not throw 
PASS button.dir: IDL set to 7 followed by getAttribute() 
PASS button.dir: IDL set to 7 followed by IDL get 
PASS button.dir: IDL set to 1.5 should not throw 
PASS button.dir: IDL set to 1.5 followed by getAttribute() 
PASS button.dir: IDL set to 1.5 followed by IDL get 
PASS button.dir: IDL set to true should not throw 
PASS button.dir: IDL set to true followed by getAttribute() 
PASS button.dir: IDL set to true followed by IDL get 
PASS button.dir: IDL set to false should not throw 
PASS button.dir: IDL set to false followed by getAttribute() 
PASS button.dir: IDL set to false followed by IDL get 
PASS button.dir: IDL set to object "[object Object]" should not throw 
PASS button.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS button.dir: IDL set to object "[object Object]" followed by IDL get 
PASS button.dir: IDL set to NaN should not throw 
PASS button.dir: IDL set to NaN followed by getAttribute() 
PASS button.dir: IDL set to NaN followed by IDL get 
PASS button.dir: IDL set to Infinity should not throw 
PASS button.dir: IDL set to Infinity followed by getAttribute() 
PASS button.dir: IDL set to Infinity followed by IDL get 
PASS button.dir: IDL set to -Infinity should not throw 
PASS button.dir: IDL set to -Infinity followed by getAttribute() 
PASS button.dir: IDL set to -Infinity followed by IDL get 
PASS button.dir: IDL set to "\0" should not throw 
PASS button.dir: IDL set to "\0" followed by getAttribute() 
PASS button.dir: IDL set to "\0" followed by IDL get 
PASS button.dir: IDL set to null should not throw 
PASS button.dir: IDL set to null followed by IDL get 
PASS button.dir: IDL set to object "test-toString" should not throw 
PASS button.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS button.dir: IDL set to object "test-toString" followed by IDL get 
PASS button.dir: IDL set to object "test-valueOf" should not throw 
PASS button.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS button.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS button.dir: IDL set to "ltr" should not throw 
PASS button.dir: IDL set to "ltr" followed by getAttribute() 
PASS button.dir: IDL set to "ltr" followed by IDL get 
PASS button.dir: IDL set to "xltr" should not throw 
PASS button.dir: IDL set to "xltr" followed by getAttribute() 
PASS button.dir: IDL set to "xltr" followed by IDL get 
PASS button.dir: IDL set to "ltr\0" should not throw 
PASS button.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS button.dir: IDL set to "ltr\0" followed by IDL get 
PASS button.dir: IDL set to "tr" should not throw 
PASS button.dir: IDL set to "tr" followed by getAttribute() 
PASS button.dir: IDL set to "tr" followed by IDL get 
PASS button.dir: IDL set to "LTR" should not throw 
PASS button.dir: IDL set to "LTR" followed by getAttribute() 
PASS button.dir: IDL set to "LTR" followed by IDL get 
PASS button.dir: IDL set to "rtl" should not throw 
PASS button.dir: IDL set to "rtl" followed by getAttribute() 
PASS button.dir: IDL set to "rtl" followed by IDL get 
PASS button.dir: IDL set to "xrtl" should not throw 
PASS button.dir: IDL set to "xrtl" followed by getAttribute() 
PASS button.dir: IDL set to "xrtl" followed by IDL get 
PASS button.dir: IDL set to "rtl\0" should not throw 
PASS button.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS button.dir: IDL set to "rtl\0" followed by IDL get 
PASS button.dir: IDL set to "tl" should not throw 
PASS button.dir: IDL set to "tl" followed by getAttribute() 
PASS button.dir: IDL set to "tl" followed by IDL get 
PASS button.dir: IDL set to "RTL" should not throw 
PASS button.dir: IDL set to "RTL" followed by getAttribute() 
PASS button.dir: IDL set to "RTL" followed by IDL get 
PASS button.dir: IDL set to "auto" should not throw 
PASS button.dir: IDL set to "auto" followed by getAttribute() 
PASS button.dir: IDL set to "auto" followed by IDL get 
PASS button.dir: IDL set to "xauto" should not throw 
PASS button.dir: IDL set to "xauto" followed by getAttribute() 
PASS button.dir: IDL set to "xauto" followed by IDL get 
PASS button.dir: IDL set to "auto\0" should not throw 
PASS button.dir: IDL set to "auto\0" followed by getAttribute() 
PASS button.dir: IDL set to "auto\0" followed by IDL get 
PASS button.dir: IDL set to "uto" should not throw 
PASS button.dir: IDL set to "uto" followed by getAttribute() 
PASS button.dir: IDL set to "uto" followed by IDL get 
PASS button.dir: IDL set to "AUTO" should not throw 
PASS button.dir: IDL set to "AUTO" followed by getAttribute() 
PASS button.dir: IDL set to "AUTO" followed by IDL get 
PASS button.className (<button class>): typeof IDL attribute 
PASS button.className (<button class>): IDL get with DOM attribute unset 
PASS button.className (<button class>): setAttribute() to "" followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to "" followed by IDL get 
PASS button.className (<button class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.className (<button class>): setAttribute() to undefined followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to undefined followed by IDL get 
PASS button.className (<button class>): setAttribute() to 7 followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to 7 followed by IDL get 
PASS button.className (<button class>): setAttribute() to 1.5 followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to 1.5 followed by IDL get 
PASS button.className (<button class>): setAttribute() to true followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to true followed by IDL get 
PASS button.className (<button class>): setAttribute() to false followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to false followed by IDL get 
PASS button.className (<button class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS button.className (<button class>): setAttribute() to NaN followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to NaN followed by IDL get 
PASS button.className (<button class>): setAttribute() to Infinity followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to Infinity followed by IDL get 
PASS button.className (<button class>): setAttribute() to -Infinity followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to -Infinity followed by IDL get 
PASS button.className (<button class>): setAttribute() to "\0" followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to "\0" followed by IDL get 
PASS button.className (<button class>): setAttribute() to null followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to null followed by IDL get 
PASS button.className (<button class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to object "test-toString" followed by IDL get 
PASS button.className (<button class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.className (<button class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.className (<button class>): IDL set to "" should not throw 
PASS button.className (<button class>): IDL set to "" followed by getAttribute() 
PASS button.className (<button class>): IDL set to "" followed by IDL get 
PASS button.className (<button class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS button.className (<button class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.className (<button class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.className (<button class>): IDL set to undefined should not throw 
PASS button.className (<button class>): IDL set to undefined followed by getAttribute() 
PASS button.className (<button class>): IDL set to undefined followed by IDL get 
PASS button.className (<button class>): IDL set to 7 should not throw 
PASS button.className (<button class>): IDL set to 7 followed by getAttribute() 
PASS button.className (<button class>): IDL set to 7 followed by IDL get 
PASS button.className (<button class>): IDL set to 1.5 should not throw 
PASS button.className (<button class>): IDL set to 1.5 followed by getAttribute() 
PASS button.className (<button class>): IDL set to 1.5 followed by IDL get 
PASS button.className (<button class>): IDL set to true should not throw 
PASS button.className (<button class>): IDL set to true followed by getAttribute() 
PASS button.className (<button class>): IDL set to true followed by IDL get 
PASS button.className (<button class>): IDL set to false should not throw 
PASS button.className (<button class>): IDL set to false followed by getAttribute() 
PASS button.className (<button class>): IDL set to false followed by IDL get 
PASS button.className (<button class>): IDL set to object "[object Object]" should not throw 
PASS button.className (<button class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS button.className (<button class>): IDL set to object "[object Object]" followed by IDL get 
PASS button.className (<button class>): IDL set to NaN should not throw 
PASS button.className (<button class>): IDL set to NaN followed by getAttribute() 
PASS button.className (<button class>): IDL set to NaN followed by IDL get 
PASS button.className (<button class>): IDL set to Infinity should not throw 
PASS button.className (<button class>): IDL set to Infinity followed by getAttribute() 
PASS button.className (<button class>): IDL set to Infinity followed by IDL get 
PASS button.className (<button class>): IDL set to -Infinity should not throw 
PASS button.className (<button class>): IDL set to -Infinity followed by getAttribute() 
PASS button.className (<button class>): IDL set to -Infinity followed by IDL get 
PASS button.className (<button class>): IDL set to "\0" should not throw 
PASS button.className (<button class>): IDL set to "\0" followed by getAttribute() 
PASS button.className (<button class>): IDL set to "\0" followed by IDL get 
PASS button.className (<button class>): IDL set to null should not throw 
PASS button.className (<button class>): IDL set to null followed by getAttribute() 
PASS button.className (<button class>): IDL set to null followed by IDL get 
PASS button.className (<button class>): IDL set to object "test-toString" should not throw 
PASS button.className (<button class>): IDL set to object "test-toString" followed by getAttribute() 
PASS button.className (<button class>): IDL set to object "test-toString" followed by IDL get 
PASS button.className (<button class>): IDL set to object "test-valueOf" should not throw 
PASS button.className (<button class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS button.className (<button class>): IDL set to object "test-valueOf" followed by IDL get 
PASS button.hidden: typeof IDL attribute 
PASS button.hidden: IDL get with DOM attribute unset 
PASS button.hidden: setAttribute() to "" followed by getAttribute() 
PASS button.hidden: setAttribute() to "" followed by IDL get 
PASS button.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS button.hidden: setAttribute() to " foo " followed by IDL get 
PASS button.hidden: setAttribute() to undefined followed by getAttribute() 
PASS button.hidden: setAttribute() to undefined followed by IDL get 
PASS button.hidden: setAttribute() to null followed by getAttribute() 
PASS button.hidden: setAttribute() to null followed by IDL get 
PASS button.hidden: setAttribute() to 7 followed by getAttribute() 
PASS button.hidden: setAttribute() to 7 followed by IDL get 
PASS button.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS button.hidden: setAttribute() to 1.5 followed by IDL get 
PASS button.hidden: setAttribute() to true followed by getAttribute() 
PASS button.hidden: setAttribute() to true followed by IDL get 
PASS button.hidden: setAttribute() to false followed by getAttribute() 
PASS button.hidden: setAttribute() to false followed by IDL get 
PASS button.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.hidden: setAttribute() to NaN followed by getAttribute() 
PASS button.hidden: setAttribute() to NaN followed by IDL get 
PASS button.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS button.hidden: setAttribute() to Infinity followed by IDL get 
PASS button.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS button.hidden: setAttribute() to -Infinity followed by IDL get 
PASS button.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS button.hidden: setAttribute() to "\0" followed by IDL get 
PASS button.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS button.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS button.hidden: setAttribute() to "hidden" followed by IDL get 
PASS button.hidden: IDL set to "" should not throw 
PASS button.hidden: IDL set to "" followed by hasAttribute() 
PASS button.hidden: IDL set to "" followed by IDL get 
PASS button.hidden: IDL set to " foo " should not throw 
PASS button.hidden: IDL set to " foo " followed by hasAttribute() 
PASS button.hidden: IDL set to " foo " followed by IDL get 
PASS button.hidden: IDL set to undefined should not throw 
PASS button.hidden: IDL set to undefined followed by hasAttribute() 
PASS button.hidden: IDL set to undefined followed by IDL get 
PASS button.hidden: IDL set to null should not throw 
PASS button.hidden: IDL set to null followed by hasAttribute() 
PASS button.hidden: IDL set to null followed by IDL get 
PASS button.hidden: IDL set to 7 should not throw 
PASS button.hidden: IDL set to 7 followed by hasAttribute() 
PASS button.hidden: IDL set to 7 followed by IDL get 
PASS button.hidden: IDL set to 1.5 should not throw 
PASS button.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS button.hidden: IDL set to 1.5 followed by IDL get 
PASS button.hidden: IDL set to true should not throw 
PASS button.hidden: IDL set to true followed by hasAttribute() 
PASS button.hidden: IDL set to true followed by IDL get 
PASS button.hidden: IDL set to false should not throw 
PASS button.hidden: IDL set to false followed by hasAttribute() 
PASS button.hidden: IDL set to false followed by IDL get 
PASS button.hidden: IDL set to object "[object Object]" should not throw 
PASS button.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS button.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS button.hidden: IDL set to NaN should not throw 
PASS button.hidden: IDL set to NaN followed by hasAttribute() 
PASS button.hidden: IDL set to NaN followed by IDL get 
PASS button.hidden: IDL set to Infinity should not throw 
PASS button.hidden: IDL set to Infinity followed by hasAttribute() 
PASS button.hidden: IDL set to Infinity followed by IDL get 
PASS button.hidden: IDL set to -Infinity should not throw 
PASS button.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS button.hidden: IDL set to -Infinity followed by IDL get 
PASS button.hidden: IDL set to "\0" should not throw 
PASS button.hidden: IDL set to "\0" followed by hasAttribute() 
PASS button.hidden: IDL set to "\0" followed by IDL get 
PASS button.hidden: IDL set to object "test-toString" should not throw 
PASS button.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS button.hidden: IDL set to object "test-toString" followed by IDL get 
PASS button.hidden: IDL set to object "test-valueOf" should not throw 
PASS button.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS button.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS button.accessKey: typeof IDL attribute 
PASS button.accessKey: IDL get with DOM attribute unset 
PASS button.accessKey: setAttribute() to "" followed by getAttribute() 
PASS button.accessKey: setAttribute() to "" followed by IDL get 
PASS button.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS button.accessKey: setAttribute() to undefined followed by IDL get 
PASS button.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS button.accessKey: setAttribute() to 7 followed by IDL get 
PASS button.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS button.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS button.accessKey: setAttribute() to true followed by getAttribute() 
PASS button.accessKey: setAttribute() to true followed by IDL get 
PASS button.accessKey: setAttribute() to false followed by getAttribute() 
PASS button.accessKey: setAttribute() to false followed by IDL get 
PASS button.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS button.accessKey: setAttribute() to NaN followed by IDL get 
PASS button.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS button.accessKey: setAttribute() to Infinity followed by IDL get 
PASS button.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS button.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS button.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS button.accessKey: setAttribute() to "\0" followed by IDL get 
PASS button.accessKey: setAttribute() to null followed by getAttribute() 
PASS button.accessKey: setAttribute() to null followed by IDL get 
PASS button.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS button.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.accessKey: IDL set to "" should not throw 
PASS button.accessKey: IDL set to "" followed by getAttribute() 
PASS button.accessKey: IDL set to "" followed by IDL get 
PASS button.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS button.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.accessKey: IDL set to undefined should not throw 
PASS button.accessKey: IDL set to undefined followed by getAttribute() 
PASS button.accessKey: IDL set to undefined followed by IDL get 
PASS button.accessKey: IDL set to 7 should not throw 
PASS button.accessKey: IDL set to 7 followed by getAttribute() 
PASS button.accessKey: IDL set to 7 followed by IDL get 
PASS button.accessKey: IDL set to 1.5 should not throw 
PASS button.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS button.accessKey: IDL set to 1.5 followed by IDL get 
PASS button.accessKey: IDL set to true should not throw 
PASS button.accessKey: IDL set to true followed by getAttribute() 
PASS button.accessKey: IDL set to true followed by IDL get 
PASS button.accessKey: IDL set to false should not throw 
PASS button.accessKey: IDL set to false followed by getAttribute() 
PASS button.accessKey: IDL set to false followed by IDL get 
PASS button.accessKey: IDL set to object "[object Object]" should not throw 
PASS button.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS button.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS button.accessKey: IDL set to NaN should not throw 
PASS button.accessKey: IDL set to NaN followed by getAttribute() 
PASS button.accessKey: IDL set to NaN followed by IDL get 
PASS button.accessKey: IDL set to Infinity should not throw 
PASS button.accessKey: IDL set to Infinity followed by getAttribute() 
PASS button.accessKey: IDL set to Infinity followed by IDL get 
PASS button.accessKey: IDL set to -Infinity should not throw 
PASS button.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS button.accessKey: IDL set to -Infinity followed by IDL get 
PASS button.accessKey: IDL set to "\0" should not throw 
PASS button.accessKey: IDL set to "\0" followed by getAttribute() 
PASS button.accessKey: IDL set to "\0" followed by IDL get 
PASS button.accessKey: IDL set to null should not throw 
PASS button.accessKey: IDL set to null followed by getAttribute() 
PASS button.accessKey: IDL set to null followed by IDL get 
PASS button.accessKey: IDL set to object "test-toString" should not throw 
PASS button.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS button.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS button.accessKey: IDL set to object "test-valueOf" should not throw 
PASS button.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS button.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS button.tabIndex: typeof IDL attribute 
PASS button.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS button.tabIndex: setAttribute() to -36 followed by IDL get 
PASS button.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS button.tabIndex: setAttribute() to -1 followed by IDL get 
PASS button.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS button.tabIndex: setAttribute() to 0 followed by IDL get 
PASS button.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS button.tabIndex: setAttribute() to 1 followed by IDL get 
PASS button.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL button.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS button.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL button.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS button.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS button.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS button.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS button.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS button.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS button.tabIndex: setAttribute() to "0" followed by IDL get 
PASS button.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS button.tabIndex: setAttribute() to "1" followed by IDL get 
PASS button.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS button.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS button.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS button.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS button.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS button.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS button.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS button.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS button.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS button.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS button.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS button.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS button.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS button.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS button.tabIndex: IDL set to -36 should not throw 
PASS button.tabIndex: IDL set to -36 followed by getAttribute() 
PASS button.tabIndex: IDL set to -36 followed by IDL get 
PASS button.tabIndex: IDL set to -1 should not throw 
PASS button.tabIndex: IDL set to -1 followed by getAttribute() 
PASS button.tabIndex: IDL set to -1 followed by IDL get 
PASS button.tabIndex: IDL set to 0 should not throw 
PASS button.tabIndex: IDL set to 0 followed by getAttribute() 
PASS button.tabIndex: IDL set to 0 followed by IDL get 
PASS button.tabIndex: IDL set to 1 should not throw 
PASS button.tabIndex: IDL set to 1 followed by getAttribute() 
PASS button.tabIndex: IDL set to 1 followed by IDL get 
PASS button.tabIndex: IDL set to 2147483647 should not throw 
PASS button.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL button.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS button.tabIndex: IDL set to -2147483648 should not throw 
PASS button.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL button.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS button.autofocus: typeof IDL attribute 
PASS button.autofocus: IDL get with DOM attribute unset 
PASS button.autofocus: setAttribute() to "" followed by getAttribute() 
PASS button.autofocus: setAttribute() to "" followed by IDL get 
PASS button.autofocus: setAttribute() to " foo " followed by getAttribute() 
PASS button.autofocus: setAttribute() to " foo " followed by IDL get 
PASS button.autofocus: setAttribute() to undefined followed by getAttribute() 
PASS button.autofocus: setAttribute() to undefined followed by IDL get 
PASS button.autofocus: setAttribute() to null followed by getAttribute() 
PASS button.autofocus: setAttribute() to null followed by IDL get 
PASS button.autofocus: setAttribute() to 7 followed by getAttribute() 
PASS button.autofocus: setAttribute() to 7 followed by IDL get 
PASS button.autofocus: setAttribute() to 1.5 followed by getAttribute() 
PASS button.autofocus: setAttribute() to 1.5 followed by IDL get 
PASS button.autofocus: setAttribute() to true followed by getAttribute() 
PASS button.autofocus: setAttribute() to true followed by IDL get 
PASS button.autofocus: setAttribute() to false followed by getAttribute() 
PASS button.autofocus: setAttribute() to false followed by IDL get 
PASS button.autofocus: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.autofocus: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.autofocus: setAttribute() to NaN followed by getAttribute() 
PASS button.autofocus: setAttribute() to NaN followed by IDL get 
PASS button.autofocus: setAttribute() to Infinity followed by getAttribute() 
PASS button.autofocus: setAttribute() to Infinity followed by IDL get 
PASS button.autofocus: setAttribute() to -Infinity followed by getAttribute() 
PASS button.autofocus: setAttribute() to -Infinity followed by IDL get 
PASS button.autofocus: setAttribute() to "\0" followed by getAttribute() 
PASS button.autofocus: setAttribute() to "\0" followed by IDL get 
PASS button.autofocus: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.autofocus: setAttribute() to object "test-toString" followed by IDL get 
PASS button.autofocus: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.autofocus: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.autofocus: setAttribute() to "autofocus" followed by getAttribute() 
PASS button.autofocus: setAttribute() to "autofocus" followed by IDL get 
PASS button.autofocus: IDL set to "" should not throw 
PASS button.autofocus: IDL set to "" followed by hasAttribute() 
PASS button.autofocus: IDL set to "" followed by IDL get 
PASS button.autofocus: IDL set to " foo " should not throw 
PASS button.autofocus: IDL set to " foo " followed by hasAttribute() 
PASS button.autofocus: IDL set to " foo " followed by IDL get 
PASS button.autofocus: IDL set to undefined should not throw 
PASS button.autofocus: IDL set to undefined followed by hasAttribute() 
PASS button.autofocus: IDL set to undefined followed by IDL get 
PASS button.autofocus: IDL set to null should not throw 
PASS button.autofocus: IDL set to null followed by hasAttribute() 
PASS button.autofocus: IDL set to null followed by IDL get 
PASS button.autofocus: IDL set to 7 should not throw 
PASS button.autofocus: IDL set to 7 followed by hasAttribute() 
PASS button.autofocus: IDL set to 7 followed by IDL get 
PASS button.autofocus: IDL set to 1.5 should not throw 
PASS button.autofocus: IDL set to 1.5 followed by hasAttribute() 
PASS button.autofocus: IDL set to 1.5 followed by IDL get 
PASS button.autofocus: IDL set to true should not throw 
PASS button.autofocus: IDL set to true followed by hasAttribute() 
PASS button.autofocus: IDL set to true followed by IDL get 
PASS button.autofocus: IDL set to false should not throw 
PASS button.autofocus: IDL set to false followed by hasAttribute() 
PASS button.autofocus: IDL set to false followed by IDL get 
PASS button.autofocus: IDL set to object "[object Object]" should not throw 
PASS button.autofocus: IDL set to object "[object Object]" followed by hasAttribute() 
PASS button.autofocus: IDL set to object "[object Object]" followed by IDL get 
PASS button.autofocus: IDL set to NaN should not throw 
PASS button.autofocus: IDL set to NaN followed by hasAttribute() 
PASS button.autofocus: IDL set to NaN followed by IDL get 
PASS button.autofocus: IDL set to Infinity should not throw 
PASS button.autofocus: IDL set to Infinity followed by hasAttribute() 
PASS button.autofocus: IDL set to Infinity followed by IDL get 
PASS button.autofocus: IDL set to -Infinity should not throw 
PASS button.autofocus: IDL set to -Infinity followed by hasAttribute() 
PASS button.autofocus: IDL set to -Infinity followed by IDL get 
PASS button.autofocus: IDL set to "\0" should not throw 
PASS button.autofocus: IDL set to "\0" followed by hasAttribute() 
PASS button.autofocus: IDL set to "\0" followed by IDL get 
PASS button.autofocus: IDL set to object "test-toString" should not throw 
PASS button.autofocus: IDL set to object "test-toString" followed by hasAttribute() 
PASS button.autofocus: IDL set to object "test-toString" followed by IDL get 
PASS button.autofocus: IDL set to object "test-valueOf" should not throw 
PASS button.autofocus: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS button.autofocus: IDL set to object "test-valueOf" followed by IDL get 
PASS button.disabled: typeof IDL attribute 
PASS button.disabled: IDL get with DOM attribute unset 
PASS button.disabled: setAttribute() to "" followed by getAttribute() 
PASS button.disabled: setAttribute() to "" followed by IDL get 
PASS button.disabled: setAttribute() to " foo " followed by getAttribute() 
PASS button.disabled: setAttribute() to " foo " followed by IDL get 
PASS button.disabled: setAttribute() to undefined followed by getAttribute() 
PASS button.disabled: setAttribute() to undefined followed by IDL get 
PASS button.disabled: setAttribute() to null followed by getAttribute() 
PASS button.disabled: setAttribute() to null followed by IDL get 
PASS button.disabled: setAttribute() to 7 followed by getAttribute() 
PASS button.disabled: setAttribute() to 7 followed by IDL get 
PASS button.disabled: setAttribute() to 1.5 followed by getAttribute() 
PASS button.disabled: setAttribute() to 1.5 followed by IDL get 
PASS button.disabled: setAttribute() to true followed by getAttribute() 
PASS button.disabled: setAttribute() to true followed by IDL get 
PASS button.disabled: setAttribute() to false followed by getAttribute() 
PASS button.disabled: setAttribute() to false followed by IDL get 
PASS button.disabled: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.disabled: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.disabled: setAttribute() to NaN followed by getAttribute() 
PASS button.disabled: setAttribute() to NaN followed by IDL get 
PASS button.disabled: setAttribute() to Infinity followed by getAttribute() 
PASS button.disabled: setAttribute() to Infinity followed by IDL get 
PASS button.disabled: setAttribute() to -Infinity followed by getAttribute() 
PASS button.disabled: setAttribute() to -Infinity followed by IDL get 
PASS button.disabled: setAttribute() to "\0" followed by getAttribute() 
PASS button.disabled: setAttribute() to "\0" followed by IDL get 
PASS button.disabled: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.disabled: setAttribute() to object "test-toString" followed by IDL get 
PASS button.disabled: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.disabled: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.disabled: setAttribute() to "disabled" followed by getAttribute() 
PASS button.disabled: setAttribute() to "disabled" followed by IDL get 
PASS button.disabled: IDL set to "" should not throw 
PASS button.disabled: IDL set to "" followed by hasAttribute() 
PASS button.disabled: IDL set to "" followed by IDL get 
PASS button.disabled: IDL set to " foo " should not throw 
PASS button.disabled: IDL set to " foo " followed by hasAttribute() 
PASS button.disabled: IDL set to " foo " followed by IDL get 
PASS button.disabled: IDL set to undefined should not throw 
PASS button.disabled: IDL set to undefined followed by hasAttribute() 
PASS button.disabled: IDL set to undefined followed by IDL get 
PASS button.disabled: IDL set to null should not throw 
PASS button.disabled: IDL set to null followed by hasAttribute() 
PASS button.disabled: IDL set to null followed by IDL get 
PASS button.disabled: IDL set to 7 should not throw 
PASS button.disabled: IDL set to 7 followed by hasAttribute() 
PASS button.disabled: IDL set to 7 followed by IDL get 
PASS button.disabled: IDL set to 1.5 should not throw 
PASS button.disabled: IDL set to 1.5 followed by hasAttribute() 
PASS button.disabled: IDL set to 1.5 followed by IDL get 
PASS button.disabled: IDL set to true should not throw 
PASS button.disabled: IDL set to true followed by hasAttribute() 
PASS button.disabled: IDL set to true followed by IDL get 
PASS button.disabled: IDL set to false should not throw 
PASS button.disabled: IDL set to false followed by hasAttribute() 
PASS button.disabled: IDL set to false followed by IDL get 
PASS button.disabled: IDL set to object "[object Object]" should not throw 
PASS button.disabled: IDL set to object "[object Object]" followed by hasAttribute() 
PASS button.disabled: IDL set to object "[object Object]" followed by IDL get 
PASS button.disabled: IDL set to NaN should not throw 
PASS button.disabled: IDL set to NaN followed by hasAttribute() 
PASS button.disabled: IDL set to NaN followed by IDL get 
PASS button.disabled: IDL set to Infinity should not throw 
PASS button.disabled: IDL set to Infinity followed by hasAttribute() 
PASS button.disabled: IDL set to Infinity followed by IDL get 
PASS button.disabled: IDL set to -Infinity should not throw 
PASS button.disabled: IDL set to -Infinity followed by hasAttribute() 
PASS button.disabled: IDL set to -Infinity followed by IDL get 
PASS button.disabled: IDL set to "\0" should not throw 
PASS button.disabled: IDL set to "\0" followed by hasAttribute() 
PASS button.disabled: IDL set to "\0" followed by IDL get 
PASS button.disabled: IDL set to object "test-toString" should not throw 
PASS button.disabled: IDL set to object "test-toString" followed by hasAttribute() 
PASS button.disabled: IDL set to object "test-toString" followed by IDL get 
PASS button.disabled: IDL set to object "test-valueOf" should not throw 
PASS button.disabled: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS button.disabled: IDL set to object "test-valueOf" followed by IDL get 
PASS button.formEnctype: typeof IDL attribute 
PASS button.formEnctype: IDL get with DOM attribute unset 
PASS button.formEnctype: setAttribute() to "" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "" followed by IDL get 
PASS button.formEnctype: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.formEnctype: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.formEnctype: setAttribute() to undefined followed by getAttribute() 
PASS button.formEnctype: setAttribute() to undefined followed by IDL get 
PASS button.formEnctype: setAttribute() to 7 followed by getAttribute() 
PASS button.formEnctype: setAttribute() to 7 followed by IDL get 
PASS button.formEnctype: setAttribute() to 1.5 followed by getAttribute() 
PASS button.formEnctype: setAttribute() to 1.5 followed by IDL get 
PASS button.formEnctype: setAttribute() to true followed by getAttribute() 
PASS button.formEnctype: setAttribute() to true followed by IDL get 
PASS button.formEnctype: setAttribute() to false followed by getAttribute() 
PASS button.formEnctype: setAttribute() to false followed by IDL get 
PASS button.formEnctype: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.formEnctype: setAttribute() to NaN followed by getAttribute() 
PASS button.formEnctype: setAttribute() to NaN followed by IDL get 
PASS button.formEnctype: setAttribute() to Infinity followed by getAttribute() 
PASS button.formEnctype: setAttribute() to Infinity followed by IDL get 
PASS button.formEnctype: setAttribute() to -Infinity followed by getAttribute() 
PASS button.formEnctype: setAttribute() to -Infinity followed by IDL get 
PASS button.formEnctype: setAttribute() to "\0" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "\0" followed by IDL get 
PASS button.formEnctype: setAttribute() to null followed by getAttribute() 
PASS button.formEnctype: setAttribute() to null followed by IDL get 
PASS button.formEnctype: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to object "test-toString" followed by IDL get 
PASS button.formEnctype: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.formEnctype: setAttribute() to "application/x-www-form-urlencoded" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "application/x-www-form-urlencoded" followed by IDL get 
PASS button.formEnctype: setAttribute() to "xapplication/x-www-form-urlencoded" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "xapplication/x-www-form-urlencoded" followed by IDL get 
PASS button.formEnctype: setAttribute() to "application/x-www-form-urlencoded\0" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "application/x-www-form-urlencoded\0" followed by IDL get 
PASS button.formEnctype: setAttribute() to "pplication/x-www-form-urlencoded" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "pplication/x-www-form-urlencoded" followed by IDL get 
PASS button.formEnctype: setAttribute() to "APPLICATION/X-WWW-FORM-URLENCODED" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "APPLICATION/X-WWW-FORM-URLENCODED" followed by IDL get 
PASS button.formEnctype: setAttribute() to "multipart/form-data" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "multipart/form-data" followed by IDL get 
PASS button.formEnctype: setAttribute() to "xmultipart/form-data" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "xmultipart/form-data" followed by IDL get 
PASS button.formEnctype: setAttribute() to "multipart/form-data\0" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "multipart/form-data\0" followed by IDL get 
PASS button.formEnctype: setAttribute() to "ultipart/form-data" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "ultipart/form-data" followed by IDL get 
PASS button.formEnctype: setAttribute() to "MULTIPART/FORM-DATA" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "MULTIPART/FORM-DATA" followed by IDL get 
PASS button.formEnctype: setAttribute() to "text/plain" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "text/plain" followed by IDL get 
PASS button.formEnctype: setAttribute() to "xtext/plain" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "xtext/plain" followed by IDL get 
PASS button.formEnctype: setAttribute() to "text/plain\0" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "text/plain\0" followed by IDL get 
PASS button.formEnctype: setAttribute() to "ext/plain" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "ext/plain" followed by IDL get 
PASS button.formEnctype: setAttribute() to "TEXT/PLAIN" followed by getAttribute() 
PASS button.formEnctype: setAttribute() to "TEXT/PLAIN" followed by IDL get 
PASS button.formEnctype: IDL set to "" should not throw 
PASS button.formEnctype: IDL set to "" followed by getAttribute() 
PASS button.formEnctype: IDL set to "" followed by IDL get 
PASS button.formEnctype: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS button.formEnctype: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.formEnctype: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.formEnctype: IDL set to undefined should not throw 
PASS button.formEnctype: IDL set to undefined followed by getAttribute() 
PASS button.formEnctype: IDL set to undefined followed by IDL get 
PASS button.formEnctype: IDL set to 7 should not throw 
PASS button.formEnctype: IDL set to 7 followed by getAttribute() 
PASS button.formEnctype: IDL set to 7 followed by IDL get 
PASS button.formEnctype: IDL set to 1.5 should not throw 
PASS button.formEnctype: IDL set to 1.5 followed by getAttribute() 
PASS button.formEnctype: IDL set to 1.5 followed by IDL get 
PASS button.formEnctype: IDL set to true should not throw 
PASS button.formEnctype: IDL set to true followed by getAttribute() 
PASS button.formEnctype: IDL set to true followed by IDL get 
PASS button.formEnctype: IDL set to false should not throw 
PASS button.formEnctype: IDL set to false followed by getAttribute() 
PASS button.formEnctype: IDL set to false followed by IDL get 
PASS button.formEnctype: IDL set to object "[object Object]" should not throw 
PASS button.formEnctype: IDL set to object "[object Object]" followed by getAttribute() 
PASS button.formEnctype: IDL set to object "[object Object]" followed by IDL get 
PASS button.formEnctype: IDL set to NaN should not throw 
PASS button.formEnctype: IDL set to NaN followed by getAttribute() 
PASS button.formEnctype: IDL set to NaN followed by IDL get 
PASS button.formEnctype: IDL set to Infinity should not throw 
PASS button.formEnctype: IDL set to Infinity followed by getAttribute() 
PASS button.formEnctype: IDL set to Infinity followed by IDL get 
PASS button.formEnctype: IDL set to -Infinity should not throw 
PASS button.formEnctype: IDL set to -Infinity followed by getAttribute() 
PASS button.formEnctype: IDL set to -Infinity followed by IDL get 
PASS button.formEnctype: IDL set to "\0" should not throw 
PASS button.formEnctype: IDL set to "\0" followed by getAttribute() 
PASS button.formEnctype: IDL set to "\0" followed by IDL get 
PASS button.formEnctype: IDL set to null should not throw 
FAIL button.formEnctype: IDL set to null followed by IDL get assert_equals: expected "application/x-www-form-urlencoded" but got ""
PASS button.formEnctype: IDL set to object "test-toString" should not throw 
PASS button.formEnctype: IDL set to object "test-toString" followed by getAttribute() 
PASS button.formEnctype: IDL set to object "test-toString" followed by IDL get 
PASS button.formEnctype: IDL set to object "test-valueOf" should not throw 
PASS button.formEnctype: IDL set to object "test-valueOf" followed by getAttribute() 
PASS button.formEnctype: IDL set to object "test-valueOf" followed by IDL get 
PASS button.formEnctype: IDL set to "application/x-www-form-urlencoded" should not throw 
PASS button.formEnctype: IDL set to "application/x-www-form-urlencoded" followed by getAttribute() 
PASS button.formEnctype: IDL set to "application/x-www-form-urlencoded" followed by IDL get 
PASS button.formEnctype: IDL set to "xapplication/x-www-form-urlencoded" should not throw 
PASS button.formEnctype: IDL set to "xapplication/x-www-form-urlencoded" followed by getAttribute() 
PASS button.formEnctype: IDL set to "xapplication/x-www-form-urlencoded" followed by IDL get 
PASS button.formEnctype: IDL set to "application/x-www-form-urlencoded\0" should not throw 
PASS button.formEnctype: IDL set to "application/x-www-form-urlencoded\0" followed by getAttribute() 
PASS button.formEnctype: IDL set to "application/x-www-form-urlencoded\0" followed by IDL get 
PASS button.formEnctype: IDL set to "pplication/x-www-form-urlencoded" should not throw 
PASS button.formEnctype: IDL set to "pplication/x-www-form-urlencoded" followed by getAttribute() 
PASS button.formEnctype: IDL set to "pplication/x-www-form-urlencoded" followed by IDL get 
PASS button.formEnctype: IDL set to "APPLICATION/X-WWW-FORM-URLENCODED" should not throw 
PASS button.formEnctype: IDL set to "APPLICATION/X-WWW-FORM-URLENCODED" followed by getAttribute() 
PASS button.formEnctype: IDL set to "APPLICATION/X-WWW-FORM-URLENCODED" followed by IDL get 
PASS button.formEnctype: IDL set to "multipart/form-data" should not throw 
PASS button.formEnctype: IDL set to "multipart/form-data" followed by getAttribute() 
PASS button.formEnctype: IDL set to "multipart/form-data" followed by IDL get 
PASS button.formEnctype: IDL set to "xmultipart/form-data" should not throw 
PASS button.formEnctype: IDL set to "xmultipart/form-data" followed by getAttribute() 
PASS button.formEnctype: IDL set to "xmultipart/form-data" followed by IDL get 
PASS button.formEnctype: IDL set to "multipart/form-data\0" should not throw 
PASS button.formEnctype: IDL set to "multipart/form-data\0" followed by getAttribute() 
PASS button.formEnctype: IDL set to "multipart/form-data\0" followed by IDL get 
PASS button.formEnctype: IDL set to "ultipart/form-data" should not throw 
PASS button.formEnctype: IDL set to "ultipart/form-data" followed by getAttribute() 
PASS button.formEnctype: IDL set to "ultipart/form-data" followed by IDL get 
PASS button.formEnctype: IDL set to "MULTIPART/FORM-DATA" should not throw 
PASS button.formEnctype: IDL set to "MULTIPART/FORM-DATA" followed by getAttribute() 
PASS button.formEnctype: IDL set to "MULTIPART/FORM-DATA" followed by IDL get 
PASS button.formEnctype: IDL set to "text/plain" should not throw 
PASS button.formEnctype: IDL set to "text/plain" followed by getAttribute() 
PASS button.formEnctype: IDL set to "text/plain" followed by IDL get 
PASS button.formEnctype: IDL set to "xtext/plain" should not throw 
PASS button.formEnctype: IDL set to "xtext/plain" followed by getAttribute() 
PASS button.formEnctype: IDL set to "xtext/plain" followed by IDL get 
PASS button.formEnctype: IDL set to "text/plain\0" should not throw 
PASS button.formEnctype: IDL set to "text/plain\0" followed by getAttribute() 
PASS button.formEnctype: IDL set to "text/plain\0" followed by IDL get 
PASS button.formEnctype: IDL set to "ext/plain" should not throw 
PASS button.formEnctype: IDL set to "ext/plain" followed by getAttribute() 
PASS button.formEnctype: IDL set to "ext/plain" followed by IDL get 
PASS button.formEnctype: IDL set to "TEXT/PLAIN" should not throw 
PASS button.formEnctype: IDL set to "TEXT/PLAIN" followed by getAttribute() 
PASS button.formEnctype: IDL set to "TEXT/PLAIN" followed by IDL get 
PASS button.formMethod: typeof IDL attribute 
PASS button.formMethod: IDL get with DOM attribute unset 
PASS button.formMethod: setAttribute() to "" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "" followed by IDL get 
PASS button.formMethod: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.formMethod: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.formMethod: setAttribute() to undefined followed by getAttribute() 
PASS button.formMethod: setAttribute() to undefined followed by IDL get 
PASS button.formMethod: setAttribute() to 7 followed by getAttribute() 
PASS button.formMethod: setAttribute() to 7 followed by IDL get 
PASS button.formMethod: setAttribute() to 1.5 followed by getAttribute() 
PASS button.formMethod: setAttribute() to 1.5 followed by IDL get 
PASS button.formMethod: setAttribute() to true followed by getAttribute() 
PASS button.formMethod: setAttribute() to true followed by IDL get 
PASS button.formMethod: setAttribute() to false followed by getAttribute() 
PASS button.formMethod: setAttribute() to false followed by IDL get 
PASS button.formMethod: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.formMethod: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.formMethod: setAttribute() to NaN followed by getAttribute() 
PASS button.formMethod: setAttribute() to NaN followed by IDL get 
PASS button.formMethod: setAttribute() to Infinity followed by getAttribute() 
PASS button.formMethod: setAttribute() to Infinity followed by IDL get 
PASS button.formMethod: setAttribute() to -Infinity followed by getAttribute() 
PASS button.formMethod: setAttribute() to -Infinity followed by IDL get 
PASS button.formMethod: setAttribute() to "\0" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "\0" followed by IDL get 
PASS button.formMethod: setAttribute() to null followed by getAttribute() 
PASS button.formMethod: setAttribute() to null followed by IDL get 
PASS button.formMethod: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.formMethod: setAttribute() to object "test-toString" followed by IDL get 
PASS button.formMethod: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.formMethod: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.formMethod: setAttribute() to "get" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "get" followed by IDL get 
PASS button.formMethod: setAttribute() to "xget" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "xget" followed by IDL get 
PASS button.formMethod: setAttribute() to "get\0" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "get\0" followed by IDL get 
PASS button.formMethod: setAttribute() to "et" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "et" followed by IDL get 
PASS button.formMethod: setAttribute() to "GET" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "GET" followed by IDL get 
PASS button.formMethod: setAttribute() to "post" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "post" followed by IDL get 
PASS button.formMethod: setAttribute() to "xpost" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "xpost" followed by IDL get 
PASS button.formMethod: setAttribute() to "post\0" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "post\0" followed by IDL get 
PASS button.formMethod: setAttribute() to "ost" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "ost" followed by IDL get 
PASS button.formMethod: setAttribute() to "POST" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "POST" followed by IDL get 
PASS button.formMethod: setAttribute() to "dialog" followed by getAttribute() 
FAIL button.formMethod: setAttribute() to "dialog" followed by IDL get assert_equals: expected "dialog" but got "get"
PASS button.formMethod: setAttribute() to "xdialog" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "xdialog" followed by IDL get 
PASS button.formMethod: setAttribute() to "dialog\0" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "dialog\0" followed by IDL get 
PASS button.formMethod: setAttribute() to "ialog" followed by getAttribute() 
PASS button.formMethod: setAttribute() to "ialog" followed by IDL get 
PASS button.formMethod: setAttribute() to "DIALOG" followed by getAttribute() 
FAIL button.formMethod: setAttribute() to "DIALOG" followed by IDL get assert_equals: expected "dialog" but got "get"
PASS button.formMethod: IDL set to "" should not throw 
PASS button.formMethod: IDL set to "" followed by getAttribute() 
PASS button.formMethod: IDL set to "" followed by IDL get 
PASS button.formMethod: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS button.formMethod: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.formMethod: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.formMethod: IDL set to undefined should not throw 
PASS button.formMethod: IDL set to undefined followed by getAttribute() 
PASS button.formMethod: IDL set to undefined followed by IDL get 
PASS button.formMethod: IDL set to 7 should not throw 
PASS button.formMethod: IDL set to 7 followed by getAttribute() 
PASS button.formMethod: IDL set to 7 followed by IDL get 
PASS button.formMethod: IDL set to 1.5 should not throw 
PASS button.formMethod: IDL set to 1.5 followed by getAttribute() 
PASS button.formMethod: IDL set to 1.5 followed by IDL get 
PASS button.formMethod: IDL set to true should not throw 
PASS button.formMethod: IDL set to true followed by getAttribute() 
PASS button.formMethod: IDL set to true followed by IDL get 
PASS button.formMethod: IDL set to false should not throw 
PASS button.formMethod: IDL set to false followed by getAttribute() 
PASS button.formMethod: IDL set to false followed by IDL get 
PASS button.formMethod: IDL set to object "[object Object]" should not throw 
PASS button.formMethod: IDL set to object "[object Object]" followed by getAttribute() 
PASS button.formMethod: IDL set to object "[object Object]" followed by IDL get 
PASS button.formMethod: IDL set to NaN should not throw 
PASS button.formMethod: IDL set to NaN followed by getAttribute() 
PASS button.formMethod: IDL set to NaN followed by IDL get 
PASS button.formMethod: IDL set to Infinity should not throw 
PASS button.formMethod: IDL set to Infinity followed by getAttribute() 
PASS button.formMethod: IDL set to Infinity followed by IDL get 
PASS button.formMethod: IDL set to -Infinity should not throw 
PASS button.formMethod: IDL set to -Infinity followed by getAttribute() 
PASS button.formMethod: IDL set to -Infinity followed by IDL get 
PASS button.formMethod: IDL set to "\0" should not throw 
PASS button.formMethod: IDL set to "\0" followed by getAttribute() 
PASS button.formMethod: IDL set to "\0" followed by IDL get 
PASS button.formMethod: IDL set to null should not throw 
FAIL button.formMethod: IDL set to null followed by IDL get assert_equals: expected "get" but got ""
PASS button.formMethod: IDL set to object "test-toString" should not throw 
PASS button.formMethod: IDL set to object "test-toString" followed by getAttribute() 
PASS button.formMethod: IDL set to object "test-toString" followed by IDL get 
PASS button.formMethod: IDL set to object "test-valueOf" should not throw 
PASS button.formMethod: IDL set to object "test-valueOf" followed by getAttribute() 
PASS button.formMethod: IDL set to object "test-valueOf" followed by IDL get 
PASS button.formMethod: IDL set to "get" should not throw 
PASS button.formMethod: IDL set to "get" followed by getAttribute() 
PASS button.formMethod: IDL set to "get" followed by IDL get 
PASS button.formMethod: IDL set to "xget" should not throw 
PASS button.formMethod: IDL set to "xget" followed by getAttribute() 
PASS button.formMethod: IDL set to "xget" followed by IDL get 
PASS button.formMethod: IDL set to "get\0" should not throw 
PASS button.formMethod: IDL set to "get\0" followed by getAttribute() 
PASS button.formMethod: IDL set to "get\0" followed by IDL get 
PASS button.formMethod: IDL set to "et" should not throw 
PASS button.formMethod: IDL set to "et" followed by getAttribute() 
PASS button.formMethod: IDL set to "et" followed by IDL get 
PASS button.formMethod: IDL set to "GET" should not throw 
PASS button.formMethod: IDL set to "GET" followed by getAttribute() 
PASS button.formMethod: IDL set to "GET" followed by IDL get 
PASS button.formMethod: IDL set to "post" should not throw 
PASS button.formMethod: IDL set to "post" followed by getAttribute() 
PASS button.formMethod: IDL set to "post" followed by IDL get 
PASS button.formMethod: IDL set to "xpost" should not throw 
PASS button.formMethod: IDL set to "xpost" followed by getAttribute() 
PASS button.formMethod: IDL set to "xpost" followed by IDL get 
PASS button.formMethod: IDL set to "post\0" should not throw 
PASS button.formMethod: IDL set to "post\0" followed by getAttribute() 
PASS button.formMethod: IDL set to "post\0" followed by IDL get 
PASS button.formMethod: IDL set to "ost" should not throw 
PASS button.formMethod: IDL set to "ost" followed by getAttribute() 
PASS button.formMethod: IDL set to "ost" followed by IDL get 
PASS button.formMethod: IDL set to "POST" should not throw 
PASS button.formMethod: IDL set to "POST" followed by getAttribute() 
PASS button.formMethod: IDL set to "POST" followed by IDL get 
PASS button.formMethod: IDL set to "dialog" should not throw 
PASS button.formMethod: IDL set to "dialog" followed by getAttribute() 
FAIL button.formMethod: IDL set to "dialog" followed by IDL get assert_equals: expected "dialog" but got "get"
PASS button.formMethod: IDL set to "xdialog" should not throw 
PASS button.formMethod: IDL set to "xdialog" followed by getAttribute() 
PASS button.formMethod: IDL set to "xdialog" followed by IDL get 
PASS button.formMethod: IDL set to "dialog\0" should not throw 
PASS button.formMethod: IDL set to "dialog\0" followed by getAttribute() 
PASS button.formMethod: IDL set to "dialog\0" followed by IDL get 
PASS button.formMethod: IDL set to "ialog" should not throw 
PASS button.formMethod: IDL set to "ialog" followed by getAttribute() 
PASS button.formMethod: IDL set to "ialog" followed by IDL get 
PASS button.formMethod: IDL set to "DIALOG" should not throw 
PASS button.formMethod: IDL set to "DIALOG" followed by getAttribute() 
FAIL button.formMethod: IDL set to "DIALOG" followed by IDL get assert_equals: expected "dialog" but got "get"
PASS button.formNoValidate: typeof IDL attribute 
PASS button.formNoValidate: IDL get with DOM attribute unset 
PASS button.formNoValidate: setAttribute() to "" followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to "" followed by IDL get 
PASS button.formNoValidate: setAttribute() to " foo " followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to " foo " followed by IDL get 
PASS button.formNoValidate: setAttribute() to undefined followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to undefined followed by IDL get 
PASS button.formNoValidate: setAttribute() to null followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to null followed by IDL get 
PASS button.formNoValidate: setAttribute() to 7 followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to 7 followed by IDL get 
PASS button.formNoValidate: setAttribute() to 1.5 followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to 1.5 followed by IDL get 
PASS button.formNoValidate: setAttribute() to true followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to true followed by IDL get 
PASS button.formNoValidate: setAttribute() to false followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to false followed by IDL get 
PASS button.formNoValidate: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.formNoValidate: setAttribute() to NaN followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to NaN followed by IDL get 
PASS button.formNoValidate: setAttribute() to Infinity followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to Infinity followed by IDL get 
PASS button.formNoValidate: setAttribute() to -Infinity followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to -Infinity followed by IDL get 
PASS button.formNoValidate: setAttribute() to "\0" followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to "\0" followed by IDL get 
PASS button.formNoValidate: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to object "test-toString" followed by IDL get 
PASS button.formNoValidate: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.formNoValidate: setAttribute() to "formNoValidate" followed by getAttribute() 
PASS button.formNoValidate: setAttribute() to "formNoValidate" followed by IDL get 
PASS button.formNoValidate: IDL set to "" should not throw 
PASS button.formNoValidate: IDL set to "" followed by hasAttribute() 
PASS button.formNoValidate: IDL set to "" followed by IDL get 
PASS button.formNoValidate: IDL set to " foo " should not throw 
PASS button.formNoValidate: IDL set to " foo " followed by hasAttribute() 
PASS button.formNoValidate: IDL set to " foo " followed by IDL get 
PASS button.formNoValidate: IDL set to undefined should not throw 
PASS button.formNoValidate: IDL set to undefined followed by hasAttribute() 
PASS button.formNoValidate: IDL set to undefined followed by IDL get 
PASS button.formNoValidate: IDL set to null should not throw 
PASS button.formNoValidate: IDL set to null followed by hasAttribute() 
PASS button.formNoValidate: IDL set to null followed by IDL get 
PASS button.formNoValidate: IDL set to 7 should not throw 
PASS button.formNoValidate: IDL set to 7 followed by hasAttribute() 
PASS button.formNoValidate: IDL set to 7 followed by IDL get 
PASS button.formNoValidate: IDL set to 1.5 should not throw 
PASS button.formNoValidate: IDL set to 1.5 followed by hasAttribute() 
PASS button.formNoValidate: IDL set to 1.5 followed by IDL get 
PASS button.formNoValidate: IDL set to true should not throw 
PASS button.formNoValidate: IDL set to true followed by hasAttribute() 
PASS button.formNoValidate: IDL set to true followed by IDL get 
PASS button.formNoValidate: IDL set to false should not throw 
PASS button.formNoValidate: IDL set to false followed by hasAttribute() 
PASS button.formNoValidate: IDL set to false followed by IDL get 
PASS button.formNoValidate: IDL set to object "[object Object]" should not throw 
PASS button.formNoValidate: IDL set to object "[object Object]" followed by hasAttribute() 
PASS button.formNoValidate: IDL set to object "[object Object]" followed by IDL get 
PASS button.formNoValidate: IDL set to NaN should not throw 
PASS button.formNoValidate: IDL set to NaN followed by hasAttribute() 
PASS button.formNoValidate: IDL set to NaN followed by IDL get 
PASS button.formNoValidate: IDL set to Infinity should not throw 
PASS button.formNoValidate: IDL set to Infinity followed by hasAttribute() 
PASS button.formNoValidate: IDL set to Infinity followed by IDL get 
PASS button.formNoValidate: IDL set to -Infinity should not throw 
PASS button.formNoValidate: IDL set to -Infinity followed by hasAttribute() 
PASS button.formNoValidate: IDL set to -Infinity followed by IDL get 
PASS button.formNoValidate: IDL set to "\0" should not throw 
PASS button.formNoValidate: IDL set to "\0" followed by hasAttribute() 
PASS button.formNoValidate: IDL set to "\0" followed by IDL get 
PASS button.formNoValidate: IDL set to object "test-toString" should not throw 
PASS button.formNoValidate: IDL set to object "test-toString" followed by hasAttribute() 
PASS button.formNoValidate: IDL set to object "test-toString" followed by IDL get 
PASS button.formNoValidate: IDL set to object "test-valueOf" should not throw 
PASS button.formNoValidate: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS button.formNoValidate: IDL set to object "test-valueOf" followed by IDL get 
PASS button.formTarget: typeof IDL attribute 
PASS button.formTarget: IDL get with DOM attribute unset 
PASS button.formTarget: setAttribute() to "" followed by getAttribute() 
PASS button.formTarget: setAttribute() to "" followed by IDL get 
PASS button.formTarget: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.formTarget: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.formTarget: setAttribute() to undefined followed by getAttribute() 
PASS button.formTarget: setAttribute() to undefined followed by IDL get 
PASS button.formTarget: setAttribute() to 7 followed by getAttribute() 
PASS button.formTarget: setAttribute() to 7 followed by IDL get 
PASS button.formTarget: setAttribute() to 1.5 followed by getAttribute() 
PASS button.formTarget: setAttribute() to 1.5 followed by IDL get 
PASS button.formTarget: setAttribute() to true followed by getAttribute() 
PASS button.formTarget: setAttribute() to true followed by IDL get 
PASS button.formTarget: setAttribute() to false followed by getAttribute() 
PASS button.formTarget: setAttribute() to false followed by IDL get 
PASS button.formTarget: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.formTarget: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.formTarget: setAttribute() to NaN followed by getAttribute() 
PASS button.formTarget: setAttribute() to NaN followed by IDL get 
PASS button.formTarget: setAttribute() to Infinity followed by getAttribute() 
PASS button.formTarget: setAttribute() to Infinity followed by IDL get 
PASS button.formTarget: setAttribute() to -Infinity followed by getAttribute() 
PASS button.formTarget: setAttribute() to -Infinity followed by IDL get 
PASS button.formTarget: setAttribute() to "\0" followed by getAttribute() 
PASS button.formTarget: setAttribute() to "\0" followed by IDL get 
PASS button.formTarget: setAttribute() to null followed by getAttribute() 
PASS button.formTarget: setAttribute() to null followed by IDL get 
PASS button.formTarget: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.formTarget: setAttribute() to object "test-toString" followed by IDL get 
PASS button.formTarget: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.formTarget: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.formTarget: IDL set to "" should not throw 
PASS button.formTarget: IDL set to "" followed by getAttribute() 
PASS button.formTarget: IDL set to "" followed by IDL get 
PASS button.formTarget: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS button.formTarget: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.formTarget: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.formTarget: IDL set to undefined should not throw 
PASS button.formTarget: IDL set to undefined followed by getAttribute() 
PASS button.formTarget: IDL set to undefined followed by IDL get 
PASS button.formTarget: IDL set to 7 should not throw 
PASS button.formTarget: IDL set to 7 followed by getAttribute() 
PASS button.formTarget: IDL set to 7 followed by IDL get 
PASS button.formTarget: IDL set to 1.5 should not throw 
PASS button.formTarget: IDL set to 1.5 followed by getAttribute() 
PASS button.formTarget: IDL set to 1.5 followed by IDL get 
PASS button.formTarget: IDL set to true should not throw 
PASS button.formTarget: IDL set to true followed by getAttribute() 
PASS button.formTarget: IDL set to true followed by IDL get 
PASS button.formTarget: IDL set to false should not throw 
PASS button.formTarget: IDL set to false followed by getAttribute() 
PASS button.formTarget: IDL set to false followed by IDL get 
PASS button.formTarget: IDL set to object "[object Object]" should not throw 
PASS button.formTarget: IDL set to object "[object Object]" followed by getAttribute() 
PASS button.formTarget: IDL set to object "[object Object]" followed by IDL get 
PASS button.formTarget: IDL set to NaN should not throw 
PASS button.formTarget: IDL set to NaN followed by getAttribute() 
PASS button.formTarget: IDL set to NaN followed by IDL get 
PASS button.formTarget: IDL set to Infinity should not throw 
PASS button.formTarget: IDL set to Infinity followed by getAttribute() 
PASS button.formTarget: IDL set to Infinity followed by IDL get 
PASS button.formTarget: IDL set to -Infinity should not throw 
PASS button.formTarget: IDL set to -Infinity followed by getAttribute() 
PASS button.formTarget: IDL set to -Infinity followed by IDL get 
PASS button.formTarget: IDL set to "\0" should not throw 
PASS button.formTarget: IDL set to "\0" followed by getAttribute() 
PASS button.formTarget: IDL set to "\0" followed by IDL get 
PASS button.formTarget: IDL set to null should not throw 
PASS button.formTarget: IDL set to null followed by getAttribute() 
PASS button.formTarget: IDL set to null followed by IDL get 
PASS button.formTarget: IDL set to object "test-toString" should not throw 
PASS button.formTarget: IDL set to object "test-toString" followed by getAttribute() 
PASS button.formTarget: IDL set to object "test-toString" followed by IDL get 
PASS button.formTarget: IDL set to object "test-valueOf" should not throw 
PASS button.formTarget: IDL set to object "test-valueOf" followed by getAttribute() 
PASS button.formTarget: IDL set to object "test-valueOf" followed by IDL get 
PASS button.name: typeof IDL attribute 
PASS button.name: IDL get with DOM attribute unset 
PASS button.name: setAttribute() to "" followed by getAttribute() 
PASS button.name: setAttribute() to "" followed by IDL get 
PASS button.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.name: setAttribute() to undefined followed by getAttribute() 
PASS button.name: setAttribute() to undefined followed by IDL get 
PASS button.name: setAttribute() to 7 followed by getAttribute() 
PASS button.name: setAttribute() to 7 followed by IDL get 
PASS button.name: setAttribute() to 1.5 followed by getAttribute() 
PASS button.name: setAttribute() to 1.5 followed by IDL get 
PASS button.name: setAttribute() to true followed by getAttribute() 
PASS button.name: setAttribute() to true followed by IDL get 
PASS button.name: setAttribute() to false followed by getAttribute() 
PASS button.name: setAttribute() to false followed by IDL get 
PASS button.name: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.name: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.name: setAttribute() to NaN followed by getAttribute() 
PASS button.name: setAttribute() to NaN followed by IDL get 
PASS button.name: setAttribute() to Infinity followed by getAttribute() 
PASS button.name: setAttribute() to Infinity followed by IDL get 
PASS button.name: setAttribute() to -Infinity followed by getAttribute() 
PASS button.name: setAttribute() to -Infinity followed by IDL get 
PASS button.name: setAttribute() to "\0" followed by getAttribute() 
PASS button.name: setAttribute() to "\0" followed by IDL get 
PASS button.name: setAttribute() to null followed by getAttribute() 
PASS button.name: setAttribute() to null followed by IDL get 
PASS button.name: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.name: setAttribute() to object "test-toString" followed by IDL get 
PASS button.name: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.name: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.name: IDL set to "" should not throw 
PASS button.name: IDL set to "" followed by getAttribute() 
PASS button.name: IDL set to "" followed by IDL get 
PASS button.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS button.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.name: IDL set to undefined should not throw 
PASS button.name: IDL set to undefined followed by getAttribute() 
PASS button.name: IDL set to undefined followed by IDL get 
PASS button.name: IDL set to 7 should not throw 
PASS button.name: IDL set to 7 followed by getAttribute() 
PASS button.name: IDL set to 7 followed by IDL get 
PASS button.name: IDL set to 1.5 should not throw 
PASS button.name: IDL set to 1.5 followed by getAttribute() 
PASS button.name: IDL set to 1.5 followed by IDL get 
PASS button.name: IDL set to true should not throw 
PASS button.name: IDL set to true followed by getAttribute() 
PASS button.name: IDL set to true followed by IDL get 
PASS button.name: IDL set to false should not throw 
PASS button.name: IDL set to false followed by getAttribute() 
PASS button.name: IDL set to false followed by IDL get 
PASS button.name: IDL set to object "[object Object]" should not throw 
PASS button.name: IDL set to object "[object Object]" followed by getAttribute() 
PASS button.name: IDL set to object "[object Object]" followed by IDL get 
PASS button.name: IDL set to NaN should not throw 
PASS button.name: IDL set to NaN followed by getAttribute() 
PASS button.name: IDL set to NaN followed by IDL get 
PASS button.name: IDL set to Infinity should not throw 
PASS button.name: IDL set to Infinity followed by getAttribute() 
PASS button.name: IDL set to Infinity followed by IDL get 
PASS button.name: IDL set to -Infinity should not throw 
PASS button.name: IDL set to -Infinity followed by getAttribute() 
PASS button.name: IDL set to -Infinity followed by IDL get 
PASS button.name: IDL set to "\0" should not throw 
PASS button.name: IDL set to "\0" followed by getAttribute() 
PASS button.name: IDL set to "\0" followed by IDL get 
PASS button.name: IDL set to null should not throw 
PASS button.name: IDL set to null followed by getAttribute() 
PASS button.name: IDL set to null followed by IDL get 
PASS button.name: IDL set to object "test-toString" should not throw 
PASS button.name: IDL set to object "test-toString" followed by getAttribute() 
PASS button.name: IDL set to object "test-toString" followed by IDL get 
PASS button.name: IDL set to object "test-valueOf" should not throw 
PASS button.name: IDL set to object "test-valueOf" followed by getAttribute() 
PASS button.name: IDL set to object "test-valueOf" followed by IDL get 
PASS button.type: typeof IDL attribute 
PASS button.type: IDL get with DOM attribute unset 
PASS button.type: setAttribute() to "" followed by getAttribute() 
PASS button.type: setAttribute() to "" followed by IDL get 
PASS button.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.type: setAttribute() to undefined followed by getAttribute() 
PASS button.type: setAttribute() to undefined followed by IDL get 
PASS button.type: setAttribute() to 7 followed by getAttribute() 
PASS button.type: setAttribute() to 7 followed by IDL get 
PASS button.type: setAttribute() to 1.5 followed by getAttribute() 
PASS button.type: setAttribute() to 1.5 followed by IDL get 
PASS button.type: setAttribute() to true followed by getAttribute() 
PASS button.type: setAttribute() to true followed by IDL get 
PASS button.type: setAttribute() to false followed by getAttribute() 
PASS button.type: setAttribute() to false followed by IDL get 
PASS button.type: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.type: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.type: setAttribute() to NaN followed by getAttribute() 
PASS button.type: setAttribute() to NaN followed by IDL get 
PASS button.type: setAttribute() to Infinity followed by getAttribute() 
PASS button.type: setAttribute() to Infinity followed by IDL get 
PASS button.type: setAttribute() to -Infinity followed by getAttribute() 
PASS button.type: setAttribute() to -Infinity followed by IDL get 
PASS button.type: setAttribute() to "\0" followed by getAttribute() 
PASS button.type: setAttribute() to "\0" followed by IDL get 
PASS button.type: setAttribute() to null followed by getAttribute() 
PASS button.type: setAttribute() to null followed by IDL get 
PASS button.type: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.type: setAttribute() to object "test-toString" followed by IDL get 
PASS button.type: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.type: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.type: setAttribute() to "submit" followed by getAttribute() 
PASS button.type: setAttribute() to "submit" followed by IDL get 
PASS button.type: setAttribute() to "xsubmit" followed by getAttribute() 
PASS button.type: setAttribute() to "xsubmit" followed by IDL get 
PASS button.type: setAttribute() to "submit\0" followed by getAttribute() 
PASS button.type: setAttribute() to "submit\0" followed by IDL get 
PASS button.type: setAttribute() to "ubmit" followed by getAttribute() 
PASS button.type: setAttribute() to "ubmit" followed by IDL get 
PASS button.type: setAttribute() to "SUBMIT" followed by getAttribute() 
PASS button.type: setAttribute() to "SUBMIT" followed by IDL get 
PASS button.type: setAttribute() to "reset" followed by getAttribute() 
PASS button.type: setAttribute() to "reset" followed by IDL get 
PASS button.type: setAttribute() to "xreset" followed by getAttribute() 
PASS button.type: setAttribute() to "xreset" followed by IDL get 
PASS button.type: setAttribute() to "reset\0" followed by getAttribute() 
PASS button.type: setAttribute() to "reset\0" followed by IDL get 
PASS button.type: setAttribute() to "eset" followed by getAttribute() 
PASS button.type: setAttribute() to "eset" followed by IDL get 
PASS button.type: setAttribute() to "RESET" followed by getAttribute() 
PASS button.type: setAttribute() to "RESET" followed by IDL get 
PASS button.type: setAttribute() to "button" followed by getAttribute() 
PASS button.type: setAttribute() to "button" followed by IDL get 
PASS button.type: setAttribute() to "xbutton" followed by getAttribute() 
PASS button.type: setAttribute() to "xbutton" followed by IDL get 
PASS button.type: setAttribute() to "button\0" followed by getAttribute() 
PASS button.type: setAttribute() to "button\0" followed by IDL get 
PASS button.type: setAttribute() to "utton" followed by getAttribute() 
PASS button.type: setAttribute() to "utton" followed by IDL get 
PASS button.type: setAttribute() to "BUTTON" followed by getAttribute() 
PASS button.type: setAttribute() to "BUTTON" followed by IDL get 
PASS button.type: IDL set to "" should not throw 
PASS button.type: IDL set to "" followed by getAttribute() 
PASS button.type: IDL set to "" followed by IDL get 
PASS button.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS button.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.type: IDL set to undefined should not throw 
PASS button.type: IDL set to undefined followed by getAttribute() 
PASS button.type: IDL set to undefined followed by IDL get 
PASS button.type: IDL set to 7 should not throw 
PASS button.type: IDL set to 7 followed by getAttribute() 
PASS button.type: IDL set to 7 followed by IDL get 
PASS button.type: IDL set to 1.5 should not throw 
PASS button.type: IDL set to 1.5 followed by getAttribute() 
PASS button.type: IDL set to 1.5 followed by IDL get 
PASS button.type: IDL set to true should not throw 
PASS button.type: IDL set to true followed by getAttribute() 
PASS button.type: IDL set to true followed by IDL get 
PASS button.type: IDL set to false should not throw 
PASS button.type: IDL set to false followed by getAttribute() 
PASS button.type: IDL set to false followed by IDL get 
PASS button.type: IDL set to object "[object Object]" should not throw 
PASS button.type: IDL set to object "[object Object]" followed by getAttribute() 
PASS button.type: IDL set to object "[object Object]" followed by IDL get 
PASS button.type: IDL set to NaN should not throw 
PASS button.type: IDL set to NaN followed by getAttribute() 
PASS button.type: IDL set to NaN followed by IDL get 
PASS button.type: IDL set to Infinity should not throw 
PASS button.type: IDL set to Infinity followed by getAttribute() 
PASS button.type: IDL set to Infinity followed by IDL get 
PASS button.type: IDL set to -Infinity should not throw 
PASS button.type: IDL set to -Infinity followed by getAttribute() 
PASS button.type: IDL set to -Infinity followed by IDL get 
PASS button.type: IDL set to "\0" should not throw 
PASS button.type: IDL set to "\0" followed by getAttribute() 
PASS button.type: IDL set to "\0" followed by IDL get 
PASS button.type: IDL set to null should not throw 
PASS button.type: IDL set to null followed by IDL get 
PASS button.type: IDL set to object "test-toString" should not throw 
PASS button.type: IDL set to object "test-toString" followed by getAttribute() 
PASS button.type: IDL set to object "test-toString" followed by IDL get 
PASS button.type: IDL set to object "test-valueOf" should not throw 
PASS button.type: IDL set to object "test-valueOf" followed by getAttribute() 
PASS button.type: IDL set to object "test-valueOf" followed by IDL get 
PASS button.type: IDL set to "submit" should not throw 
PASS button.type: IDL set to "submit" followed by getAttribute() 
PASS button.type: IDL set to "submit" followed by IDL get 
PASS button.type: IDL set to "xsubmit" should not throw 
PASS button.type: IDL set to "xsubmit" followed by getAttribute() 
PASS button.type: IDL set to "xsubmit" followed by IDL get 
PASS button.type: IDL set to "submit\0" should not throw 
PASS button.type: IDL set to "submit\0" followed by getAttribute() 
PASS button.type: IDL set to "submit\0" followed by IDL get 
PASS button.type: IDL set to "ubmit" should not throw 
PASS button.type: IDL set to "ubmit" followed by getAttribute() 
PASS button.type: IDL set to "ubmit" followed by IDL get 
PASS button.type: IDL set to "SUBMIT" should not throw 
PASS button.type: IDL set to "SUBMIT" followed by getAttribute() 
PASS button.type: IDL set to "SUBMIT" followed by IDL get 
PASS button.type: IDL set to "reset" should not throw 
PASS button.type: IDL set to "reset" followed by getAttribute() 
PASS button.type: IDL set to "reset" followed by IDL get 
PASS button.type: IDL set to "xreset" should not throw 
PASS button.type: IDL set to "xreset" followed by getAttribute() 
PASS button.type: IDL set to "xreset" followed by IDL get 
PASS button.type: IDL set to "reset\0" should not throw 
PASS button.type: IDL set to "reset\0" followed by getAttribute() 
PASS button.type: IDL set to "reset\0" followed by IDL get 
PASS button.type: IDL set to "eset" should not throw 
PASS button.type: IDL set to "eset" followed by getAttribute() 
PASS button.type: IDL set to "eset" followed by IDL get 
PASS button.type: IDL set to "RESET" should not throw 
PASS button.type: IDL set to "RESET" followed by getAttribute() 
PASS button.type: IDL set to "RESET" followed by IDL get 
PASS button.type: IDL set to "button" should not throw 
PASS button.type: IDL set to "button" followed by getAttribute() 
PASS button.type: IDL set to "button" followed by IDL get 
PASS button.type: IDL set to "xbutton" should not throw 
PASS button.type: IDL set to "xbutton" followed by getAttribute() 
PASS button.type: IDL set to "xbutton" followed by IDL get 
PASS button.type: IDL set to "button\0" should not throw 
PASS button.type: IDL set to "button\0" followed by getAttribute() 
PASS button.type: IDL set to "button\0" followed by IDL get 
PASS button.type: IDL set to "utton" should not throw 
PASS button.type: IDL set to "utton" followed by getAttribute() 
PASS button.type: IDL set to "utton" followed by IDL get 
PASS button.type: IDL set to "BUTTON" should not throw 
PASS button.type: IDL set to "BUTTON" followed by getAttribute() 
PASS button.type: IDL set to "BUTTON" followed by IDL get 
PASS button.value: typeof IDL attribute 
PASS button.value: IDL get with DOM attribute unset 
PASS button.value: setAttribute() to "" followed by getAttribute() 
PASS button.value: setAttribute() to "" followed by IDL get 
PASS button.value: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.value: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.value: setAttribute() to undefined followed by getAttribute() 
PASS button.value: setAttribute() to undefined followed by IDL get 
PASS button.value: setAttribute() to 7 followed by getAttribute() 
PASS button.value: setAttribute() to 7 followed by IDL get 
PASS button.value: setAttribute() to 1.5 followed by getAttribute() 
PASS button.value: setAttribute() to 1.5 followed by IDL get 
PASS button.value: setAttribute() to true followed by getAttribute() 
PASS button.value: setAttribute() to true followed by IDL get 
PASS button.value: setAttribute() to false followed by getAttribute() 
PASS button.value: setAttribute() to false followed by IDL get 
PASS button.value: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS button.value: setAttribute() to object "[object Object]" followed by IDL get 
PASS button.value: setAttribute() to NaN followed by getAttribute() 
PASS button.value: setAttribute() to NaN followed by IDL get 
PASS button.value: setAttribute() to Infinity followed by getAttribute() 
PASS button.value: setAttribute() to Infinity followed by IDL get 
PASS button.value: setAttribute() to -Infinity followed by getAttribute() 
PASS button.value: setAttribute() to -Infinity followed by IDL get 
PASS button.value: setAttribute() to "\0" followed by getAttribute() 
PASS button.value: setAttribute() to "\0" followed by IDL get 
PASS button.value: setAttribute() to null followed by getAttribute() 
PASS button.value: setAttribute() to null followed by IDL get 
PASS button.value: setAttribute() to object "test-toString" followed by getAttribute() 
PASS button.value: setAttribute() to object "test-toString" followed by IDL get 
PASS button.value: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS button.value: setAttribute() to object "test-valueOf" followed by IDL get 
PASS button.value: IDL set to "" should not throw 
PASS button.value: IDL set to "" followed by getAttribute() 
PASS button.value: IDL set to "" followed by IDL get 
PASS button.value: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS button.value: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS button.value: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS button.value: IDL set to undefined should not throw 
PASS button.value: IDL set to undefined followed by getAttribute() 
PASS button.value: IDL set to undefined followed by IDL get 
PASS button.value: IDL set to 7 should not throw 
PASS button.value: IDL set to 7 followed by getAttribute() 
PASS button.value: IDL set to 7 followed by IDL get 
PASS button.value: IDL set to 1.5 should not throw 
PASS button.value: IDL set to 1.5 followed by getAttribute() 
PASS button.value: IDL set to 1.5 followed by IDL get 
PASS button.value: IDL set to true should not throw 
PASS button.value: IDL set to true followed by getAttribute() 
PASS button.value: IDL set to true followed by IDL get 
PASS button.value: IDL set to false should not throw 
PASS button.value: IDL set to false followed by getAttribute() 
PASS button.value: IDL set to false followed by IDL get 
PASS button.value: IDL set to object "[object Object]" should not throw 
PASS button.value: IDL set to object "[object Object]" followed by getAttribute() 
PASS button.value: IDL set to object "[object Object]" followed by IDL get 
PASS button.value: IDL set to NaN should not throw 
PASS button.value: IDL set to NaN followed by getAttribute() 
PASS button.value: IDL set to NaN followed by IDL get 
PASS button.value: IDL set to Infinity should not throw 
PASS button.value: IDL set to Infinity followed by getAttribute() 
PASS button.value: IDL set to Infinity followed by IDL get 
PASS button.value: IDL set to -Infinity should not throw 
PASS button.value: IDL set to -Infinity followed by getAttribute() 
PASS button.value: IDL set to -Infinity followed by IDL get 
PASS button.value: IDL set to "\0" should not throw 
PASS button.value: IDL set to "\0" followed by getAttribute() 
PASS button.value: IDL set to "\0" followed by IDL get 
PASS button.value: IDL set to null should not throw 
PASS button.value: IDL set to null followed by getAttribute() 
PASS button.value: IDL set to null followed by IDL get 
PASS button.value: IDL set to object "test-toString" should not throw 
PASS button.value: IDL set to object "test-toString" followed by getAttribute() 
PASS button.value: IDL set to object "test-toString" followed by IDL get 
PASS button.value: IDL set to object "test-valueOf" should not throw 
PASS button.value: IDL set to object "test-valueOf" followed by getAttribute() 
PASS button.value: IDL set to object "test-valueOf" followed by IDL get 
FAIL button.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL button.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS button.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL button.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL button.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL button.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to null followed by getAttribute() 
FAIL button.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL button.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL button.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to true followed by getAttribute() 
FAIL button.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to false followed by getAttribute() 
FAIL button.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL button.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL button.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL button.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL button.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL button.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL button.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL button.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL button.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS button.itemScope: IDL set to "" should not throw 
FAIL button.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL button.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS button.itemScope: IDL set to " foo " should not throw 
PASS button.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL button.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS button.itemScope: IDL set to undefined should not throw 
FAIL button.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL button.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS button.itemScope: IDL set to null should not throw 
FAIL button.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL button.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS button.itemScope: IDL set to 7 should not throw 
PASS button.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL button.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS button.itemScope: IDL set to 1.5 should not throw 
PASS button.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL button.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS button.itemScope: IDL set to true should not throw 
PASS button.itemScope: IDL set to true followed by hasAttribute() 
PASS button.itemScope: IDL set to true followed by IDL get 
PASS button.itemScope: IDL set to false should not throw 
FAIL button.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS button.itemScope: IDL set to false followed by IDL get 
PASS button.itemScope: IDL set to object "[object Object]" should not throw 
PASS button.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL button.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS button.itemScope: IDL set to NaN should not throw 
FAIL button.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL button.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS button.itemScope: IDL set to Infinity should not throw 
PASS button.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL button.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS button.itemScope: IDL set to -Infinity should not throw 
PASS button.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL button.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS button.itemScope: IDL set to "\0" should not throw 
PASS button.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL button.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS button.itemScope: IDL set to object "test-toString" should not throw 
PASS button.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL button.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS button.itemScope: IDL set to object "test-valueOf" should not throw 
PASS button.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL button.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL button.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL button.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS button.itemId: setAttribute() to "" followed by getAttribute() 
FAIL button.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS button.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL button.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS button.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL button.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS button.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL button.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS button.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL button.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS button.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL button.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS button.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL button.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS button.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL button.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS button.itemId: setAttribute() to true followed by getAttribute() 
FAIL button.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS button.itemId: setAttribute() to false followed by getAttribute() 
FAIL button.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS button.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL button.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS button.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL button.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS button.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL button.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS button.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL button.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS button.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL button.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS button.itemId: setAttribute() to null followed by getAttribute() 
FAIL button.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS button.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL button.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS button.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL button.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS button.itemId: IDL set to "" should not throw 
FAIL button.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL button.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS button.itemId: IDL set to " foo " should not throw 
FAIL button.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL button.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS button.itemId: IDL set to "http://site.example/" should not throw 
FAIL button.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS button.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS button.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL button.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL button.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS button.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL button.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL button.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS button.itemId: IDL set to undefined should not throw 
FAIL button.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL button.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS button.itemId: IDL set to 7 should not throw 
FAIL button.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL button.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS button.itemId: IDL set to 1.5 should not throw 
FAIL button.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL button.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS button.itemId: IDL set to true should not throw 
FAIL button.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL button.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS button.itemId: IDL set to false should not throw 
FAIL button.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL button.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS button.itemId: IDL set to object "[object Object]" should not throw 
FAIL button.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL button.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS button.itemId: IDL set to NaN should not throw 
FAIL button.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL button.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS button.itemId: IDL set to Infinity should not throw 
FAIL button.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL button.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS button.itemId: IDL set to -Infinity should not throw 
FAIL button.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL button.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS button.itemId: IDL set to "\0" should not throw 
FAIL button.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL button.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS button.itemId: IDL set to null should not throw 
FAIL button.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL button.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS button.itemId: IDL set to object "test-toString" should not throw 
FAIL button.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL button.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS button.itemId: IDL set to object "test-valueOf" should not throw 
PASS button.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL button.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS select.title: typeof IDL attribute 
PASS select.title: IDL get with DOM attribute unset 
PASS select.title: setAttribute() to "" followed by getAttribute() 
PASS select.title: setAttribute() to "" followed by IDL get 
PASS select.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS select.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS select.title: setAttribute() to undefined followed by getAttribute() 
PASS select.title: setAttribute() to undefined followed by IDL get 
PASS select.title: setAttribute() to 7 followed by getAttribute() 
PASS select.title: setAttribute() to 7 followed by IDL get 
PASS select.title: setAttribute() to 1.5 followed by getAttribute() 
PASS select.title: setAttribute() to 1.5 followed by IDL get 
PASS select.title: setAttribute() to true followed by getAttribute() 
PASS select.title: setAttribute() to true followed by IDL get 
PASS select.title: setAttribute() to false followed by getAttribute() 
PASS select.title: setAttribute() to false followed by IDL get 
PASS select.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS select.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS select.title: setAttribute() to NaN followed by getAttribute() 
PASS select.title: setAttribute() to NaN followed by IDL get 
PASS select.title: setAttribute() to Infinity followed by getAttribute() 
PASS select.title: setAttribute() to Infinity followed by IDL get 
PASS select.title: setAttribute() to -Infinity followed by getAttribute() 
PASS select.title: setAttribute() to -Infinity followed by IDL get 
PASS select.title: setAttribute() to "\0" followed by getAttribute() 
PASS select.title: setAttribute() to "\0" followed by IDL get 
PASS select.title: setAttribute() to null followed by getAttribute() 
PASS select.title: setAttribute() to null followed by IDL get 
PASS select.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS select.title: setAttribute() to object "test-toString" followed by IDL get 
PASS select.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS select.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS select.title: IDL set to "" should not throw 
PASS select.title: IDL set to "" followed by getAttribute() 
PASS select.title: IDL set to "" followed by IDL get 
PASS select.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS select.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS select.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS select.title: IDL set to undefined should not throw 
PASS select.title: IDL set to undefined followed by getAttribute() 
PASS select.title: IDL set to undefined followed by IDL get 
PASS select.title: IDL set to 7 should not throw 
PASS select.title: IDL set to 7 followed by getAttribute() 
PASS select.title: IDL set to 7 followed by IDL get 
PASS select.title: IDL set to 1.5 should not throw 
PASS select.title: IDL set to 1.5 followed by getAttribute() 
PASS select.title: IDL set to 1.5 followed by IDL get 
PASS select.title: IDL set to true should not throw 
PASS select.title: IDL set to true followed by getAttribute() 
PASS select.title: IDL set to true followed by IDL get 
PASS select.title: IDL set to false should not throw 
PASS select.title: IDL set to false followed by getAttribute() 
PASS select.title: IDL set to false followed by IDL get 
PASS select.title: IDL set to object "[object Object]" should not throw 
PASS select.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS select.title: IDL set to object "[object Object]" followed by IDL get 
PASS select.title: IDL set to NaN should not throw 
PASS select.title: IDL set to NaN followed by getAttribute() 
PASS select.title: IDL set to NaN followed by IDL get 
PASS select.title: IDL set to Infinity should not throw 
PASS select.title: IDL set to Infinity followed by getAttribute() 
PASS select.title: IDL set to Infinity followed by IDL get 
PASS select.title: IDL set to -Infinity should not throw 
PASS select.title: IDL set to -Infinity followed by getAttribute() 
PASS select.title: IDL set to -Infinity followed by IDL get 
PASS select.title: IDL set to "\0" should not throw 
PASS select.title: IDL set to "\0" followed by getAttribute() 
PASS select.title: IDL set to "\0" followed by IDL get 
PASS select.title: IDL set to null should not throw 
PASS select.title: IDL set to null followed by getAttribute() 
PASS select.title: IDL set to null followed by IDL get 
PASS select.title: IDL set to object "test-toString" should not throw 
PASS select.title: IDL set to object "test-toString" followed by getAttribute() 
PASS select.title: IDL set to object "test-toString" followed by IDL get 
PASS select.title: IDL set to object "test-valueOf" should not throw 
PASS select.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS select.title: IDL set to object "test-valueOf" followed by IDL get 
PASS select.lang: typeof IDL attribute 
PASS select.lang: IDL get with DOM attribute unset 
PASS select.lang: setAttribute() to "" followed by getAttribute() 
PASS select.lang: setAttribute() to "" followed by IDL get 
PASS select.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS select.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS select.lang: setAttribute() to undefined followed by getAttribute() 
PASS select.lang: setAttribute() to undefined followed by IDL get 
PASS select.lang: setAttribute() to 7 followed by getAttribute() 
PASS select.lang: setAttribute() to 7 followed by IDL get 
PASS select.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS select.lang: setAttribute() to 1.5 followed by IDL get 
PASS select.lang: setAttribute() to true followed by getAttribute() 
PASS select.lang: setAttribute() to true followed by IDL get 
PASS select.lang: setAttribute() to false followed by getAttribute() 
PASS select.lang: setAttribute() to false followed by IDL get 
PASS select.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS select.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS select.lang: setAttribute() to NaN followed by getAttribute() 
PASS select.lang: setAttribute() to NaN followed by IDL get 
PASS select.lang: setAttribute() to Infinity followed by getAttribute() 
PASS select.lang: setAttribute() to Infinity followed by IDL get 
PASS select.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS select.lang: setAttribute() to -Infinity followed by IDL get 
PASS select.lang: setAttribute() to "\0" followed by getAttribute() 
PASS select.lang: setAttribute() to "\0" followed by IDL get 
PASS select.lang: setAttribute() to null followed by getAttribute() 
PASS select.lang: setAttribute() to null followed by IDL get 
PASS select.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS select.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS select.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS select.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS select.lang: IDL set to "" should not throw 
PASS select.lang: IDL set to "" followed by getAttribute() 
PASS select.lang: IDL set to "" followed by IDL get 
PASS select.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS select.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS select.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS select.lang: IDL set to undefined should not throw 
PASS select.lang: IDL set to undefined followed by getAttribute() 
PASS select.lang: IDL set to undefined followed by IDL get 
PASS select.lang: IDL set to 7 should not throw 
PASS select.lang: IDL set to 7 followed by getAttribute() 
PASS select.lang: IDL set to 7 followed by IDL get 
PASS select.lang: IDL set to 1.5 should not throw 
PASS select.lang: IDL set to 1.5 followed by getAttribute() 
PASS select.lang: IDL set to 1.5 followed by IDL get 
PASS select.lang: IDL set to true should not throw 
PASS select.lang: IDL set to true followed by getAttribute() 
PASS select.lang: IDL set to true followed by IDL get 
PASS select.lang: IDL set to false should not throw 
PASS select.lang: IDL set to false followed by getAttribute() 
PASS select.lang: IDL set to false followed by IDL get 
PASS select.lang: IDL set to object "[object Object]" should not throw 
PASS select.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS select.lang: IDL set to object "[object Object]" followed by IDL get 
PASS select.lang: IDL set to NaN should not throw 
PASS select.lang: IDL set to NaN followed by getAttribute() 
PASS select.lang: IDL set to NaN followed by IDL get 
PASS select.lang: IDL set to Infinity should not throw 
PASS select.lang: IDL set to Infinity followed by getAttribute() 
PASS select.lang: IDL set to Infinity followed by IDL get 
PASS select.lang: IDL set to -Infinity should not throw 
PASS select.lang: IDL set to -Infinity followed by getAttribute() 
PASS select.lang: IDL set to -Infinity followed by IDL get 
PASS select.lang: IDL set to "\0" should not throw 
PASS select.lang: IDL set to "\0" followed by getAttribute() 
PASS select.lang: IDL set to "\0" followed by IDL get 
PASS select.lang: IDL set to null should not throw 
PASS select.lang: IDL set to null followed by getAttribute() 
PASS select.lang: IDL set to null followed by IDL get 
PASS select.lang: IDL set to object "test-toString" should not throw 
PASS select.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS select.lang: IDL set to object "test-toString" followed by IDL get 
PASS select.lang: IDL set to object "test-valueOf" should not throw 
PASS select.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS select.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS select.dir: typeof IDL attribute 
PASS select.dir: IDL get with DOM attribute unset 
PASS select.dir: setAttribute() to "" followed by getAttribute() 
PASS select.dir: setAttribute() to "" followed by IDL get 
PASS select.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS select.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS select.dir: setAttribute() to undefined followed by getAttribute() 
PASS select.dir: setAttribute() to undefined followed by IDL get 
PASS select.dir: setAttribute() to 7 followed by getAttribute() 
PASS select.dir: setAttribute() to 7 followed by IDL get 
PASS select.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS select.dir: setAttribute() to 1.5 followed by IDL get 
PASS select.dir: setAttribute() to true followed by getAttribute() 
PASS select.dir: setAttribute() to true followed by IDL get 
PASS select.dir: setAttribute() to false followed by getAttribute() 
PASS select.dir: setAttribute() to false followed by IDL get 
PASS select.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS select.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS select.dir: setAttribute() to NaN followed by getAttribute() 
PASS select.dir: setAttribute() to NaN followed by IDL get 
PASS select.dir: setAttribute() to Infinity followed by getAttribute() 
PASS select.dir: setAttribute() to Infinity followed by IDL get 
PASS select.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS select.dir: setAttribute() to -Infinity followed by IDL get 
PASS select.dir: setAttribute() to "\0" followed by getAttribute() 
PASS select.dir: setAttribute() to "\0" followed by IDL get 
PASS select.dir: setAttribute() to null followed by getAttribute() 
PASS select.dir: setAttribute() to null followed by IDL get 
PASS select.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS select.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS select.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS select.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS select.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS select.dir: setAttribute() to "ltr" followed by IDL get 
PASS select.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS select.dir: setAttribute() to "xltr" followed by IDL get 
PASS select.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS select.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS select.dir: setAttribute() to "tr" followed by getAttribute() 
PASS select.dir: setAttribute() to "tr" followed by IDL get 
PASS select.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS select.dir: setAttribute() to "LTR" followed by IDL get 
PASS select.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS select.dir: setAttribute() to "rtl" followed by IDL get 
PASS select.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS select.dir: setAttribute() to "xrtl" followed by IDL get 
PASS select.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS select.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS select.dir: setAttribute() to "tl" followed by getAttribute() 
PASS select.dir: setAttribute() to "tl" followed by IDL get 
PASS select.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS select.dir: setAttribute() to "RTL" followed by IDL get 
PASS select.dir: setAttribute() to "auto" followed by getAttribute() 
PASS select.dir: setAttribute() to "auto" followed by IDL get 
PASS select.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS select.dir: setAttribute() to "xauto" followed by IDL get 
PASS select.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS select.dir: setAttribute() to "auto\0" followed by IDL get 
PASS select.dir: setAttribute() to "uto" followed by getAttribute() 
PASS select.dir: setAttribute() to "uto" followed by IDL get 
PASS select.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS select.dir: setAttribute() to "AUTO" followed by IDL get 
PASS select.dir: IDL set to "" should not throw 
PASS select.dir: IDL set to "" followed by getAttribute() 
PASS select.dir: IDL set to "" followed by IDL get 
PASS select.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS select.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS select.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS select.dir: IDL set to undefined should not throw 
PASS select.dir: IDL set to undefined followed by getAttribute() 
PASS select.dir: IDL set to undefined followed by IDL get 
PASS select.dir: IDL set to 7 should not throw 
PASS select.dir: IDL set to 7 followed by getAttribute() 
PASS select.dir: IDL set to 7 followed by IDL get 
PASS select.dir: IDL set to 1.5 should not throw 
PASS select.dir: IDL set to 1.5 followed by getAttribute() 
PASS select.dir: IDL set to 1.5 followed by IDL get 
PASS select.dir: IDL set to true should not throw 
PASS select.dir: IDL set to true followed by getAttribute() 
PASS select.dir: IDL set to true followed by IDL get 
PASS select.dir: IDL set to false should not throw 
PASS select.dir: IDL set to false followed by getAttribute() 
PASS select.dir: IDL set to false followed by IDL get 
PASS select.dir: IDL set to object "[object Object]" should not throw 
PASS select.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS select.dir: IDL set to object "[object Object]" followed by IDL get 
PASS select.dir: IDL set to NaN should not throw 
PASS select.dir: IDL set to NaN followed by getAttribute() 
PASS select.dir: IDL set to NaN followed by IDL get 
PASS select.dir: IDL set to Infinity should not throw 
PASS select.dir: IDL set to Infinity followed by getAttribute() 
PASS select.dir: IDL set to Infinity followed by IDL get 
PASS select.dir: IDL set to -Infinity should not throw 
PASS select.dir: IDL set to -Infinity followed by getAttribute() 
PASS select.dir: IDL set to -Infinity followed by IDL get 
PASS select.dir: IDL set to "\0" should not throw 
PASS select.dir: IDL set to "\0" followed by getAttribute() 
PASS select.dir: IDL set to "\0" followed by IDL get 
PASS select.dir: IDL set to null should not throw 
PASS select.dir: IDL set to null followed by IDL get 
PASS select.dir: IDL set to object "test-toString" should not throw 
PASS select.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS select.dir: IDL set to object "test-toString" followed by IDL get 
PASS select.dir: IDL set to object "test-valueOf" should not throw 
PASS select.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS select.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS select.dir: IDL set to "ltr" should not throw 
PASS select.dir: IDL set to "ltr" followed by getAttribute() 
PASS select.dir: IDL set to "ltr" followed by IDL get 
PASS select.dir: IDL set to "xltr" should not throw 
PASS select.dir: IDL set to "xltr" followed by getAttribute() 
PASS select.dir: IDL set to "xltr" followed by IDL get 
PASS select.dir: IDL set to "ltr\0" should not throw 
PASS select.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS select.dir: IDL set to "ltr\0" followed by IDL get 
PASS select.dir: IDL set to "tr" should not throw 
PASS select.dir: IDL set to "tr" followed by getAttribute() 
PASS select.dir: IDL set to "tr" followed by IDL get 
PASS select.dir: IDL set to "LTR" should not throw 
PASS select.dir: IDL set to "LTR" followed by getAttribute() 
PASS select.dir: IDL set to "LTR" followed by IDL get 
PASS select.dir: IDL set to "rtl" should not throw 
PASS select.dir: IDL set to "rtl" followed by getAttribute() 
PASS select.dir: IDL set to "rtl" followed by IDL get 
PASS select.dir: IDL set to "xrtl" should not throw 
PASS select.dir: IDL set to "xrtl" followed by getAttribute() 
PASS select.dir: IDL set to "xrtl" followed by IDL get 
PASS select.dir: IDL set to "rtl\0" should not throw 
PASS select.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS select.dir: IDL set to "rtl\0" followed by IDL get 
PASS select.dir: IDL set to "tl" should not throw 
PASS select.dir: IDL set to "tl" followed by getAttribute() 
PASS select.dir: IDL set to "tl" followed by IDL get 
PASS select.dir: IDL set to "RTL" should not throw 
PASS select.dir: IDL set to "RTL" followed by getAttribute() 
PASS select.dir: IDL set to "RTL" followed by IDL get 
PASS select.dir: IDL set to "auto" should not throw 
PASS select.dir: IDL set to "auto" followed by getAttribute() 
PASS select.dir: IDL set to "auto" followed by IDL get 
PASS select.dir: IDL set to "xauto" should not throw 
PASS select.dir: IDL set to "xauto" followed by getAttribute() 
PASS select.dir: IDL set to "xauto" followed by IDL get 
PASS select.dir: IDL set to "auto\0" should not throw 
PASS select.dir: IDL set to "auto\0" followed by getAttribute() 
PASS select.dir: IDL set to "auto\0" followed by IDL get 
PASS select.dir: IDL set to "uto" should not throw 
PASS select.dir: IDL set to "uto" followed by getAttribute() 
PASS select.dir: IDL set to "uto" followed by IDL get 
PASS select.dir: IDL set to "AUTO" should not throw 
PASS select.dir: IDL set to "AUTO" followed by getAttribute() 
PASS select.dir: IDL set to "AUTO" followed by IDL get 
PASS select.className (<select class>): typeof IDL attribute 
PASS select.className (<select class>): IDL get with DOM attribute unset 
PASS select.className (<select class>): setAttribute() to "" followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to "" followed by IDL get 
PASS select.className (<select class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS select.className (<select class>): setAttribute() to undefined followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to undefined followed by IDL get 
PASS select.className (<select class>): setAttribute() to 7 followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to 7 followed by IDL get 
PASS select.className (<select class>): setAttribute() to 1.5 followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to 1.5 followed by IDL get 
PASS select.className (<select class>): setAttribute() to true followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to true followed by IDL get 
PASS select.className (<select class>): setAttribute() to false followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to false followed by IDL get 
PASS select.className (<select class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS select.className (<select class>): setAttribute() to NaN followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to NaN followed by IDL get 
PASS select.className (<select class>): setAttribute() to Infinity followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to Infinity followed by IDL get 
PASS select.className (<select class>): setAttribute() to -Infinity followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to -Infinity followed by IDL get 
PASS select.className (<select class>): setAttribute() to "\0" followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to "\0" followed by IDL get 
PASS select.className (<select class>): setAttribute() to null followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to null followed by IDL get 
PASS select.className (<select class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to object "test-toString" followed by IDL get 
PASS select.className (<select class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS select.className (<select class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS select.className (<select class>): IDL set to "" should not throw 
PASS select.className (<select class>): IDL set to "" followed by getAttribute() 
PASS select.className (<select class>): IDL set to "" followed by IDL get 
PASS select.className (<select class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS select.className (<select class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS select.className (<select class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS select.className (<select class>): IDL set to undefined should not throw 
PASS select.className (<select class>): IDL set to undefined followed by getAttribute() 
PASS select.className (<select class>): IDL set to undefined followed by IDL get 
PASS select.className (<select class>): IDL set to 7 should not throw 
PASS select.className (<select class>): IDL set to 7 followed by getAttribute() 
PASS select.className (<select class>): IDL set to 7 followed by IDL get 
PASS select.className (<select class>): IDL set to 1.5 should not throw 
PASS select.className (<select class>): IDL set to 1.5 followed by getAttribute() 
PASS select.className (<select class>): IDL set to 1.5 followed by IDL get 
PASS select.className (<select class>): IDL set to true should not throw 
PASS select.className (<select class>): IDL set to true followed by getAttribute() 
PASS select.className (<select class>): IDL set to true followed by IDL get 
PASS select.className (<select class>): IDL set to false should not throw 
PASS select.className (<select class>): IDL set to false followed by getAttribute() 
PASS select.className (<select class>): IDL set to false followed by IDL get 
PASS select.className (<select class>): IDL set to object "[object Object]" should not throw 
PASS select.className (<select class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS select.className (<select class>): IDL set to object "[object Object]" followed by IDL get 
PASS select.className (<select class>): IDL set to NaN should not throw 
PASS select.className (<select class>): IDL set to NaN followed by getAttribute() 
PASS select.className (<select class>): IDL set to NaN followed by IDL get 
PASS select.className (<select class>): IDL set to Infinity should not throw 
PASS select.className (<select class>): IDL set to Infinity followed by getAttribute() 
PASS select.className (<select class>): IDL set to Infinity followed by IDL get 
PASS select.className (<select class>): IDL set to -Infinity should not throw 
PASS select.className (<select class>): IDL set to -Infinity followed by getAttribute() 
PASS select.className (<select class>): IDL set to -Infinity followed by IDL get 
PASS select.className (<select class>): IDL set to "\0" should not throw 
PASS select.className (<select class>): IDL set to "\0" followed by getAttribute() 
PASS select.className (<select class>): IDL set to "\0" followed by IDL get 
PASS select.className (<select class>): IDL set to null should not throw 
PASS select.className (<select class>): IDL set to null followed by getAttribute() 
PASS select.className (<select class>): IDL set to null followed by IDL get 
PASS select.className (<select class>): IDL set to object "test-toString" should not throw 
PASS select.className (<select class>): IDL set to object "test-toString" followed by getAttribute() 
PASS select.className (<select class>): IDL set to object "test-toString" followed by IDL get 
PASS select.className (<select class>): IDL set to object "test-valueOf" should not throw 
PASS select.className (<select class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS select.className (<select class>): IDL set to object "test-valueOf" followed by IDL get 
PASS select.hidden: typeof IDL attribute 
PASS select.hidden: IDL get with DOM attribute unset 
PASS select.hidden: setAttribute() to "" followed by getAttribute() 
PASS select.hidden: setAttribute() to "" followed by IDL get 
PASS select.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS select.hidden: setAttribute() to " foo " followed by IDL get 
PASS select.hidden: setAttribute() to undefined followed by getAttribute() 
PASS select.hidden: setAttribute() to undefined followed by IDL get 
PASS select.hidden: setAttribute() to null followed by getAttribute() 
PASS select.hidden: setAttribute() to null followed by IDL get 
PASS select.hidden: setAttribute() to 7 followed by getAttribute() 
PASS select.hidden: setAttribute() to 7 followed by IDL get 
PASS select.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS select.hidden: setAttribute() to 1.5 followed by IDL get 
PASS select.hidden: setAttribute() to true followed by getAttribute() 
PASS select.hidden: setAttribute() to true followed by IDL get 
PASS select.hidden: setAttribute() to false followed by getAttribute() 
PASS select.hidden: setAttribute() to false followed by IDL get 
PASS select.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS select.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS select.hidden: setAttribute() to NaN followed by getAttribute() 
PASS select.hidden: setAttribute() to NaN followed by IDL get 
PASS select.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS select.hidden: setAttribute() to Infinity followed by IDL get 
PASS select.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS select.hidden: setAttribute() to -Infinity followed by IDL get 
PASS select.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS select.hidden: setAttribute() to "\0" followed by IDL get 
PASS select.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS select.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS select.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS select.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS select.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS select.hidden: setAttribute() to "hidden" followed by IDL get 
PASS select.hidden: IDL set to "" should not throw 
PASS select.hidden: IDL set to "" followed by hasAttribute() 
PASS select.hidden: IDL set to "" followed by IDL get 
PASS select.hidden: IDL set to " foo " should not throw 
PASS select.hidden: IDL set to " foo " followed by hasAttribute() 
PASS select.hidden: IDL set to " foo " followed by IDL get 
PASS select.hidden: IDL set to undefined should not throw 
PASS select.hidden: IDL set to undefined followed by hasAttribute() 
PASS select.hidden: IDL set to undefined followed by IDL get 
PASS select.hidden: IDL set to null should not throw 
PASS select.hidden: IDL set to null followed by hasAttribute() 
PASS select.hidden: IDL set to null followed by IDL get 
PASS select.hidden: IDL set to 7 should not throw 
PASS select.hidden: IDL set to 7 followed by hasAttribute() 
PASS select.hidden: IDL set to 7 followed by IDL get 
PASS select.hidden: IDL set to 1.5 should not throw 
PASS select.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS select.hidden: IDL set to 1.5 followed by IDL get 
PASS select.hidden: IDL set to true should not throw 
PASS select.hidden: IDL set to true followed by hasAttribute() 
PASS select.hidden: IDL set to true followed by IDL get 
PASS select.hidden: IDL set to false should not throw 
PASS select.hidden: IDL set to false followed by hasAttribute() 
PASS select.hidden: IDL set to false followed by IDL get 
PASS select.hidden: IDL set to object "[object Object]" should not throw 
PASS select.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS select.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS select.hidden: IDL set to NaN should not throw 
PASS select.hidden: IDL set to NaN followed by hasAttribute() 
PASS select.hidden: IDL set to NaN followed by IDL get 
PASS select.hidden: IDL set to Infinity should not throw 
PASS select.hidden: IDL set to Infinity followed by hasAttribute() 
PASS select.hidden: IDL set to Infinity followed by IDL get 
PASS select.hidden: IDL set to -Infinity should not throw 
PASS select.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS select.hidden: IDL set to -Infinity followed by IDL get 
PASS select.hidden: IDL set to "\0" should not throw 
PASS select.hidden: IDL set to "\0" followed by hasAttribute() 
PASS select.hidden: IDL set to "\0" followed by IDL get 
PASS select.hidden: IDL set to object "test-toString" should not throw 
PASS select.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS select.hidden: IDL set to object "test-toString" followed by IDL get 
PASS select.hidden: IDL set to object "test-valueOf" should not throw 
PASS select.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS select.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS select.accessKey: typeof IDL attribute 
PASS select.accessKey: IDL get with DOM attribute unset 
PASS select.accessKey: setAttribute() to "" followed by getAttribute() 
PASS select.accessKey: setAttribute() to "" followed by IDL get 
PASS select.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS select.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS select.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS select.accessKey: setAttribute() to undefined followed by IDL get 
PASS select.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS select.accessKey: setAttribute() to 7 followed by IDL get 
PASS select.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS select.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS select.accessKey: setAttribute() to true followed by getAttribute() 
PASS select.accessKey: setAttribute() to true followed by IDL get 
PASS select.accessKey: setAttribute() to false followed by getAttribute() 
PASS select.accessKey: setAttribute() to false followed by IDL get 
PASS select.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS select.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS select.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS select.accessKey: setAttribute() to NaN followed by IDL get 
PASS select.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS select.accessKey: setAttribute() to Infinity followed by IDL get 
PASS select.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS select.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS select.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS select.accessKey: setAttribute() to "\0" followed by IDL get 
PASS select.accessKey: setAttribute() to null followed by getAttribute() 
PASS select.accessKey: setAttribute() to null followed by IDL get 
PASS select.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS select.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS select.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS select.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS select.accessKey: IDL set to "" should not throw 
PASS select.accessKey: IDL set to "" followed by getAttribute() 
PASS select.accessKey: IDL set to "" followed by IDL get 
PASS select.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS select.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS select.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS select.accessKey: IDL set to undefined should not throw 
PASS select.accessKey: IDL set to undefined followed by getAttribute() 
PASS select.accessKey: IDL set to undefined followed by IDL get 
PASS select.accessKey: IDL set to 7 should not throw 
PASS select.accessKey: IDL set to 7 followed by getAttribute() 
PASS select.accessKey: IDL set to 7 followed by IDL get 
PASS select.accessKey: IDL set to 1.5 should not throw 
PASS select.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS select.accessKey: IDL set to 1.5 followed by IDL get 
PASS select.accessKey: IDL set to true should not throw 
PASS select.accessKey: IDL set to true followed by getAttribute() 
PASS select.accessKey: IDL set to true followed by IDL get 
PASS select.accessKey: IDL set to false should not throw 
PASS select.accessKey: IDL set to false followed by getAttribute() 
PASS select.accessKey: IDL set to false followed by IDL get 
PASS select.accessKey: IDL set to object "[object Object]" should not throw 
PASS select.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS select.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS select.accessKey: IDL set to NaN should not throw 
PASS select.accessKey: IDL set to NaN followed by getAttribute() 
PASS select.accessKey: IDL set to NaN followed by IDL get 
PASS select.accessKey: IDL set to Infinity should not throw 
PASS select.accessKey: IDL set to Infinity followed by getAttribute() 
PASS select.accessKey: IDL set to Infinity followed by IDL get 
PASS select.accessKey: IDL set to -Infinity should not throw 
PASS select.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS select.accessKey: IDL set to -Infinity followed by IDL get 
PASS select.accessKey: IDL set to "\0" should not throw 
PASS select.accessKey: IDL set to "\0" followed by getAttribute() 
PASS select.accessKey: IDL set to "\0" followed by IDL get 
PASS select.accessKey: IDL set to null should not throw 
PASS select.accessKey: IDL set to null followed by getAttribute() 
PASS select.accessKey: IDL set to null followed by IDL get 
PASS select.accessKey: IDL set to object "test-toString" should not throw 
PASS select.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS select.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS select.accessKey: IDL set to object "test-valueOf" should not throw 
PASS select.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS select.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS select.tabIndex: typeof IDL attribute 
PASS select.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS select.tabIndex: setAttribute() to -36 followed by IDL get 
PASS select.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS select.tabIndex: setAttribute() to -1 followed by IDL get 
PASS select.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS select.tabIndex: setAttribute() to 0 followed by IDL get 
PASS select.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS select.tabIndex: setAttribute() to 1 followed by IDL get 
PASS select.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL select.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS select.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL select.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS select.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS select.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS select.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS select.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS select.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS select.tabIndex: setAttribute() to "0" followed by IDL get 
PASS select.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS select.tabIndex: setAttribute() to "1" followed by IDL get 
PASS select.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS select.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS select.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS select.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS select.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS select.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS select.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS select.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS select.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS select.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS select.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS select.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS select.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS select.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS select.tabIndex: IDL set to -36 should not throw 
PASS select.tabIndex: IDL set to -36 followed by getAttribute() 
PASS select.tabIndex: IDL set to -36 followed by IDL get 
PASS select.tabIndex: IDL set to -1 should not throw 
PASS select.tabIndex: IDL set to -1 followed by getAttribute() 
PASS select.tabIndex: IDL set to -1 followed by IDL get 
PASS select.tabIndex: IDL set to 0 should not throw 
PASS select.tabIndex: IDL set to 0 followed by getAttribute() 
PASS select.tabIndex: IDL set to 0 followed by IDL get 
PASS select.tabIndex: IDL set to 1 should not throw 
PASS select.tabIndex: IDL set to 1 followed by getAttribute() 
PASS select.tabIndex: IDL set to 1 followed by IDL get 
PASS select.tabIndex: IDL set to 2147483647 should not throw 
PASS select.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL select.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS select.tabIndex: IDL set to -2147483648 should not throw 
PASS select.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL select.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS select.autofocus: typeof IDL attribute 
PASS select.autofocus: IDL get with DOM attribute unset 
PASS select.autofocus: setAttribute() to "" followed by getAttribute() 
PASS select.autofocus: setAttribute() to "" followed by IDL get 
PASS select.autofocus: setAttribute() to " foo " followed by getAttribute() 
PASS select.autofocus: setAttribute() to " foo " followed by IDL get 
PASS select.autofocus: setAttribute() to undefined followed by getAttribute() 
PASS select.autofocus: setAttribute() to undefined followed by IDL get 
PASS select.autofocus: setAttribute() to null followed by getAttribute() 
PASS select.autofocus: setAttribute() to null followed by IDL get 
PASS select.autofocus: setAttribute() to 7 followed by getAttribute() 
PASS select.autofocus: setAttribute() to 7 followed by IDL get 
PASS select.autofocus: setAttribute() to 1.5 followed by getAttribute() 
PASS select.autofocus: setAttribute() to 1.5 followed by IDL get 
PASS select.autofocus: setAttribute() to true followed by getAttribute() 
PASS select.autofocus: setAttribute() to true followed by IDL get 
PASS select.autofocus: setAttribute() to false followed by getAttribute() 
PASS select.autofocus: setAttribute() to false followed by IDL get 
PASS select.autofocus: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS select.autofocus: setAttribute() to object "[object Object]" followed by IDL get 
PASS select.autofocus: setAttribute() to NaN followed by getAttribute() 
PASS select.autofocus: setAttribute() to NaN followed by IDL get 
PASS select.autofocus: setAttribute() to Infinity followed by getAttribute() 
PASS select.autofocus: setAttribute() to Infinity followed by IDL get 
PASS select.autofocus: setAttribute() to -Infinity followed by getAttribute() 
PASS select.autofocus: setAttribute() to -Infinity followed by IDL get 
PASS select.autofocus: setAttribute() to "\0" followed by getAttribute() 
PASS select.autofocus: setAttribute() to "\0" followed by IDL get 
PASS select.autofocus: setAttribute() to object "test-toString" followed by getAttribute() 
PASS select.autofocus: setAttribute() to object "test-toString" followed by IDL get 
PASS select.autofocus: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS select.autofocus: setAttribute() to object "test-valueOf" followed by IDL get 
PASS select.autofocus: setAttribute() to "autofocus" followed by getAttribute() 
PASS select.autofocus: setAttribute() to "autofocus" followed by IDL get 
PASS select.autofocus: IDL set to "" should not throw 
PASS select.autofocus: IDL set to "" followed by hasAttribute() 
PASS select.autofocus: IDL set to "" followed by IDL get 
PASS select.autofocus: IDL set to " foo " should not throw 
PASS select.autofocus: IDL set to " foo " followed by hasAttribute() 
PASS select.autofocus: IDL set to " foo " followed by IDL get 
PASS select.autofocus: IDL set to undefined should not throw 
PASS select.autofocus: IDL set to undefined followed by hasAttribute() 
PASS select.autofocus: IDL set to undefined followed by IDL get 
PASS select.autofocus: IDL set to null should not throw 
PASS select.autofocus: IDL set to null followed by hasAttribute() 
PASS select.autofocus: IDL set to null followed by IDL get 
PASS select.autofocus: IDL set to 7 should not throw 
PASS select.autofocus: IDL set to 7 followed by hasAttribute() 
PASS select.autofocus: IDL set to 7 followed by IDL get 
PASS select.autofocus: IDL set to 1.5 should not throw 
PASS select.autofocus: IDL set to 1.5 followed by hasAttribute() 
PASS select.autofocus: IDL set to 1.5 followed by IDL get 
PASS select.autofocus: IDL set to true should not throw 
PASS select.autofocus: IDL set to true followed by hasAttribute() 
PASS select.autofocus: IDL set to true followed by IDL get 
PASS select.autofocus: IDL set to false should not throw 
PASS select.autofocus: IDL set to false followed by hasAttribute() 
PASS select.autofocus: IDL set to false followed by IDL get 
PASS select.autofocus: IDL set to object "[object Object]" should not throw 
PASS select.autofocus: IDL set to object "[object Object]" followed by hasAttribute() 
PASS select.autofocus: IDL set to object "[object Object]" followed by IDL get 
PASS select.autofocus: IDL set to NaN should not throw 
PASS select.autofocus: IDL set to NaN followed by hasAttribute() 
PASS select.autofocus: IDL set to NaN followed by IDL get 
PASS select.autofocus: IDL set to Infinity should not throw 
PASS select.autofocus: IDL set to Infinity followed by hasAttribute() 
PASS select.autofocus: IDL set to Infinity followed by IDL get 
PASS select.autofocus: IDL set to -Infinity should not throw 
PASS select.autofocus: IDL set to -Infinity followed by hasAttribute() 
PASS select.autofocus: IDL set to -Infinity followed by IDL get 
PASS select.autofocus: IDL set to "\0" should not throw 
PASS select.autofocus: IDL set to "\0" followed by hasAttribute() 
PASS select.autofocus: IDL set to "\0" followed by IDL get 
PASS select.autofocus: IDL set to object "test-toString" should not throw 
PASS select.autofocus: IDL set to object "test-toString" followed by hasAttribute() 
PASS select.autofocus: IDL set to object "test-toString" followed by IDL get 
PASS select.autofocus: IDL set to object "test-valueOf" should not throw 
PASS select.autofocus: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS select.autofocus: IDL set to object "test-valueOf" followed by IDL get 
PASS select.disabled: typeof IDL attribute 
PASS select.disabled: IDL get with DOM attribute unset 
PASS select.disabled: setAttribute() to "" followed by getAttribute() 
PASS select.disabled: setAttribute() to "" followed by IDL get 
PASS select.disabled: setAttribute() to " foo " followed by getAttribute() 
PASS select.disabled: setAttribute() to " foo " followed by IDL get 
PASS select.disabled: setAttribute() to undefined followed by getAttribute() 
PASS select.disabled: setAttribute() to undefined followed by IDL get 
PASS select.disabled: setAttribute() to null followed by getAttribute() 
PASS select.disabled: setAttribute() to null followed by IDL get 
PASS select.disabled: setAttribute() to 7 followed by getAttribute() 
PASS select.disabled: setAttribute() to 7 followed by IDL get 
PASS select.disabled: setAttribute() to 1.5 followed by getAttribute() 
PASS select.disabled: setAttribute() to 1.5 followed by IDL get 
PASS select.disabled: setAttribute() to true followed by getAttribute() 
PASS select.disabled: setAttribute() to true followed by IDL get 
PASS select.disabled: setAttribute() to false followed by getAttribute() 
PASS select.disabled: setAttribute() to false followed by IDL get 
PASS select.disabled: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS select.disabled: setAttribute() to object "[object Object]" followed by IDL get 
PASS select.disabled: setAttribute() to NaN followed by getAttribute() 
PASS select.disabled: setAttribute() to NaN followed by IDL get 
PASS select.disabled: setAttribute() to Infinity followed by getAttribute() 
PASS select.disabled: setAttribute() to Infinity followed by IDL get 
PASS select.disabled: setAttribute() to -Infinity followed by getAttribute() 
PASS select.disabled: setAttribute() to -Infinity followed by IDL get 
PASS select.disabled: setAttribute() to "\0" followed by getAttribute() 
PASS select.disabled: setAttribute() to "\0" followed by IDL get 
PASS select.disabled: setAttribute() to object "test-toString" followed by getAttribute() 
PASS select.disabled: setAttribute() to object "test-toString" followed by IDL get 
PASS select.disabled: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS select.disabled: setAttribute() to object "test-valueOf" followed by IDL get 
PASS select.disabled: setAttribute() to "disabled" followed by getAttribute() 
PASS select.disabled: setAttribute() to "disabled" followed by IDL get 
PASS select.disabled: IDL set to "" should not throw 
PASS select.disabled: IDL set to "" followed by hasAttribute() 
PASS select.disabled: IDL set to "" followed by IDL get 
PASS select.disabled: IDL set to " foo " should not throw 
PASS select.disabled: IDL set to " foo " followed by hasAttribute() 
PASS select.disabled: IDL set to " foo " followed by IDL get 
PASS select.disabled: IDL set to undefined should not throw 
PASS select.disabled: IDL set to undefined followed by hasAttribute() 
PASS select.disabled: IDL set to undefined followed by IDL get 
PASS select.disabled: IDL set to null should not throw 
PASS select.disabled: IDL set to null followed by hasAttribute() 
PASS select.disabled: IDL set to null followed by IDL get 
PASS select.disabled: IDL set to 7 should not throw 
PASS select.disabled: IDL set to 7 followed by hasAttribute() 
PASS select.disabled: IDL set to 7 followed by IDL get 
PASS select.disabled: IDL set to 1.5 should not throw 
PASS select.disabled: IDL set to 1.5 followed by hasAttribute() 
PASS select.disabled: IDL set to 1.5 followed by IDL get 
PASS select.disabled: IDL set to true should not throw 
PASS select.disabled: IDL set to true followed by hasAttribute() 
PASS select.disabled: IDL set to true followed by IDL get 
PASS select.disabled: IDL set to false should not throw 
PASS select.disabled: IDL set to false followed by hasAttribute() 
PASS select.disabled: IDL set to false followed by IDL get 
PASS select.disabled: IDL set to object "[object Object]" should not throw 
PASS select.disabled: IDL set to object "[object Object]" followed by hasAttribute() 
PASS select.disabled: IDL set to object "[object Object]" followed by IDL get 
PASS select.disabled: IDL set to NaN should not throw 
PASS select.disabled: IDL set to NaN followed by hasAttribute() 
PASS select.disabled: IDL set to NaN followed by IDL get 
PASS select.disabled: IDL set to Infinity should not throw 
PASS select.disabled: IDL set to Infinity followed by hasAttribute() 
PASS select.disabled: IDL set to Infinity followed by IDL get 
PASS select.disabled: IDL set to -Infinity should not throw 
PASS select.disabled: IDL set to -Infinity followed by hasAttribute() 
PASS select.disabled: IDL set to -Infinity followed by IDL get 
PASS select.disabled: IDL set to "\0" should not throw 
PASS select.disabled: IDL set to "\0" followed by hasAttribute() 
PASS select.disabled: IDL set to "\0" followed by IDL get 
PASS select.disabled: IDL set to object "test-toString" should not throw 
PASS select.disabled: IDL set to object "test-toString" followed by hasAttribute() 
PASS select.disabled: IDL set to object "test-toString" followed by IDL get 
PASS select.disabled: IDL set to object "test-valueOf" should not throw 
PASS select.disabled: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS select.disabled: IDL set to object "test-valueOf" followed by IDL get 
PASS select.multiple: typeof IDL attribute 
PASS select.multiple: IDL get with DOM attribute unset 
PASS select.multiple: setAttribute() to "" followed by getAttribute() 
PASS select.multiple: setAttribute() to "" followed by IDL get 
PASS select.multiple: setAttribute() to " foo " followed by getAttribute() 
PASS select.multiple: setAttribute() to " foo " followed by IDL get 
PASS select.multiple: setAttribute() to undefined followed by getAttribute() 
PASS select.multiple: setAttribute() to undefined followed by IDL get 
PASS select.multiple: setAttribute() to null followed by getAttribute() 
PASS select.multiple: setAttribute() to null followed by IDL get 
PASS select.multiple: setAttribute() to 7 followed by getAttribute() 
PASS select.multiple: setAttribute() to 7 followed by IDL get 
PASS select.multiple: setAttribute() to 1.5 followed by getAttribute() 
PASS select.multiple: setAttribute() to 1.5 followed by IDL get 
PASS select.multiple: setAttribute() to true followed by getAttribute() 
PASS select.multiple: setAttribute() to true followed by IDL get 
PASS select.multiple: setAttribute() to false followed by getAttribute() 
PASS select.multiple: setAttribute() to false followed by IDL get 
PASS select.multiple: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS select.multiple: setAttribute() to object "[object Object]" followed by IDL get 
PASS select.multiple: setAttribute() to NaN followed by getAttribute() 
PASS select.multiple: setAttribute() to NaN followed by IDL get 
PASS select.multiple: setAttribute() to Infinity followed by getAttribute() 
PASS select.multiple: setAttribute() to Infinity followed by IDL get 
PASS select.multiple: setAttribute() to -Infinity followed by getAttribute() 
PASS select.multiple: setAttribute() to -Infinity followed by IDL get 
PASS select.multiple: setAttribute() to "\0" followed by getAttribute() 
PASS select.multiple: setAttribute() to "\0" followed by IDL get 
PASS select.multiple: setAttribute() to object "test-toString" followed by getAttribute() 
PASS select.multiple: setAttribute() to object "test-toString" followed by IDL get 
PASS select.multiple: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS select.multiple: setAttribute() to object "test-valueOf" followed by IDL get 
PASS select.multiple: setAttribute() to "multiple" followed by getAttribute() 
PASS select.multiple: setAttribute() to "multiple" followed by IDL get 
PASS select.multiple: IDL set to "" should not throw 
PASS select.multiple: IDL set to "" followed by hasAttribute() 
PASS select.multiple: IDL set to "" followed by IDL get 
PASS select.multiple: IDL set to " foo " should not throw 
PASS select.multiple: IDL set to " foo " followed by hasAttribute() 
PASS select.multiple: IDL set to " foo " followed by IDL get 
PASS select.multiple: IDL set to undefined should not throw 
PASS select.multiple: IDL set to undefined followed by hasAttribute() 
PASS select.multiple: IDL set to undefined followed by IDL get 
PASS select.multiple: IDL set to null should not throw 
PASS select.multiple: IDL set to null followed by hasAttribute() 
PASS select.multiple: IDL set to null followed by IDL get 
PASS select.multiple: IDL set to 7 should not throw 
PASS select.multiple: IDL set to 7 followed by hasAttribute() 
PASS select.multiple: IDL set to 7 followed by IDL get 
PASS select.multiple: IDL set to 1.5 should not throw 
PASS select.multiple: IDL set to 1.5 followed by hasAttribute() 
PASS select.multiple: IDL set to 1.5 followed by IDL get 
PASS select.multiple: IDL set to true should not throw 
PASS select.multiple: IDL set to true followed by hasAttribute() 
PASS select.multiple: IDL set to true followed by IDL get 
PASS select.multiple: IDL set to false should not throw 
PASS select.multiple: IDL set to false followed by hasAttribute() 
PASS select.multiple: IDL set to false followed by IDL get 
PASS select.multiple: IDL set to object "[object Object]" should not throw 
PASS select.multiple: IDL set to object "[object Object]" followed by hasAttribute() 
PASS select.multiple: IDL set to object "[object Object]" followed by IDL get 
PASS select.multiple: IDL set to NaN should not throw 
PASS select.multiple: IDL set to NaN followed by hasAttribute() 
PASS select.multiple: IDL set to NaN followed by IDL get 
PASS select.multiple: IDL set to Infinity should not throw 
PASS select.multiple: IDL set to Infinity followed by hasAttribute() 
PASS select.multiple: IDL set to Infinity followed by IDL get 
PASS select.multiple: IDL set to -Infinity should not throw 
PASS select.multiple: IDL set to -Infinity followed by hasAttribute() 
PASS select.multiple: IDL set to -Infinity followed by IDL get 
PASS select.multiple: IDL set to "\0" should not throw 
PASS select.multiple: IDL set to "\0" followed by hasAttribute() 
PASS select.multiple: IDL set to "\0" followed by IDL get 
PASS select.multiple: IDL set to object "test-toString" should not throw 
PASS select.multiple: IDL set to object "test-toString" followed by hasAttribute() 
PASS select.multiple: IDL set to object "test-toString" followed by IDL get 
PASS select.multiple: IDL set to object "test-valueOf" should not throw 
PASS select.multiple: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS select.multiple: IDL set to object "test-valueOf" followed by IDL get 
PASS select.name: typeof IDL attribute 
PASS select.name: IDL get with DOM attribute unset 
PASS select.name: setAttribute() to "" followed by getAttribute() 
PASS select.name: setAttribute() to "" followed by IDL get 
PASS select.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS select.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS select.name: setAttribute() to undefined followed by getAttribute() 
PASS select.name: setAttribute() to undefined followed by IDL get 
PASS select.name: setAttribute() to 7 followed by getAttribute() 
PASS select.name: setAttribute() to 7 followed by IDL get 
PASS select.name: setAttribute() to 1.5 followed by getAttribute() 
PASS select.name: setAttribute() to 1.5 followed by IDL get 
PASS select.name: setAttribute() to true followed by getAttribute() 
PASS select.name: setAttribute() to true followed by IDL get 
PASS select.name: setAttribute() to false followed by getAttribute() 
PASS select.name: setAttribute() to false followed by IDL get 
PASS select.name: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS select.name: setAttribute() to object "[object Object]" followed by IDL get 
PASS select.name: setAttribute() to NaN followed by getAttribute() 
PASS select.name: setAttribute() to NaN followed by IDL get 
PASS select.name: setAttribute() to Infinity followed by getAttribute() 
PASS select.name: setAttribute() to Infinity followed by IDL get 
PASS select.name: setAttribute() to -Infinity followed by getAttribute() 
PASS select.name: setAttribute() to -Infinity followed by IDL get 
PASS select.name: setAttribute() to "\0" followed by getAttribute() 
PASS select.name: setAttribute() to "\0" followed by IDL get 
PASS select.name: setAttribute() to null followed by getAttribute() 
PASS select.name: setAttribute() to null followed by IDL get 
PASS select.name: setAttribute() to object "test-toString" followed by getAttribute() 
PASS select.name: setAttribute() to object "test-toString" followed by IDL get 
PASS select.name: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS select.name: setAttribute() to object "test-valueOf" followed by IDL get 
PASS select.name: IDL set to "" should not throw 
PASS select.name: IDL set to "" followed by getAttribute() 
PASS select.name: IDL set to "" followed by IDL get 
PASS select.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS select.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS select.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS select.name: IDL set to undefined should not throw 
PASS select.name: IDL set to undefined followed by getAttribute() 
PASS select.name: IDL set to undefined followed by IDL get 
PASS select.name: IDL set to 7 should not throw 
PASS select.name: IDL set to 7 followed by getAttribute() 
PASS select.name: IDL set to 7 followed by IDL get 
PASS select.name: IDL set to 1.5 should not throw 
PASS select.name: IDL set to 1.5 followed by getAttribute() 
PASS select.name: IDL set to 1.5 followed by IDL get 
PASS select.name: IDL set to true should not throw 
PASS select.name: IDL set to true followed by getAttribute() 
PASS select.name: IDL set to true followed by IDL get 
PASS select.name: IDL set to false should not throw 
PASS select.name: IDL set to false followed by getAttribute() 
PASS select.name: IDL set to false followed by IDL get 
PASS select.name: IDL set to object "[object Object]" should not throw 
PASS select.name: IDL set to object "[object Object]" followed by getAttribute() 
PASS select.name: IDL set to object "[object Object]" followed by IDL get 
PASS select.name: IDL set to NaN should not throw 
PASS select.name: IDL set to NaN followed by getAttribute() 
PASS select.name: IDL set to NaN followed by IDL get 
PASS select.name: IDL set to Infinity should not throw 
PASS select.name: IDL set to Infinity followed by getAttribute() 
PASS select.name: IDL set to Infinity followed by IDL get 
PASS select.name: IDL set to -Infinity should not throw 
PASS select.name: IDL set to -Infinity followed by getAttribute() 
PASS select.name: IDL set to -Infinity followed by IDL get 
PASS select.name: IDL set to "\0" should not throw 
PASS select.name: IDL set to "\0" followed by getAttribute() 
PASS select.name: IDL set to "\0" followed by IDL get 
PASS select.name: IDL set to null should not throw 
PASS select.name: IDL set to null followed by getAttribute() 
PASS select.name: IDL set to null followed by IDL get 
PASS select.name: IDL set to object "test-toString" should not throw 
PASS select.name: IDL set to object "test-toString" followed by getAttribute() 
PASS select.name: IDL set to object "test-toString" followed by IDL get 
PASS select.name: IDL set to object "test-valueOf" should not throw 
PASS select.name: IDL set to object "test-valueOf" followed by getAttribute() 
PASS select.name: IDL set to object "test-valueOf" followed by IDL get 
PASS select.required: typeof IDL attribute 
PASS select.required: IDL get with DOM attribute unset 
PASS select.required: setAttribute() to "" followed by getAttribute() 
PASS select.required: setAttribute() to "" followed by IDL get 
PASS select.required: setAttribute() to " foo " followed by getAttribute() 
PASS select.required: setAttribute() to " foo " followed by IDL get 
PASS select.required: setAttribute() to undefined followed by getAttribute() 
PASS select.required: setAttribute() to undefined followed by IDL get 
PASS select.required: setAttribute() to null followed by getAttribute() 
PASS select.required: setAttribute() to null followed by IDL get 
PASS select.required: setAttribute() to 7 followed by getAttribute() 
PASS select.required: setAttribute() to 7 followed by IDL get 
PASS select.required: setAttribute() to 1.5 followed by getAttribute() 
PASS select.required: setAttribute() to 1.5 followed by IDL get 
PASS select.required: setAttribute() to true followed by getAttribute() 
PASS select.required: setAttribute() to true followed by IDL get 
PASS select.required: setAttribute() to false followed by getAttribute() 
PASS select.required: setAttribute() to false followed by IDL get 
PASS select.required: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS select.required: setAttribute() to object "[object Object]" followed by IDL get 
PASS select.required: setAttribute() to NaN followed by getAttribute() 
PASS select.required: setAttribute() to NaN followed by IDL get 
PASS select.required: setAttribute() to Infinity followed by getAttribute() 
PASS select.required: setAttribute() to Infinity followed by IDL get 
PASS select.required: setAttribute() to -Infinity followed by getAttribute() 
PASS select.required: setAttribute() to -Infinity followed by IDL get 
PASS select.required: setAttribute() to "\0" followed by getAttribute() 
PASS select.required: setAttribute() to "\0" followed by IDL get 
PASS select.required: setAttribute() to object "test-toString" followed by getAttribute() 
PASS select.required: setAttribute() to object "test-toString" followed by IDL get 
PASS select.required: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS select.required: setAttribute() to object "test-valueOf" followed by IDL get 
PASS select.required: setAttribute() to "required" followed by getAttribute() 
PASS select.required: setAttribute() to "required" followed by IDL get 
PASS select.required: IDL set to "" should not throw 
PASS select.required: IDL set to "" followed by hasAttribute() 
PASS select.required: IDL set to "" followed by IDL get 
PASS select.required: IDL set to " foo " should not throw 
PASS select.required: IDL set to " foo " followed by hasAttribute() 
PASS select.required: IDL set to " foo " followed by IDL get 
PASS select.required: IDL set to undefined should not throw 
PASS select.required: IDL set to undefined followed by hasAttribute() 
PASS select.required: IDL set to undefined followed by IDL get 
PASS select.required: IDL set to null should not throw 
PASS select.required: IDL set to null followed by hasAttribute() 
PASS select.required: IDL set to null followed by IDL get 
PASS select.required: IDL set to 7 should not throw 
PASS select.required: IDL set to 7 followed by hasAttribute() 
PASS select.required: IDL set to 7 followed by IDL get 
PASS select.required: IDL set to 1.5 should not throw 
PASS select.required: IDL set to 1.5 followed by hasAttribute() 
PASS select.required: IDL set to 1.5 followed by IDL get 
PASS select.required: IDL set to true should not throw 
PASS select.required: IDL set to true followed by hasAttribute() 
PASS select.required: IDL set to true followed by IDL get 
PASS select.required: IDL set to false should not throw 
PASS select.required: IDL set to false followed by hasAttribute() 
PASS select.required: IDL set to false followed by IDL get 
PASS select.required: IDL set to object "[object Object]" should not throw 
PASS select.required: IDL set to object "[object Object]" followed by hasAttribute() 
PASS select.required: IDL set to object "[object Object]" followed by IDL get 
PASS select.required: IDL set to NaN should not throw 
PASS select.required: IDL set to NaN followed by hasAttribute() 
PASS select.required: IDL set to NaN followed by IDL get 
PASS select.required: IDL set to Infinity should not throw 
PASS select.required: IDL set to Infinity followed by hasAttribute() 
PASS select.required: IDL set to Infinity followed by IDL get 
PASS select.required: IDL set to -Infinity should not throw 
PASS select.required: IDL set to -Infinity followed by hasAttribute() 
PASS select.required: IDL set to -Infinity followed by IDL get 
PASS select.required: IDL set to "\0" should not throw 
PASS select.required: IDL set to "\0" followed by hasAttribute() 
PASS select.required: IDL set to "\0" followed by IDL get 
PASS select.required: IDL set to object "test-toString" should not throw 
PASS select.required: IDL set to object "test-toString" followed by hasAttribute() 
PASS select.required: IDL set to object "test-toString" followed by IDL get 
PASS select.required: IDL set to object "test-valueOf" should not throw 
PASS select.required: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS select.required: IDL set to object "test-valueOf" followed by IDL get 
PASS select.size: typeof IDL attribute 
PASS select.size: IDL get with DOM attribute unset 
FAIL select.size: setAttribute() to -2147483649 followed by getAttribute() assert_equals: expected "-2147483649" but got "0"
PASS select.size: setAttribute() to -2147483649 followed by IDL get 
PASS select.size: setAttribute() to -2147483648 followed by getAttribute() 
PASS select.size: setAttribute() to -2147483648 followed by IDL get 
PASS select.size: setAttribute() to -36 followed by getAttribute() 
PASS select.size: setAttribute() to -36 followed by IDL get 
PASS select.size: setAttribute() to -1 followed by getAttribute() 
PASS select.size: setAttribute() to -1 followed by IDL get 
PASS select.size: setAttribute() to 0 followed by getAttribute() 
PASS select.size: setAttribute() to 0 followed by IDL get 
PASS select.size: setAttribute() to 1 followed by getAttribute() 
PASS select.size: setAttribute() to 1 followed by IDL get 
PASS select.size: setAttribute() to 257 followed by getAttribute() 
PASS select.size: setAttribute() to 257 followed by IDL get 
PASS select.size: setAttribute() to 2147483647 followed by getAttribute() 
PASS select.size: setAttribute() to 2147483647 followed by IDL get 
FAIL select.size: setAttribute() to 2147483648 followed by getAttribute() assert_equals: expected "2147483648" but got "0"
PASS select.size: setAttribute() to 2147483648 followed by IDL get 
FAIL select.size: setAttribute() to 4294967295 followed by getAttribute() assert_equals: expected "4294967295" but got "0"
PASS select.size: setAttribute() to 4294967295 followed by IDL get 
FAIL select.size: setAttribute() to 4294967296 followed by getAttribute() assert_equals: expected "4294967296" but got "0"
PASS select.size: setAttribute() to 4294967296 followed by IDL get 
FAIL select.size: setAttribute() to "" followed by getAttribute() assert_equals: expected "" but got "0"
PASS select.size: setAttribute() to "" followed by IDL get 
PASS select.size: setAttribute() to "-1" followed by getAttribute() 
PASS select.size: setAttribute() to "-1" followed by IDL get 
FAIL select.size: setAttribute() to "-0" followed by getAttribute() assert_equals: expected "-0" but got "0"
PASS select.size: setAttribute() to "-0" followed by IDL get 
PASS select.size: setAttribute() to "0" followed by getAttribute() 
PASS select.size: setAttribute() to "0" followed by IDL get 
PASS select.size: setAttribute() to "1" followed by getAttribute() 
PASS select.size: setAttribute() to "1" followed by IDL get 
FAIL select.size: setAttribute() to "\t7" followed by getAttribute() assert_equals: expected "\t7" but got "7"
PASS select.size: setAttribute() to "\t7" followed by IDL get 
FAIL select.size: setAttribute() to "\v7" followed by getAttribute() assert_equals: expected "\v7" but got "7"
FAIL select.size: setAttribute() to "\v7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to "\f7" followed by getAttribute() assert_equals: expected "\f7" but got "7"
PASS select.size: setAttribute() to "\f7" followed by IDL get 
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
PASS select.size: setAttribute() to " 7" followed by IDL get 
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "0"
PASS select.size: setAttribute() to " 7" followed by IDL get 
FAIL select.size: setAttribute() to "﻿7" followed by getAttribute() assert_equals: expected "﻿7" but got "0"
PASS select.size: setAttribute() to "﻿7" followed by IDL get 
FAIL select.size: setAttribute() to "\n7" followed by getAttribute() assert_equals: expected "\n7" but got "7"
PASS select.size: setAttribute() to "\n7" followed by IDL get 
FAIL select.size: setAttribute() to "\r7" followed by getAttribute() assert_equals: expected "\r7" but got "7"
PASS select.size: setAttribute() to "\r7" followed by IDL get 
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "0"
PASS select.size: setAttribute() to " 7" followed by IDL get 
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to "᠎7" followed by getAttribute() assert_equals: expected "᠎7" but got "0"
PASS select.size: setAttribute() to "᠎7" followed by IDL get 
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "7"
FAIL select.size: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " 7" followed by getAttribute() assert_equals: expected " 7" but got "0"
PASS select.size: setAttribute() to " 7" followed by IDL get 
FAIL select.size: setAttribute() to "　7" followed by getAttribute() assert_equals: expected "　7" but got "7"
FAIL select.size: setAttribute() to "　7" followed by IDL get assert_equals: expected 0 but got 7
FAIL select.size: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "0"
PASS select.size: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
FAIL select.size: setAttribute() to undefined followed by getAttribute() assert_equals: expected "undefined" but got "0"
PASS select.size: setAttribute() to undefined followed by IDL get 
FAIL select.size: setAttribute() to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "1"
PASS select.size: setAttribute() to 1.5 followed by IDL get 
FAIL select.size: setAttribute() to true followed by getAttribute() assert_equals: expected "true" but got "0"
PASS select.size: setAttribute() to true followed by IDL get 
FAIL select.size: setAttribute() to false followed by getAttribute() assert_equals: expected "false" but got "0"
PASS select.size: setAttribute() to false followed by IDL get 
FAIL select.size: setAttribute() to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "0"
PASS select.size: setAttribute() to object "[object Object]" followed by IDL get 
FAIL select.size: setAttribute() to NaN followed by getAttribute() assert_equals: expected "NaN" but got "0"
PASS select.size: setAttribute() to NaN followed by IDL get 
FAIL select.size: setAttribute() to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "0"
PASS select.size: setAttribute() to Infinity followed by IDL get 
FAIL select.size: setAttribute() to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "0"
PASS select.size: setAttribute() to -Infinity followed by IDL get 
FAIL select.size: setAttribute() to "\0" followed by getAttribute() assert_equals: expected "\0" but got "0"
PASS select.size: setAttribute() to "\0" followed by IDL get 
PASS select.size: setAttribute() to object "2" followed by getAttribute() 
PASS select.size: setAttribute() to object "2" followed by IDL get 
FAIL select.size: setAttribute() to object "3" followed by getAttribute() assert_equals: expected "[object Object]" but got "0"
PASS select.size: setAttribute() to object "3" followed by IDL get 
PASS select.size: IDL set to 0 should not throw 
PASS select.size: IDL set to 0 followed by getAttribute() 
PASS select.size: IDL set to 0 followed by IDL get 
PASS select.size: IDL set to 1 should not throw 
PASS select.size: IDL set to 1 followed by getAttribute() 
PASS select.size: IDL set to 1 followed by IDL get 
PASS select.size: IDL set to 257 should not throw 
PASS select.size: IDL set to 257 followed by getAttribute() 
PASS select.size: IDL set to 257 followed by IDL get 
PASS select.size: IDL set to 2147483647 should not throw 
PASS select.size: IDL set to 2147483647 followed by getAttribute() 
PASS select.size: IDL set to 2147483647 followed by IDL get 
PASS select.size: IDL set to "-0" should not throw 
PASS select.size: IDL set to "-0" followed by getAttribute() 
PASS select.size: IDL set to "-0" followed by IDL get 
PASS select.size: IDL set to 2147483648 should not throw 
FAIL select.size: IDL set to 2147483648 followed by getAttribute() assert_equals: expected "0" but got "-2147483648"
PASS select.size: IDL set to 2147483648 followed by IDL get 
PASS select.size: IDL set to 4294967295 should not throw 
FAIL select.size: IDL set to 4294967295 followed by getAttribute() assert_equals: expected "0" but got "-1"
PASS select.size: IDL set to 4294967295 followed by IDL get 
FAIL select.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL select.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS select.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL select.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL select.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL select.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to null followed by getAttribute() 
FAIL select.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL select.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL select.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to true followed by getAttribute() 
FAIL select.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to false followed by getAttribute() 
FAIL select.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL select.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL select.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL select.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL select.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL select.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL select.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL select.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL select.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS select.itemScope: IDL set to "" should not throw 
FAIL select.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL select.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS select.itemScope: IDL set to " foo " should not throw 
PASS select.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL select.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS select.itemScope: IDL set to undefined should not throw 
FAIL select.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL select.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS select.itemScope: IDL set to null should not throw 
FAIL select.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL select.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS select.itemScope: IDL set to 7 should not throw 
PASS select.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL select.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS select.itemScope: IDL set to 1.5 should not throw 
PASS select.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL select.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS select.itemScope: IDL set to true should not throw 
PASS select.itemScope: IDL set to true followed by hasAttribute() 
PASS select.itemScope: IDL set to true followed by IDL get 
PASS select.itemScope: IDL set to false should not throw 
FAIL select.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS select.itemScope: IDL set to false followed by IDL get 
PASS select.itemScope: IDL set to object "[object Object]" should not throw 
PASS select.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL select.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS select.itemScope: IDL set to NaN should not throw 
FAIL select.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL select.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS select.itemScope: IDL set to Infinity should not throw 
PASS select.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL select.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS select.itemScope: IDL set to -Infinity should not throw 
PASS select.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL select.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS select.itemScope: IDL set to "\0" should not throw 
PASS select.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL select.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS select.itemScope: IDL set to object "test-toString" should not throw 
PASS select.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL select.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS select.itemScope: IDL set to object "test-valueOf" should not throw 
PASS select.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL select.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL select.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL select.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS select.itemId: setAttribute() to "" followed by getAttribute() 
FAIL select.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS select.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL select.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS select.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL select.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS select.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL select.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS select.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL select.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS select.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL select.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS select.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL select.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS select.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL select.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS select.itemId: setAttribute() to true followed by getAttribute() 
FAIL select.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS select.itemId: setAttribute() to false followed by getAttribute() 
FAIL select.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS select.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL select.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS select.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL select.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS select.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL select.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS select.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL select.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS select.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL select.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS select.itemId: setAttribute() to null followed by getAttribute() 
FAIL select.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS select.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL select.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS select.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL select.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS select.itemId: IDL set to "" should not throw 
FAIL select.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL select.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS select.itemId: IDL set to " foo " should not throw 
FAIL select.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL select.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS select.itemId: IDL set to "http://site.example/" should not throw 
FAIL select.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS select.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS select.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL select.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL select.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS select.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL select.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL select.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS select.itemId: IDL set to undefined should not throw 
FAIL select.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL select.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS select.itemId: IDL set to 7 should not throw 
FAIL select.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL select.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS select.itemId: IDL set to 1.5 should not throw 
FAIL select.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL select.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS select.itemId: IDL set to true should not throw 
FAIL select.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL select.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS select.itemId: IDL set to false should not throw 
FAIL select.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL select.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS select.itemId: IDL set to object "[object Object]" should not throw 
FAIL select.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL select.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS select.itemId: IDL set to NaN should not throw 
FAIL select.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL select.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS select.itemId: IDL set to Infinity should not throw 
FAIL select.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL select.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS select.itemId: IDL set to -Infinity should not throw 
FAIL select.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL select.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS select.itemId: IDL set to "\0" should not throw 
FAIL select.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL select.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS select.itemId: IDL set to null should not throw 
FAIL select.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL select.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS select.itemId: IDL set to object "test-toString" should not throw 
FAIL select.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL select.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS select.itemId: IDL set to object "test-valueOf" should not throw 
PASS select.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL select.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS datalist.title: typeof IDL attribute 
PASS datalist.title: IDL get with DOM attribute unset 
PASS datalist.title: setAttribute() to "" followed by getAttribute() 
PASS datalist.title: setAttribute() to "" followed by IDL get 
PASS datalist.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS datalist.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS datalist.title: setAttribute() to undefined followed by getAttribute() 
PASS datalist.title: setAttribute() to undefined followed by IDL get 
PASS datalist.title: setAttribute() to 7 followed by getAttribute() 
PASS datalist.title: setAttribute() to 7 followed by IDL get 
PASS datalist.title: setAttribute() to 1.5 followed by getAttribute() 
PASS datalist.title: setAttribute() to 1.5 followed by IDL get 
PASS datalist.title: setAttribute() to true followed by getAttribute() 
PASS datalist.title: setAttribute() to true followed by IDL get 
PASS datalist.title: setAttribute() to false followed by getAttribute() 
PASS datalist.title: setAttribute() to false followed by IDL get 
PASS datalist.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS datalist.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS datalist.title: setAttribute() to NaN followed by getAttribute() 
PASS datalist.title: setAttribute() to NaN followed by IDL get 
PASS datalist.title: setAttribute() to Infinity followed by getAttribute() 
PASS datalist.title: setAttribute() to Infinity followed by IDL get 
PASS datalist.title: setAttribute() to -Infinity followed by getAttribute() 
PASS datalist.title: setAttribute() to -Infinity followed by IDL get 
PASS datalist.title: setAttribute() to "\0" followed by getAttribute() 
PASS datalist.title: setAttribute() to "\0" followed by IDL get 
PASS datalist.title: setAttribute() to null followed by getAttribute() 
PASS datalist.title: setAttribute() to null followed by IDL get 
PASS datalist.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS datalist.title: setAttribute() to object "test-toString" followed by IDL get 
PASS datalist.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS datalist.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS datalist.title: IDL set to "" should not throw 
PASS datalist.title: IDL set to "" followed by getAttribute() 
PASS datalist.title: IDL set to "" followed by IDL get 
PASS datalist.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS datalist.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS datalist.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS datalist.title: IDL set to undefined should not throw 
PASS datalist.title: IDL set to undefined followed by getAttribute() 
PASS datalist.title: IDL set to undefined followed by IDL get 
PASS datalist.title: IDL set to 7 should not throw 
PASS datalist.title: IDL set to 7 followed by getAttribute() 
PASS datalist.title: IDL set to 7 followed by IDL get 
PASS datalist.title: IDL set to 1.5 should not throw 
PASS datalist.title: IDL set to 1.5 followed by getAttribute() 
PASS datalist.title: IDL set to 1.5 followed by IDL get 
PASS datalist.title: IDL set to true should not throw 
PASS datalist.title: IDL set to true followed by getAttribute() 
PASS datalist.title: IDL set to true followed by IDL get 
PASS datalist.title: IDL set to false should not throw 
PASS datalist.title: IDL set to false followed by getAttribute() 
PASS datalist.title: IDL set to false followed by IDL get 
PASS datalist.title: IDL set to object "[object Object]" should not throw 
PASS datalist.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS datalist.title: IDL set to object "[object Object]" followed by IDL get 
PASS datalist.title: IDL set to NaN should not throw 
PASS datalist.title: IDL set to NaN followed by getAttribute() 
PASS datalist.title: IDL set to NaN followed by IDL get 
PASS datalist.title: IDL set to Infinity should not throw 
PASS datalist.title: IDL set to Infinity followed by getAttribute() 
PASS datalist.title: IDL set to Infinity followed by IDL get 
PASS datalist.title: IDL set to -Infinity should not throw 
PASS datalist.title: IDL set to -Infinity followed by getAttribute() 
PASS datalist.title: IDL set to -Infinity followed by IDL get 
PASS datalist.title: IDL set to "\0" should not throw 
PASS datalist.title: IDL set to "\0" followed by getAttribute() 
PASS datalist.title: IDL set to "\0" followed by IDL get 
PASS datalist.title: IDL set to null should not throw 
PASS datalist.title: IDL set to null followed by getAttribute() 
PASS datalist.title: IDL set to null followed by IDL get 
PASS datalist.title: IDL set to object "test-toString" should not throw 
PASS datalist.title: IDL set to object "test-toString" followed by getAttribute() 
PASS datalist.title: IDL set to object "test-toString" followed by IDL get 
PASS datalist.title: IDL set to object "test-valueOf" should not throw 
PASS datalist.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS datalist.title: IDL set to object "test-valueOf" followed by IDL get 
PASS datalist.lang: typeof IDL attribute 
PASS datalist.lang: IDL get with DOM attribute unset 
PASS datalist.lang: setAttribute() to "" followed by getAttribute() 
PASS datalist.lang: setAttribute() to "" followed by IDL get 
PASS datalist.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS datalist.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS datalist.lang: setAttribute() to undefined followed by getAttribute() 
PASS datalist.lang: setAttribute() to undefined followed by IDL get 
PASS datalist.lang: setAttribute() to 7 followed by getAttribute() 
PASS datalist.lang: setAttribute() to 7 followed by IDL get 
PASS datalist.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS datalist.lang: setAttribute() to 1.5 followed by IDL get 
PASS datalist.lang: setAttribute() to true followed by getAttribute() 
PASS datalist.lang: setAttribute() to true followed by IDL get 
PASS datalist.lang: setAttribute() to false followed by getAttribute() 
PASS datalist.lang: setAttribute() to false followed by IDL get 
PASS datalist.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS datalist.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS datalist.lang: setAttribute() to NaN followed by getAttribute() 
PASS datalist.lang: setAttribute() to NaN followed by IDL get 
PASS datalist.lang: setAttribute() to Infinity followed by getAttribute() 
PASS datalist.lang: setAttribute() to Infinity followed by IDL get 
PASS datalist.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS datalist.lang: setAttribute() to -Infinity followed by IDL get 
PASS datalist.lang: setAttribute() to "\0" followed by getAttribute() 
PASS datalist.lang: setAttribute() to "\0" followed by IDL get 
PASS datalist.lang: setAttribute() to null followed by getAttribute() 
PASS datalist.lang: setAttribute() to null followed by IDL get 
PASS datalist.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS datalist.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS datalist.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS datalist.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS datalist.lang: IDL set to "" should not throw 
PASS datalist.lang: IDL set to "" followed by getAttribute() 
PASS datalist.lang: IDL set to "" followed by IDL get 
PASS datalist.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS datalist.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS datalist.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS datalist.lang: IDL set to undefined should not throw 
PASS datalist.lang: IDL set to undefined followed by getAttribute() 
PASS datalist.lang: IDL set to undefined followed by IDL get 
PASS datalist.lang: IDL set to 7 should not throw 
PASS datalist.lang: IDL set to 7 followed by getAttribute() 
PASS datalist.lang: IDL set to 7 followed by IDL get 
PASS datalist.lang: IDL set to 1.5 should not throw 
PASS datalist.lang: IDL set to 1.5 followed by getAttribute() 
PASS datalist.lang: IDL set to 1.5 followed by IDL get 
PASS datalist.lang: IDL set to true should not throw 
PASS datalist.lang: IDL set to true followed by getAttribute() 
PASS datalist.lang: IDL set to true followed by IDL get 
PASS datalist.lang: IDL set to false should not throw 
PASS datalist.lang: IDL set to false followed by getAttribute() 
PASS datalist.lang: IDL set to false followed by IDL get 
PASS datalist.lang: IDL set to object "[object Object]" should not throw 
PASS datalist.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS datalist.lang: IDL set to object "[object Object]" followed by IDL get 
PASS datalist.lang: IDL set to NaN should not throw 
PASS datalist.lang: IDL set to NaN followed by getAttribute() 
PASS datalist.lang: IDL set to NaN followed by IDL get 
PASS datalist.lang: IDL set to Infinity should not throw 
PASS datalist.lang: IDL set to Infinity followed by getAttribute() 
PASS datalist.lang: IDL set to Infinity followed by IDL get 
PASS datalist.lang: IDL set to -Infinity should not throw 
PASS datalist.lang: IDL set to -Infinity followed by getAttribute() 
PASS datalist.lang: IDL set to -Infinity followed by IDL get 
PASS datalist.lang: IDL set to "\0" should not throw 
PASS datalist.lang: IDL set to "\0" followed by getAttribute() 
PASS datalist.lang: IDL set to "\0" followed by IDL get 
PASS datalist.lang: IDL set to null should not throw 
PASS datalist.lang: IDL set to null followed by getAttribute() 
PASS datalist.lang: IDL set to null followed by IDL get 
PASS datalist.lang: IDL set to object "test-toString" should not throw 
PASS datalist.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS datalist.lang: IDL set to object "test-toString" followed by IDL get 
PASS datalist.lang: IDL set to object "test-valueOf" should not throw 
PASS datalist.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS datalist.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS datalist.dir: typeof IDL attribute 
PASS datalist.dir: IDL get with DOM attribute unset 
PASS datalist.dir: setAttribute() to "" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "" followed by IDL get 
PASS datalist.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS datalist.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS datalist.dir: setAttribute() to undefined followed by getAttribute() 
PASS datalist.dir: setAttribute() to undefined followed by IDL get 
PASS datalist.dir: setAttribute() to 7 followed by getAttribute() 
PASS datalist.dir: setAttribute() to 7 followed by IDL get 
PASS datalist.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS datalist.dir: setAttribute() to 1.5 followed by IDL get 
PASS datalist.dir: setAttribute() to true followed by getAttribute() 
PASS datalist.dir: setAttribute() to true followed by IDL get 
PASS datalist.dir: setAttribute() to false followed by getAttribute() 
PASS datalist.dir: setAttribute() to false followed by IDL get 
PASS datalist.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS datalist.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS datalist.dir: setAttribute() to NaN followed by getAttribute() 
PASS datalist.dir: setAttribute() to NaN followed by IDL get 
PASS datalist.dir: setAttribute() to Infinity followed by getAttribute() 
PASS datalist.dir: setAttribute() to Infinity followed by IDL get 
PASS datalist.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS datalist.dir: setAttribute() to -Infinity followed by IDL get 
PASS datalist.dir: setAttribute() to "\0" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "\0" followed by IDL get 
PASS datalist.dir: setAttribute() to null followed by getAttribute() 
PASS datalist.dir: setAttribute() to null followed by IDL get 
PASS datalist.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS datalist.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS datalist.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS datalist.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS datalist.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "ltr" followed by IDL get 
PASS datalist.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "xltr" followed by IDL get 
PASS datalist.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS datalist.dir: setAttribute() to "tr" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "tr" followed by IDL get 
PASS datalist.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "LTR" followed by IDL get 
PASS datalist.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "rtl" followed by IDL get 
PASS datalist.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "xrtl" followed by IDL get 
PASS datalist.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS datalist.dir: setAttribute() to "tl" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "tl" followed by IDL get 
PASS datalist.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "RTL" followed by IDL get 
PASS datalist.dir: setAttribute() to "auto" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "auto" followed by IDL get 
PASS datalist.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "xauto" followed by IDL get 
PASS datalist.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "auto\0" followed by IDL get 
PASS datalist.dir: setAttribute() to "uto" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "uto" followed by IDL get 
PASS datalist.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS datalist.dir: setAttribute() to "AUTO" followed by IDL get 
PASS datalist.dir: IDL set to "" should not throw 
PASS datalist.dir: IDL set to "" followed by getAttribute() 
PASS datalist.dir: IDL set to "" followed by IDL get 
PASS datalist.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS datalist.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS datalist.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS datalist.dir: IDL set to undefined should not throw 
PASS datalist.dir: IDL set to undefined followed by getAttribute() 
PASS datalist.dir: IDL set to undefined followed by IDL get 
PASS datalist.dir: IDL set to 7 should not throw 
PASS datalist.dir: IDL set to 7 followed by getAttribute() 
PASS datalist.dir: IDL set to 7 followed by IDL get 
PASS datalist.dir: IDL set to 1.5 should not throw 
PASS datalist.dir: IDL set to 1.5 followed by getAttribute() 
PASS datalist.dir: IDL set to 1.5 followed by IDL get 
PASS datalist.dir: IDL set to true should not throw 
PASS datalist.dir: IDL set to true followed by getAttribute() 
PASS datalist.dir: IDL set to true followed by IDL get 
PASS datalist.dir: IDL set to false should not throw 
PASS datalist.dir: IDL set to false followed by getAttribute() 
PASS datalist.dir: IDL set to false followed by IDL get 
PASS datalist.dir: IDL set to object "[object Object]" should not throw 
PASS datalist.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS datalist.dir: IDL set to object "[object Object]" followed by IDL get 
PASS datalist.dir: IDL set to NaN should not throw 
PASS datalist.dir: IDL set to NaN followed by getAttribute() 
PASS datalist.dir: IDL set to NaN followed by IDL get 
PASS datalist.dir: IDL set to Infinity should not throw 
PASS datalist.dir: IDL set to Infinity followed by getAttribute() 
PASS datalist.dir: IDL set to Infinity followed by IDL get 
PASS datalist.dir: IDL set to -Infinity should not throw 
PASS datalist.dir: IDL set to -Infinity followed by getAttribute() 
PASS datalist.dir: IDL set to -Infinity followed by IDL get 
PASS datalist.dir: IDL set to "\0" should not throw 
PASS datalist.dir: IDL set to "\0" followed by getAttribute() 
PASS datalist.dir: IDL set to "\0" followed by IDL get 
PASS datalist.dir: IDL set to null should not throw 
PASS datalist.dir: IDL set to null followed by IDL get 
PASS datalist.dir: IDL set to object "test-toString" should not throw 
PASS datalist.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS datalist.dir: IDL set to object "test-toString" followed by IDL get 
PASS datalist.dir: IDL set to object "test-valueOf" should not throw 
PASS datalist.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS datalist.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS datalist.dir: IDL set to "ltr" should not throw 
PASS datalist.dir: IDL set to "ltr" followed by getAttribute() 
PASS datalist.dir: IDL set to "ltr" followed by IDL get 
PASS datalist.dir: IDL set to "xltr" should not throw 
PASS datalist.dir: IDL set to "xltr" followed by getAttribute() 
PASS datalist.dir: IDL set to "xltr" followed by IDL get 
PASS datalist.dir: IDL set to "ltr\0" should not throw 
PASS datalist.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS datalist.dir: IDL set to "ltr\0" followed by IDL get 
PASS datalist.dir: IDL set to "tr" should not throw 
PASS datalist.dir: IDL set to "tr" followed by getAttribute() 
PASS datalist.dir: IDL set to "tr" followed by IDL get 
PASS datalist.dir: IDL set to "LTR" should not throw 
PASS datalist.dir: IDL set to "LTR" followed by getAttribute() 
PASS datalist.dir: IDL set to "LTR" followed by IDL get 
PASS datalist.dir: IDL set to "rtl" should not throw 
PASS datalist.dir: IDL set to "rtl" followed by getAttribute() 
PASS datalist.dir: IDL set to "rtl" followed by IDL get 
PASS datalist.dir: IDL set to "xrtl" should not throw 
PASS datalist.dir: IDL set to "xrtl" followed by getAttribute() 
PASS datalist.dir: IDL set to "xrtl" followed by IDL get 
PASS datalist.dir: IDL set to "rtl\0" should not throw 
PASS datalist.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS datalist.dir: IDL set to "rtl\0" followed by IDL get 
PASS datalist.dir: IDL set to "tl" should not throw 
PASS datalist.dir: IDL set to "tl" followed by getAttribute() 
PASS datalist.dir: IDL set to "tl" followed by IDL get 
PASS datalist.dir: IDL set to "RTL" should not throw 
PASS datalist.dir: IDL set to "RTL" followed by getAttribute() 
PASS datalist.dir: IDL set to "RTL" followed by IDL get 
PASS datalist.dir: IDL set to "auto" should not throw 
PASS datalist.dir: IDL set to "auto" followed by getAttribute() 
PASS datalist.dir: IDL set to "auto" followed by IDL get 
PASS datalist.dir: IDL set to "xauto" should not throw 
PASS datalist.dir: IDL set to "xauto" followed by getAttribute() 
PASS datalist.dir: IDL set to "xauto" followed by IDL get 
PASS datalist.dir: IDL set to "auto\0" should not throw 
PASS datalist.dir: IDL set to "auto\0" followed by getAttribute() 
PASS datalist.dir: IDL set to "auto\0" followed by IDL get 
PASS datalist.dir: IDL set to "uto" should not throw 
PASS datalist.dir: IDL set to "uto" followed by getAttribute() 
PASS datalist.dir: IDL set to "uto" followed by IDL get 
PASS datalist.dir: IDL set to "AUTO" should not throw 
PASS datalist.dir: IDL set to "AUTO" followed by getAttribute() 
PASS datalist.dir: IDL set to "AUTO" followed by IDL get 
PASS datalist.className (<datalist class>): typeof IDL attribute 
PASS datalist.className (<datalist class>): IDL get with DOM attribute unset 
PASS datalist.className (<datalist class>): setAttribute() to "" followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to "" followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to undefined followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to undefined followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to 7 followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to 7 followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to 1.5 followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to 1.5 followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to true followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to true followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to false followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to false followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to NaN followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to NaN followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to Infinity followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to Infinity followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to -Infinity followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to -Infinity followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to "\0" followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to "\0" followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to null followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to null followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to object "test-toString" followed by IDL get 
PASS datalist.className (<datalist class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS datalist.className (<datalist class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to "" should not throw 
PASS datalist.className (<datalist class>): IDL set to "" followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to "" followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS datalist.className (<datalist class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to undefined should not throw 
PASS datalist.className (<datalist class>): IDL set to undefined followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to undefined followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to 7 should not throw 
PASS datalist.className (<datalist class>): IDL set to 7 followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to 7 followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to 1.5 should not throw 
PASS datalist.className (<datalist class>): IDL set to 1.5 followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to 1.5 followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to true should not throw 
PASS datalist.className (<datalist class>): IDL set to true followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to true followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to false should not throw 
PASS datalist.className (<datalist class>): IDL set to false followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to false followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to object "[object Object]" should not throw 
PASS datalist.className (<datalist class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to object "[object Object]" followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to NaN should not throw 
PASS datalist.className (<datalist class>): IDL set to NaN followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to NaN followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to Infinity should not throw 
PASS datalist.className (<datalist class>): IDL set to Infinity followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to Infinity followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to -Infinity should not throw 
PASS datalist.className (<datalist class>): IDL set to -Infinity followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to -Infinity followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to "\0" should not throw 
PASS datalist.className (<datalist class>): IDL set to "\0" followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to "\0" followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to null should not throw 
PASS datalist.className (<datalist class>): IDL set to null followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to null followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to object "test-toString" should not throw 
PASS datalist.className (<datalist class>): IDL set to object "test-toString" followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to object "test-toString" followed by IDL get 
PASS datalist.className (<datalist class>): IDL set to object "test-valueOf" should not throw 
PASS datalist.className (<datalist class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS datalist.className (<datalist class>): IDL set to object "test-valueOf" followed by IDL get 
PASS datalist.hidden: typeof IDL attribute 
PASS datalist.hidden: IDL get with DOM attribute unset 
PASS datalist.hidden: setAttribute() to "" followed by getAttribute() 
PASS datalist.hidden: setAttribute() to "" followed by IDL get 
PASS datalist.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS datalist.hidden: setAttribute() to " foo " followed by IDL get 
PASS datalist.hidden: setAttribute() to undefined followed by getAttribute() 
PASS datalist.hidden: setAttribute() to undefined followed by IDL get 
PASS datalist.hidden: setAttribute() to null followed by getAttribute() 
PASS datalist.hidden: setAttribute() to null followed by IDL get 
PASS datalist.hidden: setAttribute() to 7 followed by getAttribute() 
PASS datalist.hidden: setAttribute() to 7 followed by IDL get 
PASS datalist.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS datalist.hidden: setAttribute() to 1.5 followed by IDL get 
PASS datalist.hidden: setAttribute() to true followed by getAttribute() 
PASS datalist.hidden: setAttribute() to true followed by IDL get 
PASS datalist.hidden: setAttribute() to false followed by getAttribute() 
PASS datalist.hidden: setAttribute() to false followed by IDL get 
PASS datalist.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS datalist.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS datalist.hidden: setAttribute() to NaN followed by getAttribute() 
PASS datalist.hidden: setAttribute() to NaN followed by IDL get 
PASS datalist.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS datalist.hidden: setAttribute() to Infinity followed by IDL get 
PASS datalist.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS datalist.hidden: setAttribute() to -Infinity followed by IDL get 
PASS datalist.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS datalist.hidden: setAttribute() to "\0" followed by IDL get 
PASS datalist.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS datalist.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS datalist.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS datalist.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS datalist.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS datalist.hidden: setAttribute() to "hidden" followed by IDL get 
PASS datalist.hidden: IDL set to "" should not throw 
PASS datalist.hidden: IDL set to "" followed by hasAttribute() 
PASS datalist.hidden: IDL set to "" followed by IDL get 
PASS datalist.hidden: IDL set to " foo " should not throw 
PASS datalist.hidden: IDL set to " foo " followed by hasAttribute() 
PASS datalist.hidden: IDL set to " foo " followed by IDL get 
PASS datalist.hidden: IDL set to undefined should not throw 
PASS datalist.hidden: IDL set to undefined followed by hasAttribute() 
PASS datalist.hidden: IDL set to undefined followed by IDL get 
PASS datalist.hidden: IDL set to null should not throw 
PASS datalist.hidden: IDL set to null followed by hasAttribute() 
PASS datalist.hidden: IDL set to null followed by IDL get 
PASS datalist.hidden: IDL set to 7 should not throw 
PASS datalist.hidden: IDL set to 7 followed by hasAttribute() 
PASS datalist.hidden: IDL set to 7 followed by IDL get 
PASS datalist.hidden: IDL set to 1.5 should not throw 
PASS datalist.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS datalist.hidden: IDL set to 1.5 followed by IDL get 
PASS datalist.hidden: IDL set to true should not throw 
PASS datalist.hidden: IDL set to true followed by hasAttribute() 
PASS datalist.hidden: IDL set to true followed by IDL get 
PASS datalist.hidden: IDL set to false should not throw 
PASS datalist.hidden: IDL set to false followed by hasAttribute() 
PASS datalist.hidden: IDL set to false followed by IDL get 
PASS datalist.hidden: IDL set to object "[object Object]" should not throw 
PASS datalist.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS datalist.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS datalist.hidden: IDL set to NaN should not throw 
PASS datalist.hidden: IDL set to NaN followed by hasAttribute() 
PASS datalist.hidden: IDL set to NaN followed by IDL get 
PASS datalist.hidden: IDL set to Infinity should not throw 
PASS datalist.hidden: IDL set to Infinity followed by hasAttribute() 
PASS datalist.hidden: IDL set to Infinity followed by IDL get 
PASS datalist.hidden: IDL set to -Infinity should not throw 
PASS datalist.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS datalist.hidden: IDL set to -Infinity followed by IDL get 
PASS datalist.hidden: IDL set to "\0" should not throw 
PASS datalist.hidden: IDL set to "\0" followed by hasAttribute() 
PASS datalist.hidden: IDL set to "\0" followed by IDL get 
PASS datalist.hidden: IDL set to object "test-toString" should not throw 
PASS datalist.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS datalist.hidden: IDL set to object "test-toString" followed by IDL get 
PASS datalist.hidden: IDL set to object "test-valueOf" should not throw 
PASS datalist.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS datalist.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS datalist.accessKey: typeof IDL attribute 
PASS datalist.accessKey: IDL get with DOM attribute unset 
PASS datalist.accessKey: setAttribute() to "" followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to "" followed by IDL get 
PASS datalist.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS datalist.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to undefined followed by IDL get 
PASS datalist.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to 7 followed by IDL get 
PASS datalist.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS datalist.accessKey: setAttribute() to true followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to true followed by IDL get 
PASS datalist.accessKey: setAttribute() to false followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to false followed by IDL get 
PASS datalist.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS datalist.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to NaN followed by IDL get 
PASS datalist.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to Infinity followed by IDL get 
PASS datalist.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS datalist.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to "\0" followed by IDL get 
PASS datalist.accessKey: setAttribute() to null followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to null followed by IDL get 
PASS datalist.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS datalist.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS datalist.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS datalist.accessKey: IDL set to "" should not throw 
PASS datalist.accessKey: IDL set to "" followed by getAttribute() 
PASS datalist.accessKey: IDL set to "" followed by IDL get 
PASS datalist.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS datalist.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS datalist.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS datalist.accessKey: IDL set to undefined should not throw 
PASS datalist.accessKey: IDL set to undefined followed by getAttribute() 
PASS datalist.accessKey: IDL set to undefined followed by IDL get 
PASS datalist.accessKey: IDL set to 7 should not throw 
PASS datalist.accessKey: IDL set to 7 followed by getAttribute() 
PASS datalist.accessKey: IDL set to 7 followed by IDL get 
PASS datalist.accessKey: IDL set to 1.5 should not throw 
PASS datalist.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS datalist.accessKey: IDL set to 1.5 followed by IDL get 
PASS datalist.accessKey: IDL set to true should not throw 
PASS datalist.accessKey: IDL set to true followed by getAttribute() 
PASS datalist.accessKey: IDL set to true followed by IDL get 
PASS datalist.accessKey: IDL set to false should not throw 
PASS datalist.accessKey: IDL set to false followed by getAttribute() 
PASS datalist.accessKey: IDL set to false followed by IDL get 
PASS datalist.accessKey: IDL set to object "[object Object]" should not throw 
PASS datalist.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS datalist.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS datalist.accessKey: IDL set to NaN should not throw 
PASS datalist.accessKey: IDL set to NaN followed by getAttribute() 
PASS datalist.accessKey: IDL set to NaN followed by IDL get 
PASS datalist.accessKey: IDL set to Infinity should not throw 
PASS datalist.accessKey: IDL set to Infinity followed by getAttribute() 
PASS datalist.accessKey: IDL set to Infinity followed by IDL get 
PASS datalist.accessKey: IDL set to -Infinity should not throw 
PASS datalist.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS datalist.accessKey: IDL set to -Infinity followed by IDL get 
PASS datalist.accessKey: IDL set to "\0" should not throw 
PASS datalist.accessKey: IDL set to "\0" followed by getAttribute() 
PASS datalist.accessKey: IDL set to "\0" followed by IDL get 
PASS datalist.accessKey: IDL set to null should not throw 
PASS datalist.accessKey: IDL set to null followed by getAttribute() 
PASS datalist.accessKey: IDL set to null followed by IDL get 
PASS datalist.accessKey: IDL set to object "test-toString" should not throw 
PASS datalist.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS datalist.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS datalist.accessKey: IDL set to object "test-valueOf" should not throw 
PASS datalist.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS datalist.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS datalist.tabIndex: typeof IDL attribute 
PASS datalist.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to -36 followed by IDL get 
PASS datalist.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to -1 followed by IDL get 
PASS datalist.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to 0 followed by IDL get 
PASS datalist.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to 1 followed by IDL get 
PASS datalist.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL datalist.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS datalist.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL datalist.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS datalist.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS datalist.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS datalist.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to "0" followed by IDL get 
PASS datalist.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to "1" followed by IDL get 
PASS datalist.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS datalist.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS datalist.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS datalist.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS datalist.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS datalist.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS datalist.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS datalist.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS datalist.tabIndex: IDL set to -36 should not throw 
PASS datalist.tabIndex: IDL set to -36 followed by getAttribute() 
PASS datalist.tabIndex: IDL set to -36 followed by IDL get 
PASS datalist.tabIndex: IDL set to -1 should not throw 
PASS datalist.tabIndex: IDL set to -1 followed by getAttribute() 
PASS datalist.tabIndex: IDL set to -1 followed by IDL get 
PASS datalist.tabIndex: IDL set to 0 should not throw 
PASS datalist.tabIndex: IDL set to 0 followed by getAttribute() 
PASS datalist.tabIndex: IDL set to 0 followed by IDL get 
PASS datalist.tabIndex: IDL set to 1 should not throw 
PASS datalist.tabIndex: IDL set to 1 followed by getAttribute() 
PASS datalist.tabIndex: IDL set to 1 followed by IDL get 
PASS datalist.tabIndex: IDL set to 2147483647 should not throw 
PASS datalist.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL datalist.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS datalist.tabIndex: IDL set to -2147483648 should not throw 
PASS datalist.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL datalist.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL datalist.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL datalist.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to null followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to true followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to false followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL datalist.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS datalist.itemScope: IDL set to "" should not throw 
FAIL datalist.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL datalist.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS datalist.itemScope: IDL set to " foo " should not throw 
PASS datalist.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL datalist.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS datalist.itemScope: IDL set to undefined should not throw 
FAIL datalist.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL datalist.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS datalist.itemScope: IDL set to null should not throw 
FAIL datalist.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL datalist.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS datalist.itemScope: IDL set to 7 should not throw 
PASS datalist.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL datalist.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS datalist.itemScope: IDL set to 1.5 should not throw 
PASS datalist.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL datalist.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS datalist.itemScope: IDL set to true should not throw 
PASS datalist.itemScope: IDL set to true followed by hasAttribute() 
PASS datalist.itemScope: IDL set to true followed by IDL get 
PASS datalist.itemScope: IDL set to false should not throw 
FAIL datalist.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS datalist.itemScope: IDL set to false followed by IDL get 
PASS datalist.itemScope: IDL set to object "[object Object]" should not throw 
PASS datalist.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL datalist.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS datalist.itemScope: IDL set to NaN should not throw 
FAIL datalist.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL datalist.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS datalist.itemScope: IDL set to Infinity should not throw 
PASS datalist.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL datalist.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS datalist.itemScope: IDL set to -Infinity should not throw 
PASS datalist.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL datalist.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS datalist.itemScope: IDL set to "\0" should not throw 
PASS datalist.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL datalist.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS datalist.itemScope: IDL set to object "test-toString" should not throw 
PASS datalist.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL datalist.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS datalist.itemScope: IDL set to object "test-valueOf" should not throw 
PASS datalist.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL datalist.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL datalist.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL datalist.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to "" followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to true followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to false followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to null followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS datalist.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL datalist.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS datalist.itemId: IDL set to "" should not throw 
FAIL datalist.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL datalist.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS datalist.itemId: IDL set to " foo " should not throw 
FAIL datalist.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL datalist.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS datalist.itemId: IDL set to "http://site.example/" should not throw 
FAIL datalist.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS datalist.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS datalist.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL datalist.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL datalist.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS datalist.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL datalist.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL datalist.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS datalist.itemId: IDL set to undefined should not throw 
FAIL datalist.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL datalist.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS datalist.itemId: IDL set to 7 should not throw 
FAIL datalist.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL datalist.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS datalist.itemId: IDL set to 1.5 should not throw 
FAIL datalist.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL datalist.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS datalist.itemId: IDL set to true should not throw 
FAIL datalist.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL datalist.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS datalist.itemId: IDL set to false should not throw 
FAIL datalist.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL datalist.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS datalist.itemId: IDL set to object "[object Object]" should not throw 
FAIL datalist.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL datalist.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS datalist.itemId: IDL set to NaN should not throw 
FAIL datalist.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL datalist.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS datalist.itemId: IDL set to Infinity should not throw 
FAIL datalist.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL datalist.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS datalist.itemId: IDL set to -Infinity should not throw 
FAIL datalist.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL datalist.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS datalist.itemId: IDL set to "\0" should not throw 
FAIL datalist.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL datalist.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS datalist.itemId: IDL set to null should not throw 
FAIL datalist.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL datalist.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS datalist.itemId: IDL set to object "test-toString" should not throw 
FAIL datalist.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL datalist.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS datalist.itemId: IDL set to object "test-valueOf" should not throw 
PASS datalist.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL datalist.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS optgroup.title: typeof IDL attribute 
PASS optgroup.title: IDL get with DOM attribute unset 
PASS optgroup.title: setAttribute() to "" followed by getAttribute() 
PASS optgroup.title: setAttribute() to "" followed by IDL get 
PASS optgroup.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS optgroup.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS optgroup.title: setAttribute() to undefined followed by getAttribute() 
PASS optgroup.title: setAttribute() to undefined followed by IDL get 
PASS optgroup.title: setAttribute() to 7 followed by getAttribute() 
PASS optgroup.title: setAttribute() to 7 followed by IDL get 
PASS optgroup.title: setAttribute() to 1.5 followed by getAttribute() 
PASS optgroup.title: setAttribute() to 1.5 followed by IDL get 
PASS optgroup.title: setAttribute() to true followed by getAttribute() 
PASS optgroup.title: setAttribute() to true followed by IDL get 
PASS optgroup.title: setAttribute() to false followed by getAttribute() 
PASS optgroup.title: setAttribute() to false followed by IDL get 
PASS optgroup.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS optgroup.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS optgroup.title: setAttribute() to NaN followed by getAttribute() 
PASS optgroup.title: setAttribute() to NaN followed by IDL get 
PASS optgroup.title: setAttribute() to Infinity followed by getAttribute() 
PASS optgroup.title: setAttribute() to Infinity followed by IDL get 
PASS optgroup.title: setAttribute() to -Infinity followed by getAttribute() 
PASS optgroup.title: setAttribute() to -Infinity followed by IDL get 
PASS optgroup.title: setAttribute() to "\0" followed by getAttribute() 
PASS optgroup.title: setAttribute() to "\0" followed by IDL get 
PASS optgroup.title: setAttribute() to null followed by getAttribute() 
PASS optgroup.title: setAttribute() to null followed by IDL get 
PASS optgroup.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS optgroup.title: setAttribute() to object "test-toString" followed by IDL get 
PASS optgroup.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS optgroup.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS optgroup.title: IDL set to "" should not throw 
PASS optgroup.title: IDL set to "" followed by getAttribute() 
PASS optgroup.title: IDL set to "" followed by IDL get 
PASS optgroup.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS optgroup.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS optgroup.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS optgroup.title: IDL set to undefined should not throw 
PASS optgroup.title: IDL set to undefined followed by getAttribute() 
PASS optgroup.title: IDL set to undefined followed by IDL get 
PASS optgroup.title: IDL set to 7 should not throw 
PASS optgroup.title: IDL set to 7 followed by getAttribute() 
PASS optgroup.title: IDL set to 7 followed by IDL get 
PASS optgroup.title: IDL set to 1.5 should not throw 
PASS optgroup.title: IDL set to 1.5 followed by getAttribute() 
PASS optgroup.title: IDL set to 1.5 followed by IDL get 
PASS optgroup.title: IDL set to true should not throw 
PASS optgroup.title: IDL set to true followed by getAttribute() 
PASS optgroup.title: IDL set to true followed by IDL get 
PASS optgroup.title: IDL set to false should not throw 
PASS optgroup.title: IDL set to false followed by getAttribute() 
PASS optgroup.title: IDL set to false followed by IDL get 
PASS optgroup.title: IDL set to object "[object Object]" should not throw 
PASS optgroup.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS optgroup.title: IDL set to object "[object Object]" followed by IDL get 
PASS optgroup.title: IDL set to NaN should not throw 
PASS optgroup.title: IDL set to NaN followed by getAttribute() 
PASS optgroup.title: IDL set to NaN followed by IDL get 
PASS optgroup.title: IDL set to Infinity should not throw 
PASS optgroup.title: IDL set to Infinity followed by getAttribute() 
PASS optgroup.title: IDL set to Infinity followed by IDL get 
PASS optgroup.title: IDL set to -Infinity should not throw 
PASS optgroup.title: IDL set to -Infinity followed by getAttribute() 
PASS optgroup.title: IDL set to -Infinity followed by IDL get 
PASS optgroup.title: IDL set to "\0" should not throw 
PASS optgroup.title: IDL set to "\0" followed by getAttribute() 
PASS optgroup.title: IDL set to "\0" followed by IDL get 
PASS optgroup.title: IDL set to null should not throw 
PASS optgroup.title: IDL set to null followed by getAttribute() 
PASS optgroup.title: IDL set to null followed by IDL get 
PASS optgroup.title: IDL set to object "test-toString" should not throw 
PASS optgroup.title: IDL set to object "test-toString" followed by getAttribute() 
PASS optgroup.title: IDL set to object "test-toString" followed by IDL get 
PASS optgroup.title: IDL set to object "test-valueOf" should not throw 
PASS optgroup.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS optgroup.title: IDL set to object "test-valueOf" followed by IDL get 
PASS optgroup.lang: typeof IDL attribute 
PASS optgroup.lang: IDL get with DOM attribute unset 
PASS optgroup.lang: setAttribute() to "" followed by getAttribute() 
PASS optgroup.lang: setAttribute() to "" followed by IDL get 
PASS optgroup.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS optgroup.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS optgroup.lang: setAttribute() to undefined followed by getAttribute() 
PASS optgroup.lang: setAttribute() to undefined followed by IDL get 
PASS optgroup.lang: setAttribute() to 7 followed by getAttribute() 
PASS optgroup.lang: setAttribute() to 7 followed by IDL get 
PASS optgroup.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS optgroup.lang: setAttribute() to 1.5 followed by IDL get 
PASS optgroup.lang: setAttribute() to true followed by getAttribute() 
PASS optgroup.lang: setAttribute() to true followed by IDL get 
PASS optgroup.lang: setAttribute() to false followed by getAttribute() 
PASS optgroup.lang: setAttribute() to false followed by IDL get 
PASS optgroup.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS optgroup.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS optgroup.lang: setAttribute() to NaN followed by getAttribute() 
PASS optgroup.lang: setAttribute() to NaN followed by IDL get 
PASS optgroup.lang: setAttribute() to Infinity followed by getAttribute() 
PASS optgroup.lang: setAttribute() to Infinity followed by IDL get 
PASS optgroup.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS optgroup.lang: setAttribute() to -Infinity followed by IDL get 
PASS optgroup.lang: setAttribute() to "\0" followed by getAttribute() 
PASS optgroup.lang: setAttribute() to "\0" followed by IDL get 
PASS optgroup.lang: setAttribute() to null followed by getAttribute() 
PASS optgroup.lang: setAttribute() to null followed by IDL get 
PASS optgroup.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS optgroup.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS optgroup.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS optgroup.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS optgroup.lang: IDL set to "" should not throw 
PASS optgroup.lang: IDL set to "" followed by getAttribute() 
PASS optgroup.lang: IDL set to "" followed by IDL get 
PASS optgroup.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS optgroup.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS optgroup.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS optgroup.lang: IDL set to undefined should not throw 
PASS optgroup.lang: IDL set to undefined followed by getAttribute() 
PASS optgroup.lang: IDL set to undefined followed by IDL get 
PASS optgroup.lang: IDL set to 7 should not throw 
PASS optgroup.lang: IDL set to 7 followed by getAttribute() 
PASS optgroup.lang: IDL set to 7 followed by IDL get 
PASS optgroup.lang: IDL set to 1.5 should not throw 
PASS optgroup.lang: IDL set to 1.5 followed by getAttribute() 
PASS optgroup.lang: IDL set to 1.5 followed by IDL get 
PASS optgroup.lang: IDL set to true should not throw 
PASS optgroup.lang: IDL set to true followed by getAttribute() 
PASS optgroup.lang: IDL set to true followed by IDL get 
PASS optgroup.lang: IDL set to false should not throw 
PASS optgroup.lang: IDL set to false followed by getAttribute() 
PASS optgroup.lang: IDL set to false followed by IDL get 
PASS optgroup.lang: IDL set to object "[object Object]" should not throw 
PASS optgroup.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS optgroup.lang: IDL set to object "[object Object]" followed by IDL get 
PASS optgroup.lang: IDL set to NaN should not throw 
PASS optgroup.lang: IDL set to NaN followed by getAttribute() 
PASS optgroup.lang: IDL set to NaN followed by IDL get 
PASS optgroup.lang: IDL set to Infinity should not throw 
PASS optgroup.lang: IDL set to Infinity followed by getAttribute() 
PASS optgroup.lang: IDL set to Infinity followed by IDL get 
PASS optgroup.lang: IDL set to -Infinity should not throw 
PASS optgroup.lang: IDL set to -Infinity followed by getAttribute() 
PASS optgroup.lang: IDL set to -Infinity followed by IDL get 
PASS optgroup.lang: IDL set to "\0" should not throw 
PASS optgroup.lang: IDL set to "\0" followed by getAttribute() 
PASS optgroup.lang: IDL set to "\0" followed by IDL get 
PASS optgroup.lang: IDL set to null should not throw 
PASS optgroup.lang: IDL set to null followed by getAttribute() 
PASS optgroup.lang: IDL set to null followed by IDL get 
PASS optgroup.lang: IDL set to object "test-toString" should not throw 
PASS optgroup.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS optgroup.lang: IDL set to object "test-toString" followed by IDL get 
PASS optgroup.lang: IDL set to object "test-valueOf" should not throw 
PASS optgroup.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS optgroup.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS optgroup.dir: typeof IDL attribute 
PASS optgroup.dir: IDL get with DOM attribute unset 
PASS optgroup.dir: setAttribute() to "" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "" followed by IDL get 
PASS optgroup.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS optgroup.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS optgroup.dir: setAttribute() to undefined followed by getAttribute() 
PASS optgroup.dir: setAttribute() to undefined followed by IDL get 
PASS optgroup.dir: setAttribute() to 7 followed by getAttribute() 
PASS optgroup.dir: setAttribute() to 7 followed by IDL get 
PASS optgroup.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS optgroup.dir: setAttribute() to 1.5 followed by IDL get 
PASS optgroup.dir: setAttribute() to true followed by getAttribute() 
PASS optgroup.dir: setAttribute() to true followed by IDL get 
PASS optgroup.dir: setAttribute() to false followed by getAttribute() 
PASS optgroup.dir: setAttribute() to false followed by IDL get 
PASS optgroup.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS optgroup.dir: setAttribute() to NaN followed by getAttribute() 
PASS optgroup.dir: setAttribute() to NaN followed by IDL get 
PASS optgroup.dir: setAttribute() to Infinity followed by getAttribute() 
PASS optgroup.dir: setAttribute() to Infinity followed by IDL get 
PASS optgroup.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS optgroup.dir: setAttribute() to -Infinity followed by IDL get 
PASS optgroup.dir: setAttribute() to "\0" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "\0" followed by IDL get 
PASS optgroup.dir: setAttribute() to null followed by getAttribute() 
PASS optgroup.dir: setAttribute() to null followed by IDL get 
PASS optgroup.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS optgroup.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS optgroup.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "ltr" followed by IDL get 
PASS optgroup.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "xltr" followed by IDL get 
PASS optgroup.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS optgroup.dir: setAttribute() to "tr" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "tr" followed by IDL get 
PASS optgroup.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "LTR" followed by IDL get 
PASS optgroup.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "rtl" followed by IDL get 
PASS optgroup.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "xrtl" followed by IDL get 
PASS optgroup.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS optgroup.dir: setAttribute() to "tl" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "tl" followed by IDL get 
PASS optgroup.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "RTL" followed by IDL get 
PASS optgroup.dir: setAttribute() to "auto" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "auto" followed by IDL get 
PASS optgroup.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "xauto" followed by IDL get 
PASS optgroup.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "auto\0" followed by IDL get 
PASS optgroup.dir: setAttribute() to "uto" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "uto" followed by IDL get 
PASS optgroup.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS optgroup.dir: setAttribute() to "AUTO" followed by IDL get 
PASS optgroup.dir: IDL set to "" should not throw 
PASS optgroup.dir: IDL set to "" followed by getAttribute() 
PASS optgroup.dir: IDL set to "" followed by IDL get 
PASS optgroup.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS optgroup.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS optgroup.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS optgroup.dir: IDL set to undefined should not throw 
PASS optgroup.dir: IDL set to undefined followed by getAttribute() 
PASS optgroup.dir: IDL set to undefined followed by IDL get 
PASS optgroup.dir: IDL set to 7 should not throw 
PASS optgroup.dir: IDL set to 7 followed by getAttribute() 
PASS optgroup.dir: IDL set to 7 followed by IDL get 
PASS optgroup.dir: IDL set to 1.5 should not throw 
PASS optgroup.dir: IDL set to 1.5 followed by getAttribute() 
PASS optgroup.dir: IDL set to 1.5 followed by IDL get 
PASS optgroup.dir: IDL set to true should not throw 
PASS optgroup.dir: IDL set to true followed by getAttribute() 
PASS optgroup.dir: IDL set to true followed by IDL get 
PASS optgroup.dir: IDL set to false should not throw 
PASS optgroup.dir: IDL set to false followed by getAttribute() 
PASS optgroup.dir: IDL set to false followed by IDL get 
PASS optgroup.dir: IDL set to object "[object Object]" should not throw 
PASS optgroup.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS optgroup.dir: IDL set to object "[object Object]" followed by IDL get 
PASS optgroup.dir: IDL set to NaN should not throw 
PASS optgroup.dir: IDL set to NaN followed by getAttribute() 
PASS optgroup.dir: IDL set to NaN followed by IDL get 
PASS optgroup.dir: IDL set to Infinity should not throw 
PASS optgroup.dir: IDL set to Infinity followed by getAttribute() 
PASS optgroup.dir: IDL set to Infinity followed by IDL get 
PASS optgroup.dir: IDL set to -Infinity should not throw 
PASS optgroup.dir: IDL set to -Infinity followed by getAttribute() 
PASS optgroup.dir: IDL set to -Infinity followed by IDL get 
PASS optgroup.dir: IDL set to "\0" should not throw 
PASS optgroup.dir: IDL set to "\0" followed by getAttribute() 
PASS optgroup.dir: IDL set to "\0" followed by IDL get 
PASS optgroup.dir: IDL set to null should not throw 
PASS optgroup.dir: IDL set to null followed by IDL get 
PASS optgroup.dir: IDL set to object "test-toString" should not throw 
PASS optgroup.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS optgroup.dir: IDL set to object "test-toString" followed by IDL get 
PASS optgroup.dir: IDL set to object "test-valueOf" should not throw 
PASS optgroup.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS optgroup.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS optgroup.dir: IDL set to "ltr" should not throw 
PASS optgroup.dir: IDL set to "ltr" followed by getAttribute() 
PASS optgroup.dir: IDL set to "ltr" followed by IDL get 
PASS optgroup.dir: IDL set to "xltr" should not throw 
PASS optgroup.dir: IDL set to "xltr" followed by getAttribute() 
PASS optgroup.dir: IDL set to "xltr" followed by IDL get 
PASS optgroup.dir: IDL set to "ltr\0" should not throw 
PASS optgroup.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS optgroup.dir: IDL set to "ltr\0" followed by IDL get 
PASS optgroup.dir: IDL set to "tr" should not throw 
PASS optgroup.dir: IDL set to "tr" followed by getAttribute() 
PASS optgroup.dir: IDL set to "tr" followed by IDL get 
PASS optgroup.dir: IDL set to "LTR" should not throw 
PASS optgroup.dir: IDL set to "LTR" followed by getAttribute() 
PASS optgroup.dir: IDL set to "LTR" followed by IDL get 
PASS optgroup.dir: IDL set to "rtl" should not throw 
PASS optgroup.dir: IDL set to "rtl" followed by getAttribute() 
PASS optgroup.dir: IDL set to "rtl" followed by IDL get 
PASS optgroup.dir: IDL set to "xrtl" should not throw 
PASS optgroup.dir: IDL set to "xrtl" followed by getAttribute() 
PASS optgroup.dir: IDL set to "xrtl" followed by IDL get 
PASS optgroup.dir: IDL set to "rtl\0" should not throw 
PASS optgroup.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS optgroup.dir: IDL set to "rtl\0" followed by IDL get 
PASS optgroup.dir: IDL set to "tl" should not throw 
PASS optgroup.dir: IDL set to "tl" followed by getAttribute() 
PASS optgroup.dir: IDL set to "tl" followed by IDL get 
PASS optgroup.dir: IDL set to "RTL" should not throw 
PASS optgroup.dir: IDL set to "RTL" followed by getAttribute() 
PASS optgroup.dir: IDL set to "RTL" followed by IDL get 
PASS optgroup.dir: IDL set to "auto" should not throw 
PASS optgroup.dir: IDL set to "auto" followed by getAttribute() 
PASS optgroup.dir: IDL set to "auto" followed by IDL get 
PASS optgroup.dir: IDL set to "xauto" should not throw 
PASS optgroup.dir: IDL set to "xauto" followed by getAttribute() 
PASS optgroup.dir: IDL set to "xauto" followed by IDL get 
PASS optgroup.dir: IDL set to "auto\0" should not throw 
PASS optgroup.dir: IDL set to "auto\0" followed by getAttribute() 
PASS optgroup.dir: IDL set to "auto\0" followed by IDL get 
PASS optgroup.dir: IDL set to "uto" should not throw 
PASS optgroup.dir: IDL set to "uto" followed by getAttribute() 
PASS optgroup.dir: IDL set to "uto" followed by IDL get 
PASS optgroup.dir: IDL set to "AUTO" should not throw 
PASS optgroup.dir: IDL set to "AUTO" followed by getAttribute() 
PASS optgroup.dir: IDL set to "AUTO" followed by IDL get 
PASS optgroup.className (<optgroup class>): typeof IDL attribute 
PASS optgroup.className (<optgroup class>): IDL get with DOM attribute unset 
PASS optgroup.className (<optgroup class>): setAttribute() to "" followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to "" followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to undefined followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to undefined followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to 7 followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to 7 followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to 1.5 followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to 1.5 followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to true followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to true followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to false followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to false followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to NaN followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to NaN followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to Infinity followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to Infinity followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to -Infinity followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to -Infinity followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to "\0" followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to "\0" followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to null followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to null followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to object "test-toString" followed by IDL get 
PASS optgroup.className (<optgroup class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS optgroup.className (<optgroup class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to "" should not throw 
PASS optgroup.className (<optgroup class>): IDL set to "" followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to "" followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS optgroup.className (<optgroup class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to undefined should not throw 
PASS optgroup.className (<optgroup class>): IDL set to undefined followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to undefined followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to 7 should not throw 
PASS optgroup.className (<optgroup class>): IDL set to 7 followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to 7 followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to 1.5 should not throw 
PASS optgroup.className (<optgroup class>): IDL set to 1.5 followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to 1.5 followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to true should not throw 
PASS optgroup.className (<optgroup class>): IDL set to true followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to true followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to false should not throw 
PASS optgroup.className (<optgroup class>): IDL set to false followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to false followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to object "[object Object]" should not throw 
PASS optgroup.className (<optgroup class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to object "[object Object]" followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to NaN should not throw 
PASS optgroup.className (<optgroup class>): IDL set to NaN followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to NaN followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to Infinity should not throw 
PASS optgroup.className (<optgroup class>): IDL set to Infinity followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to Infinity followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to -Infinity should not throw 
PASS optgroup.className (<optgroup class>): IDL set to -Infinity followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to -Infinity followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to "\0" should not throw 
PASS optgroup.className (<optgroup class>): IDL set to "\0" followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to "\0" followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to null should not throw 
PASS optgroup.className (<optgroup class>): IDL set to null followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to null followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to object "test-toString" should not throw 
PASS optgroup.className (<optgroup class>): IDL set to object "test-toString" followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to object "test-toString" followed by IDL get 
PASS optgroup.className (<optgroup class>): IDL set to object "test-valueOf" should not throw 
PASS optgroup.className (<optgroup class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS optgroup.className (<optgroup class>): IDL set to object "test-valueOf" followed by IDL get 
PASS optgroup.hidden: typeof IDL attribute 
PASS optgroup.hidden: IDL get with DOM attribute unset 
PASS optgroup.hidden: setAttribute() to "" followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to "" followed by IDL get 
PASS optgroup.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to " foo " followed by IDL get 
PASS optgroup.hidden: setAttribute() to undefined followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to undefined followed by IDL get 
PASS optgroup.hidden: setAttribute() to null followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to null followed by IDL get 
PASS optgroup.hidden: setAttribute() to 7 followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to 7 followed by IDL get 
PASS optgroup.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to 1.5 followed by IDL get 
PASS optgroup.hidden: setAttribute() to true followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to true followed by IDL get 
PASS optgroup.hidden: setAttribute() to false followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to false followed by IDL get 
PASS optgroup.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS optgroup.hidden: setAttribute() to NaN followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to NaN followed by IDL get 
PASS optgroup.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to Infinity followed by IDL get 
PASS optgroup.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to -Infinity followed by IDL get 
PASS optgroup.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to "\0" followed by IDL get 
PASS optgroup.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS optgroup.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS optgroup.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS optgroup.hidden: setAttribute() to "hidden" followed by IDL get 
PASS optgroup.hidden: IDL set to "" should not throw 
PASS optgroup.hidden: IDL set to "" followed by hasAttribute() 
PASS optgroup.hidden: IDL set to "" followed by IDL get 
PASS optgroup.hidden: IDL set to " foo " should not throw 
PASS optgroup.hidden: IDL set to " foo " followed by hasAttribute() 
PASS optgroup.hidden: IDL set to " foo " followed by IDL get 
PASS optgroup.hidden: IDL set to undefined should not throw 
PASS optgroup.hidden: IDL set to undefined followed by hasAttribute() 
PASS optgroup.hidden: IDL set to undefined followed by IDL get 
PASS optgroup.hidden: IDL set to null should not throw 
PASS optgroup.hidden: IDL set to null followed by hasAttribute() 
PASS optgroup.hidden: IDL set to null followed by IDL get 
PASS optgroup.hidden: IDL set to 7 should not throw 
PASS optgroup.hidden: IDL set to 7 followed by hasAttribute() 
PASS optgroup.hidden: IDL set to 7 followed by IDL get 
PASS optgroup.hidden: IDL set to 1.5 should not throw 
PASS optgroup.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS optgroup.hidden: IDL set to 1.5 followed by IDL get 
PASS optgroup.hidden: IDL set to true should not throw 
PASS optgroup.hidden: IDL set to true followed by hasAttribute() 
PASS optgroup.hidden: IDL set to true followed by IDL get 
PASS optgroup.hidden: IDL set to false should not throw 
PASS optgroup.hidden: IDL set to false followed by hasAttribute() 
PASS optgroup.hidden: IDL set to false followed by IDL get 
PASS optgroup.hidden: IDL set to object "[object Object]" should not throw 
PASS optgroup.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS optgroup.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS optgroup.hidden: IDL set to NaN should not throw 
PASS optgroup.hidden: IDL set to NaN followed by hasAttribute() 
PASS optgroup.hidden: IDL set to NaN followed by IDL get 
PASS optgroup.hidden: IDL set to Infinity should not throw 
PASS optgroup.hidden: IDL set to Infinity followed by hasAttribute() 
PASS optgroup.hidden: IDL set to Infinity followed by IDL get 
PASS optgroup.hidden: IDL set to -Infinity should not throw 
PASS optgroup.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS optgroup.hidden: IDL set to -Infinity followed by IDL get 
PASS optgroup.hidden: IDL set to "\0" should not throw 
PASS optgroup.hidden: IDL set to "\0" followed by hasAttribute() 
PASS optgroup.hidden: IDL set to "\0" followed by IDL get 
PASS optgroup.hidden: IDL set to object "test-toString" should not throw 
PASS optgroup.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS optgroup.hidden: IDL set to object "test-toString" followed by IDL get 
PASS optgroup.hidden: IDL set to object "test-valueOf" should not throw 
PASS optgroup.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS optgroup.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS optgroup.accessKey: typeof IDL attribute 
PASS optgroup.accessKey: IDL get with DOM attribute unset 
PASS optgroup.accessKey: setAttribute() to "" followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to "" followed by IDL get 
PASS optgroup.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS optgroup.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to undefined followed by IDL get 
PASS optgroup.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to 7 followed by IDL get 
PASS optgroup.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS optgroup.accessKey: setAttribute() to true followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to true followed by IDL get 
PASS optgroup.accessKey: setAttribute() to false followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to false followed by IDL get 
PASS optgroup.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS optgroup.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to NaN followed by IDL get 
PASS optgroup.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to Infinity followed by IDL get 
PASS optgroup.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS optgroup.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to "\0" followed by IDL get 
PASS optgroup.accessKey: setAttribute() to null followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to null followed by IDL get 
PASS optgroup.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS optgroup.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS optgroup.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS optgroup.accessKey: IDL set to "" should not throw 
PASS optgroup.accessKey: IDL set to "" followed by getAttribute() 
PASS optgroup.accessKey: IDL set to "" followed by IDL get 
PASS optgroup.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS optgroup.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS optgroup.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS optgroup.accessKey: IDL set to undefined should not throw 
PASS optgroup.accessKey: IDL set to undefined followed by getAttribute() 
PASS optgroup.accessKey: IDL set to undefined followed by IDL get 
PASS optgroup.accessKey: IDL set to 7 should not throw 
PASS optgroup.accessKey: IDL set to 7 followed by getAttribute() 
PASS optgroup.accessKey: IDL set to 7 followed by IDL get 
PASS optgroup.accessKey: IDL set to 1.5 should not throw 
PASS optgroup.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS optgroup.accessKey: IDL set to 1.5 followed by IDL get 
PASS optgroup.accessKey: IDL set to true should not throw 
PASS optgroup.accessKey: IDL set to true followed by getAttribute() 
PASS optgroup.accessKey: IDL set to true followed by IDL get 
PASS optgroup.accessKey: IDL set to false should not throw 
PASS optgroup.accessKey: IDL set to false followed by getAttribute() 
PASS optgroup.accessKey: IDL set to false followed by IDL get 
PASS optgroup.accessKey: IDL set to object "[object Object]" should not throw 
PASS optgroup.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS optgroup.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS optgroup.accessKey: IDL set to NaN should not throw 
PASS optgroup.accessKey: IDL set to NaN followed by getAttribute() 
PASS optgroup.accessKey: IDL set to NaN followed by IDL get 
PASS optgroup.accessKey: IDL set to Infinity should not throw 
PASS optgroup.accessKey: IDL set to Infinity followed by getAttribute() 
PASS optgroup.accessKey: IDL set to Infinity followed by IDL get 
PASS optgroup.accessKey: IDL set to -Infinity should not throw 
PASS optgroup.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS optgroup.accessKey: IDL set to -Infinity followed by IDL get 
PASS optgroup.accessKey: IDL set to "\0" should not throw 
PASS optgroup.accessKey: IDL set to "\0" followed by getAttribute() 
PASS optgroup.accessKey: IDL set to "\0" followed by IDL get 
PASS optgroup.accessKey: IDL set to null should not throw 
PASS optgroup.accessKey: IDL set to null followed by getAttribute() 
PASS optgroup.accessKey: IDL set to null followed by IDL get 
PASS optgroup.accessKey: IDL set to object "test-toString" should not throw 
PASS optgroup.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS optgroup.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS optgroup.accessKey: IDL set to object "test-valueOf" should not throw 
PASS optgroup.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS optgroup.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS optgroup.tabIndex: typeof IDL attribute 
PASS optgroup.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to -36 followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to -1 followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to 0 followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to 1 followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL optgroup.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS optgroup.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL optgroup.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS optgroup.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to "0" followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to "1" followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS optgroup.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS optgroup.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS optgroup.tabIndex: IDL set to -36 should not throw 
PASS optgroup.tabIndex: IDL set to -36 followed by getAttribute() 
PASS optgroup.tabIndex: IDL set to -36 followed by IDL get 
PASS optgroup.tabIndex: IDL set to -1 should not throw 
PASS optgroup.tabIndex: IDL set to -1 followed by getAttribute() 
PASS optgroup.tabIndex: IDL set to -1 followed by IDL get 
PASS optgroup.tabIndex: IDL set to 0 should not throw 
PASS optgroup.tabIndex: IDL set to 0 followed by getAttribute() 
PASS optgroup.tabIndex: IDL set to 0 followed by IDL get 
PASS optgroup.tabIndex: IDL set to 1 should not throw 
PASS optgroup.tabIndex: IDL set to 1 followed by getAttribute() 
PASS optgroup.tabIndex: IDL set to 1 followed by IDL get 
PASS optgroup.tabIndex: IDL set to 2147483647 should not throw 
PASS optgroup.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL optgroup.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS optgroup.tabIndex: IDL set to -2147483648 should not throw 
PASS optgroup.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL optgroup.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS optgroup.disabled: typeof IDL attribute 
PASS optgroup.disabled: IDL get with DOM attribute unset 
PASS optgroup.disabled: setAttribute() to "" followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to "" followed by IDL get 
PASS optgroup.disabled: setAttribute() to " foo " followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to " foo " followed by IDL get 
PASS optgroup.disabled: setAttribute() to undefined followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to undefined followed by IDL get 
PASS optgroup.disabled: setAttribute() to null followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to null followed by IDL get 
PASS optgroup.disabled: setAttribute() to 7 followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to 7 followed by IDL get 
PASS optgroup.disabled: setAttribute() to 1.5 followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to 1.5 followed by IDL get 
PASS optgroup.disabled: setAttribute() to true followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to true followed by IDL get 
PASS optgroup.disabled: setAttribute() to false followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to false followed by IDL get 
PASS optgroup.disabled: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to object "[object Object]" followed by IDL get 
PASS optgroup.disabled: setAttribute() to NaN followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to NaN followed by IDL get 
PASS optgroup.disabled: setAttribute() to Infinity followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to Infinity followed by IDL get 
PASS optgroup.disabled: setAttribute() to -Infinity followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to -Infinity followed by IDL get 
PASS optgroup.disabled: setAttribute() to "\0" followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to "\0" followed by IDL get 
PASS optgroup.disabled: setAttribute() to object "test-toString" followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to object "test-toString" followed by IDL get 
PASS optgroup.disabled: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to object "test-valueOf" followed by IDL get 
PASS optgroup.disabled: setAttribute() to "disabled" followed by getAttribute() 
PASS optgroup.disabled: setAttribute() to "disabled" followed by IDL get 
PASS optgroup.disabled: IDL set to "" should not throw 
PASS optgroup.disabled: IDL set to "" followed by hasAttribute() 
PASS optgroup.disabled: IDL set to "" followed by IDL get 
PASS optgroup.disabled: IDL set to " foo " should not throw 
PASS optgroup.disabled: IDL set to " foo " followed by hasAttribute() 
PASS optgroup.disabled: IDL set to " foo " followed by IDL get 
PASS optgroup.disabled: IDL set to undefined should not throw 
PASS optgroup.disabled: IDL set to undefined followed by hasAttribute() 
PASS optgroup.disabled: IDL set to undefined followed by IDL get 
PASS optgroup.disabled: IDL set to null should not throw 
PASS optgroup.disabled: IDL set to null followed by hasAttribute() 
PASS optgroup.disabled: IDL set to null followed by IDL get 
PASS optgroup.disabled: IDL set to 7 should not throw 
PASS optgroup.disabled: IDL set to 7 followed by hasAttribute() 
PASS optgroup.disabled: IDL set to 7 followed by IDL get 
PASS optgroup.disabled: IDL set to 1.5 should not throw 
PASS optgroup.disabled: IDL set to 1.5 followed by hasAttribute() 
PASS optgroup.disabled: IDL set to 1.5 followed by IDL get 
PASS optgroup.disabled: IDL set to true should not throw 
PASS optgroup.disabled: IDL set to true followed by hasAttribute() 
PASS optgroup.disabled: IDL set to true followed by IDL get 
PASS optgroup.disabled: IDL set to false should not throw 
PASS optgroup.disabled: IDL set to false followed by hasAttribute() 
PASS optgroup.disabled: IDL set to false followed by IDL get 
PASS optgroup.disabled: IDL set to object "[object Object]" should not throw 
PASS optgroup.disabled: IDL set to object "[object Object]" followed by hasAttribute() 
PASS optgroup.disabled: IDL set to object "[object Object]" followed by IDL get 
PASS optgroup.disabled: IDL set to NaN should not throw 
PASS optgroup.disabled: IDL set to NaN followed by hasAttribute() 
PASS optgroup.disabled: IDL set to NaN followed by IDL get 
PASS optgroup.disabled: IDL set to Infinity should not throw 
PASS optgroup.disabled: IDL set to Infinity followed by hasAttribute() 
PASS optgroup.disabled: IDL set to Infinity followed by IDL get 
PASS optgroup.disabled: IDL set to -Infinity should not throw 
PASS optgroup.disabled: IDL set to -Infinity followed by hasAttribute() 
PASS optgroup.disabled: IDL set to -Infinity followed by IDL get 
PASS optgroup.disabled: IDL set to "\0" should not throw 
PASS optgroup.disabled: IDL set to "\0" followed by hasAttribute() 
PASS optgroup.disabled: IDL set to "\0" followed by IDL get 
PASS optgroup.disabled: IDL set to object "test-toString" should not throw 
PASS optgroup.disabled: IDL set to object "test-toString" followed by hasAttribute() 
PASS optgroup.disabled: IDL set to object "test-toString" followed by IDL get 
PASS optgroup.disabled: IDL set to object "test-valueOf" should not throw 
PASS optgroup.disabled: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS optgroup.disabled: IDL set to object "test-valueOf" followed by IDL get 
PASS optgroup.label: typeof IDL attribute 
PASS optgroup.label: IDL get with DOM attribute unset 
PASS optgroup.label: setAttribute() to "" followed by getAttribute() 
PASS optgroup.label: setAttribute() to "" followed by IDL get 
PASS optgroup.label: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS optgroup.label: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS optgroup.label: setAttribute() to undefined followed by getAttribute() 
PASS optgroup.label: setAttribute() to undefined followed by IDL get 
PASS optgroup.label: setAttribute() to 7 followed by getAttribute() 
PASS optgroup.label: setAttribute() to 7 followed by IDL get 
PASS optgroup.label: setAttribute() to 1.5 followed by getAttribute() 
PASS optgroup.label: setAttribute() to 1.5 followed by IDL get 
PASS optgroup.label: setAttribute() to true followed by getAttribute() 
PASS optgroup.label: setAttribute() to true followed by IDL get 
PASS optgroup.label: setAttribute() to false followed by getAttribute() 
PASS optgroup.label: setAttribute() to false followed by IDL get 
PASS optgroup.label: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS optgroup.label: setAttribute() to object "[object Object]" followed by IDL get 
PASS optgroup.label: setAttribute() to NaN followed by getAttribute() 
PASS optgroup.label: setAttribute() to NaN followed by IDL get 
PASS optgroup.label: setAttribute() to Infinity followed by getAttribute() 
PASS optgroup.label: setAttribute() to Infinity followed by IDL get 
PASS optgroup.label: setAttribute() to -Infinity followed by getAttribute() 
PASS optgroup.label: setAttribute() to -Infinity followed by IDL get 
PASS optgroup.label: setAttribute() to "\0" followed by getAttribute() 
PASS optgroup.label: setAttribute() to "\0" followed by IDL get 
PASS optgroup.label: setAttribute() to null followed by getAttribute() 
PASS optgroup.label: setAttribute() to null followed by IDL get 
PASS optgroup.label: setAttribute() to object "test-toString" followed by getAttribute() 
PASS optgroup.label: setAttribute() to object "test-toString" followed by IDL get 
PASS optgroup.label: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS optgroup.label: setAttribute() to object "test-valueOf" followed by IDL get 
PASS optgroup.label: IDL set to "" should not throw 
PASS optgroup.label: IDL set to "" followed by getAttribute() 
PASS optgroup.label: IDL set to "" followed by IDL get 
PASS optgroup.label: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS optgroup.label: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS optgroup.label: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS optgroup.label: IDL set to undefined should not throw 
PASS optgroup.label: IDL set to undefined followed by getAttribute() 
PASS optgroup.label: IDL set to undefined followed by IDL get 
PASS optgroup.label: IDL set to 7 should not throw 
PASS optgroup.label: IDL set to 7 followed by getAttribute() 
PASS optgroup.label: IDL set to 7 followed by IDL get 
PASS optgroup.label: IDL set to 1.5 should not throw 
PASS optgroup.label: IDL set to 1.5 followed by getAttribute() 
PASS optgroup.label: IDL set to 1.5 followed by IDL get 
PASS optgroup.label: IDL set to true should not throw 
PASS optgroup.label: IDL set to true followed by getAttribute() 
PASS optgroup.label: IDL set to true followed by IDL get 
PASS optgroup.label: IDL set to false should not throw 
PASS optgroup.label: IDL set to false followed by getAttribute() 
PASS optgroup.label: IDL set to false followed by IDL get 
PASS optgroup.label: IDL set to object "[object Object]" should not throw 
PASS optgroup.label: IDL set to object "[object Object]" followed by getAttribute() 
PASS optgroup.label: IDL set to object "[object Object]" followed by IDL get 
PASS optgroup.label: IDL set to NaN should not throw 
PASS optgroup.label: IDL set to NaN followed by getAttribute() 
PASS optgroup.label: IDL set to NaN followed by IDL get 
PASS optgroup.label: IDL set to Infinity should not throw 
PASS optgroup.label: IDL set to Infinity followed by getAttribute() 
PASS optgroup.label: IDL set to Infinity followed by IDL get 
PASS optgroup.label: IDL set to -Infinity should not throw 
PASS optgroup.label: IDL set to -Infinity followed by getAttribute() 
PASS optgroup.label: IDL set to -Infinity followed by IDL get 
PASS optgroup.label: IDL set to "\0" should not throw 
PASS optgroup.label: IDL set to "\0" followed by getAttribute() 
PASS optgroup.label: IDL set to "\0" followed by IDL get 
PASS optgroup.label: IDL set to null should not throw 
PASS optgroup.label: IDL set to null followed by getAttribute() 
PASS optgroup.label: IDL set to null followed by IDL get 
PASS optgroup.label: IDL set to object "test-toString" should not throw 
PASS optgroup.label: IDL set to object "test-toString" followed by getAttribute() 
PASS optgroup.label: IDL set to object "test-toString" followed by IDL get 
PASS optgroup.label: IDL set to object "test-valueOf" should not throw 
PASS optgroup.label: IDL set to object "test-valueOf" followed by getAttribute() 
PASS optgroup.label: IDL set to object "test-valueOf" followed by IDL get 
FAIL optgroup.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL optgroup.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to null followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to true followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to false followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL optgroup.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS optgroup.itemScope: IDL set to "" should not throw 
FAIL optgroup.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL optgroup.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS optgroup.itemScope: IDL set to " foo " should not throw 
PASS optgroup.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL optgroup.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS optgroup.itemScope: IDL set to undefined should not throw 
FAIL optgroup.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL optgroup.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS optgroup.itemScope: IDL set to null should not throw 
FAIL optgroup.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL optgroup.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS optgroup.itemScope: IDL set to 7 should not throw 
PASS optgroup.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL optgroup.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS optgroup.itemScope: IDL set to 1.5 should not throw 
PASS optgroup.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL optgroup.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS optgroup.itemScope: IDL set to true should not throw 
PASS optgroup.itemScope: IDL set to true followed by hasAttribute() 
PASS optgroup.itemScope: IDL set to true followed by IDL get 
PASS optgroup.itemScope: IDL set to false should not throw 
FAIL optgroup.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS optgroup.itemScope: IDL set to false followed by IDL get 
PASS optgroup.itemScope: IDL set to object "[object Object]" should not throw 
PASS optgroup.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL optgroup.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS optgroup.itemScope: IDL set to NaN should not throw 
FAIL optgroup.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL optgroup.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS optgroup.itemScope: IDL set to Infinity should not throw 
PASS optgroup.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL optgroup.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS optgroup.itemScope: IDL set to -Infinity should not throw 
PASS optgroup.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL optgroup.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS optgroup.itemScope: IDL set to "\0" should not throw 
PASS optgroup.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL optgroup.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS optgroup.itemScope: IDL set to object "test-toString" should not throw 
PASS optgroup.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL optgroup.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS optgroup.itemScope: IDL set to object "test-valueOf" should not throw 
PASS optgroup.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL optgroup.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL optgroup.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL optgroup.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to "" followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to true followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to false followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to null followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS optgroup.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL optgroup.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS optgroup.itemId: IDL set to "" should not throw 
FAIL optgroup.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS optgroup.itemId: IDL set to " foo " should not throw 
FAIL optgroup.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL optgroup.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS optgroup.itemId: IDL set to "http://site.example/" should not throw 
FAIL optgroup.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS optgroup.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS optgroup.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL optgroup.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS optgroup.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL optgroup.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL optgroup.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS optgroup.itemId: IDL set to undefined should not throw 
FAIL optgroup.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS optgroup.itemId: IDL set to 7 should not throw 
FAIL optgroup.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS optgroup.itemId: IDL set to 1.5 should not throw 
FAIL optgroup.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS optgroup.itemId: IDL set to true should not throw 
FAIL optgroup.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS optgroup.itemId: IDL set to false should not throw 
FAIL optgroup.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS optgroup.itemId: IDL set to object "[object Object]" should not throw 
FAIL optgroup.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS optgroup.itemId: IDL set to NaN should not throw 
FAIL optgroup.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS optgroup.itemId: IDL set to Infinity should not throw 
FAIL optgroup.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS optgroup.itemId: IDL set to -Infinity should not throw 
FAIL optgroup.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS optgroup.itemId: IDL set to "\0" should not throw 
FAIL optgroup.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS optgroup.itemId: IDL set to null should not throw 
FAIL optgroup.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS optgroup.itemId: IDL set to object "test-toString" should not throw 
FAIL optgroup.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL optgroup.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS optgroup.itemId: IDL set to object "test-valueOf" should not throw 
PASS optgroup.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL optgroup.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS option.title: typeof IDL attribute 
PASS option.title: IDL get with DOM attribute unset 
PASS option.title: setAttribute() to "" followed by getAttribute() 
PASS option.title: setAttribute() to "" followed by IDL get 
PASS option.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS option.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS option.title: setAttribute() to undefined followed by getAttribute() 
PASS option.title: setAttribute() to undefined followed by IDL get 
PASS option.title: setAttribute() to 7 followed by getAttribute() 
PASS option.title: setAttribute() to 7 followed by IDL get 
PASS option.title: setAttribute() to 1.5 followed by getAttribute() 
PASS option.title: setAttribute() to 1.5 followed by IDL get 
PASS option.title: setAttribute() to true followed by getAttribute() 
PASS option.title: setAttribute() to true followed by IDL get 
PASS option.title: setAttribute() to false followed by getAttribute() 
PASS option.title: setAttribute() to false followed by IDL get 
PASS option.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS option.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS option.title: setAttribute() to NaN followed by getAttribute() 
PASS option.title: setAttribute() to NaN followed by IDL get 
PASS option.title: setAttribute() to Infinity followed by getAttribute() 
PASS option.title: setAttribute() to Infinity followed by IDL get 
PASS option.title: setAttribute() to -Infinity followed by getAttribute() 
PASS option.title: setAttribute() to -Infinity followed by IDL get 
PASS option.title: setAttribute() to "\0" followed by getAttribute() 
PASS option.title: setAttribute() to "\0" followed by IDL get 
PASS option.title: setAttribute() to null followed by getAttribute() 
PASS option.title: setAttribute() to null followed by IDL get 
PASS option.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS option.title: setAttribute() to object "test-toString" followed by IDL get 
PASS option.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS option.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS option.title: IDL set to "" should not throw 
PASS option.title: IDL set to "" followed by getAttribute() 
PASS option.title: IDL set to "" followed by IDL get 
PASS option.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS option.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS option.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS option.title: IDL set to undefined should not throw 
PASS option.title: IDL set to undefined followed by getAttribute() 
PASS option.title: IDL set to undefined followed by IDL get 
PASS option.title: IDL set to 7 should not throw 
PASS option.title: IDL set to 7 followed by getAttribute() 
PASS option.title: IDL set to 7 followed by IDL get 
PASS option.title: IDL set to 1.5 should not throw 
PASS option.title: IDL set to 1.5 followed by getAttribute() 
PASS option.title: IDL set to 1.5 followed by IDL get 
PASS option.title: IDL set to true should not throw 
PASS option.title: IDL set to true followed by getAttribute() 
PASS option.title: IDL set to true followed by IDL get 
PASS option.title: IDL set to false should not throw 
PASS option.title: IDL set to false followed by getAttribute() 
PASS option.title: IDL set to false followed by IDL get 
PASS option.title: IDL set to object "[object Object]" should not throw 
PASS option.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS option.title: IDL set to object "[object Object]" followed by IDL get 
PASS option.title: IDL set to NaN should not throw 
PASS option.title: IDL set to NaN followed by getAttribute() 
PASS option.title: IDL set to NaN followed by IDL get 
PASS option.title: IDL set to Infinity should not throw 
PASS option.title: IDL set to Infinity followed by getAttribute() 
PASS option.title: IDL set to Infinity followed by IDL get 
PASS option.title: IDL set to -Infinity should not throw 
PASS option.title: IDL set to -Infinity followed by getAttribute() 
PASS option.title: IDL set to -Infinity followed by IDL get 
PASS option.title: IDL set to "\0" should not throw 
PASS option.title: IDL set to "\0" followed by getAttribute() 
PASS option.title: IDL set to "\0" followed by IDL get 
PASS option.title: IDL set to null should not throw 
PASS option.title: IDL set to null followed by getAttribute() 
PASS option.title: IDL set to null followed by IDL get 
PASS option.title: IDL set to object "test-toString" should not throw 
PASS option.title: IDL set to object "test-toString" followed by getAttribute() 
PASS option.title: IDL set to object "test-toString" followed by IDL get 
PASS option.title: IDL set to object "test-valueOf" should not throw 
PASS option.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS option.title: IDL set to object "test-valueOf" followed by IDL get 
PASS option.lang: typeof IDL attribute 
PASS option.lang: IDL get with DOM attribute unset 
PASS option.lang: setAttribute() to "" followed by getAttribute() 
PASS option.lang: setAttribute() to "" followed by IDL get 
PASS option.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS option.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS option.lang: setAttribute() to undefined followed by getAttribute() 
PASS option.lang: setAttribute() to undefined followed by IDL get 
PASS option.lang: setAttribute() to 7 followed by getAttribute() 
PASS option.lang: setAttribute() to 7 followed by IDL get 
PASS option.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS option.lang: setAttribute() to 1.5 followed by IDL get 
PASS option.lang: setAttribute() to true followed by getAttribute() 
PASS option.lang: setAttribute() to true followed by IDL get 
PASS option.lang: setAttribute() to false followed by getAttribute() 
PASS option.lang: setAttribute() to false followed by IDL get 
PASS option.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS option.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS option.lang: setAttribute() to NaN followed by getAttribute() 
PASS option.lang: setAttribute() to NaN followed by IDL get 
PASS option.lang: setAttribute() to Infinity followed by getAttribute() 
PASS option.lang: setAttribute() to Infinity followed by IDL get 
PASS option.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS option.lang: setAttribute() to -Infinity followed by IDL get 
PASS option.lang: setAttribute() to "\0" followed by getAttribute() 
PASS option.lang: setAttribute() to "\0" followed by IDL get 
PASS option.lang: setAttribute() to null followed by getAttribute() 
PASS option.lang: setAttribute() to null followed by IDL get 
PASS option.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS option.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS option.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS option.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS option.lang: IDL set to "" should not throw 
PASS option.lang: IDL set to "" followed by getAttribute() 
PASS option.lang: IDL set to "" followed by IDL get 
PASS option.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS option.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS option.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS option.lang: IDL set to undefined should not throw 
PASS option.lang: IDL set to undefined followed by getAttribute() 
PASS option.lang: IDL set to undefined followed by IDL get 
PASS option.lang: IDL set to 7 should not throw 
PASS option.lang: IDL set to 7 followed by getAttribute() 
PASS option.lang: IDL set to 7 followed by IDL get 
PASS option.lang: IDL set to 1.5 should not throw 
PASS option.lang: IDL set to 1.5 followed by getAttribute() 
PASS option.lang: IDL set to 1.5 followed by IDL get 
PASS option.lang: IDL set to true should not throw 
PASS option.lang: IDL set to true followed by getAttribute() 
PASS option.lang: IDL set to true followed by IDL get 
PASS option.lang: IDL set to false should not throw 
PASS option.lang: IDL set to false followed by getAttribute() 
PASS option.lang: IDL set to false followed by IDL get 
PASS option.lang: IDL set to object "[object Object]" should not throw 
PASS option.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS option.lang: IDL set to object "[object Object]" followed by IDL get 
PASS option.lang: IDL set to NaN should not throw 
PASS option.lang: IDL set to NaN followed by getAttribute() 
PASS option.lang: IDL set to NaN followed by IDL get 
PASS option.lang: IDL set to Infinity should not throw 
PASS option.lang: IDL set to Infinity followed by getAttribute() 
PASS option.lang: IDL set to Infinity followed by IDL get 
PASS option.lang: IDL set to -Infinity should not throw 
PASS option.lang: IDL set to -Infinity followed by getAttribute() 
PASS option.lang: IDL set to -Infinity followed by IDL get 
PASS option.lang: IDL set to "\0" should not throw 
PASS option.lang: IDL set to "\0" followed by getAttribute() 
PASS option.lang: IDL set to "\0" followed by IDL get 
PASS option.lang: IDL set to null should not throw 
PASS option.lang: IDL set to null followed by getAttribute() 
PASS option.lang: IDL set to null followed by IDL get 
PASS option.lang: IDL set to object "test-toString" should not throw 
PASS option.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS option.lang: IDL set to object "test-toString" followed by IDL get 
PASS option.lang: IDL set to object "test-valueOf" should not throw 
PASS option.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS option.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS option.dir: typeof IDL attribute 
PASS option.dir: IDL get with DOM attribute unset 
PASS option.dir: setAttribute() to "" followed by getAttribute() 
PASS option.dir: setAttribute() to "" followed by IDL get 
PASS option.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS option.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS option.dir: setAttribute() to undefined followed by getAttribute() 
PASS option.dir: setAttribute() to undefined followed by IDL get 
PASS option.dir: setAttribute() to 7 followed by getAttribute() 
PASS option.dir: setAttribute() to 7 followed by IDL get 
PASS option.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS option.dir: setAttribute() to 1.5 followed by IDL get 
PASS option.dir: setAttribute() to true followed by getAttribute() 
PASS option.dir: setAttribute() to true followed by IDL get 
PASS option.dir: setAttribute() to false followed by getAttribute() 
PASS option.dir: setAttribute() to false followed by IDL get 
PASS option.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS option.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS option.dir: setAttribute() to NaN followed by getAttribute() 
PASS option.dir: setAttribute() to NaN followed by IDL get 
PASS option.dir: setAttribute() to Infinity followed by getAttribute() 
PASS option.dir: setAttribute() to Infinity followed by IDL get 
PASS option.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS option.dir: setAttribute() to -Infinity followed by IDL get 
PASS option.dir: setAttribute() to "\0" followed by getAttribute() 
PASS option.dir: setAttribute() to "\0" followed by IDL get 
PASS option.dir: setAttribute() to null followed by getAttribute() 
PASS option.dir: setAttribute() to null followed by IDL get 
PASS option.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS option.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS option.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS option.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS option.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS option.dir: setAttribute() to "ltr" followed by IDL get 
PASS option.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS option.dir: setAttribute() to "xltr" followed by IDL get 
PASS option.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS option.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS option.dir: setAttribute() to "tr" followed by getAttribute() 
PASS option.dir: setAttribute() to "tr" followed by IDL get 
PASS option.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS option.dir: setAttribute() to "LTR" followed by IDL get 
PASS option.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS option.dir: setAttribute() to "rtl" followed by IDL get 
PASS option.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS option.dir: setAttribute() to "xrtl" followed by IDL get 
PASS option.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS option.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS option.dir: setAttribute() to "tl" followed by getAttribute() 
PASS option.dir: setAttribute() to "tl" followed by IDL get 
PASS option.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS option.dir: setAttribute() to "RTL" followed by IDL get 
PASS option.dir: setAttribute() to "auto" followed by getAttribute() 
PASS option.dir: setAttribute() to "auto" followed by IDL get 
PASS option.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS option.dir: setAttribute() to "xauto" followed by IDL get 
PASS option.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS option.dir: setAttribute() to "auto\0" followed by IDL get 
PASS option.dir: setAttribute() to "uto" followed by getAttribute() 
PASS option.dir: setAttribute() to "uto" followed by IDL get 
PASS option.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS option.dir: setAttribute() to "AUTO" followed by IDL get 
PASS option.dir: IDL set to "" should not throw 
PASS option.dir: IDL set to "" followed by getAttribute() 
PASS option.dir: IDL set to "" followed by IDL get 
PASS option.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS option.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS option.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS option.dir: IDL set to undefined should not throw 
PASS option.dir: IDL set to undefined followed by getAttribute() 
PASS option.dir: IDL set to undefined followed by IDL get 
PASS option.dir: IDL set to 7 should not throw 
PASS option.dir: IDL set to 7 followed by getAttribute() 
PASS option.dir: IDL set to 7 followed by IDL get 
PASS option.dir: IDL set to 1.5 should not throw 
PASS option.dir: IDL set to 1.5 followed by getAttribute() 
PASS option.dir: IDL set to 1.5 followed by IDL get 
PASS option.dir: IDL set to true should not throw 
PASS option.dir: IDL set to true followed by getAttribute() 
PASS option.dir: IDL set to true followed by IDL get 
PASS option.dir: IDL set to false should not throw 
PASS option.dir: IDL set to false followed by getAttribute() 
PASS option.dir: IDL set to false followed by IDL get 
PASS option.dir: IDL set to object "[object Object]" should not throw 
PASS option.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS option.dir: IDL set to object "[object Object]" followed by IDL get 
PASS option.dir: IDL set to NaN should not throw 
PASS option.dir: IDL set to NaN followed by getAttribute() 
PASS option.dir: IDL set to NaN followed by IDL get 
PASS option.dir: IDL set to Infinity should not throw 
PASS option.dir: IDL set to Infinity followed by getAttribute() 
PASS option.dir: IDL set to Infinity followed by IDL get 
PASS option.dir: IDL set to -Infinity should not throw 
PASS option.dir: IDL set to -Infinity followed by getAttribute() 
PASS option.dir: IDL set to -Infinity followed by IDL get 
PASS option.dir: IDL set to "\0" should not throw 
PASS option.dir: IDL set to "\0" followed by getAttribute() 
PASS option.dir: IDL set to "\0" followed by IDL get 
PASS option.dir: IDL set to null should not throw 
PASS option.dir: IDL set to null followed by IDL get 
PASS option.dir: IDL set to object "test-toString" should not throw 
PASS option.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS option.dir: IDL set to object "test-toString" followed by IDL get 
PASS option.dir: IDL set to object "test-valueOf" should not throw 
PASS option.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS option.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS option.dir: IDL set to "ltr" should not throw 
PASS option.dir: IDL set to "ltr" followed by getAttribute() 
PASS option.dir: IDL set to "ltr" followed by IDL get 
PASS option.dir: IDL set to "xltr" should not throw 
PASS option.dir: IDL set to "xltr" followed by getAttribute() 
PASS option.dir: IDL set to "xltr" followed by IDL get 
PASS option.dir: IDL set to "ltr\0" should not throw 
PASS option.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS option.dir: IDL set to "ltr\0" followed by IDL get 
PASS option.dir: IDL set to "tr" should not throw 
PASS option.dir: IDL set to "tr" followed by getAttribute() 
PASS option.dir: IDL set to "tr" followed by IDL get 
PASS option.dir: IDL set to "LTR" should not throw 
PASS option.dir: IDL set to "LTR" followed by getAttribute() 
PASS option.dir: IDL set to "LTR" followed by IDL get 
PASS option.dir: IDL set to "rtl" should not throw 
PASS option.dir: IDL set to "rtl" followed by getAttribute() 
PASS option.dir: IDL set to "rtl" followed by IDL get 
PASS option.dir: IDL set to "xrtl" should not throw 
PASS option.dir: IDL set to "xrtl" followed by getAttribute() 
PASS option.dir: IDL set to "xrtl" followed by IDL get 
PASS option.dir: IDL set to "rtl\0" should not throw 
PASS option.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS option.dir: IDL set to "rtl\0" followed by IDL get 
PASS option.dir: IDL set to "tl" should not throw 
PASS option.dir: IDL set to "tl" followed by getAttribute() 
PASS option.dir: IDL set to "tl" followed by IDL get 
PASS option.dir: IDL set to "RTL" should not throw 
PASS option.dir: IDL set to "RTL" followed by getAttribute() 
PASS option.dir: IDL set to "RTL" followed by IDL get 
PASS option.dir: IDL set to "auto" should not throw 
PASS option.dir: IDL set to "auto" followed by getAttribute() 
PASS option.dir: IDL set to "auto" followed by IDL get 
PASS option.dir: IDL set to "xauto" should not throw 
PASS option.dir: IDL set to "xauto" followed by getAttribute() 
PASS option.dir: IDL set to "xauto" followed by IDL get 
PASS option.dir: IDL set to "auto\0" should not throw 
PASS option.dir: IDL set to "auto\0" followed by getAttribute() 
PASS option.dir: IDL set to "auto\0" followed by IDL get 
PASS option.dir: IDL set to "uto" should not throw 
PASS option.dir: IDL set to "uto" followed by getAttribute() 
PASS option.dir: IDL set to "uto" followed by IDL get 
PASS option.dir: IDL set to "AUTO" should not throw 
PASS option.dir: IDL set to "AUTO" followed by getAttribute() 
PASS option.dir: IDL set to "AUTO" followed by IDL get 
PASS option.className (<option class>): typeof IDL attribute 
PASS option.className (<option class>): IDL get with DOM attribute unset 
PASS option.className (<option class>): setAttribute() to "" followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to "" followed by IDL get 
PASS option.className (<option class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS option.className (<option class>): setAttribute() to undefined followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to undefined followed by IDL get 
PASS option.className (<option class>): setAttribute() to 7 followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to 7 followed by IDL get 
PASS option.className (<option class>): setAttribute() to 1.5 followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to 1.5 followed by IDL get 
PASS option.className (<option class>): setAttribute() to true followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to true followed by IDL get 
PASS option.className (<option class>): setAttribute() to false followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to false followed by IDL get 
PASS option.className (<option class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS option.className (<option class>): setAttribute() to NaN followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to NaN followed by IDL get 
PASS option.className (<option class>): setAttribute() to Infinity followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to Infinity followed by IDL get 
PASS option.className (<option class>): setAttribute() to -Infinity followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to -Infinity followed by IDL get 
PASS option.className (<option class>): setAttribute() to "\0" followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to "\0" followed by IDL get 
PASS option.className (<option class>): setAttribute() to null followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to null followed by IDL get 
PASS option.className (<option class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to object "test-toString" followed by IDL get 
PASS option.className (<option class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS option.className (<option class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS option.className (<option class>): IDL set to "" should not throw 
PASS option.className (<option class>): IDL set to "" followed by getAttribute() 
PASS option.className (<option class>): IDL set to "" followed by IDL get 
PASS option.className (<option class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS option.className (<option class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS option.className (<option class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS option.className (<option class>): IDL set to undefined should not throw 
PASS option.className (<option class>): IDL set to undefined followed by getAttribute() 
PASS option.className (<option class>): IDL set to undefined followed by IDL get 
PASS option.className (<option class>): IDL set to 7 should not throw 
PASS option.className (<option class>): IDL set to 7 followed by getAttribute() 
PASS option.className (<option class>): IDL set to 7 followed by IDL get 
PASS option.className (<option class>): IDL set to 1.5 should not throw 
PASS option.className (<option class>): IDL set to 1.5 followed by getAttribute() 
PASS option.className (<option class>): IDL set to 1.5 followed by IDL get 
PASS option.className (<option class>): IDL set to true should not throw 
PASS option.className (<option class>): IDL set to true followed by getAttribute() 
PASS option.className (<option class>): IDL set to true followed by IDL get 
PASS option.className (<option class>): IDL set to false should not throw 
PASS option.className (<option class>): IDL set to false followed by getAttribute() 
PASS option.className (<option class>): IDL set to false followed by IDL get 
PASS option.className (<option class>): IDL set to object "[object Object]" should not throw 
PASS option.className (<option class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS option.className (<option class>): IDL set to object "[object Object]" followed by IDL get 
PASS option.className (<option class>): IDL set to NaN should not throw 
PASS option.className (<option class>): IDL set to NaN followed by getAttribute() 
PASS option.className (<option class>): IDL set to NaN followed by IDL get 
PASS option.className (<option class>): IDL set to Infinity should not throw 
PASS option.className (<option class>): IDL set to Infinity followed by getAttribute() 
PASS option.className (<option class>): IDL set to Infinity followed by IDL get 
PASS option.className (<option class>): IDL set to -Infinity should not throw 
PASS option.className (<option class>): IDL set to -Infinity followed by getAttribute() 
PASS option.className (<option class>): IDL set to -Infinity followed by IDL get 
PASS option.className (<option class>): IDL set to "\0" should not throw 
PASS option.className (<option class>): IDL set to "\0" followed by getAttribute() 
PASS option.className (<option class>): IDL set to "\0" followed by IDL get 
PASS option.className (<option class>): IDL set to null should not throw 
PASS option.className (<option class>): IDL set to null followed by getAttribute() 
PASS option.className (<option class>): IDL set to null followed by IDL get 
PASS option.className (<option class>): IDL set to object "test-toString" should not throw 
PASS option.className (<option class>): IDL set to object "test-toString" followed by getAttribute() 
PASS option.className (<option class>): IDL set to object "test-toString" followed by IDL get 
PASS option.className (<option class>): IDL set to object "test-valueOf" should not throw 
PASS option.className (<option class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS option.className (<option class>): IDL set to object "test-valueOf" followed by IDL get 
PASS option.hidden: typeof IDL attribute 
PASS option.hidden: IDL get with DOM attribute unset 
PASS option.hidden: setAttribute() to "" followed by getAttribute() 
PASS option.hidden: setAttribute() to "" followed by IDL get 
PASS option.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS option.hidden: setAttribute() to " foo " followed by IDL get 
PASS option.hidden: setAttribute() to undefined followed by getAttribute() 
PASS option.hidden: setAttribute() to undefined followed by IDL get 
PASS option.hidden: setAttribute() to null followed by getAttribute() 
PASS option.hidden: setAttribute() to null followed by IDL get 
PASS option.hidden: setAttribute() to 7 followed by getAttribute() 
PASS option.hidden: setAttribute() to 7 followed by IDL get 
PASS option.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS option.hidden: setAttribute() to 1.5 followed by IDL get 
PASS option.hidden: setAttribute() to true followed by getAttribute() 
PASS option.hidden: setAttribute() to true followed by IDL get 
PASS option.hidden: setAttribute() to false followed by getAttribute() 
PASS option.hidden: setAttribute() to false followed by IDL get 
PASS option.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS option.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS option.hidden: setAttribute() to NaN followed by getAttribute() 
PASS option.hidden: setAttribute() to NaN followed by IDL get 
PASS option.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS option.hidden: setAttribute() to Infinity followed by IDL get 
PASS option.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS option.hidden: setAttribute() to -Infinity followed by IDL get 
PASS option.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS option.hidden: setAttribute() to "\0" followed by IDL get 
PASS option.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS option.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS option.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS option.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS option.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS option.hidden: setAttribute() to "hidden" followed by IDL get 
PASS option.hidden: IDL set to "" should not throw 
PASS option.hidden: IDL set to "" followed by hasAttribute() 
PASS option.hidden: IDL set to "" followed by IDL get 
PASS option.hidden: IDL set to " foo " should not throw 
PASS option.hidden: IDL set to " foo " followed by hasAttribute() 
PASS option.hidden: IDL set to " foo " followed by IDL get 
PASS option.hidden: IDL set to undefined should not throw 
PASS option.hidden: IDL set to undefined followed by hasAttribute() 
PASS option.hidden: IDL set to undefined followed by IDL get 
PASS option.hidden: IDL set to null should not throw 
PASS option.hidden: IDL set to null followed by hasAttribute() 
PASS option.hidden: IDL set to null followed by IDL get 
PASS option.hidden: IDL set to 7 should not throw 
PASS option.hidden: IDL set to 7 followed by hasAttribute() 
PASS option.hidden: IDL set to 7 followed by IDL get 
PASS option.hidden: IDL set to 1.5 should not throw 
PASS option.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS option.hidden: IDL set to 1.5 followed by IDL get 
PASS option.hidden: IDL set to true should not throw 
PASS option.hidden: IDL set to true followed by hasAttribute() 
PASS option.hidden: IDL set to true followed by IDL get 
PASS option.hidden: IDL set to false should not throw 
PASS option.hidden: IDL set to false followed by hasAttribute() 
PASS option.hidden: IDL set to false followed by IDL get 
PASS option.hidden: IDL set to object "[object Object]" should not throw 
PASS option.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS option.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS option.hidden: IDL set to NaN should not throw 
PASS option.hidden: IDL set to NaN followed by hasAttribute() 
PASS option.hidden: IDL set to NaN followed by IDL get 
PASS option.hidden: IDL set to Infinity should not throw 
PASS option.hidden: IDL set to Infinity followed by hasAttribute() 
PASS option.hidden: IDL set to Infinity followed by IDL get 
PASS option.hidden: IDL set to -Infinity should not throw 
PASS option.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS option.hidden: IDL set to -Infinity followed by IDL get 
PASS option.hidden: IDL set to "\0" should not throw 
PASS option.hidden: IDL set to "\0" followed by hasAttribute() 
PASS option.hidden: IDL set to "\0" followed by IDL get 
PASS option.hidden: IDL set to object "test-toString" should not throw 
PASS option.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS option.hidden: IDL set to object "test-toString" followed by IDL get 
PASS option.hidden: IDL set to object "test-valueOf" should not throw 
PASS option.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS option.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS option.accessKey: typeof IDL attribute 
PASS option.accessKey: IDL get with DOM attribute unset 
PASS option.accessKey: setAttribute() to "" followed by getAttribute() 
PASS option.accessKey: setAttribute() to "" followed by IDL get 
PASS option.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS option.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS option.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS option.accessKey: setAttribute() to undefined followed by IDL get 
PASS option.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS option.accessKey: setAttribute() to 7 followed by IDL get 
PASS option.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS option.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS option.accessKey: setAttribute() to true followed by getAttribute() 
PASS option.accessKey: setAttribute() to true followed by IDL get 
PASS option.accessKey: setAttribute() to false followed by getAttribute() 
PASS option.accessKey: setAttribute() to false followed by IDL get 
PASS option.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS option.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS option.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS option.accessKey: setAttribute() to NaN followed by IDL get 
PASS option.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS option.accessKey: setAttribute() to Infinity followed by IDL get 
PASS option.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS option.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS option.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS option.accessKey: setAttribute() to "\0" followed by IDL get 
PASS option.accessKey: setAttribute() to null followed by getAttribute() 
PASS option.accessKey: setAttribute() to null followed by IDL get 
PASS option.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS option.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS option.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS option.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS option.accessKey: IDL set to "" should not throw 
PASS option.accessKey: IDL set to "" followed by getAttribute() 
PASS option.accessKey: IDL set to "" followed by IDL get 
PASS option.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS option.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS option.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS option.accessKey: IDL set to undefined should not throw 
PASS option.accessKey: IDL set to undefined followed by getAttribute() 
PASS option.accessKey: IDL set to undefined followed by IDL get 
PASS option.accessKey: IDL set to 7 should not throw 
PASS option.accessKey: IDL set to 7 followed by getAttribute() 
PASS option.accessKey: IDL set to 7 followed by IDL get 
PASS option.accessKey: IDL set to 1.5 should not throw 
PASS option.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS option.accessKey: IDL set to 1.5 followed by IDL get 
PASS option.accessKey: IDL set to true should not throw 
PASS option.accessKey: IDL set to true followed by getAttribute() 
PASS option.accessKey: IDL set to true followed by IDL get 
PASS option.accessKey: IDL set to false should not throw 
PASS option.accessKey: IDL set to false followed by getAttribute() 
PASS option.accessKey: IDL set to false followed by IDL get 
PASS option.accessKey: IDL set to object "[object Object]" should not throw 
PASS option.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS option.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS option.accessKey: IDL set to NaN should not throw 
PASS option.accessKey: IDL set to NaN followed by getAttribute() 
PASS option.accessKey: IDL set to NaN followed by IDL get 
PASS option.accessKey: IDL set to Infinity should not throw 
PASS option.accessKey: IDL set to Infinity followed by getAttribute() 
PASS option.accessKey: IDL set to Infinity followed by IDL get 
PASS option.accessKey: IDL set to -Infinity should not throw 
PASS option.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS option.accessKey: IDL set to -Infinity followed by IDL get 
PASS option.accessKey: IDL set to "\0" should not throw 
PASS option.accessKey: IDL set to "\0" followed by getAttribute() 
PASS option.accessKey: IDL set to "\0" followed by IDL get 
PASS option.accessKey: IDL set to null should not throw 
PASS option.accessKey: IDL set to null followed by getAttribute() 
PASS option.accessKey: IDL set to null followed by IDL get 
PASS option.accessKey: IDL set to object "test-toString" should not throw 
PASS option.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS option.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS option.accessKey: IDL set to object "test-valueOf" should not throw 
PASS option.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS option.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS option.tabIndex: typeof IDL attribute 
PASS option.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS option.tabIndex: setAttribute() to -36 followed by IDL get 
PASS option.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS option.tabIndex: setAttribute() to -1 followed by IDL get 
PASS option.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS option.tabIndex: setAttribute() to 0 followed by IDL get 
PASS option.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS option.tabIndex: setAttribute() to 1 followed by IDL get 
PASS option.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL option.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS option.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL option.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS option.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS option.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS option.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS option.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS option.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS option.tabIndex: setAttribute() to "0" followed by IDL get 
PASS option.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS option.tabIndex: setAttribute() to "1" followed by IDL get 
PASS option.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS option.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS option.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS option.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS option.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS option.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS option.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS option.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS option.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS option.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS option.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS option.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS option.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS option.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS option.tabIndex: IDL set to -36 should not throw 
PASS option.tabIndex: IDL set to -36 followed by getAttribute() 
PASS option.tabIndex: IDL set to -36 followed by IDL get 
PASS option.tabIndex: IDL set to -1 should not throw 
PASS option.tabIndex: IDL set to -1 followed by getAttribute() 
PASS option.tabIndex: IDL set to -1 followed by IDL get 
PASS option.tabIndex: IDL set to 0 should not throw 
PASS option.tabIndex: IDL set to 0 followed by getAttribute() 
PASS option.tabIndex: IDL set to 0 followed by IDL get 
PASS option.tabIndex: IDL set to 1 should not throw 
PASS option.tabIndex: IDL set to 1 followed by getAttribute() 
PASS option.tabIndex: IDL set to 1 followed by IDL get 
PASS option.tabIndex: IDL set to 2147483647 should not throw 
PASS option.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL option.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS option.tabIndex: IDL set to -2147483648 should not throw 
PASS option.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL option.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS option.disabled: typeof IDL attribute 
PASS option.disabled: IDL get with DOM attribute unset 
PASS option.disabled: setAttribute() to "" followed by getAttribute() 
PASS option.disabled: setAttribute() to "" followed by IDL get 
PASS option.disabled: setAttribute() to " foo " followed by getAttribute() 
PASS option.disabled: setAttribute() to " foo " followed by IDL get 
PASS option.disabled: setAttribute() to undefined followed by getAttribute() 
PASS option.disabled: setAttribute() to undefined followed by IDL get 
PASS option.disabled: setAttribute() to null followed by getAttribute() 
PASS option.disabled: setAttribute() to null followed by IDL get 
PASS option.disabled: setAttribute() to 7 followed by getAttribute() 
PASS option.disabled: setAttribute() to 7 followed by IDL get 
PASS option.disabled: setAttribute() to 1.5 followed by getAttribute() 
PASS option.disabled: setAttribute() to 1.5 followed by IDL get 
PASS option.disabled: setAttribute() to true followed by getAttribute() 
PASS option.disabled: setAttribute() to true followed by IDL get 
PASS option.disabled: setAttribute() to false followed by getAttribute() 
PASS option.disabled: setAttribute() to false followed by IDL get 
PASS option.disabled: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS option.disabled: setAttribute() to object "[object Object]" followed by IDL get 
PASS option.disabled: setAttribute() to NaN followed by getAttribute() 
PASS option.disabled: setAttribute() to NaN followed by IDL get 
PASS option.disabled: setAttribute() to Infinity followed by getAttribute() 
PASS option.disabled: setAttribute() to Infinity followed by IDL get 
PASS option.disabled: setAttribute() to -Infinity followed by getAttribute() 
PASS option.disabled: setAttribute() to -Infinity followed by IDL get 
PASS option.disabled: setAttribute() to "\0" followed by getAttribute() 
PASS option.disabled: setAttribute() to "\0" followed by IDL get 
PASS option.disabled: setAttribute() to object "test-toString" followed by getAttribute() 
PASS option.disabled: setAttribute() to object "test-toString" followed by IDL get 
PASS option.disabled: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS option.disabled: setAttribute() to object "test-valueOf" followed by IDL get 
PASS option.disabled: setAttribute() to "disabled" followed by getAttribute() 
PASS option.disabled: setAttribute() to "disabled" followed by IDL get 
PASS option.disabled: IDL set to "" should not throw 
PASS option.disabled: IDL set to "" followed by hasAttribute() 
PASS option.disabled: IDL set to "" followed by IDL get 
PASS option.disabled: IDL set to " foo " should not throw 
PASS option.disabled: IDL set to " foo " followed by hasAttribute() 
PASS option.disabled: IDL set to " foo " followed by IDL get 
PASS option.disabled: IDL set to undefined should not throw 
PASS option.disabled: IDL set to undefined followed by hasAttribute() 
PASS option.disabled: IDL set to undefined followed by IDL get 
PASS option.disabled: IDL set to null should not throw 
PASS option.disabled: IDL set to null followed by hasAttribute() 
PASS option.disabled: IDL set to null followed by IDL get 
PASS option.disabled: IDL set to 7 should not throw 
PASS option.disabled: IDL set to 7 followed by hasAttribute() 
PASS option.disabled: IDL set to 7 followed by IDL get 
PASS option.disabled: IDL set to 1.5 should not throw 
PASS option.disabled: IDL set to 1.5 followed by hasAttribute() 
PASS option.disabled: IDL set to 1.5 followed by IDL get 
PASS option.disabled: IDL set to true should not throw 
PASS option.disabled: IDL set to true followed by hasAttribute() 
PASS option.disabled: IDL set to true followed by IDL get 
PASS option.disabled: IDL set to false should not throw 
PASS option.disabled: IDL set to false followed by hasAttribute() 
PASS option.disabled: IDL set to false followed by IDL get 
PASS option.disabled: IDL set to object "[object Object]" should not throw 
PASS option.disabled: IDL set to object "[object Object]" followed by hasAttribute() 
PASS option.disabled: IDL set to object "[object Object]" followed by IDL get 
PASS option.disabled: IDL set to NaN should not throw 
PASS option.disabled: IDL set to NaN followed by hasAttribute() 
PASS option.disabled: IDL set to NaN followed by IDL get 
PASS option.disabled: IDL set to Infinity should not throw 
PASS option.disabled: IDL set to Infinity followed by hasAttribute() 
PASS option.disabled: IDL set to Infinity followed by IDL get 
PASS option.disabled: IDL set to -Infinity should not throw 
PASS option.disabled: IDL set to -Infinity followed by hasAttribute() 
PASS option.disabled: IDL set to -Infinity followed by IDL get 
PASS option.disabled: IDL set to "\0" should not throw 
PASS option.disabled: IDL set to "\0" followed by hasAttribute() 
PASS option.disabled: IDL set to "\0" followed by IDL get 
PASS option.disabled: IDL set to object "test-toString" should not throw 
PASS option.disabled: IDL set to object "test-toString" followed by hasAttribute() 
PASS option.disabled: IDL set to object "test-toString" followed by IDL get 
PASS option.disabled: IDL set to object "test-valueOf" should not throw 
PASS option.disabled: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS option.disabled: IDL set to object "test-valueOf" followed by IDL get 
PASS option.label: typeof IDL attribute 
PASS option.label: IDL get with DOM attribute unset 
PASS option.label: IDL set to "" should not throw 
PASS option.label: IDL set to "" followed by getAttribute() 
PASS option.label: IDL set to "" followed by IDL get 
PASS option.label: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS option.label: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL option.label: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo"
PASS option.label: IDL set to undefined should not throw 
PASS option.label: IDL set to undefined followed by getAttribute() 
PASS option.label: IDL set to undefined followed by IDL get 
PASS option.label: IDL set to 7 should not throw 
PASS option.label: IDL set to 7 followed by getAttribute() 
PASS option.label: IDL set to 7 followed by IDL get 
PASS option.label: IDL set to 1.5 should not throw 
PASS option.label: IDL set to 1.5 followed by getAttribute() 
PASS option.label: IDL set to 1.5 followed by IDL get 
PASS option.label: IDL set to true should not throw 
PASS option.label: IDL set to true followed by getAttribute() 
PASS option.label: IDL set to true followed by IDL get 
PASS option.label: IDL set to false should not throw 
PASS option.label: IDL set to false followed by getAttribute() 
PASS option.label: IDL set to false followed by IDL get 
PASS option.label: IDL set to object "[object Object]" should not throw 
PASS option.label: IDL set to object "[object Object]" followed by getAttribute() 
PASS option.label: IDL set to object "[object Object]" followed by IDL get 
PASS option.label: IDL set to NaN should not throw 
PASS option.label: IDL set to NaN followed by getAttribute() 
PASS option.label: IDL set to NaN followed by IDL get 
PASS option.label: IDL set to Infinity should not throw 
PASS option.label: IDL set to Infinity followed by getAttribute() 
PASS option.label: IDL set to Infinity followed by IDL get 
PASS option.label: IDL set to -Infinity should not throw 
PASS option.label: IDL set to -Infinity followed by getAttribute() 
PASS option.label: IDL set to -Infinity followed by IDL get 
PASS option.label: IDL set to "\0" should not throw 
PASS option.label: IDL set to "\0" followed by getAttribute() 
PASS option.label: IDL set to "\0" followed by IDL get 
PASS option.label: IDL set to null should not throw 
PASS option.label: IDL set to null followed by getAttribute() 
PASS option.label: IDL set to null followed by IDL get 
PASS option.label: IDL set to object "test-toString" should not throw 
PASS option.label: IDL set to object "test-toString" followed by getAttribute() 
PASS option.label: IDL set to object "test-toString" followed by IDL get 
PASS option.label: IDL set to object "test-valueOf" should not throw 
PASS option.label: IDL set to object "test-valueOf" followed by getAttribute() 
PASS option.label: IDL set to object "test-valueOf" followed by IDL get 
PASS option.defaultSelected (<option selected>): typeof IDL attribute 
PASS option.defaultSelected (<option selected>): IDL get with DOM attribute unset 
PASS option.defaultSelected (<option selected>): setAttribute() to "" followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to "" followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to " foo " followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to " foo " followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to undefined followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to undefined followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to null followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to null followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to 7 followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to 7 followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to 1.5 followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to 1.5 followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to true followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to true followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to false followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to false followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to object "[object Object]" followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to NaN followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to NaN followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to Infinity followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to Infinity followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to -Infinity followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to -Infinity followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to "\0" followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to "\0" followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to object "test-toString" followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS option.defaultSelected (<option selected>): setAttribute() to "selected" followed by getAttribute() 
PASS option.defaultSelected (<option selected>): setAttribute() to "selected" followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to "" should not throw 
PASS option.defaultSelected (<option selected>): IDL set to "" followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to "" followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to " foo " should not throw 
PASS option.defaultSelected (<option selected>): IDL set to " foo " followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to " foo " followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to undefined should not throw 
PASS option.defaultSelected (<option selected>): IDL set to undefined followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to undefined followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to null should not throw 
PASS option.defaultSelected (<option selected>): IDL set to null followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to null followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to 7 should not throw 
PASS option.defaultSelected (<option selected>): IDL set to 7 followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to 7 followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to 1.5 should not throw 
PASS option.defaultSelected (<option selected>): IDL set to 1.5 followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to 1.5 followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to true should not throw 
PASS option.defaultSelected (<option selected>): IDL set to true followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to true followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to false should not throw 
PASS option.defaultSelected (<option selected>): IDL set to false followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to false followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to object "[object Object]" should not throw 
PASS option.defaultSelected (<option selected>): IDL set to object "[object Object]" followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to object "[object Object]" followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to NaN should not throw 
PASS option.defaultSelected (<option selected>): IDL set to NaN followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to NaN followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to Infinity should not throw 
PASS option.defaultSelected (<option selected>): IDL set to Infinity followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to Infinity followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to -Infinity should not throw 
PASS option.defaultSelected (<option selected>): IDL set to -Infinity followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to -Infinity followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to "\0" should not throw 
PASS option.defaultSelected (<option selected>): IDL set to "\0" followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to "\0" followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to object "test-toString" should not throw 
PASS option.defaultSelected (<option selected>): IDL set to object "test-toString" followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to object "test-toString" followed by IDL get 
PASS option.defaultSelected (<option selected>): IDL set to object "test-valueOf" should not throw 
PASS option.defaultSelected (<option selected>): IDL set to object "test-valueOf" followed by hasAttribute() 
PASS option.defaultSelected (<option selected>): IDL set to object "test-valueOf" followed by IDL get 
PASS option.value: typeof IDL attribute 
PASS option.value: IDL get with DOM attribute unset 
PASS option.value: IDL set to "" should not throw 
PASS option.value: IDL set to "" followed by getAttribute() 
PASS option.value: IDL set to "" followed by IDL get 
PASS option.value: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS option.value: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS option.value: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS option.value: IDL set to undefined should not throw 
PASS option.value: IDL set to undefined followed by getAttribute() 
PASS option.value: IDL set to undefined followed by IDL get 
PASS option.value: IDL set to 7 should not throw 
PASS option.value: IDL set to 7 followed by getAttribute() 
PASS option.value: IDL set to 7 followed by IDL get 
PASS option.value: IDL set to 1.5 should not throw 
PASS option.value: IDL set to 1.5 followed by getAttribute() 
PASS option.value: IDL set to 1.5 followed by IDL get 
PASS option.value: IDL set to true should not throw 
PASS option.value: IDL set to true followed by getAttribute() 
PASS option.value: IDL set to true followed by IDL get 
PASS option.value: IDL set to false should not throw 
PASS option.value: IDL set to false followed by getAttribute() 
PASS option.value: IDL set to false followed by IDL get 
PASS option.value: IDL set to object "[object Object]" should not throw 
PASS option.value: IDL set to object "[object Object]" followed by getAttribute() 
PASS option.value: IDL set to object "[object Object]" followed by IDL get 
PASS option.value: IDL set to NaN should not throw 
PASS option.value: IDL set to NaN followed by getAttribute() 
PASS option.value: IDL set to NaN followed by IDL get 
PASS option.value: IDL set to Infinity should not throw 
PASS option.value: IDL set to Infinity followed by getAttribute() 
PASS option.value: IDL set to Infinity followed by IDL get 
PASS option.value: IDL set to -Infinity should not throw 
PASS option.value: IDL set to -Infinity followed by getAttribute() 
PASS option.value: IDL set to -Infinity followed by IDL get 
PASS option.value: IDL set to "\0" should not throw 
PASS option.value: IDL set to "\0" followed by getAttribute() 
PASS option.value: IDL set to "\0" followed by IDL get 
PASS option.value: IDL set to null should not throw 
PASS option.value: IDL set to null followed by getAttribute() 
PASS option.value: IDL set to null followed by IDL get 
PASS option.value: IDL set to object "test-toString" should not throw 
PASS option.value: IDL set to object "test-toString" followed by getAttribute() 
PASS option.value: IDL set to object "test-toString" followed by IDL get 
PASS option.value: IDL set to object "test-valueOf" should not throw 
PASS option.value: IDL set to object "test-valueOf" followed by getAttribute() 
PASS option.value: IDL set to object "test-valueOf" followed by IDL get 
FAIL option.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL option.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS option.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL option.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL option.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL option.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to null followed by getAttribute() 
FAIL option.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL option.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL option.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to true followed by getAttribute() 
FAIL option.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to false followed by getAttribute() 
FAIL option.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL option.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL option.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL option.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL option.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL option.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL option.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL option.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL option.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS option.itemScope: IDL set to "" should not throw 
FAIL option.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL option.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS option.itemScope: IDL set to " foo " should not throw 
PASS option.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL option.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS option.itemScope: IDL set to undefined should not throw 
FAIL option.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL option.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS option.itemScope: IDL set to null should not throw 
FAIL option.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL option.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS option.itemScope: IDL set to 7 should not throw 
PASS option.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL option.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS option.itemScope: IDL set to 1.5 should not throw 
PASS option.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL option.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS option.itemScope: IDL set to true should not throw 
PASS option.itemScope: IDL set to true followed by hasAttribute() 
PASS option.itemScope: IDL set to true followed by IDL get 
PASS option.itemScope: IDL set to false should not throw 
FAIL option.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS option.itemScope: IDL set to false followed by IDL get 
PASS option.itemScope: IDL set to object "[object Object]" should not throw 
PASS option.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL option.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS option.itemScope: IDL set to NaN should not throw 
FAIL option.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL option.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS option.itemScope: IDL set to Infinity should not throw 
PASS option.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL option.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS option.itemScope: IDL set to -Infinity should not throw 
PASS option.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL option.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS option.itemScope: IDL set to "\0" should not throw 
PASS option.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL option.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS option.itemScope: IDL set to object "test-toString" should not throw 
PASS option.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL option.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS option.itemScope: IDL set to object "test-valueOf" should not throw 
PASS option.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL option.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL option.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL option.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS option.itemId: setAttribute() to "" followed by getAttribute() 
FAIL option.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS option.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL option.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS option.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL option.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS option.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL option.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS option.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL option.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS option.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL option.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS option.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL option.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS option.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL option.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS option.itemId: setAttribute() to true followed by getAttribute() 
FAIL option.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS option.itemId: setAttribute() to false followed by getAttribute() 
FAIL option.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS option.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL option.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS option.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL option.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS option.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL option.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS option.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL option.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS option.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL option.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS option.itemId: setAttribute() to null followed by getAttribute() 
FAIL option.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS option.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL option.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS option.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL option.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS option.itemId: IDL set to "" should not throw 
FAIL option.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL option.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS option.itemId: IDL set to " foo " should not throw 
FAIL option.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL option.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS option.itemId: IDL set to "http://site.example/" should not throw 
FAIL option.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS option.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS option.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL option.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL option.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS option.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL option.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL option.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS option.itemId: IDL set to undefined should not throw 
FAIL option.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL option.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS option.itemId: IDL set to 7 should not throw 
FAIL option.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL option.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS option.itemId: IDL set to 1.5 should not throw 
FAIL option.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL option.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS option.itemId: IDL set to true should not throw 
FAIL option.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL option.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS option.itemId: IDL set to false should not throw 
FAIL option.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL option.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS option.itemId: IDL set to object "[object Object]" should not throw 
FAIL option.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL option.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS option.itemId: IDL set to NaN should not throw 
FAIL option.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL option.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS option.itemId: IDL set to Infinity should not throw 
FAIL option.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL option.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS option.itemId: IDL set to -Infinity should not throw 
FAIL option.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL option.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS option.itemId: IDL set to "\0" should not throw 
FAIL option.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL option.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS option.itemId: IDL set to null should not throw 
FAIL option.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL option.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS option.itemId: IDL set to object "test-toString" should not throw 
FAIL option.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL option.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS option.itemId: IDL set to object "test-valueOf" should not throw 
PASS option.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL option.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS textarea.title: typeof IDL attribute 
PASS textarea.title: IDL get with DOM attribute unset 
PASS textarea.title: setAttribute() to "" followed by getAttribute() 
PASS textarea.title: setAttribute() to "" followed by IDL get 
PASS textarea.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.title: setAttribute() to undefined followed by getAttribute() 
PASS textarea.title: setAttribute() to undefined followed by IDL get 
PASS textarea.title: setAttribute() to 7 followed by getAttribute() 
PASS textarea.title: setAttribute() to 7 followed by IDL get 
PASS textarea.title: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.title: setAttribute() to 1.5 followed by IDL get 
PASS textarea.title: setAttribute() to true followed by getAttribute() 
PASS textarea.title: setAttribute() to true followed by IDL get 
PASS textarea.title: setAttribute() to false followed by getAttribute() 
PASS textarea.title: setAttribute() to false followed by IDL get 
PASS textarea.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.title: setAttribute() to NaN followed by getAttribute() 
PASS textarea.title: setAttribute() to NaN followed by IDL get 
PASS textarea.title: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.title: setAttribute() to Infinity followed by IDL get 
PASS textarea.title: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.title: setAttribute() to -Infinity followed by IDL get 
PASS textarea.title: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.title: setAttribute() to "\0" followed by IDL get 
PASS textarea.title: setAttribute() to null followed by getAttribute() 
PASS textarea.title: setAttribute() to null followed by IDL get 
PASS textarea.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.title: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.title: IDL set to "" should not throw 
PASS textarea.title: IDL set to "" followed by getAttribute() 
PASS textarea.title: IDL set to "" followed by IDL get 
PASS textarea.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS textarea.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.title: IDL set to undefined should not throw 
PASS textarea.title: IDL set to undefined followed by getAttribute() 
PASS textarea.title: IDL set to undefined followed by IDL get 
PASS textarea.title: IDL set to 7 should not throw 
PASS textarea.title: IDL set to 7 followed by getAttribute() 
PASS textarea.title: IDL set to 7 followed by IDL get 
PASS textarea.title: IDL set to 1.5 should not throw 
PASS textarea.title: IDL set to 1.5 followed by getAttribute() 
PASS textarea.title: IDL set to 1.5 followed by IDL get 
PASS textarea.title: IDL set to true should not throw 
PASS textarea.title: IDL set to true followed by getAttribute() 
PASS textarea.title: IDL set to true followed by IDL get 
PASS textarea.title: IDL set to false should not throw 
PASS textarea.title: IDL set to false followed by getAttribute() 
PASS textarea.title: IDL set to false followed by IDL get 
PASS textarea.title: IDL set to object "[object Object]" should not throw 
PASS textarea.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS textarea.title: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.title: IDL set to NaN should not throw 
PASS textarea.title: IDL set to NaN followed by getAttribute() 
PASS textarea.title: IDL set to NaN followed by IDL get 
PASS textarea.title: IDL set to Infinity should not throw 
PASS textarea.title: IDL set to Infinity followed by getAttribute() 
PASS textarea.title: IDL set to Infinity followed by IDL get 
PASS textarea.title: IDL set to -Infinity should not throw 
PASS textarea.title: IDL set to -Infinity followed by getAttribute() 
PASS textarea.title: IDL set to -Infinity followed by IDL get 
PASS textarea.title: IDL set to "\0" should not throw 
PASS textarea.title: IDL set to "\0" followed by getAttribute() 
PASS textarea.title: IDL set to "\0" followed by IDL get 
PASS textarea.title: IDL set to null should not throw 
PASS textarea.title: IDL set to null followed by getAttribute() 
PASS textarea.title: IDL set to null followed by IDL get 
PASS textarea.title: IDL set to object "test-toString" should not throw 
PASS textarea.title: IDL set to object "test-toString" followed by getAttribute() 
PASS textarea.title: IDL set to object "test-toString" followed by IDL get 
PASS textarea.title: IDL set to object "test-valueOf" should not throw 
PASS textarea.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS textarea.title: IDL set to object "test-valueOf" followed by IDL get 
PASS textarea.lang: typeof IDL attribute 
PASS textarea.lang: IDL get with DOM attribute unset 
PASS textarea.lang: setAttribute() to "" followed by getAttribute() 
PASS textarea.lang: setAttribute() to "" followed by IDL get 
PASS textarea.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.lang: setAttribute() to undefined followed by getAttribute() 
PASS textarea.lang: setAttribute() to undefined followed by IDL get 
PASS textarea.lang: setAttribute() to 7 followed by getAttribute() 
PASS textarea.lang: setAttribute() to 7 followed by IDL get 
PASS textarea.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.lang: setAttribute() to 1.5 followed by IDL get 
PASS textarea.lang: setAttribute() to true followed by getAttribute() 
PASS textarea.lang: setAttribute() to true followed by IDL get 
PASS textarea.lang: setAttribute() to false followed by getAttribute() 
PASS textarea.lang: setAttribute() to false followed by IDL get 
PASS textarea.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.lang: setAttribute() to NaN followed by getAttribute() 
PASS textarea.lang: setAttribute() to NaN followed by IDL get 
PASS textarea.lang: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.lang: setAttribute() to Infinity followed by IDL get 
PASS textarea.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.lang: setAttribute() to -Infinity followed by IDL get 
PASS textarea.lang: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.lang: setAttribute() to "\0" followed by IDL get 
PASS textarea.lang: setAttribute() to null followed by getAttribute() 
PASS textarea.lang: setAttribute() to null followed by IDL get 
PASS textarea.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.lang: IDL set to "" should not throw 
PASS textarea.lang: IDL set to "" followed by getAttribute() 
PASS textarea.lang: IDL set to "" followed by IDL get 
PASS textarea.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS textarea.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.lang: IDL set to undefined should not throw 
PASS textarea.lang: IDL set to undefined followed by getAttribute() 
PASS textarea.lang: IDL set to undefined followed by IDL get 
PASS textarea.lang: IDL set to 7 should not throw 
PASS textarea.lang: IDL set to 7 followed by getAttribute() 
PASS textarea.lang: IDL set to 7 followed by IDL get 
PASS textarea.lang: IDL set to 1.5 should not throw 
PASS textarea.lang: IDL set to 1.5 followed by getAttribute() 
PASS textarea.lang: IDL set to 1.5 followed by IDL get 
PASS textarea.lang: IDL set to true should not throw 
PASS textarea.lang: IDL set to true followed by getAttribute() 
PASS textarea.lang: IDL set to true followed by IDL get 
PASS textarea.lang: IDL set to false should not throw 
PASS textarea.lang: IDL set to false followed by getAttribute() 
PASS textarea.lang: IDL set to false followed by IDL get 
PASS textarea.lang: IDL set to object "[object Object]" should not throw 
PASS textarea.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS textarea.lang: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.lang: IDL set to NaN should not throw 
PASS textarea.lang: IDL set to NaN followed by getAttribute() 
PASS textarea.lang: IDL set to NaN followed by IDL get 
PASS textarea.lang: IDL set to Infinity should not throw 
PASS textarea.lang: IDL set to Infinity followed by getAttribute() 
PASS textarea.lang: IDL set to Infinity followed by IDL get 
PASS textarea.lang: IDL set to -Infinity should not throw 
PASS textarea.lang: IDL set to -Infinity followed by getAttribute() 
PASS textarea.lang: IDL set to -Infinity followed by IDL get 
PASS textarea.lang: IDL set to "\0" should not throw 
PASS textarea.lang: IDL set to "\0" followed by getAttribute() 
PASS textarea.lang: IDL set to "\0" followed by IDL get 
PASS textarea.lang: IDL set to null should not throw 
PASS textarea.lang: IDL set to null followed by getAttribute() 
PASS textarea.lang: IDL set to null followed by IDL get 
PASS textarea.lang: IDL set to object "test-toString" should not throw 
PASS textarea.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS textarea.lang: IDL set to object "test-toString" followed by IDL get 
PASS textarea.lang: IDL set to object "test-valueOf" should not throw 
PASS textarea.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS textarea.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS textarea.dir: typeof IDL attribute 
PASS textarea.dir: IDL get with DOM attribute unset 
PASS textarea.dir: setAttribute() to "" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "" followed by IDL get 
PASS textarea.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.dir: setAttribute() to undefined followed by getAttribute() 
PASS textarea.dir: setAttribute() to undefined followed by IDL get 
PASS textarea.dir: setAttribute() to 7 followed by getAttribute() 
PASS textarea.dir: setAttribute() to 7 followed by IDL get 
PASS textarea.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.dir: setAttribute() to 1.5 followed by IDL get 
PASS textarea.dir: setAttribute() to true followed by getAttribute() 
PASS textarea.dir: setAttribute() to true followed by IDL get 
PASS textarea.dir: setAttribute() to false followed by getAttribute() 
PASS textarea.dir: setAttribute() to false followed by IDL get 
PASS textarea.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.dir: setAttribute() to NaN followed by getAttribute() 
PASS textarea.dir: setAttribute() to NaN followed by IDL get 
PASS textarea.dir: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.dir: setAttribute() to Infinity followed by IDL get 
PASS textarea.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.dir: setAttribute() to -Infinity followed by IDL get 
PASS textarea.dir: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "\0" followed by IDL get 
PASS textarea.dir: setAttribute() to null followed by getAttribute() 
PASS textarea.dir: setAttribute() to null followed by IDL get 
PASS textarea.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "ltr" followed by IDL get 
PASS textarea.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "xltr" followed by IDL get 
PASS textarea.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS textarea.dir: setAttribute() to "tr" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "tr" followed by IDL get 
PASS textarea.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "LTR" followed by IDL get 
PASS textarea.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "rtl" followed by IDL get 
PASS textarea.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "xrtl" followed by IDL get 
PASS textarea.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS textarea.dir: setAttribute() to "tl" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "tl" followed by IDL get 
PASS textarea.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "RTL" followed by IDL get 
PASS textarea.dir: setAttribute() to "auto" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "auto" followed by IDL get 
PASS textarea.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "xauto" followed by IDL get 
PASS textarea.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "auto\0" followed by IDL get 
PASS textarea.dir: setAttribute() to "uto" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "uto" followed by IDL get 
PASS textarea.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS textarea.dir: setAttribute() to "AUTO" followed by IDL get 
PASS textarea.dir: IDL set to "" should not throw 
PASS textarea.dir: IDL set to "" followed by getAttribute() 
PASS textarea.dir: IDL set to "" followed by IDL get 
PASS textarea.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS textarea.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.dir: IDL set to undefined should not throw 
PASS textarea.dir: IDL set to undefined followed by getAttribute() 
PASS textarea.dir: IDL set to undefined followed by IDL get 
PASS textarea.dir: IDL set to 7 should not throw 
PASS textarea.dir: IDL set to 7 followed by getAttribute() 
PASS textarea.dir: IDL set to 7 followed by IDL get 
PASS textarea.dir: IDL set to 1.5 should not throw 
PASS textarea.dir: IDL set to 1.5 followed by getAttribute() 
PASS textarea.dir: IDL set to 1.5 followed by IDL get 
PASS textarea.dir: IDL set to true should not throw 
PASS textarea.dir: IDL set to true followed by getAttribute() 
PASS textarea.dir: IDL set to true followed by IDL get 
PASS textarea.dir: IDL set to false should not throw 
PASS textarea.dir: IDL set to false followed by getAttribute() 
PASS textarea.dir: IDL set to false followed by IDL get 
PASS textarea.dir: IDL set to object "[object Object]" should not throw 
PASS textarea.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS textarea.dir: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.dir: IDL set to NaN should not throw 
PASS textarea.dir: IDL set to NaN followed by getAttribute() 
PASS textarea.dir: IDL set to NaN followed by IDL get 
PASS textarea.dir: IDL set to Infinity should not throw 
PASS textarea.dir: IDL set to Infinity followed by getAttribute() 
PASS textarea.dir: IDL set to Infinity followed by IDL get 
PASS textarea.dir: IDL set to -Infinity should not throw 
PASS textarea.dir: IDL set to -Infinity followed by getAttribute() 
PASS textarea.dir: IDL set to -Infinity followed by IDL get 
PASS textarea.dir: IDL set to "\0" should not throw 
PASS textarea.dir: IDL set to "\0" followed by getAttribute() 
PASS textarea.dir: IDL set to "\0" followed by IDL get 
PASS textarea.dir: IDL set to null should not throw 
PASS textarea.dir: IDL set to null followed by IDL get 
PASS textarea.dir: IDL set to object "test-toString" should not throw 
PASS textarea.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS textarea.dir: IDL set to object "test-toString" followed by IDL get 
PASS textarea.dir: IDL set to object "test-valueOf" should not throw 
PASS textarea.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS textarea.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS textarea.dir: IDL set to "ltr" should not throw 
PASS textarea.dir: IDL set to "ltr" followed by getAttribute() 
PASS textarea.dir: IDL set to "ltr" followed by IDL get 
PASS textarea.dir: IDL set to "xltr" should not throw 
PASS textarea.dir: IDL set to "xltr" followed by getAttribute() 
PASS textarea.dir: IDL set to "xltr" followed by IDL get 
PASS textarea.dir: IDL set to "ltr\0" should not throw 
PASS textarea.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS textarea.dir: IDL set to "ltr\0" followed by IDL get 
PASS textarea.dir: IDL set to "tr" should not throw 
PASS textarea.dir: IDL set to "tr" followed by getAttribute() 
PASS textarea.dir: IDL set to "tr" followed by IDL get 
PASS textarea.dir: IDL set to "LTR" should not throw 
PASS textarea.dir: IDL set to "LTR" followed by getAttribute() 
PASS textarea.dir: IDL set to "LTR" followed by IDL get 
PASS textarea.dir: IDL set to "rtl" should not throw 
PASS textarea.dir: IDL set to "rtl" followed by getAttribute() 
PASS textarea.dir: IDL set to "rtl" followed by IDL get 
PASS textarea.dir: IDL set to "xrtl" should not throw 
PASS textarea.dir: IDL set to "xrtl" followed by getAttribute() 
PASS textarea.dir: IDL set to "xrtl" followed by IDL get 
PASS textarea.dir: IDL set to "rtl\0" should not throw 
PASS textarea.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS textarea.dir: IDL set to "rtl\0" followed by IDL get 
PASS textarea.dir: IDL set to "tl" should not throw 
PASS textarea.dir: IDL set to "tl" followed by getAttribute() 
PASS textarea.dir: IDL set to "tl" followed by IDL get 
PASS textarea.dir: IDL set to "RTL" should not throw 
PASS textarea.dir: IDL set to "RTL" followed by getAttribute() 
PASS textarea.dir: IDL set to "RTL" followed by IDL get 
PASS textarea.dir: IDL set to "auto" should not throw 
PASS textarea.dir: IDL set to "auto" followed by getAttribute() 
PASS textarea.dir: IDL set to "auto" followed by IDL get 
PASS textarea.dir: IDL set to "xauto" should not throw 
PASS textarea.dir: IDL set to "xauto" followed by getAttribute() 
PASS textarea.dir: IDL set to "xauto" followed by IDL get 
PASS textarea.dir: IDL set to "auto\0" should not throw 
PASS textarea.dir: IDL set to "auto\0" followed by getAttribute() 
PASS textarea.dir: IDL set to "auto\0" followed by IDL get 
PASS textarea.dir: IDL set to "uto" should not throw 
PASS textarea.dir: IDL set to "uto" followed by getAttribute() 
PASS textarea.dir: IDL set to "uto" followed by IDL get 
PASS textarea.dir: IDL set to "AUTO" should not throw 
PASS textarea.dir: IDL set to "AUTO" followed by getAttribute() 
PASS textarea.dir: IDL set to "AUTO" followed by IDL get 
PASS textarea.className (<textarea class>): typeof IDL attribute 
PASS textarea.className (<textarea class>): IDL get with DOM attribute unset 
PASS textarea.className (<textarea class>): setAttribute() to "" followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to "" followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to undefined followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to undefined followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to 7 followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to 7 followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to 1.5 followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to true followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to true followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to false followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to false followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to NaN followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to NaN followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to Infinity followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to Infinity followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to -Infinity followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to "\0" followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to "\0" followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to null followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to null followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.className (<textarea class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.className (<textarea class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to "" should not throw 
PASS textarea.className (<textarea class>): IDL set to "" followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to "" followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS textarea.className (<textarea class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to undefined should not throw 
PASS textarea.className (<textarea class>): IDL set to undefined followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to undefined followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to 7 should not throw 
PASS textarea.className (<textarea class>): IDL set to 7 followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to 7 followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to 1.5 should not throw 
PASS textarea.className (<textarea class>): IDL set to 1.5 followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to 1.5 followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to true should not throw 
PASS textarea.className (<textarea class>): IDL set to true followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to true followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to false should not throw 
PASS textarea.className (<textarea class>): IDL set to false followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to false followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to object "[object Object]" should not throw 
PASS textarea.className (<textarea class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to object "[object Object]" followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to NaN should not throw 
PASS textarea.className (<textarea class>): IDL set to NaN followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to NaN followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to Infinity should not throw 
PASS textarea.className (<textarea class>): IDL set to Infinity followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to Infinity followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to -Infinity should not throw 
PASS textarea.className (<textarea class>): IDL set to -Infinity followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to -Infinity followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to "\0" should not throw 
PASS textarea.className (<textarea class>): IDL set to "\0" followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to "\0" followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to null should not throw 
PASS textarea.className (<textarea class>): IDL set to null followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to null followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to object "test-toString" should not throw 
PASS textarea.className (<textarea class>): IDL set to object "test-toString" followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to object "test-toString" followed by IDL get 
PASS textarea.className (<textarea class>): IDL set to object "test-valueOf" should not throw 
PASS textarea.className (<textarea class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS textarea.className (<textarea class>): IDL set to object "test-valueOf" followed by IDL get 
PASS textarea.hidden: typeof IDL attribute 
PASS textarea.hidden: IDL get with DOM attribute unset 
PASS textarea.hidden: setAttribute() to "" followed by getAttribute() 
PASS textarea.hidden: setAttribute() to "" followed by IDL get 
PASS textarea.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS textarea.hidden: setAttribute() to " foo " followed by IDL get 
PASS textarea.hidden: setAttribute() to undefined followed by getAttribute() 
PASS textarea.hidden: setAttribute() to undefined followed by IDL get 
PASS textarea.hidden: setAttribute() to null followed by getAttribute() 
PASS textarea.hidden: setAttribute() to null followed by IDL get 
PASS textarea.hidden: setAttribute() to 7 followed by getAttribute() 
PASS textarea.hidden: setAttribute() to 7 followed by IDL get 
PASS textarea.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.hidden: setAttribute() to 1.5 followed by IDL get 
PASS textarea.hidden: setAttribute() to true followed by getAttribute() 
PASS textarea.hidden: setAttribute() to true followed by IDL get 
PASS textarea.hidden: setAttribute() to false followed by getAttribute() 
PASS textarea.hidden: setAttribute() to false followed by IDL get 
PASS textarea.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.hidden: setAttribute() to NaN followed by getAttribute() 
PASS textarea.hidden: setAttribute() to NaN followed by IDL get 
PASS textarea.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.hidden: setAttribute() to Infinity followed by IDL get 
PASS textarea.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.hidden: setAttribute() to -Infinity followed by IDL get 
PASS textarea.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.hidden: setAttribute() to "\0" followed by IDL get 
PASS textarea.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS textarea.hidden: setAttribute() to "hidden" followed by IDL get 
PASS textarea.hidden: IDL set to "" should not throw 
PASS textarea.hidden: IDL set to "" followed by hasAttribute() 
PASS textarea.hidden: IDL set to "" followed by IDL get 
PASS textarea.hidden: IDL set to " foo " should not throw 
PASS textarea.hidden: IDL set to " foo " followed by hasAttribute() 
PASS textarea.hidden: IDL set to " foo " followed by IDL get 
PASS textarea.hidden: IDL set to undefined should not throw 
PASS textarea.hidden: IDL set to undefined followed by hasAttribute() 
PASS textarea.hidden: IDL set to undefined followed by IDL get 
PASS textarea.hidden: IDL set to null should not throw 
PASS textarea.hidden: IDL set to null followed by hasAttribute() 
PASS textarea.hidden: IDL set to null followed by IDL get 
PASS textarea.hidden: IDL set to 7 should not throw 
PASS textarea.hidden: IDL set to 7 followed by hasAttribute() 
PASS textarea.hidden: IDL set to 7 followed by IDL get 
PASS textarea.hidden: IDL set to 1.5 should not throw 
PASS textarea.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS textarea.hidden: IDL set to 1.5 followed by IDL get 
PASS textarea.hidden: IDL set to true should not throw 
PASS textarea.hidden: IDL set to true followed by hasAttribute() 
PASS textarea.hidden: IDL set to true followed by IDL get 
PASS textarea.hidden: IDL set to false should not throw 
PASS textarea.hidden: IDL set to false followed by hasAttribute() 
PASS textarea.hidden: IDL set to false followed by IDL get 
PASS textarea.hidden: IDL set to object "[object Object]" should not throw 
PASS textarea.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS textarea.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.hidden: IDL set to NaN should not throw 
PASS textarea.hidden: IDL set to NaN followed by hasAttribute() 
PASS textarea.hidden: IDL set to NaN followed by IDL get 
PASS textarea.hidden: IDL set to Infinity should not throw 
PASS textarea.hidden: IDL set to Infinity followed by hasAttribute() 
PASS textarea.hidden: IDL set to Infinity followed by IDL get 
PASS textarea.hidden: IDL set to -Infinity should not throw 
PASS textarea.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS textarea.hidden: IDL set to -Infinity followed by IDL get 
PASS textarea.hidden: IDL set to "\0" should not throw 
PASS textarea.hidden: IDL set to "\0" followed by hasAttribute() 
PASS textarea.hidden: IDL set to "\0" followed by IDL get 
PASS textarea.hidden: IDL set to object "test-toString" should not throw 
PASS textarea.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS textarea.hidden: IDL set to object "test-toString" followed by IDL get 
PASS textarea.hidden: IDL set to object "test-valueOf" should not throw 
PASS textarea.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS textarea.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS textarea.accessKey: typeof IDL attribute 
PASS textarea.accessKey: IDL get with DOM attribute unset 
PASS textarea.accessKey: setAttribute() to "" followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to "" followed by IDL get 
PASS textarea.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to undefined followed by IDL get 
PASS textarea.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to 7 followed by IDL get 
PASS textarea.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS textarea.accessKey: setAttribute() to true followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to true followed by IDL get 
PASS textarea.accessKey: setAttribute() to false followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to false followed by IDL get 
PASS textarea.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to NaN followed by IDL get 
PASS textarea.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to Infinity followed by IDL get 
PASS textarea.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS textarea.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to "\0" followed by IDL get 
PASS textarea.accessKey: setAttribute() to null followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to null followed by IDL get 
PASS textarea.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.accessKey: IDL set to "" should not throw 
PASS textarea.accessKey: IDL set to "" followed by getAttribute() 
PASS textarea.accessKey: IDL set to "" followed by IDL get 
PASS textarea.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS textarea.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.accessKey: IDL set to undefined should not throw 
PASS textarea.accessKey: IDL set to undefined followed by getAttribute() 
PASS textarea.accessKey: IDL set to undefined followed by IDL get 
PASS textarea.accessKey: IDL set to 7 should not throw 
PASS textarea.accessKey: IDL set to 7 followed by getAttribute() 
PASS textarea.accessKey: IDL set to 7 followed by IDL get 
PASS textarea.accessKey: IDL set to 1.5 should not throw 
PASS textarea.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS textarea.accessKey: IDL set to 1.5 followed by IDL get 
PASS textarea.accessKey: IDL set to true should not throw 
PASS textarea.accessKey: IDL set to true followed by getAttribute() 
PASS textarea.accessKey: IDL set to true followed by IDL get 
PASS textarea.accessKey: IDL set to false should not throw 
PASS textarea.accessKey: IDL set to false followed by getAttribute() 
PASS textarea.accessKey: IDL set to false followed by IDL get 
PASS textarea.accessKey: IDL set to object "[object Object]" should not throw 
PASS textarea.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS textarea.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.accessKey: IDL set to NaN should not throw 
PASS textarea.accessKey: IDL set to NaN followed by getAttribute() 
PASS textarea.accessKey: IDL set to NaN followed by IDL get 
PASS textarea.accessKey: IDL set to Infinity should not throw 
PASS textarea.accessKey: IDL set to Infinity followed by getAttribute() 
PASS textarea.accessKey: IDL set to Infinity followed by IDL get 
PASS textarea.accessKey: IDL set to -Infinity should not throw 
PASS textarea.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS textarea.accessKey: IDL set to -Infinity followed by IDL get 
PASS textarea.accessKey: IDL set to "\0" should not throw 
PASS textarea.accessKey: IDL set to "\0" followed by getAttribute() 
PASS textarea.accessKey: IDL set to "\0" followed by IDL get 
PASS textarea.accessKey: IDL set to null should not throw 
PASS textarea.accessKey: IDL set to null followed by getAttribute() 
PASS textarea.accessKey: IDL set to null followed by IDL get 
PASS textarea.accessKey: IDL set to object "test-toString" should not throw 
PASS textarea.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS textarea.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS textarea.accessKey: IDL set to object "test-valueOf" should not throw 
PASS textarea.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS textarea.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS textarea.tabIndex: typeof IDL attribute 
PASS textarea.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to -36 followed by IDL get 
PASS textarea.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to -1 followed by IDL get 
PASS textarea.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to 0 followed by IDL get 
PASS textarea.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to 1 followed by IDL get 
PASS textarea.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL textarea.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS textarea.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL textarea.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS textarea.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS textarea.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS textarea.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to "0" followed by IDL get 
PASS textarea.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to "1" followed by IDL get 
PASS textarea.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS textarea.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS textarea.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS textarea.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS textarea.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS textarea.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS textarea.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS textarea.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS textarea.tabIndex: IDL set to -36 should not throw 
PASS textarea.tabIndex: IDL set to -36 followed by getAttribute() 
PASS textarea.tabIndex: IDL set to -36 followed by IDL get 
PASS textarea.tabIndex: IDL set to -1 should not throw 
PASS textarea.tabIndex: IDL set to -1 followed by getAttribute() 
PASS textarea.tabIndex: IDL set to -1 followed by IDL get 
PASS textarea.tabIndex: IDL set to 0 should not throw 
PASS textarea.tabIndex: IDL set to 0 followed by getAttribute() 
PASS textarea.tabIndex: IDL set to 0 followed by IDL get 
PASS textarea.tabIndex: IDL set to 1 should not throw 
PASS textarea.tabIndex: IDL set to 1 followed by getAttribute() 
PASS textarea.tabIndex: IDL set to 1 followed by IDL get 
PASS textarea.tabIndex: IDL set to 2147483647 should not throw 
PASS textarea.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL textarea.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS textarea.tabIndex: IDL set to -2147483648 should not throw 
PASS textarea.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL textarea.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS textarea.autofocus: typeof IDL attribute 
PASS textarea.autofocus: IDL get with DOM attribute unset 
PASS textarea.autofocus: setAttribute() to "" followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to "" followed by IDL get 
PASS textarea.autofocus: setAttribute() to " foo " followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to " foo " followed by IDL get 
PASS textarea.autofocus: setAttribute() to undefined followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to undefined followed by IDL get 
PASS textarea.autofocus: setAttribute() to null followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to null followed by IDL get 
PASS textarea.autofocus: setAttribute() to 7 followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to 7 followed by IDL get 
PASS textarea.autofocus: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to 1.5 followed by IDL get 
PASS textarea.autofocus: setAttribute() to true followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to true followed by IDL get 
PASS textarea.autofocus: setAttribute() to false followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to false followed by IDL get 
PASS textarea.autofocus: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.autofocus: setAttribute() to NaN followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to NaN followed by IDL get 
PASS textarea.autofocus: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to Infinity followed by IDL get 
PASS textarea.autofocus: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to -Infinity followed by IDL get 
PASS textarea.autofocus: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to "\0" followed by IDL get 
PASS textarea.autofocus: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.autofocus: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.autofocus: setAttribute() to "autofocus" followed by getAttribute() 
PASS textarea.autofocus: setAttribute() to "autofocus" followed by IDL get 
PASS textarea.autofocus: IDL set to "" should not throw 
PASS textarea.autofocus: IDL set to "" followed by hasAttribute() 
PASS textarea.autofocus: IDL set to "" followed by IDL get 
PASS textarea.autofocus: IDL set to " foo " should not throw 
PASS textarea.autofocus: IDL set to " foo " followed by hasAttribute() 
PASS textarea.autofocus: IDL set to " foo " followed by IDL get 
PASS textarea.autofocus: IDL set to undefined should not throw 
PASS textarea.autofocus: IDL set to undefined followed by hasAttribute() 
PASS textarea.autofocus: IDL set to undefined followed by IDL get 
PASS textarea.autofocus: IDL set to null should not throw 
PASS textarea.autofocus: IDL set to null followed by hasAttribute() 
PASS textarea.autofocus: IDL set to null followed by IDL get 
PASS textarea.autofocus: IDL set to 7 should not throw 
PASS textarea.autofocus: IDL set to 7 followed by hasAttribute() 
PASS textarea.autofocus: IDL set to 7 followed by IDL get 
PASS textarea.autofocus: IDL set to 1.5 should not throw 
PASS textarea.autofocus: IDL set to 1.5 followed by hasAttribute() 
PASS textarea.autofocus: IDL set to 1.5 followed by IDL get 
PASS textarea.autofocus: IDL set to true should not throw 
PASS textarea.autofocus: IDL set to true followed by hasAttribute() 
PASS textarea.autofocus: IDL set to true followed by IDL get 
PASS textarea.autofocus: IDL set to false should not throw 
PASS textarea.autofocus: IDL set to false followed by hasAttribute() 
PASS textarea.autofocus: IDL set to false followed by IDL get 
PASS textarea.autofocus: IDL set to object "[object Object]" should not throw 
PASS textarea.autofocus: IDL set to object "[object Object]" followed by hasAttribute() 
PASS textarea.autofocus: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.autofocus: IDL set to NaN should not throw 
PASS textarea.autofocus: IDL set to NaN followed by hasAttribute() 
PASS textarea.autofocus: IDL set to NaN followed by IDL get 
PASS textarea.autofocus: IDL set to Infinity should not throw 
PASS textarea.autofocus: IDL set to Infinity followed by hasAttribute() 
PASS textarea.autofocus: IDL set to Infinity followed by IDL get 
PASS textarea.autofocus: IDL set to -Infinity should not throw 
PASS textarea.autofocus: IDL set to -Infinity followed by hasAttribute() 
PASS textarea.autofocus: IDL set to -Infinity followed by IDL get 
PASS textarea.autofocus: IDL set to "\0" should not throw 
PASS textarea.autofocus: IDL set to "\0" followed by hasAttribute() 
PASS textarea.autofocus: IDL set to "\0" followed by IDL get 
PASS textarea.autofocus: IDL set to object "test-toString" should not throw 
PASS textarea.autofocus: IDL set to object "test-toString" followed by hasAttribute() 
PASS textarea.autofocus: IDL set to object "test-toString" followed by IDL get 
PASS textarea.autofocus: IDL set to object "test-valueOf" should not throw 
PASS textarea.autofocus: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS textarea.autofocus: IDL set to object "test-valueOf" followed by IDL get 
PASS textarea.cols: typeof IDL attribute 
PASS textarea.cols: IDL get with DOM attribute unset 
PASS textarea.cols: setAttribute() to -2147483649 followed by getAttribute() 
PASS textarea.cols: setAttribute() to -2147483649 followed by IDL get 
PASS textarea.cols: setAttribute() to -2147483648 followed by getAttribute() 
PASS textarea.cols: setAttribute() to -2147483648 followed by IDL get 
PASS textarea.cols: setAttribute() to -36 followed by getAttribute() 
PASS textarea.cols: setAttribute() to -36 followed by IDL get 
PASS textarea.cols: setAttribute() to -1 followed by getAttribute() 
PASS textarea.cols: setAttribute() to -1 followed by IDL get 
PASS textarea.cols: setAttribute() to 0 followed by getAttribute() 
PASS textarea.cols: setAttribute() to 0 followed by IDL get 
PASS textarea.cols: setAttribute() to 1 followed by getAttribute() 
PASS textarea.cols: setAttribute() to 1 followed by IDL get 
PASS textarea.cols: setAttribute() to 2147483647 followed by getAttribute() 
PASS textarea.cols: setAttribute() to 2147483647 followed by IDL get 
PASS textarea.cols: setAttribute() to 2147483648 followed by getAttribute() 
PASS textarea.cols: setAttribute() to 2147483648 followed by IDL get 
PASS textarea.cols: setAttribute() to 4294967295 followed by getAttribute() 
PASS textarea.cols: setAttribute() to 4294967295 followed by IDL get 
PASS textarea.cols: setAttribute() to 4294967296 followed by getAttribute() 
PASS textarea.cols: setAttribute() to 4294967296 followed by IDL get 
PASS textarea.cols: setAttribute() to "" followed by getAttribute() 
PASS textarea.cols: setAttribute() to "" followed by IDL get 
PASS textarea.cols: setAttribute() to "-1" followed by getAttribute() 
PASS textarea.cols: setAttribute() to "-1" followed by IDL get 
PASS textarea.cols: setAttribute() to "-0" followed by getAttribute() 
PASS textarea.cols: setAttribute() to "-0" followed by IDL get 
PASS textarea.cols: setAttribute() to "0" followed by getAttribute() 
PASS textarea.cols: setAttribute() to "0" followed by IDL get 
PASS textarea.cols: setAttribute() to "1" followed by getAttribute() 
PASS textarea.cols: setAttribute() to "1" followed by IDL get 
PASS textarea.cols: setAttribute() to "\t7" followed by getAttribute() 
PASS textarea.cols: setAttribute() to "\t7" followed by IDL get 
PASS textarea.cols: setAttribute() to "\v7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to "\v7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to "\f7" followed by getAttribute() 
PASS textarea.cols: setAttribute() to "\f7" followed by IDL get 
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.cols: setAttribute() to " 7" followed by IDL get 
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.cols: setAttribute() to " 7" followed by IDL get 
PASS textarea.cols: setAttribute() to "﻿7" followed by getAttribute() 
PASS textarea.cols: setAttribute() to "﻿7" followed by IDL get 
PASS textarea.cols: setAttribute() to "\n7" followed by getAttribute() 
PASS textarea.cols: setAttribute() to "\n7" followed by IDL get 
PASS textarea.cols: setAttribute() to "\r7" followed by getAttribute() 
PASS textarea.cols: setAttribute() to "\r7" followed by IDL get 
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.cols: setAttribute() to " 7" followed by IDL get 
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to "᠎7" followed by getAttribute() 
PASS textarea.cols: setAttribute() to "᠎7" followed by IDL get 
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to " 7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.cols: setAttribute() to " 7" followed by IDL get 
PASS textarea.cols: setAttribute() to "　7" followed by getAttribute() 
FAIL textarea.cols: setAttribute() to "　7" followed by IDL get assert_equals: expected 20 but got 7
PASS textarea.cols: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.cols: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.cols: setAttribute() to undefined followed by getAttribute() 
PASS textarea.cols: setAttribute() to undefined followed by IDL get 
PASS textarea.cols: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.cols: setAttribute() to 1.5 followed by IDL get 
PASS textarea.cols: setAttribute() to true followed by getAttribute() 
PASS textarea.cols: setAttribute() to true followed by IDL get 
PASS textarea.cols: setAttribute() to false followed by getAttribute() 
PASS textarea.cols: setAttribute() to false followed by IDL get 
PASS textarea.cols: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.cols: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.cols: setAttribute() to NaN followed by getAttribute() 
PASS textarea.cols: setAttribute() to NaN followed by IDL get 
PASS textarea.cols: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.cols: setAttribute() to Infinity followed by IDL get 
PASS textarea.cols: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.cols: setAttribute() to -Infinity followed by IDL get 
PASS textarea.cols: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.cols: setAttribute() to "\0" followed by IDL get 
PASS textarea.cols: setAttribute() to object "2" followed by getAttribute() 
PASS textarea.cols: setAttribute() to object "2" followed by IDL get 
PASS textarea.cols: setAttribute() to object "3" followed by getAttribute() 
PASS textarea.cols: setAttribute() to object "3" followed by IDL get 
FAIL textarea.cols: IDL set to 0 must throw INDEX_SIZE_ERR assert_throws: function "function () {
                idlObj[idlName] = idlTests[..." did not throw
PASS textarea.cols: IDL set to 1 should not throw 
PASS textarea.cols: IDL set to 1 followed by getAttribute() 
PASS textarea.cols: IDL set to 1 followed by IDL get 
PASS textarea.cols: IDL set to 2147483647 should not throw 
PASS textarea.cols: IDL set to 2147483647 followed by getAttribute() 
PASS textarea.cols: IDL set to 2147483647 followed by IDL get 
PASS textarea.cols: IDL set to 2147483648 should not throw 
PASS textarea.cols: IDL set to 2147483648 followed by getAttribute() 
PASS textarea.cols: IDL set to 2147483648 followed by IDL get 
PASS textarea.cols: IDL set to 4294967295 should not throw 
PASS textarea.cols: IDL set to 4294967295 followed by getAttribute() 
PASS textarea.cols: IDL set to 4294967295 followed by IDL get 
PASS textarea.dirName: typeof IDL attribute 
PASS textarea.dirName: IDL get with DOM attribute unset 
PASS textarea.dirName: setAttribute() to "" followed by getAttribute() 
PASS textarea.dirName: setAttribute() to "" followed by IDL get 
PASS textarea.dirName: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.dirName: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.dirName: setAttribute() to undefined followed by getAttribute() 
PASS textarea.dirName: setAttribute() to undefined followed by IDL get 
PASS textarea.dirName: setAttribute() to 7 followed by getAttribute() 
PASS textarea.dirName: setAttribute() to 7 followed by IDL get 
PASS textarea.dirName: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.dirName: setAttribute() to 1.5 followed by IDL get 
PASS textarea.dirName: setAttribute() to true followed by getAttribute() 
PASS textarea.dirName: setAttribute() to true followed by IDL get 
PASS textarea.dirName: setAttribute() to false followed by getAttribute() 
PASS textarea.dirName: setAttribute() to false followed by IDL get 
PASS textarea.dirName: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.dirName: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.dirName: setAttribute() to NaN followed by getAttribute() 
PASS textarea.dirName: setAttribute() to NaN followed by IDL get 
PASS textarea.dirName: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.dirName: setAttribute() to Infinity followed by IDL get 
PASS textarea.dirName: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.dirName: setAttribute() to -Infinity followed by IDL get 
PASS textarea.dirName: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.dirName: setAttribute() to "\0" followed by IDL get 
PASS textarea.dirName: setAttribute() to null followed by getAttribute() 
PASS textarea.dirName: setAttribute() to null followed by IDL get 
PASS textarea.dirName: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.dirName: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.dirName: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.dirName: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.dirName: IDL set to "" should not throw 
PASS textarea.dirName: IDL set to "" followed by getAttribute() 
PASS textarea.dirName: IDL set to "" followed by IDL get 
PASS textarea.dirName: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS textarea.dirName: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.dirName: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.dirName: IDL set to undefined should not throw 
PASS textarea.dirName: IDL set to undefined followed by getAttribute() 
PASS textarea.dirName: IDL set to undefined followed by IDL get 
PASS textarea.dirName: IDL set to 7 should not throw 
PASS textarea.dirName: IDL set to 7 followed by getAttribute() 
PASS textarea.dirName: IDL set to 7 followed by IDL get 
PASS textarea.dirName: IDL set to 1.5 should not throw 
PASS textarea.dirName: IDL set to 1.5 followed by getAttribute() 
PASS textarea.dirName: IDL set to 1.5 followed by IDL get 
PASS textarea.dirName: IDL set to true should not throw 
PASS textarea.dirName: IDL set to true followed by getAttribute() 
PASS textarea.dirName: IDL set to true followed by IDL get 
PASS textarea.dirName: IDL set to false should not throw 
PASS textarea.dirName: IDL set to false followed by getAttribute() 
PASS textarea.dirName: IDL set to false followed by IDL get 
PASS textarea.dirName: IDL set to object "[object Object]" should not throw 
PASS textarea.dirName: IDL set to object "[object Object]" followed by getAttribute() 
PASS textarea.dirName: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.dirName: IDL set to NaN should not throw 
PASS textarea.dirName: IDL set to NaN followed by getAttribute() 
PASS textarea.dirName: IDL set to NaN followed by IDL get 
PASS textarea.dirName: IDL set to Infinity should not throw 
PASS textarea.dirName: IDL set to Infinity followed by getAttribute() 
PASS textarea.dirName: IDL set to Infinity followed by IDL get 
PASS textarea.dirName: IDL set to -Infinity should not throw 
PASS textarea.dirName: IDL set to -Infinity followed by getAttribute() 
PASS textarea.dirName: IDL set to -Infinity followed by IDL get 
PASS textarea.dirName: IDL set to "\0" should not throw 
PASS textarea.dirName: IDL set to "\0" followed by getAttribute() 
PASS textarea.dirName: IDL set to "\0" followed by IDL get 
PASS textarea.dirName: IDL set to null should not throw 
PASS textarea.dirName: IDL set to null followed by getAttribute() 
PASS textarea.dirName: IDL set to null followed by IDL get 
PASS textarea.dirName: IDL set to object "test-toString" should not throw 
PASS textarea.dirName: IDL set to object "test-toString" followed by getAttribute() 
PASS textarea.dirName: IDL set to object "test-toString" followed by IDL get 
PASS textarea.dirName: IDL set to object "test-valueOf" should not throw 
PASS textarea.dirName: IDL set to object "test-valueOf" followed by getAttribute() 
PASS textarea.dirName: IDL set to object "test-valueOf" followed by IDL get 
PASS textarea.disabled: typeof IDL attribute 
PASS textarea.disabled: IDL get with DOM attribute unset 
PASS textarea.disabled: setAttribute() to "" followed by getAttribute() 
PASS textarea.disabled: setAttribute() to "" followed by IDL get 
PASS textarea.disabled: setAttribute() to " foo " followed by getAttribute() 
PASS textarea.disabled: setAttribute() to " foo " followed by IDL get 
PASS textarea.disabled: setAttribute() to undefined followed by getAttribute() 
PASS textarea.disabled: setAttribute() to undefined followed by IDL get 
PASS textarea.disabled: setAttribute() to null followed by getAttribute() 
PASS textarea.disabled: setAttribute() to null followed by IDL get 
PASS textarea.disabled: setAttribute() to 7 followed by getAttribute() 
PASS textarea.disabled: setAttribute() to 7 followed by IDL get 
PASS textarea.disabled: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.disabled: setAttribute() to 1.5 followed by IDL get 
PASS textarea.disabled: setAttribute() to true followed by getAttribute() 
PASS textarea.disabled: setAttribute() to true followed by IDL get 
PASS textarea.disabled: setAttribute() to false followed by getAttribute() 
PASS textarea.disabled: setAttribute() to false followed by IDL get 
PASS textarea.disabled: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.disabled: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.disabled: setAttribute() to NaN followed by getAttribute() 
PASS textarea.disabled: setAttribute() to NaN followed by IDL get 
PASS textarea.disabled: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.disabled: setAttribute() to Infinity followed by IDL get 
PASS textarea.disabled: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.disabled: setAttribute() to -Infinity followed by IDL get 
PASS textarea.disabled: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.disabled: setAttribute() to "\0" followed by IDL get 
PASS textarea.disabled: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.disabled: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.disabled: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.disabled: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.disabled: setAttribute() to "disabled" followed by getAttribute() 
PASS textarea.disabled: setAttribute() to "disabled" followed by IDL get 
PASS textarea.disabled: IDL set to "" should not throw 
PASS textarea.disabled: IDL set to "" followed by hasAttribute() 
PASS textarea.disabled: IDL set to "" followed by IDL get 
PASS textarea.disabled: IDL set to " foo " should not throw 
PASS textarea.disabled: IDL set to " foo " followed by hasAttribute() 
PASS textarea.disabled: IDL set to " foo " followed by IDL get 
PASS textarea.disabled: IDL set to undefined should not throw 
PASS textarea.disabled: IDL set to undefined followed by hasAttribute() 
PASS textarea.disabled: IDL set to undefined followed by IDL get 
PASS textarea.disabled: IDL set to null should not throw 
PASS textarea.disabled: IDL set to null followed by hasAttribute() 
PASS textarea.disabled: IDL set to null followed by IDL get 
PASS textarea.disabled: IDL set to 7 should not throw 
PASS textarea.disabled: IDL set to 7 followed by hasAttribute() 
PASS textarea.disabled: IDL set to 7 followed by IDL get 
PASS textarea.disabled: IDL set to 1.5 should not throw 
PASS textarea.disabled: IDL set to 1.5 followed by hasAttribute() 
PASS textarea.disabled: IDL set to 1.5 followed by IDL get 
PASS textarea.disabled: IDL set to true should not throw 
PASS textarea.disabled: IDL set to true followed by hasAttribute() 
PASS textarea.disabled: IDL set to true followed by IDL get 
PASS textarea.disabled: IDL set to false should not throw 
PASS textarea.disabled: IDL set to false followed by hasAttribute() 
PASS textarea.disabled: IDL set to false followed by IDL get 
PASS textarea.disabled: IDL set to object "[object Object]" should not throw 
PASS textarea.disabled: IDL set to object "[object Object]" followed by hasAttribute() 
PASS textarea.disabled: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.disabled: IDL set to NaN should not throw 
PASS textarea.disabled: IDL set to NaN followed by hasAttribute() 
PASS textarea.disabled: IDL set to NaN followed by IDL get 
PASS textarea.disabled: IDL set to Infinity should not throw 
PASS textarea.disabled: IDL set to Infinity followed by hasAttribute() 
PASS textarea.disabled: IDL set to Infinity followed by IDL get 
PASS textarea.disabled: IDL set to -Infinity should not throw 
PASS textarea.disabled: IDL set to -Infinity followed by hasAttribute() 
PASS textarea.disabled: IDL set to -Infinity followed by IDL get 
PASS textarea.disabled: IDL set to "\0" should not throw 
PASS textarea.disabled: IDL set to "\0" followed by hasAttribute() 
PASS textarea.disabled: IDL set to "\0" followed by IDL get 
PASS textarea.disabled: IDL set to object "test-toString" should not throw 
PASS textarea.disabled: IDL set to object "test-toString" followed by hasAttribute() 
PASS textarea.disabled: IDL set to object "test-toString" followed by IDL get 
PASS textarea.disabled: IDL set to object "test-valueOf" should not throw 
PASS textarea.disabled: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS textarea.disabled: IDL set to object "test-valueOf" followed by IDL get 
FAIL textarea.inputMode: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL textarea.inputMode: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to undefined followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to 7 followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to 1.5 followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to true followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to true followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to false followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to false followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to NaN followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to Infinity followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to -Infinity followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "\0" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to null followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to null followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "verbatim" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "verbatim" followed by IDL get assert_equals: expected (string) "verbatim" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "xverbatim" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "xverbatim" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "verbatim\0" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "verbatim\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "erbatim" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "erbatim" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "VERBATIM" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "VERBATIM" followed by IDL get assert_equals: expected (string) "verbatim" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "latin" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "latin" followed by IDL get assert_equals: expected (string) "latin" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "xlatin" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "xlatin" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "latin\0" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "latin\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "atin" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "atin" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "LATIN" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "LATIN" followed by IDL get assert_equals: expected (string) "latin" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "latin-name" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "latin-name" followed by IDL get assert_equals: expected (string) "latin-name" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "xlatin-name" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "xlatin-name" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "latin-name\0" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "latin-name\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "atin-name" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "atin-name" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "LATIN-NAME" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "LATIN-NAME" followed by IDL get assert_equals: expected (string) "latin-name" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "latin-prose" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "latin-prose" followed by IDL get assert_equals: expected (string) "latin-prose" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "xlatin-prose" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "xlatin-prose" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "latin-prose\0" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "latin-prose\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "atin-prose" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "atin-prose" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "LATIN-PROSE" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "LATIN-PROSE" followed by IDL get assert_equals: expected (string) "latin-prose" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "full-width-latin" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "full-width-latin" followed by IDL get assert_equals: expected (string) "full-width-latin" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "xfull-width-latin" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "xfull-width-latin" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "full-width-latin\0" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "full-width-latin\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "ull-width-latin" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "ull-width-latin" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "FULL-WIDTH-LATIN" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "FULL-WIDTH-LATIN" followed by IDL get assert_equals: expected (string) "full-width-latin" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "kana" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "kana" followed by IDL get assert_equals: expected (string) "kana" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "xkana" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "xkana" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "kana\0" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "kana\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "ana" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "ana" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "KANA" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "KANA" followed by IDL get assert_equals: expected (string) "kana" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "katakana" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "katakana" followed by IDL get assert_equals: expected (string) "katakana" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "xkatakana" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "xkatakana" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "katakana\0" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "katakana\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "atakana" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "atakana" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "KATAKANA" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "KATAKANA" followed by IDL get assert_equals: expected (string) "katakana" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "numeric" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "numeric" followed by IDL get assert_equals: expected (string) "numeric" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "xnumeric" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "xnumeric" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "numeric\0" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "numeric\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "umeric" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "umeric" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "NUMERIC" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "NUMERIC" followed by IDL get assert_equals: expected (string) "numeric" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "tel" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "tel" followed by IDL get assert_equals: expected (string) "tel" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "xtel" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "xtel" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "tel\0" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "tel\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "el" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "el" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "TEL" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "TEL" followed by IDL get assert_equals: expected (string) "tel" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "email" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "email" followed by IDL get assert_equals: expected (string) "email" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "xemail" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "xemail" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "email\0" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "email\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "mail" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "mail" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "EMAIL" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "EMAIL" followed by IDL get assert_equals: expected (string) "email" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "url" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "url" followed by IDL get assert_equals: expected (string) "url" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "xurl" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "xurl" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "url\0" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "url\0" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "rl" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "rl" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: setAttribute() to "URL" followed by getAttribute() 
FAIL textarea.inputMode: setAttribute() to "URL" followed by IDL get assert_equals: expected (string) "url" but got (undefined) undefined
PASS textarea.inputMode: IDL set to "" should not throw 
FAIL textarea.inputMode: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "URL"
PASS textarea.inputMode: IDL set to "" followed by IDL get 
PASS textarea.inputMode: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL textarea.inputMode: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "URL"
FAIL textarea.inputMode: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected "" but got " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo "
PASS textarea.inputMode: IDL set to undefined should not throw 
FAIL textarea.inputMode: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "URL"
FAIL textarea.inputMode: IDL set to undefined followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.inputMode: IDL set to 7 should not throw 
FAIL textarea.inputMode: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "URL"
FAIL textarea.inputMode: IDL set to 7 followed by IDL get assert_equals: expected (string) "" but got (number) 7
PASS textarea.inputMode: IDL set to 1.5 should not throw 
FAIL textarea.inputMode: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "URL"
FAIL textarea.inputMode: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "" but got (number) 1.5
PASS textarea.inputMode: IDL set to true should not throw 
FAIL textarea.inputMode: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "URL"
FAIL textarea.inputMode: IDL set to true followed by IDL get assert_equals: expected (string) "" but got (boolean) true
PASS textarea.inputMode: IDL set to false should not throw 
FAIL textarea.inputMode: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "URL"
FAIL textarea.inputMode: IDL set to false followed by IDL get assert_equals: expected (string) "" but got (boolean) false
PASS textarea.inputMode: IDL set to object "[object Object]" should not throw 
FAIL textarea.inputMode: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "URL"
FAIL textarea.inputMode: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "" but got (object) object "[object Object]"
PASS textarea.inputMode: IDL set to NaN should not throw 
FAIL textarea.inputMode: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "URL"
FAIL textarea.inputMode: IDL set to NaN followed by IDL get assert_equals: expected (string) "" but got (number) NaN
PASS textarea.inputMode: IDL set to Infinity should not throw 
FAIL textarea.inputMode: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "URL"
FAIL textarea.inputMode: IDL set to Infinity followed by IDL get assert_equals: expected (string) "" but got (number) Infinity
PASS textarea.inputMode: IDL set to -Infinity should not throw 
FAIL textarea.inputMode: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "URL"
FAIL textarea.inputMode: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "" but got (number) -Infinity
PASS textarea.inputMode: IDL set to "\0" should not throw 
FAIL textarea.inputMode: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "URL"
FAIL textarea.inputMode: IDL set to "\0" followed by IDL get assert_equals: expected "" but got "\0"
PASS textarea.inputMode: IDL set to null should not throw 
FAIL textarea.inputMode: IDL set to null followed by IDL get assert_equals: expected (string) "" but got (object) null
PASS textarea.inputMode: IDL set to object "test-toString" should not throw 
FAIL textarea.inputMode: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "URL"
FAIL textarea.inputMode: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "" but got (object) object "test-toString"
PASS textarea.inputMode: IDL set to object "test-valueOf" should not throw 
FAIL textarea.inputMode: IDL set to object "test-valueOf" followed by getAttribute() assert_equals: expected "test-valueOf" but got "URL"
FAIL textarea.inputMode: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "" but got (object) object "test-valueOf"
PASS textarea.inputMode: IDL set to "verbatim" should not throw 
FAIL textarea.inputMode: IDL set to "verbatim" followed by getAttribute() assert_equals: expected "verbatim" but got "URL"
PASS textarea.inputMode: IDL set to "verbatim" followed by IDL get 
PASS textarea.inputMode: IDL set to "xverbatim" should not throw 
FAIL textarea.inputMode: IDL set to "xverbatim" followed by getAttribute() assert_equals: expected "xverbatim" but got "URL"
FAIL textarea.inputMode: IDL set to "xverbatim" followed by IDL get assert_equals: expected "" but got "xverbatim"
PASS textarea.inputMode: IDL set to "verbatim\0" should not throw 
FAIL textarea.inputMode: IDL set to "verbatim\0" followed by getAttribute() assert_equals: expected "verbatim\0" but got "URL"
FAIL textarea.inputMode: IDL set to "verbatim\0" followed by IDL get assert_equals: expected "" but got "verbatim\0"
PASS textarea.inputMode: IDL set to "erbatim" should not throw 
FAIL textarea.inputMode: IDL set to "erbatim" followed by getAttribute() assert_equals: expected "erbatim" but got "URL"
FAIL textarea.inputMode: IDL set to "erbatim" followed by IDL get assert_equals: expected "" but got "erbatim"
PASS textarea.inputMode: IDL set to "VERBATIM" should not throw 
FAIL textarea.inputMode: IDL set to "VERBATIM" followed by getAttribute() assert_equals: expected "VERBATIM" but got "URL"
FAIL textarea.inputMode: IDL set to "VERBATIM" followed by IDL get assert_equals: expected "verbatim" but got "VERBATIM"
PASS textarea.inputMode: IDL set to "latin" should not throw 
FAIL textarea.inputMode: IDL set to "latin" followed by getAttribute() assert_equals: expected "latin" but got "URL"
PASS textarea.inputMode: IDL set to "latin" followed by IDL get 
PASS textarea.inputMode: IDL set to "xlatin" should not throw 
FAIL textarea.inputMode: IDL set to "xlatin" followed by getAttribute() assert_equals: expected "xlatin" but got "URL"
FAIL textarea.inputMode: IDL set to "xlatin" followed by IDL get assert_equals: expected "" but got "xlatin"
PASS textarea.inputMode: IDL set to "latin\0" should not throw 
FAIL textarea.inputMode: IDL set to "latin\0" followed by getAttribute() assert_equals: expected "latin\0" but got "URL"
FAIL textarea.inputMode: IDL set to "latin\0" followed by IDL get assert_equals: expected "" but got "latin\0"
PASS textarea.inputMode: IDL set to "atin" should not throw 
FAIL textarea.inputMode: IDL set to "atin" followed by getAttribute() assert_equals: expected "atin" but got "URL"
FAIL textarea.inputMode: IDL set to "atin" followed by IDL get assert_equals: expected "" but got "atin"
PASS textarea.inputMode: IDL set to "LATIN" should not throw 
FAIL textarea.inputMode: IDL set to "LATIN" followed by getAttribute() assert_equals: expected "LATIN" but got "URL"
FAIL textarea.inputMode: IDL set to "LATIN" followed by IDL get assert_equals: expected "latin" but got "LATIN"
PASS textarea.inputMode: IDL set to "latin-name" should not throw 
FAIL textarea.inputMode: IDL set to "latin-name" followed by getAttribute() assert_equals: expected "latin-name" but got "URL"
PASS textarea.inputMode: IDL set to "latin-name" followed by IDL get 
PASS textarea.inputMode: IDL set to "xlatin-name" should not throw 
FAIL textarea.inputMode: IDL set to "xlatin-name" followed by getAttribute() assert_equals: expected "xlatin-name" but got "URL"
FAIL textarea.inputMode: IDL set to "xlatin-name" followed by IDL get assert_equals: expected "" but got "xlatin-name"
PASS textarea.inputMode: IDL set to "latin-name\0" should not throw 
FAIL textarea.inputMode: IDL set to "latin-name\0" followed by getAttribute() assert_equals: expected "latin-name\0" but got "URL"
FAIL textarea.inputMode: IDL set to "latin-name\0" followed by IDL get assert_equals: expected "" but got "latin-name\0"
PASS textarea.inputMode: IDL set to "atin-name" should not throw 
FAIL textarea.inputMode: IDL set to "atin-name" followed by getAttribute() assert_equals: expected "atin-name" but got "URL"
FAIL textarea.inputMode: IDL set to "atin-name" followed by IDL get assert_equals: expected "" but got "atin-name"
PASS textarea.inputMode: IDL set to "LATIN-NAME" should not throw 
FAIL textarea.inputMode: IDL set to "LATIN-NAME" followed by getAttribute() assert_equals: expected "LATIN-NAME" but got "URL"
FAIL textarea.inputMode: IDL set to "LATIN-NAME" followed by IDL get assert_equals: expected "latin-name" but got "LATIN-NAME"
PASS textarea.inputMode: IDL set to "latin-prose" should not throw 
FAIL textarea.inputMode: IDL set to "latin-prose" followed by getAttribute() assert_equals: expected "latin-prose" but got "URL"
PASS textarea.inputMode: IDL set to "latin-prose" followed by IDL get 
PASS textarea.inputMode: IDL set to "xlatin-prose" should not throw 
FAIL textarea.inputMode: IDL set to "xlatin-prose" followed by getAttribute() assert_equals: expected "xlatin-prose" but got "URL"
FAIL textarea.inputMode: IDL set to "xlatin-prose" followed by IDL get assert_equals: expected "" but got "xlatin-prose"
PASS textarea.inputMode: IDL set to "latin-prose\0" should not throw 
FAIL textarea.inputMode: IDL set to "latin-prose\0" followed by getAttribute() assert_equals: expected "latin-prose\0" but got "URL"
FAIL textarea.inputMode: IDL set to "latin-prose\0" followed by IDL get assert_equals: expected "" but got "latin-prose\0"
PASS textarea.inputMode: IDL set to "atin-prose" should not throw 
FAIL textarea.inputMode: IDL set to "atin-prose" followed by getAttribute() assert_equals: expected "atin-prose" but got "URL"
FAIL textarea.inputMode: IDL set to "atin-prose" followed by IDL get assert_equals: expected "" but got "atin-prose"
PASS textarea.inputMode: IDL set to "LATIN-PROSE" should not throw 
FAIL textarea.inputMode: IDL set to "LATIN-PROSE" followed by getAttribute() assert_equals: expected "LATIN-PROSE" but got "URL"
FAIL textarea.inputMode: IDL set to "LATIN-PROSE" followed by IDL get assert_equals: expected "latin-prose" but got "LATIN-PROSE"
PASS textarea.inputMode: IDL set to "full-width-latin" should not throw 
FAIL textarea.inputMode: IDL set to "full-width-latin" followed by getAttribute() assert_equals: expected "full-width-latin" but got "URL"
PASS textarea.inputMode: IDL set to "full-width-latin" followed by IDL get 
PASS textarea.inputMode: IDL set to "xfull-width-latin" should not throw 
FAIL textarea.inputMode: IDL set to "xfull-width-latin" followed by getAttribute() assert_equals: expected "xfull-width-latin" but got "URL"
FAIL textarea.inputMode: IDL set to "xfull-width-latin" followed by IDL get assert_equals: expected "" but got "xfull-width-latin"
PASS textarea.inputMode: IDL set to "full-width-latin\0" should not throw 
FAIL textarea.inputMode: IDL set to "full-width-latin\0" followed by getAttribute() assert_equals: expected "full-width-latin\0" but got "URL"
FAIL textarea.inputMode: IDL set to "full-width-latin\0" followed by IDL get assert_equals: expected "" but got "full-width-latin\0"
PASS textarea.inputMode: IDL set to "ull-width-latin" should not throw 
FAIL textarea.inputMode: IDL set to "ull-width-latin" followed by getAttribute() assert_equals: expected "ull-width-latin" but got "URL"
FAIL textarea.inputMode: IDL set to "ull-width-latin" followed by IDL get assert_equals: expected "" but got "ull-width-latin"
PASS textarea.inputMode: IDL set to "FULL-WIDTH-LATIN" should not throw 
FAIL textarea.inputMode: IDL set to "FULL-WIDTH-LATIN" followed by getAttribute() assert_equals: expected "FULL-WIDTH-LATIN" but got "URL"
FAIL textarea.inputMode: IDL set to "FULL-WIDTH-LATIN" followed by IDL get assert_equals: expected "full-width-latin" but got "FULL-WIDTH-LATIN"
PASS textarea.inputMode: IDL set to "kana" should not throw 
FAIL textarea.inputMode: IDL set to "kana" followed by getAttribute() assert_equals: expected "kana" but got "URL"
PASS textarea.inputMode: IDL set to "kana" followed by IDL get 
PASS textarea.inputMode: IDL set to "xkana" should not throw 
FAIL textarea.inputMode: IDL set to "xkana" followed by getAttribute() assert_equals: expected "xkana" but got "URL"
FAIL textarea.inputMode: IDL set to "xkana" followed by IDL get assert_equals: expected "" but got "xkana"
PASS textarea.inputMode: IDL set to "kana\0" should not throw 
FAIL textarea.inputMode: IDL set to "kana\0" followed by getAttribute() assert_equals: expected "kana\0" but got "URL"
FAIL textarea.inputMode: IDL set to "kana\0" followed by IDL get assert_equals: expected "" but got "kana\0"
PASS textarea.inputMode: IDL set to "ana" should not throw 
FAIL textarea.inputMode: IDL set to "ana" followed by getAttribute() assert_equals: expected "ana" but got "URL"
FAIL textarea.inputMode: IDL set to "ana" followed by IDL get assert_equals: expected "" but got "ana"
PASS textarea.inputMode: IDL set to "KANA" should not throw 
FAIL textarea.inputMode: IDL set to "KANA" followed by getAttribute() assert_equals: expected "KANA" but got "URL"
FAIL textarea.inputMode: IDL set to "KANA" followed by IDL get assert_equals: expected "kana" but got "KANA"
PASS textarea.inputMode: IDL set to "katakana" should not throw 
FAIL textarea.inputMode: IDL set to "katakana" followed by getAttribute() assert_equals: expected "katakana" but got "URL"
PASS textarea.inputMode: IDL set to "katakana" followed by IDL get 
PASS textarea.inputMode: IDL set to "xkatakana" should not throw 
FAIL textarea.inputMode: IDL set to "xkatakana" followed by getAttribute() assert_equals: expected "xkatakana" but got "URL"
FAIL textarea.inputMode: IDL set to "xkatakana" followed by IDL get assert_equals: expected "" but got "xkatakana"
PASS textarea.inputMode: IDL set to "katakana\0" should not throw 
FAIL textarea.inputMode: IDL set to "katakana\0" followed by getAttribute() assert_equals: expected "katakana\0" but got "URL"
FAIL textarea.inputMode: IDL set to "katakana\0" followed by IDL get assert_equals: expected "" but got "katakana\0"
PASS textarea.inputMode: IDL set to "atakana" should not throw 
FAIL textarea.inputMode: IDL set to "atakana" followed by getAttribute() assert_equals: expected "atakana" but got "URL"
FAIL textarea.inputMode: IDL set to "atakana" followed by IDL get assert_equals: expected "" but got "atakana"
PASS textarea.inputMode: IDL set to "KATAKANA" should not throw 
FAIL textarea.inputMode: IDL set to "KATAKANA" followed by getAttribute() assert_equals: expected "KATAKANA" but got "URL"
FAIL textarea.inputMode: IDL set to "KATAKANA" followed by IDL get assert_equals: expected "katakana" but got "KATAKANA"
PASS textarea.inputMode: IDL set to "numeric" should not throw 
FAIL textarea.inputMode: IDL set to "numeric" followed by getAttribute() assert_equals: expected "numeric" but got "URL"
PASS textarea.inputMode: IDL set to "numeric" followed by IDL get 
PASS textarea.inputMode: IDL set to "xnumeric" should not throw 
FAIL textarea.inputMode: IDL set to "xnumeric" followed by getAttribute() assert_equals: expected "xnumeric" but got "URL"
FAIL textarea.inputMode: IDL set to "xnumeric" followed by IDL get assert_equals: expected "" but got "xnumeric"
PASS textarea.inputMode: IDL set to "numeric\0" should not throw 
FAIL textarea.inputMode: IDL set to "numeric\0" followed by getAttribute() assert_equals: expected "numeric\0" but got "URL"
FAIL textarea.inputMode: IDL set to "numeric\0" followed by IDL get assert_equals: expected "" but got "numeric\0"
PASS textarea.inputMode: IDL set to "umeric" should not throw 
FAIL textarea.inputMode: IDL set to "umeric" followed by getAttribute() assert_equals: expected "umeric" but got "URL"
FAIL textarea.inputMode: IDL set to "umeric" followed by IDL get assert_equals: expected "" but got "umeric"
PASS textarea.inputMode: IDL set to "NUMERIC" should not throw 
FAIL textarea.inputMode: IDL set to "NUMERIC" followed by getAttribute() assert_equals: expected "NUMERIC" but got "URL"
FAIL textarea.inputMode: IDL set to "NUMERIC" followed by IDL get assert_equals: expected "numeric" but got "NUMERIC"
PASS textarea.inputMode: IDL set to "tel" should not throw 
FAIL textarea.inputMode: IDL set to "tel" followed by getAttribute() assert_equals: expected "tel" but got "URL"
PASS textarea.inputMode: IDL set to "tel" followed by IDL get 
PASS textarea.inputMode: IDL set to "xtel" should not throw 
FAIL textarea.inputMode: IDL set to "xtel" followed by getAttribute() assert_equals: expected "xtel" but got "URL"
FAIL textarea.inputMode: IDL set to "xtel" followed by IDL get assert_equals: expected "" but got "xtel"
PASS textarea.inputMode: IDL set to "tel\0" should not throw 
FAIL textarea.inputMode: IDL set to "tel\0" followed by getAttribute() assert_equals: expected "tel\0" but got "URL"
FAIL textarea.inputMode: IDL set to "tel\0" followed by IDL get assert_equals: expected "" but got "tel\0"
PASS textarea.inputMode: IDL set to "el" should not throw 
FAIL textarea.inputMode: IDL set to "el" followed by getAttribute() assert_equals: expected "el" but got "URL"
FAIL textarea.inputMode: IDL set to "el" followed by IDL get assert_equals: expected "" but got "el"
PASS textarea.inputMode: IDL set to "TEL" should not throw 
FAIL textarea.inputMode: IDL set to "TEL" followed by getAttribute() assert_equals: expected "TEL" but got "URL"
FAIL textarea.inputMode: IDL set to "TEL" followed by IDL get assert_equals: expected "tel" but got "TEL"
PASS textarea.inputMode: IDL set to "email" should not throw 
FAIL textarea.inputMode: IDL set to "email" followed by getAttribute() assert_equals: expected "email" but got "URL"
PASS textarea.inputMode: IDL set to "email" followed by IDL get 
PASS textarea.inputMode: IDL set to "xemail" should not throw 
FAIL textarea.inputMode: IDL set to "xemail" followed by getAttribute() assert_equals: expected "xemail" but got "URL"
FAIL textarea.inputMode: IDL set to "xemail" followed by IDL get assert_equals: expected "" but got "xemail"
PASS textarea.inputMode: IDL set to "email\0" should not throw 
FAIL textarea.inputMode: IDL set to "email\0" followed by getAttribute() assert_equals: expected "email\0" but got "URL"
FAIL textarea.inputMode: IDL set to "email\0" followed by IDL get assert_equals: expected "" but got "email\0"
PASS textarea.inputMode: IDL set to "mail" should not throw 
FAIL textarea.inputMode: IDL set to "mail" followed by getAttribute() assert_equals: expected "mail" but got "URL"
FAIL textarea.inputMode: IDL set to "mail" followed by IDL get assert_equals: expected "" but got "mail"
PASS textarea.inputMode: IDL set to "EMAIL" should not throw 
FAIL textarea.inputMode: IDL set to "EMAIL" followed by getAttribute() assert_equals: expected "EMAIL" but got "URL"
FAIL textarea.inputMode: IDL set to "EMAIL" followed by IDL get assert_equals: expected "email" but got "EMAIL"
PASS textarea.inputMode: IDL set to "url" should not throw 
FAIL textarea.inputMode: IDL set to "url" followed by getAttribute() assert_equals: expected "url" but got "URL"
PASS textarea.inputMode: IDL set to "url" followed by IDL get 
PASS textarea.inputMode: IDL set to "xurl" should not throw 
FAIL textarea.inputMode: IDL set to "xurl" followed by getAttribute() assert_equals: expected "xurl" but got "URL"
FAIL textarea.inputMode: IDL set to "xurl" followed by IDL get assert_equals: expected "" but got "xurl"
PASS textarea.inputMode: IDL set to "url\0" should not throw 
FAIL textarea.inputMode: IDL set to "url\0" followed by getAttribute() assert_equals: expected "url\0" but got "URL"
FAIL textarea.inputMode: IDL set to "url\0" followed by IDL get assert_equals: expected "" but got "url\0"
PASS textarea.inputMode: IDL set to "rl" should not throw 
FAIL textarea.inputMode: IDL set to "rl" followed by getAttribute() assert_equals: expected "rl" but got "URL"
FAIL textarea.inputMode: IDL set to "rl" followed by IDL get assert_equals: expected "" but got "rl"
PASS textarea.inputMode: IDL set to "URL" should not throw 
PASS textarea.inputMode: IDL set to "URL" followed by getAttribute() 
FAIL textarea.inputMode: IDL set to "URL" followed by IDL get assert_equals: expected "url" but got "URL"
PASS textarea.maxLength: typeof IDL attribute 
PASS textarea.maxLength: IDL get with DOM attribute unset 
PASS textarea.maxLength: setAttribute() to -2147483649 followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to -2147483649 followed by IDL get 
PASS textarea.maxLength: setAttribute() to -2147483648 followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to -2147483648 followed by IDL get 
PASS textarea.maxLength: setAttribute() to -36 followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to -36 followed by IDL get 
PASS textarea.maxLength: setAttribute() to -1 followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to -1 followed by IDL get 
PASS textarea.maxLength: setAttribute() to -0 followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to -0 followed by IDL get 
PASS textarea.maxLength: setAttribute() to 0 followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to 0 followed by IDL get 
PASS textarea.maxLength: setAttribute() to 1 followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to 1 followed by IDL get 
PASS textarea.maxLength: setAttribute() to 2147483647 followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to 2147483647 followed by IDL get 
PASS textarea.maxLength: setAttribute() to 2147483648 followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to 2147483648 followed by IDL get 
PASS textarea.maxLength: setAttribute() to 4294967295 followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to 4294967295 followed by IDL get 
PASS textarea.maxLength: setAttribute() to 4294967296 followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to 4294967296 followed by IDL get 
PASS textarea.maxLength: setAttribute() to "" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to "" followed by IDL get 
PASS textarea.maxLength: setAttribute() to "-1" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to "-1" followed by IDL get 
PASS textarea.maxLength: setAttribute() to "-0" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to "-0" followed by IDL get 
PASS textarea.maxLength: setAttribute() to "0" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to "0" followed by IDL get 
PASS textarea.maxLength: setAttribute() to "1" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to "1" followed by IDL get 
PASS textarea.maxLength: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.maxLength: setAttribute() to "\t7" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to "\t7" followed by IDL get 
PASS textarea.maxLength: setAttribute() to "\v7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to "\v7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to "\f7" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to "\f7" followed by IDL get 
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to " 7" followed by IDL get 
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to " 7" followed by IDL get 
PASS textarea.maxLength: setAttribute() to "﻿7" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to "﻿7" followed by IDL get 
PASS textarea.maxLength: setAttribute() to "\n7" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to "\n7" followed by IDL get 
PASS textarea.maxLength: setAttribute() to "\r7" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to "\r7" followed by IDL get 
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to " 7" followed by IDL get 
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to "᠎7" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to "᠎7" followed by IDL get 
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to " 7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to " 7" followed by IDL get 
PASS textarea.maxLength: setAttribute() to "　7" followed by getAttribute() 
FAIL textarea.maxLength: setAttribute() to "　7" followed by IDL get assert_equals: expected -1 but got 7
PASS textarea.maxLength: setAttribute() to undefined followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to undefined followed by IDL get 
PASS textarea.maxLength: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to 1.5 followed by IDL get 
PASS textarea.maxLength: setAttribute() to true followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to true followed by IDL get 
PASS textarea.maxLength: setAttribute() to false followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to false followed by IDL get 
PASS textarea.maxLength: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.maxLength: setAttribute() to NaN followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to NaN followed by IDL get 
PASS textarea.maxLength: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to Infinity followed by IDL get 
PASS textarea.maxLength: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to -Infinity followed by IDL get 
PASS textarea.maxLength: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to "\0" followed by IDL get 
PASS textarea.maxLength: setAttribute() to object "2" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to object "2" followed by IDL get 
PASS textarea.maxLength: setAttribute() to object "3" followed by getAttribute() 
PASS textarea.maxLength: setAttribute() to object "3" followed by IDL get 
PASS textarea.maxLength: IDL set to -2147483648 must throw INDEX_SIZE_ERR 
PASS textarea.maxLength: IDL set to -36 must throw INDEX_SIZE_ERR 
PASS textarea.maxLength: IDL set to -1 must throw INDEX_SIZE_ERR 
PASS textarea.maxLength: IDL set to 0 should not throw 
PASS textarea.maxLength: IDL set to 0 followed by getAttribute() 
PASS textarea.maxLength: IDL set to 0 followed by IDL get 
PASS textarea.maxLength: IDL set to 1 should not throw 
PASS textarea.maxLength: IDL set to 1 followed by getAttribute() 
PASS textarea.maxLength: IDL set to 1 followed by IDL get 
PASS textarea.maxLength: IDL set to 2147483647 should not throw 
PASS textarea.maxLength: IDL set to 2147483647 followed by getAttribute() 
PASS textarea.maxLength: IDL set to 2147483647 followed by IDL get 
PASS textarea.name: typeof IDL attribute 
PASS textarea.name: IDL get with DOM attribute unset 
PASS textarea.name: setAttribute() to "" followed by getAttribute() 
PASS textarea.name: setAttribute() to "" followed by IDL get 
PASS textarea.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.name: setAttribute() to undefined followed by getAttribute() 
PASS textarea.name: setAttribute() to undefined followed by IDL get 
PASS textarea.name: setAttribute() to 7 followed by getAttribute() 
PASS textarea.name: setAttribute() to 7 followed by IDL get 
PASS textarea.name: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.name: setAttribute() to 1.5 followed by IDL get 
PASS textarea.name: setAttribute() to true followed by getAttribute() 
PASS textarea.name: setAttribute() to true followed by IDL get 
PASS textarea.name: setAttribute() to false followed by getAttribute() 
PASS textarea.name: setAttribute() to false followed by IDL get 
PASS textarea.name: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.name: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.name: setAttribute() to NaN followed by getAttribute() 
PASS textarea.name: setAttribute() to NaN followed by IDL get 
PASS textarea.name: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.name: setAttribute() to Infinity followed by IDL get 
PASS textarea.name: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.name: setAttribute() to -Infinity followed by IDL get 
PASS textarea.name: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.name: setAttribute() to "\0" followed by IDL get 
PASS textarea.name: setAttribute() to null followed by getAttribute() 
PASS textarea.name: setAttribute() to null followed by IDL get 
PASS textarea.name: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.name: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.name: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.name: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.name: IDL set to "" should not throw 
PASS textarea.name: IDL set to "" followed by getAttribute() 
PASS textarea.name: IDL set to "" followed by IDL get 
PASS textarea.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS textarea.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.name: IDL set to undefined should not throw 
PASS textarea.name: IDL set to undefined followed by getAttribute() 
PASS textarea.name: IDL set to undefined followed by IDL get 
PASS textarea.name: IDL set to 7 should not throw 
PASS textarea.name: IDL set to 7 followed by getAttribute() 
PASS textarea.name: IDL set to 7 followed by IDL get 
PASS textarea.name: IDL set to 1.5 should not throw 
PASS textarea.name: IDL set to 1.5 followed by getAttribute() 
PASS textarea.name: IDL set to 1.5 followed by IDL get 
PASS textarea.name: IDL set to true should not throw 
PASS textarea.name: IDL set to true followed by getAttribute() 
PASS textarea.name: IDL set to true followed by IDL get 
PASS textarea.name: IDL set to false should not throw 
PASS textarea.name: IDL set to false followed by getAttribute() 
PASS textarea.name: IDL set to false followed by IDL get 
PASS textarea.name: IDL set to object "[object Object]" should not throw 
PASS textarea.name: IDL set to object "[object Object]" followed by getAttribute() 
PASS textarea.name: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.name: IDL set to NaN should not throw 
PASS textarea.name: IDL set to NaN followed by getAttribute() 
PASS textarea.name: IDL set to NaN followed by IDL get 
PASS textarea.name: IDL set to Infinity should not throw 
PASS textarea.name: IDL set to Infinity followed by getAttribute() 
PASS textarea.name: IDL set to Infinity followed by IDL get 
PASS textarea.name: IDL set to -Infinity should not throw 
PASS textarea.name: IDL set to -Infinity followed by getAttribute() 
PASS textarea.name: IDL set to -Infinity followed by IDL get 
PASS textarea.name: IDL set to "\0" should not throw 
PASS textarea.name: IDL set to "\0" followed by getAttribute() 
PASS textarea.name: IDL set to "\0" followed by IDL get 
PASS textarea.name: IDL set to null should not throw 
PASS textarea.name: IDL set to null followed by getAttribute() 
PASS textarea.name: IDL set to null followed by IDL get 
PASS textarea.name: IDL set to object "test-toString" should not throw 
PASS textarea.name: IDL set to object "test-toString" followed by getAttribute() 
PASS textarea.name: IDL set to object "test-toString" followed by IDL get 
PASS textarea.name: IDL set to object "test-valueOf" should not throw 
PASS textarea.name: IDL set to object "test-valueOf" followed by getAttribute() 
PASS textarea.name: IDL set to object "test-valueOf" followed by IDL get 
PASS textarea.placeholder: typeof IDL attribute 
PASS textarea.placeholder: IDL get with DOM attribute unset 
PASS textarea.placeholder: setAttribute() to "" followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to "" followed by IDL get 
PASS textarea.placeholder: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.placeholder: setAttribute() to undefined followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to undefined followed by IDL get 
PASS textarea.placeholder: setAttribute() to 7 followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to 7 followed by IDL get 
PASS textarea.placeholder: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to 1.5 followed by IDL get 
PASS textarea.placeholder: setAttribute() to true followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to true followed by IDL get 
PASS textarea.placeholder: setAttribute() to false followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to false followed by IDL get 
PASS textarea.placeholder: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.placeholder: setAttribute() to NaN followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to NaN followed by IDL get 
PASS textarea.placeholder: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to Infinity followed by IDL get 
PASS textarea.placeholder: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to -Infinity followed by IDL get 
PASS textarea.placeholder: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to "\0" followed by IDL get 
PASS textarea.placeholder: setAttribute() to null followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to null followed by IDL get 
PASS textarea.placeholder: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.placeholder: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.placeholder: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.placeholder: IDL set to "" should not throw 
PASS textarea.placeholder: IDL set to "" followed by getAttribute() 
PASS textarea.placeholder: IDL set to "" followed by IDL get 
PASS textarea.placeholder: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS textarea.placeholder: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.placeholder: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.placeholder: IDL set to undefined should not throw 
PASS textarea.placeholder: IDL set to undefined followed by getAttribute() 
PASS textarea.placeholder: IDL set to undefined followed by IDL get 
PASS textarea.placeholder: IDL set to 7 should not throw 
PASS textarea.placeholder: IDL set to 7 followed by getAttribute() 
PASS textarea.placeholder: IDL set to 7 followed by IDL get 
PASS textarea.placeholder: IDL set to 1.5 should not throw 
PASS textarea.placeholder: IDL set to 1.5 followed by getAttribute() 
PASS textarea.placeholder: IDL set to 1.5 followed by IDL get 
PASS textarea.placeholder: IDL set to true should not throw 
PASS textarea.placeholder: IDL set to true followed by getAttribute() 
PASS textarea.placeholder: IDL set to true followed by IDL get 
PASS textarea.placeholder: IDL set to false should not throw 
PASS textarea.placeholder: IDL set to false followed by getAttribute() 
PASS textarea.placeholder: IDL set to false followed by IDL get 
PASS textarea.placeholder: IDL set to object "[object Object]" should not throw 
PASS textarea.placeholder: IDL set to object "[object Object]" followed by getAttribute() 
PASS textarea.placeholder: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.placeholder: IDL set to NaN should not throw 
PASS textarea.placeholder: IDL set to NaN followed by getAttribute() 
PASS textarea.placeholder: IDL set to NaN followed by IDL get 
PASS textarea.placeholder: IDL set to Infinity should not throw 
PASS textarea.placeholder: IDL set to Infinity followed by getAttribute() 
PASS textarea.placeholder: IDL set to Infinity followed by IDL get 
PASS textarea.placeholder: IDL set to -Infinity should not throw 
PASS textarea.placeholder: IDL set to -Infinity followed by getAttribute() 
PASS textarea.placeholder: IDL set to -Infinity followed by IDL get 
PASS textarea.placeholder: IDL set to "\0" should not throw 
PASS textarea.placeholder: IDL set to "\0" followed by getAttribute() 
PASS textarea.placeholder: IDL set to "\0" followed by IDL get 
PASS textarea.placeholder: IDL set to null should not throw 
PASS textarea.placeholder: IDL set to null followed by getAttribute() 
PASS textarea.placeholder: IDL set to null followed by IDL get 
PASS textarea.placeholder: IDL set to object "test-toString" should not throw 
PASS textarea.placeholder: IDL set to object "test-toString" followed by getAttribute() 
PASS textarea.placeholder: IDL set to object "test-toString" followed by IDL get 
PASS textarea.placeholder: IDL set to object "test-valueOf" should not throw 
PASS textarea.placeholder: IDL set to object "test-valueOf" followed by getAttribute() 
PASS textarea.placeholder: IDL set to object "test-valueOf" followed by IDL get 
PASS textarea.readOnly: typeof IDL attribute 
PASS textarea.readOnly: IDL get with DOM attribute unset 
PASS textarea.readOnly: setAttribute() to "" followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to "" followed by IDL get 
PASS textarea.readOnly: setAttribute() to " foo " followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to " foo " followed by IDL get 
PASS textarea.readOnly: setAttribute() to undefined followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to undefined followed by IDL get 
PASS textarea.readOnly: setAttribute() to null followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to null followed by IDL get 
PASS textarea.readOnly: setAttribute() to 7 followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to 7 followed by IDL get 
PASS textarea.readOnly: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to 1.5 followed by IDL get 
PASS textarea.readOnly: setAttribute() to true followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to true followed by IDL get 
PASS textarea.readOnly: setAttribute() to false followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to false followed by IDL get 
PASS textarea.readOnly: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.readOnly: setAttribute() to NaN followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to NaN followed by IDL get 
PASS textarea.readOnly: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to Infinity followed by IDL get 
PASS textarea.readOnly: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to -Infinity followed by IDL get 
PASS textarea.readOnly: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to "\0" followed by IDL get 
PASS textarea.readOnly: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.readOnly: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.readOnly: setAttribute() to "readOnly" followed by getAttribute() 
PASS textarea.readOnly: setAttribute() to "readOnly" followed by IDL get 
PASS textarea.readOnly: IDL set to "" should not throw 
PASS textarea.readOnly: IDL set to "" followed by hasAttribute() 
PASS textarea.readOnly: IDL set to "" followed by IDL get 
PASS textarea.readOnly: IDL set to " foo " should not throw 
PASS textarea.readOnly: IDL set to " foo " followed by hasAttribute() 
PASS textarea.readOnly: IDL set to " foo " followed by IDL get 
PASS textarea.readOnly: IDL set to undefined should not throw 
PASS textarea.readOnly: IDL set to undefined followed by hasAttribute() 
PASS textarea.readOnly: IDL set to undefined followed by IDL get 
PASS textarea.readOnly: IDL set to null should not throw 
PASS textarea.readOnly: IDL set to null followed by hasAttribute() 
PASS textarea.readOnly: IDL set to null followed by IDL get 
PASS textarea.readOnly: IDL set to 7 should not throw 
PASS textarea.readOnly: IDL set to 7 followed by hasAttribute() 
PASS textarea.readOnly: IDL set to 7 followed by IDL get 
PASS textarea.readOnly: IDL set to 1.5 should not throw 
PASS textarea.readOnly: IDL set to 1.5 followed by hasAttribute() 
PASS textarea.readOnly: IDL set to 1.5 followed by IDL get 
PASS textarea.readOnly: IDL set to true should not throw 
PASS textarea.readOnly: IDL set to true followed by hasAttribute() 
PASS textarea.readOnly: IDL set to true followed by IDL get 
PASS textarea.readOnly: IDL set to false should not throw 
PASS textarea.readOnly: IDL set to false followed by hasAttribute() 
PASS textarea.readOnly: IDL set to false followed by IDL get 
PASS textarea.readOnly: IDL set to object "[object Object]" should not throw 
PASS textarea.readOnly: IDL set to object "[object Object]" followed by hasAttribute() 
PASS textarea.readOnly: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.readOnly: IDL set to NaN should not throw 
PASS textarea.readOnly: IDL set to NaN followed by hasAttribute() 
PASS textarea.readOnly: IDL set to NaN followed by IDL get 
PASS textarea.readOnly: IDL set to Infinity should not throw 
PASS textarea.readOnly: IDL set to Infinity followed by hasAttribute() 
PASS textarea.readOnly: IDL set to Infinity followed by IDL get 
PASS textarea.readOnly: IDL set to -Infinity should not throw 
PASS textarea.readOnly: IDL set to -Infinity followed by hasAttribute() 
PASS textarea.readOnly: IDL set to -Infinity followed by IDL get 
PASS textarea.readOnly: IDL set to "\0" should not throw 
PASS textarea.readOnly: IDL set to "\0" followed by hasAttribute() 
PASS textarea.readOnly: IDL set to "\0" followed by IDL get 
PASS textarea.readOnly: IDL set to object "test-toString" should not throw 
PASS textarea.readOnly: IDL set to object "test-toString" followed by hasAttribute() 
PASS textarea.readOnly: IDL set to object "test-toString" followed by IDL get 
PASS textarea.readOnly: IDL set to object "test-valueOf" should not throw 
PASS textarea.readOnly: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS textarea.readOnly: IDL set to object "test-valueOf" followed by IDL get 
PASS textarea.required: typeof IDL attribute 
PASS textarea.required: IDL get with DOM attribute unset 
PASS textarea.required: setAttribute() to "" followed by getAttribute() 
PASS textarea.required: setAttribute() to "" followed by IDL get 
PASS textarea.required: setAttribute() to " foo " followed by getAttribute() 
PASS textarea.required: setAttribute() to " foo " followed by IDL get 
PASS textarea.required: setAttribute() to undefined followed by getAttribute() 
PASS textarea.required: setAttribute() to undefined followed by IDL get 
PASS textarea.required: setAttribute() to null followed by getAttribute() 
PASS textarea.required: setAttribute() to null followed by IDL get 
PASS textarea.required: setAttribute() to 7 followed by getAttribute() 
PASS textarea.required: setAttribute() to 7 followed by IDL get 
PASS textarea.required: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.required: setAttribute() to 1.5 followed by IDL get 
PASS textarea.required: setAttribute() to true followed by getAttribute() 
PASS textarea.required: setAttribute() to true followed by IDL get 
PASS textarea.required: setAttribute() to false followed by getAttribute() 
PASS textarea.required: setAttribute() to false followed by IDL get 
PASS textarea.required: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.required: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.required: setAttribute() to NaN followed by getAttribute() 
PASS textarea.required: setAttribute() to NaN followed by IDL get 
PASS textarea.required: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.required: setAttribute() to Infinity followed by IDL get 
PASS textarea.required: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.required: setAttribute() to -Infinity followed by IDL get 
PASS textarea.required: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.required: setAttribute() to "\0" followed by IDL get 
PASS textarea.required: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.required: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.required: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.required: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.required: setAttribute() to "required" followed by getAttribute() 
PASS textarea.required: setAttribute() to "required" followed by IDL get 
PASS textarea.required: IDL set to "" should not throw 
PASS textarea.required: IDL set to "" followed by hasAttribute() 
PASS textarea.required: IDL set to "" followed by IDL get 
PASS textarea.required: IDL set to " foo " should not throw 
PASS textarea.required: IDL set to " foo " followed by hasAttribute() 
PASS textarea.required: IDL set to " foo " followed by IDL get 
PASS textarea.required: IDL set to undefined should not throw 
PASS textarea.required: IDL set to undefined followed by hasAttribute() 
PASS textarea.required: IDL set to undefined followed by IDL get 
PASS textarea.required: IDL set to null should not throw 
PASS textarea.required: IDL set to null followed by hasAttribute() 
PASS textarea.required: IDL set to null followed by IDL get 
PASS textarea.required: IDL set to 7 should not throw 
PASS textarea.required: IDL set to 7 followed by hasAttribute() 
PASS textarea.required: IDL set to 7 followed by IDL get 
PASS textarea.required: IDL set to 1.5 should not throw 
PASS textarea.required: IDL set to 1.5 followed by hasAttribute() 
PASS textarea.required: IDL set to 1.5 followed by IDL get 
PASS textarea.required: IDL set to true should not throw 
PASS textarea.required: IDL set to true followed by hasAttribute() 
PASS textarea.required: IDL set to true followed by IDL get 
PASS textarea.required: IDL set to false should not throw 
PASS textarea.required: IDL set to false followed by hasAttribute() 
PASS textarea.required: IDL set to false followed by IDL get 
PASS textarea.required: IDL set to object "[object Object]" should not throw 
PASS textarea.required: IDL set to object "[object Object]" followed by hasAttribute() 
PASS textarea.required: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.required: IDL set to NaN should not throw 
PASS textarea.required: IDL set to NaN followed by hasAttribute() 
PASS textarea.required: IDL set to NaN followed by IDL get 
PASS textarea.required: IDL set to Infinity should not throw 
PASS textarea.required: IDL set to Infinity followed by hasAttribute() 
PASS textarea.required: IDL set to Infinity followed by IDL get 
PASS textarea.required: IDL set to -Infinity should not throw 
PASS textarea.required: IDL set to -Infinity followed by hasAttribute() 
PASS textarea.required: IDL set to -Infinity followed by IDL get 
PASS textarea.required: IDL set to "\0" should not throw 
PASS textarea.required: IDL set to "\0" followed by hasAttribute() 
PASS textarea.required: IDL set to "\0" followed by IDL get 
PASS textarea.required: IDL set to object "test-toString" should not throw 
PASS textarea.required: IDL set to object "test-toString" followed by hasAttribute() 
PASS textarea.required: IDL set to object "test-toString" followed by IDL get 
PASS textarea.required: IDL set to object "test-valueOf" should not throw 
PASS textarea.required: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS textarea.required: IDL set to object "test-valueOf" followed by IDL get 
PASS textarea.rows: typeof IDL attribute 
PASS textarea.rows: IDL get with DOM attribute unset 
PASS textarea.rows: setAttribute() to -2147483649 followed by getAttribute() 
PASS textarea.rows: setAttribute() to -2147483649 followed by IDL get 
PASS textarea.rows: setAttribute() to -2147483648 followed by getAttribute() 
PASS textarea.rows: setAttribute() to -2147483648 followed by IDL get 
PASS textarea.rows: setAttribute() to -36 followed by getAttribute() 
PASS textarea.rows: setAttribute() to -36 followed by IDL get 
PASS textarea.rows: setAttribute() to -1 followed by getAttribute() 
PASS textarea.rows: setAttribute() to -1 followed by IDL get 
PASS textarea.rows: setAttribute() to 0 followed by getAttribute() 
PASS textarea.rows: setAttribute() to 0 followed by IDL get 
PASS textarea.rows: setAttribute() to 1 followed by getAttribute() 
PASS textarea.rows: setAttribute() to 1 followed by IDL get 
PASS textarea.rows: setAttribute() to 2147483647 followed by getAttribute() 
PASS textarea.rows: setAttribute() to 2147483647 followed by IDL get 
PASS textarea.rows: setAttribute() to 2147483648 followed by getAttribute() 
PASS textarea.rows: setAttribute() to 2147483648 followed by IDL get 
PASS textarea.rows: setAttribute() to 4294967295 followed by getAttribute() 
PASS textarea.rows: setAttribute() to 4294967295 followed by IDL get 
PASS textarea.rows: setAttribute() to 4294967296 followed by getAttribute() 
PASS textarea.rows: setAttribute() to 4294967296 followed by IDL get 
PASS textarea.rows: setAttribute() to "" followed by getAttribute() 
PASS textarea.rows: setAttribute() to "" followed by IDL get 
PASS textarea.rows: setAttribute() to "-1" followed by getAttribute() 
PASS textarea.rows: setAttribute() to "-1" followed by IDL get 
PASS textarea.rows: setAttribute() to "-0" followed by getAttribute() 
PASS textarea.rows: setAttribute() to "-0" followed by IDL get 
PASS textarea.rows: setAttribute() to "0" followed by getAttribute() 
PASS textarea.rows: setAttribute() to "0" followed by IDL get 
PASS textarea.rows: setAttribute() to "1" followed by getAttribute() 
PASS textarea.rows: setAttribute() to "1" followed by IDL get 
PASS textarea.rows: setAttribute() to "\t7" followed by getAttribute() 
PASS textarea.rows: setAttribute() to "\t7" followed by IDL get 
PASS textarea.rows: setAttribute() to "\v7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to "\v7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to "\f7" followed by getAttribute() 
PASS textarea.rows: setAttribute() to "\f7" followed by IDL get 
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.rows: setAttribute() to " 7" followed by IDL get 
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.rows: setAttribute() to " 7" followed by IDL get 
PASS textarea.rows: setAttribute() to "﻿7" followed by getAttribute() 
PASS textarea.rows: setAttribute() to "﻿7" followed by IDL get 
PASS textarea.rows: setAttribute() to "\n7" followed by getAttribute() 
PASS textarea.rows: setAttribute() to "\n7" followed by IDL get 
PASS textarea.rows: setAttribute() to "\r7" followed by getAttribute() 
PASS textarea.rows: setAttribute() to "\r7" followed by IDL get 
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.rows: setAttribute() to " 7" followed by IDL get 
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to "᠎7" followed by getAttribute() 
PASS textarea.rows: setAttribute() to "᠎7" followed by IDL get 
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to " 7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " 7" followed by getAttribute() 
PASS textarea.rows: setAttribute() to " 7" followed by IDL get 
PASS textarea.rows: setAttribute() to "　7" followed by getAttribute() 
FAIL textarea.rows: setAttribute() to "　7" followed by IDL get assert_equals: expected 2 but got 7
PASS textarea.rows: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.rows: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.rows: setAttribute() to undefined followed by getAttribute() 
PASS textarea.rows: setAttribute() to undefined followed by IDL get 
PASS textarea.rows: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.rows: setAttribute() to 1.5 followed by IDL get 
PASS textarea.rows: setAttribute() to true followed by getAttribute() 
PASS textarea.rows: setAttribute() to true followed by IDL get 
PASS textarea.rows: setAttribute() to false followed by getAttribute() 
PASS textarea.rows: setAttribute() to false followed by IDL get 
PASS textarea.rows: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.rows: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.rows: setAttribute() to NaN followed by getAttribute() 
PASS textarea.rows: setAttribute() to NaN followed by IDL get 
PASS textarea.rows: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.rows: setAttribute() to Infinity followed by IDL get 
PASS textarea.rows: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.rows: setAttribute() to -Infinity followed by IDL get 
PASS textarea.rows: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.rows: setAttribute() to "\0" followed by IDL get 
PASS textarea.rows: setAttribute() to object "2" followed by getAttribute() 
PASS textarea.rows: setAttribute() to object "2" followed by IDL get 
PASS textarea.rows: setAttribute() to object "3" followed by getAttribute() 
PASS textarea.rows: setAttribute() to object "3" followed by IDL get 
FAIL textarea.rows: IDL set to 0 must throw INDEX_SIZE_ERR assert_throws: function "function () {
                idlObj[idlName] = idlTests[..." did not throw
PASS textarea.rows: IDL set to 1 should not throw 
PASS textarea.rows: IDL set to 1 followed by getAttribute() 
PASS textarea.rows: IDL set to 1 followed by IDL get 
PASS textarea.rows: IDL set to 2147483647 should not throw 
PASS textarea.rows: IDL set to 2147483647 followed by getAttribute() 
PASS textarea.rows: IDL set to 2147483647 followed by IDL get 
PASS textarea.rows: IDL set to 2147483648 should not throw 
PASS textarea.rows: IDL set to 2147483648 followed by getAttribute() 
PASS textarea.rows: IDL set to 2147483648 followed by IDL get 
PASS textarea.rows: IDL set to 4294967295 should not throw 
PASS textarea.rows: IDL set to 4294967295 followed by getAttribute() 
PASS textarea.rows: IDL set to 4294967295 followed by IDL get 
PASS textarea.wrap: typeof IDL attribute 
PASS textarea.wrap: IDL get with DOM attribute unset 
PASS textarea.wrap: setAttribute() to "" followed by getAttribute() 
PASS textarea.wrap: setAttribute() to "" followed by IDL get 
PASS textarea.wrap: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.wrap: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.wrap: setAttribute() to undefined followed by getAttribute() 
PASS textarea.wrap: setAttribute() to undefined followed by IDL get 
PASS textarea.wrap: setAttribute() to 7 followed by getAttribute() 
PASS textarea.wrap: setAttribute() to 7 followed by IDL get 
PASS textarea.wrap: setAttribute() to 1.5 followed by getAttribute() 
PASS textarea.wrap: setAttribute() to 1.5 followed by IDL get 
PASS textarea.wrap: setAttribute() to true followed by getAttribute() 
PASS textarea.wrap: setAttribute() to true followed by IDL get 
PASS textarea.wrap: setAttribute() to false followed by getAttribute() 
PASS textarea.wrap: setAttribute() to false followed by IDL get 
PASS textarea.wrap: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS textarea.wrap: setAttribute() to object "[object Object]" followed by IDL get 
PASS textarea.wrap: setAttribute() to NaN followed by getAttribute() 
PASS textarea.wrap: setAttribute() to NaN followed by IDL get 
PASS textarea.wrap: setAttribute() to Infinity followed by getAttribute() 
PASS textarea.wrap: setAttribute() to Infinity followed by IDL get 
PASS textarea.wrap: setAttribute() to -Infinity followed by getAttribute() 
PASS textarea.wrap: setAttribute() to -Infinity followed by IDL get 
PASS textarea.wrap: setAttribute() to "\0" followed by getAttribute() 
PASS textarea.wrap: setAttribute() to "\0" followed by IDL get 
PASS textarea.wrap: setAttribute() to null followed by getAttribute() 
PASS textarea.wrap: setAttribute() to null followed by IDL get 
PASS textarea.wrap: setAttribute() to object "test-toString" followed by getAttribute() 
PASS textarea.wrap: setAttribute() to object "test-toString" followed by IDL get 
PASS textarea.wrap: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS textarea.wrap: setAttribute() to object "test-valueOf" followed by IDL get 
PASS textarea.wrap: IDL set to "" should not throw 
PASS textarea.wrap: IDL set to "" followed by getAttribute() 
PASS textarea.wrap: IDL set to "" followed by IDL get 
PASS textarea.wrap: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS textarea.wrap: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS textarea.wrap: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS textarea.wrap: IDL set to undefined should not throw 
PASS textarea.wrap: IDL set to undefined followed by getAttribute() 
PASS textarea.wrap: IDL set to undefined followed by IDL get 
PASS textarea.wrap: IDL set to 7 should not throw 
PASS textarea.wrap: IDL set to 7 followed by getAttribute() 
PASS textarea.wrap: IDL set to 7 followed by IDL get 
PASS textarea.wrap: IDL set to 1.5 should not throw 
PASS textarea.wrap: IDL set to 1.5 followed by getAttribute() 
PASS textarea.wrap: IDL set to 1.5 followed by IDL get 
PASS textarea.wrap: IDL set to true should not throw 
PASS textarea.wrap: IDL set to true followed by getAttribute() 
PASS textarea.wrap: IDL set to true followed by IDL get 
PASS textarea.wrap: IDL set to false should not throw 
PASS textarea.wrap: IDL set to false followed by getAttribute() 
PASS textarea.wrap: IDL set to false followed by IDL get 
PASS textarea.wrap: IDL set to object "[object Object]" should not throw 
PASS textarea.wrap: IDL set to object "[object Object]" followed by getAttribute() 
PASS textarea.wrap: IDL set to object "[object Object]" followed by IDL get 
PASS textarea.wrap: IDL set to NaN should not throw 
PASS textarea.wrap: IDL set to NaN followed by getAttribute() 
PASS textarea.wrap: IDL set to NaN followed by IDL get 
PASS textarea.wrap: IDL set to Infinity should not throw 
PASS textarea.wrap: IDL set to Infinity followed by getAttribute() 
PASS textarea.wrap: IDL set to Infinity followed by IDL get 
PASS textarea.wrap: IDL set to -Infinity should not throw 
PASS textarea.wrap: IDL set to -Infinity followed by getAttribute() 
PASS textarea.wrap: IDL set to -Infinity followed by IDL get 
PASS textarea.wrap: IDL set to "\0" should not throw 
PASS textarea.wrap: IDL set to "\0" followed by getAttribute() 
PASS textarea.wrap: IDL set to "\0" followed by IDL get 
PASS textarea.wrap: IDL set to null should not throw 
PASS textarea.wrap: IDL set to null followed by getAttribute() 
PASS textarea.wrap: IDL set to null followed by IDL get 
PASS textarea.wrap: IDL set to object "test-toString" should not throw 
PASS textarea.wrap: IDL set to object "test-toString" followed by getAttribute() 
PASS textarea.wrap: IDL set to object "test-toString" followed by IDL get 
PASS textarea.wrap: IDL set to object "test-valueOf" should not throw 
PASS textarea.wrap: IDL set to object "test-valueOf" followed by getAttribute() 
PASS textarea.wrap: IDL set to object "test-valueOf" followed by IDL get 
FAIL textarea.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL textarea.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to null followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to true followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to false followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL textarea.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS textarea.itemScope: IDL set to "" should not throw 
FAIL textarea.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL textarea.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS textarea.itemScope: IDL set to " foo " should not throw 
PASS textarea.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL textarea.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS textarea.itemScope: IDL set to undefined should not throw 
FAIL textarea.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL textarea.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS textarea.itemScope: IDL set to null should not throw 
FAIL textarea.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL textarea.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS textarea.itemScope: IDL set to 7 should not throw 
PASS textarea.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL textarea.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS textarea.itemScope: IDL set to 1.5 should not throw 
PASS textarea.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL textarea.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS textarea.itemScope: IDL set to true should not throw 
PASS textarea.itemScope: IDL set to true followed by hasAttribute() 
PASS textarea.itemScope: IDL set to true followed by IDL get 
PASS textarea.itemScope: IDL set to false should not throw 
FAIL textarea.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS textarea.itemScope: IDL set to false followed by IDL get 
PASS textarea.itemScope: IDL set to object "[object Object]" should not throw 
PASS textarea.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL textarea.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS textarea.itemScope: IDL set to NaN should not throw 
FAIL textarea.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL textarea.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS textarea.itemScope: IDL set to Infinity should not throw 
PASS textarea.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL textarea.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS textarea.itemScope: IDL set to -Infinity should not throw 
PASS textarea.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL textarea.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS textarea.itemScope: IDL set to "\0" should not throw 
PASS textarea.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL textarea.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS textarea.itemScope: IDL set to object "test-toString" should not throw 
PASS textarea.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL textarea.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS textarea.itemScope: IDL set to object "test-valueOf" should not throw 
PASS textarea.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL textarea.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL textarea.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL textarea.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to "" followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to true followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to false followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to null followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS textarea.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL textarea.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS textarea.itemId: IDL set to "" should not throw 
FAIL textarea.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL textarea.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS textarea.itemId: IDL set to " foo " should not throw 
FAIL textarea.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL textarea.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS textarea.itemId: IDL set to "http://site.example/" should not throw 
FAIL textarea.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS textarea.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS textarea.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL textarea.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL textarea.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS textarea.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL textarea.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL textarea.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS textarea.itemId: IDL set to undefined should not throw 
FAIL textarea.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL textarea.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS textarea.itemId: IDL set to 7 should not throw 
FAIL textarea.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL textarea.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS textarea.itemId: IDL set to 1.5 should not throw 
FAIL textarea.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL textarea.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS textarea.itemId: IDL set to true should not throw 
FAIL textarea.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL textarea.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS textarea.itemId: IDL set to false should not throw 
FAIL textarea.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL textarea.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS textarea.itemId: IDL set to object "[object Object]" should not throw 
FAIL textarea.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL textarea.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS textarea.itemId: IDL set to NaN should not throw 
FAIL textarea.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL textarea.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS textarea.itemId: IDL set to Infinity should not throw 
FAIL textarea.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL textarea.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS textarea.itemId: IDL set to -Infinity should not throw 
FAIL textarea.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL textarea.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS textarea.itemId: IDL set to "\0" should not throw 
FAIL textarea.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL textarea.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS textarea.itemId: IDL set to null should not throw 
FAIL textarea.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL textarea.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS textarea.itemId: IDL set to object "test-toString" should not throw 
FAIL textarea.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL textarea.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS textarea.itemId: IDL set to object "test-valueOf" should not throw 
PASS textarea.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL textarea.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS keygen.title: typeof IDL attribute 
PASS keygen.title: IDL get with DOM attribute unset 
PASS keygen.title: setAttribute() to "" followed by getAttribute() 
PASS keygen.title: setAttribute() to "" followed by IDL get 
PASS keygen.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.title: setAttribute() to undefined followed by getAttribute() 
PASS keygen.title: setAttribute() to undefined followed by IDL get 
PASS keygen.title: setAttribute() to 7 followed by getAttribute() 
PASS keygen.title: setAttribute() to 7 followed by IDL get 
PASS keygen.title: setAttribute() to 1.5 followed by getAttribute() 
PASS keygen.title: setAttribute() to 1.5 followed by IDL get 
PASS keygen.title: setAttribute() to true followed by getAttribute() 
PASS keygen.title: setAttribute() to true followed by IDL get 
PASS keygen.title: setAttribute() to false followed by getAttribute() 
PASS keygen.title: setAttribute() to false followed by IDL get 
PASS keygen.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS keygen.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS keygen.title: setAttribute() to NaN followed by getAttribute() 
PASS keygen.title: setAttribute() to NaN followed by IDL get 
PASS keygen.title: setAttribute() to Infinity followed by getAttribute() 
PASS keygen.title: setAttribute() to Infinity followed by IDL get 
PASS keygen.title: setAttribute() to -Infinity followed by getAttribute() 
PASS keygen.title: setAttribute() to -Infinity followed by IDL get 
PASS keygen.title: setAttribute() to "\0" followed by getAttribute() 
PASS keygen.title: setAttribute() to "\0" followed by IDL get 
PASS keygen.title: setAttribute() to null followed by getAttribute() 
PASS keygen.title: setAttribute() to null followed by IDL get 
PASS keygen.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS keygen.title: setAttribute() to object "test-toString" followed by IDL get 
PASS keygen.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS keygen.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS keygen.title: IDL set to "" should not throw 
PASS keygen.title: IDL set to "" followed by getAttribute() 
PASS keygen.title: IDL set to "" followed by IDL get 
PASS keygen.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS keygen.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.title: IDL set to undefined should not throw 
PASS keygen.title: IDL set to undefined followed by getAttribute() 
PASS keygen.title: IDL set to undefined followed by IDL get 
PASS keygen.title: IDL set to 7 should not throw 
PASS keygen.title: IDL set to 7 followed by getAttribute() 
PASS keygen.title: IDL set to 7 followed by IDL get 
PASS keygen.title: IDL set to 1.5 should not throw 
PASS keygen.title: IDL set to 1.5 followed by getAttribute() 
PASS keygen.title: IDL set to 1.5 followed by IDL get 
PASS keygen.title: IDL set to true should not throw 
PASS keygen.title: IDL set to true followed by getAttribute() 
PASS keygen.title: IDL set to true followed by IDL get 
PASS keygen.title: IDL set to false should not throw 
PASS keygen.title: IDL set to false followed by getAttribute() 
PASS keygen.title: IDL set to false followed by IDL get 
PASS keygen.title: IDL set to object "[object Object]" should not throw 
PASS keygen.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS keygen.title: IDL set to object "[object Object]" followed by IDL get 
PASS keygen.title: IDL set to NaN should not throw 
PASS keygen.title: IDL set to NaN followed by getAttribute() 
PASS keygen.title: IDL set to NaN followed by IDL get 
PASS keygen.title: IDL set to Infinity should not throw 
PASS keygen.title: IDL set to Infinity followed by getAttribute() 
PASS keygen.title: IDL set to Infinity followed by IDL get 
PASS keygen.title: IDL set to -Infinity should not throw 
PASS keygen.title: IDL set to -Infinity followed by getAttribute() 
PASS keygen.title: IDL set to -Infinity followed by IDL get 
PASS keygen.title: IDL set to "\0" should not throw 
PASS keygen.title: IDL set to "\0" followed by getAttribute() 
PASS keygen.title: IDL set to "\0" followed by IDL get 
PASS keygen.title: IDL set to null should not throw 
PASS keygen.title: IDL set to null followed by getAttribute() 
PASS keygen.title: IDL set to null followed by IDL get 
PASS keygen.title: IDL set to object "test-toString" should not throw 
PASS keygen.title: IDL set to object "test-toString" followed by getAttribute() 
PASS keygen.title: IDL set to object "test-toString" followed by IDL get 
PASS keygen.title: IDL set to object "test-valueOf" should not throw 
PASS keygen.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS keygen.title: IDL set to object "test-valueOf" followed by IDL get 
PASS keygen.lang: typeof IDL attribute 
PASS keygen.lang: IDL get with DOM attribute unset 
PASS keygen.lang: setAttribute() to "" followed by getAttribute() 
PASS keygen.lang: setAttribute() to "" followed by IDL get 
PASS keygen.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.lang: setAttribute() to undefined followed by getAttribute() 
PASS keygen.lang: setAttribute() to undefined followed by IDL get 
PASS keygen.lang: setAttribute() to 7 followed by getAttribute() 
PASS keygen.lang: setAttribute() to 7 followed by IDL get 
PASS keygen.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS keygen.lang: setAttribute() to 1.5 followed by IDL get 
PASS keygen.lang: setAttribute() to true followed by getAttribute() 
PASS keygen.lang: setAttribute() to true followed by IDL get 
PASS keygen.lang: setAttribute() to false followed by getAttribute() 
PASS keygen.lang: setAttribute() to false followed by IDL get 
PASS keygen.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS keygen.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS keygen.lang: setAttribute() to NaN followed by getAttribute() 
PASS keygen.lang: setAttribute() to NaN followed by IDL get 
PASS keygen.lang: setAttribute() to Infinity followed by getAttribute() 
PASS keygen.lang: setAttribute() to Infinity followed by IDL get 
PASS keygen.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS keygen.lang: setAttribute() to -Infinity followed by IDL get 
PASS keygen.lang: setAttribute() to "\0" followed by getAttribute() 
PASS keygen.lang: setAttribute() to "\0" followed by IDL get 
PASS keygen.lang: setAttribute() to null followed by getAttribute() 
PASS keygen.lang: setAttribute() to null followed by IDL get 
PASS keygen.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS keygen.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS keygen.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS keygen.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS keygen.lang: IDL set to "" should not throw 
PASS keygen.lang: IDL set to "" followed by getAttribute() 
PASS keygen.lang: IDL set to "" followed by IDL get 
PASS keygen.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS keygen.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.lang: IDL set to undefined should not throw 
PASS keygen.lang: IDL set to undefined followed by getAttribute() 
PASS keygen.lang: IDL set to undefined followed by IDL get 
PASS keygen.lang: IDL set to 7 should not throw 
PASS keygen.lang: IDL set to 7 followed by getAttribute() 
PASS keygen.lang: IDL set to 7 followed by IDL get 
PASS keygen.lang: IDL set to 1.5 should not throw 
PASS keygen.lang: IDL set to 1.5 followed by getAttribute() 
PASS keygen.lang: IDL set to 1.5 followed by IDL get 
PASS keygen.lang: IDL set to true should not throw 
PASS keygen.lang: IDL set to true followed by getAttribute() 
PASS keygen.lang: IDL set to true followed by IDL get 
PASS keygen.lang: IDL set to false should not throw 
PASS keygen.lang: IDL set to false followed by getAttribute() 
PASS keygen.lang: IDL set to false followed by IDL get 
PASS keygen.lang: IDL set to object "[object Object]" should not throw 
PASS keygen.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS keygen.lang: IDL set to object "[object Object]" followed by IDL get 
PASS keygen.lang: IDL set to NaN should not throw 
PASS keygen.lang: IDL set to NaN followed by getAttribute() 
PASS keygen.lang: IDL set to NaN followed by IDL get 
PASS keygen.lang: IDL set to Infinity should not throw 
PASS keygen.lang: IDL set to Infinity followed by getAttribute() 
PASS keygen.lang: IDL set to Infinity followed by IDL get 
PASS keygen.lang: IDL set to -Infinity should not throw 
PASS keygen.lang: IDL set to -Infinity followed by getAttribute() 
PASS keygen.lang: IDL set to -Infinity followed by IDL get 
PASS keygen.lang: IDL set to "\0" should not throw 
PASS keygen.lang: IDL set to "\0" followed by getAttribute() 
PASS keygen.lang: IDL set to "\0" followed by IDL get 
PASS keygen.lang: IDL set to null should not throw 
PASS keygen.lang: IDL set to null followed by getAttribute() 
PASS keygen.lang: IDL set to null followed by IDL get 
PASS keygen.lang: IDL set to object "test-toString" should not throw 
PASS keygen.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS keygen.lang: IDL set to object "test-toString" followed by IDL get 
PASS keygen.lang: IDL set to object "test-valueOf" should not throw 
PASS keygen.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS keygen.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS keygen.dir: typeof IDL attribute 
PASS keygen.dir: IDL get with DOM attribute unset 
PASS keygen.dir: setAttribute() to "" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "" followed by IDL get 
PASS keygen.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.dir: setAttribute() to undefined followed by getAttribute() 
PASS keygen.dir: setAttribute() to undefined followed by IDL get 
PASS keygen.dir: setAttribute() to 7 followed by getAttribute() 
PASS keygen.dir: setAttribute() to 7 followed by IDL get 
PASS keygen.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS keygen.dir: setAttribute() to 1.5 followed by IDL get 
PASS keygen.dir: setAttribute() to true followed by getAttribute() 
PASS keygen.dir: setAttribute() to true followed by IDL get 
PASS keygen.dir: setAttribute() to false followed by getAttribute() 
PASS keygen.dir: setAttribute() to false followed by IDL get 
PASS keygen.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS keygen.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS keygen.dir: setAttribute() to NaN followed by getAttribute() 
PASS keygen.dir: setAttribute() to NaN followed by IDL get 
PASS keygen.dir: setAttribute() to Infinity followed by getAttribute() 
PASS keygen.dir: setAttribute() to Infinity followed by IDL get 
PASS keygen.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS keygen.dir: setAttribute() to -Infinity followed by IDL get 
PASS keygen.dir: setAttribute() to "\0" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "\0" followed by IDL get 
PASS keygen.dir: setAttribute() to null followed by getAttribute() 
PASS keygen.dir: setAttribute() to null followed by IDL get 
PASS keygen.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS keygen.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS keygen.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS keygen.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS keygen.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "ltr" followed by IDL get 
PASS keygen.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "xltr" followed by IDL get 
PASS keygen.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS keygen.dir: setAttribute() to "tr" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "tr" followed by IDL get 
PASS keygen.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "LTR" followed by IDL get 
PASS keygen.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "rtl" followed by IDL get 
PASS keygen.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "xrtl" followed by IDL get 
PASS keygen.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS keygen.dir: setAttribute() to "tl" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "tl" followed by IDL get 
PASS keygen.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "RTL" followed by IDL get 
PASS keygen.dir: setAttribute() to "auto" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "auto" followed by IDL get 
PASS keygen.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "xauto" followed by IDL get 
PASS keygen.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "auto\0" followed by IDL get 
PASS keygen.dir: setAttribute() to "uto" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "uto" followed by IDL get 
PASS keygen.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS keygen.dir: setAttribute() to "AUTO" followed by IDL get 
PASS keygen.dir: IDL set to "" should not throw 
PASS keygen.dir: IDL set to "" followed by getAttribute() 
PASS keygen.dir: IDL set to "" followed by IDL get 
PASS keygen.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS keygen.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.dir: IDL set to undefined should not throw 
PASS keygen.dir: IDL set to undefined followed by getAttribute() 
PASS keygen.dir: IDL set to undefined followed by IDL get 
PASS keygen.dir: IDL set to 7 should not throw 
PASS keygen.dir: IDL set to 7 followed by getAttribute() 
PASS keygen.dir: IDL set to 7 followed by IDL get 
PASS keygen.dir: IDL set to 1.5 should not throw 
PASS keygen.dir: IDL set to 1.5 followed by getAttribute() 
PASS keygen.dir: IDL set to 1.5 followed by IDL get 
PASS keygen.dir: IDL set to true should not throw 
PASS keygen.dir: IDL set to true followed by getAttribute() 
PASS keygen.dir: IDL set to true followed by IDL get 
PASS keygen.dir: IDL set to false should not throw 
PASS keygen.dir: IDL set to false followed by getAttribute() 
PASS keygen.dir: IDL set to false followed by IDL get 
PASS keygen.dir: IDL set to object "[object Object]" should not throw 
PASS keygen.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS keygen.dir: IDL set to object "[object Object]" followed by IDL get 
PASS keygen.dir: IDL set to NaN should not throw 
PASS keygen.dir: IDL set to NaN followed by getAttribute() 
PASS keygen.dir: IDL set to NaN followed by IDL get 
PASS keygen.dir: IDL set to Infinity should not throw 
PASS keygen.dir: IDL set to Infinity followed by getAttribute() 
PASS keygen.dir: IDL set to Infinity followed by IDL get 
PASS keygen.dir: IDL set to -Infinity should not throw 
PASS keygen.dir: IDL set to -Infinity followed by getAttribute() 
PASS keygen.dir: IDL set to -Infinity followed by IDL get 
PASS keygen.dir: IDL set to "\0" should not throw 
PASS keygen.dir: IDL set to "\0" followed by getAttribute() 
PASS keygen.dir: IDL set to "\0" followed by IDL get 
PASS keygen.dir: IDL set to null should not throw 
PASS keygen.dir: IDL set to null followed by IDL get 
PASS keygen.dir: IDL set to object "test-toString" should not throw 
PASS keygen.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS keygen.dir: IDL set to object "test-toString" followed by IDL get 
PASS keygen.dir: IDL set to object "test-valueOf" should not throw 
PASS keygen.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS keygen.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS keygen.dir: IDL set to "ltr" should not throw 
PASS keygen.dir: IDL set to "ltr" followed by getAttribute() 
PASS keygen.dir: IDL set to "ltr" followed by IDL get 
PASS keygen.dir: IDL set to "xltr" should not throw 
PASS keygen.dir: IDL set to "xltr" followed by getAttribute() 
PASS keygen.dir: IDL set to "xltr" followed by IDL get 
PASS keygen.dir: IDL set to "ltr\0" should not throw 
PASS keygen.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS keygen.dir: IDL set to "ltr\0" followed by IDL get 
PASS keygen.dir: IDL set to "tr" should not throw 
PASS keygen.dir: IDL set to "tr" followed by getAttribute() 
PASS keygen.dir: IDL set to "tr" followed by IDL get 
PASS keygen.dir: IDL set to "LTR" should not throw 
PASS keygen.dir: IDL set to "LTR" followed by getAttribute() 
PASS keygen.dir: IDL set to "LTR" followed by IDL get 
PASS keygen.dir: IDL set to "rtl" should not throw 
PASS keygen.dir: IDL set to "rtl" followed by getAttribute() 
PASS keygen.dir: IDL set to "rtl" followed by IDL get 
PASS keygen.dir: IDL set to "xrtl" should not throw 
PASS keygen.dir: IDL set to "xrtl" followed by getAttribute() 
PASS keygen.dir: IDL set to "xrtl" followed by IDL get 
PASS keygen.dir: IDL set to "rtl\0" should not throw 
PASS keygen.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS keygen.dir: IDL set to "rtl\0" followed by IDL get 
PASS keygen.dir: IDL set to "tl" should not throw 
PASS keygen.dir: IDL set to "tl" followed by getAttribute() 
PASS keygen.dir: IDL set to "tl" followed by IDL get 
PASS keygen.dir: IDL set to "RTL" should not throw 
PASS keygen.dir: IDL set to "RTL" followed by getAttribute() 
PASS keygen.dir: IDL set to "RTL" followed by IDL get 
PASS keygen.dir: IDL set to "auto" should not throw 
PASS keygen.dir: IDL set to "auto" followed by getAttribute() 
PASS keygen.dir: IDL set to "auto" followed by IDL get 
PASS keygen.dir: IDL set to "xauto" should not throw 
PASS keygen.dir: IDL set to "xauto" followed by getAttribute() 
PASS keygen.dir: IDL set to "xauto" followed by IDL get 
PASS keygen.dir: IDL set to "auto\0" should not throw 
PASS keygen.dir: IDL set to "auto\0" followed by getAttribute() 
PASS keygen.dir: IDL set to "auto\0" followed by IDL get 
PASS keygen.dir: IDL set to "uto" should not throw 
PASS keygen.dir: IDL set to "uto" followed by getAttribute() 
PASS keygen.dir: IDL set to "uto" followed by IDL get 
PASS keygen.dir: IDL set to "AUTO" should not throw 
PASS keygen.dir: IDL set to "AUTO" followed by getAttribute() 
PASS keygen.dir: IDL set to "AUTO" followed by IDL get 
PASS keygen.className (<keygen class>): typeof IDL attribute 
PASS keygen.className (<keygen class>): IDL get with DOM attribute unset 
PASS keygen.className (<keygen class>): setAttribute() to "" followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to "" followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to undefined followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to undefined followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to 7 followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to 7 followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to 1.5 followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to 1.5 followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to true followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to true followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to false followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to false followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to NaN followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to NaN followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to Infinity followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to Infinity followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to -Infinity followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to -Infinity followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to "\0" followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to "\0" followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to null followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to null followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to object "test-toString" followed by IDL get 
PASS keygen.className (<keygen class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS keygen.className (<keygen class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to "" should not throw 
PASS keygen.className (<keygen class>): IDL set to "" followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to "" followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS keygen.className (<keygen class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to undefined should not throw 
PASS keygen.className (<keygen class>): IDL set to undefined followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to undefined followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to 7 should not throw 
PASS keygen.className (<keygen class>): IDL set to 7 followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to 7 followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to 1.5 should not throw 
PASS keygen.className (<keygen class>): IDL set to 1.5 followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to 1.5 followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to true should not throw 
PASS keygen.className (<keygen class>): IDL set to true followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to true followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to false should not throw 
PASS keygen.className (<keygen class>): IDL set to false followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to false followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to object "[object Object]" should not throw 
PASS keygen.className (<keygen class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to object "[object Object]" followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to NaN should not throw 
PASS keygen.className (<keygen class>): IDL set to NaN followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to NaN followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to Infinity should not throw 
PASS keygen.className (<keygen class>): IDL set to Infinity followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to Infinity followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to -Infinity should not throw 
PASS keygen.className (<keygen class>): IDL set to -Infinity followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to -Infinity followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to "\0" should not throw 
PASS keygen.className (<keygen class>): IDL set to "\0" followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to "\0" followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to null should not throw 
PASS keygen.className (<keygen class>): IDL set to null followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to null followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to object "test-toString" should not throw 
PASS keygen.className (<keygen class>): IDL set to object "test-toString" followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to object "test-toString" followed by IDL get 
PASS keygen.className (<keygen class>): IDL set to object "test-valueOf" should not throw 
PASS keygen.className (<keygen class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS keygen.className (<keygen class>): IDL set to object "test-valueOf" followed by IDL get 
PASS keygen.hidden: typeof IDL attribute 
PASS keygen.hidden: IDL get with DOM attribute unset 
PASS keygen.hidden: setAttribute() to "" followed by getAttribute() 
PASS keygen.hidden: setAttribute() to "" followed by IDL get 
PASS keygen.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS keygen.hidden: setAttribute() to " foo " followed by IDL get 
PASS keygen.hidden: setAttribute() to undefined followed by getAttribute() 
PASS keygen.hidden: setAttribute() to undefined followed by IDL get 
PASS keygen.hidden: setAttribute() to null followed by getAttribute() 
PASS keygen.hidden: setAttribute() to null followed by IDL get 
PASS keygen.hidden: setAttribute() to 7 followed by getAttribute() 
PASS keygen.hidden: setAttribute() to 7 followed by IDL get 
PASS keygen.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS keygen.hidden: setAttribute() to 1.5 followed by IDL get 
PASS keygen.hidden: setAttribute() to true followed by getAttribute() 
PASS keygen.hidden: setAttribute() to true followed by IDL get 
PASS keygen.hidden: setAttribute() to false followed by getAttribute() 
PASS keygen.hidden: setAttribute() to false followed by IDL get 
PASS keygen.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS keygen.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS keygen.hidden: setAttribute() to NaN followed by getAttribute() 
PASS keygen.hidden: setAttribute() to NaN followed by IDL get 
PASS keygen.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS keygen.hidden: setAttribute() to Infinity followed by IDL get 
PASS keygen.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS keygen.hidden: setAttribute() to -Infinity followed by IDL get 
PASS keygen.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS keygen.hidden: setAttribute() to "\0" followed by IDL get 
PASS keygen.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS keygen.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS keygen.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS keygen.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS keygen.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS keygen.hidden: setAttribute() to "hidden" followed by IDL get 
PASS keygen.hidden: IDL set to "" should not throw 
PASS keygen.hidden: IDL set to "" followed by hasAttribute() 
PASS keygen.hidden: IDL set to "" followed by IDL get 
PASS keygen.hidden: IDL set to " foo " should not throw 
PASS keygen.hidden: IDL set to " foo " followed by hasAttribute() 
PASS keygen.hidden: IDL set to " foo " followed by IDL get 
PASS keygen.hidden: IDL set to undefined should not throw 
PASS keygen.hidden: IDL set to undefined followed by hasAttribute() 
PASS keygen.hidden: IDL set to undefined followed by IDL get 
PASS keygen.hidden: IDL set to null should not throw 
PASS keygen.hidden: IDL set to null followed by hasAttribute() 
PASS keygen.hidden: IDL set to null followed by IDL get 
PASS keygen.hidden: IDL set to 7 should not throw 
PASS keygen.hidden: IDL set to 7 followed by hasAttribute() 
PASS keygen.hidden: IDL set to 7 followed by IDL get 
PASS keygen.hidden: IDL set to 1.5 should not throw 
PASS keygen.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS keygen.hidden: IDL set to 1.5 followed by IDL get 
PASS keygen.hidden: IDL set to true should not throw 
PASS keygen.hidden: IDL set to true followed by hasAttribute() 
PASS keygen.hidden: IDL set to true followed by IDL get 
PASS keygen.hidden: IDL set to false should not throw 
PASS keygen.hidden: IDL set to false followed by hasAttribute() 
PASS keygen.hidden: IDL set to false followed by IDL get 
PASS keygen.hidden: IDL set to object "[object Object]" should not throw 
PASS keygen.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS keygen.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS keygen.hidden: IDL set to NaN should not throw 
PASS keygen.hidden: IDL set to NaN followed by hasAttribute() 
PASS keygen.hidden: IDL set to NaN followed by IDL get 
PASS keygen.hidden: IDL set to Infinity should not throw 
PASS keygen.hidden: IDL set to Infinity followed by hasAttribute() 
PASS keygen.hidden: IDL set to Infinity followed by IDL get 
PASS keygen.hidden: IDL set to -Infinity should not throw 
PASS keygen.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS keygen.hidden: IDL set to -Infinity followed by IDL get 
PASS keygen.hidden: IDL set to "\0" should not throw 
PASS keygen.hidden: IDL set to "\0" followed by hasAttribute() 
PASS keygen.hidden: IDL set to "\0" followed by IDL get 
PASS keygen.hidden: IDL set to object "test-toString" should not throw 
PASS keygen.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS keygen.hidden: IDL set to object "test-toString" followed by IDL get 
PASS keygen.hidden: IDL set to object "test-valueOf" should not throw 
PASS keygen.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS keygen.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS keygen.accessKey: typeof IDL attribute 
PASS keygen.accessKey: IDL get with DOM attribute unset 
PASS keygen.accessKey: setAttribute() to "" followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to "" followed by IDL get 
PASS keygen.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to undefined followed by IDL get 
PASS keygen.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to 7 followed by IDL get 
PASS keygen.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS keygen.accessKey: setAttribute() to true followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to true followed by IDL get 
PASS keygen.accessKey: setAttribute() to false followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to false followed by IDL get 
PASS keygen.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS keygen.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to NaN followed by IDL get 
PASS keygen.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to Infinity followed by IDL get 
PASS keygen.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS keygen.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to "\0" followed by IDL get 
PASS keygen.accessKey: setAttribute() to null followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to null followed by IDL get 
PASS keygen.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS keygen.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS keygen.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS keygen.accessKey: IDL set to "" should not throw 
PASS keygen.accessKey: IDL set to "" followed by getAttribute() 
PASS keygen.accessKey: IDL set to "" followed by IDL get 
PASS keygen.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS keygen.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.accessKey: IDL set to undefined should not throw 
PASS keygen.accessKey: IDL set to undefined followed by getAttribute() 
PASS keygen.accessKey: IDL set to undefined followed by IDL get 
PASS keygen.accessKey: IDL set to 7 should not throw 
PASS keygen.accessKey: IDL set to 7 followed by getAttribute() 
PASS keygen.accessKey: IDL set to 7 followed by IDL get 
PASS keygen.accessKey: IDL set to 1.5 should not throw 
PASS keygen.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS keygen.accessKey: IDL set to 1.5 followed by IDL get 
PASS keygen.accessKey: IDL set to true should not throw 
PASS keygen.accessKey: IDL set to true followed by getAttribute() 
PASS keygen.accessKey: IDL set to true followed by IDL get 
PASS keygen.accessKey: IDL set to false should not throw 
PASS keygen.accessKey: IDL set to false followed by getAttribute() 
PASS keygen.accessKey: IDL set to false followed by IDL get 
PASS keygen.accessKey: IDL set to object "[object Object]" should not throw 
PASS keygen.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS keygen.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS keygen.accessKey: IDL set to NaN should not throw 
PASS keygen.accessKey: IDL set to NaN followed by getAttribute() 
PASS keygen.accessKey: IDL set to NaN followed by IDL get 
PASS keygen.accessKey: IDL set to Infinity should not throw 
PASS keygen.accessKey: IDL set to Infinity followed by getAttribute() 
PASS keygen.accessKey: IDL set to Infinity followed by IDL get 
PASS keygen.accessKey: IDL set to -Infinity should not throw 
PASS keygen.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS keygen.accessKey: IDL set to -Infinity followed by IDL get 
PASS keygen.accessKey: IDL set to "\0" should not throw 
PASS keygen.accessKey: IDL set to "\0" followed by getAttribute() 
PASS keygen.accessKey: IDL set to "\0" followed by IDL get 
PASS keygen.accessKey: IDL set to null should not throw 
PASS keygen.accessKey: IDL set to null followed by getAttribute() 
PASS keygen.accessKey: IDL set to null followed by IDL get 
PASS keygen.accessKey: IDL set to object "test-toString" should not throw 
PASS keygen.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS keygen.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS keygen.accessKey: IDL set to object "test-valueOf" should not throw 
PASS keygen.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS keygen.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS keygen.tabIndex: typeof IDL attribute 
PASS keygen.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to -36 followed by IDL get 
PASS keygen.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to -1 followed by IDL get 
PASS keygen.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to 0 followed by IDL get 
PASS keygen.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to 1 followed by IDL get 
PASS keygen.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL keygen.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS keygen.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL keygen.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS keygen.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS keygen.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS keygen.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to "0" followed by IDL get 
PASS keygen.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to "1" followed by IDL get 
PASS keygen.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS keygen.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS keygen.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS keygen.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS keygen.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS keygen.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS keygen.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS keygen.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS keygen.tabIndex: IDL set to -36 should not throw 
PASS keygen.tabIndex: IDL set to -36 followed by getAttribute() 
PASS keygen.tabIndex: IDL set to -36 followed by IDL get 
PASS keygen.tabIndex: IDL set to -1 should not throw 
PASS keygen.tabIndex: IDL set to -1 followed by getAttribute() 
PASS keygen.tabIndex: IDL set to -1 followed by IDL get 
PASS keygen.tabIndex: IDL set to 0 should not throw 
PASS keygen.tabIndex: IDL set to 0 followed by getAttribute() 
PASS keygen.tabIndex: IDL set to 0 followed by IDL get 
PASS keygen.tabIndex: IDL set to 1 should not throw 
PASS keygen.tabIndex: IDL set to 1 followed by getAttribute() 
PASS keygen.tabIndex: IDL set to 1 followed by IDL get 
PASS keygen.tabIndex: IDL set to 2147483647 should not throw 
PASS keygen.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL keygen.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS keygen.tabIndex: IDL set to -2147483648 should not throw 
PASS keygen.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL keygen.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS keygen.autofocus: typeof IDL attribute 
PASS keygen.autofocus: IDL get with DOM attribute unset 
PASS keygen.autofocus: setAttribute() to "" followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to "" followed by IDL get 
PASS keygen.autofocus: setAttribute() to " foo " followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to " foo " followed by IDL get 
PASS keygen.autofocus: setAttribute() to undefined followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to undefined followed by IDL get 
PASS keygen.autofocus: setAttribute() to null followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to null followed by IDL get 
PASS keygen.autofocus: setAttribute() to 7 followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to 7 followed by IDL get 
PASS keygen.autofocus: setAttribute() to 1.5 followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to 1.5 followed by IDL get 
PASS keygen.autofocus: setAttribute() to true followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to true followed by IDL get 
PASS keygen.autofocus: setAttribute() to false followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to false followed by IDL get 
PASS keygen.autofocus: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to object "[object Object]" followed by IDL get 
PASS keygen.autofocus: setAttribute() to NaN followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to NaN followed by IDL get 
PASS keygen.autofocus: setAttribute() to Infinity followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to Infinity followed by IDL get 
PASS keygen.autofocus: setAttribute() to -Infinity followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to -Infinity followed by IDL get 
PASS keygen.autofocus: setAttribute() to "\0" followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to "\0" followed by IDL get 
PASS keygen.autofocus: setAttribute() to object "test-toString" followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to object "test-toString" followed by IDL get 
PASS keygen.autofocus: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to object "test-valueOf" followed by IDL get 
PASS keygen.autofocus: setAttribute() to "autofocus" followed by getAttribute() 
PASS keygen.autofocus: setAttribute() to "autofocus" followed by IDL get 
PASS keygen.autofocus: IDL set to "" should not throw 
PASS keygen.autofocus: IDL set to "" followed by hasAttribute() 
PASS keygen.autofocus: IDL set to "" followed by IDL get 
PASS keygen.autofocus: IDL set to " foo " should not throw 
PASS keygen.autofocus: IDL set to " foo " followed by hasAttribute() 
PASS keygen.autofocus: IDL set to " foo " followed by IDL get 
PASS keygen.autofocus: IDL set to undefined should not throw 
PASS keygen.autofocus: IDL set to undefined followed by hasAttribute() 
PASS keygen.autofocus: IDL set to undefined followed by IDL get 
PASS keygen.autofocus: IDL set to null should not throw 
PASS keygen.autofocus: IDL set to null followed by hasAttribute() 
PASS keygen.autofocus: IDL set to null followed by IDL get 
PASS keygen.autofocus: IDL set to 7 should not throw 
PASS keygen.autofocus: IDL set to 7 followed by hasAttribute() 
PASS keygen.autofocus: IDL set to 7 followed by IDL get 
PASS keygen.autofocus: IDL set to 1.5 should not throw 
PASS keygen.autofocus: IDL set to 1.5 followed by hasAttribute() 
PASS keygen.autofocus: IDL set to 1.5 followed by IDL get 
PASS keygen.autofocus: IDL set to true should not throw 
PASS keygen.autofocus: IDL set to true followed by hasAttribute() 
PASS keygen.autofocus: IDL set to true followed by IDL get 
PASS keygen.autofocus: IDL set to false should not throw 
PASS keygen.autofocus: IDL set to false followed by hasAttribute() 
PASS keygen.autofocus: IDL set to false followed by IDL get 
PASS keygen.autofocus: IDL set to object "[object Object]" should not throw 
PASS keygen.autofocus: IDL set to object "[object Object]" followed by hasAttribute() 
PASS keygen.autofocus: IDL set to object "[object Object]" followed by IDL get 
PASS keygen.autofocus: IDL set to NaN should not throw 
PASS keygen.autofocus: IDL set to NaN followed by hasAttribute() 
PASS keygen.autofocus: IDL set to NaN followed by IDL get 
PASS keygen.autofocus: IDL set to Infinity should not throw 
PASS keygen.autofocus: IDL set to Infinity followed by hasAttribute() 
PASS keygen.autofocus: IDL set to Infinity followed by IDL get 
PASS keygen.autofocus: IDL set to -Infinity should not throw 
PASS keygen.autofocus: IDL set to -Infinity followed by hasAttribute() 
PASS keygen.autofocus: IDL set to -Infinity followed by IDL get 
PASS keygen.autofocus: IDL set to "\0" should not throw 
PASS keygen.autofocus: IDL set to "\0" followed by hasAttribute() 
PASS keygen.autofocus: IDL set to "\0" followed by IDL get 
PASS keygen.autofocus: IDL set to object "test-toString" should not throw 
PASS keygen.autofocus: IDL set to object "test-toString" followed by hasAttribute() 
PASS keygen.autofocus: IDL set to object "test-toString" followed by IDL get 
PASS keygen.autofocus: IDL set to object "test-valueOf" should not throw 
PASS keygen.autofocus: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS keygen.autofocus: IDL set to object "test-valueOf" followed by IDL get 
PASS keygen.challenge: typeof IDL attribute 
PASS keygen.challenge: IDL get with DOM attribute unset 
PASS keygen.challenge: setAttribute() to "" followed by getAttribute() 
PASS keygen.challenge: setAttribute() to "" followed by IDL get 
PASS keygen.challenge: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.challenge: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.challenge: setAttribute() to undefined followed by getAttribute() 
PASS keygen.challenge: setAttribute() to undefined followed by IDL get 
PASS keygen.challenge: setAttribute() to 7 followed by getAttribute() 
PASS keygen.challenge: setAttribute() to 7 followed by IDL get 
PASS keygen.challenge: setAttribute() to 1.5 followed by getAttribute() 
PASS keygen.challenge: setAttribute() to 1.5 followed by IDL get 
PASS keygen.challenge: setAttribute() to true followed by getAttribute() 
PASS keygen.challenge: setAttribute() to true followed by IDL get 
PASS keygen.challenge: setAttribute() to false followed by getAttribute() 
PASS keygen.challenge: setAttribute() to false followed by IDL get 
PASS keygen.challenge: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS keygen.challenge: setAttribute() to object "[object Object]" followed by IDL get 
PASS keygen.challenge: setAttribute() to NaN followed by getAttribute() 
PASS keygen.challenge: setAttribute() to NaN followed by IDL get 
PASS keygen.challenge: setAttribute() to Infinity followed by getAttribute() 
PASS keygen.challenge: setAttribute() to Infinity followed by IDL get 
PASS keygen.challenge: setAttribute() to -Infinity followed by getAttribute() 
PASS keygen.challenge: setAttribute() to -Infinity followed by IDL get 
PASS keygen.challenge: setAttribute() to "\0" followed by getAttribute() 
PASS keygen.challenge: setAttribute() to "\0" followed by IDL get 
PASS keygen.challenge: setAttribute() to null followed by getAttribute() 
PASS keygen.challenge: setAttribute() to null followed by IDL get 
PASS keygen.challenge: setAttribute() to object "test-toString" followed by getAttribute() 
PASS keygen.challenge: setAttribute() to object "test-toString" followed by IDL get 
PASS keygen.challenge: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS keygen.challenge: setAttribute() to object "test-valueOf" followed by IDL get 
PASS keygen.challenge: IDL set to "" should not throw 
PASS keygen.challenge: IDL set to "" followed by getAttribute() 
PASS keygen.challenge: IDL set to "" followed by IDL get 
PASS keygen.challenge: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS keygen.challenge: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.challenge: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.challenge: IDL set to undefined should not throw 
PASS keygen.challenge: IDL set to undefined followed by getAttribute() 
PASS keygen.challenge: IDL set to undefined followed by IDL get 
PASS keygen.challenge: IDL set to 7 should not throw 
PASS keygen.challenge: IDL set to 7 followed by getAttribute() 
PASS keygen.challenge: IDL set to 7 followed by IDL get 
PASS keygen.challenge: IDL set to 1.5 should not throw 
PASS keygen.challenge: IDL set to 1.5 followed by getAttribute() 
PASS keygen.challenge: IDL set to 1.5 followed by IDL get 
PASS keygen.challenge: IDL set to true should not throw 
PASS keygen.challenge: IDL set to true followed by getAttribute() 
PASS keygen.challenge: IDL set to true followed by IDL get 
PASS keygen.challenge: IDL set to false should not throw 
PASS keygen.challenge: IDL set to false followed by getAttribute() 
PASS keygen.challenge: IDL set to false followed by IDL get 
PASS keygen.challenge: IDL set to object "[object Object]" should not throw 
PASS keygen.challenge: IDL set to object "[object Object]" followed by getAttribute() 
PASS keygen.challenge: IDL set to object "[object Object]" followed by IDL get 
PASS keygen.challenge: IDL set to NaN should not throw 
PASS keygen.challenge: IDL set to NaN followed by getAttribute() 
PASS keygen.challenge: IDL set to NaN followed by IDL get 
PASS keygen.challenge: IDL set to Infinity should not throw 
PASS keygen.challenge: IDL set to Infinity followed by getAttribute() 
PASS keygen.challenge: IDL set to Infinity followed by IDL get 
PASS keygen.challenge: IDL set to -Infinity should not throw 
PASS keygen.challenge: IDL set to -Infinity followed by getAttribute() 
PASS keygen.challenge: IDL set to -Infinity followed by IDL get 
PASS keygen.challenge: IDL set to "\0" should not throw 
PASS keygen.challenge: IDL set to "\0" followed by getAttribute() 
PASS keygen.challenge: IDL set to "\0" followed by IDL get 
PASS keygen.challenge: IDL set to null should not throw 
PASS keygen.challenge: IDL set to null followed by getAttribute() 
PASS keygen.challenge: IDL set to null followed by IDL get 
PASS keygen.challenge: IDL set to object "test-toString" should not throw 
PASS keygen.challenge: IDL set to object "test-toString" followed by getAttribute() 
PASS keygen.challenge: IDL set to object "test-toString" followed by IDL get 
PASS keygen.challenge: IDL set to object "test-valueOf" should not throw 
PASS keygen.challenge: IDL set to object "test-valueOf" followed by getAttribute() 
PASS keygen.challenge: IDL set to object "test-valueOf" followed by IDL get 
PASS keygen.disabled: typeof IDL attribute 
PASS keygen.disabled: IDL get with DOM attribute unset 
PASS keygen.disabled: setAttribute() to "" followed by getAttribute() 
PASS keygen.disabled: setAttribute() to "" followed by IDL get 
PASS keygen.disabled: setAttribute() to " foo " followed by getAttribute() 
PASS keygen.disabled: setAttribute() to " foo " followed by IDL get 
PASS keygen.disabled: setAttribute() to undefined followed by getAttribute() 
PASS keygen.disabled: setAttribute() to undefined followed by IDL get 
PASS keygen.disabled: setAttribute() to null followed by getAttribute() 
PASS keygen.disabled: setAttribute() to null followed by IDL get 
PASS keygen.disabled: setAttribute() to 7 followed by getAttribute() 
PASS keygen.disabled: setAttribute() to 7 followed by IDL get 
PASS keygen.disabled: setAttribute() to 1.5 followed by getAttribute() 
PASS keygen.disabled: setAttribute() to 1.5 followed by IDL get 
PASS keygen.disabled: setAttribute() to true followed by getAttribute() 
PASS keygen.disabled: setAttribute() to true followed by IDL get 
PASS keygen.disabled: setAttribute() to false followed by getAttribute() 
PASS keygen.disabled: setAttribute() to false followed by IDL get 
PASS keygen.disabled: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS keygen.disabled: setAttribute() to object "[object Object]" followed by IDL get 
PASS keygen.disabled: setAttribute() to NaN followed by getAttribute() 
PASS keygen.disabled: setAttribute() to NaN followed by IDL get 
PASS keygen.disabled: setAttribute() to Infinity followed by getAttribute() 
PASS keygen.disabled: setAttribute() to Infinity followed by IDL get 
PASS keygen.disabled: setAttribute() to -Infinity followed by getAttribute() 
PASS keygen.disabled: setAttribute() to -Infinity followed by IDL get 
PASS keygen.disabled: setAttribute() to "\0" followed by getAttribute() 
PASS keygen.disabled: setAttribute() to "\0" followed by IDL get 
PASS keygen.disabled: setAttribute() to object "test-toString" followed by getAttribute() 
PASS keygen.disabled: setAttribute() to object "test-toString" followed by IDL get 
PASS keygen.disabled: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS keygen.disabled: setAttribute() to object "test-valueOf" followed by IDL get 
PASS keygen.disabled: setAttribute() to "disabled" followed by getAttribute() 
PASS keygen.disabled: setAttribute() to "disabled" followed by IDL get 
PASS keygen.disabled: IDL set to "" should not throw 
PASS keygen.disabled: IDL set to "" followed by hasAttribute() 
PASS keygen.disabled: IDL set to "" followed by IDL get 
PASS keygen.disabled: IDL set to " foo " should not throw 
PASS keygen.disabled: IDL set to " foo " followed by hasAttribute() 
PASS keygen.disabled: IDL set to " foo " followed by IDL get 
PASS keygen.disabled: IDL set to undefined should not throw 
PASS keygen.disabled: IDL set to undefined followed by hasAttribute() 
PASS keygen.disabled: IDL set to undefined followed by IDL get 
PASS keygen.disabled: IDL set to null should not throw 
PASS keygen.disabled: IDL set to null followed by hasAttribute() 
PASS keygen.disabled: IDL set to null followed by IDL get 
PASS keygen.disabled: IDL set to 7 should not throw 
PASS keygen.disabled: IDL set to 7 followed by hasAttribute() 
PASS keygen.disabled: IDL set to 7 followed by IDL get 
PASS keygen.disabled: IDL set to 1.5 should not throw 
PASS keygen.disabled: IDL set to 1.5 followed by hasAttribute() 
PASS keygen.disabled: IDL set to 1.5 followed by IDL get 
PASS keygen.disabled: IDL set to true should not throw 
PASS keygen.disabled: IDL set to true followed by hasAttribute() 
PASS keygen.disabled: IDL set to true followed by IDL get 
PASS keygen.disabled: IDL set to false should not throw 
PASS keygen.disabled: IDL set to false followed by hasAttribute() 
PASS keygen.disabled: IDL set to false followed by IDL get 
PASS keygen.disabled: IDL set to object "[object Object]" should not throw 
PASS keygen.disabled: IDL set to object "[object Object]" followed by hasAttribute() 
PASS keygen.disabled: IDL set to object "[object Object]" followed by IDL get 
PASS keygen.disabled: IDL set to NaN should not throw 
PASS keygen.disabled: IDL set to NaN followed by hasAttribute() 
PASS keygen.disabled: IDL set to NaN followed by IDL get 
PASS keygen.disabled: IDL set to Infinity should not throw 
PASS keygen.disabled: IDL set to Infinity followed by hasAttribute() 
PASS keygen.disabled: IDL set to Infinity followed by IDL get 
PASS keygen.disabled: IDL set to -Infinity should not throw 
PASS keygen.disabled: IDL set to -Infinity followed by hasAttribute() 
PASS keygen.disabled: IDL set to -Infinity followed by IDL get 
PASS keygen.disabled: IDL set to "\0" should not throw 
PASS keygen.disabled: IDL set to "\0" followed by hasAttribute() 
PASS keygen.disabled: IDL set to "\0" followed by IDL get 
PASS keygen.disabled: IDL set to object "test-toString" should not throw 
PASS keygen.disabled: IDL set to object "test-toString" followed by hasAttribute() 
PASS keygen.disabled: IDL set to object "test-toString" followed by IDL get 
PASS keygen.disabled: IDL set to object "test-valueOf" should not throw 
PASS keygen.disabled: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS keygen.disabled: IDL set to object "test-valueOf" followed by IDL get 
PASS keygen.keytype: typeof IDL attribute 
PASS keygen.keytype: setAttribute() to "rsa" followed by getAttribute() 
PASS keygen.keytype: setAttribute() to "rsa" followed by IDL get 
PASS keygen.keytype: setAttribute() to "RSA" followed by getAttribute() 
FAIL keygen.keytype: setAttribute() to "RSA" followed by IDL get assert_equals: expected "rsa" but got "RSA"
PASS keygen.keytype: IDL set to "" should not throw 
PASS keygen.keytype: IDL set to "" followed by getAttribute() 
PASS keygen.keytype: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS keygen.keytype: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.keytype: IDL set to undefined should not throw 
PASS keygen.keytype: IDL set to undefined followed by getAttribute() 
PASS keygen.keytype: IDL set to 7 should not throw 
PASS keygen.keytype: IDL set to 7 followed by getAttribute() 
PASS keygen.keytype: IDL set to 1.5 should not throw 
PASS keygen.keytype: IDL set to 1.5 followed by getAttribute() 
PASS keygen.keytype: IDL set to true should not throw 
PASS keygen.keytype: IDL set to true followed by getAttribute() 
PASS keygen.keytype: IDL set to false should not throw 
PASS keygen.keytype: IDL set to false followed by getAttribute() 
PASS keygen.keytype: IDL set to object "[object Object]" should not throw 
PASS keygen.keytype: IDL set to object "[object Object]" followed by getAttribute() 
PASS keygen.keytype: IDL set to NaN should not throw 
PASS keygen.keytype: IDL set to NaN followed by getAttribute() 
PASS keygen.keytype: IDL set to Infinity should not throw 
PASS keygen.keytype: IDL set to Infinity followed by getAttribute() 
PASS keygen.keytype: IDL set to -Infinity should not throw 
PASS keygen.keytype: IDL set to -Infinity followed by getAttribute() 
PASS keygen.keytype: IDL set to "\0" should not throw 
PASS keygen.keytype: IDL set to "\0" followed by getAttribute() 
PASS keygen.keytype: IDL set to null should not throw 
PASS keygen.keytype: IDL set to object "test-toString" should not throw 
PASS keygen.keytype: IDL set to object "test-toString" followed by getAttribute() 
PASS keygen.keytype: IDL set to object "test-valueOf" should not throw 
PASS keygen.keytype: IDL set to object "test-valueOf" followed by getAttribute() 
PASS keygen.keytype: IDL set to "rsa" should not throw 
PASS keygen.keytype: IDL set to "rsa" followed by getAttribute() 
PASS keygen.keytype: IDL set to "rsa" followed by IDL get 
PASS keygen.keytype: IDL set to "xrsa" should not throw 
PASS keygen.keytype: IDL set to "xrsa" followed by getAttribute() 
PASS keygen.keytype: IDL set to "rsa\0" should not throw 
PASS keygen.keytype: IDL set to "rsa\0" followed by getAttribute() 
PASS keygen.keytype: IDL set to "sa" should not throw 
PASS keygen.keytype: IDL set to "sa" followed by getAttribute() 
PASS keygen.keytype: IDL set to "RSA" should not throw 
PASS keygen.keytype: IDL set to "RSA" followed by getAttribute() 
FAIL keygen.keytype: IDL set to "RSA" followed by IDL get assert_equals: expected "rsa" but got "RSA"
PASS keygen.name: typeof IDL attribute 
PASS keygen.name: IDL get with DOM attribute unset 
PASS keygen.name: setAttribute() to "" followed by getAttribute() 
PASS keygen.name: setAttribute() to "" followed by IDL get 
PASS keygen.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.name: setAttribute() to undefined followed by getAttribute() 
PASS keygen.name: setAttribute() to undefined followed by IDL get 
PASS keygen.name: setAttribute() to 7 followed by getAttribute() 
PASS keygen.name: setAttribute() to 7 followed by IDL get 
PASS keygen.name: setAttribute() to 1.5 followed by getAttribute() 
PASS keygen.name: setAttribute() to 1.5 followed by IDL get 
PASS keygen.name: setAttribute() to true followed by getAttribute() 
PASS keygen.name: setAttribute() to true followed by IDL get 
PASS keygen.name: setAttribute() to false followed by getAttribute() 
PASS keygen.name: setAttribute() to false followed by IDL get 
PASS keygen.name: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS keygen.name: setAttribute() to object "[object Object]" followed by IDL get 
PASS keygen.name: setAttribute() to NaN followed by getAttribute() 
PASS keygen.name: setAttribute() to NaN followed by IDL get 
PASS keygen.name: setAttribute() to Infinity followed by getAttribute() 
PASS keygen.name: setAttribute() to Infinity followed by IDL get 
PASS keygen.name: setAttribute() to -Infinity followed by getAttribute() 
PASS keygen.name: setAttribute() to -Infinity followed by IDL get 
PASS keygen.name: setAttribute() to "\0" followed by getAttribute() 
PASS keygen.name: setAttribute() to "\0" followed by IDL get 
PASS keygen.name: setAttribute() to null followed by getAttribute() 
PASS keygen.name: setAttribute() to null followed by IDL get 
PASS keygen.name: setAttribute() to object "test-toString" followed by getAttribute() 
PASS keygen.name: setAttribute() to object "test-toString" followed by IDL get 
PASS keygen.name: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS keygen.name: setAttribute() to object "test-valueOf" followed by IDL get 
PASS keygen.name: IDL set to "" should not throw 
PASS keygen.name: IDL set to "" followed by getAttribute() 
PASS keygen.name: IDL set to "" followed by IDL get 
PASS keygen.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS keygen.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS keygen.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS keygen.name: IDL set to undefined should not throw 
PASS keygen.name: IDL set to undefined followed by getAttribute() 
PASS keygen.name: IDL set to undefined followed by IDL get 
PASS keygen.name: IDL set to 7 should not throw 
PASS keygen.name: IDL set to 7 followed by getAttribute() 
PASS keygen.name: IDL set to 7 followed by IDL get 
PASS keygen.name: IDL set to 1.5 should not throw 
PASS keygen.name: IDL set to 1.5 followed by getAttribute() 
PASS keygen.name: IDL set to 1.5 followed by IDL get 
PASS keygen.name: IDL set to true should not throw 
PASS keygen.name: IDL set to true followed by getAttribute() 
PASS keygen.name: IDL set to true followed by IDL get 
PASS keygen.name: IDL set to false should not throw 
PASS keygen.name: IDL set to false followed by getAttribute() 
PASS keygen.name: IDL set to false followed by IDL get 
PASS keygen.name: IDL set to object "[object Object]" should not throw 
PASS keygen.name: IDL set to object "[object Object]" followed by getAttribute() 
PASS keygen.name: IDL set to object "[object Object]" followed by IDL get 
PASS keygen.name: IDL set to NaN should not throw 
PASS keygen.name: IDL set to NaN followed by getAttribute() 
PASS keygen.name: IDL set to NaN followed by IDL get 
PASS keygen.name: IDL set to Infinity should not throw 
PASS keygen.name: IDL set to Infinity followed by getAttribute() 
PASS keygen.name: IDL set to Infinity followed by IDL get 
PASS keygen.name: IDL set to -Infinity should not throw 
PASS keygen.name: IDL set to -Infinity followed by getAttribute() 
PASS keygen.name: IDL set to -Infinity followed by IDL get 
PASS keygen.name: IDL set to "\0" should not throw 
PASS keygen.name: IDL set to "\0" followed by getAttribute() 
PASS keygen.name: IDL set to "\0" followed by IDL get 
PASS keygen.name: IDL set to null should not throw 
PASS keygen.name: IDL set to null followed by getAttribute() 
PASS keygen.name: IDL set to null followed by IDL get 
PASS keygen.name: IDL set to object "test-toString" should not throw 
PASS keygen.name: IDL set to object "test-toString" followed by getAttribute() 
PASS keygen.name: IDL set to object "test-toString" followed by IDL get 
PASS keygen.name: IDL set to object "test-valueOf" should not throw 
PASS keygen.name: IDL set to object "test-valueOf" followed by getAttribute() 
PASS keygen.name: IDL set to object "test-valueOf" followed by IDL get 
FAIL keygen.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL keygen.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to null followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to true followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to false followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL keygen.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS keygen.itemScope: IDL set to "" should not throw 
FAIL keygen.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL keygen.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS keygen.itemScope: IDL set to " foo " should not throw 
PASS keygen.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL keygen.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS keygen.itemScope: IDL set to undefined should not throw 
FAIL keygen.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL keygen.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS keygen.itemScope: IDL set to null should not throw 
FAIL keygen.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL keygen.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS keygen.itemScope: IDL set to 7 should not throw 
PASS keygen.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL keygen.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS keygen.itemScope: IDL set to 1.5 should not throw 
PASS keygen.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL keygen.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS keygen.itemScope: IDL set to true should not throw 
PASS keygen.itemScope: IDL set to true followed by hasAttribute() 
PASS keygen.itemScope: IDL set to true followed by IDL get 
PASS keygen.itemScope: IDL set to false should not throw 
FAIL keygen.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS keygen.itemScope: IDL set to false followed by IDL get 
PASS keygen.itemScope: IDL set to object "[object Object]" should not throw 
PASS keygen.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL keygen.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS keygen.itemScope: IDL set to NaN should not throw 
FAIL keygen.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL keygen.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS keygen.itemScope: IDL set to Infinity should not throw 
PASS keygen.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL keygen.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS keygen.itemScope: IDL set to -Infinity should not throw 
PASS keygen.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL keygen.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS keygen.itemScope: IDL set to "\0" should not throw 
PASS keygen.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL keygen.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS keygen.itemScope: IDL set to object "test-toString" should not throw 
PASS keygen.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL keygen.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS keygen.itemScope: IDL set to object "test-valueOf" should not throw 
PASS keygen.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL keygen.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL keygen.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL keygen.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to "" followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to true followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to false followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to null followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS keygen.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL keygen.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS keygen.itemId: IDL set to "" should not throw 
FAIL keygen.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL keygen.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS keygen.itemId: IDL set to " foo " should not throw 
FAIL keygen.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL keygen.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS keygen.itemId: IDL set to "http://site.example/" should not throw 
FAIL keygen.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS keygen.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS keygen.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL keygen.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL keygen.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS keygen.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL keygen.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL keygen.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS keygen.itemId: IDL set to undefined should not throw 
FAIL keygen.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL keygen.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS keygen.itemId: IDL set to 7 should not throw 
FAIL keygen.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL keygen.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS keygen.itemId: IDL set to 1.5 should not throw 
FAIL keygen.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL keygen.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS keygen.itemId: IDL set to true should not throw 
FAIL keygen.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL keygen.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS keygen.itemId: IDL set to false should not throw 
FAIL keygen.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL keygen.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS keygen.itemId: IDL set to object "[object Object]" should not throw 
FAIL keygen.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL keygen.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS keygen.itemId: IDL set to NaN should not throw 
FAIL keygen.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL keygen.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS keygen.itemId: IDL set to Infinity should not throw 
FAIL keygen.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL keygen.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS keygen.itemId: IDL set to -Infinity should not throw 
FAIL keygen.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL keygen.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS keygen.itemId: IDL set to "\0" should not throw 
FAIL keygen.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL keygen.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS keygen.itemId: IDL set to null should not throw 
FAIL keygen.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL keygen.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS keygen.itemId: IDL set to object "test-toString" should not throw 
FAIL keygen.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL keygen.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS keygen.itemId: IDL set to object "test-valueOf" should not throw 
PASS keygen.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL keygen.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS output.title: typeof IDL attribute 
PASS output.title: IDL get with DOM attribute unset 
PASS output.title: setAttribute() to "" followed by getAttribute() 
PASS output.title: setAttribute() to "" followed by IDL get 
PASS output.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS output.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS output.title: setAttribute() to undefined followed by getAttribute() 
PASS output.title: setAttribute() to undefined followed by IDL get 
PASS output.title: setAttribute() to 7 followed by getAttribute() 
PASS output.title: setAttribute() to 7 followed by IDL get 
PASS output.title: setAttribute() to 1.5 followed by getAttribute() 
PASS output.title: setAttribute() to 1.5 followed by IDL get 
PASS output.title: setAttribute() to true followed by getAttribute() 
PASS output.title: setAttribute() to true followed by IDL get 
PASS output.title: setAttribute() to false followed by getAttribute() 
PASS output.title: setAttribute() to false followed by IDL get 
PASS output.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS output.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS output.title: setAttribute() to NaN followed by getAttribute() 
PASS output.title: setAttribute() to NaN followed by IDL get 
PASS output.title: setAttribute() to Infinity followed by getAttribute() 
PASS output.title: setAttribute() to Infinity followed by IDL get 
PASS output.title: setAttribute() to -Infinity followed by getAttribute() 
PASS output.title: setAttribute() to -Infinity followed by IDL get 
PASS output.title: setAttribute() to "\0" followed by getAttribute() 
PASS output.title: setAttribute() to "\0" followed by IDL get 
PASS output.title: setAttribute() to null followed by getAttribute() 
PASS output.title: setAttribute() to null followed by IDL get 
PASS output.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS output.title: setAttribute() to object "test-toString" followed by IDL get 
PASS output.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS output.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS output.title: IDL set to "" should not throw 
PASS output.title: IDL set to "" followed by getAttribute() 
PASS output.title: IDL set to "" followed by IDL get 
PASS output.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS output.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS output.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS output.title: IDL set to undefined should not throw 
PASS output.title: IDL set to undefined followed by getAttribute() 
PASS output.title: IDL set to undefined followed by IDL get 
PASS output.title: IDL set to 7 should not throw 
PASS output.title: IDL set to 7 followed by getAttribute() 
PASS output.title: IDL set to 7 followed by IDL get 
PASS output.title: IDL set to 1.5 should not throw 
PASS output.title: IDL set to 1.5 followed by getAttribute() 
PASS output.title: IDL set to 1.5 followed by IDL get 
PASS output.title: IDL set to true should not throw 
PASS output.title: IDL set to true followed by getAttribute() 
PASS output.title: IDL set to true followed by IDL get 
PASS output.title: IDL set to false should not throw 
PASS output.title: IDL set to false followed by getAttribute() 
PASS output.title: IDL set to false followed by IDL get 
PASS output.title: IDL set to object "[object Object]" should not throw 
PASS output.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS output.title: IDL set to object "[object Object]" followed by IDL get 
PASS output.title: IDL set to NaN should not throw 
PASS output.title: IDL set to NaN followed by getAttribute() 
PASS output.title: IDL set to NaN followed by IDL get 
PASS output.title: IDL set to Infinity should not throw 
PASS output.title: IDL set to Infinity followed by getAttribute() 
PASS output.title: IDL set to Infinity followed by IDL get 
PASS output.title: IDL set to -Infinity should not throw 
PASS output.title: IDL set to -Infinity followed by getAttribute() 
PASS output.title: IDL set to -Infinity followed by IDL get 
PASS output.title: IDL set to "\0" should not throw 
PASS output.title: IDL set to "\0" followed by getAttribute() 
PASS output.title: IDL set to "\0" followed by IDL get 
PASS output.title: IDL set to null should not throw 
PASS output.title: IDL set to null followed by getAttribute() 
PASS output.title: IDL set to null followed by IDL get 
PASS output.title: IDL set to object "test-toString" should not throw 
PASS output.title: IDL set to object "test-toString" followed by getAttribute() 
PASS output.title: IDL set to object "test-toString" followed by IDL get 
PASS output.title: IDL set to object "test-valueOf" should not throw 
PASS output.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS output.title: IDL set to object "test-valueOf" followed by IDL get 
PASS output.lang: typeof IDL attribute 
PASS output.lang: IDL get with DOM attribute unset 
PASS output.lang: setAttribute() to "" followed by getAttribute() 
PASS output.lang: setAttribute() to "" followed by IDL get 
PASS output.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS output.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS output.lang: setAttribute() to undefined followed by getAttribute() 
PASS output.lang: setAttribute() to undefined followed by IDL get 
PASS output.lang: setAttribute() to 7 followed by getAttribute() 
PASS output.lang: setAttribute() to 7 followed by IDL get 
PASS output.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS output.lang: setAttribute() to 1.5 followed by IDL get 
PASS output.lang: setAttribute() to true followed by getAttribute() 
PASS output.lang: setAttribute() to true followed by IDL get 
PASS output.lang: setAttribute() to false followed by getAttribute() 
PASS output.lang: setAttribute() to false followed by IDL get 
PASS output.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS output.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS output.lang: setAttribute() to NaN followed by getAttribute() 
PASS output.lang: setAttribute() to NaN followed by IDL get 
PASS output.lang: setAttribute() to Infinity followed by getAttribute() 
PASS output.lang: setAttribute() to Infinity followed by IDL get 
PASS output.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS output.lang: setAttribute() to -Infinity followed by IDL get 
PASS output.lang: setAttribute() to "\0" followed by getAttribute() 
PASS output.lang: setAttribute() to "\0" followed by IDL get 
PASS output.lang: setAttribute() to null followed by getAttribute() 
PASS output.lang: setAttribute() to null followed by IDL get 
PASS output.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS output.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS output.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS output.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS output.lang: IDL set to "" should not throw 
PASS output.lang: IDL set to "" followed by getAttribute() 
PASS output.lang: IDL set to "" followed by IDL get 
PASS output.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS output.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS output.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS output.lang: IDL set to undefined should not throw 
PASS output.lang: IDL set to undefined followed by getAttribute() 
PASS output.lang: IDL set to undefined followed by IDL get 
PASS output.lang: IDL set to 7 should not throw 
PASS output.lang: IDL set to 7 followed by getAttribute() 
PASS output.lang: IDL set to 7 followed by IDL get 
PASS output.lang: IDL set to 1.5 should not throw 
PASS output.lang: IDL set to 1.5 followed by getAttribute() 
PASS output.lang: IDL set to 1.5 followed by IDL get 
PASS output.lang: IDL set to true should not throw 
PASS output.lang: IDL set to true followed by getAttribute() 
PASS output.lang: IDL set to true followed by IDL get 
PASS output.lang: IDL set to false should not throw 
PASS output.lang: IDL set to false followed by getAttribute() 
PASS output.lang: IDL set to false followed by IDL get 
PASS output.lang: IDL set to object "[object Object]" should not throw 
PASS output.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS output.lang: IDL set to object "[object Object]" followed by IDL get 
PASS output.lang: IDL set to NaN should not throw 
PASS output.lang: IDL set to NaN followed by getAttribute() 
PASS output.lang: IDL set to NaN followed by IDL get 
PASS output.lang: IDL set to Infinity should not throw 
PASS output.lang: IDL set to Infinity followed by getAttribute() 
PASS output.lang: IDL set to Infinity followed by IDL get 
PASS output.lang: IDL set to -Infinity should not throw 
PASS output.lang: IDL set to -Infinity followed by getAttribute() 
PASS output.lang: IDL set to -Infinity followed by IDL get 
PASS output.lang: IDL set to "\0" should not throw 
PASS output.lang: IDL set to "\0" followed by getAttribute() 
PASS output.lang: IDL set to "\0" followed by IDL get 
PASS output.lang: IDL set to null should not throw 
PASS output.lang: IDL set to null followed by getAttribute() 
PASS output.lang: IDL set to null followed by IDL get 
PASS output.lang: IDL set to object "test-toString" should not throw 
PASS output.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS output.lang: IDL set to object "test-toString" followed by IDL get 
PASS output.lang: IDL set to object "test-valueOf" should not throw 
PASS output.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS output.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS output.dir: typeof IDL attribute 
PASS output.dir: IDL get with DOM attribute unset 
PASS output.dir: setAttribute() to "" followed by getAttribute() 
PASS output.dir: setAttribute() to "" followed by IDL get 
PASS output.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS output.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS output.dir: setAttribute() to undefined followed by getAttribute() 
PASS output.dir: setAttribute() to undefined followed by IDL get 
PASS output.dir: setAttribute() to 7 followed by getAttribute() 
PASS output.dir: setAttribute() to 7 followed by IDL get 
PASS output.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS output.dir: setAttribute() to 1.5 followed by IDL get 
PASS output.dir: setAttribute() to true followed by getAttribute() 
PASS output.dir: setAttribute() to true followed by IDL get 
PASS output.dir: setAttribute() to false followed by getAttribute() 
PASS output.dir: setAttribute() to false followed by IDL get 
PASS output.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS output.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS output.dir: setAttribute() to NaN followed by getAttribute() 
PASS output.dir: setAttribute() to NaN followed by IDL get 
PASS output.dir: setAttribute() to Infinity followed by getAttribute() 
PASS output.dir: setAttribute() to Infinity followed by IDL get 
PASS output.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS output.dir: setAttribute() to -Infinity followed by IDL get 
PASS output.dir: setAttribute() to "\0" followed by getAttribute() 
PASS output.dir: setAttribute() to "\0" followed by IDL get 
PASS output.dir: setAttribute() to null followed by getAttribute() 
PASS output.dir: setAttribute() to null followed by IDL get 
PASS output.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS output.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS output.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS output.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS output.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS output.dir: setAttribute() to "ltr" followed by IDL get 
PASS output.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS output.dir: setAttribute() to "xltr" followed by IDL get 
PASS output.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS output.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS output.dir: setAttribute() to "tr" followed by getAttribute() 
PASS output.dir: setAttribute() to "tr" followed by IDL get 
PASS output.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS output.dir: setAttribute() to "LTR" followed by IDL get 
PASS output.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS output.dir: setAttribute() to "rtl" followed by IDL get 
PASS output.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS output.dir: setAttribute() to "xrtl" followed by IDL get 
PASS output.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS output.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS output.dir: setAttribute() to "tl" followed by getAttribute() 
PASS output.dir: setAttribute() to "tl" followed by IDL get 
PASS output.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS output.dir: setAttribute() to "RTL" followed by IDL get 
PASS output.dir: setAttribute() to "auto" followed by getAttribute() 
PASS output.dir: setAttribute() to "auto" followed by IDL get 
PASS output.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS output.dir: setAttribute() to "xauto" followed by IDL get 
PASS output.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS output.dir: setAttribute() to "auto\0" followed by IDL get 
PASS output.dir: setAttribute() to "uto" followed by getAttribute() 
PASS output.dir: setAttribute() to "uto" followed by IDL get 
PASS output.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS output.dir: setAttribute() to "AUTO" followed by IDL get 
PASS output.dir: IDL set to "" should not throw 
PASS output.dir: IDL set to "" followed by getAttribute() 
PASS output.dir: IDL set to "" followed by IDL get 
PASS output.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS output.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS output.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS output.dir: IDL set to undefined should not throw 
PASS output.dir: IDL set to undefined followed by getAttribute() 
PASS output.dir: IDL set to undefined followed by IDL get 
PASS output.dir: IDL set to 7 should not throw 
PASS output.dir: IDL set to 7 followed by getAttribute() 
PASS output.dir: IDL set to 7 followed by IDL get 
PASS output.dir: IDL set to 1.5 should not throw 
PASS output.dir: IDL set to 1.5 followed by getAttribute() 
PASS output.dir: IDL set to 1.5 followed by IDL get 
PASS output.dir: IDL set to true should not throw 
PASS output.dir: IDL set to true followed by getAttribute() 
PASS output.dir: IDL set to true followed by IDL get 
PASS output.dir: IDL set to false should not throw 
PASS output.dir: IDL set to false followed by getAttribute() 
PASS output.dir: IDL set to false followed by IDL get 
PASS output.dir: IDL set to object "[object Object]" should not throw 
PASS output.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS output.dir: IDL set to object "[object Object]" followed by IDL get 
PASS output.dir: IDL set to NaN should not throw 
PASS output.dir: IDL set to NaN followed by getAttribute() 
PASS output.dir: IDL set to NaN followed by IDL get 
PASS output.dir: IDL set to Infinity should not throw 
PASS output.dir: IDL set to Infinity followed by getAttribute() 
PASS output.dir: IDL set to Infinity followed by IDL get 
PASS output.dir: IDL set to -Infinity should not throw 
PASS output.dir: IDL set to -Infinity followed by getAttribute() 
PASS output.dir: IDL set to -Infinity followed by IDL get 
PASS output.dir: IDL set to "\0" should not throw 
PASS output.dir: IDL set to "\0" followed by getAttribute() 
PASS output.dir: IDL set to "\0" followed by IDL get 
PASS output.dir: IDL set to null should not throw 
PASS output.dir: IDL set to null followed by IDL get 
PASS output.dir: IDL set to object "test-toString" should not throw 
PASS output.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS output.dir: IDL set to object "test-toString" followed by IDL get 
PASS output.dir: IDL set to object "test-valueOf" should not throw 
PASS output.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS output.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS output.dir: IDL set to "ltr" should not throw 
PASS output.dir: IDL set to "ltr" followed by getAttribute() 
PASS output.dir: IDL set to "ltr" followed by IDL get 
PASS output.dir: IDL set to "xltr" should not throw 
PASS output.dir: IDL set to "xltr" followed by getAttribute() 
PASS output.dir: IDL set to "xltr" followed by IDL get 
PASS output.dir: IDL set to "ltr\0" should not throw 
PASS output.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS output.dir: IDL set to "ltr\0" followed by IDL get 
PASS output.dir: IDL set to "tr" should not throw 
PASS output.dir: IDL set to "tr" followed by getAttribute() 
PASS output.dir: IDL set to "tr" followed by IDL get 
PASS output.dir: IDL set to "LTR" should not throw 
PASS output.dir: IDL set to "LTR" followed by getAttribute() 
PASS output.dir: IDL set to "LTR" followed by IDL get 
PASS output.dir: IDL set to "rtl" should not throw 
PASS output.dir: IDL set to "rtl" followed by getAttribute() 
PASS output.dir: IDL set to "rtl" followed by IDL get 
PASS output.dir: IDL set to "xrtl" should not throw 
PASS output.dir: IDL set to "xrtl" followed by getAttribute() 
PASS output.dir: IDL set to "xrtl" followed by IDL get 
PASS output.dir: IDL set to "rtl\0" should not throw 
PASS output.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS output.dir: IDL set to "rtl\0" followed by IDL get 
PASS output.dir: IDL set to "tl" should not throw 
PASS output.dir: IDL set to "tl" followed by getAttribute() 
PASS output.dir: IDL set to "tl" followed by IDL get 
PASS output.dir: IDL set to "RTL" should not throw 
PASS output.dir: IDL set to "RTL" followed by getAttribute() 
PASS output.dir: IDL set to "RTL" followed by IDL get 
PASS output.dir: IDL set to "auto" should not throw 
PASS output.dir: IDL set to "auto" followed by getAttribute() 
PASS output.dir: IDL set to "auto" followed by IDL get 
PASS output.dir: IDL set to "xauto" should not throw 
PASS output.dir: IDL set to "xauto" followed by getAttribute() 
PASS output.dir: IDL set to "xauto" followed by IDL get 
PASS output.dir: IDL set to "auto\0" should not throw 
PASS output.dir: IDL set to "auto\0" followed by getAttribute() 
PASS output.dir: IDL set to "auto\0" followed by IDL get 
PASS output.dir: IDL set to "uto" should not throw 
PASS output.dir: IDL set to "uto" followed by getAttribute() 
PASS output.dir: IDL set to "uto" followed by IDL get 
PASS output.dir: IDL set to "AUTO" should not throw 
PASS output.dir: IDL set to "AUTO" followed by getAttribute() 
PASS output.dir: IDL set to "AUTO" followed by IDL get 
PASS output.className (<output class>): typeof IDL attribute 
PASS output.className (<output class>): IDL get with DOM attribute unset 
PASS output.className (<output class>): setAttribute() to "" followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to "" followed by IDL get 
PASS output.className (<output class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS output.className (<output class>): setAttribute() to undefined followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to undefined followed by IDL get 
PASS output.className (<output class>): setAttribute() to 7 followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to 7 followed by IDL get 
PASS output.className (<output class>): setAttribute() to 1.5 followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to 1.5 followed by IDL get 
PASS output.className (<output class>): setAttribute() to true followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to true followed by IDL get 
PASS output.className (<output class>): setAttribute() to false followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to false followed by IDL get 
PASS output.className (<output class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS output.className (<output class>): setAttribute() to NaN followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to NaN followed by IDL get 
PASS output.className (<output class>): setAttribute() to Infinity followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to Infinity followed by IDL get 
PASS output.className (<output class>): setAttribute() to -Infinity followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to -Infinity followed by IDL get 
PASS output.className (<output class>): setAttribute() to "\0" followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to "\0" followed by IDL get 
PASS output.className (<output class>): setAttribute() to null followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to null followed by IDL get 
PASS output.className (<output class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to object "test-toString" followed by IDL get 
PASS output.className (<output class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS output.className (<output class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS output.className (<output class>): IDL set to "" should not throw 
PASS output.className (<output class>): IDL set to "" followed by getAttribute() 
PASS output.className (<output class>): IDL set to "" followed by IDL get 
PASS output.className (<output class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS output.className (<output class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS output.className (<output class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS output.className (<output class>): IDL set to undefined should not throw 
PASS output.className (<output class>): IDL set to undefined followed by getAttribute() 
PASS output.className (<output class>): IDL set to undefined followed by IDL get 
PASS output.className (<output class>): IDL set to 7 should not throw 
PASS output.className (<output class>): IDL set to 7 followed by getAttribute() 
PASS output.className (<output class>): IDL set to 7 followed by IDL get 
PASS output.className (<output class>): IDL set to 1.5 should not throw 
PASS output.className (<output class>): IDL set to 1.5 followed by getAttribute() 
PASS output.className (<output class>): IDL set to 1.5 followed by IDL get 
PASS output.className (<output class>): IDL set to true should not throw 
PASS output.className (<output class>): IDL set to true followed by getAttribute() 
PASS output.className (<output class>): IDL set to true followed by IDL get 
PASS output.className (<output class>): IDL set to false should not throw 
PASS output.className (<output class>): IDL set to false followed by getAttribute() 
PASS output.className (<output class>): IDL set to false followed by IDL get 
PASS output.className (<output class>): IDL set to object "[object Object]" should not throw 
PASS output.className (<output class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS output.className (<output class>): IDL set to object "[object Object]" followed by IDL get 
PASS output.className (<output class>): IDL set to NaN should not throw 
PASS output.className (<output class>): IDL set to NaN followed by getAttribute() 
PASS output.className (<output class>): IDL set to NaN followed by IDL get 
PASS output.className (<output class>): IDL set to Infinity should not throw 
PASS output.className (<output class>): IDL set to Infinity followed by getAttribute() 
PASS output.className (<output class>): IDL set to Infinity followed by IDL get 
PASS output.className (<output class>): IDL set to -Infinity should not throw 
PASS output.className (<output class>): IDL set to -Infinity followed by getAttribute() 
PASS output.className (<output class>): IDL set to -Infinity followed by IDL get 
PASS output.className (<output class>): IDL set to "\0" should not throw 
PASS output.className (<output class>): IDL set to "\0" followed by getAttribute() 
PASS output.className (<output class>): IDL set to "\0" followed by IDL get 
PASS output.className (<output class>): IDL set to null should not throw 
PASS output.className (<output class>): IDL set to null followed by getAttribute() 
PASS output.className (<output class>): IDL set to null followed by IDL get 
PASS output.className (<output class>): IDL set to object "test-toString" should not throw 
PASS output.className (<output class>): IDL set to object "test-toString" followed by getAttribute() 
PASS output.className (<output class>): IDL set to object "test-toString" followed by IDL get 
PASS output.className (<output class>): IDL set to object "test-valueOf" should not throw 
PASS output.className (<output class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS output.className (<output class>): IDL set to object "test-valueOf" followed by IDL get 
PASS output.hidden: typeof IDL attribute 
PASS output.hidden: IDL get with DOM attribute unset 
PASS output.hidden: setAttribute() to "" followed by getAttribute() 
PASS output.hidden: setAttribute() to "" followed by IDL get 
PASS output.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS output.hidden: setAttribute() to " foo " followed by IDL get 
PASS output.hidden: setAttribute() to undefined followed by getAttribute() 
PASS output.hidden: setAttribute() to undefined followed by IDL get 
PASS output.hidden: setAttribute() to null followed by getAttribute() 
PASS output.hidden: setAttribute() to null followed by IDL get 
PASS output.hidden: setAttribute() to 7 followed by getAttribute() 
PASS output.hidden: setAttribute() to 7 followed by IDL get 
PASS output.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS output.hidden: setAttribute() to 1.5 followed by IDL get 
PASS output.hidden: setAttribute() to true followed by getAttribute() 
PASS output.hidden: setAttribute() to true followed by IDL get 
PASS output.hidden: setAttribute() to false followed by getAttribute() 
PASS output.hidden: setAttribute() to false followed by IDL get 
PASS output.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS output.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS output.hidden: setAttribute() to NaN followed by getAttribute() 
PASS output.hidden: setAttribute() to NaN followed by IDL get 
PASS output.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS output.hidden: setAttribute() to Infinity followed by IDL get 
PASS output.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS output.hidden: setAttribute() to -Infinity followed by IDL get 
PASS output.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS output.hidden: setAttribute() to "\0" followed by IDL get 
PASS output.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS output.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS output.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS output.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS output.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS output.hidden: setAttribute() to "hidden" followed by IDL get 
PASS output.hidden: IDL set to "" should not throw 
PASS output.hidden: IDL set to "" followed by hasAttribute() 
PASS output.hidden: IDL set to "" followed by IDL get 
PASS output.hidden: IDL set to " foo " should not throw 
PASS output.hidden: IDL set to " foo " followed by hasAttribute() 
PASS output.hidden: IDL set to " foo " followed by IDL get 
PASS output.hidden: IDL set to undefined should not throw 
PASS output.hidden: IDL set to undefined followed by hasAttribute() 
PASS output.hidden: IDL set to undefined followed by IDL get 
PASS output.hidden: IDL set to null should not throw 
PASS output.hidden: IDL set to null followed by hasAttribute() 
PASS output.hidden: IDL set to null followed by IDL get 
PASS output.hidden: IDL set to 7 should not throw 
PASS output.hidden: IDL set to 7 followed by hasAttribute() 
PASS output.hidden: IDL set to 7 followed by IDL get 
PASS output.hidden: IDL set to 1.5 should not throw 
PASS output.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS output.hidden: IDL set to 1.5 followed by IDL get 
PASS output.hidden: IDL set to true should not throw 
PASS output.hidden: IDL set to true followed by hasAttribute() 
PASS output.hidden: IDL set to true followed by IDL get 
PASS output.hidden: IDL set to false should not throw 
PASS output.hidden: IDL set to false followed by hasAttribute() 
PASS output.hidden: IDL set to false followed by IDL get 
PASS output.hidden: IDL set to object "[object Object]" should not throw 
PASS output.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS output.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS output.hidden: IDL set to NaN should not throw 
PASS output.hidden: IDL set to NaN followed by hasAttribute() 
PASS output.hidden: IDL set to NaN followed by IDL get 
PASS output.hidden: IDL set to Infinity should not throw 
PASS output.hidden: IDL set to Infinity followed by hasAttribute() 
PASS output.hidden: IDL set to Infinity followed by IDL get 
PASS output.hidden: IDL set to -Infinity should not throw 
PASS output.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS output.hidden: IDL set to -Infinity followed by IDL get 
PASS output.hidden: IDL set to "\0" should not throw 
PASS output.hidden: IDL set to "\0" followed by hasAttribute() 
PASS output.hidden: IDL set to "\0" followed by IDL get 
PASS output.hidden: IDL set to object "test-toString" should not throw 
PASS output.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS output.hidden: IDL set to object "test-toString" followed by IDL get 
PASS output.hidden: IDL set to object "test-valueOf" should not throw 
PASS output.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS output.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS output.accessKey: typeof IDL attribute 
PASS output.accessKey: IDL get with DOM attribute unset 
PASS output.accessKey: setAttribute() to "" followed by getAttribute() 
PASS output.accessKey: setAttribute() to "" followed by IDL get 
PASS output.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS output.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS output.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS output.accessKey: setAttribute() to undefined followed by IDL get 
PASS output.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS output.accessKey: setAttribute() to 7 followed by IDL get 
PASS output.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS output.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS output.accessKey: setAttribute() to true followed by getAttribute() 
PASS output.accessKey: setAttribute() to true followed by IDL get 
PASS output.accessKey: setAttribute() to false followed by getAttribute() 
PASS output.accessKey: setAttribute() to false followed by IDL get 
PASS output.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS output.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS output.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS output.accessKey: setAttribute() to NaN followed by IDL get 
PASS output.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS output.accessKey: setAttribute() to Infinity followed by IDL get 
PASS output.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS output.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS output.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS output.accessKey: setAttribute() to "\0" followed by IDL get 
PASS output.accessKey: setAttribute() to null followed by getAttribute() 
PASS output.accessKey: setAttribute() to null followed by IDL get 
PASS output.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS output.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS output.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS output.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS output.accessKey: IDL set to "" should not throw 
PASS output.accessKey: IDL set to "" followed by getAttribute() 
PASS output.accessKey: IDL set to "" followed by IDL get 
PASS output.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS output.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS output.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS output.accessKey: IDL set to undefined should not throw 
PASS output.accessKey: IDL set to undefined followed by getAttribute() 
PASS output.accessKey: IDL set to undefined followed by IDL get 
PASS output.accessKey: IDL set to 7 should not throw 
PASS output.accessKey: IDL set to 7 followed by getAttribute() 
PASS output.accessKey: IDL set to 7 followed by IDL get 
PASS output.accessKey: IDL set to 1.5 should not throw 
PASS output.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS output.accessKey: IDL set to 1.5 followed by IDL get 
PASS output.accessKey: IDL set to true should not throw 
PASS output.accessKey: IDL set to true followed by getAttribute() 
PASS output.accessKey: IDL set to true followed by IDL get 
PASS output.accessKey: IDL set to false should not throw 
PASS output.accessKey: IDL set to false followed by getAttribute() 
PASS output.accessKey: IDL set to false followed by IDL get 
PASS output.accessKey: IDL set to object "[object Object]" should not throw 
PASS output.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS output.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS output.accessKey: IDL set to NaN should not throw 
PASS output.accessKey: IDL set to NaN followed by getAttribute() 
PASS output.accessKey: IDL set to NaN followed by IDL get 
PASS output.accessKey: IDL set to Infinity should not throw 
PASS output.accessKey: IDL set to Infinity followed by getAttribute() 
PASS output.accessKey: IDL set to Infinity followed by IDL get 
PASS output.accessKey: IDL set to -Infinity should not throw 
PASS output.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS output.accessKey: IDL set to -Infinity followed by IDL get 
PASS output.accessKey: IDL set to "\0" should not throw 
PASS output.accessKey: IDL set to "\0" followed by getAttribute() 
PASS output.accessKey: IDL set to "\0" followed by IDL get 
PASS output.accessKey: IDL set to null should not throw 
PASS output.accessKey: IDL set to null followed by getAttribute() 
PASS output.accessKey: IDL set to null followed by IDL get 
PASS output.accessKey: IDL set to object "test-toString" should not throw 
PASS output.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS output.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS output.accessKey: IDL set to object "test-valueOf" should not throw 
PASS output.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS output.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS output.tabIndex: typeof IDL attribute 
PASS output.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS output.tabIndex: setAttribute() to -36 followed by IDL get 
PASS output.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS output.tabIndex: setAttribute() to -1 followed by IDL get 
PASS output.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS output.tabIndex: setAttribute() to 0 followed by IDL get 
PASS output.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS output.tabIndex: setAttribute() to 1 followed by IDL get 
PASS output.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL output.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS output.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL output.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS output.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS output.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS output.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS output.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS output.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS output.tabIndex: setAttribute() to "0" followed by IDL get 
PASS output.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS output.tabIndex: setAttribute() to "1" followed by IDL get 
PASS output.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS output.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS output.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS output.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS output.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS output.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS output.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS output.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS output.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS output.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS output.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS output.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS output.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS output.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS output.tabIndex: IDL set to -36 should not throw 
PASS output.tabIndex: IDL set to -36 followed by getAttribute() 
PASS output.tabIndex: IDL set to -36 followed by IDL get 
PASS output.tabIndex: IDL set to -1 should not throw 
PASS output.tabIndex: IDL set to -1 followed by getAttribute() 
PASS output.tabIndex: IDL set to -1 followed by IDL get 
PASS output.tabIndex: IDL set to 0 should not throw 
PASS output.tabIndex: IDL set to 0 followed by getAttribute() 
PASS output.tabIndex: IDL set to 0 followed by IDL get 
PASS output.tabIndex: IDL set to 1 should not throw 
PASS output.tabIndex: IDL set to 1 followed by getAttribute() 
PASS output.tabIndex: IDL set to 1 followed by IDL get 
PASS output.tabIndex: IDL set to 2147483647 should not throw 
PASS output.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL output.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS output.tabIndex: IDL set to -2147483648 should not throw 
PASS output.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL output.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS output.name: typeof IDL attribute 
PASS output.name: IDL get with DOM attribute unset 
PASS output.name: setAttribute() to "" followed by getAttribute() 
PASS output.name: setAttribute() to "" followed by IDL get 
PASS output.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS output.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS output.name: setAttribute() to undefined followed by getAttribute() 
PASS output.name: setAttribute() to undefined followed by IDL get 
PASS output.name: setAttribute() to 7 followed by getAttribute() 
PASS output.name: setAttribute() to 7 followed by IDL get 
PASS output.name: setAttribute() to 1.5 followed by getAttribute() 
PASS output.name: setAttribute() to 1.5 followed by IDL get 
PASS output.name: setAttribute() to true followed by getAttribute() 
PASS output.name: setAttribute() to true followed by IDL get 
PASS output.name: setAttribute() to false followed by getAttribute() 
PASS output.name: setAttribute() to false followed by IDL get 
PASS output.name: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS output.name: setAttribute() to object "[object Object]" followed by IDL get 
PASS output.name: setAttribute() to NaN followed by getAttribute() 
PASS output.name: setAttribute() to NaN followed by IDL get 
PASS output.name: setAttribute() to Infinity followed by getAttribute() 
PASS output.name: setAttribute() to Infinity followed by IDL get 
PASS output.name: setAttribute() to -Infinity followed by getAttribute() 
PASS output.name: setAttribute() to -Infinity followed by IDL get 
PASS output.name: setAttribute() to "\0" followed by getAttribute() 
PASS output.name: setAttribute() to "\0" followed by IDL get 
PASS output.name: setAttribute() to null followed by getAttribute() 
PASS output.name: setAttribute() to null followed by IDL get 
PASS output.name: setAttribute() to object "test-toString" followed by getAttribute() 
PASS output.name: setAttribute() to object "test-toString" followed by IDL get 
PASS output.name: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS output.name: setAttribute() to object "test-valueOf" followed by IDL get 
PASS output.name: IDL set to "" should not throw 
PASS output.name: IDL set to "" followed by getAttribute() 
PASS output.name: IDL set to "" followed by IDL get 
PASS output.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS output.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS output.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS output.name: IDL set to undefined should not throw 
PASS output.name: IDL set to undefined followed by getAttribute() 
PASS output.name: IDL set to undefined followed by IDL get 
PASS output.name: IDL set to 7 should not throw 
PASS output.name: IDL set to 7 followed by getAttribute() 
PASS output.name: IDL set to 7 followed by IDL get 
PASS output.name: IDL set to 1.5 should not throw 
PASS output.name: IDL set to 1.5 followed by getAttribute() 
PASS output.name: IDL set to 1.5 followed by IDL get 
PASS output.name: IDL set to true should not throw 
PASS output.name: IDL set to true followed by getAttribute() 
PASS output.name: IDL set to true followed by IDL get 
PASS output.name: IDL set to false should not throw 
PASS output.name: IDL set to false followed by getAttribute() 
PASS output.name: IDL set to false followed by IDL get 
PASS output.name: IDL set to object "[object Object]" should not throw 
PASS output.name: IDL set to object "[object Object]" followed by getAttribute() 
PASS output.name: IDL set to object "[object Object]" followed by IDL get 
PASS output.name: IDL set to NaN should not throw 
PASS output.name: IDL set to NaN followed by getAttribute() 
PASS output.name: IDL set to NaN followed by IDL get 
PASS output.name: IDL set to Infinity should not throw 
PASS output.name: IDL set to Infinity followed by getAttribute() 
PASS output.name: IDL set to Infinity followed by IDL get 
PASS output.name: IDL set to -Infinity should not throw 
PASS output.name: IDL set to -Infinity followed by getAttribute() 
PASS output.name: IDL set to -Infinity followed by IDL get 
PASS output.name: IDL set to "\0" should not throw 
PASS output.name: IDL set to "\0" followed by getAttribute() 
PASS output.name: IDL set to "\0" followed by IDL get 
PASS output.name: IDL set to null should not throw 
PASS output.name: IDL set to null followed by getAttribute() 
PASS output.name: IDL set to null followed by IDL get 
PASS output.name: IDL set to object "test-toString" should not throw 
PASS output.name: IDL set to object "test-toString" followed by getAttribute() 
PASS output.name: IDL set to object "test-toString" followed by IDL get 
PASS output.name: IDL set to object "test-valueOf" should not throw 
PASS output.name: IDL set to object "test-valueOf" followed by getAttribute() 
PASS output.name: IDL set to object "test-valueOf" followed by IDL get 
FAIL output.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL output.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS output.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL output.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL output.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL output.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to null followed by getAttribute() 
FAIL output.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL output.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL output.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to true followed by getAttribute() 
FAIL output.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to false followed by getAttribute() 
FAIL output.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL output.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL output.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL output.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL output.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL output.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL output.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL output.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL output.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS output.itemScope: IDL set to "" should not throw 
FAIL output.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL output.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS output.itemScope: IDL set to " foo " should not throw 
PASS output.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL output.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS output.itemScope: IDL set to undefined should not throw 
FAIL output.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL output.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS output.itemScope: IDL set to null should not throw 
FAIL output.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL output.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS output.itemScope: IDL set to 7 should not throw 
PASS output.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL output.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS output.itemScope: IDL set to 1.5 should not throw 
PASS output.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL output.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS output.itemScope: IDL set to true should not throw 
PASS output.itemScope: IDL set to true followed by hasAttribute() 
PASS output.itemScope: IDL set to true followed by IDL get 
PASS output.itemScope: IDL set to false should not throw 
FAIL output.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS output.itemScope: IDL set to false followed by IDL get 
PASS output.itemScope: IDL set to object "[object Object]" should not throw 
PASS output.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL output.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS output.itemScope: IDL set to NaN should not throw 
FAIL output.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL output.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS output.itemScope: IDL set to Infinity should not throw 
PASS output.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL output.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS output.itemScope: IDL set to -Infinity should not throw 
PASS output.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL output.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS output.itemScope: IDL set to "\0" should not throw 
PASS output.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL output.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS output.itemScope: IDL set to object "test-toString" should not throw 
PASS output.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL output.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS output.itemScope: IDL set to object "test-valueOf" should not throw 
PASS output.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL output.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL output.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL output.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS output.itemId: setAttribute() to "" followed by getAttribute() 
FAIL output.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS output.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL output.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS output.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL output.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS output.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL output.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS output.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL output.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS output.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL output.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS output.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL output.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS output.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL output.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS output.itemId: setAttribute() to true followed by getAttribute() 
FAIL output.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS output.itemId: setAttribute() to false followed by getAttribute() 
FAIL output.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS output.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL output.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS output.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL output.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS output.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL output.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS output.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL output.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS output.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL output.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS output.itemId: setAttribute() to null followed by getAttribute() 
FAIL output.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS output.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL output.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS output.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL output.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS output.itemId: IDL set to "" should not throw 
FAIL output.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL output.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS output.itemId: IDL set to " foo " should not throw 
FAIL output.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL output.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS output.itemId: IDL set to "http://site.example/" should not throw 
FAIL output.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS output.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS output.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL output.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL output.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS output.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL output.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL output.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS output.itemId: IDL set to undefined should not throw 
FAIL output.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL output.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS output.itemId: IDL set to 7 should not throw 
FAIL output.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL output.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS output.itemId: IDL set to 1.5 should not throw 
FAIL output.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL output.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS output.itemId: IDL set to true should not throw 
FAIL output.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL output.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS output.itemId: IDL set to false should not throw 
FAIL output.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL output.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS output.itemId: IDL set to object "[object Object]" should not throw 
FAIL output.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL output.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS output.itemId: IDL set to NaN should not throw 
FAIL output.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL output.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS output.itemId: IDL set to Infinity should not throw 
FAIL output.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL output.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS output.itemId: IDL set to -Infinity should not throw 
FAIL output.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL output.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS output.itemId: IDL set to "\0" should not throw 
FAIL output.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL output.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS output.itemId: IDL set to null should not throw 
FAIL output.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL output.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS output.itemId: IDL set to object "test-toString" should not throw 
FAIL output.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL output.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS output.itemId: IDL set to object "test-valueOf" should not throw 
PASS output.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL output.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS progress.title: typeof IDL attribute 
PASS progress.title: IDL get with DOM attribute unset 
PASS progress.title: setAttribute() to "" followed by getAttribute() 
PASS progress.title: setAttribute() to "" followed by IDL get 
PASS progress.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS progress.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS progress.title: setAttribute() to undefined followed by getAttribute() 
PASS progress.title: setAttribute() to undefined followed by IDL get 
PASS progress.title: setAttribute() to 7 followed by getAttribute() 
PASS progress.title: setAttribute() to 7 followed by IDL get 
PASS progress.title: setAttribute() to 1.5 followed by getAttribute() 
PASS progress.title: setAttribute() to 1.5 followed by IDL get 
PASS progress.title: setAttribute() to true followed by getAttribute() 
PASS progress.title: setAttribute() to true followed by IDL get 
PASS progress.title: setAttribute() to false followed by getAttribute() 
PASS progress.title: setAttribute() to false followed by IDL get 
PASS progress.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS progress.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS progress.title: setAttribute() to NaN followed by getAttribute() 
PASS progress.title: setAttribute() to NaN followed by IDL get 
PASS progress.title: setAttribute() to Infinity followed by getAttribute() 
PASS progress.title: setAttribute() to Infinity followed by IDL get 
PASS progress.title: setAttribute() to -Infinity followed by getAttribute() 
PASS progress.title: setAttribute() to -Infinity followed by IDL get 
PASS progress.title: setAttribute() to "\0" followed by getAttribute() 
PASS progress.title: setAttribute() to "\0" followed by IDL get 
PASS progress.title: setAttribute() to null followed by getAttribute() 
PASS progress.title: setAttribute() to null followed by IDL get 
PASS progress.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS progress.title: setAttribute() to object "test-toString" followed by IDL get 
PASS progress.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS progress.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS progress.title: IDL set to "" should not throw 
PASS progress.title: IDL set to "" followed by getAttribute() 
PASS progress.title: IDL set to "" followed by IDL get 
PASS progress.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS progress.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS progress.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS progress.title: IDL set to undefined should not throw 
PASS progress.title: IDL set to undefined followed by getAttribute() 
PASS progress.title: IDL set to undefined followed by IDL get 
PASS progress.title: IDL set to 7 should not throw 
PASS progress.title: IDL set to 7 followed by getAttribute() 
PASS progress.title: IDL set to 7 followed by IDL get 
PASS progress.title: IDL set to 1.5 should not throw 
PASS progress.title: IDL set to 1.5 followed by getAttribute() 
PASS progress.title: IDL set to 1.5 followed by IDL get 
PASS progress.title: IDL set to true should not throw 
PASS progress.title: IDL set to true followed by getAttribute() 
PASS progress.title: IDL set to true followed by IDL get 
PASS progress.title: IDL set to false should not throw 
PASS progress.title: IDL set to false followed by getAttribute() 
PASS progress.title: IDL set to false followed by IDL get 
PASS progress.title: IDL set to object "[object Object]" should not throw 
PASS progress.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS progress.title: IDL set to object "[object Object]" followed by IDL get 
PASS progress.title: IDL set to NaN should not throw 
PASS progress.title: IDL set to NaN followed by getAttribute() 
PASS progress.title: IDL set to NaN followed by IDL get 
PASS progress.title: IDL set to Infinity should not throw 
PASS progress.title: IDL set to Infinity followed by getAttribute() 
PASS progress.title: IDL set to Infinity followed by IDL get 
PASS progress.title: IDL set to -Infinity should not throw 
PASS progress.title: IDL set to -Infinity followed by getAttribute() 
PASS progress.title: IDL set to -Infinity followed by IDL get 
PASS progress.title: IDL set to "\0" should not throw 
PASS progress.title: IDL set to "\0" followed by getAttribute() 
PASS progress.title: IDL set to "\0" followed by IDL get 
PASS progress.title: IDL set to null should not throw 
PASS progress.title: IDL set to null followed by getAttribute() 
PASS progress.title: IDL set to null followed by IDL get 
PASS progress.title: IDL set to object "test-toString" should not throw 
PASS progress.title: IDL set to object "test-toString" followed by getAttribute() 
PASS progress.title: IDL set to object "test-toString" followed by IDL get 
PASS progress.title: IDL set to object "test-valueOf" should not throw 
PASS progress.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS progress.title: IDL set to object "test-valueOf" followed by IDL get 
PASS progress.lang: typeof IDL attribute 
PASS progress.lang: IDL get with DOM attribute unset 
PASS progress.lang: setAttribute() to "" followed by getAttribute() 
PASS progress.lang: setAttribute() to "" followed by IDL get 
PASS progress.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS progress.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS progress.lang: setAttribute() to undefined followed by getAttribute() 
PASS progress.lang: setAttribute() to undefined followed by IDL get 
PASS progress.lang: setAttribute() to 7 followed by getAttribute() 
PASS progress.lang: setAttribute() to 7 followed by IDL get 
PASS progress.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS progress.lang: setAttribute() to 1.5 followed by IDL get 
PASS progress.lang: setAttribute() to true followed by getAttribute() 
PASS progress.lang: setAttribute() to true followed by IDL get 
PASS progress.lang: setAttribute() to false followed by getAttribute() 
PASS progress.lang: setAttribute() to false followed by IDL get 
PASS progress.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS progress.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS progress.lang: setAttribute() to NaN followed by getAttribute() 
PASS progress.lang: setAttribute() to NaN followed by IDL get 
PASS progress.lang: setAttribute() to Infinity followed by getAttribute() 
PASS progress.lang: setAttribute() to Infinity followed by IDL get 
PASS progress.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS progress.lang: setAttribute() to -Infinity followed by IDL get 
PASS progress.lang: setAttribute() to "\0" followed by getAttribute() 
PASS progress.lang: setAttribute() to "\0" followed by IDL get 
PASS progress.lang: setAttribute() to null followed by getAttribute() 
PASS progress.lang: setAttribute() to null followed by IDL get 
PASS progress.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS progress.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS progress.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS progress.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS progress.lang: IDL set to "" should not throw 
PASS progress.lang: IDL set to "" followed by getAttribute() 
PASS progress.lang: IDL set to "" followed by IDL get 
PASS progress.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS progress.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS progress.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS progress.lang: IDL set to undefined should not throw 
PASS progress.lang: IDL set to undefined followed by getAttribute() 
PASS progress.lang: IDL set to undefined followed by IDL get 
PASS progress.lang: IDL set to 7 should not throw 
PASS progress.lang: IDL set to 7 followed by getAttribute() 
PASS progress.lang: IDL set to 7 followed by IDL get 
PASS progress.lang: IDL set to 1.5 should not throw 
PASS progress.lang: IDL set to 1.5 followed by getAttribute() 
PASS progress.lang: IDL set to 1.5 followed by IDL get 
PASS progress.lang: IDL set to true should not throw 
PASS progress.lang: IDL set to true followed by getAttribute() 
PASS progress.lang: IDL set to true followed by IDL get 
PASS progress.lang: IDL set to false should not throw 
PASS progress.lang: IDL set to false followed by getAttribute() 
PASS progress.lang: IDL set to false followed by IDL get 
PASS progress.lang: IDL set to object "[object Object]" should not throw 
PASS progress.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS progress.lang: IDL set to object "[object Object]" followed by IDL get 
PASS progress.lang: IDL set to NaN should not throw 
PASS progress.lang: IDL set to NaN followed by getAttribute() 
PASS progress.lang: IDL set to NaN followed by IDL get 
PASS progress.lang: IDL set to Infinity should not throw 
PASS progress.lang: IDL set to Infinity followed by getAttribute() 
PASS progress.lang: IDL set to Infinity followed by IDL get 
PASS progress.lang: IDL set to -Infinity should not throw 
PASS progress.lang: IDL set to -Infinity followed by getAttribute() 
PASS progress.lang: IDL set to -Infinity followed by IDL get 
PASS progress.lang: IDL set to "\0" should not throw 
PASS progress.lang: IDL set to "\0" followed by getAttribute() 
PASS progress.lang: IDL set to "\0" followed by IDL get 
PASS progress.lang: IDL set to null should not throw 
PASS progress.lang: IDL set to null followed by getAttribute() 
PASS progress.lang: IDL set to null followed by IDL get 
PASS progress.lang: IDL set to object "test-toString" should not throw 
PASS progress.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS progress.lang: IDL set to object "test-toString" followed by IDL get 
PASS progress.lang: IDL set to object "test-valueOf" should not throw 
PASS progress.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS progress.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS progress.dir: typeof IDL attribute 
PASS progress.dir: IDL get with DOM attribute unset 
PASS progress.dir: setAttribute() to "" followed by getAttribute() 
PASS progress.dir: setAttribute() to "" followed by IDL get 
PASS progress.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS progress.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS progress.dir: setAttribute() to undefined followed by getAttribute() 
PASS progress.dir: setAttribute() to undefined followed by IDL get 
PASS progress.dir: setAttribute() to 7 followed by getAttribute() 
PASS progress.dir: setAttribute() to 7 followed by IDL get 
PASS progress.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS progress.dir: setAttribute() to 1.5 followed by IDL get 
PASS progress.dir: setAttribute() to true followed by getAttribute() 
PASS progress.dir: setAttribute() to true followed by IDL get 
PASS progress.dir: setAttribute() to false followed by getAttribute() 
PASS progress.dir: setAttribute() to false followed by IDL get 
PASS progress.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS progress.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS progress.dir: setAttribute() to NaN followed by getAttribute() 
PASS progress.dir: setAttribute() to NaN followed by IDL get 
PASS progress.dir: setAttribute() to Infinity followed by getAttribute() 
PASS progress.dir: setAttribute() to Infinity followed by IDL get 
PASS progress.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS progress.dir: setAttribute() to -Infinity followed by IDL get 
PASS progress.dir: setAttribute() to "\0" followed by getAttribute() 
PASS progress.dir: setAttribute() to "\0" followed by IDL get 
PASS progress.dir: setAttribute() to null followed by getAttribute() 
PASS progress.dir: setAttribute() to null followed by IDL get 
PASS progress.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS progress.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS progress.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS progress.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS progress.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS progress.dir: setAttribute() to "ltr" followed by IDL get 
PASS progress.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS progress.dir: setAttribute() to "xltr" followed by IDL get 
PASS progress.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS progress.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS progress.dir: setAttribute() to "tr" followed by getAttribute() 
PASS progress.dir: setAttribute() to "tr" followed by IDL get 
PASS progress.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS progress.dir: setAttribute() to "LTR" followed by IDL get 
PASS progress.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS progress.dir: setAttribute() to "rtl" followed by IDL get 
PASS progress.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS progress.dir: setAttribute() to "xrtl" followed by IDL get 
PASS progress.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS progress.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS progress.dir: setAttribute() to "tl" followed by getAttribute() 
PASS progress.dir: setAttribute() to "tl" followed by IDL get 
PASS progress.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS progress.dir: setAttribute() to "RTL" followed by IDL get 
PASS progress.dir: setAttribute() to "auto" followed by getAttribute() 
PASS progress.dir: setAttribute() to "auto" followed by IDL get 
PASS progress.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS progress.dir: setAttribute() to "xauto" followed by IDL get 
PASS progress.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS progress.dir: setAttribute() to "auto\0" followed by IDL get 
PASS progress.dir: setAttribute() to "uto" followed by getAttribute() 
PASS progress.dir: setAttribute() to "uto" followed by IDL get 
PASS progress.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS progress.dir: setAttribute() to "AUTO" followed by IDL get 
PASS progress.dir: IDL set to "" should not throw 
PASS progress.dir: IDL set to "" followed by getAttribute() 
PASS progress.dir: IDL set to "" followed by IDL get 
PASS progress.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS progress.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS progress.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS progress.dir: IDL set to undefined should not throw 
PASS progress.dir: IDL set to undefined followed by getAttribute() 
PASS progress.dir: IDL set to undefined followed by IDL get 
PASS progress.dir: IDL set to 7 should not throw 
PASS progress.dir: IDL set to 7 followed by getAttribute() 
PASS progress.dir: IDL set to 7 followed by IDL get 
PASS progress.dir: IDL set to 1.5 should not throw 
PASS progress.dir: IDL set to 1.5 followed by getAttribute() 
PASS progress.dir: IDL set to 1.5 followed by IDL get 
PASS progress.dir: IDL set to true should not throw 
PASS progress.dir: IDL set to true followed by getAttribute() 
PASS progress.dir: IDL set to true followed by IDL get 
PASS progress.dir: IDL set to false should not throw 
PASS progress.dir: IDL set to false followed by getAttribute() 
PASS progress.dir: IDL set to false followed by IDL get 
PASS progress.dir: IDL set to object "[object Object]" should not throw 
PASS progress.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS progress.dir: IDL set to object "[object Object]" followed by IDL get 
PASS progress.dir: IDL set to NaN should not throw 
PASS progress.dir: IDL set to NaN followed by getAttribute() 
PASS progress.dir: IDL set to NaN followed by IDL get 
PASS progress.dir: IDL set to Infinity should not throw 
PASS progress.dir: IDL set to Infinity followed by getAttribute() 
PASS progress.dir: IDL set to Infinity followed by IDL get 
PASS progress.dir: IDL set to -Infinity should not throw 
PASS progress.dir: IDL set to -Infinity followed by getAttribute() 
PASS progress.dir: IDL set to -Infinity followed by IDL get 
PASS progress.dir: IDL set to "\0" should not throw 
PASS progress.dir: IDL set to "\0" followed by getAttribute() 
PASS progress.dir: IDL set to "\0" followed by IDL get 
PASS progress.dir: IDL set to null should not throw 
PASS progress.dir: IDL set to null followed by IDL get 
PASS progress.dir: IDL set to object "test-toString" should not throw 
PASS progress.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS progress.dir: IDL set to object "test-toString" followed by IDL get 
PASS progress.dir: IDL set to object "test-valueOf" should not throw 
PASS progress.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS progress.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS progress.dir: IDL set to "ltr" should not throw 
PASS progress.dir: IDL set to "ltr" followed by getAttribute() 
PASS progress.dir: IDL set to "ltr" followed by IDL get 
PASS progress.dir: IDL set to "xltr" should not throw 
PASS progress.dir: IDL set to "xltr" followed by getAttribute() 
PASS progress.dir: IDL set to "xltr" followed by IDL get 
PASS progress.dir: IDL set to "ltr\0" should not throw 
PASS progress.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS progress.dir: IDL set to "ltr\0" followed by IDL get 
PASS progress.dir: IDL set to "tr" should not throw 
PASS progress.dir: IDL set to "tr" followed by getAttribute() 
PASS progress.dir: IDL set to "tr" followed by IDL get 
PASS progress.dir: IDL set to "LTR" should not throw 
PASS progress.dir: IDL set to "LTR" followed by getAttribute() 
PASS progress.dir: IDL set to "LTR" followed by IDL get 
PASS progress.dir: IDL set to "rtl" should not throw 
PASS progress.dir: IDL set to "rtl" followed by getAttribute() 
PASS progress.dir: IDL set to "rtl" followed by IDL get 
PASS progress.dir: IDL set to "xrtl" should not throw 
PASS progress.dir: IDL set to "xrtl" followed by getAttribute() 
PASS progress.dir: IDL set to "xrtl" followed by IDL get 
PASS progress.dir: IDL set to "rtl\0" should not throw 
PASS progress.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS progress.dir: IDL set to "rtl\0" followed by IDL get 
PASS progress.dir: IDL set to "tl" should not throw 
PASS progress.dir: IDL set to "tl" followed by getAttribute() 
PASS progress.dir: IDL set to "tl" followed by IDL get 
PASS progress.dir: IDL set to "RTL" should not throw 
PASS progress.dir: IDL set to "RTL" followed by getAttribute() 
PASS progress.dir: IDL set to "RTL" followed by IDL get 
PASS progress.dir: IDL set to "auto" should not throw 
PASS progress.dir: IDL set to "auto" followed by getAttribute() 
PASS progress.dir: IDL set to "auto" followed by IDL get 
PASS progress.dir: IDL set to "xauto" should not throw 
PASS progress.dir: IDL set to "xauto" followed by getAttribute() 
PASS progress.dir: IDL set to "xauto" followed by IDL get 
PASS progress.dir: IDL set to "auto\0" should not throw 
PASS progress.dir: IDL set to "auto\0" followed by getAttribute() 
PASS progress.dir: IDL set to "auto\0" followed by IDL get 
PASS progress.dir: IDL set to "uto" should not throw 
PASS progress.dir: IDL set to "uto" followed by getAttribute() 
PASS progress.dir: IDL set to "uto" followed by IDL get 
PASS progress.dir: IDL set to "AUTO" should not throw 
PASS progress.dir: IDL set to "AUTO" followed by getAttribute() 
PASS progress.dir: IDL set to "AUTO" followed by IDL get 
PASS progress.className (<progress class>): typeof IDL attribute 
PASS progress.className (<progress class>): IDL get with DOM attribute unset 
PASS progress.className (<progress class>): setAttribute() to "" followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to "" followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to undefined followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to undefined followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to 7 followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to 7 followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to 1.5 followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to 1.5 followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to true followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to true followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to false followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to false followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to NaN followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to NaN followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to Infinity followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to Infinity followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to -Infinity followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to -Infinity followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to "\0" followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to "\0" followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to null followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to null followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to object "test-toString" followed by IDL get 
PASS progress.className (<progress class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS progress.className (<progress class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS progress.className (<progress class>): IDL set to "" should not throw 
PASS progress.className (<progress class>): IDL set to "" followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to "" followed by IDL get 
PASS progress.className (<progress class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS progress.className (<progress class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS progress.className (<progress class>): IDL set to undefined should not throw 
PASS progress.className (<progress class>): IDL set to undefined followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to undefined followed by IDL get 
PASS progress.className (<progress class>): IDL set to 7 should not throw 
PASS progress.className (<progress class>): IDL set to 7 followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to 7 followed by IDL get 
PASS progress.className (<progress class>): IDL set to 1.5 should not throw 
PASS progress.className (<progress class>): IDL set to 1.5 followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to 1.5 followed by IDL get 
PASS progress.className (<progress class>): IDL set to true should not throw 
PASS progress.className (<progress class>): IDL set to true followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to true followed by IDL get 
PASS progress.className (<progress class>): IDL set to false should not throw 
PASS progress.className (<progress class>): IDL set to false followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to false followed by IDL get 
PASS progress.className (<progress class>): IDL set to object "[object Object]" should not throw 
PASS progress.className (<progress class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to object "[object Object]" followed by IDL get 
PASS progress.className (<progress class>): IDL set to NaN should not throw 
PASS progress.className (<progress class>): IDL set to NaN followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to NaN followed by IDL get 
PASS progress.className (<progress class>): IDL set to Infinity should not throw 
PASS progress.className (<progress class>): IDL set to Infinity followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to Infinity followed by IDL get 
PASS progress.className (<progress class>): IDL set to -Infinity should not throw 
PASS progress.className (<progress class>): IDL set to -Infinity followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to -Infinity followed by IDL get 
PASS progress.className (<progress class>): IDL set to "\0" should not throw 
PASS progress.className (<progress class>): IDL set to "\0" followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to "\0" followed by IDL get 
PASS progress.className (<progress class>): IDL set to null should not throw 
PASS progress.className (<progress class>): IDL set to null followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to null followed by IDL get 
PASS progress.className (<progress class>): IDL set to object "test-toString" should not throw 
PASS progress.className (<progress class>): IDL set to object "test-toString" followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to object "test-toString" followed by IDL get 
PASS progress.className (<progress class>): IDL set to object "test-valueOf" should not throw 
PASS progress.className (<progress class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS progress.className (<progress class>): IDL set to object "test-valueOf" followed by IDL get 
PASS progress.hidden: typeof IDL attribute 
PASS progress.hidden: IDL get with DOM attribute unset 
PASS progress.hidden: setAttribute() to "" followed by getAttribute() 
PASS progress.hidden: setAttribute() to "" followed by IDL get 
PASS progress.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS progress.hidden: setAttribute() to " foo " followed by IDL get 
PASS progress.hidden: setAttribute() to undefined followed by getAttribute() 
PASS progress.hidden: setAttribute() to undefined followed by IDL get 
PASS progress.hidden: setAttribute() to null followed by getAttribute() 
PASS progress.hidden: setAttribute() to null followed by IDL get 
PASS progress.hidden: setAttribute() to 7 followed by getAttribute() 
PASS progress.hidden: setAttribute() to 7 followed by IDL get 
PASS progress.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS progress.hidden: setAttribute() to 1.5 followed by IDL get 
PASS progress.hidden: setAttribute() to true followed by getAttribute() 
PASS progress.hidden: setAttribute() to true followed by IDL get 
PASS progress.hidden: setAttribute() to false followed by getAttribute() 
PASS progress.hidden: setAttribute() to false followed by IDL get 
PASS progress.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS progress.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS progress.hidden: setAttribute() to NaN followed by getAttribute() 
PASS progress.hidden: setAttribute() to NaN followed by IDL get 
PASS progress.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS progress.hidden: setAttribute() to Infinity followed by IDL get 
PASS progress.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS progress.hidden: setAttribute() to -Infinity followed by IDL get 
PASS progress.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS progress.hidden: setAttribute() to "\0" followed by IDL get 
PASS progress.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS progress.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS progress.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS progress.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS progress.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS progress.hidden: setAttribute() to "hidden" followed by IDL get 
PASS progress.hidden: IDL set to "" should not throw 
PASS progress.hidden: IDL set to "" followed by hasAttribute() 
PASS progress.hidden: IDL set to "" followed by IDL get 
PASS progress.hidden: IDL set to " foo " should not throw 
PASS progress.hidden: IDL set to " foo " followed by hasAttribute() 
PASS progress.hidden: IDL set to " foo " followed by IDL get 
PASS progress.hidden: IDL set to undefined should not throw 
PASS progress.hidden: IDL set to undefined followed by hasAttribute() 
PASS progress.hidden: IDL set to undefined followed by IDL get 
PASS progress.hidden: IDL set to null should not throw 
PASS progress.hidden: IDL set to null followed by hasAttribute() 
PASS progress.hidden: IDL set to null followed by IDL get 
PASS progress.hidden: IDL set to 7 should not throw 
PASS progress.hidden: IDL set to 7 followed by hasAttribute() 
PASS progress.hidden: IDL set to 7 followed by IDL get 
PASS progress.hidden: IDL set to 1.5 should not throw 
PASS progress.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS progress.hidden: IDL set to 1.5 followed by IDL get 
PASS progress.hidden: IDL set to true should not throw 
PASS progress.hidden: IDL set to true followed by hasAttribute() 
PASS progress.hidden: IDL set to true followed by IDL get 
PASS progress.hidden: IDL set to false should not throw 
PASS progress.hidden: IDL set to false followed by hasAttribute() 
PASS progress.hidden: IDL set to false followed by IDL get 
PASS progress.hidden: IDL set to object "[object Object]" should not throw 
PASS progress.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS progress.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS progress.hidden: IDL set to NaN should not throw 
PASS progress.hidden: IDL set to NaN followed by hasAttribute() 
PASS progress.hidden: IDL set to NaN followed by IDL get 
PASS progress.hidden: IDL set to Infinity should not throw 
PASS progress.hidden: IDL set to Infinity followed by hasAttribute() 
PASS progress.hidden: IDL set to Infinity followed by IDL get 
PASS progress.hidden: IDL set to -Infinity should not throw 
PASS progress.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS progress.hidden: IDL set to -Infinity followed by IDL get 
PASS progress.hidden: IDL set to "\0" should not throw 
PASS progress.hidden: IDL set to "\0" followed by hasAttribute() 
PASS progress.hidden: IDL set to "\0" followed by IDL get 
PASS progress.hidden: IDL set to object "test-toString" should not throw 
PASS progress.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS progress.hidden: IDL set to object "test-toString" followed by IDL get 
PASS progress.hidden: IDL set to object "test-valueOf" should not throw 
PASS progress.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS progress.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS progress.accessKey: typeof IDL attribute 
PASS progress.accessKey: IDL get with DOM attribute unset 
PASS progress.accessKey: setAttribute() to "" followed by getAttribute() 
PASS progress.accessKey: setAttribute() to "" followed by IDL get 
PASS progress.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS progress.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS progress.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS progress.accessKey: setAttribute() to undefined followed by IDL get 
PASS progress.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS progress.accessKey: setAttribute() to 7 followed by IDL get 
PASS progress.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS progress.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS progress.accessKey: setAttribute() to true followed by getAttribute() 
PASS progress.accessKey: setAttribute() to true followed by IDL get 
PASS progress.accessKey: setAttribute() to false followed by getAttribute() 
PASS progress.accessKey: setAttribute() to false followed by IDL get 
PASS progress.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS progress.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS progress.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS progress.accessKey: setAttribute() to NaN followed by IDL get 
PASS progress.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS progress.accessKey: setAttribute() to Infinity followed by IDL get 
PASS progress.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS progress.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS progress.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS progress.accessKey: setAttribute() to "\0" followed by IDL get 
PASS progress.accessKey: setAttribute() to null followed by getAttribute() 
PASS progress.accessKey: setAttribute() to null followed by IDL get 
PASS progress.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS progress.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS progress.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS progress.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS progress.accessKey: IDL set to "" should not throw 
PASS progress.accessKey: IDL set to "" followed by getAttribute() 
PASS progress.accessKey: IDL set to "" followed by IDL get 
PASS progress.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS progress.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS progress.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS progress.accessKey: IDL set to undefined should not throw 
PASS progress.accessKey: IDL set to undefined followed by getAttribute() 
PASS progress.accessKey: IDL set to undefined followed by IDL get 
PASS progress.accessKey: IDL set to 7 should not throw 
PASS progress.accessKey: IDL set to 7 followed by getAttribute() 
PASS progress.accessKey: IDL set to 7 followed by IDL get 
PASS progress.accessKey: IDL set to 1.5 should not throw 
PASS progress.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS progress.accessKey: IDL set to 1.5 followed by IDL get 
PASS progress.accessKey: IDL set to true should not throw 
PASS progress.accessKey: IDL set to true followed by getAttribute() 
PASS progress.accessKey: IDL set to true followed by IDL get 
PASS progress.accessKey: IDL set to false should not throw 
PASS progress.accessKey: IDL set to false followed by getAttribute() 
PASS progress.accessKey: IDL set to false followed by IDL get 
PASS progress.accessKey: IDL set to object "[object Object]" should not throw 
PASS progress.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS progress.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS progress.accessKey: IDL set to NaN should not throw 
PASS progress.accessKey: IDL set to NaN followed by getAttribute() 
PASS progress.accessKey: IDL set to NaN followed by IDL get 
PASS progress.accessKey: IDL set to Infinity should not throw 
PASS progress.accessKey: IDL set to Infinity followed by getAttribute() 
PASS progress.accessKey: IDL set to Infinity followed by IDL get 
PASS progress.accessKey: IDL set to -Infinity should not throw 
PASS progress.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS progress.accessKey: IDL set to -Infinity followed by IDL get 
PASS progress.accessKey: IDL set to "\0" should not throw 
PASS progress.accessKey: IDL set to "\0" followed by getAttribute() 
PASS progress.accessKey: IDL set to "\0" followed by IDL get 
PASS progress.accessKey: IDL set to null should not throw 
PASS progress.accessKey: IDL set to null followed by getAttribute() 
PASS progress.accessKey: IDL set to null followed by IDL get 
PASS progress.accessKey: IDL set to object "test-toString" should not throw 
PASS progress.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS progress.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS progress.accessKey: IDL set to object "test-valueOf" should not throw 
PASS progress.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS progress.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS progress.tabIndex: typeof IDL attribute 
PASS progress.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to -36 followed by IDL get 
PASS progress.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to -1 followed by IDL get 
PASS progress.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to 0 followed by IDL get 
PASS progress.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to 1 followed by IDL get 
PASS progress.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL progress.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS progress.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL progress.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS progress.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS progress.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS progress.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to "0" followed by IDL get 
PASS progress.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to "1" followed by IDL get 
PASS progress.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS progress.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS progress.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS progress.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS progress.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS progress.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS progress.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS progress.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS progress.tabIndex: IDL set to -36 should not throw 
PASS progress.tabIndex: IDL set to -36 followed by getAttribute() 
PASS progress.tabIndex: IDL set to -36 followed by IDL get 
PASS progress.tabIndex: IDL set to -1 should not throw 
PASS progress.tabIndex: IDL set to -1 followed by getAttribute() 
PASS progress.tabIndex: IDL set to -1 followed by IDL get 
PASS progress.tabIndex: IDL set to 0 should not throw 
PASS progress.tabIndex: IDL set to 0 followed by getAttribute() 
PASS progress.tabIndex: IDL set to 0 followed by IDL get 
PASS progress.tabIndex: IDL set to 1 should not throw 
PASS progress.tabIndex: IDL set to 1 followed by getAttribute() 
PASS progress.tabIndex: IDL set to 1 followed by IDL get 
PASS progress.tabIndex: IDL set to 2147483647 should not throw 
PASS progress.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL progress.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS progress.tabIndex: IDL set to -2147483648 should not throw 
PASS progress.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL progress.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL progress.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL progress.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS progress.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to null followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to true followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to false followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL progress.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS progress.itemScope: IDL set to "" should not throw 
FAIL progress.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL progress.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS progress.itemScope: IDL set to " foo " should not throw 
PASS progress.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL progress.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS progress.itemScope: IDL set to undefined should not throw 
FAIL progress.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL progress.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS progress.itemScope: IDL set to null should not throw 
FAIL progress.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL progress.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS progress.itemScope: IDL set to 7 should not throw 
PASS progress.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL progress.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS progress.itemScope: IDL set to 1.5 should not throw 
PASS progress.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL progress.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS progress.itemScope: IDL set to true should not throw 
PASS progress.itemScope: IDL set to true followed by hasAttribute() 
PASS progress.itemScope: IDL set to true followed by IDL get 
PASS progress.itemScope: IDL set to false should not throw 
FAIL progress.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS progress.itemScope: IDL set to false followed by IDL get 
PASS progress.itemScope: IDL set to object "[object Object]" should not throw 
PASS progress.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL progress.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS progress.itemScope: IDL set to NaN should not throw 
FAIL progress.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL progress.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS progress.itemScope: IDL set to Infinity should not throw 
PASS progress.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL progress.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS progress.itemScope: IDL set to -Infinity should not throw 
PASS progress.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL progress.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS progress.itemScope: IDL set to "\0" should not throw 
PASS progress.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL progress.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS progress.itemScope: IDL set to object "test-toString" should not throw 
PASS progress.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL progress.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS progress.itemScope: IDL set to object "test-valueOf" should not throw 
PASS progress.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL progress.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL progress.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL progress.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS progress.itemId: setAttribute() to "" followed by getAttribute() 
FAIL progress.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS progress.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL progress.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS progress.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL progress.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS progress.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL progress.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS progress.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL progress.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS progress.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL progress.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS progress.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL progress.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS progress.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL progress.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS progress.itemId: setAttribute() to true followed by getAttribute() 
FAIL progress.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS progress.itemId: setAttribute() to false followed by getAttribute() 
FAIL progress.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS progress.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL progress.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS progress.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL progress.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS progress.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL progress.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS progress.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL progress.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS progress.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL progress.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS progress.itemId: setAttribute() to null followed by getAttribute() 
FAIL progress.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS progress.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL progress.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS progress.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL progress.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS progress.itemId: IDL set to "" should not throw 
FAIL progress.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL progress.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS progress.itemId: IDL set to " foo " should not throw 
FAIL progress.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL progress.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS progress.itemId: IDL set to "http://site.example/" should not throw 
FAIL progress.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS progress.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS progress.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL progress.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL progress.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS progress.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL progress.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL progress.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS progress.itemId: IDL set to undefined should not throw 
FAIL progress.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL progress.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS progress.itemId: IDL set to 7 should not throw 
FAIL progress.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL progress.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS progress.itemId: IDL set to 1.5 should not throw 
FAIL progress.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL progress.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS progress.itemId: IDL set to true should not throw 
FAIL progress.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL progress.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS progress.itemId: IDL set to false should not throw 
FAIL progress.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL progress.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS progress.itemId: IDL set to object "[object Object]" should not throw 
FAIL progress.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL progress.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS progress.itemId: IDL set to NaN should not throw 
FAIL progress.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL progress.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS progress.itemId: IDL set to Infinity should not throw 
FAIL progress.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL progress.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS progress.itemId: IDL set to -Infinity should not throw 
FAIL progress.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL progress.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS progress.itemId: IDL set to "\0" should not throw 
FAIL progress.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL progress.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS progress.itemId: IDL set to null should not throw 
FAIL progress.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL progress.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS progress.itemId: IDL set to object "test-toString" should not throw 
FAIL progress.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL progress.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS progress.itemId: IDL set to object "test-valueOf" should not throw 
PASS progress.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL progress.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS meter.title: typeof IDL attribute 
PASS meter.title: IDL get with DOM attribute unset 
PASS meter.title: setAttribute() to "" followed by getAttribute() 
PASS meter.title: setAttribute() to "" followed by IDL get 
PASS meter.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meter.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meter.title: setAttribute() to undefined followed by getAttribute() 
PASS meter.title: setAttribute() to undefined followed by IDL get 
PASS meter.title: setAttribute() to 7 followed by getAttribute() 
PASS meter.title: setAttribute() to 7 followed by IDL get 
PASS meter.title: setAttribute() to 1.5 followed by getAttribute() 
PASS meter.title: setAttribute() to 1.5 followed by IDL get 
PASS meter.title: setAttribute() to true followed by getAttribute() 
PASS meter.title: setAttribute() to true followed by IDL get 
PASS meter.title: setAttribute() to false followed by getAttribute() 
PASS meter.title: setAttribute() to false followed by IDL get 
PASS meter.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meter.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS meter.title: setAttribute() to NaN followed by getAttribute() 
PASS meter.title: setAttribute() to NaN followed by IDL get 
PASS meter.title: setAttribute() to Infinity followed by getAttribute() 
PASS meter.title: setAttribute() to Infinity followed by IDL get 
PASS meter.title: setAttribute() to -Infinity followed by getAttribute() 
PASS meter.title: setAttribute() to -Infinity followed by IDL get 
PASS meter.title: setAttribute() to "\0" followed by getAttribute() 
PASS meter.title: setAttribute() to "\0" followed by IDL get 
PASS meter.title: setAttribute() to null followed by getAttribute() 
PASS meter.title: setAttribute() to null followed by IDL get 
PASS meter.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meter.title: setAttribute() to object "test-toString" followed by IDL get 
PASS meter.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meter.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meter.title: IDL set to "" should not throw 
PASS meter.title: IDL set to "" followed by getAttribute() 
PASS meter.title: IDL set to "" followed by IDL get 
PASS meter.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meter.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meter.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meter.title: IDL set to undefined should not throw 
PASS meter.title: IDL set to undefined followed by getAttribute() 
PASS meter.title: IDL set to undefined followed by IDL get 
PASS meter.title: IDL set to 7 should not throw 
PASS meter.title: IDL set to 7 followed by getAttribute() 
PASS meter.title: IDL set to 7 followed by IDL get 
PASS meter.title: IDL set to 1.5 should not throw 
PASS meter.title: IDL set to 1.5 followed by getAttribute() 
PASS meter.title: IDL set to 1.5 followed by IDL get 
PASS meter.title: IDL set to true should not throw 
PASS meter.title: IDL set to true followed by getAttribute() 
PASS meter.title: IDL set to true followed by IDL get 
PASS meter.title: IDL set to false should not throw 
PASS meter.title: IDL set to false followed by getAttribute() 
PASS meter.title: IDL set to false followed by IDL get 
PASS meter.title: IDL set to object "[object Object]" should not throw 
PASS meter.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS meter.title: IDL set to object "[object Object]" followed by IDL get 
PASS meter.title: IDL set to NaN should not throw 
PASS meter.title: IDL set to NaN followed by getAttribute() 
PASS meter.title: IDL set to NaN followed by IDL get 
PASS meter.title: IDL set to Infinity should not throw 
PASS meter.title: IDL set to Infinity followed by getAttribute() 
PASS meter.title: IDL set to Infinity followed by IDL get 
PASS meter.title: IDL set to -Infinity should not throw 
PASS meter.title: IDL set to -Infinity followed by getAttribute() 
PASS meter.title: IDL set to -Infinity followed by IDL get 
PASS meter.title: IDL set to "\0" should not throw 
PASS meter.title: IDL set to "\0" followed by getAttribute() 
PASS meter.title: IDL set to "\0" followed by IDL get 
PASS meter.title: IDL set to null should not throw 
PASS meter.title: IDL set to null followed by getAttribute() 
PASS meter.title: IDL set to null followed by IDL get 
PASS meter.title: IDL set to object "test-toString" should not throw 
PASS meter.title: IDL set to object "test-toString" followed by getAttribute() 
PASS meter.title: IDL set to object "test-toString" followed by IDL get 
PASS meter.title: IDL set to object "test-valueOf" should not throw 
PASS meter.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS meter.title: IDL set to object "test-valueOf" followed by IDL get 
PASS meter.lang: typeof IDL attribute 
PASS meter.lang: IDL get with DOM attribute unset 
PASS meter.lang: setAttribute() to "" followed by getAttribute() 
PASS meter.lang: setAttribute() to "" followed by IDL get 
PASS meter.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meter.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meter.lang: setAttribute() to undefined followed by getAttribute() 
PASS meter.lang: setAttribute() to undefined followed by IDL get 
PASS meter.lang: setAttribute() to 7 followed by getAttribute() 
PASS meter.lang: setAttribute() to 7 followed by IDL get 
PASS meter.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS meter.lang: setAttribute() to 1.5 followed by IDL get 
PASS meter.lang: setAttribute() to true followed by getAttribute() 
PASS meter.lang: setAttribute() to true followed by IDL get 
PASS meter.lang: setAttribute() to false followed by getAttribute() 
PASS meter.lang: setAttribute() to false followed by IDL get 
PASS meter.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meter.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS meter.lang: setAttribute() to NaN followed by getAttribute() 
PASS meter.lang: setAttribute() to NaN followed by IDL get 
PASS meter.lang: setAttribute() to Infinity followed by getAttribute() 
PASS meter.lang: setAttribute() to Infinity followed by IDL get 
PASS meter.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS meter.lang: setAttribute() to -Infinity followed by IDL get 
PASS meter.lang: setAttribute() to "\0" followed by getAttribute() 
PASS meter.lang: setAttribute() to "\0" followed by IDL get 
PASS meter.lang: setAttribute() to null followed by getAttribute() 
PASS meter.lang: setAttribute() to null followed by IDL get 
PASS meter.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meter.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS meter.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meter.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meter.lang: IDL set to "" should not throw 
PASS meter.lang: IDL set to "" followed by getAttribute() 
PASS meter.lang: IDL set to "" followed by IDL get 
PASS meter.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meter.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meter.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meter.lang: IDL set to undefined should not throw 
PASS meter.lang: IDL set to undefined followed by getAttribute() 
PASS meter.lang: IDL set to undefined followed by IDL get 
PASS meter.lang: IDL set to 7 should not throw 
PASS meter.lang: IDL set to 7 followed by getAttribute() 
PASS meter.lang: IDL set to 7 followed by IDL get 
PASS meter.lang: IDL set to 1.5 should not throw 
PASS meter.lang: IDL set to 1.5 followed by getAttribute() 
PASS meter.lang: IDL set to 1.5 followed by IDL get 
PASS meter.lang: IDL set to true should not throw 
PASS meter.lang: IDL set to true followed by getAttribute() 
PASS meter.lang: IDL set to true followed by IDL get 
PASS meter.lang: IDL set to false should not throw 
PASS meter.lang: IDL set to false followed by getAttribute() 
PASS meter.lang: IDL set to false followed by IDL get 
PASS meter.lang: IDL set to object "[object Object]" should not throw 
PASS meter.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS meter.lang: IDL set to object "[object Object]" followed by IDL get 
PASS meter.lang: IDL set to NaN should not throw 
PASS meter.lang: IDL set to NaN followed by getAttribute() 
PASS meter.lang: IDL set to NaN followed by IDL get 
PASS meter.lang: IDL set to Infinity should not throw 
PASS meter.lang: IDL set to Infinity followed by getAttribute() 
PASS meter.lang: IDL set to Infinity followed by IDL get 
PASS meter.lang: IDL set to -Infinity should not throw 
PASS meter.lang: IDL set to -Infinity followed by getAttribute() 
PASS meter.lang: IDL set to -Infinity followed by IDL get 
PASS meter.lang: IDL set to "\0" should not throw 
PASS meter.lang: IDL set to "\0" followed by getAttribute() 
PASS meter.lang: IDL set to "\0" followed by IDL get 
PASS meter.lang: IDL set to null should not throw 
PASS meter.lang: IDL set to null followed by getAttribute() 
PASS meter.lang: IDL set to null followed by IDL get 
PASS meter.lang: IDL set to object "test-toString" should not throw 
PASS meter.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS meter.lang: IDL set to object "test-toString" followed by IDL get 
PASS meter.lang: IDL set to object "test-valueOf" should not throw 
PASS meter.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS meter.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS meter.dir: typeof IDL attribute 
PASS meter.dir: IDL get with DOM attribute unset 
PASS meter.dir: setAttribute() to "" followed by getAttribute() 
PASS meter.dir: setAttribute() to "" followed by IDL get 
PASS meter.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meter.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meter.dir: setAttribute() to undefined followed by getAttribute() 
PASS meter.dir: setAttribute() to undefined followed by IDL get 
PASS meter.dir: setAttribute() to 7 followed by getAttribute() 
PASS meter.dir: setAttribute() to 7 followed by IDL get 
PASS meter.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS meter.dir: setAttribute() to 1.5 followed by IDL get 
PASS meter.dir: setAttribute() to true followed by getAttribute() 
PASS meter.dir: setAttribute() to true followed by IDL get 
PASS meter.dir: setAttribute() to false followed by getAttribute() 
PASS meter.dir: setAttribute() to false followed by IDL get 
PASS meter.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meter.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS meter.dir: setAttribute() to NaN followed by getAttribute() 
PASS meter.dir: setAttribute() to NaN followed by IDL get 
PASS meter.dir: setAttribute() to Infinity followed by getAttribute() 
PASS meter.dir: setAttribute() to Infinity followed by IDL get 
PASS meter.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS meter.dir: setAttribute() to -Infinity followed by IDL get 
PASS meter.dir: setAttribute() to "\0" followed by getAttribute() 
PASS meter.dir: setAttribute() to "\0" followed by IDL get 
PASS meter.dir: setAttribute() to null followed by getAttribute() 
PASS meter.dir: setAttribute() to null followed by IDL get 
PASS meter.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meter.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS meter.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meter.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meter.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS meter.dir: setAttribute() to "ltr" followed by IDL get 
PASS meter.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS meter.dir: setAttribute() to "xltr" followed by IDL get 
PASS meter.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS meter.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS meter.dir: setAttribute() to "tr" followed by getAttribute() 
PASS meter.dir: setAttribute() to "tr" followed by IDL get 
PASS meter.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS meter.dir: setAttribute() to "LTR" followed by IDL get 
PASS meter.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS meter.dir: setAttribute() to "rtl" followed by IDL get 
PASS meter.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS meter.dir: setAttribute() to "xrtl" followed by IDL get 
PASS meter.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS meter.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS meter.dir: setAttribute() to "tl" followed by getAttribute() 
PASS meter.dir: setAttribute() to "tl" followed by IDL get 
PASS meter.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS meter.dir: setAttribute() to "RTL" followed by IDL get 
PASS meter.dir: setAttribute() to "auto" followed by getAttribute() 
PASS meter.dir: setAttribute() to "auto" followed by IDL get 
PASS meter.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS meter.dir: setAttribute() to "xauto" followed by IDL get 
PASS meter.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS meter.dir: setAttribute() to "auto\0" followed by IDL get 
PASS meter.dir: setAttribute() to "uto" followed by getAttribute() 
PASS meter.dir: setAttribute() to "uto" followed by IDL get 
PASS meter.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS meter.dir: setAttribute() to "AUTO" followed by IDL get 
PASS meter.dir: IDL set to "" should not throw 
PASS meter.dir: IDL set to "" followed by getAttribute() 
PASS meter.dir: IDL set to "" followed by IDL get 
PASS meter.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meter.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meter.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meter.dir: IDL set to undefined should not throw 
PASS meter.dir: IDL set to undefined followed by getAttribute() 
PASS meter.dir: IDL set to undefined followed by IDL get 
PASS meter.dir: IDL set to 7 should not throw 
PASS meter.dir: IDL set to 7 followed by getAttribute() 
PASS meter.dir: IDL set to 7 followed by IDL get 
PASS meter.dir: IDL set to 1.5 should not throw 
PASS meter.dir: IDL set to 1.5 followed by getAttribute() 
PASS meter.dir: IDL set to 1.5 followed by IDL get 
PASS meter.dir: IDL set to true should not throw 
PASS meter.dir: IDL set to true followed by getAttribute() 
PASS meter.dir: IDL set to true followed by IDL get 
PASS meter.dir: IDL set to false should not throw 
PASS meter.dir: IDL set to false followed by getAttribute() 
PASS meter.dir: IDL set to false followed by IDL get 
PASS meter.dir: IDL set to object "[object Object]" should not throw 
PASS meter.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS meter.dir: IDL set to object "[object Object]" followed by IDL get 
PASS meter.dir: IDL set to NaN should not throw 
PASS meter.dir: IDL set to NaN followed by getAttribute() 
PASS meter.dir: IDL set to NaN followed by IDL get 
PASS meter.dir: IDL set to Infinity should not throw 
PASS meter.dir: IDL set to Infinity followed by getAttribute() 
PASS meter.dir: IDL set to Infinity followed by IDL get 
PASS meter.dir: IDL set to -Infinity should not throw 
PASS meter.dir: IDL set to -Infinity followed by getAttribute() 
PASS meter.dir: IDL set to -Infinity followed by IDL get 
PASS meter.dir: IDL set to "\0" should not throw 
PASS meter.dir: IDL set to "\0" followed by getAttribute() 
PASS meter.dir: IDL set to "\0" followed by IDL get 
PASS meter.dir: IDL set to null should not throw 
PASS meter.dir: IDL set to null followed by IDL get 
PASS meter.dir: IDL set to object "test-toString" should not throw 
PASS meter.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS meter.dir: IDL set to object "test-toString" followed by IDL get 
PASS meter.dir: IDL set to object "test-valueOf" should not throw 
PASS meter.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS meter.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS meter.dir: IDL set to "ltr" should not throw 
PASS meter.dir: IDL set to "ltr" followed by getAttribute() 
PASS meter.dir: IDL set to "ltr" followed by IDL get 
PASS meter.dir: IDL set to "xltr" should not throw 
PASS meter.dir: IDL set to "xltr" followed by getAttribute() 
PASS meter.dir: IDL set to "xltr" followed by IDL get 
PASS meter.dir: IDL set to "ltr\0" should not throw 
PASS meter.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS meter.dir: IDL set to "ltr\0" followed by IDL get 
PASS meter.dir: IDL set to "tr" should not throw 
PASS meter.dir: IDL set to "tr" followed by getAttribute() 
PASS meter.dir: IDL set to "tr" followed by IDL get 
PASS meter.dir: IDL set to "LTR" should not throw 
PASS meter.dir: IDL set to "LTR" followed by getAttribute() 
PASS meter.dir: IDL set to "LTR" followed by IDL get 
PASS meter.dir: IDL set to "rtl" should not throw 
PASS meter.dir: IDL set to "rtl" followed by getAttribute() 
PASS meter.dir: IDL set to "rtl" followed by IDL get 
PASS meter.dir: IDL set to "xrtl" should not throw 
PASS meter.dir: IDL set to "xrtl" followed by getAttribute() 
PASS meter.dir: IDL set to "xrtl" followed by IDL get 
PASS meter.dir: IDL set to "rtl\0" should not throw 
PASS meter.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS meter.dir: IDL set to "rtl\0" followed by IDL get 
PASS meter.dir: IDL set to "tl" should not throw 
PASS meter.dir: IDL set to "tl" followed by getAttribute() 
PASS meter.dir: IDL set to "tl" followed by IDL get 
PASS meter.dir: IDL set to "RTL" should not throw 
PASS meter.dir: IDL set to "RTL" followed by getAttribute() 
PASS meter.dir: IDL set to "RTL" followed by IDL get 
PASS meter.dir: IDL set to "auto" should not throw 
PASS meter.dir: IDL set to "auto" followed by getAttribute() 
PASS meter.dir: IDL set to "auto" followed by IDL get 
PASS meter.dir: IDL set to "xauto" should not throw 
PASS meter.dir: IDL set to "xauto" followed by getAttribute() 
PASS meter.dir: IDL set to "xauto" followed by IDL get 
PASS meter.dir: IDL set to "auto\0" should not throw 
PASS meter.dir: IDL set to "auto\0" followed by getAttribute() 
PASS meter.dir: IDL set to "auto\0" followed by IDL get 
PASS meter.dir: IDL set to "uto" should not throw 
PASS meter.dir: IDL set to "uto" followed by getAttribute() 
PASS meter.dir: IDL set to "uto" followed by IDL get 
PASS meter.dir: IDL set to "AUTO" should not throw 
PASS meter.dir: IDL set to "AUTO" followed by getAttribute() 
PASS meter.dir: IDL set to "AUTO" followed by IDL get 
PASS meter.className (<meter class>): typeof IDL attribute 
PASS meter.className (<meter class>): IDL get with DOM attribute unset 
PASS meter.className (<meter class>): setAttribute() to "" followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to "" followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to undefined followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to undefined followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to 7 followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to 7 followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to 1.5 followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to 1.5 followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to true followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to true followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to false followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to false followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to NaN followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to NaN followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to Infinity followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to Infinity followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to -Infinity followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to -Infinity followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to "\0" followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to "\0" followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to null followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to null followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to object "test-toString" followed by IDL get 
PASS meter.className (<meter class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meter.className (<meter class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS meter.className (<meter class>): IDL set to "" should not throw 
PASS meter.className (<meter class>): IDL set to "" followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to "" followed by IDL get 
PASS meter.className (<meter class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meter.className (<meter class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meter.className (<meter class>): IDL set to undefined should not throw 
PASS meter.className (<meter class>): IDL set to undefined followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to undefined followed by IDL get 
PASS meter.className (<meter class>): IDL set to 7 should not throw 
PASS meter.className (<meter class>): IDL set to 7 followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to 7 followed by IDL get 
PASS meter.className (<meter class>): IDL set to 1.5 should not throw 
PASS meter.className (<meter class>): IDL set to 1.5 followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to 1.5 followed by IDL get 
PASS meter.className (<meter class>): IDL set to true should not throw 
PASS meter.className (<meter class>): IDL set to true followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to true followed by IDL get 
PASS meter.className (<meter class>): IDL set to false should not throw 
PASS meter.className (<meter class>): IDL set to false followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to false followed by IDL get 
PASS meter.className (<meter class>): IDL set to object "[object Object]" should not throw 
PASS meter.className (<meter class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to object "[object Object]" followed by IDL get 
PASS meter.className (<meter class>): IDL set to NaN should not throw 
PASS meter.className (<meter class>): IDL set to NaN followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to NaN followed by IDL get 
PASS meter.className (<meter class>): IDL set to Infinity should not throw 
PASS meter.className (<meter class>): IDL set to Infinity followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to Infinity followed by IDL get 
PASS meter.className (<meter class>): IDL set to -Infinity should not throw 
PASS meter.className (<meter class>): IDL set to -Infinity followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to -Infinity followed by IDL get 
PASS meter.className (<meter class>): IDL set to "\0" should not throw 
PASS meter.className (<meter class>): IDL set to "\0" followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to "\0" followed by IDL get 
PASS meter.className (<meter class>): IDL set to null should not throw 
PASS meter.className (<meter class>): IDL set to null followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to null followed by IDL get 
PASS meter.className (<meter class>): IDL set to object "test-toString" should not throw 
PASS meter.className (<meter class>): IDL set to object "test-toString" followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to object "test-toString" followed by IDL get 
PASS meter.className (<meter class>): IDL set to object "test-valueOf" should not throw 
PASS meter.className (<meter class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS meter.className (<meter class>): IDL set to object "test-valueOf" followed by IDL get 
PASS meter.hidden: typeof IDL attribute 
PASS meter.hidden: IDL get with DOM attribute unset 
PASS meter.hidden: setAttribute() to "" followed by getAttribute() 
PASS meter.hidden: setAttribute() to "" followed by IDL get 
PASS meter.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS meter.hidden: setAttribute() to " foo " followed by IDL get 
PASS meter.hidden: setAttribute() to undefined followed by getAttribute() 
PASS meter.hidden: setAttribute() to undefined followed by IDL get 
PASS meter.hidden: setAttribute() to null followed by getAttribute() 
PASS meter.hidden: setAttribute() to null followed by IDL get 
PASS meter.hidden: setAttribute() to 7 followed by getAttribute() 
PASS meter.hidden: setAttribute() to 7 followed by IDL get 
PASS meter.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS meter.hidden: setAttribute() to 1.5 followed by IDL get 
PASS meter.hidden: setAttribute() to true followed by getAttribute() 
PASS meter.hidden: setAttribute() to true followed by IDL get 
PASS meter.hidden: setAttribute() to false followed by getAttribute() 
PASS meter.hidden: setAttribute() to false followed by IDL get 
PASS meter.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meter.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS meter.hidden: setAttribute() to NaN followed by getAttribute() 
PASS meter.hidden: setAttribute() to NaN followed by IDL get 
PASS meter.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS meter.hidden: setAttribute() to Infinity followed by IDL get 
PASS meter.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS meter.hidden: setAttribute() to -Infinity followed by IDL get 
PASS meter.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS meter.hidden: setAttribute() to "\0" followed by IDL get 
PASS meter.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meter.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS meter.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meter.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meter.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS meter.hidden: setAttribute() to "hidden" followed by IDL get 
PASS meter.hidden: IDL set to "" should not throw 
PASS meter.hidden: IDL set to "" followed by hasAttribute() 
PASS meter.hidden: IDL set to "" followed by IDL get 
PASS meter.hidden: IDL set to " foo " should not throw 
PASS meter.hidden: IDL set to " foo " followed by hasAttribute() 
PASS meter.hidden: IDL set to " foo " followed by IDL get 
PASS meter.hidden: IDL set to undefined should not throw 
PASS meter.hidden: IDL set to undefined followed by hasAttribute() 
PASS meter.hidden: IDL set to undefined followed by IDL get 
PASS meter.hidden: IDL set to null should not throw 
PASS meter.hidden: IDL set to null followed by hasAttribute() 
PASS meter.hidden: IDL set to null followed by IDL get 
PASS meter.hidden: IDL set to 7 should not throw 
PASS meter.hidden: IDL set to 7 followed by hasAttribute() 
PASS meter.hidden: IDL set to 7 followed by IDL get 
PASS meter.hidden: IDL set to 1.5 should not throw 
PASS meter.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS meter.hidden: IDL set to 1.5 followed by IDL get 
PASS meter.hidden: IDL set to true should not throw 
PASS meter.hidden: IDL set to true followed by hasAttribute() 
PASS meter.hidden: IDL set to true followed by IDL get 
PASS meter.hidden: IDL set to false should not throw 
PASS meter.hidden: IDL set to false followed by hasAttribute() 
PASS meter.hidden: IDL set to false followed by IDL get 
PASS meter.hidden: IDL set to object "[object Object]" should not throw 
PASS meter.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS meter.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS meter.hidden: IDL set to NaN should not throw 
PASS meter.hidden: IDL set to NaN followed by hasAttribute() 
PASS meter.hidden: IDL set to NaN followed by IDL get 
PASS meter.hidden: IDL set to Infinity should not throw 
PASS meter.hidden: IDL set to Infinity followed by hasAttribute() 
PASS meter.hidden: IDL set to Infinity followed by IDL get 
PASS meter.hidden: IDL set to -Infinity should not throw 
PASS meter.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS meter.hidden: IDL set to -Infinity followed by IDL get 
PASS meter.hidden: IDL set to "\0" should not throw 
PASS meter.hidden: IDL set to "\0" followed by hasAttribute() 
PASS meter.hidden: IDL set to "\0" followed by IDL get 
PASS meter.hidden: IDL set to object "test-toString" should not throw 
PASS meter.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS meter.hidden: IDL set to object "test-toString" followed by IDL get 
PASS meter.hidden: IDL set to object "test-valueOf" should not throw 
PASS meter.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS meter.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS meter.accessKey: typeof IDL attribute 
PASS meter.accessKey: IDL get with DOM attribute unset 
PASS meter.accessKey: setAttribute() to "" followed by getAttribute() 
PASS meter.accessKey: setAttribute() to "" followed by IDL get 
PASS meter.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meter.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meter.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS meter.accessKey: setAttribute() to undefined followed by IDL get 
PASS meter.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS meter.accessKey: setAttribute() to 7 followed by IDL get 
PASS meter.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS meter.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS meter.accessKey: setAttribute() to true followed by getAttribute() 
PASS meter.accessKey: setAttribute() to true followed by IDL get 
PASS meter.accessKey: setAttribute() to false followed by getAttribute() 
PASS meter.accessKey: setAttribute() to false followed by IDL get 
PASS meter.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meter.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS meter.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS meter.accessKey: setAttribute() to NaN followed by IDL get 
PASS meter.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS meter.accessKey: setAttribute() to Infinity followed by IDL get 
PASS meter.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS meter.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS meter.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS meter.accessKey: setAttribute() to "\0" followed by IDL get 
PASS meter.accessKey: setAttribute() to null followed by getAttribute() 
PASS meter.accessKey: setAttribute() to null followed by IDL get 
PASS meter.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meter.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS meter.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meter.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meter.accessKey: IDL set to "" should not throw 
PASS meter.accessKey: IDL set to "" followed by getAttribute() 
PASS meter.accessKey: IDL set to "" followed by IDL get 
PASS meter.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meter.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meter.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meter.accessKey: IDL set to undefined should not throw 
PASS meter.accessKey: IDL set to undefined followed by getAttribute() 
PASS meter.accessKey: IDL set to undefined followed by IDL get 
PASS meter.accessKey: IDL set to 7 should not throw 
PASS meter.accessKey: IDL set to 7 followed by getAttribute() 
PASS meter.accessKey: IDL set to 7 followed by IDL get 
PASS meter.accessKey: IDL set to 1.5 should not throw 
PASS meter.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS meter.accessKey: IDL set to 1.5 followed by IDL get 
PASS meter.accessKey: IDL set to true should not throw 
PASS meter.accessKey: IDL set to true followed by getAttribute() 
PASS meter.accessKey: IDL set to true followed by IDL get 
PASS meter.accessKey: IDL set to false should not throw 
PASS meter.accessKey: IDL set to false followed by getAttribute() 
PASS meter.accessKey: IDL set to false followed by IDL get 
PASS meter.accessKey: IDL set to object "[object Object]" should not throw 
PASS meter.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS meter.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS meter.accessKey: IDL set to NaN should not throw 
PASS meter.accessKey: IDL set to NaN followed by getAttribute() 
PASS meter.accessKey: IDL set to NaN followed by IDL get 
PASS meter.accessKey: IDL set to Infinity should not throw 
PASS meter.accessKey: IDL set to Infinity followed by getAttribute() 
PASS meter.accessKey: IDL set to Infinity followed by IDL get 
PASS meter.accessKey: IDL set to -Infinity should not throw 
PASS meter.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS meter.accessKey: IDL set to -Infinity followed by IDL get 
PASS meter.accessKey: IDL set to "\0" should not throw 
PASS meter.accessKey: IDL set to "\0" followed by getAttribute() 
PASS meter.accessKey: IDL set to "\0" followed by IDL get 
PASS meter.accessKey: IDL set to null should not throw 
PASS meter.accessKey: IDL set to null followed by getAttribute() 
PASS meter.accessKey: IDL set to null followed by IDL get 
PASS meter.accessKey: IDL set to object "test-toString" should not throw 
PASS meter.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS meter.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS meter.accessKey: IDL set to object "test-valueOf" should not throw 
PASS meter.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS meter.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS meter.tabIndex: typeof IDL attribute 
PASS meter.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to -36 followed by IDL get 
PASS meter.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to -1 followed by IDL get 
PASS meter.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to 0 followed by IDL get 
PASS meter.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to 1 followed by IDL get 
PASS meter.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL meter.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS meter.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL meter.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
PASS meter.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS meter.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS meter.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to "0" followed by IDL get 
PASS meter.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to "1" followed by IDL get 
PASS meter.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS meter.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS meter.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS meter.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS meter.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS meter.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS meter.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS meter.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS meter.tabIndex: IDL set to -36 should not throw 
PASS meter.tabIndex: IDL set to -36 followed by getAttribute() 
PASS meter.tabIndex: IDL set to -36 followed by IDL get 
PASS meter.tabIndex: IDL set to -1 should not throw 
PASS meter.tabIndex: IDL set to -1 followed by getAttribute() 
PASS meter.tabIndex: IDL set to -1 followed by IDL get 
PASS meter.tabIndex: IDL set to 0 should not throw 
PASS meter.tabIndex: IDL set to 0 followed by getAttribute() 
PASS meter.tabIndex: IDL set to 0 followed by IDL get 
PASS meter.tabIndex: IDL set to 1 should not throw 
PASS meter.tabIndex: IDL set to 1 followed by getAttribute() 
PASS meter.tabIndex: IDL set to 1 followed by IDL get 
PASS meter.tabIndex: IDL set to 2147483647 should not throw 
PASS meter.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL meter.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS meter.tabIndex: IDL set to -2147483648 should not throw 
PASS meter.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL meter.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got 32767
FAIL meter.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL meter.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS meter.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to null followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to true followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to false followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL meter.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meter.itemScope: IDL set to "" should not throw 
FAIL meter.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL meter.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS meter.itemScope: IDL set to " foo " should not throw 
PASS meter.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL meter.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS meter.itemScope: IDL set to undefined should not throw 
FAIL meter.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL meter.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS meter.itemScope: IDL set to null should not throw 
FAIL meter.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL meter.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS meter.itemScope: IDL set to 7 should not throw 
PASS meter.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL meter.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS meter.itemScope: IDL set to 1.5 should not throw 
PASS meter.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL meter.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS meter.itemScope: IDL set to true should not throw 
PASS meter.itemScope: IDL set to true followed by hasAttribute() 
PASS meter.itemScope: IDL set to true followed by IDL get 
PASS meter.itemScope: IDL set to false should not throw 
FAIL meter.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS meter.itemScope: IDL set to false followed by IDL get 
PASS meter.itemScope: IDL set to object "[object Object]" should not throw 
PASS meter.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL meter.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS meter.itemScope: IDL set to NaN should not throw 
FAIL meter.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL meter.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS meter.itemScope: IDL set to Infinity should not throw 
PASS meter.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL meter.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS meter.itemScope: IDL set to -Infinity should not throw 
PASS meter.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL meter.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS meter.itemScope: IDL set to "\0" should not throw 
PASS meter.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL meter.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS meter.itemScope: IDL set to object "test-toString" should not throw 
PASS meter.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL meter.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS meter.itemScope: IDL set to object "test-valueOf" should not throw 
PASS meter.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL meter.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL meter.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL meter.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS meter.itemId: setAttribute() to "" followed by getAttribute() 
FAIL meter.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS meter.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL meter.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS meter.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL meter.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS meter.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL meter.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS meter.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL meter.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS meter.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL meter.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS meter.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL meter.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS meter.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL meter.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS meter.itemId: setAttribute() to true followed by getAttribute() 
FAIL meter.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS meter.itemId: setAttribute() to false followed by getAttribute() 
FAIL meter.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS meter.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL meter.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS meter.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL meter.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS meter.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL meter.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS meter.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL meter.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS meter.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL meter.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS meter.itemId: setAttribute() to null followed by getAttribute() 
FAIL meter.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS meter.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL meter.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS meter.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL meter.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS meter.itemId: IDL set to "" should not throw 
FAIL meter.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL meter.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS meter.itemId: IDL set to " foo " should not throw 
FAIL meter.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL meter.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS meter.itemId: IDL set to "http://site.example/" should not throw 
FAIL meter.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS meter.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS meter.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL meter.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL meter.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS meter.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL meter.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL meter.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS meter.itemId: IDL set to undefined should not throw 
FAIL meter.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL meter.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS meter.itemId: IDL set to 7 should not throw 
FAIL meter.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL meter.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS meter.itemId: IDL set to 1.5 should not throw 
FAIL meter.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL meter.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS meter.itemId: IDL set to true should not throw 
FAIL meter.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL meter.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS meter.itemId: IDL set to false should not throw 
FAIL meter.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL meter.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS meter.itemId: IDL set to object "[object Object]" should not throw 
FAIL meter.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL meter.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS meter.itemId: IDL set to NaN should not throw 
FAIL meter.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL meter.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS meter.itemId: IDL set to Infinity should not throw 
FAIL meter.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL meter.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS meter.itemId: IDL set to -Infinity should not throw 
FAIL meter.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL meter.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS meter.itemId: IDL set to "\0" should not throw 
FAIL meter.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL meter.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS meter.itemId: IDL set to null should not throw 
FAIL meter.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL meter.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS meter.itemId: IDL set to object "test-toString" should not throw 
FAIL meter.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL meter.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS meter.itemId: IDL set to object "test-valueOf" should not throw 
PASS meter.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL meter.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL meta.itemValue (<meta content>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL meta.itemValue (<meta content>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to "" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to undefined followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to 7 followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to 1.5 followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to true followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to false followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to NaN followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to Infinity followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to -Infinity followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to "\0" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to null followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS meta.itemValue (<meta content>): IDL set to "" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to "" followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to undefined should not throw 
FAIL meta.itemValue (<meta content>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS meta.itemValue (<meta content>): IDL set to 7 should not throw 
FAIL meta.itemValue (<meta content>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS meta.itemValue (<meta content>): IDL set to 1.5 should not throw 
FAIL meta.itemValue (<meta content>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS meta.itemValue (<meta content>): IDL set to true should not throw 
FAIL meta.itemValue (<meta content>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS meta.itemValue (<meta content>): IDL set to false should not throw 
FAIL meta.itemValue (<meta content>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS meta.itemValue (<meta content>): IDL set to object "[object Object]" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS meta.itemValue (<meta content>): IDL set to NaN should not throw 
FAIL meta.itemValue (<meta content>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS meta.itemValue (<meta content>): IDL set to Infinity should not throw 
FAIL meta.itemValue (<meta content>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS meta.itemValue (<meta content>): IDL set to -Infinity should not throw 
FAIL meta.itemValue (<meta content>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS meta.itemValue (<meta content>): IDL set to "\0" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to "\0" followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to null should not throw 
FAIL meta.itemValue (<meta content>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS meta.itemValue (<meta content>): IDL set to object "test-toString" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS meta.itemValue (<meta content>): IDL set to object "test-valueOf" should not throw 
PASS meta.itemValue (<meta content>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
FAIL audio.itemValue (<audio src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL audio.itemValue (<audio src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to " foo " followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to undefined followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to 7 followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to true followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to false followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to NaN followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to Infinity followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "\0" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to null followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS audio.itemValue (<audio src>): IDL set to "" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS audio.itemValue (<audio src>): IDL set to " foo " should not throw 
FAIL audio.itemValue (<audio src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS audio.itemValue (<audio src>): IDL set to "http://site.example/" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS audio.itemValue (<audio src>): IDL set to "http://site.example/" followed by IDL get 
PASS audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS audio.itemValue (<audio src>): IDL set to undefined should not throw 
FAIL audio.itemValue (<audio src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS audio.itemValue (<audio src>): IDL set to 7 should not throw 
FAIL audio.itemValue (<audio src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS audio.itemValue (<audio src>): IDL set to 1.5 should not throw 
FAIL audio.itemValue (<audio src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS audio.itemValue (<audio src>): IDL set to true should not throw 
FAIL audio.itemValue (<audio src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS audio.itemValue (<audio src>): IDL set to false should not throw 
FAIL audio.itemValue (<audio src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS audio.itemValue (<audio src>): IDL set to object "[object Object]" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS audio.itemValue (<audio src>): IDL set to NaN should not throw 
FAIL audio.itemValue (<audio src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS audio.itemValue (<audio src>): IDL set to Infinity should not throw 
FAIL audio.itemValue (<audio src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS audio.itemValue (<audio src>): IDL set to -Infinity should not throw 
FAIL audio.itemValue (<audio src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS audio.itemValue (<audio src>): IDL set to "\0" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS audio.itemValue (<audio src>): IDL set to null should not throw 
FAIL audio.itemValue (<audio src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS audio.itemValue (<audio src>): IDL set to object "test-toString" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS audio.itemValue (<audio src>): IDL set to object "test-valueOf" should not throw 
PASS audio.itemValue (<audio src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL embed.itemValue (<embed src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL embed.itemValue (<embed src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to " foo " followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to undefined followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to 7 followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to true followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to false followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to NaN followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to Infinity followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "\0" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to null followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS embed.itemValue (<embed src>): IDL set to "" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS embed.itemValue (<embed src>): IDL set to " foo " should not throw 
FAIL embed.itemValue (<embed src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS embed.itemValue (<embed src>): IDL set to "http://site.example/" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS embed.itemValue (<embed src>): IDL set to "http://site.example/" followed by IDL get 
PASS embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS embed.itemValue (<embed src>): IDL set to undefined should not throw 
FAIL embed.itemValue (<embed src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS embed.itemValue (<embed src>): IDL set to 7 should not throw 
FAIL embed.itemValue (<embed src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS embed.itemValue (<embed src>): IDL set to 1.5 should not throw 
FAIL embed.itemValue (<embed src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS embed.itemValue (<embed src>): IDL set to true should not throw 
FAIL embed.itemValue (<embed src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS embed.itemValue (<embed src>): IDL set to false should not throw 
FAIL embed.itemValue (<embed src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS embed.itemValue (<embed src>): IDL set to object "[object Object]" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS embed.itemValue (<embed src>): IDL set to NaN should not throw 
FAIL embed.itemValue (<embed src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS embed.itemValue (<embed src>): IDL set to Infinity should not throw 
FAIL embed.itemValue (<embed src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS embed.itemValue (<embed src>): IDL set to -Infinity should not throw 
FAIL embed.itemValue (<embed src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS embed.itemValue (<embed src>): IDL set to "\0" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS embed.itemValue (<embed src>): IDL set to null should not throw 
FAIL embed.itemValue (<embed src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS embed.itemValue (<embed src>): IDL set to object "test-toString" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS embed.itemValue (<embed src>): IDL set to object "test-valueOf" should not throw 
PASS embed.itemValue (<embed src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL iframe.itemValue (<iframe src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL iframe.itemValue (<iframe src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to " foo " followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to undefined followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to 7 followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to true followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to false followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to NaN followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to Infinity followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "\0" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to null followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): IDL set to "" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS iframe.itemValue (<iframe src>): IDL set to " foo " should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS iframe.itemValue (<iframe src>): IDL set to "http://site.example/" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS iframe.itemValue (<iframe src>): IDL set to "http://site.example/" followed by IDL get 
PASS iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS iframe.itemValue (<iframe src>): IDL set to undefined should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): IDL set to 7 should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS iframe.itemValue (<iframe src>): IDL set to 1.5 should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS iframe.itemValue (<iframe src>): IDL set to true should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS iframe.itemValue (<iframe src>): IDL set to false should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS iframe.itemValue (<iframe src>): IDL set to object "[object Object]" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS iframe.itemValue (<iframe src>): IDL set to NaN should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS iframe.itemValue (<iframe src>): IDL set to Infinity should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS iframe.itemValue (<iframe src>): IDL set to -Infinity should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS iframe.itemValue (<iframe src>): IDL set to "\0" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS iframe.itemValue (<iframe src>): IDL set to null should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS iframe.itemValue (<iframe src>): IDL set to object "test-toString" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" should not throw 
PASS iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL img.itemValue (<img src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL img.itemValue (<img src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to " foo " followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to undefined followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to 7 followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to true followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to false followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to NaN followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to Infinity followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "\0" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to null followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS img.itemValue (<img src>): IDL set to "" should not throw 
FAIL img.itemValue (<img src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS img.itemValue (<img src>): IDL set to " foo " should not throw 
FAIL img.itemValue (<img src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS img.itemValue (<img src>): IDL set to "http://site.example/" should not throw 
FAIL img.itemValue (<img src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS img.itemValue (<img src>): IDL set to "http://site.example/" followed by IDL get 
PASS img.itemValue (<img src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL img.itemValue (<img src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS img.itemValue (<img src>): IDL set to undefined should not throw 
FAIL img.itemValue (<img src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS img.itemValue (<img src>): IDL set to 7 should not throw 
FAIL img.itemValue (<img src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS img.itemValue (<img src>): IDL set to 1.5 should not throw 
FAIL img.itemValue (<img src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS img.itemValue (<img src>): IDL set to true should not throw 
FAIL img.itemValue (<img src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS img.itemValue (<img src>): IDL set to false should not throw 
FAIL img.itemValue (<img src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS img.itemValue (<img src>): IDL set to object "[object Object]" should not throw 
FAIL img.itemValue (<img src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS img.itemValue (<img src>): IDL set to NaN should not throw 
FAIL img.itemValue (<img src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS img.itemValue (<img src>): IDL set to Infinity should not throw 
FAIL img.itemValue (<img src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS img.itemValue (<img src>): IDL set to -Infinity should not throw 
FAIL img.itemValue (<img src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS img.itemValue (<img src>): IDL set to "\0" should not throw 
FAIL img.itemValue (<img src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS img.itemValue (<img src>): IDL set to null should not throw 
FAIL img.itemValue (<img src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS img.itemValue (<img src>): IDL set to object "test-toString" should not throw 
FAIL img.itemValue (<img src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS img.itemValue (<img src>): IDL set to object "test-valueOf" should not throw 
PASS img.itemValue (<img src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL img.itemValue (<img src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL source.itemValue (<source src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL source.itemValue (<source src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to " foo " followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to undefined followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to 7 followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to true followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to false followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to NaN followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to Infinity followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "\0" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to null followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS source.itemValue (<source src>): IDL set to "" should not throw 
FAIL source.itemValue (<source src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS source.itemValue (<source src>): IDL set to " foo " should not throw 
FAIL source.itemValue (<source src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS source.itemValue (<source src>): IDL set to "http://site.example/" should not throw 
FAIL source.itemValue (<source src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS source.itemValue (<source src>): IDL set to "http://site.example/" followed by IDL get 
PASS source.itemValue (<source src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL source.itemValue (<source src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS source.itemValue (<source src>): IDL set to undefined should not throw 
FAIL source.itemValue (<source src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS source.itemValue (<source src>): IDL set to 7 should not throw 
FAIL source.itemValue (<source src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS source.itemValue (<source src>): IDL set to 1.5 should not throw 
FAIL source.itemValue (<source src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS source.itemValue (<source src>): IDL set to true should not throw 
FAIL source.itemValue (<source src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS source.itemValue (<source src>): IDL set to false should not throw 
FAIL source.itemValue (<source src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS source.itemValue (<source src>): IDL set to object "[object Object]" should not throw 
FAIL source.itemValue (<source src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS source.itemValue (<source src>): IDL set to NaN should not throw 
FAIL source.itemValue (<source src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS source.itemValue (<source src>): IDL set to Infinity should not throw 
FAIL source.itemValue (<source src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS source.itemValue (<source src>): IDL set to -Infinity should not throw 
FAIL source.itemValue (<source src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS source.itemValue (<source src>): IDL set to "\0" should not throw 
FAIL source.itemValue (<source src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS source.itemValue (<source src>): IDL set to null should not throw 
FAIL source.itemValue (<source src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS source.itemValue (<source src>): IDL set to object "test-toString" should not throw 
FAIL source.itemValue (<source src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS source.itemValue (<source src>): IDL set to object "test-valueOf" should not throw 
PASS source.itemValue (<source src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL source.itemValue (<source src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL track.itemValue (<track src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL track.itemValue (<track src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to " foo " followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to undefined followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to 7 followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to true followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to false followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to NaN followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to Infinity followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "\0" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to null followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS track.itemValue (<track src>): IDL set to "" should not throw 
FAIL track.itemValue (<track src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS track.itemValue (<track src>): IDL set to " foo " should not throw 
FAIL track.itemValue (<track src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS track.itemValue (<track src>): IDL set to "http://site.example/" should not throw 
FAIL track.itemValue (<track src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS track.itemValue (<track src>): IDL set to "http://site.example/" followed by IDL get 
PASS track.itemValue (<track src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL track.itemValue (<track src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS track.itemValue (<track src>): IDL set to undefined should not throw 
FAIL track.itemValue (<track src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS track.itemValue (<track src>): IDL set to 7 should not throw 
FAIL track.itemValue (<track src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS track.itemValue (<track src>): IDL set to 1.5 should not throw 
FAIL track.itemValue (<track src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS track.itemValue (<track src>): IDL set to true should not throw 
FAIL track.itemValue (<track src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS track.itemValue (<track src>): IDL set to false should not throw 
FAIL track.itemValue (<track src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS track.itemValue (<track src>): IDL set to object "[object Object]" should not throw 
FAIL track.itemValue (<track src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS track.itemValue (<track src>): IDL set to NaN should not throw 
FAIL track.itemValue (<track src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS track.itemValue (<track src>): IDL set to Infinity should not throw 
FAIL track.itemValue (<track src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS track.itemValue (<track src>): IDL set to -Infinity should not throw 
FAIL track.itemValue (<track src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS track.itemValue (<track src>): IDL set to "\0" should not throw 
FAIL track.itemValue (<track src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS track.itemValue (<track src>): IDL set to null should not throw 
FAIL track.itemValue (<track src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS track.itemValue (<track src>): IDL set to object "test-toString" should not throw 
FAIL track.itemValue (<track src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS track.itemValue (<track src>): IDL set to object "test-valueOf" should not throw 
PASS track.itemValue (<track src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL track.itemValue (<track src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL video.itemValue (<video src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL video.itemValue (<video src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to " foo " followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to undefined followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to 7 followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to true followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to false followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to NaN followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to Infinity followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "\0" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to null followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS video.itemValue (<video src>): IDL set to "" should not throw 
FAIL video.itemValue (<video src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS video.itemValue (<video src>): IDL set to " foo " should not throw 
FAIL video.itemValue (<video src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS video.itemValue (<video src>): IDL set to "http://site.example/" should not throw 
FAIL video.itemValue (<video src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS video.itemValue (<video src>): IDL set to "http://site.example/" followed by IDL get 
PASS video.itemValue (<video src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL video.itemValue (<video src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS video.itemValue (<video src>): IDL set to undefined should not throw 
FAIL video.itemValue (<video src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS video.itemValue (<video src>): IDL set to 7 should not throw 
FAIL video.itemValue (<video src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS video.itemValue (<video src>): IDL set to 1.5 should not throw 
FAIL video.itemValue (<video src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS video.itemValue (<video src>): IDL set to true should not throw 
FAIL video.itemValue (<video src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS video.itemValue (<video src>): IDL set to false should not throw 
FAIL video.itemValue (<video src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS video.itemValue (<video src>): IDL set to object "[object Object]" should not throw 
FAIL video.itemValue (<video src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS video.itemValue (<video src>): IDL set to NaN should not throw 
FAIL video.itemValue (<video src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS video.itemValue (<video src>): IDL set to Infinity should not throw 
FAIL video.itemValue (<video src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS video.itemValue (<video src>): IDL set to -Infinity should not throw 
FAIL video.itemValue (<video src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS video.itemValue (<video src>): IDL set to "\0" should not throw 
FAIL video.itemValue (<video src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS video.itemValue (<video src>): IDL set to null should not throw 
FAIL video.itemValue (<video src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS video.itemValue (<video src>): IDL set to object "test-toString" should not throw 
FAIL video.itemValue (<video src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS video.itemValue (<video src>): IDL set to object "test-valueOf" should not throw 
PASS video.itemValue (<video src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL video.itemValue (<video src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL a.itemValue (<a href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL a.itemValue (<a href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to " foo " followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to undefined followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to 7 followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to true followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to false followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to NaN followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to Infinity followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "\0" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to null followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS a.itemValue (<a href>): IDL set to "" should not throw 
FAIL a.itemValue (<a href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS a.itemValue (<a href>): IDL set to " foo " should not throw 
FAIL a.itemValue (<a href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS a.itemValue (<a href>): IDL set to "http://site.example/" should not throw 
FAIL a.itemValue (<a href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS a.itemValue (<a href>): IDL set to "http://site.example/" followed by IDL get 
PASS a.itemValue (<a href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL a.itemValue (<a href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS a.itemValue (<a href>): IDL set to undefined should not throw 
FAIL a.itemValue (<a href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS a.itemValue (<a href>): IDL set to 7 should not throw 
FAIL a.itemValue (<a href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS a.itemValue (<a href>): IDL set to 1.5 should not throw 
FAIL a.itemValue (<a href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS a.itemValue (<a href>): IDL set to true should not throw 
FAIL a.itemValue (<a href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS a.itemValue (<a href>): IDL set to false should not throw 
FAIL a.itemValue (<a href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS a.itemValue (<a href>): IDL set to object "[object Object]" should not throw 
FAIL a.itemValue (<a href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS a.itemValue (<a href>): IDL set to NaN should not throw 
FAIL a.itemValue (<a href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS a.itemValue (<a href>): IDL set to Infinity should not throw 
FAIL a.itemValue (<a href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS a.itemValue (<a href>): IDL set to -Infinity should not throw 
FAIL a.itemValue (<a href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS a.itemValue (<a href>): IDL set to "\0" should not throw 
FAIL a.itemValue (<a href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS a.itemValue (<a href>): IDL set to null should not throw 
FAIL a.itemValue (<a href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS a.itemValue (<a href>): IDL set to object "test-toString" should not throw 
FAIL a.itemValue (<a href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS a.itemValue (<a href>): IDL set to object "test-valueOf" should not throw 
PASS a.itemValue (<a href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL a.itemValue (<a href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL area.itemValue (<area href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL area.itemValue (<area href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to " foo " followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to undefined followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to 7 followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to true followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to false followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to NaN followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to Infinity followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "\0" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to null followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS area.itemValue (<area href>): IDL set to "" should not throw 
FAIL area.itemValue (<area href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS area.itemValue (<area href>): IDL set to " foo " should not throw 
FAIL area.itemValue (<area href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS area.itemValue (<area href>): IDL set to "http://site.example/" should not throw 
FAIL area.itemValue (<area href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS area.itemValue (<area href>): IDL set to "http://site.example/" followed by IDL get 
PASS area.itemValue (<area href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL area.itemValue (<area href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS area.itemValue (<area href>): IDL set to undefined should not throw 
FAIL area.itemValue (<area href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS area.itemValue (<area href>): IDL set to 7 should not throw 
FAIL area.itemValue (<area href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS area.itemValue (<area href>): IDL set to 1.5 should not throw 
FAIL area.itemValue (<area href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS area.itemValue (<area href>): IDL set to true should not throw 
FAIL area.itemValue (<area href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS area.itemValue (<area href>): IDL set to false should not throw 
FAIL area.itemValue (<area href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS area.itemValue (<area href>): IDL set to object "[object Object]" should not throw 
FAIL area.itemValue (<area href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS area.itemValue (<area href>): IDL set to NaN should not throw 
FAIL area.itemValue (<area href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS area.itemValue (<area href>): IDL set to Infinity should not throw 
FAIL area.itemValue (<area href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS area.itemValue (<area href>): IDL set to -Infinity should not throw 
FAIL area.itemValue (<area href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS area.itemValue (<area href>): IDL set to "\0" should not throw 
FAIL area.itemValue (<area href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS area.itemValue (<area href>): IDL set to null should not throw 
FAIL area.itemValue (<area href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS area.itemValue (<area href>): IDL set to object "test-toString" should not throw 
FAIL area.itemValue (<area href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS area.itemValue (<area href>): IDL set to object "test-valueOf" should not throw 
PASS area.itemValue (<area href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL area.itemValue (<area href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL link.itemValue (<link href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL link.itemValue (<link href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to " foo " followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to undefined followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to 7 followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to true followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to false followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to NaN followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to Infinity followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "\0" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to null followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS link.itemValue (<link href>): IDL set to "" should not throw 
FAIL link.itemValue (<link href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS link.itemValue (<link href>): IDL set to " foo " should not throw 
FAIL link.itemValue (<link href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS link.itemValue (<link href>): IDL set to "http://site.example/" should not throw 
FAIL link.itemValue (<link href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS link.itemValue (<link href>): IDL set to "http://site.example/" followed by IDL get 
PASS link.itemValue (<link href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL link.itemValue (<link href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS link.itemValue (<link href>): IDL set to undefined should not throw 
FAIL link.itemValue (<link href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS link.itemValue (<link href>): IDL set to 7 should not throw 
FAIL link.itemValue (<link href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS link.itemValue (<link href>): IDL set to 1.5 should not throw 
FAIL link.itemValue (<link href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS link.itemValue (<link href>): IDL set to true should not throw 
FAIL link.itemValue (<link href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS link.itemValue (<link href>): IDL set to false should not throw 
FAIL link.itemValue (<link href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS link.itemValue (<link href>): IDL set to object "[object Object]" should not throw 
FAIL link.itemValue (<link href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS link.itemValue (<link href>): IDL set to NaN should not throw 
FAIL link.itemValue (<link href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS link.itemValue (<link href>): IDL set to Infinity should not throw 
FAIL link.itemValue (<link href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS link.itemValue (<link href>): IDL set to -Infinity should not throw 
FAIL link.itemValue (<link href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS link.itemValue (<link href>): IDL set to "\0" should not throw 
FAIL link.itemValue (<link href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS link.itemValue (<link href>): IDL set to null should not throw 
FAIL link.itemValue (<link href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS link.itemValue (<link href>): IDL set to object "test-toString" should not throw 
FAIL link.itemValue (<link href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS link.itemValue (<link href>): IDL set to object "test-valueOf" should not throw 
PASS link.itemValue (<link href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL link.itemValue (<link href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL object.itemValue (<object data>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL object.itemValue (<object data>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to " foo " followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to undefined followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to 7 followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to 1.5 followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to true followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to false followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to NaN followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to Infinity followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to -Infinity followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "\0" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-forms.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to null followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS object.itemValue (<object data>): IDL set to "" should not throw 
FAIL object.itemValue (<object data>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got ""
PASS object.itemValue (<object data>): IDL set to " foo " should not throw 
FAIL object.itemValue (<object data>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS object.itemValue (<object data>): IDL set to "http://site.example/" should not throw 
FAIL object.itemValue (<object data>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS object.itemValue (<object data>): IDL set to "http://site.example/" followed by IDL get 
PASS object.itemValue (<object data>): IDL set to "//site.example/path???@#l" should not throw 
FAIL object.itemValue (<object data>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS object.itemValue (<object data>): IDL set to undefined should not throw 
FAIL object.itemValue (<object data>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS object.itemValue (<object data>): IDL set to 7 should not throw 
FAIL object.itemValue (<object data>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS object.itemValue (<object data>): IDL set to 1.5 should not throw 
FAIL object.itemValue (<object data>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS object.itemValue (<object data>): IDL set to true should not throw 
FAIL object.itemValue (<object data>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS object.itemValue (<object data>): IDL set to false should not throw 
FAIL object.itemValue (<object data>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS object.itemValue (<object data>): IDL set to object "[object Object]" should not throw 
FAIL object.itemValue (<object data>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS object.itemValue (<object data>): IDL set to NaN should not throw 
FAIL object.itemValue (<object data>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS object.itemValue (<object data>): IDL set to Infinity should not throw 
FAIL object.itemValue (<object data>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS object.itemValue (<object data>): IDL set to -Infinity should not throw 
FAIL object.itemValue (<object data>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS object.itemValue (<object data>): IDL set to "\0" should not throw 
FAIL object.itemValue (<object data>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-forms.html" but got "\0"
PASS object.itemValue (<object data>): IDL set to null should not throw 
FAIL object.itemValue (<object data>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS object.itemValue (<object data>): IDL set to object "test-toString" should not throw 
FAIL object.itemValue (<object data>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS object.itemValue (<object data>): IDL set to object "test-valueOf" should not throw 
PASS object.itemValue (<object data>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL object.itemValue (<object data>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL data.itemValue (<data value>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL data.itemValue (<data value>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to "" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to undefined followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to 7 followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to 1.5 followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to true followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to false followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to NaN followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to Infinity followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to -Infinity followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to "\0" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to null followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS data.itemValue (<data value>): IDL set to "" should not throw 
FAIL data.itemValue (<data value>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to "" followed by IDL get 
PASS data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.itemValue (<data value>): IDL set to undefined should not throw 
FAIL data.itemValue (<data value>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS data.itemValue (<data value>): IDL set to 7 should not throw 
FAIL data.itemValue (<data value>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS data.itemValue (<data value>): IDL set to 1.5 should not throw 
FAIL data.itemValue (<data value>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS data.itemValue (<data value>): IDL set to true should not throw 
FAIL data.itemValue (<data value>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS data.itemValue (<data value>): IDL set to false should not throw 
FAIL data.itemValue (<data value>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS data.itemValue (<data value>): IDL set to object "[object Object]" should not throw 
FAIL data.itemValue (<data value>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS data.itemValue (<data value>): IDL set to NaN should not throw 
FAIL data.itemValue (<data value>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS data.itemValue (<data value>): IDL set to Infinity should not throw 
FAIL data.itemValue (<data value>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS data.itemValue (<data value>): IDL set to -Infinity should not throw 
FAIL data.itemValue (<data value>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS data.itemValue (<data value>): IDL set to "\0" should not throw 
FAIL data.itemValue (<data value>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to "\0" followed by IDL get 
PASS data.itemValue (<data value>): IDL set to null should not throw 
FAIL data.itemValue (<data value>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS data.itemValue (<data value>): IDL set to object "test-toString" should not throw 
FAIL data.itemValue (<data value>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS data.itemValue (<data value>): IDL set to object "test-valueOf" should not throw 
PASS data.itemValue (<data value>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL data.itemValue (<data value>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"

