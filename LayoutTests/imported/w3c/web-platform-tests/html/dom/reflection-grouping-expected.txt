Blocked access to external URL http://site.example/
Blocked access to external URL http://site.example/path???@#l
Implementers looking to fix bugs might want to use the original version of this suite's test framework, which conveniently aggregates similar errors and only reports failures. This file is (part of) the authoritative conformance test suite, and is suitable for incorporation into automated test suites.

(Note: missing tests for types tokenlist, settable tokenlist.)


PASS p.title: typeof IDL attribute 
PASS p.title: IDL get with DOM attribute unset 
PASS p.title: setAttribute() to "" followed by getAttribute() 
PASS p.title: setAttribute() to "" followed by IDL get 
PASS p.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS p.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS p.title: setAttribute() to undefined followed by getAttribute() 
PASS p.title: setAttribute() to undefined followed by IDL get 
PASS p.title: setAttribute() to 7 followed by getAttribute() 
PASS p.title: setAttribute() to 7 followed by IDL get 
PASS p.title: setAttribute() to 1.5 followed by getAttribute() 
PASS p.title: setAttribute() to 1.5 followed by IDL get 
PASS p.title: setAttribute() to true followed by getAttribute() 
PASS p.title: setAttribute() to true followed by IDL get 
PASS p.title: setAttribute() to false followed by getAttribute() 
PASS p.title: setAttribute() to false followed by IDL get 
PASS p.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS p.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS p.title: setAttribute() to NaN followed by getAttribute() 
PASS p.title: setAttribute() to NaN followed by IDL get 
PASS p.title: setAttribute() to Infinity followed by getAttribute() 
PASS p.title: setAttribute() to Infinity followed by IDL get 
PASS p.title: setAttribute() to -Infinity followed by getAttribute() 
PASS p.title: setAttribute() to -Infinity followed by IDL get 
PASS p.title: setAttribute() to "\0" followed by getAttribute() 
PASS p.title: setAttribute() to "\0" followed by IDL get 
PASS p.title: setAttribute() to null followed by getAttribute() 
PASS p.title: setAttribute() to null followed by IDL get 
PASS p.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS p.title: setAttribute() to object "test-toString" followed by IDL get 
PASS p.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS p.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS p.title: IDL set to "" should not throw 
PASS p.title: IDL set to "" followed by getAttribute() 
PASS p.title: IDL set to "" followed by IDL get 
PASS p.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS p.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS p.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS p.title: IDL set to undefined should not throw 
PASS p.title: IDL set to undefined followed by getAttribute() 
PASS p.title: IDL set to undefined followed by IDL get 
PASS p.title: IDL set to 7 should not throw 
PASS p.title: IDL set to 7 followed by getAttribute() 
PASS p.title: IDL set to 7 followed by IDL get 
PASS p.title: IDL set to 1.5 should not throw 
PASS p.title: IDL set to 1.5 followed by getAttribute() 
PASS p.title: IDL set to 1.5 followed by IDL get 
PASS p.title: IDL set to true should not throw 
PASS p.title: IDL set to true followed by getAttribute() 
PASS p.title: IDL set to true followed by IDL get 
PASS p.title: IDL set to false should not throw 
PASS p.title: IDL set to false followed by getAttribute() 
PASS p.title: IDL set to false followed by IDL get 
PASS p.title: IDL set to object "[object Object]" should not throw 
PASS p.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS p.title: IDL set to object "[object Object]" followed by IDL get 
PASS p.title: IDL set to NaN should not throw 
PASS p.title: IDL set to NaN followed by getAttribute() 
PASS p.title: IDL set to NaN followed by IDL get 
PASS p.title: IDL set to Infinity should not throw 
PASS p.title: IDL set to Infinity followed by getAttribute() 
PASS p.title: IDL set to Infinity followed by IDL get 
PASS p.title: IDL set to -Infinity should not throw 
PASS p.title: IDL set to -Infinity followed by getAttribute() 
PASS p.title: IDL set to -Infinity followed by IDL get 
PASS p.title: IDL set to "\0" should not throw 
PASS p.title: IDL set to "\0" followed by getAttribute() 
PASS p.title: IDL set to "\0" followed by IDL get 
PASS p.title: IDL set to null should not throw 
PASS p.title: IDL set to null followed by getAttribute() 
PASS p.title: IDL set to null followed by IDL get 
PASS p.title: IDL set to object "test-toString" should not throw 
PASS p.title: IDL set to object "test-toString" followed by getAttribute() 
PASS p.title: IDL set to object "test-toString" followed by IDL get 
PASS p.title: IDL set to object "test-valueOf" should not throw 
PASS p.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS p.title: IDL set to object "test-valueOf" followed by IDL get 
PASS p.lang: typeof IDL attribute 
PASS p.lang: IDL get with DOM attribute unset 
PASS p.lang: setAttribute() to "" followed by getAttribute() 
PASS p.lang: setAttribute() to "" followed by IDL get 
PASS p.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS p.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS p.lang: setAttribute() to undefined followed by getAttribute() 
PASS p.lang: setAttribute() to undefined followed by IDL get 
PASS p.lang: setAttribute() to 7 followed by getAttribute() 
PASS p.lang: setAttribute() to 7 followed by IDL get 
PASS p.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS p.lang: setAttribute() to 1.5 followed by IDL get 
PASS p.lang: setAttribute() to true followed by getAttribute() 
PASS p.lang: setAttribute() to true followed by IDL get 
PASS p.lang: setAttribute() to false followed by getAttribute() 
PASS p.lang: setAttribute() to false followed by IDL get 
PASS p.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS p.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS p.lang: setAttribute() to NaN followed by getAttribute() 
PASS p.lang: setAttribute() to NaN followed by IDL get 
PASS p.lang: setAttribute() to Infinity followed by getAttribute() 
PASS p.lang: setAttribute() to Infinity followed by IDL get 
PASS p.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS p.lang: setAttribute() to -Infinity followed by IDL get 
PASS p.lang: setAttribute() to "\0" followed by getAttribute() 
PASS p.lang: setAttribute() to "\0" followed by IDL get 
PASS p.lang: setAttribute() to null followed by getAttribute() 
PASS p.lang: setAttribute() to null followed by IDL get 
PASS p.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS p.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS p.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS p.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS p.lang: IDL set to "" should not throw 
PASS p.lang: IDL set to "" followed by getAttribute() 
PASS p.lang: IDL set to "" followed by IDL get 
PASS p.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS p.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS p.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS p.lang: IDL set to undefined should not throw 
PASS p.lang: IDL set to undefined followed by getAttribute() 
PASS p.lang: IDL set to undefined followed by IDL get 
PASS p.lang: IDL set to 7 should not throw 
PASS p.lang: IDL set to 7 followed by getAttribute() 
PASS p.lang: IDL set to 7 followed by IDL get 
PASS p.lang: IDL set to 1.5 should not throw 
PASS p.lang: IDL set to 1.5 followed by getAttribute() 
PASS p.lang: IDL set to 1.5 followed by IDL get 
PASS p.lang: IDL set to true should not throw 
PASS p.lang: IDL set to true followed by getAttribute() 
PASS p.lang: IDL set to true followed by IDL get 
PASS p.lang: IDL set to false should not throw 
PASS p.lang: IDL set to false followed by getAttribute() 
PASS p.lang: IDL set to false followed by IDL get 
PASS p.lang: IDL set to object "[object Object]" should not throw 
PASS p.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS p.lang: IDL set to object "[object Object]" followed by IDL get 
PASS p.lang: IDL set to NaN should not throw 
PASS p.lang: IDL set to NaN followed by getAttribute() 
PASS p.lang: IDL set to NaN followed by IDL get 
PASS p.lang: IDL set to Infinity should not throw 
PASS p.lang: IDL set to Infinity followed by getAttribute() 
PASS p.lang: IDL set to Infinity followed by IDL get 
PASS p.lang: IDL set to -Infinity should not throw 
PASS p.lang: IDL set to -Infinity followed by getAttribute() 
PASS p.lang: IDL set to -Infinity followed by IDL get 
PASS p.lang: IDL set to "\0" should not throw 
PASS p.lang: IDL set to "\0" followed by getAttribute() 
PASS p.lang: IDL set to "\0" followed by IDL get 
PASS p.lang: IDL set to null should not throw 
PASS p.lang: IDL set to null followed by getAttribute() 
PASS p.lang: IDL set to null followed by IDL get 
PASS p.lang: IDL set to object "test-toString" should not throw 
PASS p.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS p.lang: IDL set to object "test-toString" followed by IDL get 
PASS p.lang: IDL set to object "test-valueOf" should not throw 
PASS p.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS p.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS p.dir: typeof IDL attribute 
PASS p.dir: IDL get with DOM attribute unset 
PASS p.dir: setAttribute() to "" followed by getAttribute() 
PASS p.dir: setAttribute() to "" followed by IDL get 
PASS p.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS p.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS p.dir: setAttribute() to undefined followed by getAttribute() 
PASS p.dir: setAttribute() to undefined followed by IDL get 
PASS p.dir: setAttribute() to 7 followed by getAttribute() 
PASS p.dir: setAttribute() to 7 followed by IDL get 
PASS p.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS p.dir: setAttribute() to 1.5 followed by IDL get 
PASS p.dir: setAttribute() to true followed by getAttribute() 
PASS p.dir: setAttribute() to true followed by IDL get 
PASS p.dir: setAttribute() to false followed by getAttribute() 
PASS p.dir: setAttribute() to false followed by IDL get 
PASS p.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS p.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS p.dir: setAttribute() to NaN followed by getAttribute() 
PASS p.dir: setAttribute() to NaN followed by IDL get 
PASS p.dir: setAttribute() to Infinity followed by getAttribute() 
PASS p.dir: setAttribute() to Infinity followed by IDL get 
PASS p.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS p.dir: setAttribute() to -Infinity followed by IDL get 
PASS p.dir: setAttribute() to "\0" followed by getAttribute() 
PASS p.dir: setAttribute() to "\0" followed by IDL get 
PASS p.dir: setAttribute() to null followed by getAttribute() 
PASS p.dir: setAttribute() to null followed by IDL get 
PASS p.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS p.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS p.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS p.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS p.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS p.dir: setAttribute() to "ltr" followed by IDL get 
PASS p.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS p.dir: setAttribute() to "xltr" followed by IDL get 
PASS p.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS p.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS p.dir: setAttribute() to "tr" followed by getAttribute() 
PASS p.dir: setAttribute() to "tr" followed by IDL get 
PASS p.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS p.dir: setAttribute() to "LTR" followed by IDL get 
PASS p.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS p.dir: setAttribute() to "rtl" followed by IDL get 
PASS p.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS p.dir: setAttribute() to "xrtl" followed by IDL get 
PASS p.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS p.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS p.dir: setAttribute() to "tl" followed by getAttribute() 
PASS p.dir: setAttribute() to "tl" followed by IDL get 
PASS p.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS p.dir: setAttribute() to "RTL" followed by IDL get 
PASS p.dir: setAttribute() to "auto" followed by getAttribute() 
PASS p.dir: setAttribute() to "auto" followed by IDL get 
PASS p.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS p.dir: setAttribute() to "xauto" followed by IDL get 
PASS p.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS p.dir: setAttribute() to "auto\0" followed by IDL get 
PASS p.dir: setAttribute() to "uto" followed by getAttribute() 
PASS p.dir: setAttribute() to "uto" followed by IDL get 
PASS p.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS p.dir: setAttribute() to "AUTO" followed by IDL get 
PASS p.dir: IDL set to "" should not throw 
PASS p.dir: IDL set to "" followed by getAttribute() 
PASS p.dir: IDL set to "" followed by IDL get 
PASS p.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS p.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS p.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS p.dir: IDL set to undefined should not throw 
PASS p.dir: IDL set to undefined followed by getAttribute() 
PASS p.dir: IDL set to undefined followed by IDL get 
PASS p.dir: IDL set to 7 should not throw 
PASS p.dir: IDL set to 7 followed by getAttribute() 
PASS p.dir: IDL set to 7 followed by IDL get 
PASS p.dir: IDL set to 1.5 should not throw 
PASS p.dir: IDL set to 1.5 followed by getAttribute() 
PASS p.dir: IDL set to 1.5 followed by IDL get 
PASS p.dir: IDL set to true should not throw 
PASS p.dir: IDL set to true followed by getAttribute() 
PASS p.dir: IDL set to true followed by IDL get 
PASS p.dir: IDL set to false should not throw 
PASS p.dir: IDL set to false followed by getAttribute() 
PASS p.dir: IDL set to false followed by IDL get 
PASS p.dir: IDL set to object "[object Object]" should not throw 
PASS p.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS p.dir: IDL set to object "[object Object]" followed by IDL get 
PASS p.dir: IDL set to NaN should not throw 
PASS p.dir: IDL set to NaN followed by getAttribute() 
PASS p.dir: IDL set to NaN followed by IDL get 
PASS p.dir: IDL set to Infinity should not throw 
PASS p.dir: IDL set to Infinity followed by getAttribute() 
PASS p.dir: IDL set to Infinity followed by IDL get 
PASS p.dir: IDL set to -Infinity should not throw 
PASS p.dir: IDL set to -Infinity followed by getAttribute() 
PASS p.dir: IDL set to -Infinity followed by IDL get 
PASS p.dir: IDL set to "\0" should not throw 
PASS p.dir: IDL set to "\0" followed by getAttribute() 
PASS p.dir: IDL set to "\0" followed by IDL get 
PASS p.dir: IDL set to null should not throw 
PASS p.dir: IDL set to null followed by IDL get 
PASS p.dir: IDL set to object "test-toString" should not throw 
PASS p.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS p.dir: IDL set to object "test-toString" followed by IDL get 
PASS p.dir: IDL set to object "test-valueOf" should not throw 
PASS p.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS p.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS p.dir: IDL set to "ltr" should not throw 
PASS p.dir: IDL set to "ltr" followed by getAttribute() 
PASS p.dir: IDL set to "ltr" followed by IDL get 
PASS p.dir: IDL set to "xltr" should not throw 
PASS p.dir: IDL set to "xltr" followed by getAttribute() 
PASS p.dir: IDL set to "xltr" followed by IDL get 
PASS p.dir: IDL set to "ltr\0" should not throw 
PASS p.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS p.dir: IDL set to "ltr\0" followed by IDL get 
PASS p.dir: IDL set to "tr" should not throw 
PASS p.dir: IDL set to "tr" followed by getAttribute() 
PASS p.dir: IDL set to "tr" followed by IDL get 
PASS p.dir: IDL set to "LTR" should not throw 
PASS p.dir: IDL set to "LTR" followed by getAttribute() 
PASS p.dir: IDL set to "LTR" followed by IDL get 
PASS p.dir: IDL set to "rtl" should not throw 
PASS p.dir: IDL set to "rtl" followed by getAttribute() 
PASS p.dir: IDL set to "rtl" followed by IDL get 
PASS p.dir: IDL set to "xrtl" should not throw 
PASS p.dir: IDL set to "xrtl" followed by getAttribute() 
PASS p.dir: IDL set to "xrtl" followed by IDL get 
PASS p.dir: IDL set to "rtl\0" should not throw 
PASS p.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS p.dir: IDL set to "rtl\0" followed by IDL get 
PASS p.dir: IDL set to "tl" should not throw 
PASS p.dir: IDL set to "tl" followed by getAttribute() 
PASS p.dir: IDL set to "tl" followed by IDL get 
PASS p.dir: IDL set to "RTL" should not throw 
PASS p.dir: IDL set to "RTL" followed by getAttribute() 
PASS p.dir: IDL set to "RTL" followed by IDL get 
PASS p.dir: IDL set to "auto" should not throw 
PASS p.dir: IDL set to "auto" followed by getAttribute() 
PASS p.dir: IDL set to "auto" followed by IDL get 
PASS p.dir: IDL set to "xauto" should not throw 
PASS p.dir: IDL set to "xauto" followed by getAttribute() 
PASS p.dir: IDL set to "xauto" followed by IDL get 
PASS p.dir: IDL set to "auto\0" should not throw 
PASS p.dir: IDL set to "auto\0" followed by getAttribute() 
PASS p.dir: IDL set to "auto\0" followed by IDL get 
PASS p.dir: IDL set to "uto" should not throw 
PASS p.dir: IDL set to "uto" followed by getAttribute() 
PASS p.dir: IDL set to "uto" followed by IDL get 
PASS p.dir: IDL set to "AUTO" should not throw 
PASS p.dir: IDL set to "AUTO" followed by getAttribute() 
PASS p.dir: IDL set to "AUTO" followed by IDL get 
PASS p.className (<p class>): typeof IDL attribute 
PASS p.className (<p class>): IDL get with DOM attribute unset 
PASS p.className (<p class>): setAttribute() to "" followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to "" followed by IDL get 
PASS p.className (<p class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS p.className (<p class>): setAttribute() to undefined followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to undefined followed by IDL get 
PASS p.className (<p class>): setAttribute() to 7 followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to 7 followed by IDL get 
PASS p.className (<p class>): setAttribute() to 1.5 followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to 1.5 followed by IDL get 
PASS p.className (<p class>): setAttribute() to true followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to true followed by IDL get 
PASS p.className (<p class>): setAttribute() to false followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to false followed by IDL get 
PASS p.className (<p class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS p.className (<p class>): setAttribute() to NaN followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to NaN followed by IDL get 
PASS p.className (<p class>): setAttribute() to Infinity followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to Infinity followed by IDL get 
PASS p.className (<p class>): setAttribute() to -Infinity followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to -Infinity followed by IDL get 
PASS p.className (<p class>): setAttribute() to "\0" followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to "\0" followed by IDL get 
PASS p.className (<p class>): setAttribute() to null followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to null followed by IDL get 
PASS p.className (<p class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to object "test-toString" followed by IDL get 
PASS p.className (<p class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS p.className (<p class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS p.className (<p class>): IDL set to "" should not throw 
PASS p.className (<p class>): IDL set to "" followed by getAttribute() 
PASS p.className (<p class>): IDL set to "" followed by IDL get 
PASS p.className (<p class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS p.className (<p class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS p.className (<p class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS p.className (<p class>): IDL set to undefined should not throw 
PASS p.className (<p class>): IDL set to undefined followed by getAttribute() 
PASS p.className (<p class>): IDL set to undefined followed by IDL get 
PASS p.className (<p class>): IDL set to 7 should not throw 
PASS p.className (<p class>): IDL set to 7 followed by getAttribute() 
PASS p.className (<p class>): IDL set to 7 followed by IDL get 
PASS p.className (<p class>): IDL set to 1.5 should not throw 
PASS p.className (<p class>): IDL set to 1.5 followed by getAttribute() 
PASS p.className (<p class>): IDL set to 1.5 followed by IDL get 
PASS p.className (<p class>): IDL set to true should not throw 
PASS p.className (<p class>): IDL set to true followed by getAttribute() 
PASS p.className (<p class>): IDL set to true followed by IDL get 
PASS p.className (<p class>): IDL set to false should not throw 
PASS p.className (<p class>): IDL set to false followed by getAttribute() 
PASS p.className (<p class>): IDL set to false followed by IDL get 
PASS p.className (<p class>): IDL set to object "[object Object]" should not throw 
PASS p.className (<p class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS p.className (<p class>): IDL set to object "[object Object]" followed by IDL get 
PASS p.className (<p class>): IDL set to NaN should not throw 
PASS p.className (<p class>): IDL set to NaN followed by getAttribute() 
PASS p.className (<p class>): IDL set to NaN followed by IDL get 
PASS p.className (<p class>): IDL set to Infinity should not throw 
PASS p.className (<p class>): IDL set to Infinity followed by getAttribute() 
PASS p.className (<p class>): IDL set to Infinity followed by IDL get 
PASS p.className (<p class>): IDL set to -Infinity should not throw 
PASS p.className (<p class>): IDL set to -Infinity followed by getAttribute() 
PASS p.className (<p class>): IDL set to -Infinity followed by IDL get 
PASS p.className (<p class>): IDL set to "\0" should not throw 
PASS p.className (<p class>): IDL set to "\0" followed by getAttribute() 
PASS p.className (<p class>): IDL set to "\0" followed by IDL get 
PASS p.className (<p class>): IDL set to null should not throw 
PASS p.className (<p class>): IDL set to null followed by getAttribute() 
PASS p.className (<p class>): IDL set to null followed by IDL get 
PASS p.className (<p class>): IDL set to object "test-toString" should not throw 
PASS p.className (<p class>): IDL set to object "test-toString" followed by getAttribute() 
PASS p.className (<p class>): IDL set to object "test-toString" followed by IDL get 
PASS p.className (<p class>): IDL set to object "test-valueOf" should not throw 
PASS p.className (<p class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS p.className (<p class>): IDL set to object "test-valueOf" followed by IDL get 
PASS p.hidden: typeof IDL attribute 
PASS p.hidden: IDL get with DOM attribute unset 
PASS p.hidden: setAttribute() to "" followed by getAttribute() 
PASS p.hidden: setAttribute() to "" followed by IDL get 
PASS p.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS p.hidden: setAttribute() to " foo " followed by IDL get 
PASS p.hidden: setAttribute() to undefined followed by getAttribute() 
PASS p.hidden: setAttribute() to undefined followed by IDL get 
PASS p.hidden: setAttribute() to null followed by getAttribute() 
PASS p.hidden: setAttribute() to null followed by IDL get 
PASS p.hidden: setAttribute() to 7 followed by getAttribute() 
PASS p.hidden: setAttribute() to 7 followed by IDL get 
PASS p.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS p.hidden: setAttribute() to 1.5 followed by IDL get 
PASS p.hidden: setAttribute() to true followed by getAttribute() 
PASS p.hidden: setAttribute() to true followed by IDL get 
PASS p.hidden: setAttribute() to false followed by getAttribute() 
PASS p.hidden: setAttribute() to false followed by IDL get 
PASS p.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS p.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS p.hidden: setAttribute() to NaN followed by getAttribute() 
PASS p.hidden: setAttribute() to NaN followed by IDL get 
PASS p.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS p.hidden: setAttribute() to Infinity followed by IDL get 
PASS p.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS p.hidden: setAttribute() to -Infinity followed by IDL get 
PASS p.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS p.hidden: setAttribute() to "\0" followed by IDL get 
PASS p.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS p.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS p.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS p.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS p.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS p.hidden: setAttribute() to "hidden" followed by IDL get 
PASS p.hidden: IDL set to "" should not throw 
PASS p.hidden: IDL set to "" followed by hasAttribute() 
PASS p.hidden: IDL set to "" followed by IDL get 
PASS p.hidden: IDL set to " foo " should not throw 
PASS p.hidden: IDL set to " foo " followed by hasAttribute() 
PASS p.hidden: IDL set to " foo " followed by IDL get 
PASS p.hidden: IDL set to undefined should not throw 
PASS p.hidden: IDL set to undefined followed by hasAttribute() 
PASS p.hidden: IDL set to undefined followed by IDL get 
PASS p.hidden: IDL set to null should not throw 
PASS p.hidden: IDL set to null followed by hasAttribute() 
PASS p.hidden: IDL set to null followed by IDL get 
PASS p.hidden: IDL set to 7 should not throw 
PASS p.hidden: IDL set to 7 followed by hasAttribute() 
PASS p.hidden: IDL set to 7 followed by IDL get 
PASS p.hidden: IDL set to 1.5 should not throw 
PASS p.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS p.hidden: IDL set to 1.5 followed by IDL get 
PASS p.hidden: IDL set to true should not throw 
PASS p.hidden: IDL set to true followed by hasAttribute() 
PASS p.hidden: IDL set to true followed by IDL get 
PASS p.hidden: IDL set to false should not throw 
PASS p.hidden: IDL set to false followed by hasAttribute() 
PASS p.hidden: IDL set to false followed by IDL get 
PASS p.hidden: IDL set to object "[object Object]" should not throw 
PASS p.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS p.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS p.hidden: IDL set to NaN should not throw 
PASS p.hidden: IDL set to NaN followed by hasAttribute() 
PASS p.hidden: IDL set to NaN followed by IDL get 
PASS p.hidden: IDL set to Infinity should not throw 
PASS p.hidden: IDL set to Infinity followed by hasAttribute() 
PASS p.hidden: IDL set to Infinity followed by IDL get 
PASS p.hidden: IDL set to -Infinity should not throw 
PASS p.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS p.hidden: IDL set to -Infinity followed by IDL get 
PASS p.hidden: IDL set to "\0" should not throw 
PASS p.hidden: IDL set to "\0" followed by hasAttribute() 
PASS p.hidden: IDL set to "\0" followed by IDL get 
PASS p.hidden: IDL set to object "test-toString" should not throw 
PASS p.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS p.hidden: IDL set to object "test-toString" followed by IDL get 
PASS p.hidden: IDL set to object "test-valueOf" should not throw 
PASS p.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS p.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS p.accessKey: typeof IDL attribute 
PASS p.accessKey: IDL get with DOM attribute unset 
PASS p.accessKey: setAttribute() to "" followed by getAttribute() 
PASS p.accessKey: setAttribute() to "" followed by IDL get 
PASS p.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS p.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS p.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS p.accessKey: setAttribute() to undefined followed by IDL get 
PASS p.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS p.accessKey: setAttribute() to 7 followed by IDL get 
PASS p.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS p.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS p.accessKey: setAttribute() to true followed by getAttribute() 
PASS p.accessKey: setAttribute() to true followed by IDL get 
PASS p.accessKey: setAttribute() to false followed by getAttribute() 
PASS p.accessKey: setAttribute() to false followed by IDL get 
PASS p.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS p.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS p.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS p.accessKey: setAttribute() to NaN followed by IDL get 
PASS p.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS p.accessKey: setAttribute() to Infinity followed by IDL get 
PASS p.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS p.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS p.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS p.accessKey: setAttribute() to "\0" followed by IDL get 
PASS p.accessKey: setAttribute() to null followed by getAttribute() 
PASS p.accessKey: setAttribute() to null followed by IDL get 
PASS p.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS p.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS p.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS p.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS p.accessKey: IDL set to "" should not throw 
PASS p.accessKey: IDL set to "" followed by getAttribute() 
PASS p.accessKey: IDL set to "" followed by IDL get 
PASS p.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS p.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS p.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS p.accessKey: IDL set to undefined should not throw 
PASS p.accessKey: IDL set to undefined followed by getAttribute() 
PASS p.accessKey: IDL set to undefined followed by IDL get 
PASS p.accessKey: IDL set to 7 should not throw 
PASS p.accessKey: IDL set to 7 followed by getAttribute() 
PASS p.accessKey: IDL set to 7 followed by IDL get 
PASS p.accessKey: IDL set to 1.5 should not throw 
PASS p.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS p.accessKey: IDL set to 1.5 followed by IDL get 
PASS p.accessKey: IDL set to true should not throw 
PASS p.accessKey: IDL set to true followed by getAttribute() 
PASS p.accessKey: IDL set to true followed by IDL get 
PASS p.accessKey: IDL set to false should not throw 
PASS p.accessKey: IDL set to false followed by getAttribute() 
PASS p.accessKey: IDL set to false followed by IDL get 
PASS p.accessKey: IDL set to object "[object Object]" should not throw 
PASS p.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS p.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS p.accessKey: IDL set to NaN should not throw 
PASS p.accessKey: IDL set to NaN followed by getAttribute() 
PASS p.accessKey: IDL set to NaN followed by IDL get 
PASS p.accessKey: IDL set to Infinity should not throw 
PASS p.accessKey: IDL set to Infinity followed by getAttribute() 
PASS p.accessKey: IDL set to Infinity followed by IDL get 
PASS p.accessKey: IDL set to -Infinity should not throw 
PASS p.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS p.accessKey: IDL set to -Infinity followed by IDL get 
PASS p.accessKey: IDL set to "\0" should not throw 
PASS p.accessKey: IDL set to "\0" followed by getAttribute() 
PASS p.accessKey: IDL set to "\0" followed by IDL get 
PASS p.accessKey: IDL set to null should not throw 
PASS p.accessKey: IDL set to null followed by getAttribute() 
PASS p.accessKey: IDL set to null followed by IDL get 
PASS p.accessKey: IDL set to object "test-toString" should not throw 
PASS p.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS p.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS p.accessKey: IDL set to object "test-valueOf" should not throw 
PASS p.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS p.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS p.tabIndex: typeof IDL attribute 
PASS p.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS p.tabIndex: setAttribute() to -36 followed by IDL get 
PASS p.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS p.tabIndex: setAttribute() to -1 followed by IDL get 
PASS p.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS p.tabIndex: setAttribute() to 0 followed by IDL get 
PASS p.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS p.tabIndex: setAttribute() to 1 followed by IDL get 
PASS p.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS p.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS p.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS p.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS p.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS p.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS p.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS p.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS p.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS p.tabIndex: setAttribute() to "0" followed by IDL get 
PASS p.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS p.tabIndex: setAttribute() to "1" followed by IDL get 
PASS p.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS p.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS p.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS p.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS p.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS p.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS p.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS p.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS p.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS p.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS p.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS p.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS p.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS p.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS p.tabIndex: IDL set to -36 should not throw 
PASS p.tabIndex: IDL set to -36 followed by getAttribute() 
PASS p.tabIndex: IDL set to -36 followed by IDL get 
PASS p.tabIndex: IDL set to -1 should not throw 
PASS p.tabIndex: IDL set to -1 followed by getAttribute() 
PASS p.tabIndex: IDL set to -1 followed by IDL get 
PASS p.tabIndex: IDL set to 0 should not throw 
PASS p.tabIndex: IDL set to 0 followed by getAttribute() 
PASS p.tabIndex: IDL set to 0 followed by IDL get 
PASS p.tabIndex: IDL set to 1 should not throw 
PASS p.tabIndex: IDL set to 1 followed by getAttribute() 
PASS p.tabIndex: IDL set to 1 followed by IDL get 
PASS p.tabIndex: IDL set to 2147483647 should not throw 
PASS p.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS p.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS p.tabIndex: IDL set to -2147483648 should not throw 
PASS p.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS p.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS p.align: typeof IDL attribute 
PASS p.align: IDL get with DOM attribute unset 
PASS p.align: setAttribute() to "" followed by getAttribute() 
PASS p.align: setAttribute() to "" followed by IDL get 
PASS p.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS p.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS p.align: setAttribute() to undefined followed by getAttribute() 
PASS p.align: setAttribute() to undefined followed by IDL get 
PASS p.align: setAttribute() to 7 followed by getAttribute() 
PASS p.align: setAttribute() to 7 followed by IDL get 
PASS p.align: setAttribute() to 1.5 followed by getAttribute() 
PASS p.align: setAttribute() to 1.5 followed by IDL get 
PASS p.align: setAttribute() to true followed by getAttribute() 
PASS p.align: setAttribute() to true followed by IDL get 
PASS p.align: setAttribute() to false followed by getAttribute() 
PASS p.align: setAttribute() to false followed by IDL get 
PASS p.align: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS p.align: setAttribute() to object "[object Object]" followed by IDL get 
PASS p.align: setAttribute() to NaN followed by getAttribute() 
PASS p.align: setAttribute() to NaN followed by IDL get 
PASS p.align: setAttribute() to Infinity followed by getAttribute() 
PASS p.align: setAttribute() to Infinity followed by IDL get 
PASS p.align: setAttribute() to -Infinity followed by getAttribute() 
PASS p.align: setAttribute() to -Infinity followed by IDL get 
PASS p.align: setAttribute() to "\0" followed by getAttribute() 
PASS p.align: setAttribute() to "\0" followed by IDL get 
PASS p.align: setAttribute() to null followed by getAttribute() 
PASS p.align: setAttribute() to null followed by IDL get 
PASS p.align: setAttribute() to object "test-toString" followed by getAttribute() 
PASS p.align: setAttribute() to object "test-toString" followed by IDL get 
PASS p.align: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS p.align: setAttribute() to object "test-valueOf" followed by IDL get 
PASS p.align: IDL set to "" should not throw 
PASS p.align: IDL set to "" followed by getAttribute() 
PASS p.align: IDL set to "" followed by IDL get 
PASS p.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS p.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS p.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS p.align: IDL set to undefined should not throw 
PASS p.align: IDL set to undefined followed by getAttribute() 
PASS p.align: IDL set to undefined followed by IDL get 
PASS p.align: IDL set to 7 should not throw 
PASS p.align: IDL set to 7 followed by getAttribute() 
PASS p.align: IDL set to 7 followed by IDL get 
PASS p.align: IDL set to 1.5 should not throw 
PASS p.align: IDL set to 1.5 followed by getAttribute() 
PASS p.align: IDL set to 1.5 followed by IDL get 
PASS p.align: IDL set to true should not throw 
PASS p.align: IDL set to true followed by getAttribute() 
PASS p.align: IDL set to true followed by IDL get 
PASS p.align: IDL set to false should not throw 
PASS p.align: IDL set to false followed by getAttribute() 
PASS p.align: IDL set to false followed by IDL get 
PASS p.align: IDL set to object "[object Object]" should not throw 
PASS p.align: IDL set to object "[object Object]" followed by getAttribute() 
PASS p.align: IDL set to object "[object Object]" followed by IDL get 
PASS p.align: IDL set to NaN should not throw 
PASS p.align: IDL set to NaN followed by getAttribute() 
PASS p.align: IDL set to NaN followed by IDL get 
PASS p.align: IDL set to Infinity should not throw 
PASS p.align: IDL set to Infinity followed by getAttribute() 
PASS p.align: IDL set to Infinity followed by IDL get 
PASS p.align: IDL set to -Infinity should not throw 
PASS p.align: IDL set to -Infinity followed by getAttribute() 
PASS p.align: IDL set to -Infinity followed by IDL get 
PASS p.align: IDL set to "\0" should not throw 
PASS p.align: IDL set to "\0" followed by getAttribute() 
PASS p.align: IDL set to "\0" followed by IDL get 
PASS p.align: IDL set to null should not throw 
PASS p.align: IDL set to null followed by getAttribute() 
PASS p.align: IDL set to null followed by IDL get 
PASS p.align: IDL set to object "test-toString" should not throw 
PASS p.align: IDL set to object "test-toString" followed by getAttribute() 
PASS p.align: IDL set to object "test-toString" followed by IDL get 
PASS p.align: IDL set to object "test-valueOf" should not throw 
PASS p.align: IDL set to object "test-valueOf" followed by getAttribute() 
PASS p.align: IDL set to object "test-valueOf" followed by IDL get 
FAIL p.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL p.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS p.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL p.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL p.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL p.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to null followed by getAttribute() 
FAIL p.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL p.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL p.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to true followed by getAttribute() 
FAIL p.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to false followed by getAttribute() 
FAIL p.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL p.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL p.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL p.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL p.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL p.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL p.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL p.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL p.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS p.itemScope: IDL set to "" should not throw 
FAIL p.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL p.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS p.itemScope: IDL set to " foo " should not throw 
PASS p.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL p.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS p.itemScope: IDL set to undefined should not throw 
FAIL p.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL p.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS p.itemScope: IDL set to null should not throw 
FAIL p.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL p.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS p.itemScope: IDL set to 7 should not throw 
PASS p.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL p.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS p.itemScope: IDL set to 1.5 should not throw 
PASS p.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL p.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS p.itemScope: IDL set to true should not throw 
PASS p.itemScope: IDL set to true followed by hasAttribute() 
PASS p.itemScope: IDL set to true followed by IDL get 
PASS p.itemScope: IDL set to false should not throw 
FAIL p.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS p.itemScope: IDL set to false followed by IDL get 
PASS p.itemScope: IDL set to object "[object Object]" should not throw 
PASS p.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL p.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS p.itemScope: IDL set to NaN should not throw 
FAIL p.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL p.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS p.itemScope: IDL set to Infinity should not throw 
PASS p.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL p.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS p.itemScope: IDL set to -Infinity should not throw 
PASS p.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL p.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS p.itemScope: IDL set to "\0" should not throw 
PASS p.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL p.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS p.itemScope: IDL set to object "test-toString" should not throw 
PASS p.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL p.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS p.itemScope: IDL set to object "test-valueOf" should not throw 
PASS p.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL p.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL p.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL p.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS p.itemId: setAttribute() to "" followed by getAttribute() 
FAIL p.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS p.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL p.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS p.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL p.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS p.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL p.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS p.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL p.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS p.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL p.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS p.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL p.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS p.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL p.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS p.itemId: setAttribute() to true followed by getAttribute() 
FAIL p.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS p.itemId: setAttribute() to false followed by getAttribute() 
FAIL p.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS p.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL p.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS p.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL p.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS p.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL p.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS p.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL p.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS p.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL p.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS p.itemId: setAttribute() to null followed by getAttribute() 
FAIL p.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS p.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL p.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS p.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL p.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS p.itemId: IDL set to "" should not throw 
FAIL p.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL p.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS p.itemId: IDL set to " foo " should not throw 
FAIL p.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL p.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS p.itemId: IDL set to "http://site.example/" should not throw 
FAIL p.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS p.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS p.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL p.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL p.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS p.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL p.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL p.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS p.itemId: IDL set to undefined should not throw 
FAIL p.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL p.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS p.itemId: IDL set to 7 should not throw 
FAIL p.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL p.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS p.itemId: IDL set to 1.5 should not throw 
FAIL p.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL p.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS p.itemId: IDL set to true should not throw 
FAIL p.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL p.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS p.itemId: IDL set to false should not throw 
FAIL p.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL p.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS p.itemId: IDL set to object "[object Object]" should not throw 
FAIL p.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL p.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS p.itemId: IDL set to NaN should not throw 
FAIL p.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL p.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS p.itemId: IDL set to Infinity should not throw 
FAIL p.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL p.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS p.itemId: IDL set to -Infinity should not throw 
FAIL p.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL p.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS p.itemId: IDL set to "\0" should not throw 
FAIL p.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL p.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS p.itemId: IDL set to null should not throw 
FAIL p.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL p.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS p.itemId: IDL set to object "test-toString" should not throw 
FAIL p.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL p.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS p.itemId: IDL set to object "test-valueOf" should not throw 
PASS p.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL p.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS hr.title: typeof IDL attribute 
PASS hr.title: IDL get with DOM attribute unset 
PASS hr.title: setAttribute() to "" followed by getAttribute() 
PASS hr.title: setAttribute() to "" followed by IDL get 
PASS hr.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.title: setAttribute() to undefined followed by getAttribute() 
PASS hr.title: setAttribute() to undefined followed by IDL get 
PASS hr.title: setAttribute() to 7 followed by getAttribute() 
PASS hr.title: setAttribute() to 7 followed by IDL get 
PASS hr.title: setAttribute() to 1.5 followed by getAttribute() 
PASS hr.title: setAttribute() to 1.5 followed by IDL get 
PASS hr.title: setAttribute() to true followed by getAttribute() 
PASS hr.title: setAttribute() to true followed by IDL get 
PASS hr.title: setAttribute() to false followed by getAttribute() 
PASS hr.title: setAttribute() to false followed by IDL get 
PASS hr.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hr.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS hr.title: setAttribute() to NaN followed by getAttribute() 
PASS hr.title: setAttribute() to NaN followed by IDL get 
PASS hr.title: setAttribute() to Infinity followed by getAttribute() 
PASS hr.title: setAttribute() to Infinity followed by IDL get 
PASS hr.title: setAttribute() to -Infinity followed by getAttribute() 
PASS hr.title: setAttribute() to -Infinity followed by IDL get 
PASS hr.title: setAttribute() to "\0" followed by getAttribute() 
PASS hr.title: setAttribute() to "\0" followed by IDL get 
PASS hr.title: setAttribute() to null followed by getAttribute() 
PASS hr.title: setAttribute() to null followed by IDL get 
PASS hr.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hr.title: setAttribute() to object "test-toString" followed by IDL get 
PASS hr.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hr.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hr.title: IDL set to "" should not throw 
PASS hr.title: IDL set to "" followed by getAttribute() 
PASS hr.title: IDL set to "" followed by IDL get 
PASS hr.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hr.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.title: IDL set to undefined should not throw 
PASS hr.title: IDL set to undefined followed by getAttribute() 
PASS hr.title: IDL set to undefined followed by IDL get 
PASS hr.title: IDL set to 7 should not throw 
PASS hr.title: IDL set to 7 followed by getAttribute() 
PASS hr.title: IDL set to 7 followed by IDL get 
PASS hr.title: IDL set to 1.5 should not throw 
PASS hr.title: IDL set to 1.5 followed by getAttribute() 
PASS hr.title: IDL set to 1.5 followed by IDL get 
PASS hr.title: IDL set to true should not throw 
PASS hr.title: IDL set to true followed by getAttribute() 
PASS hr.title: IDL set to true followed by IDL get 
PASS hr.title: IDL set to false should not throw 
PASS hr.title: IDL set to false followed by getAttribute() 
PASS hr.title: IDL set to false followed by IDL get 
PASS hr.title: IDL set to object "[object Object]" should not throw 
PASS hr.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS hr.title: IDL set to object "[object Object]" followed by IDL get 
PASS hr.title: IDL set to NaN should not throw 
PASS hr.title: IDL set to NaN followed by getAttribute() 
PASS hr.title: IDL set to NaN followed by IDL get 
PASS hr.title: IDL set to Infinity should not throw 
PASS hr.title: IDL set to Infinity followed by getAttribute() 
PASS hr.title: IDL set to Infinity followed by IDL get 
PASS hr.title: IDL set to -Infinity should not throw 
PASS hr.title: IDL set to -Infinity followed by getAttribute() 
PASS hr.title: IDL set to -Infinity followed by IDL get 
PASS hr.title: IDL set to "\0" should not throw 
PASS hr.title: IDL set to "\0" followed by getAttribute() 
PASS hr.title: IDL set to "\0" followed by IDL get 
PASS hr.title: IDL set to null should not throw 
PASS hr.title: IDL set to null followed by getAttribute() 
PASS hr.title: IDL set to null followed by IDL get 
PASS hr.title: IDL set to object "test-toString" should not throw 
PASS hr.title: IDL set to object "test-toString" followed by getAttribute() 
PASS hr.title: IDL set to object "test-toString" followed by IDL get 
PASS hr.title: IDL set to object "test-valueOf" should not throw 
PASS hr.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS hr.title: IDL set to object "test-valueOf" followed by IDL get 
PASS hr.lang: typeof IDL attribute 
PASS hr.lang: IDL get with DOM attribute unset 
PASS hr.lang: setAttribute() to "" followed by getAttribute() 
PASS hr.lang: setAttribute() to "" followed by IDL get 
PASS hr.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.lang: setAttribute() to undefined followed by getAttribute() 
PASS hr.lang: setAttribute() to undefined followed by IDL get 
PASS hr.lang: setAttribute() to 7 followed by getAttribute() 
PASS hr.lang: setAttribute() to 7 followed by IDL get 
PASS hr.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS hr.lang: setAttribute() to 1.5 followed by IDL get 
PASS hr.lang: setAttribute() to true followed by getAttribute() 
PASS hr.lang: setAttribute() to true followed by IDL get 
PASS hr.lang: setAttribute() to false followed by getAttribute() 
PASS hr.lang: setAttribute() to false followed by IDL get 
PASS hr.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hr.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS hr.lang: setAttribute() to NaN followed by getAttribute() 
PASS hr.lang: setAttribute() to NaN followed by IDL get 
PASS hr.lang: setAttribute() to Infinity followed by getAttribute() 
PASS hr.lang: setAttribute() to Infinity followed by IDL get 
PASS hr.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS hr.lang: setAttribute() to -Infinity followed by IDL get 
PASS hr.lang: setAttribute() to "\0" followed by getAttribute() 
PASS hr.lang: setAttribute() to "\0" followed by IDL get 
PASS hr.lang: setAttribute() to null followed by getAttribute() 
PASS hr.lang: setAttribute() to null followed by IDL get 
PASS hr.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hr.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS hr.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hr.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hr.lang: IDL set to "" should not throw 
PASS hr.lang: IDL set to "" followed by getAttribute() 
PASS hr.lang: IDL set to "" followed by IDL get 
PASS hr.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hr.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.lang: IDL set to undefined should not throw 
PASS hr.lang: IDL set to undefined followed by getAttribute() 
PASS hr.lang: IDL set to undefined followed by IDL get 
PASS hr.lang: IDL set to 7 should not throw 
PASS hr.lang: IDL set to 7 followed by getAttribute() 
PASS hr.lang: IDL set to 7 followed by IDL get 
PASS hr.lang: IDL set to 1.5 should not throw 
PASS hr.lang: IDL set to 1.5 followed by getAttribute() 
PASS hr.lang: IDL set to 1.5 followed by IDL get 
PASS hr.lang: IDL set to true should not throw 
PASS hr.lang: IDL set to true followed by getAttribute() 
PASS hr.lang: IDL set to true followed by IDL get 
PASS hr.lang: IDL set to false should not throw 
PASS hr.lang: IDL set to false followed by getAttribute() 
PASS hr.lang: IDL set to false followed by IDL get 
PASS hr.lang: IDL set to object "[object Object]" should not throw 
PASS hr.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS hr.lang: IDL set to object "[object Object]" followed by IDL get 
PASS hr.lang: IDL set to NaN should not throw 
PASS hr.lang: IDL set to NaN followed by getAttribute() 
PASS hr.lang: IDL set to NaN followed by IDL get 
PASS hr.lang: IDL set to Infinity should not throw 
PASS hr.lang: IDL set to Infinity followed by getAttribute() 
PASS hr.lang: IDL set to Infinity followed by IDL get 
PASS hr.lang: IDL set to -Infinity should not throw 
PASS hr.lang: IDL set to -Infinity followed by getAttribute() 
PASS hr.lang: IDL set to -Infinity followed by IDL get 
PASS hr.lang: IDL set to "\0" should not throw 
PASS hr.lang: IDL set to "\0" followed by getAttribute() 
PASS hr.lang: IDL set to "\0" followed by IDL get 
PASS hr.lang: IDL set to null should not throw 
PASS hr.lang: IDL set to null followed by getAttribute() 
PASS hr.lang: IDL set to null followed by IDL get 
PASS hr.lang: IDL set to object "test-toString" should not throw 
PASS hr.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS hr.lang: IDL set to object "test-toString" followed by IDL get 
PASS hr.lang: IDL set to object "test-valueOf" should not throw 
PASS hr.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS hr.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS hr.dir: typeof IDL attribute 
PASS hr.dir: IDL get with DOM attribute unset 
PASS hr.dir: setAttribute() to "" followed by getAttribute() 
PASS hr.dir: setAttribute() to "" followed by IDL get 
PASS hr.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.dir: setAttribute() to undefined followed by getAttribute() 
PASS hr.dir: setAttribute() to undefined followed by IDL get 
PASS hr.dir: setAttribute() to 7 followed by getAttribute() 
PASS hr.dir: setAttribute() to 7 followed by IDL get 
PASS hr.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS hr.dir: setAttribute() to 1.5 followed by IDL get 
PASS hr.dir: setAttribute() to true followed by getAttribute() 
PASS hr.dir: setAttribute() to true followed by IDL get 
PASS hr.dir: setAttribute() to false followed by getAttribute() 
PASS hr.dir: setAttribute() to false followed by IDL get 
PASS hr.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hr.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS hr.dir: setAttribute() to NaN followed by getAttribute() 
PASS hr.dir: setAttribute() to NaN followed by IDL get 
PASS hr.dir: setAttribute() to Infinity followed by getAttribute() 
PASS hr.dir: setAttribute() to Infinity followed by IDL get 
PASS hr.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS hr.dir: setAttribute() to -Infinity followed by IDL get 
PASS hr.dir: setAttribute() to "\0" followed by getAttribute() 
PASS hr.dir: setAttribute() to "\0" followed by IDL get 
PASS hr.dir: setAttribute() to null followed by getAttribute() 
PASS hr.dir: setAttribute() to null followed by IDL get 
PASS hr.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hr.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS hr.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hr.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hr.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS hr.dir: setAttribute() to "ltr" followed by IDL get 
PASS hr.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS hr.dir: setAttribute() to "xltr" followed by IDL get 
PASS hr.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS hr.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS hr.dir: setAttribute() to "tr" followed by getAttribute() 
PASS hr.dir: setAttribute() to "tr" followed by IDL get 
PASS hr.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS hr.dir: setAttribute() to "LTR" followed by IDL get 
PASS hr.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS hr.dir: setAttribute() to "rtl" followed by IDL get 
PASS hr.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS hr.dir: setAttribute() to "xrtl" followed by IDL get 
PASS hr.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS hr.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS hr.dir: setAttribute() to "tl" followed by getAttribute() 
PASS hr.dir: setAttribute() to "tl" followed by IDL get 
PASS hr.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS hr.dir: setAttribute() to "RTL" followed by IDL get 
PASS hr.dir: setAttribute() to "auto" followed by getAttribute() 
PASS hr.dir: setAttribute() to "auto" followed by IDL get 
PASS hr.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS hr.dir: setAttribute() to "xauto" followed by IDL get 
PASS hr.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS hr.dir: setAttribute() to "auto\0" followed by IDL get 
PASS hr.dir: setAttribute() to "uto" followed by getAttribute() 
PASS hr.dir: setAttribute() to "uto" followed by IDL get 
PASS hr.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS hr.dir: setAttribute() to "AUTO" followed by IDL get 
PASS hr.dir: IDL set to "" should not throw 
PASS hr.dir: IDL set to "" followed by getAttribute() 
PASS hr.dir: IDL set to "" followed by IDL get 
PASS hr.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hr.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.dir: IDL set to undefined should not throw 
PASS hr.dir: IDL set to undefined followed by getAttribute() 
PASS hr.dir: IDL set to undefined followed by IDL get 
PASS hr.dir: IDL set to 7 should not throw 
PASS hr.dir: IDL set to 7 followed by getAttribute() 
PASS hr.dir: IDL set to 7 followed by IDL get 
PASS hr.dir: IDL set to 1.5 should not throw 
PASS hr.dir: IDL set to 1.5 followed by getAttribute() 
PASS hr.dir: IDL set to 1.5 followed by IDL get 
PASS hr.dir: IDL set to true should not throw 
PASS hr.dir: IDL set to true followed by getAttribute() 
PASS hr.dir: IDL set to true followed by IDL get 
PASS hr.dir: IDL set to false should not throw 
PASS hr.dir: IDL set to false followed by getAttribute() 
PASS hr.dir: IDL set to false followed by IDL get 
PASS hr.dir: IDL set to object "[object Object]" should not throw 
PASS hr.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS hr.dir: IDL set to object "[object Object]" followed by IDL get 
PASS hr.dir: IDL set to NaN should not throw 
PASS hr.dir: IDL set to NaN followed by getAttribute() 
PASS hr.dir: IDL set to NaN followed by IDL get 
PASS hr.dir: IDL set to Infinity should not throw 
PASS hr.dir: IDL set to Infinity followed by getAttribute() 
PASS hr.dir: IDL set to Infinity followed by IDL get 
PASS hr.dir: IDL set to -Infinity should not throw 
PASS hr.dir: IDL set to -Infinity followed by getAttribute() 
PASS hr.dir: IDL set to -Infinity followed by IDL get 
PASS hr.dir: IDL set to "\0" should not throw 
PASS hr.dir: IDL set to "\0" followed by getAttribute() 
PASS hr.dir: IDL set to "\0" followed by IDL get 
PASS hr.dir: IDL set to null should not throw 
PASS hr.dir: IDL set to null followed by IDL get 
PASS hr.dir: IDL set to object "test-toString" should not throw 
PASS hr.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS hr.dir: IDL set to object "test-toString" followed by IDL get 
PASS hr.dir: IDL set to object "test-valueOf" should not throw 
PASS hr.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS hr.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS hr.dir: IDL set to "ltr" should not throw 
PASS hr.dir: IDL set to "ltr" followed by getAttribute() 
PASS hr.dir: IDL set to "ltr" followed by IDL get 
PASS hr.dir: IDL set to "xltr" should not throw 
PASS hr.dir: IDL set to "xltr" followed by getAttribute() 
PASS hr.dir: IDL set to "xltr" followed by IDL get 
PASS hr.dir: IDL set to "ltr\0" should not throw 
PASS hr.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS hr.dir: IDL set to "ltr\0" followed by IDL get 
PASS hr.dir: IDL set to "tr" should not throw 
PASS hr.dir: IDL set to "tr" followed by getAttribute() 
PASS hr.dir: IDL set to "tr" followed by IDL get 
PASS hr.dir: IDL set to "LTR" should not throw 
PASS hr.dir: IDL set to "LTR" followed by getAttribute() 
PASS hr.dir: IDL set to "LTR" followed by IDL get 
PASS hr.dir: IDL set to "rtl" should not throw 
PASS hr.dir: IDL set to "rtl" followed by getAttribute() 
PASS hr.dir: IDL set to "rtl" followed by IDL get 
PASS hr.dir: IDL set to "xrtl" should not throw 
PASS hr.dir: IDL set to "xrtl" followed by getAttribute() 
PASS hr.dir: IDL set to "xrtl" followed by IDL get 
PASS hr.dir: IDL set to "rtl\0" should not throw 
PASS hr.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS hr.dir: IDL set to "rtl\0" followed by IDL get 
PASS hr.dir: IDL set to "tl" should not throw 
PASS hr.dir: IDL set to "tl" followed by getAttribute() 
PASS hr.dir: IDL set to "tl" followed by IDL get 
PASS hr.dir: IDL set to "RTL" should not throw 
PASS hr.dir: IDL set to "RTL" followed by getAttribute() 
PASS hr.dir: IDL set to "RTL" followed by IDL get 
PASS hr.dir: IDL set to "auto" should not throw 
PASS hr.dir: IDL set to "auto" followed by getAttribute() 
PASS hr.dir: IDL set to "auto" followed by IDL get 
PASS hr.dir: IDL set to "xauto" should not throw 
PASS hr.dir: IDL set to "xauto" followed by getAttribute() 
PASS hr.dir: IDL set to "xauto" followed by IDL get 
PASS hr.dir: IDL set to "auto\0" should not throw 
PASS hr.dir: IDL set to "auto\0" followed by getAttribute() 
PASS hr.dir: IDL set to "auto\0" followed by IDL get 
PASS hr.dir: IDL set to "uto" should not throw 
PASS hr.dir: IDL set to "uto" followed by getAttribute() 
PASS hr.dir: IDL set to "uto" followed by IDL get 
PASS hr.dir: IDL set to "AUTO" should not throw 
PASS hr.dir: IDL set to "AUTO" followed by getAttribute() 
PASS hr.dir: IDL set to "AUTO" followed by IDL get 
PASS hr.className (<hr class>): typeof IDL attribute 
PASS hr.className (<hr class>): IDL get with DOM attribute unset 
PASS hr.className (<hr class>): setAttribute() to "" followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to "" followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to undefined followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to undefined followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to 7 followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to 7 followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to 1.5 followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to 1.5 followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to true followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to true followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to false followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to false followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to NaN followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to NaN followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to Infinity followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to Infinity followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to -Infinity followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to -Infinity followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to "\0" followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to "\0" followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to null followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to null followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to object "test-toString" followed by IDL get 
PASS hr.className (<hr class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hr.className (<hr class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS hr.className (<hr class>): IDL set to "" should not throw 
PASS hr.className (<hr class>): IDL set to "" followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to "" followed by IDL get 
PASS hr.className (<hr class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hr.className (<hr class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.className (<hr class>): IDL set to undefined should not throw 
PASS hr.className (<hr class>): IDL set to undefined followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to undefined followed by IDL get 
PASS hr.className (<hr class>): IDL set to 7 should not throw 
PASS hr.className (<hr class>): IDL set to 7 followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to 7 followed by IDL get 
PASS hr.className (<hr class>): IDL set to 1.5 should not throw 
PASS hr.className (<hr class>): IDL set to 1.5 followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to 1.5 followed by IDL get 
PASS hr.className (<hr class>): IDL set to true should not throw 
PASS hr.className (<hr class>): IDL set to true followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to true followed by IDL get 
PASS hr.className (<hr class>): IDL set to false should not throw 
PASS hr.className (<hr class>): IDL set to false followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to false followed by IDL get 
PASS hr.className (<hr class>): IDL set to object "[object Object]" should not throw 
PASS hr.className (<hr class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to object "[object Object]" followed by IDL get 
PASS hr.className (<hr class>): IDL set to NaN should not throw 
PASS hr.className (<hr class>): IDL set to NaN followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to NaN followed by IDL get 
PASS hr.className (<hr class>): IDL set to Infinity should not throw 
PASS hr.className (<hr class>): IDL set to Infinity followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to Infinity followed by IDL get 
PASS hr.className (<hr class>): IDL set to -Infinity should not throw 
PASS hr.className (<hr class>): IDL set to -Infinity followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to -Infinity followed by IDL get 
PASS hr.className (<hr class>): IDL set to "\0" should not throw 
PASS hr.className (<hr class>): IDL set to "\0" followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to "\0" followed by IDL get 
PASS hr.className (<hr class>): IDL set to null should not throw 
PASS hr.className (<hr class>): IDL set to null followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to null followed by IDL get 
PASS hr.className (<hr class>): IDL set to object "test-toString" should not throw 
PASS hr.className (<hr class>): IDL set to object "test-toString" followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to object "test-toString" followed by IDL get 
PASS hr.className (<hr class>): IDL set to object "test-valueOf" should not throw 
PASS hr.className (<hr class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS hr.className (<hr class>): IDL set to object "test-valueOf" followed by IDL get 
PASS hr.hidden: typeof IDL attribute 
PASS hr.hidden: IDL get with DOM attribute unset 
PASS hr.hidden: setAttribute() to "" followed by getAttribute() 
PASS hr.hidden: setAttribute() to "" followed by IDL get 
PASS hr.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS hr.hidden: setAttribute() to " foo " followed by IDL get 
PASS hr.hidden: setAttribute() to undefined followed by getAttribute() 
PASS hr.hidden: setAttribute() to undefined followed by IDL get 
PASS hr.hidden: setAttribute() to null followed by getAttribute() 
PASS hr.hidden: setAttribute() to null followed by IDL get 
PASS hr.hidden: setAttribute() to 7 followed by getAttribute() 
PASS hr.hidden: setAttribute() to 7 followed by IDL get 
PASS hr.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS hr.hidden: setAttribute() to 1.5 followed by IDL get 
PASS hr.hidden: setAttribute() to true followed by getAttribute() 
PASS hr.hidden: setAttribute() to true followed by IDL get 
PASS hr.hidden: setAttribute() to false followed by getAttribute() 
PASS hr.hidden: setAttribute() to false followed by IDL get 
PASS hr.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hr.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS hr.hidden: setAttribute() to NaN followed by getAttribute() 
PASS hr.hidden: setAttribute() to NaN followed by IDL get 
PASS hr.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS hr.hidden: setAttribute() to Infinity followed by IDL get 
PASS hr.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS hr.hidden: setAttribute() to -Infinity followed by IDL get 
PASS hr.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS hr.hidden: setAttribute() to "\0" followed by IDL get 
PASS hr.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hr.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS hr.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hr.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hr.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS hr.hidden: setAttribute() to "hidden" followed by IDL get 
PASS hr.hidden: IDL set to "" should not throw 
PASS hr.hidden: IDL set to "" followed by hasAttribute() 
PASS hr.hidden: IDL set to "" followed by IDL get 
PASS hr.hidden: IDL set to " foo " should not throw 
PASS hr.hidden: IDL set to " foo " followed by hasAttribute() 
PASS hr.hidden: IDL set to " foo " followed by IDL get 
PASS hr.hidden: IDL set to undefined should not throw 
PASS hr.hidden: IDL set to undefined followed by hasAttribute() 
PASS hr.hidden: IDL set to undefined followed by IDL get 
PASS hr.hidden: IDL set to null should not throw 
PASS hr.hidden: IDL set to null followed by hasAttribute() 
PASS hr.hidden: IDL set to null followed by IDL get 
PASS hr.hidden: IDL set to 7 should not throw 
PASS hr.hidden: IDL set to 7 followed by hasAttribute() 
PASS hr.hidden: IDL set to 7 followed by IDL get 
PASS hr.hidden: IDL set to 1.5 should not throw 
PASS hr.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS hr.hidden: IDL set to 1.5 followed by IDL get 
PASS hr.hidden: IDL set to true should not throw 
PASS hr.hidden: IDL set to true followed by hasAttribute() 
PASS hr.hidden: IDL set to true followed by IDL get 
PASS hr.hidden: IDL set to false should not throw 
PASS hr.hidden: IDL set to false followed by hasAttribute() 
PASS hr.hidden: IDL set to false followed by IDL get 
PASS hr.hidden: IDL set to object "[object Object]" should not throw 
PASS hr.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS hr.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS hr.hidden: IDL set to NaN should not throw 
PASS hr.hidden: IDL set to NaN followed by hasAttribute() 
PASS hr.hidden: IDL set to NaN followed by IDL get 
PASS hr.hidden: IDL set to Infinity should not throw 
PASS hr.hidden: IDL set to Infinity followed by hasAttribute() 
PASS hr.hidden: IDL set to Infinity followed by IDL get 
PASS hr.hidden: IDL set to -Infinity should not throw 
PASS hr.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS hr.hidden: IDL set to -Infinity followed by IDL get 
PASS hr.hidden: IDL set to "\0" should not throw 
PASS hr.hidden: IDL set to "\0" followed by hasAttribute() 
PASS hr.hidden: IDL set to "\0" followed by IDL get 
PASS hr.hidden: IDL set to object "test-toString" should not throw 
PASS hr.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS hr.hidden: IDL set to object "test-toString" followed by IDL get 
PASS hr.hidden: IDL set to object "test-valueOf" should not throw 
PASS hr.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS hr.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS hr.accessKey: typeof IDL attribute 
PASS hr.accessKey: IDL get with DOM attribute unset 
PASS hr.accessKey: setAttribute() to "" followed by getAttribute() 
PASS hr.accessKey: setAttribute() to "" followed by IDL get 
PASS hr.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS hr.accessKey: setAttribute() to undefined followed by IDL get 
PASS hr.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS hr.accessKey: setAttribute() to 7 followed by IDL get 
PASS hr.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS hr.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS hr.accessKey: setAttribute() to true followed by getAttribute() 
PASS hr.accessKey: setAttribute() to true followed by IDL get 
PASS hr.accessKey: setAttribute() to false followed by getAttribute() 
PASS hr.accessKey: setAttribute() to false followed by IDL get 
PASS hr.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hr.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS hr.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS hr.accessKey: setAttribute() to NaN followed by IDL get 
PASS hr.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS hr.accessKey: setAttribute() to Infinity followed by IDL get 
PASS hr.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS hr.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS hr.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS hr.accessKey: setAttribute() to "\0" followed by IDL get 
PASS hr.accessKey: setAttribute() to null followed by getAttribute() 
PASS hr.accessKey: setAttribute() to null followed by IDL get 
PASS hr.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hr.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS hr.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hr.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hr.accessKey: IDL set to "" should not throw 
PASS hr.accessKey: IDL set to "" followed by getAttribute() 
PASS hr.accessKey: IDL set to "" followed by IDL get 
PASS hr.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hr.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.accessKey: IDL set to undefined should not throw 
PASS hr.accessKey: IDL set to undefined followed by getAttribute() 
PASS hr.accessKey: IDL set to undefined followed by IDL get 
PASS hr.accessKey: IDL set to 7 should not throw 
PASS hr.accessKey: IDL set to 7 followed by getAttribute() 
PASS hr.accessKey: IDL set to 7 followed by IDL get 
PASS hr.accessKey: IDL set to 1.5 should not throw 
PASS hr.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS hr.accessKey: IDL set to 1.5 followed by IDL get 
PASS hr.accessKey: IDL set to true should not throw 
PASS hr.accessKey: IDL set to true followed by getAttribute() 
PASS hr.accessKey: IDL set to true followed by IDL get 
PASS hr.accessKey: IDL set to false should not throw 
PASS hr.accessKey: IDL set to false followed by getAttribute() 
PASS hr.accessKey: IDL set to false followed by IDL get 
PASS hr.accessKey: IDL set to object "[object Object]" should not throw 
PASS hr.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS hr.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS hr.accessKey: IDL set to NaN should not throw 
PASS hr.accessKey: IDL set to NaN followed by getAttribute() 
PASS hr.accessKey: IDL set to NaN followed by IDL get 
PASS hr.accessKey: IDL set to Infinity should not throw 
PASS hr.accessKey: IDL set to Infinity followed by getAttribute() 
PASS hr.accessKey: IDL set to Infinity followed by IDL get 
PASS hr.accessKey: IDL set to -Infinity should not throw 
PASS hr.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS hr.accessKey: IDL set to -Infinity followed by IDL get 
PASS hr.accessKey: IDL set to "\0" should not throw 
PASS hr.accessKey: IDL set to "\0" followed by getAttribute() 
PASS hr.accessKey: IDL set to "\0" followed by IDL get 
PASS hr.accessKey: IDL set to null should not throw 
PASS hr.accessKey: IDL set to null followed by getAttribute() 
PASS hr.accessKey: IDL set to null followed by IDL get 
PASS hr.accessKey: IDL set to object "test-toString" should not throw 
PASS hr.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS hr.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS hr.accessKey: IDL set to object "test-valueOf" should not throw 
PASS hr.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS hr.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS hr.tabIndex: typeof IDL attribute 
PASS hr.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to -36 followed by IDL get 
PASS hr.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to -1 followed by IDL get 
PASS hr.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to 0 followed by IDL get 
PASS hr.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to 1 followed by IDL get 
PASS hr.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS hr.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS hr.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS hr.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS hr.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to "0" followed by IDL get 
PASS hr.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to "1" followed by IDL get 
PASS hr.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS hr.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS hr.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS hr.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS hr.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS hr.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS hr.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS hr.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS hr.tabIndex: IDL set to -36 should not throw 
PASS hr.tabIndex: IDL set to -36 followed by getAttribute() 
PASS hr.tabIndex: IDL set to -36 followed by IDL get 
PASS hr.tabIndex: IDL set to -1 should not throw 
PASS hr.tabIndex: IDL set to -1 followed by getAttribute() 
PASS hr.tabIndex: IDL set to -1 followed by IDL get 
PASS hr.tabIndex: IDL set to 0 should not throw 
PASS hr.tabIndex: IDL set to 0 followed by getAttribute() 
PASS hr.tabIndex: IDL set to 0 followed by IDL get 
PASS hr.tabIndex: IDL set to 1 should not throw 
PASS hr.tabIndex: IDL set to 1 followed by getAttribute() 
PASS hr.tabIndex: IDL set to 1 followed by IDL get 
PASS hr.tabIndex: IDL set to 2147483647 should not throw 
PASS hr.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS hr.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS hr.tabIndex: IDL set to -2147483648 should not throw 
PASS hr.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS hr.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS hr.align: typeof IDL attribute 
PASS hr.align: IDL get with DOM attribute unset 
PASS hr.align: setAttribute() to "" followed by getAttribute() 
PASS hr.align: setAttribute() to "" followed by IDL get 
PASS hr.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.align: setAttribute() to undefined followed by getAttribute() 
PASS hr.align: setAttribute() to undefined followed by IDL get 
PASS hr.align: setAttribute() to 7 followed by getAttribute() 
PASS hr.align: setAttribute() to 7 followed by IDL get 
PASS hr.align: setAttribute() to 1.5 followed by getAttribute() 
PASS hr.align: setAttribute() to 1.5 followed by IDL get 
PASS hr.align: setAttribute() to true followed by getAttribute() 
PASS hr.align: setAttribute() to true followed by IDL get 
PASS hr.align: setAttribute() to false followed by getAttribute() 
PASS hr.align: setAttribute() to false followed by IDL get 
PASS hr.align: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hr.align: setAttribute() to object "[object Object]" followed by IDL get 
PASS hr.align: setAttribute() to NaN followed by getAttribute() 
PASS hr.align: setAttribute() to NaN followed by IDL get 
PASS hr.align: setAttribute() to Infinity followed by getAttribute() 
PASS hr.align: setAttribute() to Infinity followed by IDL get 
PASS hr.align: setAttribute() to -Infinity followed by getAttribute() 
PASS hr.align: setAttribute() to -Infinity followed by IDL get 
PASS hr.align: setAttribute() to "\0" followed by getAttribute() 
PASS hr.align: setAttribute() to "\0" followed by IDL get 
PASS hr.align: setAttribute() to null followed by getAttribute() 
PASS hr.align: setAttribute() to null followed by IDL get 
PASS hr.align: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hr.align: setAttribute() to object "test-toString" followed by IDL get 
PASS hr.align: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hr.align: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hr.align: IDL set to "" should not throw 
PASS hr.align: IDL set to "" followed by getAttribute() 
PASS hr.align: IDL set to "" followed by IDL get 
PASS hr.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hr.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.align: IDL set to undefined should not throw 
PASS hr.align: IDL set to undefined followed by getAttribute() 
PASS hr.align: IDL set to undefined followed by IDL get 
PASS hr.align: IDL set to 7 should not throw 
PASS hr.align: IDL set to 7 followed by getAttribute() 
PASS hr.align: IDL set to 7 followed by IDL get 
PASS hr.align: IDL set to 1.5 should not throw 
PASS hr.align: IDL set to 1.5 followed by getAttribute() 
PASS hr.align: IDL set to 1.5 followed by IDL get 
PASS hr.align: IDL set to true should not throw 
PASS hr.align: IDL set to true followed by getAttribute() 
PASS hr.align: IDL set to true followed by IDL get 
PASS hr.align: IDL set to false should not throw 
PASS hr.align: IDL set to false followed by getAttribute() 
PASS hr.align: IDL set to false followed by IDL get 
PASS hr.align: IDL set to object "[object Object]" should not throw 
PASS hr.align: IDL set to object "[object Object]" followed by getAttribute() 
PASS hr.align: IDL set to object "[object Object]" followed by IDL get 
PASS hr.align: IDL set to NaN should not throw 
PASS hr.align: IDL set to NaN followed by getAttribute() 
PASS hr.align: IDL set to NaN followed by IDL get 
PASS hr.align: IDL set to Infinity should not throw 
PASS hr.align: IDL set to Infinity followed by getAttribute() 
PASS hr.align: IDL set to Infinity followed by IDL get 
PASS hr.align: IDL set to -Infinity should not throw 
PASS hr.align: IDL set to -Infinity followed by getAttribute() 
PASS hr.align: IDL set to -Infinity followed by IDL get 
PASS hr.align: IDL set to "\0" should not throw 
PASS hr.align: IDL set to "\0" followed by getAttribute() 
PASS hr.align: IDL set to "\0" followed by IDL get 
PASS hr.align: IDL set to null should not throw 
PASS hr.align: IDL set to null followed by getAttribute() 
PASS hr.align: IDL set to null followed by IDL get 
PASS hr.align: IDL set to object "test-toString" should not throw 
PASS hr.align: IDL set to object "test-toString" followed by getAttribute() 
PASS hr.align: IDL set to object "test-toString" followed by IDL get 
PASS hr.align: IDL set to object "test-valueOf" should not throw 
PASS hr.align: IDL set to object "test-valueOf" followed by getAttribute() 
PASS hr.align: IDL set to object "test-valueOf" followed by IDL get 
FAIL hr.color: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL hr.color: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS hr.color: setAttribute() to "" followed by getAttribute() 
FAIL hr.color: setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS hr.color: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL hr.color: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS hr.color: setAttribute() to undefined followed by getAttribute() 
FAIL hr.color: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS hr.color: setAttribute() to 7 followed by getAttribute() 
FAIL hr.color: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS hr.color: setAttribute() to 1.5 followed by getAttribute() 
FAIL hr.color: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS hr.color: setAttribute() to true followed by getAttribute() 
FAIL hr.color: setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS hr.color: setAttribute() to false followed by getAttribute() 
FAIL hr.color: setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS hr.color: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL hr.color: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS hr.color: setAttribute() to NaN followed by getAttribute() 
FAIL hr.color: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS hr.color: setAttribute() to Infinity followed by getAttribute() 
FAIL hr.color: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS hr.color: setAttribute() to -Infinity followed by getAttribute() 
FAIL hr.color: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS hr.color: setAttribute() to "\0" followed by getAttribute() 
FAIL hr.color: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS hr.color: setAttribute() to null followed by getAttribute() 
FAIL hr.color: setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS hr.color: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL hr.color: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS hr.color: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL hr.color: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS hr.color: IDL set to "" should not throw 
FAIL hr.color: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS hr.color: IDL set to "" followed by IDL get 
PASS hr.color: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL hr.color: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS hr.color: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.color: IDL set to undefined should not throw 
FAIL hr.color: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL hr.color: IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS hr.color: IDL set to 7 should not throw 
FAIL hr.color: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL hr.color: IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS hr.color: IDL set to 1.5 should not throw 
FAIL hr.color: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL hr.color: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS hr.color: IDL set to true should not throw 
FAIL hr.color: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL hr.color: IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS hr.color: IDL set to false should not throw 
FAIL hr.color: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL hr.color: IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS hr.color: IDL set to object "[object Object]" should not throw 
FAIL hr.color: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL hr.color: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS hr.color: IDL set to NaN should not throw 
FAIL hr.color: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL hr.color: IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS hr.color: IDL set to Infinity should not throw 
FAIL hr.color: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL hr.color: IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS hr.color: IDL set to -Infinity should not throw 
FAIL hr.color: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL hr.color: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS hr.color: IDL set to "\0" should not throw 
FAIL hr.color: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS hr.color: IDL set to "\0" followed by IDL get 
PASS hr.color: IDL set to null should not throw 
FAIL hr.color: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL hr.color: IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS hr.color: IDL set to object "test-toString" should not throw 
FAIL hr.color: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL hr.color: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS hr.color: IDL set to object "test-valueOf" should not throw 
PASS hr.color: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL hr.color: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
PASS hr.noShade: typeof IDL attribute 
PASS hr.noShade: IDL get with DOM attribute unset 
PASS hr.noShade: setAttribute() to "" followed by getAttribute() 
PASS hr.noShade: setAttribute() to "" followed by IDL get 
PASS hr.noShade: setAttribute() to " foo " followed by getAttribute() 
PASS hr.noShade: setAttribute() to " foo " followed by IDL get 
PASS hr.noShade: setAttribute() to undefined followed by getAttribute() 
PASS hr.noShade: setAttribute() to undefined followed by IDL get 
PASS hr.noShade: setAttribute() to null followed by getAttribute() 
PASS hr.noShade: setAttribute() to null followed by IDL get 
PASS hr.noShade: setAttribute() to 7 followed by getAttribute() 
PASS hr.noShade: setAttribute() to 7 followed by IDL get 
PASS hr.noShade: setAttribute() to 1.5 followed by getAttribute() 
PASS hr.noShade: setAttribute() to 1.5 followed by IDL get 
PASS hr.noShade: setAttribute() to true followed by getAttribute() 
PASS hr.noShade: setAttribute() to true followed by IDL get 
PASS hr.noShade: setAttribute() to false followed by getAttribute() 
PASS hr.noShade: setAttribute() to false followed by IDL get 
PASS hr.noShade: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hr.noShade: setAttribute() to object "[object Object]" followed by IDL get 
PASS hr.noShade: setAttribute() to NaN followed by getAttribute() 
PASS hr.noShade: setAttribute() to NaN followed by IDL get 
PASS hr.noShade: setAttribute() to Infinity followed by getAttribute() 
PASS hr.noShade: setAttribute() to Infinity followed by IDL get 
PASS hr.noShade: setAttribute() to -Infinity followed by getAttribute() 
PASS hr.noShade: setAttribute() to -Infinity followed by IDL get 
PASS hr.noShade: setAttribute() to "\0" followed by getAttribute() 
PASS hr.noShade: setAttribute() to "\0" followed by IDL get 
PASS hr.noShade: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hr.noShade: setAttribute() to object "test-toString" followed by IDL get 
PASS hr.noShade: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hr.noShade: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hr.noShade: setAttribute() to "noShade" followed by getAttribute() 
PASS hr.noShade: setAttribute() to "noShade" followed by IDL get 
PASS hr.noShade: IDL set to "" should not throw 
PASS hr.noShade: IDL set to "" followed by hasAttribute() 
PASS hr.noShade: IDL set to "" followed by IDL get 
PASS hr.noShade: IDL set to " foo " should not throw 
PASS hr.noShade: IDL set to " foo " followed by hasAttribute() 
PASS hr.noShade: IDL set to " foo " followed by IDL get 
PASS hr.noShade: IDL set to undefined should not throw 
PASS hr.noShade: IDL set to undefined followed by hasAttribute() 
PASS hr.noShade: IDL set to undefined followed by IDL get 
PASS hr.noShade: IDL set to null should not throw 
PASS hr.noShade: IDL set to null followed by hasAttribute() 
PASS hr.noShade: IDL set to null followed by IDL get 
PASS hr.noShade: IDL set to 7 should not throw 
PASS hr.noShade: IDL set to 7 followed by hasAttribute() 
PASS hr.noShade: IDL set to 7 followed by IDL get 
PASS hr.noShade: IDL set to 1.5 should not throw 
PASS hr.noShade: IDL set to 1.5 followed by hasAttribute() 
PASS hr.noShade: IDL set to 1.5 followed by IDL get 
PASS hr.noShade: IDL set to true should not throw 
PASS hr.noShade: IDL set to true followed by hasAttribute() 
PASS hr.noShade: IDL set to true followed by IDL get 
PASS hr.noShade: IDL set to false should not throw 
PASS hr.noShade: IDL set to false followed by hasAttribute() 
PASS hr.noShade: IDL set to false followed by IDL get 
PASS hr.noShade: IDL set to object "[object Object]" should not throw 
PASS hr.noShade: IDL set to object "[object Object]" followed by hasAttribute() 
PASS hr.noShade: IDL set to object "[object Object]" followed by IDL get 
PASS hr.noShade: IDL set to NaN should not throw 
PASS hr.noShade: IDL set to NaN followed by hasAttribute() 
PASS hr.noShade: IDL set to NaN followed by IDL get 
PASS hr.noShade: IDL set to Infinity should not throw 
PASS hr.noShade: IDL set to Infinity followed by hasAttribute() 
PASS hr.noShade: IDL set to Infinity followed by IDL get 
PASS hr.noShade: IDL set to -Infinity should not throw 
PASS hr.noShade: IDL set to -Infinity followed by hasAttribute() 
PASS hr.noShade: IDL set to -Infinity followed by IDL get 
PASS hr.noShade: IDL set to "\0" should not throw 
PASS hr.noShade: IDL set to "\0" followed by hasAttribute() 
PASS hr.noShade: IDL set to "\0" followed by IDL get 
PASS hr.noShade: IDL set to object "test-toString" should not throw 
PASS hr.noShade: IDL set to object "test-toString" followed by hasAttribute() 
PASS hr.noShade: IDL set to object "test-toString" followed by IDL get 
PASS hr.noShade: IDL set to object "test-valueOf" should not throw 
PASS hr.noShade: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS hr.noShade: IDL set to object "test-valueOf" followed by IDL get 
PASS hr.size: typeof IDL attribute 
PASS hr.size: IDL get with DOM attribute unset 
PASS hr.size: setAttribute() to "" followed by getAttribute() 
PASS hr.size: setAttribute() to "" followed by IDL get 
PASS hr.size: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.size: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.size: setAttribute() to undefined followed by getAttribute() 
PASS hr.size: setAttribute() to undefined followed by IDL get 
PASS hr.size: setAttribute() to 7 followed by getAttribute() 
PASS hr.size: setAttribute() to 7 followed by IDL get 
PASS hr.size: setAttribute() to 1.5 followed by getAttribute() 
PASS hr.size: setAttribute() to 1.5 followed by IDL get 
PASS hr.size: setAttribute() to true followed by getAttribute() 
PASS hr.size: setAttribute() to true followed by IDL get 
PASS hr.size: setAttribute() to false followed by getAttribute() 
PASS hr.size: setAttribute() to false followed by IDL get 
PASS hr.size: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hr.size: setAttribute() to object "[object Object]" followed by IDL get 
PASS hr.size: setAttribute() to NaN followed by getAttribute() 
PASS hr.size: setAttribute() to NaN followed by IDL get 
PASS hr.size: setAttribute() to Infinity followed by getAttribute() 
PASS hr.size: setAttribute() to Infinity followed by IDL get 
PASS hr.size: setAttribute() to -Infinity followed by getAttribute() 
PASS hr.size: setAttribute() to -Infinity followed by IDL get 
PASS hr.size: setAttribute() to "\0" followed by getAttribute() 
PASS hr.size: setAttribute() to "\0" followed by IDL get 
PASS hr.size: setAttribute() to null followed by getAttribute() 
PASS hr.size: setAttribute() to null followed by IDL get 
PASS hr.size: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hr.size: setAttribute() to object "test-toString" followed by IDL get 
PASS hr.size: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hr.size: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hr.size: IDL set to "" should not throw 
PASS hr.size: IDL set to "" followed by getAttribute() 
PASS hr.size: IDL set to "" followed by IDL get 
PASS hr.size: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hr.size: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.size: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.size: IDL set to undefined should not throw 
PASS hr.size: IDL set to undefined followed by getAttribute() 
PASS hr.size: IDL set to undefined followed by IDL get 
PASS hr.size: IDL set to 7 should not throw 
PASS hr.size: IDL set to 7 followed by getAttribute() 
PASS hr.size: IDL set to 7 followed by IDL get 
PASS hr.size: IDL set to 1.5 should not throw 
PASS hr.size: IDL set to 1.5 followed by getAttribute() 
PASS hr.size: IDL set to 1.5 followed by IDL get 
PASS hr.size: IDL set to true should not throw 
PASS hr.size: IDL set to true followed by getAttribute() 
PASS hr.size: IDL set to true followed by IDL get 
PASS hr.size: IDL set to false should not throw 
PASS hr.size: IDL set to false followed by getAttribute() 
PASS hr.size: IDL set to false followed by IDL get 
PASS hr.size: IDL set to object "[object Object]" should not throw 
PASS hr.size: IDL set to object "[object Object]" followed by getAttribute() 
PASS hr.size: IDL set to object "[object Object]" followed by IDL get 
PASS hr.size: IDL set to NaN should not throw 
PASS hr.size: IDL set to NaN followed by getAttribute() 
PASS hr.size: IDL set to NaN followed by IDL get 
PASS hr.size: IDL set to Infinity should not throw 
PASS hr.size: IDL set to Infinity followed by getAttribute() 
PASS hr.size: IDL set to Infinity followed by IDL get 
PASS hr.size: IDL set to -Infinity should not throw 
PASS hr.size: IDL set to -Infinity followed by getAttribute() 
PASS hr.size: IDL set to -Infinity followed by IDL get 
PASS hr.size: IDL set to "\0" should not throw 
PASS hr.size: IDL set to "\0" followed by getAttribute() 
PASS hr.size: IDL set to "\0" followed by IDL get 
PASS hr.size: IDL set to null should not throw 
PASS hr.size: IDL set to null followed by getAttribute() 
PASS hr.size: IDL set to null followed by IDL get 
PASS hr.size: IDL set to object "test-toString" should not throw 
PASS hr.size: IDL set to object "test-toString" followed by getAttribute() 
PASS hr.size: IDL set to object "test-toString" followed by IDL get 
PASS hr.size: IDL set to object "test-valueOf" should not throw 
PASS hr.size: IDL set to object "test-valueOf" followed by getAttribute() 
PASS hr.size: IDL set to object "test-valueOf" followed by IDL get 
PASS hr.width: typeof IDL attribute 
PASS hr.width: IDL get with DOM attribute unset 
PASS hr.width: setAttribute() to "" followed by getAttribute() 
PASS hr.width: setAttribute() to "" followed by IDL get 
PASS hr.width: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.width: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.width: setAttribute() to undefined followed by getAttribute() 
PASS hr.width: setAttribute() to undefined followed by IDL get 
PASS hr.width: setAttribute() to 7 followed by getAttribute() 
PASS hr.width: setAttribute() to 7 followed by IDL get 
PASS hr.width: setAttribute() to 1.5 followed by getAttribute() 
PASS hr.width: setAttribute() to 1.5 followed by IDL get 
PASS hr.width: setAttribute() to true followed by getAttribute() 
PASS hr.width: setAttribute() to true followed by IDL get 
PASS hr.width: setAttribute() to false followed by getAttribute() 
PASS hr.width: setAttribute() to false followed by IDL get 
PASS hr.width: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hr.width: setAttribute() to object "[object Object]" followed by IDL get 
PASS hr.width: setAttribute() to NaN followed by getAttribute() 
PASS hr.width: setAttribute() to NaN followed by IDL get 
PASS hr.width: setAttribute() to Infinity followed by getAttribute() 
PASS hr.width: setAttribute() to Infinity followed by IDL get 
PASS hr.width: setAttribute() to -Infinity followed by getAttribute() 
PASS hr.width: setAttribute() to -Infinity followed by IDL get 
PASS hr.width: setAttribute() to "\0" followed by getAttribute() 
PASS hr.width: setAttribute() to "\0" followed by IDL get 
PASS hr.width: setAttribute() to null followed by getAttribute() 
PASS hr.width: setAttribute() to null followed by IDL get 
PASS hr.width: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hr.width: setAttribute() to object "test-toString" followed by IDL get 
PASS hr.width: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hr.width: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hr.width: IDL set to "" should not throw 
PASS hr.width: IDL set to "" followed by getAttribute() 
PASS hr.width: IDL set to "" followed by IDL get 
PASS hr.width: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hr.width: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hr.width: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hr.width: IDL set to undefined should not throw 
PASS hr.width: IDL set to undefined followed by getAttribute() 
PASS hr.width: IDL set to undefined followed by IDL get 
PASS hr.width: IDL set to 7 should not throw 
PASS hr.width: IDL set to 7 followed by getAttribute() 
PASS hr.width: IDL set to 7 followed by IDL get 
PASS hr.width: IDL set to 1.5 should not throw 
PASS hr.width: IDL set to 1.5 followed by getAttribute() 
PASS hr.width: IDL set to 1.5 followed by IDL get 
PASS hr.width: IDL set to true should not throw 
PASS hr.width: IDL set to true followed by getAttribute() 
PASS hr.width: IDL set to true followed by IDL get 
PASS hr.width: IDL set to false should not throw 
PASS hr.width: IDL set to false followed by getAttribute() 
PASS hr.width: IDL set to false followed by IDL get 
PASS hr.width: IDL set to object "[object Object]" should not throw 
PASS hr.width: IDL set to object "[object Object]" followed by getAttribute() 
PASS hr.width: IDL set to object "[object Object]" followed by IDL get 
PASS hr.width: IDL set to NaN should not throw 
PASS hr.width: IDL set to NaN followed by getAttribute() 
PASS hr.width: IDL set to NaN followed by IDL get 
PASS hr.width: IDL set to Infinity should not throw 
PASS hr.width: IDL set to Infinity followed by getAttribute() 
PASS hr.width: IDL set to Infinity followed by IDL get 
PASS hr.width: IDL set to -Infinity should not throw 
PASS hr.width: IDL set to -Infinity followed by getAttribute() 
PASS hr.width: IDL set to -Infinity followed by IDL get 
PASS hr.width: IDL set to "\0" should not throw 
PASS hr.width: IDL set to "\0" followed by getAttribute() 
PASS hr.width: IDL set to "\0" followed by IDL get 
PASS hr.width: IDL set to null should not throw 
PASS hr.width: IDL set to null followed by getAttribute() 
PASS hr.width: IDL set to null followed by IDL get 
PASS hr.width: IDL set to object "test-toString" should not throw 
PASS hr.width: IDL set to object "test-toString" followed by getAttribute() 
PASS hr.width: IDL set to object "test-toString" followed by IDL get 
PASS hr.width: IDL set to object "test-valueOf" should not throw 
PASS hr.width: IDL set to object "test-valueOf" followed by getAttribute() 
PASS hr.width: IDL set to object "test-valueOf" followed by IDL get 
FAIL hr.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL hr.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS hr.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to null followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to true followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to false followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL hr.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hr.itemScope: IDL set to "" should not throw 
FAIL hr.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL hr.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS hr.itemScope: IDL set to " foo " should not throw 
PASS hr.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL hr.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS hr.itemScope: IDL set to undefined should not throw 
FAIL hr.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL hr.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS hr.itemScope: IDL set to null should not throw 
FAIL hr.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL hr.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS hr.itemScope: IDL set to 7 should not throw 
PASS hr.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL hr.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS hr.itemScope: IDL set to 1.5 should not throw 
PASS hr.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL hr.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS hr.itemScope: IDL set to true should not throw 
PASS hr.itemScope: IDL set to true followed by hasAttribute() 
PASS hr.itemScope: IDL set to true followed by IDL get 
PASS hr.itemScope: IDL set to false should not throw 
FAIL hr.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS hr.itemScope: IDL set to false followed by IDL get 
PASS hr.itemScope: IDL set to object "[object Object]" should not throw 
PASS hr.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL hr.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS hr.itemScope: IDL set to NaN should not throw 
FAIL hr.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL hr.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS hr.itemScope: IDL set to Infinity should not throw 
PASS hr.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL hr.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS hr.itemScope: IDL set to -Infinity should not throw 
PASS hr.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL hr.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS hr.itemScope: IDL set to "\0" should not throw 
PASS hr.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL hr.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS hr.itemScope: IDL set to object "test-toString" should not throw 
PASS hr.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL hr.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS hr.itemScope: IDL set to object "test-valueOf" should not throw 
PASS hr.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL hr.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL hr.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL hr.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS hr.itemId: setAttribute() to "" followed by getAttribute() 
FAIL hr.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS hr.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL hr.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS hr.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL hr.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS hr.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL hr.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS hr.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL hr.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS hr.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL hr.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS hr.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL hr.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS hr.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL hr.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS hr.itemId: setAttribute() to true followed by getAttribute() 
FAIL hr.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS hr.itemId: setAttribute() to false followed by getAttribute() 
FAIL hr.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS hr.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL hr.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS hr.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL hr.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS hr.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL hr.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS hr.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL hr.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS hr.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL hr.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS hr.itemId: setAttribute() to null followed by getAttribute() 
FAIL hr.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS hr.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL hr.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS hr.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL hr.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS hr.itemId: IDL set to "" should not throw 
FAIL hr.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL hr.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS hr.itemId: IDL set to " foo " should not throw 
FAIL hr.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL hr.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS hr.itemId: IDL set to "http://site.example/" should not throw 
FAIL hr.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS hr.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS hr.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL hr.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL hr.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS hr.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL hr.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL hr.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS hr.itemId: IDL set to undefined should not throw 
FAIL hr.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL hr.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS hr.itemId: IDL set to 7 should not throw 
FAIL hr.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL hr.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS hr.itemId: IDL set to 1.5 should not throw 
FAIL hr.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL hr.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS hr.itemId: IDL set to true should not throw 
FAIL hr.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL hr.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS hr.itemId: IDL set to false should not throw 
FAIL hr.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL hr.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS hr.itemId: IDL set to object "[object Object]" should not throw 
FAIL hr.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL hr.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS hr.itemId: IDL set to NaN should not throw 
FAIL hr.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL hr.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS hr.itemId: IDL set to Infinity should not throw 
FAIL hr.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL hr.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS hr.itemId: IDL set to -Infinity should not throw 
FAIL hr.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL hr.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS hr.itemId: IDL set to "\0" should not throw 
FAIL hr.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL hr.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS hr.itemId: IDL set to null should not throw 
FAIL hr.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL hr.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS hr.itemId: IDL set to object "test-toString" should not throw 
FAIL hr.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL hr.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS hr.itemId: IDL set to object "test-valueOf" should not throw 
PASS hr.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL hr.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS pre.title: typeof IDL attribute 
PASS pre.title: IDL get with DOM attribute unset 
PASS pre.title: setAttribute() to "" followed by getAttribute() 
PASS pre.title: setAttribute() to "" followed by IDL get 
PASS pre.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS pre.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS pre.title: setAttribute() to undefined followed by getAttribute() 
PASS pre.title: setAttribute() to undefined followed by IDL get 
PASS pre.title: setAttribute() to 7 followed by getAttribute() 
PASS pre.title: setAttribute() to 7 followed by IDL get 
PASS pre.title: setAttribute() to 1.5 followed by getAttribute() 
PASS pre.title: setAttribute() to 1.5 followed by IDL get 
PASS pre.title: setAttribute() to true followed by getAttribute() 
PASS pre.title: setAttribute() to true followed by IDL get 
PASS pre.title: setAttribute() to false followed by getAttribute() 
PASS pre.title: setAttribute() to false followed by IDL get 
PASS pre.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS pre.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS pre.title: setAttribute() to NaN followed by getAttribute() 
PASS pre.title: setAttribute() to NaN followed by IDL get 
PASS pre.title: setAttribute() to Infinity followed by getAttribute() 
PASS pre.title: setAttribute() to Infinity followed by IDL get 
PASS pre.title: setAttribute() to -Infinity followed by getAttribute() 
PASS pre.title: setAttribute() to -Infinity followed by IDL get 
PASS pre.title: setAttribute() to "\0" followed by getAttribute() 
PASS pre.title: setAttribute() to "\0" followed by IDL get 
PASS pre.title: setAttribute() to null followed by getAttribute() 
PASS pre.title: setAttribute() to null followed by IDL get 
PASS pre.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS pre.title: setAttribute() to object "test-toString" followed by IDL get 
PASS pre.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS pre.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS pre.title: IDL set to "" should not throw 
PASS pre.title: IDL set to "" followed by getAttribute() 
PASS pre.title: IDL set to "" followed by IDL get 
PASS pre.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS pre.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS pre.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS pre.title: IDL set to undefined should not throw 
PASS pre.title: IDL set to undefined followed by getAttribute() 
PASS pre.title: IDL set to undefined followed by IDL get 
PASS pre.title: IDL set to 7 should not throw 
PASS pre.title: IDL set to 7 followed by getAttribute() 
PASS pre.title: IDL set to 7 followed by IDL get 
PASS pre.title: IDL set to 1.5 should not throw 
PASS pre.title: IDL set to 1.5 followed by getAttribute() 
PASS pre.title: IDL set to 1.5 followed by IDL get 
PASS pre.title: IDL set to true should not throw 
PASS pre.title: IDL set to true followed by getAttribute() 
PASS pre.title: IDL set to true followed by IDL get 
PASS pre.title: IDL set to false should not throw 
PASS pre.title: IDL set to false followed by getAttribute() 
PASS pre.title: IDL set to false followed by IDL get 
PASS pre.title: IDL set to object "[object Object]" should not throw 
PASS pre.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS pre.title: IDL set to object "[object Object]" followed by IDL get 
PASS pre.title: IDL set to NaN should not throw 
PASS pre.title: IDL set to NaN followed by getAttribute() 
PASS pre.title: IDL set to NaN followed by IDL get 
PASS pre.title: IDL set to Infinity should not throw 
PASS pre.title: IDL set to Infinity followed by getAttribute() 
PASS pre.title: IDL set to Infinity followed by IDL get 
PASS pre.title: IDL set to -Infinity should not throw 
PASS pre.title: IDL set to -Infinity followed by getAttribute() 
PASS pre.title: IDL set to -Infinity followed by IDL get 
PASS pre.title: IDL set to "\0" should not throw 
PASS pre.title: IDL set to "\0" followed by getAttribute() 
PASS pre.title: IDL set to "\0" followed by IDL get 
PASS pre.title: IDL set to null should not throw 
PASS pre.title: IDL set to null followed by getAttribute() 
PASS pre.title: IDL set to null followed by IDL get 
PASS pre.title: IDL set to object "test-toString" should not throw 
PASS pre.title: IDL set to object "test-toString" followed by getAttribute() 
PASS pre.title: IDL set to object "test-toString" followed by IDL get 
PASS pre.title: IDL set to object "test-valueOf" should not throw 
PASS pre.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS pre.title: IDL set to object "test-valueOf" followed by IDL get 
PASS pre.lang: typeof IDL attribute 
PASS pre.lang: IDL get with DOM attribute unset 
PASS pre.lang: setAttribute() to "" followed by getAttribute() 
PASS pre.lang: setAttribute() to "" followed by IDL get 
PASS pre.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS pre.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS pre.lang: setAttribute() to undefined followed by getAttribute() 
PASS pre.lang: setAttribute() to undefined followed by IDL get 
PASS pre.lang: setAttribute() to 7 followed by getAttribute() 
PASS pre.lang: setAttribute() to 7 followed by IDL get 
PASS pre.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS pre.lang: setAttribute() to 1.5 followed by IDL get 
PASS pre.lang: setAttribute() to true followed by getAttribute() 
PASS pre.lang: setAttribute() to true followed by IDL get 
PASS pre.lang: setAttribute() to false followed by getAttribute() 
PASS pre.lang: setAttribute() to false followed by IDL get 
PASS pre.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS pre.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS pre.lang: setAttribute() to NaN followed by getAttribute() 
PASS pre.lang: setAttribute() to NaN followed by IDL get 
PASS pre.lang: setAttribute() to Infinity followed by getAttribute() 
PASS pre.lang: setAttribute() to Infinity followed by IDL get 
PASS pre.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS pre.lang: setAttribute() to -Infinity followed by IDL get 
PASS pre.lang: setAttribute() to "\0" followed by getAttribute() 
PASS pre.lang: setAttribute() to "\0" followed by IDL get 
PASS pre.lang: setAttribute() to null followed by getAttribute() 
PASS pre.lang: setAttribute() to null followed by IDL get 
PASS pre.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS pre.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS pre.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS pre.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS pre.lang: IDL set to "" should not throw 
PASS pre.lang: IDL set to "" followed by getAttribute() 
PASS pre.lang: IDL set to "" followed by IDL get 
PASS pre.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS pre.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS pre.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS pre.lang: IDL set to undefined should not throw 
PASS pre.lang: IDL set to undefined followed by getAttribute() 
PASS pre.lang: IDL set to undefined followed by IDL get 
PASS pre.lang: IDL set to 7 should not throw 
PASS pre.lang: IDL set to 7 followed by getAttribute() 
PASS pre.lang: IDL set to 7 followed by IDL get 
PASS pre.lang: IDL set to 1.5 should not throw 
PASS pre.lang: IDL set to 1.5 followed by getAttribute() 
PASS pre.lang: IDL set to 1.5 followed by IDL get 
PASS pre.lang: IDL set to true should not throw 
PASS pre.lang: IDL set to true followed by getAttribute() 
PASS pre.lang: IDL set to true followed by IDL get 
PASS pre.lang: IDL set to false should not throw 
PASS pre.lang: IDL set to false followed by getAttribute() 
PASS pre.lang: IDL set to false followed by IDL get 
PASS pre.lang: IDL set to object "[object Object]" should not throw 
PASS pre.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS pre.lang: IDL set to object "[object Object]" followed by IDL get 
PASS pre.lang: IDL set to NaN should not throw 
PASS pre.lang: IDL set to NaN followed by getAttribute() 
PASS pre.lang: IDL set to NaN followed by IDL get 
PASS pre.lang: IDL set to Infinity should not throw 
PASS pre.lang: IDL set to Infinity followed by getAttribute() 
PASS pre.lang: IDL set to Infinity followed by IDL get 
PASS pre.lang: IDL set to -Infinity should not throw 
PASS pre.lang: IDL set to -Infinity followed by getAttribute() 
PASS pre.lang: IDL set to -Infinity followed by IDL get 
PASS pre.lang: IDL set to "\0" should not throw 
PASS pre.lang: IDL set to "\0" followed by getAttribute() 
PASS pre.lang: IDL set to "\0" followed by IDL get 
PASS pre.lang: IDL set to null should not throw 
PASS pre.lang: IDL set to null followed by getAttribute() 
PASS pre.lang: IDL set to null followed by IDL get 
PASS pre.lang: IDL set to object "test-toString" should not throw 
PASS pre.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS pre.lang: IDL set to object "test-toString" followed by IDL get 
PASS pre.lang: IDL set to object "test-valueOf" should not throw 
PASS pre.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS pre.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS pre.dir: typeof IDL attribute 
PASS pre.dir: IDL get with DOM attribute unset 
PASS pre.dir: setAttribute() to "" followed by getAttribute() 
PASS pre.dir: setAttribute() to "" followed by IDL get 
PASS pre.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS pre.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS pre.dir: setAttribute() to undefined followed by getAttribute() 
PASS pre.dir: setAttribute() to undefined followed by IDL get 
PASS pre.dir: setAttribute() to 7 followed by getAttribute() 
PASS pre.dir: setAttribute() to 7 followed by IDL get 
PASS pre.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS pre.dir: setAttribute() to 1.5 followed by IDL get 
PASS pre.dir: setAttribute() to true followed by getAttribute() 
PASS pre.dir: setAttribute() to true followed by IDL get 
PASS pre.dir: setAttribute() to false followed by getAttribute() 
PASS pre.dir: setAttribute() to false followed by IDL get 
PASS pre.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS pre.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS pre.dir: setAttribute() to NaN followed by getAttribute() 
PASS pre.dir: setAttribute() to NaN followed by IDL get 
PASS pre.dir: setAttribute() to Infinity followed by getAttribute() 
PASS pre.dir: setAttribute() to Infinity followed by IDL get 
PASS pre.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS pre.dir: setAttribute() to -Infinity followed by IDL get 
PASS pre.dir: setAttribute() to "\0" followed by getAttribute() 
PASS pre.dir: setAttribute() to "\0" followed by IDL get 
PASS pre.dir: setAttribute() to null followed by getAttribute() 
PASS pre.dir: setAttribute() to null followed by IDL get 
PASS pre.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS pre.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS pre.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS pre.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS pre.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS pre.dir: setAttribute() to "ltr" followed by IDL get 
PASS pre.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS pre.dir: setAttribute() to "xltr" followed by IDL get 
PASS pre.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS pre.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS pre.dir: setAttribute() to "tr" followed by getAttribute() 
PASS pre.dir: setAttribute() to "tr" followed by IDL get 
PASS pre.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS pre.dir: setAttribute() to "LTR" followed by IDL get 
PASS pre.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS pre.dir: setAttribute() to "rtl" followed by IDL get 
PASS pre.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS pre.dir: setAttribute() to "xrtl" followed by IDL get 
PASS pre.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS pre.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS pre.dir: setAttribute() to "tl" followed by getAttribute() 
PASS pre.dir: setAttribute() to "tl" followed by IDL get 
PASS pre.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS pre.dir: setAttribute() to "RTL" followed by IDL get 
PASS pre.dir: setAttribute() to "auto" followed by getAttribute() 
PASS pre.dir: setAttribute() to "auto" followed by IDL get 
PASS pre.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS pre.dir: setAttribute() to "xauto" followed by IDL get 
PASS pre.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS pre.dir: setAttribute() to "auto\0" followed by IDL get 
PASS pre.dir: setAttribute() to "uto" followed by getAttribute() 
PASS pre.dir: setAttribute() to "uto" followed by IDL get 
PASS pre.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS pre.dir: setAttribute() to "AUTO" followed by IDL get 
PASS pre.dir: IDL set to "" should not throw 
PASS pre.dir: IDL set to "" followed by getAttribute() 
PASS pre.dir: IDL set to "" followed by IDL get 
PASS pre.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS pre.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS pre.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS pre.dir: IDL set to undefined should not throw 
PASS pre.dir: IDL set to undefined followed by getAttribute() 
PASS pre.dir: IDL set to undefined followed by IDL get 
PASS pre.dir: IDL set to 7 should not throw 
PASS pre.dir: IDL set to 7 followed by getAttribute() 
PASS pre.dir: IDL set to 7 followed by IDL get 
PASS pre.dir: IDL set to 1.5 should not throw 
PASS pre.dir: IDL set to 1.5 followed by getAttribute() 
PASS pre.dir: IDL set to 1.5 followed by IDL get 
PASS pre.dir: IDL set to true should not throw 
PASS pre.dir: IDL set to true followed by getAttribute() 
PASS pre.dir: IDL set to true followed by IDL get 
PASS pre.dir: IDL set to false should not throw 
PASS pre.dir: IDL set to false followed by getAttribute() 
PASS pre.dir: IDL set to false followed by IDL get 
PASS pre.dir: IDL set to object "[object Object]" should not throw 
PASS pre.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS pre.dir: IDL set to object "[object Object]" followed by IDL get 
PASS pre.dir: IDL set to NaN should not throw 
PASS pre.dir: IDL set to NaN followed by getAttribute() 
PASS pre.dir: IDL set to NaN followed by IDL get 
PASS pre.dir: IDL set to Infinity should not throw 
PASS pre.dir: IDL set to Infinity followed by getAttribute() 
PASS pre.dir: IDL set to Infinity followed by IDL get 
PASS pre.dir: IDL set to -Infinity should not throw 
PASS pre.dir: IDL set to -Infinity followed by getAttribute() 
PASS pre.dir: IDL set to -Infinity followed by IDL get 
PASS pre.dir: IDL set to "\0" should not throw 
PASS pre.dir: IDL set to "\0" followed by getAttribute() 
PASS pre.dir: IDL set to "\0" followed by IDL get 
PASS pre.dir: IDL set to null should not throw 
PASS pre.dir: IDL set to null followed by IDL get 
PASS pre.dir: IDL set to object "test-toString" should not throw 
PASS pre.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS pre.dir: IDL set to object "test-toString" followed by IDL get 
PASS pre.dir: IDL set to object "test-valueOf" should not throw 
PASS pre.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS pre.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS pre.dir: IDL set to "ltr" should not throw 
PASS pre.dir: IDL set to "ltr" followed by getAttribute() 
PASS pre.dir: IDL set to "ltr" followed by IDL get 
PASS pre.dir: IDL set to "xltr" should not throw 
PASS pre.dir: IDL set to "xltr" followed by getAttribute() 
PASS pre.dir: IDL set to "xltr" followed by IDL get 
PASS pre.dir: IDL set to "ltr\0" should not throw 
PASS pre.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS pre.dir: IDL set to "ltr\0" followed by IDL get 
PASS pre.dir: IDL set to "tr" should not throw 
PASS pre.dir: IDL set to "tr" followed by getAttribute() 
PASS pre.dir: IDL set to "tr" followed by IDL get 
PASS pre.dir: IDL set to "LTR" should not throw 
PASS pre.dir: IDL set to "LTR" followed by getAttribute() 
PASS pre.dir: IDL set to "LTR" followed by IDL get 
PASS pre.dir: IDL set to "rtl" should not throw 
PASS pre.dir: IDL set to "rtl" followed by getAttribute() 
PASS pre.dir: IDL set to "rtl" followed by IDL get 
PASS pre.dir: IDL set to "xrtl" should not throw 
PASS pre.dir: IDL set to "xrtl" followed by getAttribute() 
PASS pre.dir: IDL set to "xrtl" followed by IDL get 
PASS pre.dir: IDL set to "rtl\0" should not throw 
PASS pre.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS pre.dir: IDL set to "rtl\0" followed by IDL get 
PASS pre.dir: IDL set to "tl" should not throw 
PASS pre.dir: IDL set to "tl" followed by getAttribute() 
PASS pre.dir: IDL set to "tl" followed by IDL get 
PASS pre.dir: IDL set to "RTL" should not throw 
PASS pre.dir: IDL set to "RTL" followed by getAttribute() 
PASS pre.dir: IDL set to "RTL" followed by IDL get 
PASS pre.dir: IDL set to "auto" should not throw 
PASS pre.dir: IDL set to "auto" followed by getAttribute() 
PASS pre.dir: IDL set to "auto" followed by IDL get 
PASS pre.dir: IDL set to "xauto" should not throw 
PASS pre.dir: IDL set to "xauto" followed by getAttribute() 
PASS pre.dir: IDL set to "xauto" followed by IDL get 
PASS pre.dir: IDL set to "auto\0" should not throw 
PASS pre.dir: IDL set to "auto\0" followed by getAttribute() 
PASS pre.dir: IDL set to "auto\0" followed by IDL get 
PASS pre.dir: IDL set to "uto" should not throw 
PASS pre.dir: IDL set to "uto" followed by getAttribute() 
PASS pre.dir: IDL set to "uto" followed by IDL get 
PASS pre.dir: IDL set to "AUTO" should not throw 
PASS pre.dir: IDL set to "AUTO" followed by getAttribute() 
PASS pre.dir: IDL set to "AUTO" followed by IDL get 
PASS pre.className (<pre class>): typeof IDL attribute 
PASS pre.className (<pre class>): IDL get with DOM attribute unset 
PASS pre.className (<pre class>): setAttribute() to "" followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to "" followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to undefined followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to undefined followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to 7 followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to 7 followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to 1.5 followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to 1.5 followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to true followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to true followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to false followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to false followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to NaN followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to NaN followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to Infinity followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to Infinity followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to -Infinity followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to -Infinity followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to "\0" followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to "\0" followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to null followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to null followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to object "test-toString" followed by IDL get 
PASS pre.className (<pre class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS pre.className (<pre class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS pre.className (<pre class>): IDL set to "" should not throw 
PASS pre.className (<pre class>): IDL set to "" followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to "" followed by IDL get 
PASS pre.className (<pre class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS pre.className (<pre class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS pre.className (<pre class>): IDL set to undefined should not throw 
PASS pre.className (<pre class>): IDL set to undefined followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to undefined followed by IDL get 
PASS pre.className (<pre class>): IDL set to 7 should not throw 
PASS pre.className (<pre class>): IDL set to 7 followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to 7 followed by IDL get 
PASS pre.className (<pre class>): IDL set to 1.5 should not throw 
PASS pre.className (<pre class>): IDL set to 1.5 followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to 1.5 followed by IDL get 
PASS pre.className (<pre class>): IDL set to true should not throw 
PASS pre.className (<pre class>): IDL set to true followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to true followed by IDL get 
PASS pre.className (<pre class>): IDL set to false should not throw 
PASS pre.className (<pre class>): IDL set to false followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to false followed by IDL get 
PASS pre.className (<pre class>): IDL set to object "[object Object]" should not throw 
PASS pre.className (<pre class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to object "[object Object]" followed by IDL get 
PASS pre.className (<pre class>): IDL set to NaN should not throw 
PASS pre.className (<pre class>): IDL set to NaN followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to NaN followed by IDL get 
PASS pre.className (<pre class>): IDL set to Infinity should not throw 
PASS pre.className (<pre class>): IDL set to Infinity followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to Infinity followed by IDL get 
PASS pre.className (<pre class>): IDL set to -Infinity should not throw 
PASS pre.className (<pre class>): IDL set to -Infinity followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to -Infinity followed by IDL get 
PASS pre.className (<pre class>): IDL set to "\0" should not throw 
PASS pre.className (<pre class>): IDL set to "\0" followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to "\0" followed by IDL get 
PASS pre.className (<pre class>): IDL set to null should not throw 
PASS pre.className (<pre class>): IDL set to null followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to null followed by IDL get 
PASS pre.className (<pre class>): IDL set to object "test-toString" should not throw 
PASS pre.className (<pre class>): IDL set to object "test-toString" followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to object "test-toString" followed by IDL get 
PASS pre.className (<pre class>): IDL set to object "test-valueOf" should not throw 
PASS pre.className (<pre class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS pre.className (<pre class>): IDL set to object "test-valueOf" followed by IDL get 
PASS pre.hidden: typeof IDL attribute 
PASS pre.hidden: IDL get with DOM attribute unset 
PASS pre.hidden: setAttribute() to "" followed by getAttribute() 
PASS pre.hidden: setAttribute() to "" followed by IDL get 
PASS pre.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS pre.hidden: setAttribute() to " foo " followed by IDL get 
PASS pre.hidden: setAttribute() to undefined followed by getAttribute() 
PASS pre.hidden: setAttribute() to undefined followed by IDL get 
PASS pre.hidden: setAttribute() to null followed by getAttribute() 
PASS pre.hidden: setAttribute() to null followed by IDL get 
PASS pre.hidden: setAttribute() to 7 followed by getAttribute() 
PASS pre.hidden: setAttribute() to 7 followed by IDL get 
PASS pre.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS pre.hidden: setAttribute() to 1.5 followed by IDL get 
PASS pre.hidden: setAttribute() to true followed by getAttribute() 
PASS pre.hidden: setAttribute() to true followed by IDL get 
PASS pre.hidden: setAttribute() to false followed by getAttribute() 
PASS pre.hidden: setAttribute() to false followed by IDL get 
PASS pre.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS pre.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS pre.hidden: setAttribute() to NaN followed by getAttribute() 
PASS pre.hidden: setAttribute() to NaN followed by IDL get 
PASS pre.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS pre.hidden: setAttribute() to Infinity followed by IDL get 
PASS pre.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS pre.hidden: setAttribute() to -Infinity followed by IDL get 
PASS pre.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS pre.hidden: setAttribute() to "\0" followed by IDL get 
PASS pre.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS pre.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS pre.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS pre.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS pre.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS pre.hidden: setAttribute() to "hidden" followed by IDL get 
PASS pre.hidden: IDL set to "" should not throw 
PASS pre.hidden: IDL set to "" followed by hasAttribute() 
PASS pre.hidden: IDL set to "" followed by IDL get 
PASS pre.hidden: IDL set to " foo " should not throw 
PASS pre.hidden: IDL set to " foo " followed by hasAttribute() 
PASS pre.hidden: IDL set to " foo " followed by IDL get 
PASS pre.hidden: IDL set to undefined should not throw 
PASS pre.hidden: IDL set to undefined followed by hasAttribute() 
PASS pre.hidden: IDL set to undefined followed by IDL get 
PASS pre.hidden: IDL set to null should not throw 
PASS pre.hidden: IDL set to null followed by hasAttribute() 
PASS pre.hidden: IDL set to null followed by IDL get 
PASS pre.hidden: IDL set to 7 should not throw 
PASS pre.hidden: IDL set to 7 followed by hasAttribute() 
PASS pre.hidden: IDL set to 7 followed by IDL get 
PASS pre.hidden: IDL set to 1.5 should not throw 
PASS pre.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS pre.hidden: IDL set to 1.5 followed by IDL get 
PASS pre.hidden: IDL set to true should not throw 
PASS pre.hidden: IDL set to true followed by hasAttribute() 
PASS pre.hidden: IDL set to true followed by IDL get 
PASS pre.hidden: IDL set to false should not throw 
PASS pre.hidden: IDL set to false followed by hasAttribute() 
PASS pre.hidden: IDL set to false followed by IDL get 
PASS pre.hidden: IDL set to object "[object Object]" should not throw 
PASS pre.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS pre.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS pre.hidden: IDL set to NaN should not throw 
PASS pre.hidden: IDL set to NaN followed by hasAttribute() 
PASS pre.hidden: IDL set to NaN followed by IDL get 
PASS pre.hidden: IDL set to Infinity should not throw 
PASS pre.hidden: IDL set to Infinity followed by hasAttribute() 
PASS pre.hidden: IDL set to Infinity followed by IDL get 
PASS pre.hidden: IDL set to -Infinity should not throw 
PASS pre.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS pre.hidden: IDL set to -Infinity followed by IDL get 
PASS pre.hidden: IDL set to "\0" should not throw 
PASS pre.hidden: IDL set to "\0" followed by hasAttribute() 
PASS pre.hidden: IDL set to "\0" followed by IDL get 
PASS pre.hidden: IDL set to object "test-toString" should not throw 
PASS pre.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS pre.hidden: IDL set to object "test-toString" followed by IDL get 
PASS pre.hidden: IDL set to object "test-valueOf" should not throw 
PASS pre.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS pre.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS pre.accessKey: typeof IDL attribute 
PASS pre.accessKey: IDL get with DOM attribute unset 
PASS pre.accessKey: setAttribute() to "" followed by getAttribute() 
PASS pre.accessKey: setAttribute() to "" followed by IDL get 
PASS pre.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS pre.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS pre.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS pre.accessKey: setAttribute() to undefined followed by IDL get 
PASS pre.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS pre.accessKey: setAttribute() to 7 followed by IDL get 
PASS pre.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS pre.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS pre.accessKey: setAttribute() to true followed by getAttribute() 
PASS pre.accessKey: setAttribute() to true followed by IDL get 
PASS pre.accessKey: setAttribute() to false followed by getAttribute() 
PASS pre.accessKey: setAttribute() to false followed by IDL get 
PASS pre.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS pre.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS pre.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS pre.accessKey: setAttribute() to NaN followed by IDL get 
PASS pre.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS pre.accessKey: setAttribute() to Infinity followed by IDL get 
PASS pre.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS pre.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS pre.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS pre.accessKey: setAttribute() to "\0" followed by IDL get 
PASS pre.accessKey: setAttribute() to null followed by getAttribute() 
PASS pre.accessKey: setAttribute() to null followed by IDL get 
PASS pre.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS pre.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS pre.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS pre.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS pre.accessKey: IDL set to "" should not throw 
PASS pre.accessKey: IDL set to "" followed by getAttribute() 
PASS pre.accessKey: IDL set to "" followed by IDL get 
PASS pre.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS pre.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS pre.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS pre.accessKey: IDL set to undefined should not throw 
PASS pre.accessKey: IDL set to undefined followed by getAttribute() 
PASS pre.accessKey: IDL set to undefined followed by IDL get 
PASS pre.accessKey: IDL set to 7 should not throw 
PASS pre.accessKey: IDL set to 7 followed by getAttribute() 
PASS pre.accessKey: IDL set to 7 followed by IDL get 
PASS pre.accessKey: IDL set to 1.5 should not throw 
PASS pre.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS pre.accessKey: IDL set to 1.5 followed by IDL get 
PASS pre.accessKey: IDL set to true should not throw 
PASS pre.accessKey: IDL set to true followed by getAttribute() 
PASS pre.accessKey: IDL set to true followed by IDL get 
PASS pre.accessKey: IDL set to false should not throw 
PASS pre.accessKey: IDL set to false followed by getAttribute() 
PASS pre.accessKey: IDL set to false followed by IDL get 
PASS pre.accessKey: IDL set to object "[object Object]" should not throw 
PASS pre.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS pre.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS pre.accessKey: IDL set to NaN should not throw 
PASS pre.accessKey: IDL set to NaN followed by getAttribute() 
PASS pre.accessKey: IDL set to NaN followed by IDL get 
PASS pre.accessKey: IDL set to Infinity should not throw 
PASS pre.accessKey: IDL set to Infinity followed by getAttribute() 
PASS pre.accessKey: IDL set to Infinity followed by IDL get 
PASS pre.accessKey: IDL set to -Infinity should not throw 
PASS pre.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS pre.accessKey: IDL set to -Infinity followed by IDL get 
PASS pre.accessKey: IDL set to "\0" should not throw 
PASS pre.accessKey: IDL set to "\0" followed by getAttribute() 
PASS pre.accessKey: IDL set to "\0" followed by IDL get 
PASS pre.accessKey: IDL set to null should not throw 
PASS pre.accessKey: IDL set to null followed by getAttribute() 
PASS pre.accessKey: IDL set to null followed by IDL get 
PASS pre.accessKey: IDL set to object "test-toString" should not throw 
PASS pre.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS pre.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS pre.accessKey: IDL set to object "test-valueOf" should not throw 
PASS pre.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS pre.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS pre.tabIndex: typeof IDL attribute 
PASS pre.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to -36 followed by IDL get 
PASS pre.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to -1 followed by IDL get 
PASS pre.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to 0 followed by IDL get 
PASS pre.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to 1 followed by IDL get 
PASS pre.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS pre.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS pre.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS pre.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS pre.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to "0" followed by IDL get 
PASS pre.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to "1" followed by IDL get 
PASS pre.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS pre.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS pre.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS pre.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS pre.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS pre.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS pre.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS pre.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS pre.tabIndex: IDL set to -36 should not throw 
PASS pre.tabIndex: IDL set to -36 followed by getAttribute() 
PASS pre.tabIndex: IDL set to -36 followed by IDL get 
PASS pre.tabIndex: IDL set to -1 should not throw 
PASS pre.tabIndex: IDL set to -1 followed by getAttribute() 
PASS pre.tabIndex: IDL set to -1 followed by IDL get 
PASS pre.tabIndex: IDL set to 0 should not throw 
PASS pre.tabIndex: IDL set to 0 followed by getAttribute() 
PASS pre.tabIndex: IDL set to 0 followed by IDL get 
PASS pre.tabIndex: IDL set to 1 should not throw 
PASS pre.tabIndex: IDL set to 1 followed by getAttribute() 
PASS pre.tabIndex: IDL set to 1 followed by IDL get 
PASS pre.tabIndex: IDL set to 2147483647 should not throw 
PASS pre.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS pre.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS pre.tabIndex: IDL set to -2147483648 should not throw 
PASS pre.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS pre.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS pre.width: typeof IDL attribute 
PASS pre.width: IDL get with DOM attribute unset 
PASS pre.width: setAttribute() to -36 followed by getAttribute() 
PASS pre.width: setAttribute() to -36 followed by IDL get 
PASS pre.width: setAttribute() to -1 followed by getAttribute() 
PASS pre.width: setAttribute() to -1 followed by IDL get 
PASS pre.width: setAttribute() to 0 followed by getAttribute() 
PASS pre.width: setAttribute() to 0 followed by IDL get 
PASS pre.width: setAttribute() to 1 followed by getAttribute() 
PASS pre.width: setAttribute() to 1 followed by IDL get 
PASS pre.width: setAttribute() to 2147483647 followed by getAttribute() 
PASS pre.width: setAttribute() to 2147483647 followed by IDL get 
PASS pre.width: setAttribute() to -2147483648 followed by getAttribute() 
PASS pre.width: setAttribute() to -2147483648 followed by IDL get 
PASS pre.width: setAttribute() to 2147483648 followed by getAttribute() 
PASS pre.width: setAttribute() to 2147483648 followed by IDL get 
PASS pre.width: setAttribute() to -2147483649 followed by getAttribute() 
PASS pre.width: setAttribute() to -2147483649 followed by IDL get 
PASS pre.width: setAttribute() to 4294967295 followed by getAttribute() 
PASS pre.width: setAttribute() to 4294967295 followed by IDL get 
PASS pre.width: setAttribute() to 4294967296 followed by getAttribute() 
PASS pre.width: setAttribute() to 4294967296 followed by IDL get 
PASS pre.width: setAttribute() to "" followed by getAttribute() 
PASS pre.width: setAttribute() to "" followed by IDL get 
PASS pre.width: setAttribute() to "-1" followed by getAttribute() 
PASS pre.width: setAttribute() to "-1" followed by IDL get 
PASS pre.width: setAttribute() to "-0" followed by getAttribute() 
PASS pre.width: setAttribute() to "-0" followed by IDL get 
PASS pre.width: setAttribute() to "0" followed by getAttribute() 
PASS pre.width: setAttribute() to "0" followed by IDL get 
PASS pre.width: setAttribute() to "1" followed by getAttribute() 
PASS pre.width: setAttribute() to "1" followed by IDL get 
PASS pre.width: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS pre.width: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS pre.width: setAttribute() to "\t7" followed by getAttribute() 
PASS pre.width: setAttribute() to "\t7" followed by IDL get 
PASS pre.width: setAttribute() to "\v7" followed by getAttribute() 
PASS pre.width: setAttribute() to "\v7" followed by IDL get 
PASS pre.width: setAttribute() to "\f7" followed by getAttribute() 
PASS pre.width: setAttribute() to "\f7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to "﻿7" followed by getAttribute() 
PASS pre.width: setAttribute() to "﻿7" followed by IDL get 
PASS pre.width: setAttribute() to "\n7" followed by getAttribute() 
PASS pre.width: setAttribute() to "\n7" followed by IDL get 
PASS pre.width: setAttribute() to "\r7" followed by getAttribute() 
PASS pre.width: setAttribute() to "\r7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to "᠎7" followed by getAttribute() 
PASS pre.width: setAttribute() to "᠎7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to " 7" followed by getAttribute() 
PASS pre.width: setAttribute() to " 7" followed by IDL get 
PASS pre.width: setAttribute() to "　7" followed by getAttribute() 
PASS pre.width: setAttribute() to "　7" followed by IDL get 
PASS pre.width: setAttribute() to undefined followed by getAttribute() 
PASS pre.width: setAttribute() to undefined followed by IDL get 
PASS pre.width: setAttribute() to 1.5 followed by getAttribute() 
PASS pre.width: setAttribute() to 1.5 followed by IDL get 
PASS pre.width: setAttribute() to true followed by getAttribute() 
PASS pre.width: setAttribute() to true followed by IDL get 
PASS pre.width: setAttribute() to false followed by getAttribute() 
PASS pre.width: setAttribute() to false followed by IDL get 
PASS pre.width: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS pre.width: setAttribute() to object "[object Object]" followed by IDL get 
PASS pre.width: setAttribute() to NaN followed by getAttribute() 
PASS pre.width: setAttribute() to NaN followed by IDL get 
PASS pre.width: setAttribute() to Infinity followed by getAttribute() 
PASS pre.width: setAttribute() to Infinity followed by IDL get 
PASS pre.width: setAttribute() to -Infinity followed by getAttribute() 
PASS pre.width: setAttribute() to -Infinity followed by IDL get 
PASS pre.width: setAttribute() to "\0" followed by getAttribute() 
PASS pre.width: setAttribute() to "\0" followed by IDL get 
PASS pre.width: setAttribute() to object "2" followed by getAttribute() 
PASS pre.width: setAttribute() to object "2" followed by IDL get 
PASS pre.width: setAttribute() to object "3" followed by getAttribute() 
PASS pre.width: setAttribute() to object "3" followed by IDL get 
PASS pre.width: IDL set to -36 should not throw 
PASS pre.width: IDL set to -36 followed by getAttribute() 
PASS pre.width: IDL set to -36 followed by IDL get 
PASS pre.width: IDL set to -1 should not throw 
PASS pre.width: IDL set to -1 followed by getAttribute() 
PASS pre.width: IDL set to -1 followed by IDL get 
PASS pre.width: IDL set to 0 should not throw 
PASS pre.width: IDL set to 0 followed by getAttribute() 
PASS pre.width: IDL set to 0 followed by IDL get 
PASS pre.width: IDL set to 1 should not throw 
PASS pre.width: IDL set to 1 followed by getAttribute() 
PASS pre.width: IDL set to 1 followed by IDL get 
PASS pre.width: IDL set to 2147483647 should not throw 
PASS pre.width: IDL set to 2147483647 followed by getAttribute() 
PASS pre.width: IDL set to 2147483647 followed by IDL get 
PASS pre.width: IDL set to -2147483648 should not throw 
PASS pre.width: IDL set to -2147483648 followed by getAttribute() 
PASS pre.width: IDL set to -2147483648 followed by IDL get 
FAIL pre.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL pre.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS pre.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to null followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to true followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to false followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL pre.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS pre.itemScope: IDL set to "" should not throw 
FAIL pre.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL pre.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS pre.itemScope: IDL set to " foo " should not throw 
PASS pre.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL pre.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS pre.itemScope: IDL set to undefined should not throw 
FAIL pre.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL pre.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS pre.itemScope: IDL set to null should not throw 
FAIL pre.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL pre.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS pre.itemScope: IDL set to 7 should not throw 
PASS pre.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL pre.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS pre.itemScope: IDL set to 1.5 should not throw 
PASS pre.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL pre.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS pre.itemScope: IDL set to true should not throw 
PASS pre.itemScope: IDL set to true followed by hasAttribute() 
PASS pre.itemScope: IDL set to true followed by IDL get 
PASS pre.itemScope: IDL set to false should not throw 
FAIL pre.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS pre.itemScope: IDL set to false followed by IDL get 
PASS pre.itemScope: IDL set to object "[object Object]" should not throw 
PASS pre.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL pre.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS pre.itemScope: IDL set to NaN should not throw 
FAIL pre.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL pre.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS pre.itemScope: IDL set to Infinity should not throw 
PASS pre.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL pre.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS pre.itemScope: IDL set to -Infinity should not throw 
PASS pre.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL pre.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS pre.itemScope: IDL set to "\0" should not throw 
PASS pre.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL pre.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS pre.itemScope: IDL set to object "test-toString" should not throw 
PASS pre.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL pre.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS pre.itemScope: IDL set to object "test-valueOf" should not throw 
PASS pre.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL pre.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL pre.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL pre.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS pre.itemId: setAttribute() to "" followed by getAttribute() 
FAIL pre.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS pre.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL pre.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS pre.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL pre.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS pre.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL pre.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS pre.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL pre.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS pre.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL pre.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS pre.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL pre.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS pre.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL pre.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS pre.itemId: setAttribute() to true followed by getAttribute() 
FAIL pre.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS pre.itemId: setAttribute() to false followed by getAttribute() 
FAIL pre.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS pre.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL pre.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS pre.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL pre.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS pre.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL pre.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS pre.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL pre.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS pre.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL pre.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS pre.itemId: setAttribute() to null followed by getAttribute() 
FAIL pre.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS pre.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL pre.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS pre.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL pre.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS pre.itemId: IDL set to "" should not throw 
FAIL pre.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL pre.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS pre.itemId: IDL set to " foo " should not throw 
FAIL pre.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL pre.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS pre.itemId: IDL set to "http://site.example/" should not throw 
FAIL pre.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS pre.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS pre.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL pre.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL pre.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS pre.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL pre.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL pre.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS pre.itemId: IDL set to undefined should not throw 
FAIL pre.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL pre.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS pre.itemId: IDL set to 7 should not throw 
FAIL pre.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL pre.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS pre.itemId: IDL set to 1.5 should not throw 
FAIL pre.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL pre.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS pre.itemId: IDL set to true should not throw 
FAIL pre.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL pre.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS pre.itemId: IDL set to false should not throw 
FAIL pre.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL pre.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS pre.itemId: IDL set to object "[object Object]" should not throw 
FAIL pre.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL pre.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS pre.itemId: IDL set to NaN should not throw 
FAIL pre.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL pre.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS pre.itemId: IDL set to Infinity should not throw 
FAIL pre.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL pre.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS pre.itemId: IDL set to -Infinity should not throw 
FAIL pre.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL pre.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS pre.itemId: IDL set to "\0" should not throw 
FAIL pre.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL pre.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS pre.itemId: IDL set to null should not throw 
FAIL pre.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL pre.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS pre.itemId: IDL set to object "test-toString" should not throw 
FAIL pre.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL pre.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS pre.itemId: IDL set to object "test-valueOf" should not throw 
PASS pre.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL pre.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS blockquote.title: typeof IDL attribute 
PASS blockquote.title: IDL get with DOM attribute unset 
PASS blockquote.title: setAttribute() to "" followed by getAttribute() 
PASS blockquote.title: setAttribute() to "" followed by IDL get 
PASS blockquote.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS blockquote.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS blockquote.title: setAttribute() to undefined followed by getAttribute() 
PASS blockquote.title: setAttribute() to undefined followed by IDL get 
PASS blockquote.title: setAttribute() to 7 followed by getAttribute() 
PASS blockquote.title: setAttribute() to 7 followed by IDL get 
PASS blockquote.title: setAttribute() to 1.5 followed by getAttribute() 
PASS blockquote.title: setAttribute() to 1.5 followed by IDL get 
PASS blockquote.title: setAttribute() to true followed by getAttribute() 
PASS blockquote.title: setAttribute() to true followed by IDL get 
PASS blockquote.title: setAttribute() to false followed by getAttribute() 
PASS blockquote.title: setAttribute() to false followed by IDL get 
PASS blockquote.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS blockquote.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS blockquote.title: setAttribute() to NaN followed by getAttribute() 
PASS blockquote.title: setAttribute() to NaN followed by IDL get 
PASS blockquote.title: setAttribute() to Infinity followed by getAttribute() 
PASS blockquote.title: setAttribute() to Infinity followed by IDL get 
PASS blockquote.title: setAttribute() to -Infinity followed by getAttribute() 
PASS blockquote.title: setAttribute() to -Infinity followed by IDL get 
PASS blockquote.title: setAttribute() to "\0" followed by getAttribute() 
PASS blockquote.title: setAttribute() to "\0" followed by IDL get 
PASS blockquote.title: setAttribute() to null followed by getAttribute() 
PASS blockquote.title: setAttribute() to null followed by IDL get 
PASS blockquote.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS blockquote.title: setAttribute() to object "test-toString" followed by IDL get 
PASS blockquote.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS blockquote.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS blockquote.title: IDL set to "" should not throw 
PASS blockquote.title: IDL set to "" followed by getAttribute() 
PASS blockquote.title: IDL set to "" followed by IDL get 
PASS blockquote.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS blockquote.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS blockquote.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS blockquote.title: IDL set to undefined should not throw 
PASS blockquote.title: IDL set to undefined followed by getAttribute() 
PASS blockquote.title: IDL set to undefined followed by IDL get 
PASS blockquote.title: IDL set to 7 should not throw 
PASS blockquote.title: IDL set to 7 followed by getAttribute() 
PASS blockquote.title: IDL set to 7 followed by IDL get 
PASS blockquote.title: IDL set to 1.5 should not throw 
PASS blockquote.title: IDL set to 1.5 followed by getAttribute() 
PASS blockquote.title: IDL set to 1.5 followed by IDL get 
PASS blockquote.title: IDL set to true should not throw 
PASS blockquote.title: IDL set to true followed by getAttribute() 
PASS blockquote.title: IDL set to true followed by IDL get 
PASS blockquote.title: IDL set to false should not throw 
PASS blockquote.title: IDL set to false followed by getAttribute() 
PASS blockquote.title: IDL set to false followed by IDL get 
PASS blockquote.title: IDL set to object "[object Object]" should not throw 
PASS blockquote.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS blockquote.title: IDL set to object "[object Object]" followed by IDL get 
PASS blockquote.title: IDL set to NaN should not throw 
PASS blockquote.title: IDL set to NaN followed by getAttribute() 
PASS blockquote.title: IDL set to NaN followed by IDL get 
PASS blockquote.title: IDL set to Infinity should not throw 
PASS blockquote.title: IDL set to Infinity followed by getAttribute() 
PASS blockquote.title: IDL set to Infinity followed by IDL get 
PASS blockquote.title: IDL set to -Infinity should not throw 
PASS blockquote.title: IDL set to -Infinity followed by getAttribute() 
PASS blockquote.title: IDL set to -Infinity followed by IDL get 
PASS blockquote.title: IDL set to "\0" should not throw 
PASS blockquote.title: IDL set to "\0" followed by getAttribute() 
PASS blockquote.title: IDL set to "\0" followed by IDL get 
PASS blockquote.title: IDL set to null should not throw 
PASS blockquote.title: IDL set to null followed by getAttribute() 
PASS blockquote.title: IDL set to null followed by IDL get 
PASS blockquote.title: IDL set to object "test-toString" should not throw 
PASS blockquote.title: IDL set to object "test-toString" followed by getAttribute() 
PASS blockquote.title: IDL set to object "test-toString" followed by IDL get 
PASS blockquote.title: IDL set to object "test-valueOf" should not throw 
PASS blockquote.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS blockquote.title: IDL set to object "test-valueOf" followed by IDL get 
PASS blockquote.lang: typeof IDL attribute 
PASS blockquote.lang: IDL get with DOM attribute unset 
PASS blockquote.lang: setAttribute() to "" followed by getAttribute() 
PASS blockquote.lang: setAttribute() to "" followed by IDL get 
PASS blockquote.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS blockquote.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS blockquote.lang: setAttribute() to undefined followed by getAttribute() 
PASS blockquote.lang: setAttribute() to undefined followed by IDL get 
PASS blockquote.lang: setAttribute() to 7 followed by getAttribute() 
PASS blockquote.lang: setAttribute() to 7 followed by IDL get 
PASS blockquote.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS blockquote.lang: setAttribute() to 1.5 followed by IDL get 
PASS blockquote.lang: setAttribute() to true followed by getAttribute() 
PASS blockquote.lang: setAttribute() to true followed by IDL get 
PASS blockquote.lang: setAttribute() to false followed by getAttribute() 
PASS blockquote.lang: setAttribute() to false followed by IDL get 
PASS blockquote.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS blockquote.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS blockquote.lang: setAttribute() to NaN followed by getAttribute() 
PASS blockquote.lang: setAttribute() to NaN followed by IDL get 
PASS blockquote.lang: setAttribute() to Infinity followed by getAttribute() 
PASS blockquote.lang: setAttribute() to Infinity followed by IDL get 
PASS blockquote.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS blockquote.lang: setAttribute() to -Infinity followed by IDL get 
PASS blockquote.lang: setAttribute() to "\0" followed by getAttribute() 
PASS blockquote.lang: setAttribute() to "\0" followed by IDL get 
PASS blockquote.lang: setAttribute() to null followed by getAttribute() 
PASS blockquote.lang: setAttribute() to null followed by IDL get 
PASS blockquote.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS blockquote.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS blockquote.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS blockquote.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS blockquote.lang: IDL set to "" should not throw 
PASS blockquote.lang: IDL set to "" followed by getAttribute() 
PASS blockquote.lang: IDL set to "" followed by IDL get 
PASS blockquote.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS blockquote.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS blockquote.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS blockquote.lang: IDL set to undefined should not throw 
PASS blockquote.lang: IDL set to undefined followed by getAttribute() 
PASS blockquote.lang: IDL set to undefined followed by IDL get 
PASS blockquote.lang: IDL set to 7 should not throw 
PASS blockquote.lang: IDL set to 7 followed by getAttribute() 
PASS blockquote.lang: IDL set to 7 followed by IDL get 
PASS blockquote.lang: IDL set to 1.5 should not throw 
PASS blockquote.lang: IDL set to 1.5 followed by getAttribute() 
PASS blockquote.lang: IDL set to 1.5 followed by IDL get 
PASS blockquote.lang: IDL set to true should not throw 
PASS blockquote.lang: IDL set to true followed by getAttribute() 
PASS blockquote.lang: IDL set to true followed by IDL get 
PASS blockquote.lang: IDL set to false should not throw 
PASS blockquote.lang: IDL set to false followed by getAttribute() 
PASS blockquote.lang: IDL set to false followed by IDL get 
PASS blockquote.lang: IDL set to object "[object Object]" should not throw 
PASS blockquote.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS blockquote.lang: IDL set to object "[object Object]" followed by IDL get 
PASS blockquote.lang: IDL set to NaN should not throw 
PASS blockquote.lang: IDL set to NaN followed by getAttribute() 
PASS blockquote.lang: IDL set to NaN followed by IDL get 
PASS blockquote.lang: IDL set to Infinity should not throw 
PASS blockquote.lang: IDL set to Infinity followed by getAttribute() 
PASS blockquote.lang: IDL set to Infinity followed by IDL get 
PASS blockquote.lang: IDL set to -Infinity should not throw 
PASS blockquote.lang: IDL set to -Infinity followed by getAttribute() 
PASS blockquote.lang: IDL set to -Infinity followed by IDL get 
PASS blockquote.lang: IDL set to "\0" should not throw 
PASS blockquote.lang: IDL set to "\0" followed by getAttribute() 
PASS blockquote.lang: IDL set to "\0" followed by IDL get 
PASS blockquote.lang: IDL set to null should not throw 
PASS blockquote.lang: IDL set to null followed by getAttribute() 
PASS blockquote.lang: IDL set to null followed by IDL get 
PASS blockquote.lang: IDL set to object "test-toString" should not throw 
PASS blockquote.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS blockquote.lang: IDL set to object "test-toString" followed by IDL get 
PASS blockquote.lang: IDL set to object "test-valueOf" should not throw 
PASS blockquote.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS blockquote.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS blockquote.dir: typeof IDL attribute 
PASS blockquote.dir: IDL get with DOM attribute unset 
PASS blockquote.dir: setAttribute() to "" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "" followed by IDL get 
PASS blockquote.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS blockquote.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS blockquote.dir: setAttribute() to undefined followed by getAttribute() 
PASS blockquote.dir: setAttribute() to undefined followed by IDL get 
PASS blockquote.dir: setAttribute() to 7 followed by getAttribute() 
PASS blockquote.dir: setAttribute() to 7 followed by IDL get 
PASS blockquote.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS blockquote.dir: setAttribute() to 1.5 followed by IDL get 
PASS blockquote.dir: setAttribute() to true followed by getAttribute() 
PASS blockquote.dir: setAttribute() to true followed by IDL get 
PASS blockquote.dir: setAttribute() to false followed by getAttribute() 
PASS blockquote.dir: setAttribute() to false followed by IDL get 
PASS blockquote.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS blockquote.dir: setAttribute() to NaN followed by getAttribute() 
PASS blockquote.dir: setAttribute() to NaN followed by IDL get 
PASS blockquote.dir: setAttribute() to Infinity followed by getAttribute() 
PASS blockquote.dir: setAttribute() to Infinity followed by IDL get 
PASS blockquote.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS blockquote.dir: setAttribute() to -Infinity followed by IDL get 
PASS blockquote.dir: setAttribute() to "\0" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "\0" followed by IDL get 
PASS blockquote.dir: setAttribute() to null followed by getAttribute() 
PASS blockquote.dir: setAttribute() to null followed by IDL get 
PASS blockquote.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS blockquote.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS blockquote.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "ltr" followed by IDL get 
PASS blockquote.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "xltr" followed by IDL get 
PASS blockquote.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS blockquote.dir: setAttribute() to "tr" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "tr" followed by IDL get 
PASS blockquote.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "LTR" followed by IDL get 
PASS blockquote.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "rtl" followed by IDL get 
PASS blockquote.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "xrtl" followed by IDL get 
PASS blockquote.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS blockquote.dir: setAttribute() to "tl" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "tl" followed by IDL get 
PASS blockquote.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "RTL" followed by IDL get 
PASS blockquote.dir: setAttribute() to "auto" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "auto" followed by IDL get 
PASS blockquote.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "xauto" followed by IDL get 
PASS blockquote.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "auto\0" followed by IDL get 
PASS blockquote.dir: setAttribute() to "uto" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "uto" followed by IDL get 
PASS blockquote.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS blockquote.dir: setAttribute() to "AUTO" followed by IDL get 
PASS blockquote.dir: IDL set to "" should not throw 
PASS blockquote.dir: IDL set to "" followed by getAttribute() 
PASS blockquote.dir: IDL set to "" followed by IDL get 
PASS blockquote.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS blockquote.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS blockquote.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS blockquote.dir: IDL set to undefined should not throw 
PASS blockquote.dir: IDL set to undefined followed by getAttribute() 
PASS blockquote.dir: IDL set to undefined followed by IDL get 
PASS blockquote.dir: IDL set to 7 should not throw 
PASS blockquote.dir: IDL set to 7 followed by getAttribute() 
PASS blockquote.dir: IDL set to 7 followed by IDL get 
PASS blockquote.dir: IDL set to 1.5 should not throw 
PASS blockquote.dir: IDL set to 1.5 followed by getAttribute() 
PASS blockquote.dir: IDL set to 1.5 followed by IDL get 
PASS blockquote.dir: IDL set to true should not throw 
PASS blockquote.dir: IDL set to true followed by getAttribute() 
PASS blockquote.dir: IDL set to true followed by IDL get 
PASS blockquote.dir: IDL set to false should not throw 
PASS blockquote.dir: IDL set to false followed by getAttribute() 
PASS blockquote.dir: IDL set to false followed by IDL get 
PASS blockquote.dir: IDL set to object "[object Object]" should not throw 
PASS blockquote.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS blockquote.dir: IDL set to object "[object Object]" followed by IDL get 
PASS blockquote.dir: IDL set to NaN should not throw 
PASS blockquote.dir: IDL set to NaN followed by getAttribute() 
PASS blockquote.dir: IDL set to NaN followed by IDL get 
PASS blockquote.dir: IDL set to Infinity should not throw 
PASS blockquote.dir: IDL set to Infinity followed by getAttribute() 
PASS blockquote.dir: IDL set to Infinity followed by IDL get 
PASS blockquote.dir: IDL set to -Infinity should not throw 
PASS blockquote.dir: IDL set to -Infinity followed by getAttribute() 
PASS blockquote.dir: IDL set to -Infinity followed by IDL get 
PASS blockquote.dir: IDL set to "\0" should not throw 
PASS blockquote.dir: IDL set to "\0" followed by getAttribute() 
PASS blockquote.dir: IDL set to "\0" followed by IDL get 
PASS blockquote.dir: IDL set to null should not throw 
PASS blockquote.dir: IDL set to null followed by IDL get 
PASS blockquote.dir: IDL set to object "test-toString" should not throw 
PASS blockquote.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS blockquote.dir: IDL set to object "test-toString" followed by IDL get 
PASS blockquote.dir: IDL set to object "test-valueOf" should not throw 
PASS blockquote.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS blockquote.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS blockquote.dir: IDL set to "ltr" should not throw 
PASS blockquote.dir: IDL set to "ltr" followed by getAttribute() 
PASS blockquote.dir: IDL set to "ltr" followed by IDL get 
PASS blockquote.dir: IDL set to "xltr" should not throw 
PASS blockquote.dir: IDL set to "xltr" followed by getAttribute() 
PASS blockquote.dir: IDL set to "xltr" followed by IDL get 
PASS blockquote.dir: IDL set to "ltr\0" should not throw 
PASS blockquote.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS blockquote.dir: IDL set to "ltr\0" followed by IDL get 
PASS blockquote.dir: IDL set to "tr" should not throw 
PASS blockquote.dir: IDL set to "tr" followed by getAttribute() 
PASS blockquote.dir: IDL set to "tr" followed by IDL get 
PASS blockquote.dir: IDL set to "LTR" should not throw 
PASS blockquote.dir: IDL set to "LTR" followed by getAttribute() 
PASS blockquote.dir: IDL set to "LTR" followed by IDL get 
PASS blockquote.dir: IDL set to "rtl" should not throw 
PASS blockquote.dir: IDL set to "rtl" followed by getAttribute() 
PASS blockquote.dir: IDL set to "rtl" followed by IDL get 
PASS blockquote.dir: IDL set to "xrtl" should not throw 
PASS blockquote.dir: IDL set to "xrtl" followed by getAttribute() 
PASS blockquote.dir: IDL set to "xrtl" followed by IDL get 
PASS blockquote.dir: IDL set to "rtl\0" should not throw 
PASS blockquote.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS blockquote.dir: IDL set to "rtl\0" followed by IDL get 
PASS blockquote.dir: IDL set to "tl" should not throw 
PASS blockquote.dir: IDL set to "tl" followed by getAttribute() 
PASS blockquote.dir: IDL set to "tl" followed by IDL get 
PASS blockquote.dir: IDL set to "RTL" should not throw 
PASS blockquote.dir: IDL set to "RTL" followed by getAttribute() 
PASS blockquote.dir: IDL set to "RTL" followed by IDL get 
PASS blockquote.dir: IDL set to "auto" should not throw 
PASS blockquote.dir: IDL set to "auto" followed by getAttribute() 
PASS blockquote.dir: IDL set to "auto" followed by IDL get 
PASS blockquote.dir: IDL set to "xauto" should not throw 
PASS blockquote.dir: IDL set to "xauto" followed by getAttribute() 
PASS blockquote.dir: IDL set to "xauto" followed by IDL get 
PASS blockquote.dir: IDL set to "auto\0" should not throw 
PASS blockquote.dir: IDL set to "auto\0" followed by getAttribute() 
PASS blockquote.dir: IDL set to "auto\0" followed by IDL get 
PASS blockquote.dir: IDL set to "uto" should not throw 
PASS blockquote.dir: IDL set to "uto" followed by getAttribute() 
PASS blockquote.dir: IDL set to "uto" followed by IDL get 
PASS blockquote.dir: IDL set to "AUTO" should not throw 
PASS blockquote.dir: IDL set to "AUTO" followed by getAttribute() 
PASS blockquote.dir: IDL set to "AUTO" followed by IDL get 
PASS blockquote.className (<blockquote class>): typeof IDL attribute 
PASS blockquote.className (<blockquote class>): IDL get with DOM attribute unset 
PASS blockquote.className (<blockquote class>): setAttribute() to "" followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to "" followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to undefined followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to undefined followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to 7 followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to 7 followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to 1.5 followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to 1.5 followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to true followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to true followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to false followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to false followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to NaN followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to NaN followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to Infinity followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to Infinity followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to -Infinity followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to -Infinity followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to "\0" followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to "\0" followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to null followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to null followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to object "test-toString" followed by IDL get 
PASS blockquote.className (<blockquote class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS blockquote.className (<blockquote class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to "" should not throw 
PASS blockquote.className (<blockquote class>): IDL set to "" followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to "" followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS blockquote.className (<blockquote class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to undefined should not throw 
PASS blockquote.className (<blockquote class>): IDL set to undefined followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to undefined followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to 7 should not throw 
PASS blockquote.className (<blockquote class>): IDL set to 7 followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to 7 followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to 1.5 should not throw 
PASS blockquote.className (<blockquote class>): IDL set to 1.5 followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to 1.5 followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to true should not throw 
PASS blockquote.className (<blockquote class>): IDL set to true followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to true followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to false should not throw 
PASS blockquote.className (<blockquote class>): IDL set to false followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to false followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to object "[object Object]" should not throw 
PASS blockquote.className (<blockquote class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to object "[object Object]" followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to NaN should not throw 
PASS blockquote.className (<blockquote class>): IDL set to NaN followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to NaN followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to Infinity should not throw 
PASS blockquote.className (<blockquote class>): IDL set to Infinity followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to Infinity followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to -Infinity should not throw 
PASS blockquote.className (<blockquote class>): IDL set to -Infinity followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to -Infinity followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to "\0" should not throw 
PASS blockquote.className (<blockquote class>): IDL set to "\0" followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to "\0" followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to null should not throw 
PASS blockquote.className (<blockquote class>): IDL set to null followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to null followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to object "test-toString" should not throw 
PASS blockquote.className (<blockquote class>): IDL set to object "test-toString" followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to object "test-toString" followed by IDL get 
PASS blockquote.className (<blockquote class>): IDL set to object "test-valueOf" should not throw 
PASS blockquote.className (<blockquote class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS blockquote.className (<blockquote class>): IDL set to object "test-valueOf" followed by IDL get 
PASS blockquote.hidden: typeof IDL attribute 
PASS blockquote.hidden: IDL get with DOM attribute unset 
PASS blockquote.hidden: setAttribute() to "" followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to "" followed by IDL get 
PASS blockquote.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to " foo " followed by IDL get 
PASS blockquote.hidden: setAttribute() to undefined followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to undefined followed by IDL get 
PASS blockquote.hidden: setAttribute() to null followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to null followed by IDL get 
PASS blockquote.hidden: setAttribute() to 7 followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to 7 followed by IDL get 
PASS blockquote.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to 1.5 followed by IDL get 
PASS blockquote.hidden: setAttribute() to true followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to true followed by IDL get 
PASS blockquote.hidden: setAttribute() to false followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to false followed by IDL get 
PASS blockquote.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS blockquote.hidden: setAttribute() to NaN followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to NaN followed by IDL get 
PASS blockquote.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to Infinity followed by IDL get 
PASS blockquote.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to -Infinity followed by IDL get 
PASS blockquote.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to "\0" followed by IDL get 
PASS blockquote.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS blockquote.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS blockquote.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS blockquote.hidden: setAttribute() to "hidden" followed by IDL get 
PASS blockquote.hidden: IDL set to "" should not throw 
PASS blockquote.hidden: IDL set to "" followed by hasAttribute() 
PASS blockquote.hidden: IDL set to "" followed by IDL get 
PASS blockquote.hidden: IDL set to " foo " should not throw 
PASS blockquote.hidden: IDL set to " foo " followed by hasAttribute() 
PASS blockquote.hidden: IDL set to " foo " followed by IDL get 
PASS blockquote.hidden: IDL set to undefined should not throw 
PASS blockquote.hidden: IDL set to undefined followed by hasAttribute() 
PASS blockquote.hidden: IDL set to undefined followed by IDL get 
PASS blockquote.hidden: IDL set to null should not throw 
PASS blockquote.hidden: IDL set to null followed by hasAttribute() 
PASS blockquote.hidden: IDL set to null followed by IDL get 
PASS blockquote.hidden: IDL set to 7 should not throw 
PASS blockquote.hidden: IDL set to 7 followed by hasAttribute() 
PASS blockquote.hidden: IDL set to 7 followed by IDL get 
PASS blockquote.hidden: IDL set to 1.5 should not throw 
PASS blockquote.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS blockquote.hidden: IDL set to 1.5 followed by IDL get 
PASS blockquote.hidden: IDL set to true should not throw 
PASS blockquote.hidden: IDL set to true followed by hasAttribute() 
PASS blockquote.hidden: IDL set to true followed by IDL get 
PASS blockquote.hidden: IDL set to false should not throw 
PASS blockquote.hidden: IDL set to false followed by hasAttribute() 
PASS blockquote.hidden: IDL set to false followed by IDL get 
PASS blockquote.hidden: IDL set to object "[object Object]" should not throw 
PASS blockquote.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS blockquote.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS blockquote.hidden: IDL set to NaN should not throw 
PASS blockquote.hidden: IDL set to NaN followed by hasAttribute() 
PASS blockquote.hidden: IDL set to NaN followed by IDL get 
PASS blockquote.hidden: IDL set to Infinity should not throw 
PASS blockquote.hidden: IDL set to Infinity followed by hasAttribute() 
PASS blockquote.hidden: IDL set to Infinity followed by IDL get 
PASS blockquote.hidden: IDL set to -Infinity should not throw 
PASS blockquote.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS blockquote.hidden: IDL set to -Infinity followed by IDL get 
PASS blockquote.hidden: IDL set to "\0" should not throw 
PASS blockquote.hidden: IDL set to "\0" followed by hasAttribute() 
PASS blockquote.hidden: IDL set to "\0" followed by IDL get 
PASS blockquote.hidden: IDL set to object "test-toString" should not throw 
PASS blockquote.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS blockquote.hidden: IDL set to object "test-toString" followed by IDL get 
PASS blockquote.hidden: IDL set to object "test-valueOf" should not throw 
PASS blockquote.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS blockquote.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS blockquote.accessKey: typeof IDL attribute 
PASS blockquote.accessKey: IDL get with DOM attribute unset 
PASS blockquote.accessKey: setAttribute() to "" followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to "" followed by IDL get 
PASS blockquote.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS blockquote.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to undefined followed by IDL get 
PASS blockquote.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to 7 followed by IDL get 
PASS blockquote.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS blockquote.accessKey: setAttribute() to true followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to true followed by IDL get 
PASS blockquote.accessKey: setAttribute() to false followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to false followed by IDL get 
PASS blockquote.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS blockquote.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to NaN followed by IDL get 
PASS blockquote.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to Infinity followed by IDL get 
PASS blockquote.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS blockquote.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to "\0" followed by IDL get 
PASS blockquote.accessKey: setAttribute() to null followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to null followed by IDL get 
PASS blockquote.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS blockquote.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS blockquote.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS blockquote.accessKey: IDL set to "" should not throw 
PASS blockquote.accessKey: IDL set to "" followed by getAttribute() 
PASS blockquote.accessKey: IDL set to "" followed by IDL get 
PASS blockquote.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS blockquote.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS blockquote.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS blockquote.accessKey: IDL set to undefined should not throw 
PASS blockquote.accessKey: IDL set to undefined followed by getAttribute() 
PASS blockquote.accessKey: IDL set to undefined followed by IDL get 
PASS blockquote.accessKey: IDL set to 7 should not throw 
PASS blockquote.accessKey: IDL set to 7 followed by getAttribute() 
PASS blockquote.accessKey: IDL set to 7 followed by IDL get 
PASS blockquote.accessKey: IDL set to 1.5 should not throw 
PASS blockquote.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS blockquote.accessKey: IDL set to 1.5 followed by IDL get 
PASS blockquote.accessKey: IDL set to true should not throw 
PASS blockquote.accessKey: IDL set to true followed by getAttribute() 
PASS blockquote.accessKey: IDL set to true followed by IDL get 
PASS blockquote.accessKey: IDL set to false should not throw 
PASS blockquote.accessKey: IDL set to false followed by getAttribute() 
PASS blockquote.accessKey: IDL set to false followed by IDL get 
PASS blockquote.accessKey: IDL set to object "[object Object]" should not throw 
PASS blockquote.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS blockquote.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS blockquote.accessKey: IDL set to NaN should not throw 
PASS blockquote.accessKey: IDL set to NaN followed by getAttribute() 
PASS blockquote.accessKey: IDL set to NaN followed by IDL get 
PASS blockquote.accessKey: IDL set to Infinity should not throw 
PASS blockquote.accessKey: IDL set to Infinity followed by getAttribute() 
PASS blockquote.accessKey: IDL set to Infinity followed by IDL get 
PASS blockquote.accessKey: IDL set to -Infinity should not throw 
PASS blockquote.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS blockquote.accessKey: IDL set to -Infinity followed by IDL get 
PASS blockquote.accessKey: IDL set to "\0" should not throw 
PASS blockquote.accessKey: IDL set to "\0" followed by getAttribute() 
PASS blockquote.accessKey: IDL set to "\0" followed by IDL get 
PASS blockquote.accessKey: IDL set to null should not throw 
PASS blockquote.accessKey: IDL set to null followed by getAttribute() 
PASS blockquote.accessKey: IDL set to null followed by IDL get 
PASS blockquote.accessKey: IDL set to object "test-toString" should not throw 
PASS blockquote.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS blockquote.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS blockquote.accessKey: IDL set to object "test-valueOf" should not throw 
PASS blockquote.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS blockquote.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS blockquote.tabIndex: typeof IDL attribute 
PASS blockquote.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to -36 followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to -1 followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to 0 followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to 1 followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to "0" followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to "1" followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS blockquote.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS blockquote.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS blockquote.tabIndex: IDL set to -36 should not throw 
PASS blockquote.tabIndex: IDL set to -36 followed by getAttribute() 
PASS blockquote.tabIndex: IDL set to -36 followed by IDL get 
PASS blockquote.tabIndex: IDL set to -1 should not throw 
PASS blockquote.tabIndex: IDL set to -1 followed by getAttribute() 
PASS blockquote.tabIndex: IDL set to -1 followed by IDL get 
PASS blockquote.tabIndex: IDL set to 0 should not throw 
PASS blockquote.tabIndex: IDL set to 0 followed by getAttribute() 
PASS blockquote.tabIndex: IDL set to 0 followed by IDL get 
PASS blockquote.tabIndex: IDL set to 1 should not throw 
PASS blockquote.tabIndex: IDL set to 1 followed by getAttribute() 
PASS blockquote.tabIndex: IDL set to 1 followed by IDL get 
PASS blockquote.tabIndex: IDL set to 2147483647 should not throw 
PASS blockquote.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS blockquote.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS blockquote.tabIndex: IDL set to -2147483648 should not throw 
PASS blockquote.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS blockquote.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS blockquote.cite: typeof IDL attribute 
PASS blockquote.cite: IDL get with DOM attribute unset 
PASS blockquote.cite: setAttribute() to "" followed by getAttribute() 
PASS blockquote.cite: setAttribute() to "" followed by IDL get 
PASS blockquote.cite: setAttribute() to " foo " followed by getAttribute() 
PASS blockquote.cite: setAttribute() to " foo " followed by IDL get 
PASS blockquote.cite: setAttribute() to "http://site.example/" followed by getAttribute() 
PASS blockquote.cite: setAttribute() to "http://site.example/" followed by IDL get 
PASS blockquote.cite: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
PASS blockquote.cite: setAttribute() to "//site.example/path???@#l" followed by IDL get 
PASS blockquote.cite: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS blockquote.cite: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS blockquote.cite: setAttribute() to undefined followed by getAttribute() 
PASS blockquote.cite: setAttribute() to undefined followed by IDL get 
PASS blockquote.cite: setAttribute() to 7 followed by getAttribute() 
PASS blockquote.cite: setAttribute() to 7 followed by IDL get 
PASS blockquote.cite: setAttribute() to 1.5 followed by getAttribute() 
PASS blockquote.cite: setAttribute() to 1.5 followed by IDL get 
PASS blockquote.cite: setAttribute() to true followed by getAttribute() 
PASS blockquote.cite: setAttribute() to true followed by IDL get 
PASS blockquote.cite: setAttribute() to false followed by getAttribute() 
PASS blockquote.cite: setAttribute() to false followed by IDL get 
PASS blockquote.cite: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS blockquote.cite: setAttribute() to object "[object Object]" followed by IDL get 
PASS blockquote.cite: setAttribute() to NaN followed by getAttribute() 
PASS blockquote.cite: setAttribute() to NaN followed by IDL get 
PASS blockquote.cite: setAttribute() to Infinity followed by getAttribute() 
PASS blockquote.cite: setAttribute() to Infinity followed by IDL get 
PASS blockquote.cite: setAttribute() to -Infinity followed by getAttribute() 
PASS blockquote.cite: setAttribute() to -Infinity followed by IDL get 
PASS blockquote.cite: setAttribute() to "\0" followed by getAttribute() 
PASS blockquote.cite: setAttribute() to "\0" followed by IDL get 
PASS blockquote.cite: setAttribute() to null followed by getAttribute() 
PASS blockquote.cite: setAttribute() to null followed by IDL get 
PASS blockquote.cite: setAttribute() to object "test-toString" followed by getAttribute() 
PASS blockquote.cite: setAttribute() to object "test-toString" followed by IDL get 
PASS blockquote.cite: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS blockquote.cite: setAttribute() to object "test-valueOf" followed by IDL get 
PASS blockquote.cite: IDL set to "" should not throw 
PASS blockquote.cite: IDL set to "" followed by getAttribute() 
PASS blockquote.cite: IDL set to "" followed by IDL get 
PASS blockquote.cite: IDL set to " foo " should not throw 
PASS blockquote.cite: IDL set to " foo " followed by getAttribute() 
PASS blockquote.cite: IDL set to " foo " followed by IDL get 
PASS blockquote.cite: IDL set to "http://site.example/" should not throw 
PASS blockquote.cite: IDL set to "http://site.example/" followed by getAttribute() 
PASS blockquote.cite: IDL set to "http://site.example/" followed by IDL get 
PASS blockquote.cite: IDL set to "//site.example/path???@#l" should not throw 
PASS blockquote.cite: IDL set to "//site.example/path???@#l" followed by getAttribute() 
PASS blockquote.cite: IDL set to "//site.example/path???@#l" followed by IDL get 
PASS blockquote.cite: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
PASS blockquote.cite: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS blockquote.cite: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS blockquote.cite: IDL set to undefined should not throw 
PASS blockquote.cite: IDL set to undefined followed by getAttribute() 
PASS blockquote.cite: IDL set to undefined followed by IDL get 
PASS blockquote.cite: IDL set to 7 should not throw 
PASS blockquote.cite: IDL set to 7 followed by getAttribute() 
PASS blockquote.cite: IDL set to 7 followed by IDL get 
PASS blockquote.cite: IDL set to 1.5 should not throw 
PASS blockquote.cite: IDL set to 1.5 followed by getAttribute() 
PASS blockquote.cite: IDL set to 1.5 followed by IDL get 
PASS blockquote.cite: IDL set to true should not throw 
PASS blockquote.cite: IDL set to true followed by getAttribute() 
PASS blockquote.cite: IDL set to true followed by IDL get 
PASS blockquote.cite: IDL set to false should not throw 
PASS blockquote.cite: IDL set to false followed by getAttribute() 
PASS blockquote.cite: IDL set to false followed by IDL get 
PASS blockquote.cite: IDL set to object "[object Object]" should not throw 
PASS blockquote.cite: IDL set to object "[object Object]" followed by getAttribute() 
PASS blockquote.cite: IDL set to object "[object Object]" followed by IDL get 
PASS blockquote.cite: IDL set to NaN should not throw 
PASS blockquote.cite: IDL set to NaN followed by getAttribute() 
PASS blockquote.cite: IDL set to NaN followed by IDL get 
PASS blockquote.cite: IDL set to Infinity should not throw 
PASS blockquote.cite: IDL set to Infinity followed by getAttribute() 
PASS blockquote.cite: IDL set to Infinity followed by IDL get 
PASS blockquote.cite: IDL set to -Infinity should not throw 
PASS blockquote.cite: IDL set to -Infinity followed by getAttribute() 
PASS blockquote.cite: IDL set to -Infinity followed by IDL get 
PASS blockquote.cite: IDL set to "\0" should not throw 
PASS blockquote.cite: IDL set to "\0" followed by getAttribute() 
PASS blockquote.cite: IDL set to "\0" followed by IDL get 
PASS blockquote.cite: IDL set to null should not throw 
PASS blockquote.cite: IDL set to null followed by getAttribute() 
PASS blockquote.cite: IDL set to null followed by IDL get 
PASS blockquote.cite: IDL set to object "test-toString" should not throw 
PASS blockquote.cite: IDL set to object "test-toString" followed by getAttribute() 
PASS blockquote.cite: IDL set to object "test-toString" followed by IDL get 
PASS blockquote.cite: IDL set to object "test-valueOf" should not throw 
PASS blockquote.cite: IDL set to object "test-valueOf" followed by getAttribute() 
PASS blockquote.cite: IDL set to object "test-valueOf" followed by IDL get 
FAIL blockquote.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL blockquote.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to null followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to true followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to false followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL blockquote.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS blockquote.itemScope: IDL set to "" should not throw 
FAIL blockquote.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL blockquote.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS blockquote.itemScope: IDL set to " foo " should not throw 
PASS blockquote.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL blockquote.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS blockquote.itemScope: IDL set to undefined should not throw 
FAIL blockquote.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL blockquote.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS blockquote.itemScope: IDL set to null should not throw 
FAIL blockquote.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL blockquote.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS blockquote.itemScope: IDL set to 7 should not throw 
PASS blockquote.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL blockquote.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS blockquote.itemScope: IDL set to 1.5 should not throw 
PASS blockquote.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL blockquote.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS blockquote.itemScope: IDL set to true should not throw 
PASS blockquote.itemScope: IDL set to true followed by hasAttribute() 
PASS blockquote.itemScope: IDL set to true followed by IDL get 
PASS blockquote.itemScope: IDL set to false should not throw 
FAIL blockquote.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS blockquote.itemScope: IDL set to false followed by IDL get 
PASS blockquote.itemScope: IDL set to object "[object Object]" should not throw 
PASS blockquote.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL blockquote.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS blockquote.itemScope: IDL set to NaN should not throw 
FAIL blockquote.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL blockquote.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS blockquote.itemScope: IDL set to Infinity should not throw 
PASS blockquote.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL blockquote.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS blockquote.itemScope: IDL set to -Infinity should not throw 
PASS blockquote.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL blockquote.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS blockquote.itemScope: IDL set to "\0" should not throw 
PASS blockquote.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL blockquote.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS blockquote.itemScope: IDL set to object "test-toString" should not throw 
PASS blockquote.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL blockquote.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS blockquote.itemScope: IDL set to object "test-valueOf" should not throw 
PASS blockquote.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL blockquote.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL blockquote.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL blockquote.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to "" followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to true followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to false followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to null followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS blockquote.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL blockquote.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS blockquote.itemId: IDL set to "" should not throw 
FAIL blockquote.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS blockquote.itemId: IDL set to " foo " should not throw 
FAIL blockquote.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL blockquote.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS blockquote.itemId: IDL set to "http://site.example/" should not throw 
FAIL blockquote.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS blockquote.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS blockquote.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL blockquote.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS blockquote.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL blockquote.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL blockquote.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS blockquote.itemId: IDL set to undefined should not throw 
FAIL blockquote.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS blockquote.itemId: IDL set to 7 should not throw 
FAIL blockquote.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS blockquote.itemId: IDL set to 1.5 should not throw 
FAIL blockquote.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS blockquote.itemId: IDL set to true should not throw 
FAIL blockquote.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS blockquote.itemId: IDL set to false should not throw 
FAIL blockquote.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS blockquote.itemId: IDL set to object "[object Object]" should not throw 
FAIL blockquote.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS blockquote.itemId: IDL set to NaN should not throw 
FAIL blockquote.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS blockquote.itemId: IDL set to Infinity should not throw 
FAIL blockquote.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS blockquote.itemId: IDL set to -Infinity should not throw 
FAIL blockquote.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS blockquote.itemId: IDL set to "\0" should not throw 
FAIL blockquote.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS blockquote.itemId: IDL set to null should not throw 
FAIL blockquote.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS blockquote.itemId: IDL set to object "test-toString" should not throw 
FAIL blockquote.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL blockquote.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS blockquote.itemId: IDL set to object "test-valueOf" should not throw 
PASS blockquote.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL blockquote.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS ol.title: typeof IDL attribute 
PASS ol.title: IDL get with DOM attribute unset 
PASS ol.title: setAttribute() to "" followed by getAttribute() 
PASS ol.title: setAttribute() to "" followed by IDL get 
PASS ol.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.title: setAttribute() to undefined followed by getAttribute() 
PASS ol.title: setAttribute() to undefined followed by IDL get 
PASS ol.title: setAttribute() to 7 followed by getAttribute() 
PASS ol.title: setAttribute() to 7 followed by IDL get 
PASS ol.title: setAttribute() to 1.5 followed by getAttribute() 
PASS ol.title: setAttribute() to 1.5 followed by IDL get 
PASS ol.title: setAttribute() to true followed by getAttribute() 
PASS ol.title: setAttribute() to true followed by IDL get 
PASS ol.title: setAttribute() to false followed by getAttribute() 
PASS ol.title: setAttribute() to false followed by IDL get 
PASS ol.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ol.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS ol.title: setAttribute() to NaN followed by getAttribute() 
PASS ol.title: setAttribute() to NaN followed by IDL get 
PASS ol.title: setAttribute() to Infinity followed by getAttribute() 
PASS ol.title: setAttribute() to Infinity followed by IDL get 
PASS ol.title: setAttribute() to -Infinity followed by getAttribute() 
PASS ol.title: setAttribute() to -Infinity followed by IDL get 
PASS ol.title: setAttribute() to "\0" followed by getAttribute() 
PASS ol.title: setAttribute() to "\0" followed by IDL get 
PASS ol.title: setAttribute() to null followed by getAttribute() 
PASS ol.title: setAttribute() to null followed by IDL get 
PASS ol.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ol.title: setAttribute() to object "test-toString" followed by IDL get 
PASS ol.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ol.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ol.title: IDL set to "" should not throw 
PASS ol.title: IDL set to "" followed by getAttribute() 
PASS ol.title: IDL set to "" followed by IDL get 
PASS ol.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ol.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.title: IDL set to undefined should not throw 
PASS ol.title: IDL set to undefined followed by getAttribute() 
PASS ol.title: IDL set to undefined followed by IDL get 
PASS ol.title: IDL set to 7 should not throw 
PASS ol.title: IDL set to 7 followed by getAttribute() 
PASS ol.title: IDL set to 7 followed by IDL get 
PASS ol.title: IDL set to 1.5 should not throw 
PASS ol.title: IDL set to 1.5 followed by getAttribute() 
PASS ol.title: IDL set to 1.5 followed by IDL get 
PASS ol.title: IDL set to true should not throw 
PASS ol.title: IDL set to true followed by getAttribute() 
PASS ol.title: IDL set to true followed by IDL get 
PASS ol.title: IDL set to false should not throw 
PASS ol.title: IDL set to false followed by getAttribute() 
PASS ol.title: IDL set to false followed by IDL get 
PASS ol.title: IDL set to object "[object Object]" should not throw 
PASS ol.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS ol.title: IDL set to object "[object Object]" followed by IDL get 
PASS ol.title: IDL set to NaN should not throw 
PASS ol.title: IDL set to NaN followed by getAttribute() 
PASS ol.title: IDL set to NaN followed by IDL get 
PASS ol.title: IDL set to Infinity should not throw 
PASS ol.title: IDL set to Infinity followed by getAttribute() 
PASS ol.title: IDL set to Infinity followed by IDL get 
PASS ol.title: IDL set to -Infinity should not throw 
PASS ol.title: IDL set to -Infinity followed by getAttribute() 
PASS ol.title: IDL set to -Infinity followed by IDL get 
PASS ol.title: IDL set to "\0" should not throw 
PASS ol.title: IDL set to "\0" followed by getAttribute() 
PASS ol.title: IDL set to "\0" followed by IDL get 
PASS ol.title: IDL set to null should not throw 
PASS ol.title: IDL set to null followed by getAttribute() 
PASS ol.title: IDL set to null followed by IDL get 
PASS ol.title: IDL set to object "test-toString" should not throw 
PASS ol.title: IDL set to object "test-toString" followed by getAttribute() 
PASS ol.title: IDL set to object "test-toString" followed by IDL get 
PASS ol.title: IDL set to object "test-valueOf" should not throw 
PASS ol.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ol.title: IDL set to object "test-valueOf" followed by IDL get 
PASS ol.lang: typeof IDL attribute 
PASS ol.lang: IDL get with DOM attribute unset 
PASS ol.lang: setAttribute() to "" followed by getAttribute() 
PASS ol.lang: setAttribute() to "" followed by IDL get 
PASS ol.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.lang: setAttribute() to undefined followed by getAttribute() 
PASS ol.lang: setAttribute() to undefined followed by IDL get 
PASS ol.lang: setAttribute() to 7 followed by getAttribute() 
PASS ol.lang: setAttribute() to 7 followed by IDL get 
PASS ol.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS ol.lang: setAttribute() to 1.5 followed by IDL get 
PASS ol.lang: setAttribute() to true followed by getAttribute() 
PASS ol.lang: setAttribute() to true followed by IDL get 
PASS ol.lang: setAttribute() to false followed by getAttribute() 
PASS ol.lang: setAttribute() to false followed by IDL get 
PASS ol.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ol.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS ol.lang: setAttribute() to NaN followed by getAttribute() 
PASS ol.lang: setAttribute() to NaN followed by IDL get 
PASS ol.lang: setAttribute() to Infinity followed by getAttribute() 
PASS ol.lang: setAttribute() to Infinity followed by IDL get 
PASS ol.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS ol.lang: setAttribute() to -Infinity followed by IDL get 
PASS ol.lang: setAttribute() to "\0" followed by getAttribute() 
PASS ol.lang: setAttribute() to "\0" followed by IDL get 
PASS ol.lang: setAttribute() to null followed by getAttribute() 
PASS ol.lang: setAttribute() to null followed by IDL get 
PASS ol.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ol.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS ol.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ol.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ol.lang: IDL set to "" should not throw 
PASS ol.lang: IDL set to "" followed by getAttribute() 
PASS ol.lang: IDL set to "" followed by IDL get 
PASS ol.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ol.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.lang: IDL set to undefined should not throw 
PASS ol.lang: IDL set to undefined followed by getAttribute() 
PASS ol.lang: IDL set to undefined followed by IDL get 
PASS ol.lang: IDL set to 7 should not throw 
PASS ol.lang: IDL set to 7 followed by getAttribute() 
PASS ol.lang: IDL set to 7 followed by IDL get 
PASS ol.lang: IDL set to 1.5 should not throw 
PASS ol.lang: IDL set to 1.5 followed by getAttribute() 
PASS ol.lang: IDL set to 1.5 followed by IDL get 
PASS ol.lang: IDL set to true should not throw 
PASS ol.lang: IDL set to true followed by getAttribute() 
PASS ol.lang: IDL set to true followed by IDL get 
PASS ol.lang: IDL set to false should not throw 
PASS ol.lang: IDL set to false followed by getAttribute() 
PASS ol.lang: IDL set to false followed by IDL get 
PASS ol.lang: IDL set to object "[object Object]" should not throw 
PASS ol.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS ol.lang: IDL set to object "[object Object]" followed by IDL get 
PASS ol.lang: IDL set to NaN should not throw 
PASS ol.lang: IDL set to NaN followed by getAttribute() 
PASS ol.lang: IDL set to NaN followed by IDL get 
PASS ol.lang: IDL set to Infinity should not throw 
PASS ol.lang: IDL set to Infinity followed by getAttribute() 
PASS ol.lang: IDL set to Infinity followed by IDL get 
PASS ol.lang: IDL set to -Infinity should not throw 
PASS ol.lang: IDL set to -Infinity followed by getAttribute() 
PASS ol.lang: IDL set to -Infinity followed by IDL get 
PASS ol.lang: IDL set to "\0" should not throw 
PASS ol.lang: IDL set to "\0" followed by getAttribute() 
PASS ol.lang: IDL set to "\0" followed by IDL get 
PASS ol.lang: IDL set to null should not throw 
PASS ol.lang: IDL set to null followed by getAttribute() 
PASS ol.lang: IDL set to null followed by IDL get 
PASS ol.lang: IDL set to object "test-toString" should not throw 
PASS ol.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS ol.lang: IDL set to object "test-toString" followed by IDL get 
PASS ol.lang: IDL set to object "test-valueOf" should not throw 
PASS ol.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ol.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS ol.dir: typeof IDL attribute 
PASS ol.dir: IDL get with DOM attribute unset 
PASS ol.dir: setAttribute() to "" followed by getAttribute() 
PASS ol.dir: setAttribute() to "" followed by IDL get 
PASS ol.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.dir: setAttribute() to undefined followed by getAttribute() 
PASS ol.dir: setAttribute() to undefined followed by IDL get 
PASS ol.dir: setAttribute() to 7 followed by getAttribute() 
PASS ol.dir: setAttribute() to 7 followed by IDL get 
PASS ol.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS ol.dir: setAttribute() to 1.5 followed by IDL get 
PASS ol.dir: setAttribute() to true followed by getAttribute() 
PASS ol.dir: setAttribute() to true followed by IDL get 
PASS ol.dir: setAttribute() to false followed by getAttribute() 
PASS ol.dir: setAttribute() to false followed by IDL get 
PASS ol.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ol.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS ol.dir: setAttribute() to NaN followed by getAttribute() 
PASS ol.dir: setAttribute() to NaN followed by IDL get 
PASS ol.dir: setAttribute() to Infinity followed by getAttribute() 
PASS ol.dir: setAttribute() to Infinity followed by IDL get 
PASS ol.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS ol.dir: setAttribute() to -Infinity followed by IDL get 
PASS ol.dir: setAttribute() to "\0" followed by getAttribute() 
PASS ol.dir: setAttribute() to "\0" followed by IDL get 
PASS ol.dir: setAttribute() to null followed by getAttribute() 
PASS ol.dir: setAttribute() to null followed by IDL get 
PASS ol.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ol.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS ol.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ol.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ol.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS ol.dir: setAttribute() to "ltr" followed by IDL get 
PASS ol.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS ol.dir: setAttribute() to "xltr" followed by IDL get 
PASS ol.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS ol.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS ol.dir: setAttribute() to "tr" followed by getAttribute() 
PASS ol.dir: setAttribute() to "tr" followed by IDL get 
PASS ol.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS ol.dir: setAttribute() to "LTR" followed by IDL get 
PASS ol.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS ol.dir: setAttribute() to "rtl" followed by IDL get 
PASS ol.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS ol.dir: setAttribute() to "xrtl" followed by IDL get 
PASS ol.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS ol.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS ol.dir: setAttribute() to "tl" followed by getAttribute() 
PASS ol.dir: setAttribute() to "tl" followed by IDL get 
PASS ol.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS ol.dir: setAttribute() to "RTL" followed by IDL get 
PASS ol.dir: setAttribute() to "auto" followed by getAttribute() 
PASS ol.dir: setAttribute() to "auto" followed by IDL get 
PASS ol.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS ol.dir: setAttribute() to "xauto" followed by IDL get 
PASS ol.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS ol.dir: setAttribute() to "auto\0" followed by IDL get 
PASS ol.dir: setAttribute() to "uto" followed by getAttribute() 
PASS ol.dir: setAttribute() to "uto" followed by IDL get 
PASS ol.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS ol.dir: setAttribute() to "AUTO" followed by IDL get 
PASS ol.dir: IDL set to "" should not throw 
PASS ol.dir: IDL set to "" followed by getAttribute() 
PASS ol.dir: IDL set to "" followed by IDL get 
PASS ol.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ol.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.dir: IDL set to undefined should not throw 
PASS ol.dir: IDL set to undefined followed by getAttribute() 
PASS ol.dir: IDL set to undefined followed by IDL get 
PASS ol.dir: IDL set to 7 should not throw 
PASS ol.dir: IDL set to 7 followed by getAttribute() 
PASS ol.dir: IDL set to 7 followed by IDL get 
PASS ol.dir: IDL set to 1.5 should not throw 
PASS ol.dir: IDL set to 1.5 followed by getAttribute() 
PASS ol.dir: IDL set to 1.5 followed by IDL get 
PASS ol.dir: IDL set to true should not throw 
PASS ol.dir: IDL set to true followed by getAttribute() 
PASS ol.dir: IDL set to true followed by IDL get 
PASS ol.dir: IDL set to false should not throw 
PASS ol.dir: IDL set to false followed by getAttribute() 
PASS ol.dir: IDL set to false followed by IDL get 
PASS ol.dir: IDL set to object "[object Object]" should not throw 
PASS ol.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS ol.dir: IDL set to object "[object Object]" followed by IDL get 
PASS ol.dir: IDL set to NaN should not throw 
PASS ol.dir: IDL set to NaN followed by getAttribute() 
PASS ol.dir: IDL set to NaN followed by IDL get 
PASS ol.dir: IDL set to Infinity should not throw 
PASS ol.dir: IDL set to Infinity followed by getAttribute() 
PASS ol.dir: IDL set to Infinity followed by IDL get 
PASS ol.dir: IDL set to -Infinity should not throw 
PASS ol.dir: IDL set to -Infinity followed by getAttribute() 
PASS ol.dir: IDL set to -Infinity followed by IDL get 
PASS ol.dir: IDL set to "\0" should not throw 
PASS ol.dir: IDL set to "\0" followed by getAttribute() 
PASS ol.dir: IDL set to "\0" followed by IDL get 
PASS ol.dir: IDL set to null should not throw 
PASS ol.dir: IDL set to null followed by IDL get 
PASS ol.dir: IDL set to object "test-toString" should not throw 
PASS ol.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS ol.dir: IDL set to object "test-toString" followed by IDL get 
PASS ol.dir: IDL set to object "test-valueOf" should not throw 
PASS ol.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ol.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS ol.dir: IDL set to "ltr" should not throw 
PASS ol.dir: IDL set to "ltr" followed by getAttribute() 
PASS ol.dir: IDL set to "ltr" followed by IDL get 
PASS ol.dir: IDL set to "xltr" should not throw 
PASS ol.dir: IDL set to "xltr" followed by getAttribute() 
PASS ol.dir: IDL set to "xltr" followed by IDL get 
PASS ol.dir: IDL set to "ltr\0" should not throw 
PASS ol.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS ol.dir: IDL set to "ltr\0" followed by IDL get 
PASS ol.dir: IDL set to "tr" should not throw 
PASS ol.dir: IDL set to "tr" followed by getAttribute() 
PASS ol.dir: IDL set to "tr" followed by IDL get 
PASS ol.dir: IDL set to "LTR" should not throw 
PASS ol.dir: IDL set to "LTR" followed by getAttribute() 
PASS ol.dir: IDL set to "LTR" followed by IDL get 
PASS ol.dir: IDL set to "rtl" should not throw 
PASS ol.dir: IDL set to "rtl" followed by getAttribute() 
PASS ol.dir: IDL set to "rtl" followed by IDL get 
PASS ol.dir: IDL set to "xrtl" should not throw 
PASS ol.dir: IDL set to "xrtl" followed by getAttribute() 
PASS ol.dir: IDL set to "xrtl" followed by IDL get 
PASS ol.dir: IDL set to "rtl\0" should not throw 
PASS ol.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS ol.dir: IDL set to "rtl\0" followed by IDL get 
PASS ol.dir: IDL set to "tl" should not throw 
PASS ol.dir: IDL set to "tl" followed by getAttribute() 
PASS ol.dir: IDL set to "tl" followed by IDL get 
PASS ol.dir: IDL set to "RTL" should not throw 
PASS ol.dir: IDL set to "RTL" followed by getAttribute() 
PASS ol.dir: IDL set to "RTL" followed by IDL get 
PASS ol.dir: IDL set to "auto" should not throw 
PASS ol.dir: IDL set to "auto" followed by getAttribute() 
PASS ol.dir: IDL set to "auto" followed by IDL get 
PASS ol.dir: IDL set to "xauto" should not throw 
PASS ol.dir: IDL set to "xauto" followed by getAttribute() 
PASS ol.dir: IDL set to "xauto" followed by IDL get 
PASS ol.dir: IDL set to "auto\0" should not throw 
PASS ol.dir: IDL set to "auto\0" followed by getAttribute() 
PASS ol.dir: IDL set to "auto\0" followed by IDL get 
PASS ol.dir: IDL set to "uto" should not throw 
PASS ol.dir: IDL set to "uto" followed by getAttribute() 
PASS ol.dir: IDL set to "uto" followed by IDL get 
PASS ol.dir: IDL set to "AUTO" should not throw 
PASS ol.dir: IDL set to "AUTO" followed by getAttribute() 
PASS ol.dir: IDL set to "AUTO" followed by IDL get 
PASS ol.className (<ol class>): typeof IDL attribute 
PASS ol.className (<ol class>): IDL get with DOM attribute unset 
PASS ol.className (<ol class>): setAttribute() to "" followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to "" followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to undefined followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to undefined followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to 7 followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to 7 followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to 1.5 followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to 1.5 followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to true followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to true followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to false followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to false followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to NaN followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to NaN followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to Infinity followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to Infinity followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to -Infinity followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to -Infinity followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to "\0" followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to "\0" followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to null followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to null followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to object "test-toString" followed by IDL get 
PASS ol.className (<ol class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ol.className (<ol class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS ol.className (<ol class>): IDL set to "" should not throw 
PASS ol.className (<ol class>): IDL set to "" followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to "" followed by IDL get 
PASS ol.className (<ol class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ol.className (<ol class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.className (<ol class>): IDL set to undefined should not throw 
PASS ol.className (<ol class>): IDL set to undefined followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to undefined followed by IDL get 
PASS ol.className (<ol class>): IDL set to 7 should not throw 
PASS ol.className (<ol class>): IDL set to 7 followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to 7 followed by IDL get 
PASS ol.className (<ol class>): IDL set to 1.5 should not throw 
PASS ol.className (<ol class>): IDL set to 1.5 followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to 1.5 followed by IDL get 
PASS ol.className (<ol class>): IDL set to true should not throw 
PASS ol.className (<ol class>): IDL set to true followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to true followed by IDL get 
PASS ol.className (<ol class>): IDL set to false should not throw 
PASS ol.className (<ol class>): IDL set to false followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to false followed by IDL get 
PASS ol.className (<ol class>): IDL set to object "[object Object]" should not throw 
PASS ol.className (<ol class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to object "[object Object]" followed by IDL get 
PASS ol.className (<ol class>): IDL set to NaN should not throw 
PASS ol.className (<ol class>): IDL set to NaN followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to NaN followed by IDL get 
PASS ol.className (<ol class>): IDL set to Infinity should not throw 
PASS ol.className (<ol class>): IDL set to Infinity followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to Infinity followed by IDL get 
PASS ol.className (<ol class>): IDL set to -Infinity should not throw 
PASS ol.className (<ol class>): IDL set to -Infinity followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to -Infinity followed by IDL get 
PASS ol.className (<ol class>): IDL set to "\0" should not throw 
PASS ol.className (<ol class>): IDL set to "\0" followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to "\0" followed by IDL get 
PASS ol.className (<ol class>): IDL set to null should not throw 
PASS ol.className (<ol class>): IDL set to null followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to null followed by IDL get 
PASS ol.className (<ol class>): IDL set to object "test-toString" should not throw 
PASS ol.className (<ol class>): IDL set to object "test-toString" followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to object "test-toString" followed by IDL get 
PASS ol.className (<ol class>): IDL set to object "test-valueOf" should not throw 
PASS ol.className (<ol class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS ol.className (<ol class>): IDL set to object "test-valueOf" followed by IDL get 
PASS ol.hidden: typeof IDL attribute 
PASS ol.hidden: IDL get with DOM attribute unset 
PASS ol.hidden: setAttribute() to "" followed by getAttribute() 
PASS ol.hidden: setAttribute() to "" followed by IDL get 
PASS ol.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS ol.hidden: setAttribute() to " foo " followed by IDL get 
PASS ol.hidden: setAttribute() to undefined followed by getAttribute() 
PASS ol.hidden: setAttribute() to undefined followed by IDL get 
PASS ol.hidden: setAttribute() to null followed by getAttribute() 
PASS ol.hidden: setAttribute() to null followed by IDL get 
PASS ol.hidden: setAttribute() to 7 followed by getAttribute() 
PASS ol.hidden: setAttribute() to 7 followed by IDL get 
PASS ol.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS ol.hidden: setAttribute() to 1.5 followed by IDL get 
PASS ol.hidden: setAttribute() to true followed by getAttribute() 
PASS ol.hidden: setAttribute() to true followed by IDL get 
PASS ol.hidden: setAttribute() to false followed by getAttribute() 
PASS ol.hidden: setAttribute() to false followed by IDL get 
PASS ol.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ol.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS ol.hidden: setAttribute() to NaN followed by getAttribute() 
PASS ol.hidden: setAttribute() to NaN followed by IDL get 
PASS ol.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS ol.hidden: setAttribute() to Infinity followed by IDL get 
PASS ol.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS ol.hidden: setAttribute() to -Infinity followed by IDL get 
PASS ol.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS ol.hidden: setAttribute() to "\0" followed by IDL get 
PASS ol.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ol.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS ol.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ol.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ol.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS ol.hidden: setAttribute() to "hidden" followed by IDL get 
PASS ol.hidden: IDL set to "" should not throw 
PASS ol.hidden: IDL set to "" followed by hasAttribute() 
PASS ol.hidden: IDL set to "" followed by IDL get 
PASS ol.hidden: IDL set to " foo " should not throw 
PASS ol.hidden: IDL set to " foo " followed by hasAttribute() 
PASS ol.hidden: IDL set to " foo " followed by IDL get 
PASS ol.hidden: IDL set to undefined should not throw 
PASS ol.hidden: IDL set to undefined followed by hasAttribute() 
PASS ol.hidden: IDL set to undefined followed by IDL get 
PASS ol.hidden: IDL set to null should not throw 
PASS ol.hidden: IDL set to null followed by hasAttribute() 
PASS ol.hidden: IDL set to null followed by IDL get 
PASS ol.hidden: IDL set to 7 should not throw 
PASS ol.hidden: IDL set to 7 followed by hasAttribute() 
PASS ol.hidden: IDL set to 7 followed by IDL get 
PASS ol.hidden: IDL set to 1.5 should not throw 
PASS ol.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS ol.hidden: IDL set to 1.5 followed by IDL get 
PASS ol.hidden: IDL set to true should not throw 
PASS ol.hidden: IDL set to true followed by hasAttribute() 
PASS ol.hidden: IDL set to true followed by IDL get 
PASS ol.hidden: IDL set to false should not throw 
PASS ol.hidden: IDL set to false followed by hasAttribute() 
PASS ol.hidden: IDL set to false followed by IDL get 
PASS ol.hidden: IDL set to object "[object Object]" should not throw 
PASS ol.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS ol.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS ol.hidden: IDL set to NaN should not throw 
PASS ol.hidden: IDL set to NaN followed by hasAttribute() 
PASS ol.hidden: IDL set to NaN followed by IDL get 
PASS ol.hidden: IDL set to Infinity should not throw 
PASS ol.hidden: IDL set to Infinity followed by hasAttribute() 
PASS ol.hidden: IDL set to Infinity followed by IDL get 
PASS ol.hidden: IDL set to -Infinity should not throw 
PASS ol.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS ol.hidden: IDL set to -Infinity followed by IDL get 
PASS ol.hidden: IDL set to "\0" should not throw 
PASS ol.hidden: IDL set to "\0" followed by hasAttribute() 
PASS ol.hidden: IDL set to "\0" followed by IDL get 
PASS ol.hidden: IDL set to object "test-toString" should not throw 
PASS ol.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS ol.hidden: IDL set to object "test-toString" followed by IDL get 
PASS ol.hidden: IDL set to object "test-valueOf" should not throw 
PASS ol.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS ol.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS ol.accessKey: typeof IDL attribute 
PASS ol.accessKey: IDL get with DOM attribute unset 
PASS ol.accessKey: setAttribute() to "" followed by getAttribute() 
PASS ol.accessKey: setAttribute() to "" followed by IDL get 
PASS ol.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS ol.accessKey: setAttribute() to undefined followed by IDL get 
PASS ol.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS ol.accessKey: setAttribute() to 7 followed by IDL get 
PASS ol.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS ol.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS ol.accessKey: setAttribute() to true followed by getAttribute() 
PASS ol.accessKey: setAttribute() to true followed by IDL get 
PASS ol.accessKey: setAttribute() to false followed by getAttribute() 
PASS ol.accessKey: setAttribute() to false followed by IDL get 
PASS ol.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ol.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS ol.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS ol.accessKey: setAttribute() to NaN followed by IDL get 
PASS ol.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS ol.accessKey: setAttribute() to Infinity followed by IDL get 
PASS ol.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS ol.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS ol.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS ol.accessKey: setAttribute() to "\0" followed by IDL get 
PASS ol.accessKey: setAttribute() to null followed by getAttribute() 
PASS ol.accessKey: setAttribute() to null followed by IDL get 
PASS ol.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ol.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS ol.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ol.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ol.accessKey: IDL set to "" should not throw 
PASS ol.accessKey: IDL set to "" followed by getAttribute() 
PASS ol.accessKey: IDL set to "" followed by IDL get 
PASS ol.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ol.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.accessKey: IDL set to undefined should not throw 
PASS ol.accessKey: IDL set to undefined followed by getAttribute() 
PASS ol.accessKey: IDL set to undefined followed by IDL get 
PASS ol.accessKey: IDL set to 7 should not throw 
PASS ol.accessKey: IDL set to 7 followed by getAttribute() 
PASS ol.accessKey: IDL set to 7 followed by IDL get 
PASS ol.accessKey: IDL set to 1.5 should not throw 
PASS ol.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS ol.accessKey: IDL set to 1.5 followed by IDL get 
PASS ol.accessKey: IDL set to true should not throw 
PASS ol.accessKey: IDL set to true followed by getAttribute() 
PASS ol.accessKey: IDL set to true followed by IDL get 
PASS ol.accessKey: IDL set to false should not throw 
PASS ol.accessKey: IDL set to false followed by getAttribute() 
PASS ol.accessKey: IDL set to false followed by IDL get 
PASS ol.accessKey: IDL set to object "[object Object]" should not throw 
PASS ol.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS ol.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS ol.accessKey: IDL set to NaN should not throw 
PASS ol.accessKey: IDL set to NaN followed by getAttribute() 
PASS ol.accessKey: IDL set to NaN followed by IDL get 
PASS ol.accessKey: IDL set to Infinity should not throw 
PASS ol.accessKey: IDL set to Infinity followed by getAttribute() 
PASS ol.accessKey: IDL set to Infinity followed by IDL get 
PASS ol.accessKey: IDL set to -Infinity should not throw 
PASS ol.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS ol.accessKey: IDL set to -Infinity followed by IDL get 
PASS ol.accessKey: IDL set to "\0" should not throw 
PASS ol.accessKey: IDL set to "\0" followed by getAttribute() 
PASS ol.accessKey: IDL set to "\0" followed by IDL get 
PASS ol.accessKey: IDL set to null should not throw 
PASS ol.accessKey: IDL set to null followed by getAttribute() 
PASS ol.accessKey: IDL set to null followed by IDL get 
PASS ol.accessKey: IDL set to object "test-toString" should not throw 
PASS ol.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS ol.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS ol.accessKey: IDL set to object "test-valueOf" should not throw 
PASS ol.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ol.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS ol.tabIndex: typeof IDL attribute 
PASS ol.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to -36 followed by IDL get 
PASS ol.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to -1 followed by IDL get 
PASS ol.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to 0 followed by IDL get 
PASS ol.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to 1 followed by IDL get 
PASS ol.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS ol.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS ol.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS ol.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS ol.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to "0" followed by IDL get 
PASS ol.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to "1" followed by IDL get 
PASS ol.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS ol.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS ol.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS ol.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS ol.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS ol.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS ol.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS ol.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS ol.tabIndex: IDL set to -36 should not throw 
PASS ol.tabIndex: IDL set to -36 followed by getAttribute() 
PASS ol.tabIndex: IDL set to -36 followed by IDL get 
PASS ol.tabIndex: IDL set to -1 should not throw 
PASS ol.tabIndex: IDL set to -1 followed by getAttribute() 
PASS ol.tabIndex: IDL set to -1 followed by IDL get 
PASS ol.tabIndex: IDL set to 0 should not throw 
PASS ol.tabIndex: IDL set to 0 followed by getAttribute() 
PASS ol.tabIndex: IDL set to 0 followed by IDL get 
PASS ol.tabIndex: IDL set to 1 should not throw 
PASS ol.tabIndex: IDL set to 1 followed by getAttribute() 
PASS ol.tabIndex: IDL set to 1 followed by IDL get 
PASS ol.tabIndex: IDL set to 2147483647 should not throw 
PASS ol.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS ol.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS ol.tabIndex: IDL set to -2147483648 should not throw 
PASS ol.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS ol.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS ol.reversed: typeof IDL attribute 
PASS ol.reversed: IDL get with DOM attribute unset 
PASS ol.reversed: setAttribute() to "" followed by getAttribute() 
PASS ol.reversed: setAttribute() to "" followed by IDL get 
PASS ol.reversed: setAttribute() to " foo " followed by getAttribute() 
PASS ol.reversed: setAttribute() to " foo " followed by IDL get 
PASS ol.reversed: setAttribute() to undefined followed by getAttribute() 
PASS ol.reversed: setAttribute() to undefined followed by IDL get 
PASS ol.reversed: setAttribute() to null followed by getAttribute() 
PASS ol.reversed: setAttribute() to null followed by IDL get 
PASS ol.reversed: setAttribute() to 7 followed by getAttribute() 
PASS ol.reversed: setAttribute() to 7 followed by IDL get 
PASS ol.reversed: setAttribute() to 1.5 followed by getAttribute() 
PASS ol.reversed: setAttribute() to 1.5 followed by IDL get 
PASS ol.reversed: setAttribute() to true followed by getAttribute() 
PASS ol.reversed: setAttribute() to true followed by IDL get 
PASS ol.reversed: setAttribute() to false followed by getAttribute() 
PASS ol.reversed: setAttribute() to false followed by IDL get 
PASS ol.reversed: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ol.reversed: setAttribute() to object "[object Object]" followed by IDL get 
PASS ol.reversed: setAttribute() to NaN followed by getAttribute() 
PASS ol.reversed: setAttribute() to NaN followed by IDL get 
PASS ol.reversed: setAttribute() to Infinity followed by getAttribute() 
PASS ol.reversed: setAttribute() to Infinity followed by IDL get 
PASS ol.reversed: setAttribute() to -Infinity followed by getAttribute() 
PASS ol.reversed: setAttribute() to -Infinity followed by IDL get 
PASS ol.reversed: setAttribute() to "\0" followed by getAttribute() 
PASS ol.reversed: setAttribute() to "\0" followed by IDL get 
PASS ol.reversed: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ol.reversed: setAttribute() to object "test-toString" followed by IDL get 
PASS ol.reversed: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ol.reversed: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ol.reversed: setAttribute() to "reversed" followed by getAttribute() 
PASS ol.reversed: setAttribute() to "reversed" followed by IDL get 
PASS ol.reversed: IDL set to "" should not throw 
PASS ol.reversed: IDL set to "" followed by hasAttribute() 
PASS ol.reversed: IDL set to "" followed by IDL get 
PASS ol.reversed: IDL set to " foo " should not throw 
PASS ol.reversed: IDL set to " foo " followed by hasAttribute() 
PASS ol.reversed: IDL set to " foo " followed by IDL get 
PASS ol.reversed: IDL set to undefined should not throw 
PASS ol.reversed: IDL set to undefined followed by hasAttribute() 
PASS ol.reversed: IDL set to undefined followed by IDL get 
PASS ol.reversed: IDL set to null should not throw 
PASS ol.reversed: IDL set to null followed by hasAttribute() 
PASS ol.reversed: IDL set to null followed by IDL get 
PASS ol.reversed: IDL set to 7 should not throw 
PASS ol.reversed: IDL set to 7 followed by hasAttribute() 
PASS ol.reversed: IDL set to 7 followed by IDL get 
PASS ol.reversed: IDL set to 1.5 should not throw 
PASS ol.reversed: IDL set to 1.5 followed by hasAttribute() 
PASS ol.reversed: IDL set to 1.5 followed by IDL get 
PASS ol.reversed: IDL set to true should not throw 
PASS ol.reversed: IDL set to true followed by hasAttribute() 
PASS ol.reversed: IDL set to true followed by IDL get 
PASS ol.reversed: IDL set to false should not throw 
PASS ol.reversed: IDL set to false followed by hasAttribute() 
PASS ol.reversed: IDL set to false followed by IDL get 
PASS ol.reversed: IDL set to object "[object Object]" should not throw 
PASS ol.reversed: IDL set to object "[object Object]" followed by hasAttribute() 
PASS ol.reversed: IDL set to object "[object Object]" followed by IDL get 
PASS ol.reversed: IDL set to NaN should not throw 
PASS ol.reversed: IDL set to NaN followed by hasAttribute() 
PASS ol.reversed: IDL set to NaN followed by IDL get 
PASS ol.reversed: IDL set to Infinity should not throw 
PASS ol.reversed: IDL set to Infinity followed by hasAttribute() 
PASS ol.reversed: IDL set to Infinity followed by IDL get 
PASS ol.reversed: IDL set to -Infinity should not throw 
PASS ol.reversed: IDL set to -Infinity followed by hasAttribute() 
PASS ol.reversed: IDL set to -Infinity followed by IDL get 
PASS ol.reversed: IDL set to "\0" should not throw 
PASS ol.reversed: IDL set to "\0" followed by hasAttribute() 
PASS ol.reversed: IDL set to "\0" followed by IDL get 
PASS ol.reversed: IDL set to object "test-toString" should not throw 
PASS ol.reversed: IDL set to object "test-toString" followed by hasAttribute() 
PASS ol.reversed: IDL set to object "test-toString" followed by IDL get 
PASS ol.reversed: IDL set to object "test-valueOf" should not throw 
PASS ol.reversed: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS ol.reversed: IDL set to object "test-valueOf" followed by IDL get 
PASS ol.start: typeof IDL attribute 
PASS ol.start: IDL get with DOM attribute unset 
PASS ol.start: setAttribute() to -36 followed by getAttribute() 
PASS ol.start: setAttribute() to -36 followed by IDL get 
PASS ol.start: setAttribute() to -1 followed by getAttribute() 
PASS ol.start: setAttribute() to -1 followed by IDL get 
PASS ol.start: setAttribute() to 0 followed by getAttribute() 
PASS ol.start: setAttribute() to 0 followed by IDL get 
PASS ol.start: setAttribute() to 1 followed by getAttribute() 
PASS ol.start: setAttribute() to 1 followed by IDL get 
PASS ol.start: setAttribute() to 2147483647 followed by getAttribute() 
PASS ol.start: setAttribute() to 2147483647 followed by IDL get 
PASS ol.start: setAttribute() to -2147483648 followed by getAttribute() 
PASS ol.start: setAttribute() to -2147483648 followed by IDL get 
PASS ol.start: setAttribute() to 2147483648 followed by getAttribute() 
PASS ol.start: setAttribute() to 2147483648 followed by IDL get 
PASS ol.start: setAttribute() to -2147483649 followed by getAttribute() 
PASS ol.start: setAttribute() to -2147483649 followed by IDL get 
PASS ol.start: setAttribute() to 4294967295 followed by getAttribute() 
PASS ol.start: setAttribute() to 4294967295 followed by IDL get 
PASS ol.start: setAttribute() to 4294967296 followed by getAttribute() 
PASS ol.start: setAttribute() to 4294967296 followed by IDL get 
PASS ol.start: setAttribute() to "" followed by getAttribute() 
PASS ol.start: setAttribute() to "" followed by IDL get 
PASS ol.start: setAttribute() to "-1" followed by getAttribute() 
PASS ol.start: setAttribute() to "-1" followed by IDL get 
PASS ol.start: setAttribute() to "-0" followed by getAttribute() 
PASS ol.start: setAttribute() to "-0" followed by IDL get 
PASS ol.start: setAttribute() to "0" followed by getAttribute() 
PASS ol.start: setAttribute() to "0" followed by IDL get 
PASS ol.start: setAttribute() to "1" followed by getAttribute() 
PASS ol.start: setAttribute() to "1" followed by IDL get 
PASS ol.start: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.start: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.start: setAttribute() to "\t7" followed by getAttribute() 
PASS ol.start: setAttribute() to "\t7" followed by IDL get 
PASS ol.start: setAttribute() to "\v7" followed by getAttribute() 
PASS ol.start: setAttribute() to "\v7" followed by IDL get 
PASS ol.start: setAttribute() to "\f7" followed by getAttribute() 
PASS ol.start: setAttribute() to "\f7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to "﻿7" followed by getAttribute() 
PASS ol.start: setAttribute() to "﻿7" followed by IDL get 
PASS ol.start: setAttribute() to "\n7" followed by getAttribute() 
PASS ol.start: setAttribute() to "\n7" followed by IDL get 
PASS ol.start: setAttribute() to "\r7" followed by getAttribute() 
PASS ol.start: setAttribute() to "\r7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to "᠎7" followed by getAttribute() 
PASS ol.start: setAttribute() to "᠎7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to " 7" followed by getAttribute() 
PASS ol.start: setAttribute() to " 7" followed by IDL get 
PASS ol.start: setAttribute() to "　7" followed by getAttribute() 
PASS ol.start: setAttribute() to "　7" followed by IDL get 
PASS ol.start: setAttribute() to undefined followed by getAttribute() 
PASS ol.start: setAttribute() to undefined followed by IDL get 
PASS ol.start: setAttribute() to 1.5 followed by getAttribute() 
PASS ol.start: setAttribute() to 1.5 followed by IDL get 
PASS ol.start: setAttribute() to true followed by getAttribute() 
PASS ol.start: setAttribute() to true followed by IDL get 
PASS ol.start: setAttribute() to false followed by getAttribute() 
PASS ol.start: setAttribute() to false followed by IDL get 
PASS ol.start: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ol.start: setAttribute() to object "[object Object]" followed by IDL get 
PASS ol.start: setAttribute() to NaN followed by getAttribute() 
PASS ol.start: setAttribute() to NaN followed by IDL get 
PASS ol.start: setAttribute() to Infinity followed by getAttribute() 
PASS ol.start: setAttribute() to Infinity followed by IDL get 
PASS ol.start: setAttribute() to -Infinity followed by getAttribute() 
PASS ol.start: setAttribute() to -Infinity followed by IDL get 
PASS ol.start: setAttribute() to "\0" followed by getAttribute() 
PASS ol.start: setAttribute() to "\0" followed by IDL get 
PASS ol.start: setAttribute() to object "2" followed by getAttribute() 
PASS ol.start: setAttribute() to object "2" followed by IDL get 
PASS ol.start: setAttribute() to object "3" followed by getAttribute() 
PASS ol.start: setAttribute() to object "3" followed by IDL get 
PASS ol.start: IDL set to -36 should not throw 
PASS ol.start: IDL set to -36 followed by getAttribute() 
PASS ol.start: IDL set to -36 followed by IDL get 
PASS ol.start: IDL set to -1 should not throw 
PASS ol.start: IDL set to -1 followed by getAttribute() 
PASS ol.start: IDL set to -1 followed by IDL get 
PASS ol.start: IDL set to 0 should not throw 
PASS ol.start: IDL set to 0 followed by getAttribute() 
PASS ol.start: IDL set to 0 followed by IDL get 
PASS ol.start: IDL set to 1 should not throw 
PASS ol.start: IDL set to 1 followed by getAttribute() 
PASS ol.start: IDL set to 1 followed by IDL get 
PASS ol.start: IDL set to 2147483647 should not throw 
PASS ol.start: IDL set to 2147483647 followed by getAttribute() 
PASS ol.start: IDL set to 2147483647 followed by IDL get 
PASS ol.start: IDL set to -2147483648 should not throw 
PASS ol.start: IDL set to -2147483648 followed by getAttribute() 
PASS ol.start: IDL set to -2147483648 followed by IDL get 
PASS ol.type: typeof IDL attribute 
PASS ol.type: IDL get with DOM attribute unset 
PASS ol.type: setAttribute() to "" followed by getAttribute() 
PASS ol.type: setAttribute() to "" followed by IDL get 
PASS ol.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.type: setAttribute() to undefined followed by getAttribute() 
PASS ol.type: setAttribute() to undefined followed by IDL get 
PASS ol.type: setAttribute() to 7 followed by getAttribute() 
PASS ol.type: setAttribute() to 7 followed by IDL get 
PASS ol.type: setAttribute() to 1.5 followed by getAttribute() 
PASS ol.type: setAttribute() to 1.5 followed by IDL get 
PASS ol.type: setAttribute() to true followed by getAttribute() 
PASS ol.type: setAttribute() to true followed by IDL get 
PASS ol.type: setAttribute() to false followed by getAttribute() 
PASS ol.type: setAttribute() to false followed by IDL get 
PASS ol.type: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ol.type: setAttribute() to object "[object Object]" followed by IDL get 
PASS ol.type: setAttribute() to NaN followed by getAttribute() 
PASS ol.type: setAttribute() to NaN followed by IDL get 
PASS ol.type: setAttribute() to Infinity followed by getAttribute() 
PASS ol.type: setAttribute() to Infinity followed by IDL get 
PASS ol.type: setAttribute() to -Infinity followed by getAttribute() 
PASS ol.type: setAttribute() to -Infinity followed by IDL get 
PASS ol.type: setAttribute() to "\0" followed by getAttribute() 
PASS ol.type: setAttribute() to "\0" followed by IDL get 
PASS ol.type: setAttribute() to null followed by getAttribute() 
PASS ol.type: setAttribute() to null followed by IDL get 
PASS ol.type: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ol.type: setAttribute() to object "test-toString" followed by IDL get 
PASS ol.type: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ol.type: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ol.type: IDL set to "" should not throw 
PASS ol.type: IDL set to "" followed by getAttribute() 
PASS ol.type: IDL set to "" followed by IDL get 
PASS ol.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ol.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ol.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ol.type: IDL set to undefined should not throw 
PASS ol.type: IDL set to undefined followed by getAttribute() 
PASS ol.type: IDL set to undefined followed by IDL get 
PASS ol.type: IDL set to 7 should not throw 
PASS ol.type: IDL set to 7 followed by getAttribute() 
PASS ol.type: IDL set to 7 followed by IDL get 
PASS ol.type: IDL set to 1.5 should not throw 
PASS ol.type: IDL set to 1.5 followed by getAttribute() 
PASS ol.type: IDL set to 1.5 followed by IDL get 
PASS ol.type: IDL set to true should not throw 
PASS ol.type: IDL set to true followed by getAttribute() 
PASS ol.type: IDL set to true followed by IDL get 
PASS ol.type: IDL set to false should not throw 
PASS ol.type: IDL set to false followed by getAttribute() 
PASS ol.type: IDL set to false followed by IDL get 
PASS ol.type: IDL set to object "[object Object]" should not throw 
PASS ol.type: IDL set to object "[object Object]" followed by getAttribute() 
PASS ol.type: IDL set to object "[object Object]" followed by IDL get 
PASS ol.type: IDL set to NaN should not throw 
PASS ol.type: IDL set to NaN followed by getAttribute() 
PASS ol.type: IDL set to NaN followed by IDL get 
PASS ol.type: IDL set to Infinity should not throw 
PASS ol.type: IDL set to Infinity followed by getAttribute() 
PASS ol.type: IDL set to Infinity followed by IDL get 
PASS ol.type: IDL set to -Infinity should not throw 
PASS ol.type: IDL set to -Infinity followed by getAttribute() 
PASS ol.type: IDL set to -Infinity followed by IDL get 
PASS ol.type: IDL set to "\0" should not throw 
PASS ol.type: IDL set to "\0" followed by getAttribute() 
PASS ol.type: IDL set to "\0" followed by IDL get 
PASS ol.type: IDL set to null should not throw 
PASS ol.type: IDL set to null followed by getAttribute() 
PASS ol.type: IDL set to null followed by IDL get 
PASS ol.type: IDL set to object "test-toString" should not throw 
PASS ol.type: IDL set to object "test-toString" followed by getAttribute() 
PASS ol.type: IDL set to object "test-toString" followed by IDL get 
PASS ol.type: IDL set to object "test-valueOf" should not throw 
PASS ol.type: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ol.type: IDL set to object "test-valueOf" followed by IDL get 
PASS ol.compact: typeof IDL attribute 
PASS ol.compact: IDL get with DOM attribute unset 
PASS ol.compact: setAttribute() to "" followed by getAttribute() 
PASS ol.compact: setAttribute() to "" followed by IDL get 
PASS ol.compact: setAttribute() to " foo " followed by getAttribute() 
PASS ol.compact: setAttribute() to " foo " followed by IDL get 
PASS ol.compact: setAttribute() to undefined followed by getAttribute() 
PASS ol.compact: setAttribute() to undefined followed by IDL get 
PASS ol.compact: setAttribute() to null followed by getAttribute() 
PASS ol.compact: setAttribute() to null followed by IDL get 
PASS ol.compact: setAttribute() to 7 followed by getAttribute() 
PASS ol.compact: setAttribute() to 7 followed by IDL get 
PASS ol.compact: setAttribute() to 1.5 followed by getAttribute() 
PASS ol.compact: setAttribute() to 1.5 followed by IDL get 
PASS ol.compact: setAttribute() to true followed by getAttribute() 
PASS ol.compact: setAttribute() to true followed by IDL get 
PASS ol.compact: setAttribute() to false followed by getAttribute() 
PASS ol.compact: setAttribute() to false followed by IDL get 
PASS ol.compact: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ol.compact: setAttribute() to object "[object Object]" followed by IDL get 
PASS ol.compact: setAttribute() to NaN followed by getAttribute() 
PASS ol.compact: setAttribute() to NaN followed by IDL get 
PASS ol.compact: setAttribute() to Infinity followed by getAttribute() 
PASS ol.compact: setAttribute() to Infinity followed by IDL get 
PASS ol.compact: setAttribute() to -Infinity followed by getAttribute() 
PASS ol.compact: setAttribute() to -Infinity followed by IDL get 
PASS ol.compact: setAttribute() to "\0" followed by getAttribute() 
PASS ol.compact: setAttribute() to "\0" followed by IDL get 
PASS ol.compact: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ol.compact: setAttribute() to object "test-toString" followed by IDL get 
PASS ol.compact: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ol.compact: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ol.compact: setAttribute() to "compact" followed by getAttribute() 
PASS ol.compact: setAttribute() to "compact" followed by IDL get 
PASS ol.compact: IDL set to "" should not throw 
PASS ol.compact: IDL set to "" followed by hasAttribute() 
PASS ol.compact: IDL set to "" followed by IDL get 
PASS ol.compact: IDL set to " foo " should not throw 
PASS ol.compact: IDL set to " foo " followed by hasAttribute() 
PASS ol.compact: IDL set to " foo " followed by IDL get 
PASS ol.compact: IDL set to undefined should not throw 
PASS ol.compact: IDL set to undefined followed by hasAttribute() 
PASS ol.compact: IDL set to undefined followed by IDL get 
PASS ol.compact: IDL set to null should not throw 
PASS ol.compact: IDL set to null followed by hasAttribute() 
PASS ol.compact: IDL set to null followed by IDL get 
PASS ol.compact: IDL set to 7 should not throw 
PASS ol.compact: IDL set to 7 followed by hasAttribute() 
PASS ol.compact: IDL set to 7 followed by IDL get 
PASS ol.compact: IDL set to 1.5 should not throw 
PASS ol.compact: IDL set to 1.5 followed by hasAttribute() 
PASS ol.compact: IDL set to 1.5 followed by IDL get 
PASS ol.compact: IDL set to true should not throw 
PASS ol.compact: IDL set to true followed by hasAttribute() 
PASS ol.compact: IDL set to true followed by IDL get 
PASS ol.compact: IDL set to false should not throw 
PASS ol.compact: IDL set to false followed by hasAttribute() 
PASS ol.compact: IDL set to false followed by IDL get 
PASS ol.compact: IDL set to object "[object Object]" should not throw 
PASS ol.compact: IDL set to object "[object Object]" followed by hasAttribute() 
PASS ol.compact: IDL set to object "[object Object]" followed by IDL get 
PASS ol.compact: IDL set to NaN should not throw 
PASS ol.compact: IDL set to NaN followed by hasAttribute() 
PASS ol.compact: IDL set to NaN followed by IDL get 
PASS ol.compact: IDL set to Infinity should not throw 
PASS ol.compact: IDL set to Infinity followed by hasAttribute() 
PASS ol.compact: IDL set to Infinity followed by IDL get 
PASS ol.compact: IDL set to -Infinity should not throw 
PASS ol.compact: IDL set to -Infinity followed by hasAttribute() 
PASS ol.compact: IDL set to -Infinity followed by IDL get 
PASS ol.compact: IDL set to "\0" should not throw 
PASS ol.compact: IDL set to "\0" followed by hasAttribute() 
PASS ol.compact: IDL set to "\0" followed by IDL get 
PASS ol.compact: IDL set to object "test-toString" should not throw 
PASS ol.compact: IDL set to object "test-toString" followed by hasAttribute() 
PASS ol.compact: IDL set to object "test-toString" followed by IDL get 
PASS ol.compact: IDL set to object "test-valueOf" should not throw 
PASS ol.compact: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS ol.compact: IDL set to object "test-valueOf" followed by IDL get 
FAIL ol.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL ol.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS ol.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to null followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to true followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to false followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL ol.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ol.itemScope: IDL set to "" should not throw 
FAIL ol.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL ol.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS ol.itemScope: IDL set to " foo " should not throw 
PASS ol.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL ol.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS ol.itemScope: IDL set to undefined should not throw 
FAIL ol.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL ol.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS ol.itemScope: IDL set to null should not throw 
FAIL ol.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL ol.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS ol.itemScope: IDL set to 7 should not throw 
PASS ol.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL ol.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS ol.itemScope: IDL set to 1.5 should not throw 
PASS ol.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL ol.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS ol.itemScope: IDL set to true should not throw 
PASS ol.itemScope: IDL set to true followed by hasAttribute() 
PASS ol.itemScope: IDL set to true followed by IDL get 
PASS ol.itemScope: IDL set to false should not throw 
FAIL ol.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS ol.itemScope: IDL set to false followed by IDL get 
PASS ol.itemScope: IDL set to object "[object Object]" should not throw 
PASS ol.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL ol.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS ol.itemScope: IDL set to NaN should not throw 
FAIL ol.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL ol.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS ol.itemScope: IDL set to Infinity should not throw 
PASS ol.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL ol.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS ol.itemScope: IDL set to -Infinity should not throw 
PASS ol.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL ol.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS ol.itemScope: IDL set to "\0" should not throw 
PASS ol.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL ol.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS ol.itemScope: IDL set to object "test-toString" should not throw 
PASS ol.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL ol.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS ol.itemScope: IDL set to object "test-valueOf" should not throw 
PASS ol.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL ol.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL ol.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL ol.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS ol.itemId: setAttribute() to "" followed by getAttribute() 
FAIL ol.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS ol.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL ol.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS ol.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL ol.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS ol.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL ol.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS ol.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL ol.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS ol.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL ol.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS ol.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL ol.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS ol.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL ol.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS ol.itemId: setAttribute() to true followed by getAttribute() 
FAIL ol.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS ol.itemId: setAttribute() to false followed by getAttribute() 
FAIL ol.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS ol.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL ol.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS ol.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL ol.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS ol.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL ol.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS ol.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL ol.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS ol.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL ol.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS ol.itemId: setAttribute() to null followed by getAttribute() 
FAIL ol.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS ol.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL ol.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS ol.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL ol.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS ol.itemId: IDL set to "" should not throw 
FAIL ol.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL ol.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS ol.itemId: IDL set to " foo " should not throw 
FAIL ol.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL ol.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS ol.itemId: IDL set to "http://site.example/" should not throw 
FAIL ol.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS ol.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS ol.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL ol.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL ol.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS ol.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL ol.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL ol.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS ol.itemId: IDL set to undefined should not throw 
FAIL ol.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL ol.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS ol.itemId: IDL set to 7 should not throw 
FAIL ol.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL ol.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS ol.itemId: IDL set to 1.5 should not throw 
FAIL ol.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL ol.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS ol.itemId: IDL set to true should not throw 
FAIL ol.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL ol.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS ol.itemId: IDL set to false should not throw 
FAIL ol.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL ol.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS ol.itemId: IDL set to object "[object Object]" should not throw 
FAIL ol.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL ol.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS ol.itemId: IDL set to NaN should not throw 
FAIL ol.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL ol.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS ol.itemId: IDL set to Infinity should not throw 
FAIL ol.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL ol.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS ol.itemId: IDL set to -Infinity should not throw 
FAIL ol.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL ol.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS ol.itemId: IDL set to "\0" should not throw 
FAIL ol.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL ol.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS ol.itemId: IDL set to null should not throw 
FAIL ol.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL ol.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS ol.itemId: IDL set to object "test-toString" should not throw 
FAIL ol.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL ol.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS ol.itemId: IDL set to object "test-valueOf" should not throw 
PASS ol.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL ol.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS ul.title: typeof IDL attribute 
PASS ul.title: IDL get with DOM attribute unset 
PASS ul.title: setAttribute() to "" followed by getAttribute() 
PASS ul.title: setAttribute() to "" followed by IDL get 
PASS ul.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ul.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ul.title: setAttribute() to undefined followed by getAttribute() 
PASS ul.title: setAttribute() to undefined followed by IDL get 
PASS ul.title: setAttribute() to 7 followed by getAttribute() 
PASS ul.title: setAttribute() to 7 followed by IDL get 
PASS ul.title: setAttribute() to 1.5 followed by getAttribute() 
PASS ul.title: setAttribute() to 1.5 followed by IDL get 
PASS ul.title: setAttribute() to true followed by getAttribute() 
PASS ul.title: setAttribute() to true followed by IDL get 
PASS ul.title: setAttribute() to false followed by getAttribute() 
PASS ul.title: setAttribute() to false followed by IDL get 
PASS ul.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ul.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS ul.title: setAttribute() to NaN followed by getAttribute() 
PASS ul.title: setAttribute() to NaN followed by IDL get 
PASS ul.title: setAttribute() to Infinity followed by getAttribute() 
PASS ul.title: setAttribute() to Infinity followed by IDL get 
PASS ul.title: setAttribute() to -Infinity followed by getAttribute() 
PASS ul.title: setAttribute() to -Infinity followed by IDL get 
PASS ul.title: setAttribute() to "\0" followed by getAttribute() 
PASS ul.title: setAttribute() to "\0" followed by IDL get 
PASS ul.title: setAttribute() to null followed by getAttribute() 
PASS ul.title: setAttribute() to null followed by IDL get 
PASS ul.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ul.title: setAttribute() to object "test-toString" followed by IDL get 
PASS ul.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ul.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ul.title: IDL set to "" should not throw 
PASS ul.title: IDL set to "" followed by getAttribute() 
PASS ul.title: IDL set to "" followed by IDL get 
PASS ul.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ul.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ul.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ul.title: IDL set to undefined should not throw 
PASS ul.title: IDL set to undefined followed by getAttribute() 
PASS ul.title: IDL set to undefined followed by IDL get 
PASS ul.title: IDL set to 7 should not throw 
PASS ul.title: IDL set to 7 followed by getAttribute() 
PASS ul.title: IDL set to 7 followed by IDL get 
PASS ul.title: IDL set to 1.5 should not throw 
PASS ul.title: IDL set to 1.5 followed by getAttribute() 
PASS ul.title: IDL set to 1.5 followed by IDL get 
PASS ul.title: IDL set to true should not throw 
PASS ul.title: IDL set to true followed by getAttribute() 
PASS ul.title: IDL set to true followed by IDL get 
PASS ul.title: IDL set to false should not throw 
PASS ul.title: IDL set to false followed by getAttribute() 
PASS ul.title: IDL set to false followed by IDL get 
PASS ul.title: IDL set to object "[object Object]" should not throw 
PASS ul.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS ul.title: IDL set to object "[object Object]" followed by IDL get 
PASS ul.title: IDL set to NaN should not throw 
PASS ul.title: IDL set to NaN followed by getAttribute() 
PASS ul.title: IDL set to NaN followed by IDL get 
PASS ul.title: IDL set to Infinity should not throw 
PASS ul.title: IDL set to Infinity followed by getAttribute() 
PASS ul.title: IDL set to Infinity followed by IDL get 
PASS ul.title: IDL set to -Infinity should not throw 
PASS ul.title: IDL set to -Infinity followed by getAttribute() 
PASS ul.title: IDL set to -Infinity followed by IDL get 
PASS ul.title: IDL set to "\0" should not throw 
PASS ul.title: IDL set to "\0" followed by getAttribute() 
PASS ul.title: IDL set to "\0" followed by IDL get 
PASS ul.title: IDL set to null should not throw 
PASS ul.title: IDL set to null followed by getAttribute() 
PASS ul.title: IDL set to null followed by IDL get 
PASS ul.title: IDL set to object "test-toString" should not throw 
PASS ul.title: IDL set to object "test-toString" followed by getAttribute() 
PASS ul.title: IDL set to object "test-toString" followed by IDL get 
PASS ul.title: IDL set to object "test-valueOf" should not throw 
PASS ul.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ul.title: IDL set to object "test-valueOf" followed by IDL get 
PASS ul.lang: typeof IDL attribute 
PASS ul.lang: IDL get with DOM attribute unset 
PASS ul.lang: setAttribute() to "" followed by getAttribute() 
PASS ul.lang: setAttribute() to "" followed by IDL get 
PASS ul.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ul.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ul.lang: setAttribute() to undefined followed by getAttribute() 
PASS ul.lang: setAttribute() to undefined followed by IDL get 
PASS ul.lang: setAttribute() to 7 followed by getAttribute() 
PASS ul.lang: setAttribute() to 7 followed by IDL get 
PASS ul.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS ul.lang: setAttribute() to 1.5 followed by IDL get 
PASS ul.lang: setAttribute() to true followed by getAttribute() 
PASS ul.lang: setAttribute() to true followed by IDL get 
PASS ul.lang: setAttribute() to false followed by getAttribute() 
PASS ul.lang: setAttribute() to false followed by IDL get 
PASS ul.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ul.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS ul.lang: setAttribute() to NaN followed by getAttribute() 
PASS ul.lang: setAttribute() to NaN followed by IDL get 
PASS ul.lang: setAttribute() to Infinity followed by getAttribute() 
PASS ul.lang: setAttribute() to Infinity followed by IDL get 
PASS ul.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS ul.lang: setAttribute() to -Infinity followed by IDL get 
PASS ul.lang: setAttribute() to "\0" followed by getAttribute() 
PASS ul.lang: setAttribute() to "\0" followed by IDL get 
PASS ul.lang: setAttribute() to null followed by getAttribute() 
PASS ul.lang: setAttribute() to null followed by IDL get 
PASS ul.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ul.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS ul.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ul.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ul.lang: IDL set to "" should not throw 
PASS ul.lang: IDL set to "" followed by getAttribute() 
PASS ul.lang: IDL set to "" followed by IDL get 
PASS ul.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ul.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ul.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ul.lang: IDL set to undefined should not throw 
PASS ul.lang: IDL set to undefined followed by getAttribute() 
PASS ul.lang: IDL set to undefined followed by IDL get 
PASS ul.lang: IDL set to 7 should not throw 
PASS ul.lang: IDL set to 7 followed by getAttribute() 
PASS ul.lang: IDL set to 7 followed by IDL get 
PASS ul.lang: IDL set to 1.5 should not throw 
PASS ul.lang: IDL set to 1.5 followed by getAttribute() 
PASS ul.lang: IDL set to 1.5 followed by IDL get 
PASS ul.lang: IDL set to true should not throw 
PASS ul.lang: IDL set to true followed by getAttribute() 
PASS ul.lang: IDL set to true followed by IDL get 
PASS ul.lang: IDL set to false should not throw 
PASS ul.lang: IDL set to false followed by getAttribute() 
PASS ul.lang: IDL set to false followed by IDL get 
PASS ul.lang: IDL set to object "[object Object]" should not throw 
PASS ul.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS ul.lang: IDL set to object "[object Object]" followed by IDL get 
PASS ul.lang: IDL set to NaN should not throw 
PASS ul.lang: IDL set to NaN followed by getAttribute() 
PASS ul.lang: IDL set to NaN followed by IDL get 
PASS ul.lang: IDL set to Infinity should not throw 
PASS ul.lang: IDL set to Infinity followed by getAttribute() 
PASS ul.lang: IDL set to Infinity followed by IDL get 
PASS ul.lang: IDL set to -Infinity should not throw 
PASS ul.lang: IDL set to -Infinity followed by getAttribute() 
PASS ul.lang: IDL set to -Infinity followed by IDL get 
PASS ul.lang: IDL set to "\0" should not throw 
PASS ul.lang: IDL set to "\0" followed by getAttribute() 
PASS ul.lang: IDL set to "\0" followed by IDL get 
PASS ul.lang: IDL set to null should not throw 
PASS ul.lang: IDL set to null followed by getAttribute() 
PASS ul.lang: IDL set to null followed by IDL get 
PASS ul.lang: IDL set to object "test-toString" should not throw 
PASS ul.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS ul.lang: IDL set to object "test-toString" followed by IDL get 
PASS ul.lang: IDL set to object "test-valueOf" should not throw 
PASS ul.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ul.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS ul.dir: typeof IDL attribute 
PASS ul.dir: IDL get with DOM attribute unset 
PASS ul.dir: setAttribute() to "" followed by getAttribute() 
PASS ul.dir: setAttribute() to "" followed by IDL get 
PASS ul.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ul.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ul.dir: setAttribute() to undefined followed by getAttribute() 
PASS ul.dir: setAttribute() to undefined followed by IDL get 
PASS ul.dir: setAttribute() to 7 followed by getAttribute() 
PASS ul.dir: setAttribute() to 7 followed by IDL get 
PASS ul.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS ul.dir: setAttribute() to 1.5 followed by IDL get 
PASS ul.dir: setAttribute() to true followed by getAttribute() 
PASS ul.dir: setAttribute() to true followed by IDL get 
PASS ul.dir: setAttribute() to false followed by getAttribute() 
PASS ul.dir: setAttribute() to false followed by IDL get 
PASS ul.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ul.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS ul.dir: setAttribute() to NaN followed by getAttribute() 
PASS ul.dir: setAttribute() to NaN followed by IDL get 
PASS ul.dir: setAttribute() to Infinity followed by getAttribute() 
PASS ul.dir: setAttribute() to Infinity followed by IDL get 
PASS ul.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS ul.dir: setAttribute() to -Infinity followed by IDL get 
PASS ul.dir: setAttribute() to "\0" followed by getAttribute() 
PASS ul.dir: setAttribute() to "\0" followed by IDL get 
PASS ul.dir: setAttribute() to null followed by getAttribute() 
PASS ul.dir: setAttribute() to null followed by IDL get 
PASS ul.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ul.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS ul.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ul.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ul.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS ul.dir: setAttribute() to "ltr" followed by IDL get 
PASS ul.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS ul.dir: setAttribute() to "xltr" followed by IDL get 
PASS ul.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS ul.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS ul.dir: setAttribute() to "tr" followed by getAttribute() 
PASS ul.dir: setAttribute() to "tr" followed by IDL get 
PASS ul.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS ul.dir: setAttribute() to "LTR" followed by IDL get 
PASS ul.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS ul.dir: setAttribute() to "rtl" followed by IDL get 
PASS ul.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS ul.dir: setAttribute() to "xrtl" followed by IDL get 
PASS ul.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS ul.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS ul.dir: setAttribute() to "tl" followed by getAttribute() 
PASS ul.dir: setAttribute() to "tl" followed by IDL get 
PASS ul.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS ul.dir: setAttribute() to "RTL" followed by IDL get 
PASS ul.dir: setAttribute() to "auto" followed by getAttribute() 
PASS ul.dir: setAttribute() to "auto" followed by IDL get 
PASS ul.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS ul.dir: setAttribute() to "xauto" followed by IDL get 
PASS ul.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS ul.dir: setAttribute() to "auto\0" followed by IDL get 
PASS ul.dir: setAttribute() to "uto" followed by getAttribute() 
PASS ul.dir: setAttribute() to "uto" followed by IDL get 
PASS ul.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS ul.dir: setAttribute() to "AUTO" followed by IDL get 
PASS ul.dir: IDL set to "" should not throw 
PASS ul.dir: IDL set to "" followed by getAttribute() 
PASS ul.dir: IDL set to "" followed by IDL get 
PASS ul.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ul.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ul.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ul.dir: IDL set to undefined should not throw 
PASS ul.dir: IDL set to undefined followed by getAttribute() 
PASS ul.dir: IDL set to undefined followed by IDL get 
PASS ul.dir: IDL set to 7 should not throw 
PASS ul.dir: IDL set to 7 followed by getAttribute() 
PASS ul.dir: IDL set to 7 followed by IDL get 
PASS ul.dir: IDL set to 1.5 should not throw 
PASS ul.dir: IDL set to 1.5 followed by getAttribute() 
PASS ul.dir: IDL set to 1.5 followed by IDL get 
PASS ul.dir: IDL set to true should not throw 
PASS ul.dir: IDL set to true followed by getAttribute() 
PASS ul.dir: IDL set to true followed by IDL get 
PASS ul.dir: IDL set to false should not throw 
PASS ul.dir: IDL set to false followed by getAttribute() 
PASS ul.dir: IDL set to false followed by IDL get 
PASS ul.dir: IDL set to object "[object Object]" should not throw 
PASS ul.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS ul.dir: IDL set to object "[object Object]" followed by IDL get 
PASS ul.dir: IDL set to NaN should not throw 
PASS ul.dir: IDL set to NaN followed by getAttribute() 
PASS ul.dir: IDL set to NaN followed by IDL get 
PASS ul.dir: IDL set to Infinity should not throw 
PASS ul.dir: IDL set to Infinity followed by getAttribute() 
PASS ul.dir: IDL set to Infinity followed by IDL get 
PASS ul.dir: IDL set to -Infinity should not throw 
PASS ul.dir: IDL set to -Infinity followed by getAttribute() 
PASS ul.dir: IDL set to -Infinity followed by IDL get 
PASS ul.dir: IDL set to "\0" should not throw 
PASS ul.dir: IDL set to "\0" followed by getAttribute() 
PASS ul.dir: IDL set to "\0" followed by IDL get 
PASS ul.dir: IDL set to null should not throw 
PASS ul.dir: IDL set to null followed by IDL get 
PASS ul.dir: IDL set to object "test-toString" should not throw 
PASS ul.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS ul.dir: IDL set to object "test-toString" followed by IDL get 
PASS ul.dir: IDL set to object "test-valueOf" should not throw 
PASS ul.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ul.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS ul.dir: IDL set to "ltr" should not throw 
PASS ul.dir: IDL set to "ltr" followed by getAttribute() 
PASS ul.dir: IDL set to "ltr" followed by IDL get 
PASS ul.dir: IDL set to "xltr" should not throw 
PASS ul.dir: IDL set to "xltr" followed by getAttribute() 
PASS ul.dir: IDL set to "xltr" followed by IDL get 
PASS ul.dir: IDL set to "ltr\0" should not throw 
PASS ul.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS ul.dir: IDL set to "ltr\0" followed by IDL get 
PASS ul.dir: IDL set to "tr" should not throw 
PASS ul.dir: IDL set to "tr" followed by getAttribute() 
PASS ul.dir: IDL set to "tr" followed by IDL get 
PASS ul.dir: IDL set to "LTR" should not throw 
PASS ul.dir: IDL set to "LTR" followed by getAttribute() 
PASS ul.dir: IDL set to "LTR" followed by IDL get 
PASS ul.dir: IDL set to "rtl" should not throw 
PASS ul.dir: IDL set to "rtl" followed by getAttribute() 
PASS ul.dir: IDL set to "rtl" followed by IDL get 
PASS ul.dir: IDL set to "xrtl" should not throw 
PASS ul.dir: IDL set to "xrtl" followed by getAttribute() 
PASS ul.dir: IDL set to "xrtl" followed by IDL get 
PASS ul.dir: IDL set to "rtl\0" should not throw 
PASS ul.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS ul.dir: IDL set to "rtl\0" followed by IDL get 
PASS ul.dir: IDL set to "tl" should not throw 
PASS ul.dir: IDL set to "tl" followed by getAttribute() 
PASS ul.dir: IDL set to "tl" followed by IDL get 
PASS ul.dir: IDL set to "RTL" should not throw 
PASS ul.dir: IDL set to "RTL" followed by getAttribute() 
PASS ul.dir: IDL set to "RTL" followed by IDL get 
PASS ul.dir: IDL set to "auto" should not throw 
PASS ul.dir: IDL set to "auto" followed by getAttribute() 
PASS ul.dir: IDL set to "auto" followed by IDL get 
PASS ul.dir: IDL set to "xauto" should not throw 
PASS ul.dir: IDL set to "xauto" followed by getAttribute() 
PASS ul.dir: IDL set to "xauto" followed by IDL get 
PASS ul.dir: IDL set to "auto\0" should not throw 
PASS ul.dir: IDL set to "auto\0" followed by getAttribute() 
PASS ul.dir: IDL set to "auto\0" followed by IDL get 
PASS ul.dir: IDL set to "uto" should not throw 
PASS ul.dir: IDL set to "uto" followed by getAttribute() 
PASS ul.dir: IDL set to "uto" followed by IDL get 
PASS ul.dir: IDL set to "AUTO" should not throw 
PASS ul.dir: IDL set to "AUTO" followed by getAttribute() 
PASS ul.dir: IDL set to "AUTO" followed by IDL get 
PASS ul.className (<ul class>): typeof IDL attribute 
PASS ul.className (<ul class>): IDL get with DOM attribute unset 
PASS ul.className (<ul class>): setAttribute() to "" followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to "" followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to undefined followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to undefined followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to 7 followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to 7 followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to 1.5 followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to 1.5 followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to true followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to true followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to false followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to false followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to NaN followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to NaN followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to Infinity followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to Infinity followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to -Infinity followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to -Infinity followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to "\0" followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to "\0" followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to null followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to null followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to object "test-toString" followed by IDL get 
PASS ul.className (<ul class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ul.className (<ul class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS ul.className (<ul class>): IDL set to "" should not throw 
PASS ul.className (<ul class>): IDL set to "" followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to "" followed by IDL get 
PASS ul.className (<ul class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ul.className (<ul class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ul.className (<ul class>): IDL set to undefined should not throw 
PASS ul.className (<ul class>): IDL set to undefined followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to undefined followed by IDL get 
PASS ul.className (<ul class>): IDL set to 7 should not throw 
PASS ul.className (<ul class>): IDL set to 7 followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to 7 followed by IDL get 
PASS ul.className (<ul class>): IDL set to 1.5 should not throw 
PASS ul.className (<ul class>): IDL set to 1.5 followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to 1.5 followed by IDL get 
PASS ul.className (<ul class>): IDL set to true should not throw 
PASS ul.className (<ul class>): IDL set to true followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to true followed by IDL get 
PASS ul.className (<ul class>): IDL set to false should not throw 
PASS ul.className (<ul class>): IDL set to false followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to false followed by IDL get 
PASS ul.className (<ul class>): IDL set to object "[object Object]" should not throw 
PASS ul.className (<ul class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to object "[object Object]" followed by IDL get 
PASS ul.className (<ul class>): IDL set to NaN should not throw 
PASS ul.className (<ul class>): IDL set to NaN followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to NaN followed by IDL get 
PASS ul.className (<ul class>): IDL set to Infinity should not throw 
PASS ul.className (<ul class>): IDL set to Infinity followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to Infinity followed by IDL get 
PASS ul.className (<ul class>): IDL set to -Infinity should not throw 
PASS ul.className (<ul class>): IDL set to -Infinity followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to -Infinity followed by IDL get 
PASS ul.className (<ul class>): IDL set to "\0" should not throw 
PASS ul.className (<ul class>): IDL set to "\0" followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to "\0" followed by IDL get 
PASS ul.className (<ul class>): IDL set to null should not throw 
PASS ul.className (<ul class>): IDL set to null followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to null followed by IDL get 
PASS ul.className (<ul class>): IDL set to object "test-toString" should not throw 
PASS ul.className (<ul class>): IDL set to object "test-toString" followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to object "test-toString" followed by IDL get 
PASS ul.className (<ul class>): IDL set to object "test-valueOf" should not throw 
PASS ul.className (<ul class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS ul.className (<ul class>): IDL set to object "test-valueOf" followed by IDL get 
PASS ul.hidden: typeof IDL attribute 
PASS ul.hidden: IDL get with DOM attribute unset 
PASS ul.hidden: setAttribute() to "" followed by getAttribute() 
PASS ul.hidden: setAttribute() to "" followed by IDL get 
PASS ul.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS ul.hidden: setAttribute() to " foo " followed by IDL get 
PASS ul.hidden: setAttribute() to undefined followed by getAttribute() 
PASS ul.hidden: setAttribute() to undefined followed by IDL get 
PASS ul.hidden: setAttribute() to null followed by getAttribute() 
PASS ul.hidden: setAttribute() to null followed by IDL get 
PASS ul.hidden: setAttribute() to 7 followed by getAttribute() 
PASS ul.hidden: setAttribute() to 7 followed by IDL get 
PASS ul.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS ul.hidden: setAttribute() to 1.5 followed by IDL get 
PASS ul.hidden: setAttribute() to true followed by getAttribute() 
PASS ul.hidden: setAttribute() to true followed by IDL get 
PASS ul.hidden: setAttribute() to false followed by getAttribute() 
PASS ul.hidden: setAttribute() to false followed by IDL get 
PASS ul.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ul.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS ul.hidden: setAttribute() to NaN followed by getAttribute() 
PASS ul.hidden: setAttribute() to NaN followed by IDL get 
PASS ul.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS ul.hidden: setAttribute() to Infinity followed by IDL get 
PASS ul.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS ul.hidden: setAttribute() to -Infinity followed by IDL get 
PASS ul.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS ul.hidden: setAttribute() to "\0" followed by IDL get 
PASS ul.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ul.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS ul.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ul.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ul.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS ul.hidden: setAttribute() to "hidden" followed by IDL get 
PASS ul.hidden: IDL set to "" should not throw 
PASS ul.hidden: IDL set to "" followed by hasAttribute() 
PASS ul.hidden: IDL set to "" followed by IDL get 
PASS ul.hidden: IDL set to " foo " should not throw 
PASS ul.hidden: IDL set to " foo " followed by hasAttribute() 
PASS ul.hidden: IDL set to " foo " followed by IDL get 
PASS ul.hidden: IDL set to undefined should not throw 
PASS ul.hidden: IDL set to undefined followed by hasAttribute() 
PASS ul.hidden: IDL set to undefined followed by IDL get 
PASS ul.hidden: IDL set to null should not throw 
PASS ul.hidden: IDL set to null followed by hasAttribute() 
PASS ul.hidden: IDL set to null followed by IDL get 
PASS ul.hidden: IDL set to 7 should not throw 
PASS ul.hidden: IDL set to 7 followed by hasAttribute() 
PASS ul.hidden: IDL set to 7 followed by IDL get 
PASS ul.hidden: IDL set to 1.5 should not throw 
PASS ul.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS ul.hidden: IDL set to 1.5 followed by IDL get 
PASS ul.hidden: IDL set to true should not throw 
PASS ul.hidden: IDL set to true followed by hasAttribute() 
PASS ul.hidden: IDL set to true followed by IDL get 
PASS ul.hidden: IDL set to false should not throw 
PASS ul.hidden: IDL set to false followed by hasAttribute() 
PASS ul.hidden: IDL set to false followed by IDL get 
PASS ul.hidden: IDL set to object "[object Object]" should not throw 
PASS ul.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS ul.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS ul.hidden: IDL set to NaN should not throw 
PASS ul.hidden: IDL set to NaN followed by hasAttribute() 
PASS ul.hidden: IDL set to NaN followed by IDL get 
PASS ul.hidden: IDL set to Infinity should not throw 
PASS ul.hidden: IDL set to Infinity followed by hasAttribute() 
PASS ul.hidden: IDL set to Infinity followed by IDL get 
PASS ul.hidden: IDL set to -Infinity should not throw 
PASS ul.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS ul.hidden: IDL set to -Infinity followed by IDL get 
PASS ul.hidden: IDL set to "\0" should not throw 
PASS ul.hidden: IDL set to "\0" followed by hasAttribute() 
PASS ul.hidden: IDL set to "\0" followed by IDL get 
PASS ul.hidden: IDL set to object "test-toString" should not throw 
PASS ul.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS ul.hidden: IDL set to object "test-toString" followed by IDL get 
PASS ul.hidden: IDL set to object "test-valueOf" should not throw 
PASS ul.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS ul.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS ul.accessKey: typeof IDL attribute 
PASS ul.accessKey: IDL get with DOM attribute unset 
PASS ul.accessKey: setAttribute() to "" followed by getAttribute() 
PASS ul.accessKey: setAttribute() to "" followed by IDL get 
PASS ul.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ul.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ul.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS ul.accessKey: setAttribute() to undefined followed by IDL get 
PASS ul.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS ul.accessKey: setAttribute() to 7 followed by IDL get 
PASS ul.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS ul.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS ul.accessKey: setAttribute() to true followed by getAttribute() 
PASS ul.accessKey: setAttribute() to true followed by IDL get 
PASS ul.accessKey: setAttribute() to false followed by getAttribute() 
PASS ul.accessKey: setAttribute() to false followed by IDL get 
PASS ul.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ul.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS ul.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS ul.accessKey: setAttribute() to NaN followed by IDL get 
PASS ul.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS ul.accessKey: setAttribute() to Infinity followed by IDL get 
PASS ul.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS ul.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS ul.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS ul.accessKey: setAttribute() to "\0" followed by IDL get 
PASS ul.accessKey: setAttribute() to null followed by getAttribute() 
PASS ul.accessKey: setAttribute() to null followed by IDL get 
PASS ul.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ul.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS ul.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ul.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ul.accessKey: IDL set to "" should not throw 
PASS ul.accessKey: IDL set to "" followed by getAttribute() 
PASS ul.accessKey: IDL set to "" followed by IDL get 
PASS ul.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ul.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ul.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ul.accessKey: IDL set to undefined should not throw 
PASS ul.accessKey: IDL set to undefined followed by getAttribute() 
PASS ul.accessKey: IDL set to undefined followed by IDL get 
PASS ul.accessKey: IDL set to 7 should not throw 
PASS ul.accessKey: IDL set to 7 followed by getAttribute() 
PASS ul.accessKey: IDL set to 7 followed by IDL get 
PASS ul.accessKey: IDL set to 1.5 should not throw 
PASS ul.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS ul.accessKey: IDL set to 1.5 followed by IDL get 
PASS ul.accessKey: IDL set to true should not throw 
PASS ul.accessKey: IDL set to true followed by getAttribute() 
PASS ul.accessKey: IDL set to true followed by IDL get 
PASS ul.accessKey: IDL set to false should not throw 
PASS ul.accessKey: IDL set to false followed by getAttribute() 
PASS ul.accessKey: IDL set to false followed by IDL get 
PASS ul.accessKey: IDL set to object "[object Object]" should not throw 
PASS ul.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS ul.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS ul.accessKey: IDL set to NaN should not throw 
PASS ul.accessKey: IDL set to NaN followed by getAttribute() 
PASS ul.accessKey: IDL set to NaN followed by IDL get 
PASS ul.accessKey: IDL set to Infinity should not throw 
PASS ul.accessKey: IDL set to Infinity followed by getAttribute() 
PASS ul.accessKey: IDL set to Infinity followed by IDL get 
PASS ul.accessKey: IDL set to -Infinity should not throw 
PASS ul.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS ul.accessKey: IDL set to -Infinity followed by IDL get 
PASS ul.accessKey: IDL set to "\0" should not throw 
PASS ul.accessKey: IDL set to "\0" followed by getAttribute() 
PASS ul.accessKey: IDL set to "\0" followed by IDL get 
PASS ul.accessKey: IDL set to null should not throw 
PASS ul.accessKey: IDL set to null followed by getAttribute() 
PASS ul.accessKey: IDL set to null followed by IDL get 
PASS ul.accessKey: IDL set to object "test-toString" should not throw 
PASS ul.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS ul.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS ul.accessKey: IDL set to object "test-valueOf" should not throw 
PASS ul.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ul.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS ul.tabIndex: typeof IDL attribute 
PASS ul.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to -36 followed by IDL get 
PASS ul.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to -1 followed by IDL get 
PASS ul.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to 0 followed by IDL get 
PASS ul.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to 1 followed by IDL get 
PASS ul.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS ul.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS ul.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS ul.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS ul.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to "0" followed by IDL get 
PASS ul.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to "1" followed by IDL get 
PASS ul.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS ul.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS ul.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS ul.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS ul.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS ul.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS ul.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS ul.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS ul.tabIndex: IDL set to -36 should not throw 
PASS ul.tabIndex: IDL set to -36 followed by getAttribute() 
PASS ul.tabIndex: IDL set to -36 followed by IDL get 
PASS ul.tabIndex: IDL set to -1 should not throw 
PASS ul.tabIndex: IDL set to -1 followed by getAttribute() 
PASS ul.tabIndex: IDL set to -1 followed by IDL get 
PASS ul.tabIndex: IDL set to 0 should not throw 
PASS ul.tabIndex: IDL set to 0 followed by getAttribute() 
PASS ul.tabIndex: IDL set to 0 followed by IDL get 
PASS ul.tabIndex: IDL set to 1 should not throw 
PASS ul.tabIndex: IDL set to 1 followed by getAttribute() 
PASS ul.tabIndex: IDL set to 1 followed by IDL get 
PASS ul.tabIndex: IDL set to 2147483647 should not throw 
PASS ul.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS ul.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS ul.tabIndex: IDL set to -2147483648 should not throw 
PASS ul.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS ul.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS ul.compact: typeof IDL attribute 
PASS ul.compact: IDL get with DOM attribute unset 
PASS ul.compact: setAttribute() to "" followed by getAttribute() 
PASS ul.compact: setAttribute() to "" followed by IDL get 
PASS ul.compact: setAttribute() to " foo " followed by getAttribute() 
PASS ul.compact: setAttribute() to " foo " followed by IDL get 
PASS ul.compact: setAttribute() to undefined followed by getAttribute() 
PASS ul.compact: setAttribute() to undefined followed by IDL get 
PASS ul.compact: setAttribute() to null followed by getAttribute() 
PASS ul.compact: setAttribute() to null followed by IDL get 
PASS ul.compact: setAttribute() to 7 followed by getAttribute() 
PASS ul.compact: setAttribute() to 7 followed by IDL get 
PASS ul.compact: setAttribute() to 1.5 followed by getAttribute() 
PASS ul.compact: setAttribute() to 1.5 followed by IDL get 
PASS ul.compact: setAttribute() to true followed by getAttribute() 
PASS ul.compact: setAttribute() to true followed by IDL get 
PASS ul.compact: setAttribute() to false followed by getAttribute() 
PASS ul.compact: setAttribute() to false followed by IDL get 
PASS ul.compact: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ul.compact: setAttribute() to object "[object Object]" followed by IDL get 
PASS ul.compact: setAttribute() to NaN followed by getAttribute() 
PASS ul.compact: setAttribute() to NaN followed by IDL get 
PASS ul.compact: setAttribute() to Infinity followed by getAttribute() 
PASS ul.compact: setAttribute() to Infinity followed by IDL get 
PASS ul.compact: setAttribute() to -Infinity followed by getAttribute() 
PASS ul.compact: setAttribute() to -Infinity followed by IDL get 
PASS ul.compact: setAttribute() to "\0" followed by getAttribute() 
PASS ul.compact: setAttribute() to "\0" followed by IDL get 
PASS ul.compact: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ul.compact: setAttribute() to object "test-toString" followed by IDL get 
PASS ul.compact: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ul.compact: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ul.compact: setAttribute() to "compact" followed by getAttribute() 
PASS ul.compact: setAttribute() to "compact" followed by IDL get 
PASS ul.compact: IDL set to "" should not throw 
PASS ul.compact: IDL set to "" followed by hasAttribute() 
PASS ul.compact: IDL set to "" followed by IDL get 
PASS ul.compact: IDL set to " foo " should not throw 
PASS ul.compact: IDL set to " foo " followed by hasAttribute() 
PASS ul.compact: IDL set to " foo " followed by IDL get 
PASS ul.compact: IDL set to undefined should not throw 
PASS ul.compact: IDL set to undefined followed by hasAttribute() 
PASS ul.compact: IDL set to undefined followed by IDL get 
PASS ul.compact: IDL set to null should not throw 
PASS ul.compact: IDL set to null followed by hasAttribute() 
PASS ul.compact: IDL set to null followed by IDL get 
PASS ul.compact: IDL set to 7 should not throw 
PASS ul.compact: IDL set to 7 followed by hasAttribute() 
PASS ul.compact: IDL set to 7 followed by IDL get 
PASS ul.compact: IDL set to 1.5 should not throw 
PASS ul.compact: IDL set to 1.5 followed by hasAttribute() 
PASS ul.compact: IDL set to 1.5 followed by IDL get 
PASS ul.compact: IDL set to true should not throw 
PASS ul.compact: IDL set to true followed by hasAttribute() 
PASS ul.compact: IDL set to true followed by IDL get 
PASS ul.compact: IDL set to false should not throw 
PASS ul.compact: IDL set to false followed by hasAttribute() 
PASS ul.compact: IDL set to false followed by IDL get 
PASS ul.compact: IDL set to object "[object Object]" should not throw 
PASS ul.compact: IDL set to object "[object Object]" followed by hasAttribute() 
PASS ul.compact: IDL set to object "[object Object]" followed by IDL get 
PASS ul.compact: IDL set to NaN should not throw 
PASS ul.compact: IDL set to NaN followed by hasAttribute() 
PASS ul.compact: IDL set to NaN followed by IDL get 
PASS ul.compact: IDL set to Infinity should not throw 
PASS ul.compact: IDL set to Infinity followed by hasAttribute() 
PASS ul.compact: IDL set to Infinity followed by IDL get 
PASS ul.compact: IDL set to -Infinity should not throw 
PASS ul.compact: IDL set to -Infinity followed by hasAttribute() 
PASS ul.compact: IDL set to -Infinity followed by IDL get 
PASS ul.compact: IDL set to "\0" should not throw 
PASS ul.compact: IDL set to "\0" followed by hasAttribute() 
PASS ul.compact: IDL set to "\0" followed by IDL get 
PASS ul.compact: IDL set to object "test-toString" should not throw 
PASS ul.compact: IDL set to object "test-toString" followed by hasAttribute() 
PASS ul.compact: IDL set to object "test-toString" followed by IDL get 
PASS ul.compact: IDL set to object "test-valueOf" should not throw 
PASS ul.compact: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS ul.compact: IDL set to object "test-valueOf" followed by IDL get 
PASS ul.type: typeof IDL attribute 
PASS ul.type: IDL get with DOM attribute unset 
PASS ul.type: setAttribute() to "" followed by getAttribute() 
PASS ul.type: setAttribute() to "" followed by IDL get 
PASS ul.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ul.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ul.type: setAttribute() to undefined followed by getAttribute() 
PASS ul.type: setAttribute() to undefined followed by IDL get 
PASS ul.type: setAttribute() to 7 followed by getAttribute() 
PASS ul.type: setAttribute() to 7 followed by IDL get 
PASS ul.type: setAttribute() to 1.5 followed by getAttribute() 
PASS ul.type: setAttribute() to 1.5 followed by IDL get 
PASS ul.type: setAttribute() to true followed by getAttribute() 
PASS ul.type: setAttribute() to true followed by IDL get 
PASS ul.type: setAttribute() to false followed by getAttribute() 
PASS ul.type: setAttribute() to false followed by IDL get 
PASS ul.type: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS ul.type: setAttribute() to object "[object Object]" followed by IDL get 
PASS ul.type: setAttribute() to NaN followed by getAttribute() 
PASS ul.type: setAttribute() to NaN followed by IDL get 
PASS ul.type: setAttribute() to Infinity followed by getAttribute() 
PASS ul.type: setAttribute() to Infinity followed by IDL get 
PASS ul.type: setAttribute() to -Infinity followed by getAttribute() 
PASS ul.type: setAttribute() to -Infinity followed by IDL get 
PASS ul.type: setAttribute() to "\0" followed by getAttribute() 
PASS ul.type: setAttribute() to "\0" followed by IDL get 
PASS ul.type: setAttribute() to null followed by getAttribute() 
PASS ul.type: setAttribute() to null followed by IDL get 
PASS ul.type: setAttribute() to object "test-toString" followed by getAttribute() 
PASS ul.type: setAttribute() to object "test-toString" followed by IDL get 
PASS ul.type: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS ul.type: setAttribute() to object "test-valueOf" followed by IDL get 
PASS ul.type: IDL set to "" should not throw 
PASS ul.type: IDL set to "" followed by getAttribute() 
PASS ul.type: IDL set to "" followed by IDL get 
PASS ul.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS ul.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS ul.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS ul.type: IDL set to undefined should not throw 
PASS ul.type: IDL set to undefined followed by getAttribute() 
PASS ul.type: IDL set to undefined followed by IDL get 
PASS ul.type: IDL set to 7 should not throw 
PASS ul.type: IDL set to 7 followed by getAttribute() 
PASS ul.type: IDL set to 7 followed by IDL get 
PASS ul.type: IDL set to 1.5 should not throw 
PASS ul.type: IDL set to 1.5 followed by getAttribute() 
PASS ul.type: IDL set to 1.5 followed by IDL get 
PASS ul.type: IDL set to true should not throw 
PASS ul.type: IDL set to true followed by getAttribute() 
PASS ul.type: IDL set to true followed by IDL get 
PASS ul.type: IDL set to false should not throw 
PASS ul.type: IDL set to false followed by getAttribute() 
PASS ul.type: IDL set to false followed by IDL get 
PASS ul.type: IDL set to object "[object Object]" should not throw 
PASS ul.type: IDL set to object "[object Object]" followed by getAttribute() 
PASS ul.type: IDL set to object "[object Object]" followed by IDL get 
PASS ul.type: IDL set to NaN should not throw 
PASS ul.type: IDL set to NaN followed by getAttribute() 
PASS ul.type: IDL set to NaN followed by IDL get 
PASS ul.type: IDL set to Infinity should not throw 
PASS ul.type: IDL set to Infinity followed by getAttribute() 
PASS ul.type: IDL set to Infinity followed by IDL get 
PASS ul.type: IDL set to -Infinity should not throw 
PASS ul.type: IDL set to -Infinity followed by getAttribute() 
PASS ul.type: IDL set to -Infinity followed by IDL get 
PASS ul.type: IDL set to "\0" should not throw 
PASS ul.type: IDL set to "\0" followed by getAttribute() 
PASS ul.type: IDL set to "\0" followed by IDL get 
PASS ul.type: IDL set to null should not throw 
PASS ul.type: IDL set to null followed by getAttribute() 
PASS ul.type: IDL set to null followed by IDL get 
PASS ul.type: IDL set to object "test-toString" should not throw 
PASS ul.type: IDL set to object "test-toString" followed by getAttribute() 
PASS ul.type: IDL set to object "test-toString" followed by IDL get 
PASS ul.type: IDL set to object "test-valueOf" should not throw 
PASS ul.type: IDL set to object "test-valueOf" followed by getAttribute() 
PASS ul.type: IDL set to object "test-valueOf" followed by IDL get 
FAIL ul.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL ul.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS ul.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to null followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to true followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to false followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL ul.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS ul.itemScope: IDL set to "" should not throw 
FAIL ul.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL ul.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS ul.itemScope: IDL set to " foo " should not throw 
PASS ul.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL ul.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS ul.itemScope: IDL set to undefined should not throw 
FAIL ul.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL ul.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS ul.itemScope: IDL set to null should not throw 
FAIL ul.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL ul.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS ul.itemScope: IDL set to 7 should not throw 
PASS ul.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL ul.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS ul.itemScope: IDL set to 1.5 should not throw 
PASS ul.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL ul.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS ul.itemScope: IDL set to true should not throw 
PASS ul.itemScope: IDL set to true followed by hasAttribute() 
PASS ul.itemScope: IDL set to true followed by IDL get 
PASS ul.itemScope: IDL set to false should not throw 
FAIL ul.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS ul.itemScope: IDL set to false followed by IDL get 
PASS ul.itemScope: IDL set to object "[object Object]" should not throw 
PASS ul.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL ul.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS ul.itemScope: IDL set to NaN should not throw 
FAIL ul.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL ul.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS ul.itemScope: IDL set to Infinity should not throw 
PASS ul.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL ul.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS ul.itemScope: IDL set to -Infinity should not throw 
PASS ul.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL ul.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS ul.itemScope: IDL set to "\0" should not throw 
PASS ul.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL ul.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS ul.itemScope: IDL set to object "test-toString" should not throw 
PASS ul.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL ul.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS ul.itemScope: IDL set to object "test-valueOf" should not throw 
PASS ul.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL ul.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL ul.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL ul.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS ul.itemId: setAttribute() to "" followed by getAttribute() 
FAIL ul.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS ul.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL ul.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS ul.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL ul.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS ul.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL ul.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS ul.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL ul.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS ul.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL ul.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS ul.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL ul.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS ul.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL ul.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS ul.itemId: setAttribute() to true followed by getAttribute() 
FAIL ul.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS ul.itemId: setAttribute() to false followed by getAttribute() 
FAIL ul.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS ul.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL ul.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS ul.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL ul.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS ul.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL ul.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS ul.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL ul.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS ul.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL ul.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS ul.itemId: setAttribute() to null followed by getAttribute() 
FAIL ul.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS ul.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL ul.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS ul.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL ul.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS ul.itemId: IDL set to "" should not throw 
FAIL ul.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL ul.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS ul.itemId: IDL set to " foo " should not throw 
FAIL ul.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL ul.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS ul.itemId: IDL set to "http://site.example/" should not throw 
FAIL ul.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS ul.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS ul.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL ul.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL ul.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS ul.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL ul.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL ul.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS ul.itemId: IDL set to undefined should not throw 
FAIL ul.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL ul.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS ul.itemId: IDL set to 7 should not throw 
FAIL ul.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL ul.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS ul.itemId: IDL set to 1.5 should not throw 
FAIL ul.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL ul.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS ul.itemId: IDL set to true should not throw 
FAIL ul.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL ul.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS ul.itemId: IDL set to false should not throw 
FAIL ul.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL ul.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS ul.itemId: IDL set to object "[object Object]" should not throw 
FAIL ul.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL ul.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS ul.itemId: IDL set to NaN should not throw 
FAIL ul.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL ul.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS ul.itemId: IDL set to Infinity should not throw 
FAIL ul.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL ul.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS ul.itemId: IDL set to -Infinity should not throw 
FAIL ul.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL ul.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS ul.itemId: IDL set to "\0" should not throw 
FAIL ul.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL ul.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS ul.itemId: IDL set to null should not throw 
FAIL ul.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL ul.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS ul.itemId: IDL set to object "test-toString" should not throw 
FAIL ul.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL ul.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS ul.itemId: IDL set to object "test-valueOf" should not throw 
PASS ul.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL ul.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS li.title: typeof IDL attribute 
PASS li.title: IDL get with DOM attribute unset 
PASS li.title: setAttribute() to "" followed by getAttribute() 
PASS li.title: setAttribute() to "" followed by IDL get 
PASS li.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.title: setAttribute() to undefined followed by getAttribute() 
PASS li.title: setAttribute() to undefined followed by IDL get 
PASS li.title: setAttribute() to 7 followed by getAttribute() 
PASS li.title: setAttribute() to 7 followed by IDL get 
PASS li.title: setAttribute() to 1.5 followed by getAttribute() 
PASS li.title: setAttribute() to 1.5 followed by IDL get 
PASS li.title: setAttribute() to true followed by getAttribute() 
PASS li.title: setAttribute() to true followed by IDL get 
PASS li.title: setAttribute() to false followed by getAttribute() 
PASS li.title: setAttribute() to false followed by IDL get 
PASS li.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS li.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS li.title: setAttribute() to NaN followed by getAttribute() 
PASS li.title: setAttribute() to NaN followed by IDL get 
PASS li.title: setAttribute() to Infinity followed by getAttribute() 
PASS li.title: setAttribute() to Infinity followed by IDL get 
PASS li.title: setAttribute() to -Infinity followed by getAttribute() 
PASS li.title: setAttribute() to -Infinity followed by IDL get 
PASS li.title: setAttribute() to "\0" followed by getAttribute() 
PASS li.title: setAttribute() to "\0" followed by IDL get 
PASS li.title: setAttribute() to null followed by getAttribute() 
PASS li.title: setAttribute() to null followed by IDL get 
PASS li.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS li.title: setAttribute() to object "test-toString" followed by IDL get 
PASS li.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS li.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS li.title: IDL set to "" should not throw 
PASS li.title: IDL set to "" followed by getAttribute() 
PASS li.title: IDL set to "" followed by IDL get 
PASS li.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS li.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.title: IDL set to undefined should not throw 
PASS li.title: IDL set to undefined followed by getAttribute() 
PASS li.title: IDL set to undefined followed by IDL get 
PASS li.title: IDL set to 7 should not throw 
PASS li.title: IDL set to 7 followed by getAttribute() 
PASS li.title: IDL set to 7 followed by IDL get 
PASS li.title: IDL set to 1.5 should not throw 
PASS li.title: IDL set to 1.5 followed by getAttribute() 
PASS li.title: IDL set to 1.5 followed by IDL get 
PASS li.title: IDL set to true should not throw 
PASS li.title: IDL set to true followed by getAttribute() 
PASS li.title: IDL set to true followed by IDL get 
PASS li.title: IDL set to false should not throw 
PASS li.title: IDL set to false followed by getAttribute() 
PASS li.title: IDL set to false followed by IDL get 
PASS li.title: IDL set to object "[object Object]" should not throw 
PASS li.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS li.title: IDL set to object "[object Object]" followed by IDL get 
PASS li.title: IDL set to NaN should not throw 
PASS li.title: IDL set to NaN followed by getAttribute() 
PASS li.title: IDL set to NaN followed by IDL get 
PASS li.title: IDL set to Infinity should not throw 
PASS li.title: IDL set to Infinity followed by getAttribute() 
PASS li.title: IDL set to Infinity followed by IDL get 
PASS li.title: IDL set to -Infinity should not throw 
PASS li.title: IDL set to -Infinity followed by getAttribute() 
PASS li.title: IDL set to -Infinity followed by IDL get 
PASS li.title: IDL set to "\0" should not throw 
PASS li.title: IDL set to "\0" followed by getAttribute() 
PASS li.title: IDL set to "\0" followed by IDL get 
PASS li.title: IDL set to null should not throw 
PASS li.title: IDL set to null followed by getAttribute() 
PASS li.title: IDL set to null followed by IDL get 
PASS li.title: IDL set to object "test-toString" should not throw 
PASS li.title: IDL set to object "test-toString" followed by getAttribute() 
PASS li.title: IDL set to object "test-toString" followed by IDL get 
PASS li.title: IDL set to object "test-valueOf" should not throw 
PASS li.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS li.title: IDL set to object "test-valueOf" followed by IDL get 
PASS li.lang: typeof IDL attribute 
PASS li.lang: IDL get with DOM attribute unset 
PASS li.lang: setAttribute() to "" followed by getAttribute() 
PASS li.lang: setAttribute() to "" followed by IDL get 
PASS li.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.lang: setAttribute() to undefined followed by getAttribute() 
PASS li.lang: setAttribute() to undefined followed by IDL get 
PASS li.lang: setAttribute() to 7 followed by getAttribute() 
PASS li.lang: setAttribute() to 7 followed by IDL get 
PASS li.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS li.lang: setAttribute() to 1.5 followed by IDL get 
PASS li.lang: setAttribute() to true followed by getAttribute() 
PASS li.lang: setAttribute() to true followed by IDL get 
PASS li.lang: setAttribute() to false followed by getAttribute() 
PASS li.lang: setAttribute() to false followed by IDL get 
PASS li.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS li.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS li.lang: setAttribute() to NaN followed by getAttribute() 
PASS li.lang: setAttribute() to NaN followed by IDL get 
PASS li.lang: setAttribute() to Infinity followed by getAttribute() 
PASS li.lang: setAttribute() to Infinity followed by IDL get 
PASS li.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS li.lang: setAttribute() to -Infinity followed by IDL get 
PASS li.lang: setAttribute() to "\0" followed by getAttribute() 
PASS li.lang: setAttribute() to "\0" followed by IDL get 
PASS li.lang: setAttribute() to null followed by getAttribute() 
PASS li.lang: setAttribute() to null followed by IDL get 
PASS li.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS li.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS li.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS li.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS li.lang: IDL set to "" should not throw 
PASS li.lang: IDL set to "" followed by getAttribute() 
PASS li.lang: IDL set to "" followed by IDL get 
PASS li.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS li.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.lang: IDL set to undefined should not throw 
PASS li.lang: IDL set to undefined followed by getAttribute() 
PASS li.lang: IDL set to undefined followed by IDL get 
PASS li.lang: IDL set to 7 should not throw 
PASS li.lang: IDL set to 7 followed by getAttribute() 
PASS li.lang: IDL set to 7 followed by IDL get 
PASS li.lang: IDL set to 1.5 should not throw 
PASS li.lang: IDL set to 1.5 followed by getAttribute() 
PASS li.lang: IDL set to 1.5 followed by IDL get 
PASS li.lang: IDL set to true should not throw 
PASS li.lang: IDL set to true followed by getAttribute() 
PASS li.lang: IDL set to true followed by IDL get 
PASS li.lang: IDL set to false should not throw 
PASS li.lang: IDL set to false followed by getAttribute() 
PASS li.lang: IDL set to false followed by IDL get 
PASS li.lang: IDL set to object "[object Object]" should not throw 
PASS li.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS li.lang: IDL set to object "[object Object]" followed by IDL get 
PASS li.lang: IDL set to NaN should not throw 
PASS li.lang: IDL set to NaN followed by getAttribute() 
PASS li.lang: IDL set to NaN followed by IDL get 
PASS li.lang: IDL set to Infinity should not throw 
PASS li.lang: IDL set to Infinity followed by getAttribute() 
PASS li.lang: IDL set to Infinity followed by IDL get 
PASS li.lang: IDL set to -Infinity should not throw 
PASS li.lang: IDL set to -Infinity followed by getAttribute() 
PASS li.lang: IDL set to -Infinity followed by IDL get 
PASS li.lang: IDL set to "\0" should not throw 
PASS li.lang: IDL set to "\0" followed by getAttribute() 
PASS li.lang: IDL set to "\0" followed by IDL get 
PASS li.lang: IDL set to null should not throw 
PASS li.lang: IDL set to null followed by getAttribute() 
PASS li.lang: IDL set to null followed by IDL get 
PASS li.lang: IDL set to object "test-toString" should not throw 
PASS li.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS li.lang: IDL set to object "test-toString" followed by IDL get 
PASS li.lang: IDL set to object "test-valueOf" should not throw 
PASS li.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS li.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS li.dir: typeof IDL attribute 
PASS li.dir: IDL get with DOM attribute unset 
PASS li.dir: setAttribute() to "" followed by getAttribute() 
PASS li.dir: setAttribute() to "" followed by IDL get 
PASS li.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.dir: setAttribute() to undefined followed by getAttribute() 
PASS li.dir: setAttribute() to undefined followed by IDL get 
PASS li.dir: setAttribute() to 7 followed by getAttribute() 
PASS li.dir: setAttribute() to 7 followed by IDL get 
PASS li.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS li.dir: setAttribute() to 1.5 followed by IDL get 
PASS li.dir: setAttribute() to true followed by getAttribute() 
PASS li.dir: setAttribute() to true followed by IDL get 
PASS li.dir: setAttribute() to false followed by getAttribute() 
PASS li.dir: setAttribute() to false followed by IDL get 
PASS li.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS li.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS li.dir: setAttribute() to NaN followed by getAttribute() 
PASS li.dir: setAttribute() to NaN followed by IDL get 
PASS li.dir: setAttribute() to Infinity followed by getAttribute() 
PASS li.dir: setAttribute() to Infinity followed by IDL get 
PASS li.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS li.dir: setAttribute() to -Infinity followed by IDL get 
PASS li.dir: setAttribute() to "\0" followed by getAttribute() 
PASS li.dir: setAttribute() to "\0" followed by IDL get 
PASS li.dir: setAttribute() to null followed by getAttribute() 
PASS li.dir: setAttribute() to null followed by IDL get 
PASS li.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS li.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS li.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS li.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS li.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS li.dir: setAttribute() to "ltr" followed by IDL get 
PASS li.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS li.dir: setAttribute() to "xltr" followed by IDL get 
PASS li.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS li.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS li.dir: setAttribute() to "tr" followed by getAttribute() 
PASS li.dir: setAttribute() to "tr" followed by IDL get 
PASS li.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS li.dir: setAttribute() to "LTR" followed by IDL get 
PASS li.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS li.dir: setAttribute() to "rtl" followed by IDL get 
PASS li.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS li.dir: setAttribute() to "xrtl" followed by IDL get 
PASS li.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS li.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS li.dir: setAttribute() to "tl" followed by getAttribute() 
PASS li.dir: setAttribute() to "tl" followed by IDL get 
PASS li.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS li.dir: setAttribute() to "RTL" followed by IDL get 
PASS li.dir: setAttribute() to "auto" followed by getAttribute() 
PASS li.dir: setAttribute() to "auto" followed by IDL get 
PASS li.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS li.dir: setAttribute() to "xauto" followed by IDL get 
PASS li.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS li.dir: setAttribute() to "auto\0" followed by IDL get 
PASS li.dir: setAttribute() to "uto" followed by getAttribute() 
PASS li.dir: setAttribute() to "uto" followed by IDL get 
PASS li.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS li.dir: setAttribute() to "AUTO" followed by IDL get 
PASS li.dir: IDL set to "" should not throw 
PASS li.dir: IDL set to "" followed by getAttribute() 
PASS li.dir: IDL set to "" followed by IDL get 
PASS li.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS li.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.dir: IDL set to undefined should not throw 
PASS li.dir: IDL set to undefined followed by getAttribute() 
PASS li.dir: IDL set to undefined followed by IDL get 
PASS li.dir: IDL set to 7 should not throw 
PASS li.dir: IDL set to 7 followed by getAttribute() 
PASS li.dir: IDL set to 7 followed by IDL get 
PASS li.dir: IDL set to 1.5 should not throw 
PASS li.dir: IDL set to 1.5 followed by getAttribute() 
PASS li.dir: IDL set to 1.5 followed by IDL get 
PASS li.dir: IDL set to true should not throw 
PASS li.dir: IDL set to true followed by getAttribute() 
PASS li.dir: IDL set to true followed by IDL get 
PASS li.dir: IDL set to false should not throw 
PASS li.dir: IDL set to false followed by getAttribute() 
PASS li.dir: IDL set to false followed by IDL get 
PASS li.dir: IDL set to object "[object Object]" should not throw 
PASS li.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS li.dir: IDL set to object "[object Object]" followed by IDL get 
PASS li.dir: IDL set to NaN should not throw 
PASS li.dir: IDL set to NaN followed by getAttribute() 
PASS li.dir: IDL set to NaN followed by IDL get 
PASS li.dir: IDL set to Infinity should not throw 
PASS li.dir: IDL set to Infinity followed by getAttribute() 
PASS li.dir: IDL set to Infinity followed by IDL get 
PASS li.dir: IDL set to -Infinity should not throw 
PASS li.dir: IDL set to -Infinity followed by getAttribute() 
PASS li.dir: IDL set to -Infinity followed by IDL get 
PASS li.dir: IDL set to "\0" should not throw 
PASS li.dir: IDL set to "\0" followed by getAttribute() 
PASS li.dir: IDL set to "\0" followed by IDL get 
PASS li.dir: IDL set to null should not throw 
PASS li.dir: IDL set to null followed by IDL get 
PASS li.dir: IDL set to object "test-toString" should not throw 
PASS li.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS li.dir: IDL set to object "test-toString" followed by IDL get 
PASS li.dir: IDL set to object "test-valueOf" should not throw 
PASS li.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS li.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS li.dir: IDL set to "ltr" should not throw 
PASS li.dir: IDL set to "ltr" followed by getAttribute() 
PASS li.dir: IDL set to "ltr" followed by IDL get 
PASS li.dir: IDL set to "xltr" should not throw 
PASS li.dir: IDL set to "xltr" followed by getAttribute() 
PASS li.dir: IDL set to "xltr" followed by IDL get 
PASS li.dir: IDL set to "ltr\0" should not throw 
PASS li.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS li.dir: IDL set to "ltr\0" followed by IDL get 
PASS li.dir: IDL set to "tr" should not throw 
PASS li.dir: IDL set to "tr" followed by getAttribute() 
PASS li.dir: IDL set to "tr" followed by IDL get 
PASS li.dir: IDL set to "LTR" should not throw 
PASS li.dir: IDL set to "LTR" followed by getAttribute() 
PASS li.dir: IDL set to "LTR" followed by IDL get 
PASS li.dir: IDL set to "rtl" should not throw 
PASS li.dir: IDL set to "rtl" followed by getAttribute() 
PASS li.dir: IDL set to "rtl" followed by IDL get 
PASS li.dir: IDL set to "xrtl" should not throw 
PASS li.dir: IDL set to "xrtl" followed by getAttribute() 
PASS li.dir: IDL set to "xrtl" followed by IDL get 
PASS li.dir: IDL set to "rtl\0" should not throw 
PASS li.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS li.dir: IDL set to "rtl\0" followed by IDL get 
PASS li.dir: IDL set to "tl" should not throw 
PASS li.dir: IDL set to "tl" followed by getAttribute() 
PASS li.dir: IDL set to "tl" followed by IDL get 
PASS li.dir: IDL set to "RTL" should not throw 
PASS li.dir: IDL set to "RTL" followed by getAttribute() 
PASS li.dir: IDL set to "RTL" followed by IDL get 
PASS li.dir: IDL set to "auto" should not throw 
PASS li.dir: IDL set to "auto" followed by getAttribute() 
PASS li.dir: IDL set to "auto" followed by IDL get 
PASS li.dir: IDL set to "xauto" should not throw 
PASS li.dir: IDL set to "xauto" followed by getAttribute() 
PASS li.dir: IDL set to "xauto" followed by IDL get 
PASS li.dir: IDL set to "auto\0" should not throw 
PASS li.dir: IDL set to "auto\0" followed by getAttribute() 
PASS li.dir: IDL set to "auto\0" followed by IDL get 
PASS li.dir: IDL set to "uto" should not throw 
PASS li.dir: IDL set to "uto" followed by getAttribute() 
PASS li.dir: IDL set to "uto" followed by IDL get 
PASS li.dir: IDL set to "AUTO" should not throw 
PASS li.dir: IDL set to "AUTO" followed by getAttribute() 
PASS li.dir: IDL set to "AUTO" followed by IDL get 
PASS li.className (<li class>): typeof IDL attribute 
PASS li.className (<li class>): IDL get with DOM attribute unset 
PASS li.className (<li class>): setAttribute() to "" followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to "" followed by IDL get 
PASS li.className (<li class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.className (<li class>): setAttribute() to undefined followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to undefined followed by IDL get 
PASS li.className (<li class>): setAttribute() to 7 followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to 7 followed by IDL get 
PASS li.className (<li class>): setAttribute() to 1.5 followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to 1.5 followed by IDL get 
PASS li.className (<li class>): setAttribute() to true followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to true followed by IDL get 
PASS li.className (<li class>): setAttribute() to false followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to false followed by IDL get 
PASS li.className (<li class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS li.className (<li class>): setAttribute() to NaN followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to NaN followed by IDL get 
PASS li.className (<li class>): setAttribute() to Infinity followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to Infinity followed by IDL get 
PASS li.className (<li class>): setAttribute() to -Infinity followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to -Infinity followed by IDL get 
PASS li.className (<li class>): setAttribute() to "\0" followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to "\0" followed by IDL get 
PASS li.className (<li class>): setAttribute() to null followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to null followed by IDL get 
PASS li.className (<li class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to object "test-toString" followed by IDL get 
PASS li.className (<li class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS li.className (<li class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS li.className (<li class>): IDL set to "" should not throw 
PASS li.className (<li class>): IDL set to "" followed by getAttribute() 
PASS li.className (<li class>): IDL set to "" followed by IDL get 
PASS li.className (<li class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS li.className (<li class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.className (<li class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.className (<li class>): IDL set to undefined should not throw 
PASS li.className (<li class>): IDL set to undefined followed by getAttribute() 
PASS li.className (<li class>): IDL set to undefined followed by IDL get 
PASS li.className (<li class>): IDL set to 7 should not throw 
PASS li.className (<li class>): IDL set to 7 followed by getAttribute() 
PASS li.className (<li class>): IDL set to 7 followed by IDL get 
PASS li.className (<li class>): IDL set to 1.5 should not throw 
PASS li.className (<li class>): IDL set to 1.5 followed by getAttribute() 
PASS li.className (<li class>): IDL set to 1.5 followed by IDL get 
PASS li.className (<li class>): IDL set to true should not throw 
PASS li.className (<li class>): IDL set to true followed by getAttribute() 
PASS li.className (<li class>): IDL set to true followed by IDL get 
PASS li.className (<li class>): IDL set to false should not throw 
PASS li.className (<li class>): IDL set to false followed by getAttribute() 
PASS li.className (<li class>): IDL set to false followed by IDL get 
PASS li.className (<li class>): IDL set to object "[object Object]" should not throw 
PASS li.className (<li class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS li.className (<li class>): IDL set to object "[object Object]" followed by IDL get 
PASS li.className (<li class>): IDL set to NaN should not throw 
PASS li.className (<li class>): IDL set to NaN followed by getAttribute() 
PASS li.className (<li class>): IDL set to NaN followed by IDL get 
PASS li.className (<li class>): IDL set to Infinity should not throw 
PASS li.className (<li class>): IDL set to Infinity followed by getAttribute() 
PASS li.className (<li class>): IDL set to Infinity followed by IDL get 
PASS li.className (<li class>): IDL set to -Infinity should not throw 
PASS li.className (<li class>): IDL set to -Infinity followed by getAttribute() 
PASS li.className (<li class>): IDL set to -Infinity followed by IDL get 
PASS li.className (<li class>): IDL set to "\0" should not throw 
PASS li.className (<li class>): IDL set to "\0" followed by getAttribute() 
PASS li.className (<li class>): IDL set to "\0" followed by IDL get 
PASS li.className (<li class>): IDL set to null should not throw 
PASS li.className (<li class>): IDL set to null followed by getAttribute() 
PASS li.className (<li class>): IDL set to null followed by IDL get 
PASS li.className (<li class>): IDL set to object "test-toString" should not throw 
PASS li.className (<li class>): IDL set to object "test-toString" followed by getAttribute() 
PASS li.className (<li class>): IDL set to object "test-toString" followed by IDL get 
PASS li.className (<li class>): IDL set to object "test-valueOf" should not throw 
PASS li.className (<li class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS li.className (<li class>): IDL set to object "test-valueOf" followed by IDL get 
PASS li.hidden: typeof IDL attribute 
PASS li.hidden: IDL get with DOM attribute unset 
PASS li.hidden: setAttribute() to "" followed by getAttribute() 
PASS li.hidden: setAttribute() to "" followed by IDL get 
PASS li.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS li.hidden: setAttribute() to " foo " followed by IDL get 
PASS li.hidden: setAttribute() to undefined followed by getAttribute() 
PASS li.hidden: setAttribute() to undefined followed by IDL get 
PASS li.hidden: setAttribute() to null followed by getAttribute() 
PASS li.hidden: setAttribute() to null followed by IDL get 
PASS li.hidden: setAttribute() to 7 followed by getAttribute() 
PASS li.hidden: setAttribute() to 7 followed by IDL get 
PASS li.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS li.hidden: setAttribute() to 1.5 followed by IDL get 
PASS li.hidden: setAttribute() to true followed by getAttribute() 
PASS li.hidden: setAttribute() to true followed by IDL get 
PASS li.hidden: setAttribute() to false followed by getAttribute() 
PASS li.hidden: setAttribute() to false followed by IDL get 
PASS li.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS li.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS li.hidden: setAttribute() to NaN followed by getAttribute() 
PASS li.hidden: setAttribute() to NaN followed by IDL get 
PASS li.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS li.hidden: setAttribute() to Infinity followed by IDL get 
PASS li.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS li.hidden: setAttribute() to -Infinity followed by IDL get 
PASS li.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS li.hidden: setAttribute() to "\0" followed by IDL get 
PASS li.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS li.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS li.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS li.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS li.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS li.hidden: setAttribute() to "hidden" followed by IDL get 
PASS li.hidden: IDL set to "" should not throw 
PASS li.hidden: IDL set to "" followed by hasAttribute() 
PASS li.hidden: IDL set to "" followed by IDL get 
PASS li.hidden: IDL set to " foo " should not throw 
PASS li.hidden: IDL set to " foo " followed by hasAttribute() 
PASS li.hidden: IDL set to " foo " followed by IDL get 
PASS li.hidden: IDL set to undefined should not throw 
PASS li.hidden: IDL set to undefined followed by hasAttribute() 
PASS li.hidden: IDL set to undefined followed by IDL get 
PASS li.hidden: IDL set to null should not throw 
PASS li.hidden: IDL set to null followed by hasAttribute() 
PASS li.hidden: IDL set to null followed by IDL get 
PASS li.hidden: IDL set to 7 should not throw 
PASS li.hidden: IDL set to 7 followed by hasAttribute() 
PASS li.hidden: IDL set to 7 followed by IDL get 
PASS li.hidden: IDL set to 1.5 should not throw 
PASS li.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS li.hidden: IDL set to 1.5 followed by IDL get 
PASS li.hidden: IDL set to true should not throw 
PASS li.hidden: IDL set to true followed by hasAttribute() 
PASS li.hidden: IDL set to true followed by IDL get 
PASS li.hidden: IDL set to false should not throw 
PASS li.hidden: IDL set to false followed by hasAttribute() 
PASS li.hidden: IDL set to false followed by IDL get 
PASS li.hidden: IDL set to object "[object Object]" should not throw 
PASS li.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS li.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS li.hidden: IDL set to NaN should not throw 
PASS li.hidden: IDL set to NaN followed by hasAttribute() 
PASS li.hidden: IDL set to NaN followed by IDL get 
PASS li.hidden: IDL set to Infinity should not throw 
PASS li.hidden: IDL set to Infinity followed by hasAttribute() 
PASS li.hidden: IDL set to Infinity followed by IDL get 
PASS li.hidden: IDL set to -Infinity should not throw 
PASS li.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS li.hidden: IDL set to -Infinity followed by IDL get 
PASS li.hidden: IDL set to "\0" should not throw 
PASS li.hidden: IDL set to "\0" followed by hasAttribute() 
PASS li.hidden: IDL set to "\0" followed by IDL get 
PASS li.hidden: IDL set to object "test-toString" should not throw 
PASS li.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS li.hidden: IDL set to object "test-toString" followed by IDL get 
PASS li.hidden: IDL set to object "test-valueOf" should not throw 
PASS li.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS li.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS li.accessKey: typeof IDL attribute 
PASS li.accessKey: IDL get with DOM attribute unset 
PASS li.accessKey: setAttribute() to "" followed by getAttribute() 
PASS li.accessKey: setAttribute() to "" followed by IDL get 
PASS li.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS li.accessKey: setAttribute() to undefined followed by IDL get 
PASS li.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS li.accessKey: setAttribute() to 7 followed by IDL get 
PASS li.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS li.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS li.accessKey: setAttribute() to true followed by getAttribute() 
PASS li.accessKey: setAttribute() to true followed by IDL get 
PASS li.accessKey: setAttribute() to false followed by getAttribute() 
PASS li.accessKey: setAttribute() to false followed by IDL get 
PASS li.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS li.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS li.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS li.accessKey: setAttribute() to NaN followed by IDL get 
PASS li.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS li.accessKey: setAttribute() to Infinity followed by IDL get 
PASS li.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS li.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS li.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS li.accessKey: setAttribute() to "\0" followed by IDL get 
PASS li.accessKey: setAttribute() to null followed by getAttribute() 
PASS li.accessKey: setAttribute() to null followed by IDL get 
PASS li.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS li.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS li.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS li.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS li.accessKey: IDL set to "" should not throw 
PASS li.accessKey: IDL set to "" followed by getAttribute() 
PASS li.accessKey: IDL set to "" followed by IDL get 
PASS li.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS li.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.accessKey: IDL set to undefined should not throw 
PASS li.accessKey: IDL set to undefined followed by getAttribute() 
PASS li.accessKey: IDL set to undefined followed by IDL get 
PASS li.accessKey: IDL set to 7 should not throw 
PASS li.accessKey: IDL set to 7 followed by getAttribute() 
PASS li.accessKey: IDL set to 7 followed by IDL get 
PASS li.accessKey: IDL set to 1.5 should not throw 
PASS li.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS li.accessKey: IDL set to 1.5 followed by IDL get 
PASS li.accessKey: IDL set to true should not throw 
PASS li.accessKey: IDL set to true followed by getAttribute() 
PASS li.accessKey: IDL set to true followed by IDL get 
PASS li.accessKey: IDL set to false should not throw 
PASS li.accessKey: IDL set to false followed by getAttribute() 
PASS li.accessKey: IDL set to false followed by IDL get 
PASS li.accessKey: IDL set to object "[object Object]" should not throw 
PASS li.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS li.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS li.accessKey: IDL set to NaN should not throw 
PASS li.accessKey: IDL set to NaN followed by getAttribute() 
PASS li.accessKey: IDL set to NaN followed by IDL get 
PASS li.accessKey: IDL set to Infinity should not throw 
PASS li.accessKey: IDL set to Infinity followed by getAttribute() 
PASS li.accessKey: IDL set to Infinity followed by IDL get 
PASS li.accessKey: IDL set to -Infinity should not throw 
PASS li.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS li.accessKey: IDL set to -Infinity followed by IDL get 
PASS li.accessKey: IDL set to "\0" should not throw 
PASS li.accessKey: IDL set to "\0" followed by getAttribute() 
PASS li.accessKey: IDL set to "\0" followed by IDL get 
PASS li.accessKey: IDL set to null should not throw 
PASS li.accessKey: IDL set to null followed by getAttribute() 
PASS li.accessKey: IDL set to null followed by IDL get 
PASS li.accessKey: IDL set to object "test-toString" should not throw 
PASS li.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS li.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS li.accessKey: IDL set to object "test-valueOf" should not throw 
PASS li.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS li.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS li.tabIndex: typeof IDL attribute 
PASS li.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS li.tabIndex: setAttribute() to -36 followed by IDL get 
PASS li.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS li.tabIndex: setAttribute() to -1 followed by IDL get 
PASS li.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS li.tabIndex: setAttribute() to 0 followed by IDL get 
PASS li.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS li.tabIndex: setAttribute() to 1 followed by IDL get 
PASS li.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS li.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS li.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS li.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS li.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS li.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS li.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS li.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS li.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS li.tabIndex: setAttribute() to "0" followed by IDL get 
PASS li.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS li.tabIndex: setAttribute() to "1" followed by IDL get 
PASS li.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS li.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS li.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS li.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS li.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS li.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS li.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS li.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS li.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS li.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS li.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS li.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS li.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS li.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS li.tabIndex: IDL set to -36 should not throw 
PASS li.tabIndex: IDL set to -36 followed by getAttribute() 
PASS li.tabIndex: IDL set to -36 followed by IDL get 
PASS li.tabIndex: IDL set to -1 should not throw 
PASS li.tabIndex: IDL set to -1 followed by getAttribute() 
PASS li.tabIndex: IDL set to -1 followed by IDL get 
PASS li.tabIndex: IDL set to 0 should not throw 
PASS li.tabIndex: IDL set to 0 followed by getAttribute() 
PASS li.tabIndex: IDL set to 0 followed by IDL get 
PASS li.tabIndex: IDL set to 1 should not throw 
PASS li.tabIndex: IDL set to 1 followed by getAttribute() 
PASS li.tabIndex: IDL set to 1 followed by IDL get 
PASS li.tabIndex: IDL set to 2147483647 should not throw 
PASS li.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS li.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS li.tabIndex: IDL set to -2147483648 should not throw 
PASS li.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS li.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS li.value: typeof IDL attribute 
PASS li.value: IDL get with DOM attribute unset 
PASS li.value: setAttribute() to -36 followed by getAttribute() 
PASS li.value: setAttribute() to -36 followed by IDL get 
PASS li.value: setAttribute() to -1 followed by getAttribute() 
PASS li.value: setAttribute() to -1 followed by IDL get 
PASS li.value: setAttribute() to 0 followed by getAttribute() 
PASS li.value: setAttribute() to 0 followed by IDL get 
PASS li.value: setAttribute() to 1 followed by getAttribute() 
PASS li.value: setAttribute() to 1 followed by IDL get 
PASS li.value: setAttribute() to 2147483647 followed by getAttribute() 
PASS li.value: setAttribute() to 2147483647 followed by IDL get 
PASS li.value: setAttribute() to -2147483648 followed by getAttribute() 
PASS li.value: setAttribute() to -2147483648 followed by IDL get 
PASS li.value: setAttribute() to 2147483648 followed by getAttribute() 
PASS li.value: setAttribute() to 2147483648 followed by IDL get 
PASS li.value: setAttribute() to -2147483649 followed by getAttribute() 
PASS li.value: setAttribute() to -2147483649 followed by IDL get 
PASS li.value: setAttribute() to 4294967295 followed by getAttribute() 
PASS li.value: setAttribute() to 4294967295 followed by IDL get 
PASS li.value: setAttribute() to 4294967296 followed by getAttribute() 
PASS li.value: setAttribute() to 4294967296 followed by IDL get 
PASS li.value: setAttribute() to "" followed by getAttribute() 
PASS li.value: setAttribute() to "" followed by IDL get 
PASS li.value: setAttribute() to "-1" followed by getAttribute() 
PASS li.value: setAttribute() to "-1" followed by IDL get 
PASS li.value: setAttribute() to "-0" followed by getAttribute() 
PASS li.value: setAttribute() to "-0" followed by IDL get 
PASS li.value: setAttribute() to "0" followed by getAttribute() 
PASS li.value: setAttribute() to "0" followed by IDL get 
PASS li.value: setAttribute() to "1" followed by getAttribute() 
PASS li.value: setAttribute() to "1" followed by IDL get 
PASS li.value: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.value: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.value: setAttribute() to "\t7" followed by getAttribute() 
PASS li.value: setAttribute() to "\t7" followed by IDL get 
PASS li.value: setAttribute() to "\v7" followed by getAttribute() 
PASS li.value: setAttribute() to "\v7" followed by IDL get 
PASS li.value: setAttribute() to "\f7" followed by getAttribute() 
PASS li.value: setAttribute() to "\f7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to "﻿7" followed by getAttribute() 
PASS li.value: setAttribute() to "﻿7" followed by IDL get 
PASS li.value: setAttribute() to "\n7" followed by getAttribute() 
PASS li.value: setAttribute() to "\n7" followed by IDL get 
PASS li.value: setAttribute() to "\r7" followed by getAttribute() 
PASS li.value: setAttribute() to "\r7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to "᠎7" followed by getAttribute() 
PASS li.value: setAttribute() to "᠎7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to " 7" followed by getAttribute() 
PASS li.value: setAttribute() to " 7" followed by IDL get 
PASS li.value: setAttribute() to "　7" followed by getAttribute() 
PASS li.value: setAttribute() to "　7" followed by IDL get 
PASS li.value: setAttribute() to undefined followed by getAttribute() 
PASS li.value: setAttribute() to undefined followed by IDL get 
PASS li.value: setAttribute() to 1.5 followed by getAttribute() 
PASS li.value: setAttribute() to 1.5 followed by IDL get 
PASS li.value: setAttribute() to true followed by getAttribute() 
PASS li.value: setAttribute() to true followed by IDL get 
PASS li.value: setAttribute() to false followed by getAttribute() 
PASS li.value: setAttribute() to false followed by IDL get 
PASS li.value: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS li.value: setAttribute() to object "[object Object]" followed by IDL get 
PASS li.value: setAttribute() to NaN followed by getAttribute() 
PASS li.value: setAttribute() to NaN followed by IDL get 
PASS li.value: setAttribute() to Infinity followed by getAttribute() 
PASS li.value: setAttribute() to Infinity followed by IDL get 
PASS li.value: setAttribute() to -Infinity followed by getAttribute() 
PASS li.value: setAttribute() to -Infinity followed by IDL get 
PASS li.value: setAttribute() to "\0" followed by getAttribute() 
PASS li.value: setAttribute() to "\0" followed by IDL get 
PASS li.value: setAttribute() to object "2" followed by getAttribute() 
PASS li.value: setAttribute() to object "2" followed by IDL get 
PASS li.value: setAttribute() to object "3" followed by getAttribute() 
PASS li.value: setAttribute() to object "3" followed by IDL get 
PASS li.value: IDL set to -36 should not throw 
PASS li.value: IDL set to -36 followed by getAttribute() 
PASS li.value: IDL set to -36 followed by IDL get 
PASS li.value: IDL set to -1 should not throw 
PASS li.value: IDL set to -1 followed by getAttribute() 
PASS li.value: IDL set to -1 followed by IDL get 
PASS li.value: IDL set to 0 should not throw 
PASS li.value: IDL set to 0 followed by getAttribute() 
PASS li.value: IDL set to 0 followed by IDL get 
PASS li.value: IDL set to 1 should not throw 
PASS li.value: IDL set to 1 followed by getAttribute() 
PASS li.value: IDL set to 1 followed by IDL get 
PASS li.value: IDL set to 2147483647 should not throw 
PASS li.value: IDL set to 2147483647 followed by getAttribute() 
PASS li.value: IDL set to 2147483647 followed by IDL get 
PASS li.value: IDL set to -2147483648 should not throw 
PASS li.value: IDL set to -2147483648 followed by getAttribute() 
PASS li.value: IDL set to -2147483648 followed by IDL get 
PASS li.type: typeof IDL attribute 
PASS li.type: IDL get with DOM attribute unset 
PASS li.type: setAttribute() to "" followed by getAttribute() 
PASS li.type: setAttribute() to "" followed by IDL get 
PASS li.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.type: setAttribute() to undefined followed by getAttribute() 
PASS li.type: setAttribute() to undefined followed by IDL get 
PASS li.type: setAttribute() to 7 followed by getAttribute() 
PASS li.type: setAttribute() to 7 followed by IDL get 
PASS li.type: setAttribute() to 1.5 followed by getAttribute() 
PASS li.type: setAttribute() to 1.5 followed by IDL get 
PASS li.type: setAttribute() to true followed by getAttribute() 
PASS li.type: setAttribute() to true followed by IDL get 
PASS li.type: setAttribute() to false followed by getAttribute() 
PASS li.type: setAttribute() to false followed by IDL get 
PASS li.type: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS li.type: setAttribute() to object "[object Object]" followed by IDL get 
PASS li.type: setAttribute() to NaN followed by getAttribute() 
PASS li.type: setAttribute() to NaN followed by IDL get 
PASS li.type: setAttribute() to Infinity followed by getAttribute() 
PASS li.type: setAttribute() to Infinity followed by IDL get 
PASS li.type: setAttribute() to -Infinity followed by getAttribute() 
PASS li.type: setAttribute() to -Infinity followed by IDL get 
PASS li.type: setAttribute() to "\0" followed by getAttribute() 
PASS li.type: setAttribute() to "\0" followed by IDL get 
PASS li.type: setAttribute() to null followed by getAttribute() 
PASS li.type: setAttribute() to null followed by IDL get 
PASS li.type: setAttribute() to object "test-toString" followed by getAttribute() 
PASS li.type: setAttribute() to object "test-toString" followed by IDL get 
PASS li.type: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS li.type: setAttribute() to object "test-valueOf" followed by IDL get 
PASS li.type: IDL set to "" should not throw 
PASS li.type: IDL set to "" followed by getAttribute() 
PASS li.type: IDL set to "" followed by IDL get 
PASS li.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS li.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS li.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS li.type: IDL set to undefined should not throw 
PASS li.type: IDL set to undefined followed by getAttribute() 
PASS li.type: IDL set to undefined followed by IDL get 
PASS li.type: IDL set to 7 should not throw 
PASS li.type: IDL set to 7 followed by getAttribute() 
PASS li.type: IDL set to 7 followed by IDL get 
PASS li.type: IDL set to 1.5 should not throw 
PASS li.type: IDL set to 1.5 followed by getAttribute() 
PASS li.type: IDL set to 1.5 followed by IDL get 
PASS li.type: IDL set to true should not throw 
PASS li.type: IDL set to true followed by getAttribute() 
PASS li.type: IDL set to true followed by IDL get 
PASS li.type: IDL set to false should not throw 
PASS li.type: IDL set to false followed by getAttribute() 
PASS li.type: IDL set to false followed by IDL get 
PASS li.type: IDL set to object "[object Object]" should not throw 
PASS li.type: IDL set to object "[object Object]" followed by getAttribute() 
PASS li.type: IDL set to object "[object Object]" followed by IDL get 
PASS li.type: IDL set to NaN should not throw 
PASS li.type: IDL set to NaN followed by getAttribute() 
PASS li.type: IDL set to NaN followed by IDL get 
PASS li.type: IDL set to Infinity should not throw 
PASS li.type: IDL set to Infinity followed by getAttribute() 
PASS li.type: IDL set to Infinity followed by IDL get 
PASS li.type: IDL set to -Infinity should not throw 
PASS li.type: IDL set to -Infinity followed by getAttribute() 
PASS li.type: IDL set to -Infinity followed by IDL get 
PASS li.type: IDL set to "\0" should not throw 
PASS li.type: IDL set to "\0" followed by getAttribute() 
PASS li.type: IDL set to "\0" followed by IDL get 
PASS li.type: IDL set to null should not throw 
PASS li.type: IDL set to null followed by getAttribute() 
PASS li.type: IDL set to null followed by IDL get 
PASS li.type: IDL set to object "test-toString" should not throw 
PASS li.type: IDL set to object "test-toString" followed by getAttribute() 
PASS li.type: IDL set to object "test-toString" followed by IDL get 
PASS li.type: IDL set to object "test-valueOf" should not throw 
PASS li.type: IDL set to object "test-valueOf" followed by getAttribute() 
PASS li.type: IDL set to object "test-valueOf" followed by IDL get 
FAIL li.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL li.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS li.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL li.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL li.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL li.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to null followed by getAttribute() 
FAIL li.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL li.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL li.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to true followed by getAttribute() 
FAIL li.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to false followed by getAttribute() 
FAIL li.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL li.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL li.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL li.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL li.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL li.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL li.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL li.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL li.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS li.itemScope: IDL set to "" should not throw 
FAIL li.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL li.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS li.itemScope: IDL set to " foo " should not throw 
PASS li.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL li.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS li.itemScope: IDL set to undefined should not throw 
FAIL li.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL li.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS li.itemScope: IDL set to null should not throw 
FAIL li.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL li.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS li.itemScope: IDL set to 7 should not throw 
PASS li.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL li.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS li.itemScope: IDL set to 1.5 should not throw 
PASS li.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL li.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS li.itemScope: IDL set to true should not throw 
PASS li.itemScope: IDL set to true followed by hasAttribute() 
PASS li.itemScope: IDL set to true followed by IDL get 
PASS li.itemScope: IDL set to false should not throw 
FAIL li.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS li.itemScope: IDL set to false followed by IDL get 
PASS li.itemScope: IDL set to object "[object Object]" should not throw 
PASS li.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL li.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS li.itemScope: IDL set to NaN should not throw 
FAIL li.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL li.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS li.itemScope: IDL set to Infinity should not throw 
PASS li.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL li.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS li.itemScope: IDL set to -Infinity should not throw 
PASS li.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL li.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS li.itemScope: IDL set to "\0" should not throw 
PASS li.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL li.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS li.itemScope: IDL set to object "test-toString" should not throw 
PASS li.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL li.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS li.itemScope: IDL set to object "test-valueOf" should not throw 
PASS li.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL li.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL li.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL li.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS li.itemId: setAttribute() to "" followed by getAttribute() 
FAIL li.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS li.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL li.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS li.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL li.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS li.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL li.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS li.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL li.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS li.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL li.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS li.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL li.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS li.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL li.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS li.itemId: setAttribute() to true followed by getAttribute() 
FAIL li.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS li.itemId: setAttribute() to false followed by getAttribute() 
FAIL li.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS li.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL li.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS li.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL li.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS li.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL li.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS li.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL li.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS li.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL li.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS li.itemId: setAttribute() to null followed by getAttribute() 
FAIL li.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS li.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL li.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS li.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL li.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS li.itemId: IDL set to "" should not throw 
FAIL li.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL li.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS li.itemId: IDL set to " foo " should not throw 
FAIL li.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL li.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS li.itemId: IDL set to "http://site.example/" should not throw 
FAIL li.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS li.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS li.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL li.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL li.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS li.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL li.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL li.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS li.itemId: IDL set to undefined should not throw 
FAIL li.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL li.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS li.itemId: IDL set to 7 should not throw 
FAIL li.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL li.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS li.itemId: IDL set to 1.5 should not throw 
FAIL li.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL li.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS li.itemId: IDL set to true should not throw 
FAIL li.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL li.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS li.itemId: IDL set to false should not throw 
FAIL li.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL li.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS li.itemId: IDL set to object "[object Object]" should not throw 
FAIL li.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL li.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS li.itemId: IDL set to NaN should not throw 
FAIL li.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL li.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS li.itemId: IDL set to Infinity should not throw 
FAIL li.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL li.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS li.itemId: IDL set to -Infinity should not throw 
FAIL li.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL li.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS li.itemId: IDL set to "\0" should not throw 
FAIL li.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL li.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS li.itemId: IDL set to null should not throw 
FAIL li.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL li.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS li.itemId: IDL set to object "test-toString" should not throw 
FAIL li.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL li.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS li.itemId: IDL set to object "test-valueOf" should not throw 
PASS li.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL li.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS dl.title: typeof IDL attribute 
PASS dl.title: IDL get with DOM attribute unset 
PASS dl.title: setAttribute() to "" followed by getAttribute() 
PASS dl.title: setAttribute() to "" followed by IDL get 
PASS dl.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dl.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dl.title: setAttribute() to undefined followed by getAttribute() 
PASS dl.title: setAttribute() to undefined followed by IDL get 
PASS dl.title: setAttribute() to 7 followed by getAttribute() 
PASS dl.title: setAttribute() to 7 followed by IDL get 
PASS dl.title: setAttribute() to 1.5 followed by getAttribute() 
PASS dl.title: setAttribute() to 1.5 followed by IDL get 
PASS dl.title: setAttribute() to true followed by getAttribute() 
PASS dl.title: setAttribute() to true followed by IDL get 
PASS dl.title: setAttribute() to false followed by getAttribute() 
PASS dl.title: setAttribute() to false followed by IDL get 
PASS dl.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dl.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS dl.title: setAttribute() to NaN followed by getAttribute() 
PASS dl.title: setAttribute() to NaN followed by IDL get 
PASS dl.title: setAttribute() to Infinity followed by getAttribute() 
PASS dl.title: setAttribute() to Infinity followed by IDL get 
PASS dl.title: setAttribute() to -Infinity followed by getAttribute() 
PASS dl.title: setAttribute() to -Infinity followed by IDL get 
PASS dl.title: setAttribute() to "\0" followed by getAttribute() 
PASS dl.title: setAttribute() to "\0" followed by IDL get 
PASS dl.title: setAttribute() to null followed by getAttribute() 
PASS dl.title: setAttribute() to null followed by IDL get 
PASS dl.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dl.title: setAttribute() to object "test-toString" followed by IDL get 
PASS dl.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dl.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dl.title: IDL set to "" should not throw 
PASS dl.title: IDL set to "" followed by getAttribute() 
PASS dl.title: IDL set to "" followed by IDL get 
PASS dl.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dl.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dl.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dl.title: IDL set to undefined should not throw 
PASS dl.title: IDL set to undefined followed by getAttribute() 
PASS dl.title: IDL set to undefined followed by IDL get 
PASS dl.title: IDL set to 7 should not throw 
PASS dl.title: IDL set to 7 followed by getAttribute() 
PASS dl.title: IDL set to 7 followed by IDL get 
PASS dl.title: IDL set to 1.5 should not throw 
PASS dl.title: IDL set to 1.5 followed by getAttribute() 
PASS dl.title: IDL set to 1.5 followed by IDL get 
PASS dl.title: IDL set to true should not throw 
PASS dl.title: IDL set to true followed by getAttribute() 
PASS dl.title: IDL set to true followed by IDL get 
PASS dl.title: IDL set to false should not throw 
PASS dl.title: IDL set to false followed by getAttribute() 
PASS dl.title: IDL set to false followed by IDL get 
PASS dl.title: IDL set to object "[object Object]" should not throw 
PASS dl.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS dl.title: IDL set to object "[object Object]" followed by IDL get 
PASS dl.title: IDL set to NaN should not throw 
PASS dl.title: IDL set to NaN followed by getAttribute() 
PASS dl.title: IDL set to NaN followed by IDL get 
PASS dl.title: IDL set to Infinity should not throw 
PASS dl.title: IDL set to Infinity followed by getAttribute() 
PASS dl.title: IDL set to Infinity followed by IDL get 
PASS dl.title: IDL set to -Infinity should not throw 
PASS dl.title: IDL set to -Infinity followed by getAttribute() 
PASS dl.title: IDL set to -Infinity followed by IDL get 
PASS dl.title: IDL set to "\0" should not throw 
PASS dl.title: IDL set to "\0" followed by getAttribute() 
PASS dl.title: IDL set to "\0" followed by IDL get 
PASS dl.title: IDL set to null should not throw 
PASS dl.title: IDL set to null followed by getAttribute() 
PASS dl.title: IDL set to null followed by IDL get 
PASS dl.title: IDL set to object "test-toString" should not throw 
PASS dl.title: IDL set to object "test-toString" followed by getAttribute() 
PASS dl.title: IDL set to object "test-toString" followed by IDL get 
PASS dl.title: IDL set to object "test-valueOf" should not throw 
PASS dl.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dl.title: IDL set to object "test-valueOf" followed by IDL get 
PASS dl.lang: typeof IDL attribute 
PASS dl.lang: IDL get with DOM attribute unset 
PASS dl.lang: setAttribute() to "" followed by getAttribute() 
PASS dl.lang: setAttribute() to "" followed by IDL get 
PASS dl.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dl.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dl.lang: setAttribute() to undefined followed by getAttribute() 
PASS dl.lang: setAttribute() to undefined followed by IDL get 
PASS dl.lang: setAttribute() to 7 followed by getAttribute() 
PASS dl.lang: setAttribute() to 7 followed by IDL get 
PASS dl.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS dl.lang: setAttribute() to 1.5 followed by IDL get 
PASS dl.lang: setAttribute() to true followed by getAttribute() 
PASS dl.lang: setAttribute() to true followed by IDL get 
PASS dl.lang: setAttribute() to false followed by getAttribute() 
PASS dl.lang: setAttribute() to false followed by IDL get 
PASS dl.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dl.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS dl.lang: setAttribute() to NaN followed by getAttribute() 
PASS dl.lang: setAttribute() to NaN followed by IDL get 
PASS dl.lang: setAttribute() to Infinity followed by getAttribute() 
PASS dl.lang: setAttribute() to Infinity followed by IDL get 
PASS dl.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS dl.lang: setAttribute() to -Infinity followed by IDL get 
PASS dl.lang: setAttribute() to "\0" followed by getAttribute() 
PASS dl.lang: setAttribute() to "\0" followed by IDL get 
PASS dl.lang: setAttribute() to null followed by getAttribute() 
PASS dl.lang: setAttribute() to null followed by IDL get 
PASS dl.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dl.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS dl.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dl.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dl.lang: IDL set to "" should not throw 
PASS dl.lang: IDL set to "" followed by getAttribute() 
PASS dl.lang: IDL set to "" followed by IDL get 
PASS dl.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dl.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dl.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dl.lang: IDL set to undefined should not throw 
PASS dl.lang: IDL set to undefined followed by getAttribute() 
PASS dl.lang: IDL set to undefined followed by IDL get 
PASS dl.lang: IDL set to 7 should not throw 
PASS dl.lang: IDL set to 7 followed by getAttribute() 
PASS dl.lang: IDL set to 7 followed by IDL get 
PASS dl.lang: IDL set to 1.5 should not throw 
PASS dl.lang: IDL set to 1.5 followed by getAttribute() 
PASS dl.lang: IDL set to 1.5 followed by IDL get 
PASS dl.lang: IDL set to true should not throw 
PASS dl.lang: IDL set to true followed by getAttribute() 
PASS dl.lang: IDL set to true followed by IDL get 
PASS dl.lang: IDL set to false should not throw 
PASS dl.lang: IDL set to false followed by getAttribute() 
PASS dl.lang: IDL set to false followed by IDL get 
PASS dl.lang: IDL set to object "[object Object]" should not throw 
PASS dl.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS dl.lang: IDL set to object "[object Object]" followed by IDL get 
PASS dl.lang: IDL set to NaN should not throw 
PASS dl.lang: IDL set to NaN followed by getAttribute() 
PASS dl.lang: IDL set to NaN followed by IDL get 
PASS dl.lang: IDL set to Infinity should not throw 
PASS dl.lang: IDL set to Infinity followed by getAttribute() 
PASS dl.lang: IDL set to Infinity followed by IDL get 
PASS dl.lang: IDL set to -Infinity should not throw 
PASS dl.lang: IDL set to -Infinity followed by getAttribute() 
PASS dl.lang: IDL set to -Infinity followed by IDL get 
PASS dl.lang: IDL set to "\0" should not throw 
PASS dl.lang: IDL set to "\0" followed by getAttribute() 
PASS dl.lang: IDL set to "\0" followed by IDL get 
PASS dl.lang: IDL set to null should not throw 
PASS dl.lang: IDL set to null followed by getAttribute() 
PASS dl.lang: IDL set to null followed by IDL get 
PASS dl.lang: IDL set to object "test-toString" should not throw 
PASS dl.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS dl.lang: IDL set to object "test-toString" followed by IDL get 
PASS dl.lang: IDL set to object "test-valueOf" should not throw 
PASS dl.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dl.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS dl.dir: typeof IDL attribute 
PASS dl.dir: IDL get with DOM attribute unset 
PASS dl.dir: setAttribute() to "" followed by getAttribute() 
PASS dl.dir: setAttribute() to "" followed by IDL get 
PASS dl.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dl.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dl.dir: setAttribute() to undefined followed by getAttribute() 
PASS dl.dir: setAttribute() to undefined followed by IDL get 
PASS dl.dir: setAttribute() to 7 followed by getAttribute() 
PASS dl.dir: setAttribute() to 7 followed by IDL get 
PASS dl.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS dl.dir: setAttribute() to 1.5 followed by IDL get 
PASS dl.dir: setAttribute() to true followed by getAttribute() 
PASS dl.dir: setAttribute() to true followed by IDL get 
PASS dl.dir: setAttribute() to false followed by getAttribute() 
PASS dl.dir: setAttribute() to false followed by IDL get 
PASS dl.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dl.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS dl.dir: setAttribute() to NaN followed by getAttribute() 
PASS dl.dir: setAttribute() to NaN followed by IDL get 
PASS dl.dir: setAttribute() to Infinity followed by getAttribute() 
PASS dl.dir: setAttribute() to Infinity followed by IDL get 
PASS dl.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS dl.dir: setAttribute() to -Infinity followed by IDL get 
PASS dl.dir: setAttribute() to "\0" followed by getAttribute() 
PASS dl.dir: setAttribute() to "\0" followed by IDL get 
PASS dl.dir: setAttribute() to null followed by getAttribute() 
PASS dl.dir: setAttribute() to null followed by IDL get 
PASS dl.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dl.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS dl.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dl.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dl.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS dl.dir: setAttribute() to "ltr" followed by IDL get 
PASS dl.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS dl.dir: setAttribute() to "xltr" followed by IDL get 
PASS dl.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS dl.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS dl.dir: setAttribute() to "tr" followed by getAttribute() 
PASS dl.dir: setAttribute() to "tr" followed by IDL get 
PASS dl.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS dl.dir: setAttribute() to "LTR" followed by IDL get 
PASS dl.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS dl.dir: setAttribute() to "rtl" followed by IDL get 
PASS dl.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS dl.dir: setAttribute() to "xrtl" followed by IDL get 
PASS dl.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS dl.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS dl.dir: setAttribute() to "tl" followed by getAttribute() 
PASS dl.dir: setAttribute() to "tl" followed by IDL get 
PASS dl.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS dl.dir: setAttribute() to "RTL" followed by IDL get 
PASS dl.dir: setAttribute() to "auto" followed by getAttribute() 
PASS dl.dir: setAttribute() to "auto" followed by IDL get 
PASS dl.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS dl.dir: setAttribute() to "xauto" followed by IDL get 
PASS dl.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS dl.dir: setAttribute() to "auto\0" followed by IDL get 
PASS dl.dir: setAttribute() to "uto" followed by getAttribute() 
PASS dl.dir: setAttribute() to "uto" followed by IDL get 
PASS dl.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS dl.dir: setAttribute() to "AUTO" followed by IDL get 
PASS dl.dir: IDL set to "" should not throw 
PASS dl.dir: IDL set to "" followed by getAttribute() 
PASS dl.dir: IDL set to "" followed by IDL get 
PASS dl.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dl.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dl.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dl.dir: IDL set to undefined should not throw 
PASS dl.dir: IDL set to undefined followed by getAttribute() 
PASS dl.dir: IDL set to undefined followed by IDL get 
PASS dl.dir: IDL set to 7 should not throw 
PASS dl.dir: IDL set to 7 followed by getAttribute() 
PASS dl.dir: IDL set to 7 followed by IDL get 
PASS dl.dir: IDL set to 1.5 should not throw 
PASS dl.dir: IDL set to 1.5 followed by getAttribute() 
PASS dl.dir: IDL set to 1.5 followed by IDL get 
PASS dl.dir: IDL set to true should not throw 
PASS dl.dir: IDL set to true followed by getAttribute() 
PASS dl.dir: IDL set to true followed by IDL get 
PASS dl.dir: IDL set to false should not throw 
PASS dl.dir: IDL set to false followed by getAttribute() 
PASS dl.dir: IDL set to false followed by IDL get 
PASS dl.dir: IDL set to object "[object Object]" should not throw 
PASS dl.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS dl.dir: IDL set to object "[object Object]" followed by IDL get 
PASS dl.dir: IDL set to NaN should not throw 
PASS dl.dir: IDL set to NaN followed by getAttribute() 
PASS dl.dir: IDL set to NaN followed by IDL get 
PASS dl.dir: IDL set to Infinity should not throw 
PASS dl.dir: IDL set to Infinity followed by getAttribute() 
PASS dl.dir: IDL set to Infinity followed by IDL get 
PASS dl.dir: IDL set to -Infinity should not throw 
PASS dl.dir: IDL set to -Infinity followed by getAttribute() 
PASS dl.dir: IDL set to -Infinity followed by IDL get 
PASS dl.dir: IDL set to "\0" should not throw 
PASS dl.dir: IDL set to "\0" followed by getAttribute() 
PASS dl.dir: IDL set to "\0" followed by IDL get 
PASS dl.dir: IDL set to null should not throw 
PASS dl.dir: IDL set to null followed by IDL get 
PASS dl.dir: IDL set to object "test-toString" should not throw 
PASS dl.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS dl.dir: IDL set to object "test-toString" followed by IDL get 
PASS dl.dir: IDL set to object "test-valueOf" should not throw 
PASS dl.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dl.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS dl.dir: IDL set to "ltr" should not throw 
PASS dl.dir: IDL set to "ltr" followed by getAttribute() 
PASS dl.dir: IDL set to "ltr" followed by IDL get 
PASS dl.dir: IDL set to "xltr" should not throw 
PASS dl.dir: IDL set to "xltr" followed by getAttribute() 
PASS dl.dir: IDL set to "xltr" followed by IDL get 
PASS dl.dir: IDL set to "ltr\0" should not throw 
PASS dl.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS dl.dir: IDL set to "ltr\0" followed by IDL get 
PASS dl.dir: IDL set to "tr" should not throw 
PASS dl.dir: IDL set to "tr" followed by getAttribute() 
PASS dl.dir: IDL set to "tr" followed by IDL get 
PASS dl.dir: IDL set to "LTR" should not throw 
PASS dl.dir: IDL set to "LTR" followed by getAttribute() 
PASS dl.dir: IDL set to "LTR" followed by IDL get 
PASS dl.dir: IDL set to "rtl" should not throw 
PASS dl.dir: IDL set to "rtl" followed by getAttribute() 
PASS dl.dir: IDL set to "rtl" followed by IDL get 
PASS dl.dir: IDL set to "xrtl" should not throw 
PASS dl.dir: IDL set to "xrtl" followed by getAttribute() 
PASS dl.dir: IDL set to "xrtl" followed by IDL get 
PASS dl.dir: IDL set to "rtl\0" should not throw 
PASS dl.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS dl.dir: IDL set to "rtl\0" followed by IDL get 
PASS dl.dir: IDL set to "tl" should not throw 
PASS dl.dir: IDL set to "tl" followed by getAttribute() 
PASS dl.dir: IDL set to "tl" followed by IDL get 
PASS dl.dir: IDL set to "RTL" should not throw 
PASS dl.dir: IDL set to "RTL" followed by getAttribute() 
PASS dl.dir: IDL set to "RTL" followed by IDL get 
PASS dl.dir: IDL set to "auto" should not throw 
PASS dl.dir: IDL set to "auto" followed by getAttribute() 
PASS dl.dir: IDL set to "auto" followed by IDL get 
PASS dl.dir: IDL set to "xauto" should not throw 
PASS dl.dir: IDL set to "xauto" followed by getAttribute() 
PASS dl.dir: IDL set to "xauto" followed by IDL get 
PASS dl.dir: IDL set to "auto\0" should not throw 
PASS dl.dir: IDL set to "auto\0" followed by getAttribute() 
PASS dl.dir: IDL set to "auto\0" followed by IDL get 
PASS dl.dir: IDL set to "uto" should not throw 
PASS dl.dir: IDL set to "uto" followed by getAttribute() 
PASS dl.dir: IDL set to "uto" followed by IDL get 
PASS dl.dir: IDL set to "AUTO" should not throw 
PASS dl.dir: IDL set to "AUTO" followed by getAttribute() 
PASS dl.dir: IDL set to "AUTO" followed by IDL get 
PASS dl.className (<dl class>): typeof IDL attribute 
PASS dl.className (<dl class>): IDL get with DOM attribute unset 
PASS dl.className (<dl class>): setAttribute() to "" followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to "" followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to undefined followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to undefined followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to 7 followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to 7 followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to 1.5 followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to 1.5 followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to true followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to true followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to false followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to false followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to NaN followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to NaN followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to Infinity followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to Infinity followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to -Infinity followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to -Infinity followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to "\0" followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to "\0" followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to null followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to null followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to object "test-toString" followed by IDL get 
PASS dl.className (<dl class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dl.className (<dl class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS dl.className (<dl class>): IDL set to "" should not throw 
PASS dl.className (<dl class>): IDL set to "" followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to "" followed by IDL get 
PASS dl.className (<dl class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dl.className (<dl class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dl.className (<dl class>): IDL set to undefined should not throw 
PASS dl.className (<dl class>): IDL set to undefined followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to undefined followed by IDL get 
PASS dl.className (<dl class>): IDL set to 7 should not throw 
PASS dl.className (<dl class>): IDL set to 7 followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to 7 followed by IDL get 
PASS dl.className (<dl class>): IDL set to 1.5 should not throw 
PASS dl.className (<dl class>): IDL set to 1.5 followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to 1.5 followed by IDL get 
PASS dl.className (<dl class>): IDL set to true should not throw 
PASS dl.className (<dl class>): IDL set to true followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to true followed by IDL get 
PASS dl.className (<dl class>): IDL set to false should not throw 
PASS dl.className (<dl class>): IDL set to false followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to false followed by IDL get 
PASS dl.className (<dl class>): IDL set to object "[object Object]" should not throw 
PASS dl.className (<dl class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to object "[object Object]" followed by IDL get 
PASS dl.className (<dl class>): IDL set to NaN should not throw 
PASS dl.className (<dl class>): IDL set to NaN followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to NaN followed by IDL get 
PASS dl.className (<dl class>): IDL set to Infinity should not throw 
PASS dl.className (<dl class>): IDL set to Infinity followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to Infinity followed by IDL get 
PASS dl.className (<dl class>): IDL set to -Infinity should not throw 
PASS dl.className (<dl class>): IDL set to -Infinity followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to -Infinity followed by IDL get 
PASS dl.className (<dl class>): IDL set to "\0" should not throw 
PASS dl.className (<dl class>): IDL set to "\0" followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to "\0" followed by IDL get 
PASS dl.className (<dl class>): IDL set to null should not throw 
PASS dl.className (<dl class>): IDL set to null followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to null followed by IDL get 
PASS dl.className (<dl class>): IDL set to object "test-toString" should not throw 
PASS dl.className (<dl class>): IDL set to object "test-toString" followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to object "test-toString" followed by IDL get 
PASS dl.className (<dl class>): IDL set to object "test-valueOf" should not throw 
PASS dl.className (<dl class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS dl.className (<dl class>): IDL set to object "test-valueOf" followed by IDL get 
PASS dl.hidden: typeof IDL attribute 
PASS dl.hidden: IDL get with DOM attribute unset 
PASS dl.hidden: setAttribute() to "" followed by getAttribute() 
PASS dl.hidden: setAttribute() to "" followed by IDL get 
PASS dl.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS dl.hidden: setAttribute() to " foo " followed by IDL get 
PASS dl.hidden: setAttribute() to undefined followed by getAttribute() 
PASS dl.hidden: setAttribute() to undefined followed by IDL get 
PASS dl.hidden: setAttribute() to null followed by getAttribute() 
PASS dl.hidden: setAttribute() to null followed by IDL get 
PASS dl.hidden: setAttribute() to 7 followed by getAttribute() 
PASS dl.hidden: setAttribute() to 7 followed by IDL get 
PASS dl.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS dl.hidden: setAttribute() to 1.5 followed by IDL get 
PASS dl.hidden: setAttribute() to true followed by getAttribute() 
PASS dl.hidden: setAttribute() to true followed by IDL get 
PASS dl.hidden: setAttribute() to false followed by getAttribute() 
PASS dl.hidden: setAttribute() to false followed by IDL get 
PASS dl.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dl.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS dl.hidden: setAttribute() to NaN followed by getAttribute() 
PASS dl.hidden: setAttribute() to NaN followed by IDL get 
PASS dl.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS dl.hidden: setAttribute() to Infinity followed by IDL get 
PASS dl.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS dl.hidden: setAttribute() to -Infinity followed by IDL get 
PASS dl.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS dl.hidden: setAttribute() to "\0" followed by IDL get 
PASS dl.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dl.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS dl.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dl.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dl.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS dl.hidden: setAttribute() to "hidden" followed by IDL get 
PASS dl.hidden: IDL set to "" should not throw 
PASS dl.hidden: IDL set to "" followed by hasAttribute() 
PASS dl.hidden: IDL set to "" followed by IDL get 
PASS dl.hidden: IDL set to " foo " should not throw 
PASS dl.hidden: IDL set to " foo " followed by hasAttribute() 
PASS dl.hidden: IDL set to " foo " followed by IDL get 
PASS dl.hidden: IDL set to undefined should not throw 
PASS dl.hidden: IDL set to undefined followed by hasAttribute() 
PASS dl.hidden: IDL set to undefined followed by IDL get 
PASS dl.hidden: IDL set to null should not throw 
PASS dl.hidden: IDL set to null followed by hasAttribute() 
PASS dl.hidden: IDL set to null followed by IDL get 
PASS dl.hidden: IDL set to 7 should not throw 
PASS dl.hidden: IDL set to 7 followed by hasAttribute() 
PASS dl.hidden: IDL set to 7 followed by IDL get 
PASS dl.hidden: IDL set to 1.5 should not throw 
PASS dl.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS dl.hidden: IDL set to 1.5 followed by IDL get 
PASS dl.hidden: IDL set to true should not throw 
PASS dl.hidden: IDL set to true followed by hasAttribute() 
PASS dl.hidden: IDL set to true followed by IDL get 
PASS dl.hidden: IDL set to false should not throw 
PASS dl.hidden: IDL set to false followed by hasAttribute() 
PASS dl.hidden: IDL set to false followed by IDL get 
PASS dl.hidden: IDL set to object "[object Object]" should not throw 
PASS dl.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS dl.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS dl.hidden: IDL set to NaN should not throw 
PASS dl.hidden: IDL set to NaN followed by hasAttribute() 
PASS dl.hidden: IDL set to NaN followed by IDL get 
PASS dl.hidden: IDL set to Infinity should not throw 
PASS dl.hidden: IDL set to Infinity followed by hasAttribute() 
PASS dl.hidden: IDL set to Infinity followed by IDL get 
PASS dl.hidden: IDL set to -Infinity should not throw 
PASS dl.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS dl.hidden: IDL set to -Infinity followed by IDL get 
PASS dl.hidden: IDL set to "\0" should not throw 
PASS dl.hidden: IDL set to "\0" followed by hasAttribute() 
PASS dl.hidden: IDL set to "\0" followed by IDL get 
PASS dl.hidden: IDL set to object "test-toString" should not throw 
PASS dl.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS dl.hidden: IDL set to object "test-toString" followed by IDL get 
PASS dl.hidden: IDL set to object "test-valueOf" should not throw 
PASS dl.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS dl.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS dl.accessKey: typeof IDL attribute 
PASS dl.accessKey: IDL get with DOM attribute unset 
PASS dl.accessKey: setAttribute() to "" followed by getAttribute() 
PASS dl.accessKey: setAttribute() to "" followed by IDL get 
PASS dl.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dl.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dl.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS dl.accessKey: setAttribute() to undefined followed by IDL get 
PASS dl.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS dl.accessKey: setAttribute() to 7 followed by IDL get 
PASS dl.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS dl.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS dl.accessKey: setAttribute() to true followed by getAttribute() 
PASS dl.accessKey: setAttribute() to true followed by IDL get 
PASS dl.accessKey: setAttribute() to false followed by getAttribute() 
PASS dl.accessKey: setAttribute() to false followed by IDL get 
PASS dl.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dl.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS dl.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS dl.accessKey: setAttribute() to NaN followed by IDL get 
PASS dl.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS dl.accessKey: setAttribute() to Infinity followed by IDL get 
PASS dl.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS dl.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS dl.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS dl.accessKey: setAttribute() to "\0" followed by IDL get 
PASS dl.accessKey: setAttribute() to null followed by getAttribute() 
PASS dl.accessKey: setAttribute() to null followed by IDL get 
PASS dl.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dl.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS dl.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dl.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dl.accessKey: IDL set to "" should not throw 
PASS dl.accessKey: IDL set to "" followed by getAttribute() 
PASS dl.accessKey: IDL set to "" followed by IDL get 
PASS dl.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dl.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dl.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dl.accessKey: IDL set to undefined should not throw 
PASS dl.accessKey: IDL set to undefined followed by getAttribute() 
PASS dl.accessKey: IDL set to undefined followed by IDL get 
PASS dl.accessKey: IDL set to 7 should not throw 
PASS dl.accessKey: IDL set to 7 followed by getAttribute() 
PASS dl.accessKey: IDL set to 7 followed by IDL get 
PASS dl.accessKey: IDL set to 1.5 should not throw 
PASS dl.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS dl.accessKey: IDL set to 1.5 followed by IDL get 
PASS dl.accessKey: IDL set to true should not throw 
PASS dl.accessKey: IDL set to true followed by getAttribute() 
PASS dl.accessKey: IDL set to true followed by IDL get 
PASS dl.accessKey: IDL set to false should not throw 
PASS dl.accessKey: IDL set to false followed by getAttribute() 
PASS dl.accessKey: IDL set to false followed by IDL get 
PASS dl.accessKey: IDL set to object "[object Object]" should not throw 
PASS dl.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS dl.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS dl.accessKey: IDL set to NaN should not throw 
PASS dl.accessKey: IDL set to NaN followed by getAttribute() 
PASS dl.accessKey: IDL set to NaN followed by IDL get 
PASS dl.accessKey: IDL set to Infinity should not throw 
PASS dl.accessKey: IDL set to Infinity followed by getAttribute() 
PASS dl.accessKey: IDL set to Infinity followed by IDL get 
PASS dl.accessKey: IDL set to -Infinity should not throw 
PASS dl.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS dl.accessKey: IDL set to -Infinity followed by IDL get 
PASS dl.accessKey: IDL set to "\0" should not throw 
PASS dl.accessKey: IDL set to "\0" followed by getAttribute() 
PASS dl.accessKey: IDL set to "\0" followed by IDL get 
PASS dl.accessKey: IDL set to null should not throw 
PASS dl.accessKey: IDL set to null followed by getAttribute() 
PASS dl.accessKey: IDL set to null followed by IDL get 
PASS dl.accessKey: IDL set to object "test-toString" should not throw 
PASS dl.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS dl.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS dl.accessKey: IDL set to object "test-valueOf" should not throw 
PASS dl.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dl.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS dl.tabIndex: typeof IDL attribute 
PASS dl.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to -36 followed by IDL get 
PASS dl.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to -1 followed by IDL get 
PASS dl.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to 0 followed by IDL get 
PASS dl.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to 1 followed by IDL get 
PASS dl.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS dl.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS dl.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS dl.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS dl.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to "0" followed by IDL get 
PASS dl.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to "1" followed by IDL get 
PASS dl.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS dl.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS dl.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS dl.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS dl.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS dl.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS dl.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS dl.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS dl.tabIndex: IDL set to -36 should not throw 
PASS dl.tabIndex: IDL set to -36 followed by getAttribute() 
PASS dl.tabIndex: IDL set to -36 followed by IDL get 
PASS dl.tabIndex: IDL set to -1 should not throw 
PASS dl.tabIndex: IDL set to -1 followed by getAttribute() 
PASS dl.tabIndex: IDL set to -1 followed by IDL get 
PASS dl.tabIndex: IDL set to 0 should not throw 
PASS dl.tabIndex: IDL set to 0 followed by getAttribute() 
PASS dl.tabIndex: IDL set to 0 followed by IDL get 
PASS dl.tabIndex: IDL set to 1 should not throw 
PASS dl.tabIndex: IDL set to 1 followed by getAttribute() 
PASS dl.tabIndex: IDL set to 1 followed by IDL get 
PASS dl.tabIndex: IDL set to 2147483647 should not throw 
PASS dl.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS dl.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS dl.tabIndex: IDL set to -2147483648 should not throw 
PASS dl.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS dl.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS dl.compact: typeof IDL attribute 
PASS dl.compact: IDL get with DOM attribute unset 
PASS dl.compact: setAttribute() to "" followed by getAttribute() 
PASS dl.compact: setAttribute() to "" followed by IDL get 
PASS dl.compact: setAttribute() to " foo " followed by getAttribute() 
PASS dl.compact: setAttribute() to " foo " followed by IDL get 
PASS dl.compact: setAttribute() to undefined followed by getAttribute() 
PASS dl.compact: setAttribute() to undefined followed by IDL get 
PASS dl.compact: setAttribute() to null followed by getAttribute() 
PASS dl.compact: setAttribute() to null followed by IDL get 
PASS dl.compact: setAttribute() to 7 followed by getAttribute() 
PASS dl.compact: setAttribute() to 7 followed by IDL get 
PASS dl.compact: setAttribute() to 1.5 followed by getAttribute() 
PASS dl.compact: setAttribute() to 1.5 followed by IDL get 
PASS dl.compact: setAttribute() to true followed by getAttribute() 
PASS dl.compact: setAttribute() to true followed by IDL get 
PASS dl.compact: setAttribute() to false followed by getAttribute() 
PASS dl.compact: setAttribute() to false followed by IDL get 
PASS dl.compact: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dl.compact: setAttribute() to object "[object Object]" followed by IDL get 
PASS dl.compact: setAttribute() to NaN followed by getAttribute() 
PASS dl.compact: setAttribute() to NaN followed by IDL get 
PASS dl.compact: setAttribute() to Infinity followed by getAttribute() 
PASS dl.compact: setAttribute() to Infinity followed by IDL get 
PASS dl.compact: setAttribute() to -Infinity followed by getAttribute() 
PASS dl.compact: setAttribute() to -Infinity followed by IDL get 
PASS dl.compact: setAttribute() to "\0" followed by getAttribute() 
PASS dl.compact: setAttribute() to "\0" followed by IDL get 
PASS dl.compact: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dl.compact: setAttribute() to object "test-toString" followed by IDL get 
PASS dl.compact: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dl.compact: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dl.compact: setAttribute() to "compact" followed by getAttribute() 
PASS dl.compact: setAttribute() to "compact" followed by IDL get 
PASS dl.compact: IDL set to "" should not throw 
PASS dl.compact: IDL set to "" followed by hasAttribute() 
PASS dl.compact: IDL set to "" followed by IDL get 
PASS dl.compact: IDL set to " foo " should not throw 
PASS dl.compact: IDL set to " foo " followed by hasAttribute() 
PASS dl.compact: IDL set to " foo " followed by IDL get 
PASS dl.compact: IDL set to undefined should not throw 
PASS dl.compact: IDL set to undefined followed by hasAttribute() 
PASS dl.compact: IDL set to undefined followed by IDL get 
PASS dl.compact: IDL set to null should not throw 
PASS dl.compact: IDL set to null followed by hasAttribute() 
PASS dl.compact: IDL set to null followed by IDL get 
PASS dl.compact: IDL set to 7 should not throw 
PASS dl.compact: IDL set to 7 followed by hasAttribute() 
PASS dl.compact: IDL set to 7 followed by IDL get 
PASS dl.compact: IDL set to 1.5 should not throw 
PASS dl.compact: IDL set to 1.5 followed by hasAttribute() 
PASS dl.compact: IDL set to 1.5 followed by IDL get 
PASS dl.compact: IDL set to true should not throw 
PASS dl.compact: IDL set to true followed by hasAttribute() 
PASS dl.compact: IDL set to true followed by IDL get 
PASS dl.compact: IDL set to false should not throw 
PASS dl.compact: IDL set to false followed by hasAttribute() 
PASS dl.compact: IDL set to false followed by IDL get 
PASS dl.compact: IDL set to object "[object Object]" should not throw 
PASS dl.compact: IDL set to object "[object Object]" followed by hasAttribute() 
PASS dl.compact: IDL set to object "[object Object]" followed by IDL get 
PASS dl.compact: IDL set to NaN should not throw 
PASS dl.compact: IDL set to NaN followed by hasAttribute() 
PASS dl.compact: IDL set to NaN followed by IDL get 
PASS dl.compact: IDL set to Infinity should not throw 
PASS dl.compact: IDL set to Infinity followed by hasAttribute() 
PASS dl.compact: IDL set to Infinity followed by IDL get 
PASS dl.compact: IDL set to -Infinity should not throw 
PASS dl.compact: IDL set to -Infinity followed by hasAttribute() 
PASS dl.compact: IDL set to -Infinity followed by IDL get 
PASS dl.compact: IDL set to "\0" should not throw 
PASS dl.compact: IDL set to "\0" followed by hasAttribute() 
PASS dl.compact: IDL set to "\0" followed by IDL get 
PASS dl.compact: IDL set to object "test-toString" should not throw 
PASS dl.compact: IDL set to object "test-toString" followed by hasAttribute() 
PASS dl.compact: IDL set to object "test-toString" followed by IDL get 
PASS dl.compact: IDL set to object "test-valueOf" should not throw 
PASS dl.compact: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS dl.compact: IDL set to object "test-valueOf" followed by IDL get 
FAIL dl.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL dl.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS dl.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to null followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to true followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to false followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL dl.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dl.itemScope: IDL set to "" should not throw 
FAIL dl.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL dl.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS dl.itemScope: IDL set to " foo " should not throw 
PASS dl.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL dl.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS dl.itemScope: IDL set to undefined should not throw 
FAIL dl.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL dl.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS dl.itemScope: IDL set to null should not throw 
FAIL dl.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL dl.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS dl.itemScope: IDL set to 7 should not throw 
PASS dl.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL dl.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS dl.itemScope: IDL set to 1.5 should not throw 
PASS dl.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL dl.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS dl.itemScope: IDL set to true should not throw 
PASS dl.itemScope: IDL set to true followed by hasAttribute() 
PASS dl.itemScope: IDL set to true followed by IDL get 
PASS dl.itemScope: IDL set to false should not throw 
FAIL dl.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS dl.itemScope: IDL set to false followed by IDL get 
PASS dl.itemScope: IDL set to object "[object Object]" should not throw 
PASS dl.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL dl.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS dl.itemScope: IDL set to NaN should not throw 
FAIL dl.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL dl.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS dl.itemScope: IDL set to Infinity should not throw 
PASS dl.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL dl.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS dl.itemScope: IDL set to -Infinity should not throw 
PASS dl.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL dl.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS dl.itemScope: IDL set to "\0" should not throw 
PASS dl.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL dl.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS dl.itemScope: IDL set to object "test-toString" should not throw 
PASS dl.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL dl.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS dl.itemScope: IDL set to object "test-valueOf" should not throw 
PASS dl.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL dl.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL dl.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL dl.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS dl.itemId: setAttribute() to "" followed by getAttribute() 
FAIL dl.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS dl.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL dl.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS dl.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL dl.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS dl.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL dl.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS dl.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL dl.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS dl.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL dl.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS dl.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL dl.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS dl.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL dl.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS dl.itemId: setAttribute() to true followed by getAttribute() 
FAIL dl.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS dl.itemId: setAttribute() to false followed by getAttribute() 
FAIL dl.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS dl.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL dl.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS dl.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL dl.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS dl.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL dl.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS dl.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL dl.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS dl.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL dl.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS dl.itemId: setAttribute() to null followed by getAttribute() 
FAIL dl.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS dl.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL dl.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS dl.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL dl.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS dl.itemId: IDL set to "" should not throw 
FAIL dl.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL dl.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS dl.itemId: IDL set to " foo " should not throw 
FAIL dl.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL dl.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS dl.itemId: IDL set to "http://site.example/" should not throw 
FAIL dl.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS dl.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS dl.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL dl.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL dl.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS dl.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL dl.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL dl.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS dl.itemId: IDL set to undefined should not throw 
FAIL dl.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL dl.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS dl.itemId: IDL set to 7 should not throw 
FAIL dl.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL dl.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS dl.itemId: IDL set to 1.5 should not throw 
FAIL dl.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL dl.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS dl.itemId: IDL set to true should not throw 
FAIL dl.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL dl.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS dl.itemId: IDL set to false should not throw 
FAIL dl.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL dl.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS dl.itemId: IDL set to object "[object Object]" should not throw 
FAIL dl.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL dl.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS dl.itemId: IDL set to NaN should not throw 
FAIL dl.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL dl.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS dl.itemId: IDL set to Infinity should not throw 
FAIL dl.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL dl.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS dl.itemId: IDL set to -Infinity should not throw 
FAIL dl.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL dl.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS dl.itemId: IDL set to "\0" should not throw 
FAIL dl.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL dl.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS dl.itemId: IDL set to null should not throw 
FAIL dl.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL dl.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS dl.itemId: IDL set to object "test-toString" should not throw 
FAIL dl.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL dl.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS dl.itemId: IDL set to object "test-valueOf" should not throw 
PASS dl.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL dl.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS dt.title: typeof IDL attribute 
PASS dt.title: IDL get with DOM attribute unset 
PASS dt.title: setAttribute() to "" followed by getAttribute() 
PASS dt.title: setAttribute() to "" followed by IDL get 
PASS dt.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dt.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dt.title: setAttribute() to undefined followed by getAttribute() 
PASS dt.title: setAttribute() to undefined followed by IDL get 
PASS dt.title: setAttribute() to 7 followed by getAttribute() 
PASS dt.title: setAttribute() to 7 followed by IDL get 
PASS dt.title: setAttribute() to 1.5 followed by getAttribute() 
PASS dt.title: setAttribute() to 1.5 followed by IDL get 
PASS dt.title: setAttribute() to true followed by getAttribute() 
PASS dt.title: setAttribute() to true followed by IDL get 
PASS dt.title: setAttribute() to false followed by getAttribute() 
PASS dt.title: setAttribute() to false followed by IDL get 
PASS dt.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dt.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS dt.title: setAttribute() to NaN followed by getAttribute() 
PASS dt.title: setAttribute() to NaN followed by IDL get 
PASS dt.title: setAttribute() to Infinity followed by getAttribute() 
PASS dt.title: setAttribute() to Infinity followed by IDL get 
PASS dt.title: setAttribute() to -Infinity followed by getAttribute() 
PASS dt.title: setAttribute() to -Infinity followed by IDL get 
PASS dt.title: setAttribute() to "\0" followed by getAttribute() 
PASS dt.title: setAttribute() to "\0" followed by IDL get 
PASS dt.title: setAttribute() to null followed by getAttribute() 
PASS dt.title: setAttribute() to null followed by IDL get 
PASS dt.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dt.title: setAttribute() to object "test-toString" followed by IDL get 
PASS dt.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dt.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dt.title: IDL set to "" should not throw 
PASS dt.title: IDL set to "" followed by getAttribute() 
PASS dt.title: IDL set to "" followed by IDL get 
PASS dt.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dt.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dt.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dt.title: IDL set to undefined should not throw 
PASS dt.title: IDL set to undefined followed by getAttribute() 
PASS dt.title: IDL set to undefined followed by IDL get 
PASS dt.title: IDL set to 7 should not throw 
PASS dt.title: IDL set to 7 followed by getAttribute() 
PASS dt.title: IDL set to 7 followed by IDL get 
PASS dt.title: IDL set to 1.5 should not throw 
PASS dt.title: IDL set to 1.5 followed by getAttribute() 
PASS dt.title: IDL set to 1.5 followed by IDL get 
PASS dt.title: IDL set to true should not throw 
PASS dt.title: IDL set to true followed by getAttribute() 
PASS dt.title: IDL set to true followed by IDL get 
PASS dt.title: IDL set to false should not throw 
PASS dt.title: IDL set to false followed by getAttribute() 
PASS dt.title: IDL set to false followed by IDL get 
PASS dt.title: IDL set to object "[object Object]" should not throw 
PASS dt.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS dt.title: IDL set to object "[object Object]" followed by IDL get 
PASS dt.title: IDL set to NaN should not throw 
PASS dt.title: IDL set to NaN followed by getAttribute() 
PASS dt.title: IDL set to NaN followed by IDL get 
PASS dt.title: IDL set to Infinity should not throw 
PASS dt.title: IDL set to Infinity followed by getAttribute() 
PASS dt.title: IDL set to Infinity followed by IDL get 
PASS dt.title: IDL set to -Infinity should not throw 
PASS dt.title: IDL set to -Infinity followed by getAttribute() 
PASS dt.title: IDL set to -Infinity followed by IDL get 
PASS dt.title: IDL set to "\0" should not throw 
PASS dt.title: IDL set to "\0" followed by getAttribute() 
PASS dt.title: IDL set to "\0" followed by IDL get 
PASS dt.title: IDL set to null should not throw 
PASS dt.title: IDL set to null followed by getAttribute() 
PASS dt.title: IDL set to null followed by IDL get 
PASS dt.title: IDL set to object "test-toString" should not throw 
PASS dt.title: IDL set to object "test-toString" followed by getAttribute() 
PASS dt.title: IDL set to object "test-toString" followed by IDL get 
PASS dt.title: IDL set to object "test-valueOf" should not throw 
PASS dt.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dt.title: IDL set to object "test-valueOf" followed by IDL get 
PASS dt.lang: typeof IDL attribute 
PASS dt.lang: IDL get with DOM attribute unset 
PASS dt.lang: setAttribute() to "" followed by getAttribute() 
PASS dt.lang: setAttribute() to "" followed by IDL get 
PASS dt.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dt.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dt.lang: setAttribute() to undefined followed by getAttribute() 
PASS dt.lang: setAttribute() to undefined followed by IDL get 
PASS dt.lang: setAttribute() to 7 followed by getAttribute() 
PASS dt.lang: setAttribute() to 7 followed by IDL get 
PASS dt.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS dt.lang: setAttribute() to 1.5 followed by IDL get 
PASS dt.lang: setAttribute() to true followed by getAttribute() 
PASS dt.lang: setAttribute() to true followed by IDL get 
PASS dt.lang: setAttribute() to false followed by getAttribute() 
PASS dt.lang: setAttribute() to false followed by IDL get 
PASS dt.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dt.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS dt.lang: setAttribute() to NaN followed by getAttribute() 
PASS dt.lang: setAttribute() to NaN followed by IDL get 
PASS dt.lang: setAttribute() to Infinity followed by getAttribute() 
PASS dt.lang: setAttribute() to Infinity followed by IDL get 
PASS dt.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS dt.lang: setAttribute() to -Infinity followed by IDL get 
PASS dt.lang: setAttribute() to "\0" followed by getAttribute() 
PASS dt.lang: setAttribute() to "\0" followed by IDL get 
PASS dt.lang: setAttribute() to null followed by getAttribute() 
PASS dt.lang: setAttribute() to null followed by IDL get 
PASS dt.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dt.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS dt.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dt.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dt.lang: IDL set to "" should not throw 
PASS dt.lang: IDL set to "" followed by getAttribute() 
PASS dt.lang: IDL set to "" followed by IDL get 
PASS dt.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dt.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dt.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dt.lang: IDL set to undefined should not throw 
PASS dt.lang: IDL set to undefined followed by getAttribute() 
PASS dt.lang: IDL set to undefined followed by IDL get 
PASS dt.lang: IDL set to 7 should not throw 
PASS dt.lang: IDL set to 7 followed by getAttribute() 
PASS dt.lang: IDL set to 7 followed by IDL get 
PASS dt.lang: IDL set to 1.5 should not throw 
PASS dt.lang: IDL set to 1.5 followed by getAttribute() 
PASS dt.lang: IDL set to 1.5 followed by IDL get 
PASS dt.lang: IDL set to true should not throw 
PASS dt.lang: IDL set to true followed by getAttribute() 
PASS dt.lang: IDL set to true followed by IDL get 
PASS dt.lang: IDL set to false should not throw 
PASS dt.lang: IDL set to false followed by getAttribute() 
PASS dt.lang: IDL set to false followed by IDL get 
PASS dt.lang: IDL set to object "[object Object]" should not throw 
PASS dt.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS dt.lang: IDL set to object "[object Object]" followed by IDL get 
PASS dt.lang: IDL set to NaN should not throw 
PASS dt.lang: IDL set to NaN followed by getAttribute() 
PASS dt.lang: IDL set to NaN followed by IDL get 
PASS dt.lang: IDL set to Infinity should not throw 
PASS dt.lang: IDL set to Infinity followed by getAttribute() 
PASS dt.lang: IDL set to Infinity followed by IDL get 
PASS dt.lang: IDL set to -Infinity should not throw 
PASS dt.lang: IDL set to -Infinity followed by getAttribute() 
PASS dt.lang: IDL set to -Infinity followed by IDL get 
PASS dt.lang: IDL set to "\0" should not throw 
PASS dt.lang: IDL set to "\0" followed by getAttribute() 
PASS dt.lang: IDL set to "\0" followed by IDL get 
PASS dt.lang: IDL set to null should not throw 
PASS dt.lang: IDL set to null followed by getAttribute() 
PASS dt.lang: IDL set to null followed by IDL get 
PASS dt.lang: IDL set to object "test-toString" should not throw 
PASS dt.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS dt.lang: IDL set to object "test-toString" followed by IDL get 
PASS dt.lang: IDL set to object "test-valueOf" should not throw 
PASS dt.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dt.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS dt.dir: typeof IDL attribute 
PASS dt.dir: IDL get with DOM attribute unset 
PASS dt.dir: setAttribute() to "" followed by getAttribute() 
PASS dt.dir: setAttribute() to "" followed by IDL get 
PASS dt.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dt.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dt.dir: setAttribute() to undefined followed by getAttribute() 
PASS dt.dir: setAttribute() to undefined followed by IDL get 
PASS dt.dir: setAttribute() to 7 followed by getAttribute() 
PASS dt.dir: setAttribute() to 7 followed by IDL get 
PASS dt.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS dt.dir: setAttribute() to 1.5 followed by IDL get 
PASS dt.dir: setAttribute() to true followed by getAttribute() 
PASS dt.dir: setAttribute() to true followed by IDL get 
PASS dt.dir: setAttribute() to false followed by getAttribute() 
PASS dt.dir: setAttribute() to false followed by IDL get 
PASS dt.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dt.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS dt.dir: setAttribute() to NaN followed by getAttribute() 
PASS dt.dir: setAttribute() to NaN followed by IDL get 
PASS dt.dir: setAttribute() to Infinity followed by getAttribute() 
PASS dt.dir: setAttribute() to Infinity followed by IDL get 
PASS dt.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS dt.dir: setAttribute() to -Infinity followed by IDL get 
PASS dt.dir: setAttribute() to "\0" followed by getAttribute() 
PASS dt.dir: setAttribute() to "\0" followed by IDL get 
PASS dt.dir: setAttribute() to null followed by getAttribute() 
PASS dt.dir: setAttribute() to null followed by IDL get 
PASS dt.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dt.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS dt.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dt.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dt.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS dt.dir: setAttribute() to "ltr" followed by IDL get 
PASS dt.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS dt.dir: setAttribute() to "xltr" followed by IDL get 
PASS dt.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS dt.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS dt.dir: setAttribute() to "tr" followed by getAttribute() 
PASS dt.dir: setAttribute() to "tr" followed by IDL get 
PASS dt.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS dt.dir: setAttribute() to "LTR" followed by IDL get 
PASS dt.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS dt.dir: setAttribute() to "rtl" followed by IDL get 
PASS dt.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS dt.dir: setAttribute() to "xrtl" followed by IDL get 
PASS dt.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS dt.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS dt.dir: setAttribute() to "tl" followed by getAttribute() 
PASS dt.dir: setAttribute() to "tl" followed by IDL get 
PASS dt.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS dt.dir: setAttribute() to "RTL" followed by IDL get 
PASS dt.dir: setAttribute() to "auto" followed by getAttribute() 
PASS dt.dir: setAttribute() to "auto" followed by IDL get 
PASS dt.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS dt.dir: setAttribute() to "xauto" followed by IDL get 
PASS dt.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS dt.dir: setAttribute() to "auto\0" followed by IDL get 
PASS dt.dir: setAttribute() to "uto" followed by getAttribute() 
PASS dt.dir: setAttribute() to "uto" followed by IDL get 
PASS dt.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS dt.dir: setAttribute() to "AUTO" followed by IDL get 
PASS dt.dir: IDL set to "" should not throw 
PASS dt.dir: IDL set to "" followed by getAttribute() 
PASS dt.dir: IDL set to "" followed by IDL get 
PASS dt.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dt.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dt.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dt.dir: IDL set to undefined should not throw 
PASS dt.dir: IDL set to undefined followed by getAttribute() 
PASS dt.dir: IDL set to undefined followed by IDL get 
PASS dt.dir: IDL set to 7 should not throw 
PASS dt.dir: IDL set to 7 followed by getAttribute() 
PASS dt.dir: IDL set to 7 followed by IDL get 
PASS dt.dir: IDL set to 1.5 should not throw 
PASS dt.dir: IDL set to 1.5 followed by getAttribute() 
PASS dt.dir: IDL set to 1.5 followed by IDL get 
PASS dt.dir: IDL set to true should not throw 
PASS dt.dir: IDL set to true followed by getAttribute() 
PASS dt.dir: IDL set to true followed by IDL get 
PASS dt.dir: IDL set to false should not throw 
PASS dt.dir: IDL set to false followed by getAttribute() 
PASS dt.dir: IDL set to false followed by IDL get 
PASS dt.dir: IDL set to object "[object Object]" should not throw 
PASS dt.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS dt.dir: IDL set to object "[object Object]" followed by IDL get 
PASS dt.dir: IDL set to NaN should not throw 
PASS dt.dir: IDL set to NaN followed by getAttribute() 
PASS dt.dir: IDL set to NaN followed by IDL get 
PASS dt.dir: IDL set to Infinity should not throw 
PASS dt.dir: IDL set to Infinity followed by getAttribute() 
PASS dt.dir: IDL set to Infinity followed by IDL get 
PASS dt.dir: IDL set to -Infinity should not throw 
PASS dt.dir: IDL set to -Infinity followed by getAttribute() 
PASS dt.dir: IDL set to -Infinity followed by IDL get 
PASS dt.dir: IDL set to "\0" should not throw 
PASS dt.dir: IDL set to "\0" followed by getAttribute() 
PASS dt.dir: IDL set to "\0" followed by IDL get 
PASS dt.dir: IDL set to null should not throw 
PASS dt.dir: IDL set to null followed by IDL get 
PASS dt.dir: IDL set to object "test-toString" should not throw 
PASS dt.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS dt.dir: IDL set to object "test-toString" followed by IDL get 
PASS dt.dir: IDL set to object "test-valueOf" should not throw 
PASS dt.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dt.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS dt.dir: IDL set to "ltr" should not throw 
PASS dt.dir: IDL set to "ltr" followed by getAttribute() 
PASS dt.dir: IDL set to "ltr" followed by IDL get 
PASS dt.dir: IDL set to "xltr" should not throw 
PASS dt.dir: IDL set to "xltr" followed by getAttribute() 
PASS dt.dir: IDL set to "xltr" followed by IDL get 
PASS dt.dir: IDL set to "ltr\0" should not throw 
PASS dt.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS dt.dir: IDL set to "ltr\0" followed by IDL get 
PASS dt.dir: IDL set to "tr" should not throw 
PASS dt.dir: IDL set to "tr" followed by getAttribute() 
PASS dt.dir: IDL set to "tr" followed by IDL get 
PASS dt.dir: IDL set to "LTR" should not throw 
PASS dt.dir: IDL set to "LTR" followed by getAttribute() 
PASS dt.dir: IDL set to "LTR" followed by IDL get 
PASS dt.dir: IDL set to "rtl" should not throw 
PASS dt.dir: IDL set to "rtl" followed by getAttribute() 
PASS dt.dir: IDL set to "rtl" followed by IDL get 
PASS dt.dir: IDL set to "xrtl" should not throw 
PASS dt.dir: IDL set to "xrtl" followed by getAttribute() 
PASS dt.dir: IDL set to "xrtl" followed by IDL get 
PASS dt.dir: IDL set to "rtl\0" should not throw 
PASS dt.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS dt.dir: IDL set to "rtl\0" followed by IDL get 
PASS dt.dir: IDL set to "tl" should not throw 
PASS dt.dir: IDL set to "tl" followed by getAttribute() 
PASS dt.dir: IDL set to "tl" followed by IDL get 
PASS dt.dir: IDL set to "RTL" should not throw 
PASS dt.dir: IDL set to "RTL" followed by getAttribute() 
PASS dt.dir: IDL set to "RTL" followed by IDL get 
PASS dt.dir: IDL set to "auto" should not throw 
PASS dt.dir: IDL set to "auto" followed by getAttribute() 
PASS dt.dir: IDL set to "auto" followed by IDL get 
PASS dt.dir: IDL set to "xauto" should not throw 
PASS dt.dir: IDL set to "xauto" followed by getAttribute() 
PASS dt.dir: IDL set to "xauto" followed by IDL get 
PASS dt.dir: IDL set to "auto\0" should not throw 
PASS dt.dir: IDL set to "auto\0" followed by getAttribute() 
PASS dt.dir: IDL set to "auto\0" followed by IDL get 
PASS dt.dir: IDL set to "uto" should not throw 
PASS dt.dir: IDL set to "uto" followed by getAttribute() 
PASS dt.dir: IDL set to "uto" followed by IDL get 
PASS dt.dir: IDL set to "AUTO" should not throw 
PASS dt.dir: IDL set to "AUTO" followed by getAttribute() 
PASS dt.dir: IDL set to "AUTO" followed by IDL get 
PASS dt.className (<dt class>): typeof IDL attribute 
PASS dt.className (<dt class>): IDL get with DOM attribute unset 
PASS dt.className (<dt class>): setAttribute() to "" followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to "" followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to undefined followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to undefined followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to 7 followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to 7 followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to 1.5 followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to 1.5 followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to true followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to true followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to false followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to false followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to NaN followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to NaN followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to Infinity followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to Infinity followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to -Infinity followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to -Infinity followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to "\0" followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to "\0" followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to null followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to null followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to object "test-toString" followed by IDL get 
PASS dt.className (<dt class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dt.className (<dt class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS dt.className (<dt class>): IDL set to "" should not throw 
PASS dt.className (<dt class>): IDL set to "" followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to "" followed by IDL get 
PASS dt.className (<dt class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dt.className (<dt class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dt.className (<dt class>): IDL set to undefined should not throw 
PASS dt.className (<dt class>): IDL set to undefined followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to undefined followed by IDL get 
PASS dt.className (<dt class>): IDL set to 7 should not throw 
PASS dt.className (<dt class>): IDL set to 7 followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to 7 followed by IDL get 
PASS dt.className (<dt class>): IDL set to 1.5 should not throw 
PASS dt.className (<dt class>): IDL set to 1.5 followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to 1.5 followed by IDL get 
PASS dt.className (<dt class>): IDL set to true should not throw 
PASS dt.className (<dt class>): IDL set to true followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to true followed by IDL get 
PASS dt.className (<dt class>): IDL set to false should not throw 
PASS dt.className (<dt class>): IDL set to false followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to false followed by IDL get 
PASS dt.className (<dt class>): IDL set to object "[object Object]" should not throw 
PASS dt.className (<dt class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to object "[object Object]" followed by IDL get 
PASS dt.className (<dt class>): IDL set to NaN should not throw 
PASS dt.className (<dt class>): IDL set to NaN followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to NaN followed by IDL get 
PASS dt.className (<dt class>): IDL set to Infinity should not throw 
PASS dt.className (<dt class>): IDL set to Infinity followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to Infinity followed by IDL get 
PASS dt.className (<dt class>): IDL set to -Infinity should not throw 
PASS dt.className (<dt class>): IDL set to -Infinity followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to -Infinity followed by IDL get 
PASS dt.className (<dt class>): IDL set to "\0" should not throw 
PASS dt.className (<dt class>): IDL set to "\0" followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to "\0" followed by IDL get 
PASS dt.className (<dt class>): IDL set to null should not throw 
PASS dt.className (<dt class>): IDL set to null followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to null followed by IDL get 
PASS dt.className (<dt class>): IDL set to object "test-toString" should not throw 
PASS dt.className (<dt class>): IDL set to object "test-toString" followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to object "test-toString" followed by IDL get 
PASS dt.className (<dt class>): IDL set to object "test-valueOf" should not throw 
PASS dt.className (<dt class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS dt.className (<dt class>): IDL set to object "test-valueOf" followed by IDL get 
PASS dt.hidden: typeof IDL attribute 
PASS dt.hidden: IDL get with DOM attribute unset 
PASS dt.hidden: setAttribute() to "" followed by getAttribute() 
PASS dt.hidden: setAttribute() to "" followed by IDL get 
PASS dt.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS dt.hidden: setAttribute() to " foo " followed by IDL get 
PASS dt.hidden: setAttribute() to undefined followed by getAttribute() 
PASS dt.hidden: setAttribute() to undefined followed by IDL get 
PASS dt.hidden: setAttribute() to null followed by getAttribute() 
PASS dt.hidden: setAttribute() to null followed by IDL get 
PASS dt.hidden: setAttribute() to 7 followed by getAttribute() 
PASS dt.hidden: setAttribute() to 7 followed by IDL get 
PASS dt.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS dt.hidden: setAttribute() to 1.5 followed by IDL get 
PASS dt.hidden: setAttribute() to true followed by getAttribute() 
PASS dt.hidden: setAttribute() to true followed by IDL get 
PASS dt.hidden: setAttribute() to false followed by getAttribute() 
PASS dt.hidden: setAttribute() to false followed by IDL get 
PASS dt.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dt.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS dt.hidden: setAttribute() to NaN followed by getAttribute() 
PASS dt.hidden: setAttribute() to NaN followed by IDL get 
PASS dt.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS dt.hidden: setAttribute() to Infinity followed by IDL get 
PASS dt.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS dt.hidden: setAttribute() to -Infinity followed by IDL get 
PASS dt.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS dt.hidden: setAttribute() to "\0" followed by IDL get 
PASS dt.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dt.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS dt.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dt.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dt.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS dt.hidden: setAttribute() to "hidden" followed by IDL get 
PASS dt.hidden: IDL set to "" should not throw 
PASS dt.hidden: IDL set to "" followed by hasAttribute() 
PASS dt.hidden: IDL set to "" followed by IDL get 
PASS dt.hidden: IDL set to " foo " should not throw 
PASS dt.hidden: IDL set to " foo " followed by hasAttribute() 
PASS dt.hidden: IDL set to " foo " followed by IDL get 
PASS dt.hidden: IDL set to undefined should not throw 
PASS dt.hidden: IDL set to undefined followed by hasAttribute() 
PASS dt.hidden: IDL set to undefined followed by IDL get 
PASS dt.hidden: IDL set to null should not throw 
PASS dt.hidden: IDL set to null followed by hasAttribute() 
PASS dt.hidden: IDL set to null followed by IDL get 
PASS dt.hidden: IDL set to 7 should not throw 
PASS dt.hidden: IDL set to 7 followed by hasAttribute() 
PASS dt.hidden: IDL set to 7 followed by IDL get 
PASS dt.hidden: IDL set to 1.5 should not throw 
PASS dt.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS dt.hidden: IDL set to 1.5 followed by IDL get 
PASS dt.hidden: IDL set to true should not throw 
PASS dt.hidden: IDL set to true followed by hasAttribute() 
PASS dt.hidden: IDL set to true followed by IDL get 
PASS dt.hidden: IDL set to false should not throw 
PASS dt.hidden: IDL set to false followed by hasAttribute() 
PASS dt.hidden: IDL set to false followed by IDL get 
PASS dt.hidden: IDL set to object "[object Object]" should not throw 
PASS dt.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS dt.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS dt.hidden: IDL set to NaN should not throw 
PASS dt.hidden: IDL set to NaN followed by hasAttribute() 
PASS dt.hidden: IDL set to NaN followed by IDL get 
PASS dt.hidden: IDL set to Infinity should not throw 
PASS dt.hidden: IDL set to Infinity followed by hasAttribute() 
PASS dt.hidden: IDL set to Infinity followed by IDL get 
PASS dt.hidden: IDL set to -Infinity should not throw 
PASS dt.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS dt.hidden: IDL set to -Infinity followed by IDL get 
PASS dt.hidden: IDL set to "\0" should not throw 
PASS dt.hidden: IDL set to "\0" followed by hasAttribute() 
PASS dt.hidden: IDL set to "\0" followed by IDL get 
PASS dt.hidden: IDL set to object "test-toString" should not throw 
PASS dt.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS dt.hidden: IDL set to object "test-toString" followed by IDL get 
PASS dt.hidden: IDL set to object "test-valueOf" should not throw 
PASS dt.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS dt.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS dt.accessKey: typeof IDL attribute 
PASS dt.accessKey: IDL get with DOM attribute unset 
PASS dt.accessKey: setAttribute() to "" followed by getAttribute() 
PASS dt.accessKey: setAttribute() to "" followed by IDL get 
PASS dt.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dt.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dt.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS dt.accessKey: setAttribute() to undefined followed by IDL get 
PASS dt.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS dt.accessKey: setAttribute() to 7 followed by IDL get 
PASS dt.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS dt.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS dt.accessKey: setAttribute() to true followed by getAttribute() 
PASS dt.accessKey: setAttribute() to true followed by IDL get 
PASS dt.accessKey: setAttribute() to false followed by getAttribute() 
PASS dt.accessKey: setAttribute() to false followed by IDL get 
PASS dt.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dt.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS dt.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS dt.accessKey: setAttribute() to NaN followed by IDL get 
PASS dt.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS dt.accessKey: setAttribute() to Infinity followed by IDL get 
PASS dt.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS dt.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS dt.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS dt.accessKey: setAttribute() to "\0" followed by IDL get 
PASS dt.accessKey: setAttribute() to null followed by getAttribute() 
PASS dt.accessKey: setAttribute() to null followed by IDL get 
PASS dt.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dt.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS dt.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dt.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dt.accessKey: IDL set to "" should not throw 
PASS dt.accessKey: IDL set to "" followed by getAttribute() 
PASS dt.accessKey: IDL set to "" followed by IDL get 
PASS dt.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dt.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dt.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dt.accessKey: IDL set to undefined should not throw 
PASS dt.accessKey: IDL set to undefined followed by getAttribute() 
PASS dt.accessKey: IDL set to undefined followed by IDL get 
PASS dt.accessKey: IDL set to 7 should not throw 
PASS dt.accessKey: IDL set to 7 followed by getAttribute() 
PASS dt.accessKey: IDL set to 7 followed by IDL get 
PASS dt.accessKey: IDL set to 1.5 should not throw 
PASS dt.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS dt.accessKey: IDL set to 1.5 followed by IDL get 
PASS dt.accessKey: IDL set to true should not throw 
PASS dt.accessKey: IDL set to true followed by getAttribute() 
PASS dt.accessKey: IDL set to true followed by IDL get 
PASS dt.accessKey: IDL set to false should not throw 
PASS dt.accessKey: IDL set to false followed by getAttribute() 
PASS dt.accessKey: IDL set to false followed by IDL get 
PASS dt.accessKey: IDL set to object "[object Object]" should not throw 
PASS dt.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS dt.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS dt.accessKey: IDL set to NaN should not throw 
PASS dt.accessKey: IDL set to NaN followed by getAttribute() 
PASS dt.accessKey: IDL set to NaN followed by IDL get 
PASS dt.accessKey: IDL set to Infinity should not throw 
PASS dt.accessKey: IDL set to Infinity followed by getAttribute() 
PASS dt.accessKey: IDL set to Infinity followed by IDL get 
PASS dt.accessKey: IDL set to -Infinity should not throw 
PASS dt.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS dt.accessKey: IDL set to -Infinity followed by IDL get 
PASS dt.accessKey: IDL set to "\0" should not throw 
PASS dt.accessKey: IDL set to "\0" followed by getAttribute() 
PASS dt.accessKey: IDL set to "\0" followed by IDL get 
PASS dt.accessKey: IDL set to null should not throw 
PASS dt.accessKey: IDL set to null followed by getAttribute() 
PASS dt.accessKey: IDL set to null followed by IDL get 
PASS dt.accessKey: IDL set to object "test-toString" should not throw 
PASS dt.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS dt.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS dt.accessKey: IDL set to object "test-valueOf" should not throw 
PASS dt.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dt.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS dt.tabIndex: typeof IDL attribute 
PASS dt.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to -36 followed by IDL get 
PASS dt.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to -1 followed by IDL get 
PASS dt.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to 0 followed by IDL get 
PASS dt.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to 1 followed by IDL get 
PASS dt.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS dt.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS dt.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS dt.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS dt.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to "0" followed by IDL get 
PASS dt.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to "1" followed by IDL get 
PASS dt.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS dt.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS dt.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS dt.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS dt.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS dt.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS dt.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS dt.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS dt.tabIndex: IDL set to -36 should not throw 
PASS dt.tabIndex: IDL set to -36 followed by getAttribute() 
PASS dt.tabIndex: IDL set to -36 followed by IDL get 
PASS dt.tabIndex: IDL set to -1 should not throw 
PASS dt.tabIndex: IDL set to -1 followed by getAttribute() 
PASS dt.tabIndex: IDL set to -1 followed by IDL get 
PASS dt.tabIndex: IDL set to 0 should not throw 
PASS dt.tabIndex: IDL set to 0 followed by getAttribute() 
PASS dt.tabIndex: IDL set to 0 followed by IDL get 
PASS dt.tabIndex: IDL set to 1 should not throw 
PASS dt.tabIndex: IDL set to 1 followed by getAttribute() 
PASS dt.tabIndex: IDL set to 1 followed by IDL get 
PASS dt.tabIndex: IDL set to 2147483647 should not throw 
PASS dt.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS dt.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS dt.tabIndex: IDL set to -2147483648 should not throw 
PASS dt.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS dt.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL dt.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL dt.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS dt.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to null followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to true followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to false followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL dt.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dt.itemScope: IDL set to "" should not throw 
FAIL dt.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL dt.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS dt.itemScope: IDL set to " foo " should not throw 
PASS dt.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL dt.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS dt.itemScope: IDL set to undefined should not throw 
FAIL dt.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL dt.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS dt.itemScope: IDL set to null should not throw 
FAIL dt.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL dt.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS dt.itemScope: IDL set to 7 should not throw 
PASS dt.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL dt.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS dt.itemScope: IDL set to 1.5 should not throw 
PASS dt.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL dt.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS dt.itemScope: IDL set to true should not throw 
PASS dt.itemScope: IDL set to true followed by hasAttribute() 
PASS dt.itemScope: IDL set to true followed by IDL get 
PASS dt.itemScope: IDL set to false should not throw 
FAIL dt.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS dt.itemScope: IDL set to false followed by IDL get 
PASS dt.itemScope: IDL set to object "[object Object]" should not throw 
PASS dt.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL dt.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS dt.itemScope: IDL set to NaN should not throw 
FAIL dt.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL dt.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS dt.itemScope: IDL set to Infinity should not throw 
PASS dt.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL dt.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS dt.itemScope: IDL set to -Infinity should not throw 
PASS dt.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL dt.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS dt.itemScope: IDL set to "\0" should not throw 
PASS dt.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL dt.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS dt.itemScope: IDL set to object "test-toString" should not throw 
PASS dt.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL dt.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS dt.itemScope: IDL set to object "test-valueOf" should not throw 
PASS dt.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL dt.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL dt.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL dt.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS dt.itemId: setAttribute() to "" followed by getAttribute() 
FAIL dt.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS dt.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL dt.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS dt.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL dt.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS dt.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL dt.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS dt.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL dt.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS dt.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL dt.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS dt.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL dt.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS dt.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL dt.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS dt.itemId: setAttribute() to true followed by getAttribute() 
FAIL dt.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS dt.itemId: setAttribute() to false followed by getAttribute() 
FAIL dt.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS dt.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL dt.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS dt.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL dt.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS dt.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL dt.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS dt.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL dt.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS dt.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL dt.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS dt.itemId: setAttribute() to null followed by getAttribute() 
FAIL dt.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS dt.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL dt.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS dt.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL dt.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS dt.itemId: IDL set to "" should not throw 
FAIL dt.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL dt.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS dt.itemId: IDL set to " foo " should not throw 
FAIL dt.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL dt.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS dt.itemId: IDL set to "http://site.example/" should not throw 
FAIL dt.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS dt.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS dt.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL dt.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL dt.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS dt.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL dt.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL dt.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS dt.itemId: IDL set to undefined should not throw 
FAIL dt.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL dt.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS dt.itemId: IDL set to 7 should not throw 
FAIL dt.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL dt.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS dt.itemId: IDL set to 1.5 should not throw 
FAIL dt.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL dt.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS dt.itemId: IDL set to true should not throw 
FAIL dt.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL dt.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS dt.itemId: IDL set to false should not throw 
FAIL dt.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL dt.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS dt.itemId: IDL set to object "[object Object]" should not throw 
FAIL dt.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL dt.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS dt.itemId: IDL set to NaN should not throw 
FAIL dt.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL dt.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS dt.itemId: IDL set to Infinity should not throw 
FAIL dt.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL dt.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS dt.itemId: IDL set to -Infinity should not throw 
FAIL dt.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL dt.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS dt.itemId: IDL set to "\0" should not throw 
FAIL dt.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL dt.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS dt.itemId: IDL set to null should not throw 
FAIL dt.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL dt.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS dt.itemId: IDL set to object "test-toString" should not throw 
FAIL dt.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL dt.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS dt.itemId: IDL set to object "test-valueOf" should not throw 
PASS dt.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL dt.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS dd.title: typeof IDL attribute 
PASS dd.title: IDL get with DOM attribute unset 
PASS dd.title: setAttribute() to "" followed by getAttribute() 
PASS dd.title: setAttribute() to "" followed by IDL get 
PASS dd.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dd.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dd.title: setAttribute() to undefined followed by getAttribute() 
PASS dd.title: setAttribute() to undefined followed by IDL get 
PASS dd.title: setAttribute() to 7 followed by getAttribute() 
PASS dd.title: setAttribute() to 7 followed by IDL get 
PASS dd.title: setAttribute() to 1.5 followed by getAttribute() 
PASS dd.title: setAttribute() to 1.5 followed by IDL get 
PASS dd.title: setAttribute() to true followed by getAttribute() 
PASS dd.title: setAttribute() to true followed by IDL get 
PASS dd.title: setAttribute() to false followed by getAttribute() 
PASS dd.title: setAttribute() to false followed by IDL get 
PASS dd.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dd.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS dd.title: setAttribute() to NaN followed by getAttribute() 
PASS dd.title: setAttribute() to NaN followed by IDL get 
PASS dd.title: setAttribute() to Infinity followed by getAttribute() 
PASS dd.title: setAttribute() to Infinity followed by IDL get 
PASS dd.title: setAttribute() to -Infinity followed by getAttribute() 
PASS dd.title: setAttribute() to -Infinity followed by IDL get 
PASS dd.title: setAttribute() to "\0" followed by getAttribute() 
PASS dd.title: setAttribute() to "\0" followed by IDL get 
PASS dd.title: setAttribute() to null followed by getAttribute() 
PASS dd.title: setAttribute() to null followed by IDL get 
PASS dd.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dd.title: setAttribute() to object "test-toString" followed by IDL get 
PASS dd.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dd.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dd.title: IDL set to "" should not throw 
PASS dd.title: IDL set to "" followed by getAttribute() 
PASS dd.title: IDL set to "" followed by IDL get 
PASS dd.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dd.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dd.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dd.title: IDL set to undefined should not throw 
PASS dd.title: IDL set to undefined followed by getAttribute() 
PASS dd.title: IDL set to undefined followed by IDL get 
PASS dd.title: IDL set to 7 should not throw 
PASS dd.title: IDL set to 7 followed by getAttribute() 
PASS dd.title: IDL set to 7 followed by IDL get 
PASS dd.title: IDL set to 1.5 should not throw 
PASS dd.title: IDL set to 1.5 followed by getAttribute() 
PASS dd.title: IDL set to 1.5 followed by IDL get 
PASS dd.title: IDL set to true should not throw 
PASS dd.title: IDL set to true followed by getAttribute() 
PASS dd.title: IDL set to true followed by IDL get 
PASS dd.title: IDL set to false should not throw 
PASS dd.title: IDL set to false followed by getAttribute() 
PASS dd.title: IDL set to false followed by IDL get 
PASS dd.title: IDL set to object "[object Object]" should not throw 
PASS dd.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS dd.title: IDL set to object "[object Object]" followed by IDL get 
PASS dd.title: IDL set to NaN should not throw 
PASS dd.title: IDL set to NaN followed by getAttribute() 
PASS dd.title: IDL set to NaN followed by IDL get 
PASS dd.title: IDL set to Infinity should not throw 
PASS dd.title: IDL set to Infinity followed by getAttribute() 
PASS dd.title: IDL set to Infinity followed by IDL get 
PASS dd.title: IDL set to -Infinity should not throw 
PASS dd.title: IDL set to -Infinity followed by getAttribute() 
PASS dd.title: IDL set to -Infinity followed by IDL get 
PASS dd.title: IDL set to "\0" should not throw 
PASS dd.title: IDL set to "\0" followed by getAttribute() 
PASS dd.title: IDL set to "\0" followed by IDL get 
PASS dd.title: IDL set to null should not throw 
PASS dd.title: IDL set to null followed by getAttribute() 
PASS dd.title: IDL set to null followed by IDL get 
PASS dd.title: IDL set to object "test-toString" should not throw 
PASS dd.title: IDL set to object "test-toString" followed by getAttribute() 
PASS dd.title: IDL set to object "test-toString" followed by IDL get 
PASS dd.title: IDL set to object "test-valueOf" should not throw 
PASS dd.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dd.title: IDL set to object "test-valueOf" followed by IDL get 
PASS dd.lang: typeof IDL attribute 
PASS dd.lang: IDL get with DOM attribute unset 
PASS dd.lang: setAttribute() to "" followed by getAttribute() 
PASS dd.lang: setAttribute() to "" followed by IDL get 
PASS dd.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dd.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dd.lang: setAttribute() to undefined followed by getAttribute() 
PASS dd.lang: setAttribute() to undefined followed by IDL get 
PASS dd.lang: setAttribute() to 7 followed by getAttribute() 
PASS dd.lang: setAttribute() to 7 followed by IDL get 
PASS dd.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS dd.lang: setAttribute() to 1.5 followed by IDL get 
PASS dd.lang: setAttribute() to true followed by getAttribute() 
PASS dd.lang: setAttribute() to true followed by IDL get 
PASS dd.lang: setAttribute() to false followed by getAttribute() 
PASS dd.lang: setAttribute() to false followed by IDL get 
PASS dd.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dd.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS dd.lang: setAttribute() to NaN followed by getAttribute() 
PASS dd.lang: setAttribute() to NaN followed by IDL get 
PASS dd.lang: setAttribute() to Infinity followed by getAttribute() 
PASS dd.lang: setAttribute() to Infinity followed by IDL get 
PASS dd.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS dd.lang: setAttribute() to -Infinity followed by IDL get 
PASS dd.lang: setAttribute() to "\0" followed by getAttribute() 
PASS dd.lang: setAttribute() to "\0" followed by IDL get 
PASS dd.lang: setAttribute() to null followed by getAttribute() 
PASS dd.lang: setAttribute() to null followed by IDL get 
PASS dd.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dd.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS dd.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dd.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dd.lang: IDL set to "" should not throw 
PASS dd.lang: IDL set to "" followed by getAttribute() 
PASS dd.lang: IDL set to "" followed by IDL get 
PASS dd.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dd.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dd.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dd.lang: IDL set to undefined should not throw 
PASS dd.lang: IDL set to undefined followed by getAttribute() 
PASS dd.lang: IDL set to undefined followed by IDL get 
PASS dd.lang: IDL set to 7 should not throw 
PASS dd.lang: IDL set to 7 followed by getAttribute() 
PASS dd.lang: IDL set to 7 followed by IDL get 
PASS dd.lang: IDL set to 1.5 should not throw 
PASS dd.lang: IDL set to 1.5 followed by getAttribute() 
PASS dd.lang: IDL set to 1.5 followed by IDL get 
PASS dd.lang: IDL set to true should not throw 
PASS dd.lang: IDL set to true followed by getAttribute() 
PASS dd.lang: IDL set to true followed by IDL get 
PASS dd.lang: IDL set to false should not throw 
PASS dd.lang: IDL set to false followed by getAttribute() 
PASS dd.lang: IDL set to false followed by IDL get 
PASS dd.lang: IDL set to object "[object Object]" should not throw 
PASS dd.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS dd.lang: IDL set to object "[object Object]" followed by IDL get 
PASS dd.lang: IDL set to NaN should not throw 
PASS dd.lang: IDL set to NaN followed by getAttribute() 
PASS dd.lang: IDL set to NaN followed by IDL get 
PASS dd.lang: IDL set to Infinity should not throw 
PASS dd.lang: IDL set to Infinity followed by getAttribute() 
PASS dd.lang: IDL set to Infinity followed by IDL get 
PASS dd.lang: IDL set to -Infinity should not throw 
PASS dd.lang: IDL set to -Infinity followed by getAttribute() 
PASS dd.lang: IDL set to -Infinity followed by IDL get 
PASS dd.lang: IDL set to "\0" should not throw 
PASS dd.lang: IDL set to "\0" followed by getAttribute() 
PASS dd.lang: IDL set to "\0" followed by IDL get 
PASS dd.lang: IDL set to null should not throw 
PASS dd.lang: IDL set to null followed by getAttribute() 
PASS dd.lang: IDL set to null followed by IDL get 
PASS dd.lang: IDL set to object "test-toString" should not throw 
PASS dd.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS dd.lang: IDL set to object "test-toString" followed by IDL get 
PASS dd.lang: IDL set to object "test-valueOf" should not throw 
PASS dd.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dd.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS dd.dir: typeof IDL attribute 
PASS dd.dir: IDL get with DOM attribute unset 
PASS dd.dir: setAttribute() to "" followed by getAttribute() 
PASS dd.dir: setAttribute() to "" followed by IDL get 
PASS dd.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dd.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dd.dir: setAttribute() to undefined followed by getAttribute() 
PASS dd.dir: setAttribute() to undefined followed by IDL get 
PASS dd.dir: setAttribute() to 7 followed by getAttribute() 
PASS dd.dir: setAttribute() to 7 followed by IDL get 
PASS dd.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS dd.dir: setAttribute() to 1.5 followed by IDL get 
PASS dd.dir: setAttribute() to true followed by getAttribute() 
PASS dd.dir: setAttribute() to true followed by IDL get 
PASS dd.dir: setAttribute() to false followed by getAttribute() 
PASS dd.dir: setAttribute() to false followed by IDL get 
PASS dd.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dd.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS dd.dir: setAttribute() to NaN followed by getAttribute() 
PASS dd.dir: setAttribute() to NaN followed by IDL get 
PASS dd.dir: setAttribute() to Infinity followed by getAttribute() 
PASS dd.dir: setAttribute() to Infinity followed by IDL get 
PASS dd.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS dd.dir: setAttribute() to -Infinity followed by IDL get 
PASS dd.dir: setAttribute() to "\0" followed by getAttribute() 
PASS dd.dir: setAttribute() to "\0" followed by IDL get 
PASS dd.dir: setAttribute() to null followed by getAttribute() 
PASS dd.dir: setAttribute() to null followed by IDL get 
PASS dd.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dd.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS dd.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dd.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dd.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS dd.dir: setAttribute() to "ltr" followed by IDL get 
PASS dd.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS dd.dir: setAttribute() to "xltr" followed by IDL get 
PASS dd.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS dd.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS dd.dir: setAttribute() to "tr" followed by getAttribute() 
PASS dd.dir: setAttribute() to "tr" followed by IDL get 
PASS dd.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS dd.dir: setAttribute() to "LTR" followed by IDL get 
PASS dd.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS dd.dir: setAttribute() to "rtl" followed by IDL get 
PASS dd.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS dd.dir: setAttribute() to "xrtl" followed by IDL get 
PASS dd.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS dd.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS dd.dir: setAttribute() to "tl" followed by getAttribute() 
PASS dd.dir: setAttribute() to "tl" followed by IDL get 
PASS dd.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS dd.dir: setAttribute() to "RTL" followed by IDL get 
PASS dd.dir: setAttribute() to "auto" followed by getAttribute() 
PASS dd.dir: setAttribute() to "auto" followed by IDL get 
PASS dd.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS dd.dir: setAttribute() to "xauto" followed by IDL get 
PASS dd.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS dd.dir: setAttribute() to "auto\0" followed by IDL get 
PASS dd.dir: setAttribute() to "uto" followed by getAttribute() 
PASS dd.dir: setAttribute() to "uto" followed by IDL get 
PASS dd.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS dd.dir: setAttribute() to "AUTO" followed by IDL get 
PASS dd.dir: IDL set to "" should not throw 
PASS dd.dir: IDL set to "" followed by getAttribute() 
PASS dd.dir: IDL set to "" followed by IDL get 
PASS dd.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dd.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dd.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dd.dir: IDL set to undefined should not throw 
PASS dd.dir: IDL set to undefined followed by getAttribute() 
PASS dd.dir: IDL set to undefined followed by IDL get 
PASS dd.dir: IDL set to 7 should not throw 
PASS dd.dir: IDL set to 7 followed by getAttribute() 
PASS dd.dir: IDL set to 7 followed by IDL get 
PASS dd.dir: IDL set to 1.5 should not throw 
PASS dd.dir: IDL set to 1.5 followed by getAttribute() 
PASS dd.dir: IDL set to 1.5 followed by IDL get 
PASS dd.dir: IDL set to true should not throw 
PASS dd.dir: IDL set to true followed by getAttribute() 
PASS dd.dir: IDL set to true followed by IDL get 
PASS dd.dir: IDL set to false should not throw 
PASS dd.dir: IDL set to false followed by getAttribute() 
PASS dd.dir: IDL set to false followed by IDL get 
PASS dd.dir: IDL set to object "[object Object]" should not throw 
PASS dd.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS dd.dir: IDL set to object "[object Object]" followed by IDL get 
PASS dd.dir: IDL set to NaN should not throw 
PASS dd.dir: IDL set to NaN followed by getAttribute() 
PASS dd.dir: IDL set to NaN followed by IDL get 
PASS dd.dir: IDL set to Infinity should not throw 
PASS dd.dir: IDL set to Infinity followed by getAttribute() 
PASS dd.dir: IDL set to Infinity followed by IDL get 
PASS dd.dir: IDL set to -Infinity should not throw 
PASS dd.dir: IDL set to -Infinity followed by getAttribute() 
PASS dd.dir: IDL set to -Infinity followed by IDL get 
PASS dd.dir: IDL set to "\0" should not throw 
PASS dd.dir: IDL set to "\0" followed by getAttribute() 
PASS dd.dir: IDL set to "\0" followed by IDL get 
PASS dd.dir: IDL set to null should not throw 
PASS dd.dir: IDL set to null followed by IDL get 
PASS dd.dir: IDL set to object "test-toString" should not throw 
PASS dd.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS dd.dir: IDL set to object "test-toString" followed by IDL get 
PASS dd.dir: IDL set to object "test-valueOf" should not throw 
PASS dd.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dd.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS dd.dir: IDL set to "ltr" should not throw 
PASS dd.dir: IDL set to "ltr" followed by getAttribute() 
PASS dd.dir: IDL set to "ltr" followed by IDL get 
PASS dd.dir: IDL set to "xltr" should not throw 
PASS dd.dir: IDL set to "xltr" followed by getAttribute() 
PASS dd.dir: IDL set to "xltr" followed by IDL get 
PASS dd.dir: IDL set to "ltr\0" should not throw 
PASS dd.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS dd.dir: IDL set to "ltr\0" followed by IDL get 
PASS dd.dir: IDL set to "tr" should not throw 
PASS dd.dir: IDL set to "tr" followed by getAttribute() 
PASS dd.dir: IDL set to "tr" followed by IDL get 
PASS dd.dir: IDL set to "LTR" should not throw 
PASS dd.dir: IDL set to "LTR" followed by getAttribute() 
PASS dd.dir: IDL set to "LTR" followed by IDL get 
PASS dd.dir: IDL set to "rtl" should not throw 
PASS dd.dir: IDL set to "rtl" followed by getAttribute() 
PASS dd.dir: IDL set to "rtl" followed by IDL get 
PASS dd.dir: IDL set to "xrtl" should not throw 
PASS dd.dir: IDL set to "xrtl" followed by getAttribute() 
PASS dd.dir: IDL set to "xrtl" followed by IDL get 
PASS dd.dir: IDL set to "rtl\0" should not throw 
PASS dd.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS dd.dir: IDL set to "rtl\0" followed by IDL get 
PASS dd.dir: IDL set to "tl" should not throw 
PASS dd.dir: IDL set to "tl" followed by getAttribute() 
PASS dd.dir: IDL set to "tl" followed by IDL get 
PASS dd.dir: IDL set to "RTL" should not throw 
PASS dd.dir: IDL set to "RTL" followed by getAttribute() 
PASS dd.dir: IDL set to "RTL" followed by IDL get 
PASS dd.dir: IDL set to "auto" should not throw 
PASS dd.dir: IDL set to "auto" followed by getAttribute() 
PASS dd.dir: IDL set to "auto" followed by IDL get 
PASS dd.dir: IDL set to "xauto" should not throw 
PASS dd.dir: IDL set to "xauto" followed by getAttribute() 
PASS dd.dir: IDL set to "xauto" followed by IDL get 
PASS dd.dir: IDL set to "auto\0" should not throw 
PASS dd.dir: IDL set to "auto\0" followed by getAttribute() 
PASS dd.dir: IDL set to "auto\0" followed by IDL get 
PASS dd.dir: IDL set to "uto" should not throw 
PASS dd.dir: IDL set to "uto" followed by getAttribute() 
PASS dd.dir: IDL set to "uto" followed by IDL get 
PASS dd.dir: IDL set to "AUTO" should not throw 
PASS dd.dir: IDL set to "AUTO" followed by getAttribute() 
PASS dd.dir: IDL set to "AUTO" followed by IDL get 
PASS dd.className (<dd class>): typeof IDL attribute 
PASS dd.className (<dd class>): IDL get with DOM attribute unset 
PASS dd.className (<dd class>): setAttribute() to "" followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to "" followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to undefined followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to undefined followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to 7 followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to 7 followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to 1.5 followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to 1.5 followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to true followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to true followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to false followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to false followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to NaN followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to NaN followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to Infinity followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to Infinity followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to -Infinity followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to -Infinity followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to "\0" followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to "\0" followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to null followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to null followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to object "test-toString" followed by IDL get 
PASS dd.className (<dd class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dd.className (<dd class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS dd.className (<dd class>): IDL set to "" should not throw 
PASS dd.className (<dd class>): IDL set to "" followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to "" followed by IDL get 
PASS dd.className (<dd class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dd.className (<dd class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dd.className (<dd class>): IDL set to undefined should not throw 
PASS dd.className (<dd class>): IDL set to undefined followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to undefined followed by IDL get 
PASS dd.className (<dd class>): IDL set to 7 should not throw 
PASS dd.className (<dd class>): IDL set to 7 followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to 7 followed by IDL get 
PASS dd.className (<dd class>): IDL set to 1.5 should not throw 
PASS dd.className (<dd class>): IDL set to 1.5 followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to 1.5 followed by IDL get 
PASS dd.className (<dd class>): IDL set to true should not throw 
PASS dd.className (<dd class>): IDL set to true followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to true followed by IDL get 
PASS dd.className (<dd class>): IDL set to false should not throw 
PASS dd.className (<dd class>): IDL set to false followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to false followed by IDL get 
PASS dd.className (<dd class>): IDL set to object "[object Object]" should not throw 
PASS dd.className (<dd class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to object "[object Object]" followed by IDL get 
PASS dd.className (<dd class>): IDL set to NaN should not throw 
PASS dd.className (<dd class>): IDL set to NaN followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to NaN followed by IDL get 
PASS dd.className (<dd class>): IDL set to Infinity should not throw 
PASS dd.className (<dd class>): IDL set to Infinity followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to Infinity followed by IDL get 
PASS dd.className (<dd class>): IDL set to -Infinity should not throw 
PASS dd.className (<dd class>): IDL set to -Infinity followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to -Infinity followed by IDL get 
PASS dd.className (<dd class>): IDL set to "\0" should not throw 
PASS dd.className (<dd class>): IDL set to "\0" followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to "\0" followed by IDL get 
PASS dd.className (<dd class>): IDL set to null should not throw 
PASS dd.className (<dd class>): IDL set to null followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to null followed by IDL get 
PASS dd.className (<dd class>): IDL set to object "test-toString" should not throw 
PASS dd.className (<dd class>): IDL set to object "test-toString" followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to object "test-toString" followed by IDL get 
PASS dd.className (<dd class>): IDL set to object "test-valueOf" should not throw 
PASS dd.className (<dd class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS dd.className (<dd class>): IDL set to object "test-valueOf" followed by IDL get 
PASS dd.hidden: typeof IDL attribute 
PASS dd.hidden: IDL get with DOM attribute unset 
PASS dd.hidden: setAttribute() to "" followed by getAttribute() 
PASS dd.hidden: setAttribute() to "" followed by IDL get 
PASS dd.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS dd.hidden: setAttribute() to " foo " followed by IDL get 
PASS dd.hidden: setAttribute() to undefined followed by getAttribute() 
PASS dd.hidden: setAttribute() to undefined followed by IDL get 
PASS dd.hidden: setAttribute() to null followed by getAttribute() 
PASS dd.hidden: setAttribute() to null followed by IDL get 
PASS dd.hidden: setAttribute() to 7 followed by getAttribute() 
PASS dd.hidden: setAttribute() to 7 followed by IDL get 
PASS dd.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS dd.hidden: setAttribute() to 1.5 followed by IDL get 
PASS dd.hidden: setAttribute() to true followed by getAttribute() 
PASS dd.hidden: setAttribute() to true followed by IDL get 
PASS dd.hidden: setAttribute() to false followed by getAttribute() 
PASS dd.hidden: setAttribute() to false followed by IDL get 
PASS dd.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dd.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS dd.hidden: setAttribute() to NaN followed by getAttribute() 
PASS dd.hidden: setAttribute() to NaN followed by IDL get 
PASS dd.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS dd.hidden: setAttribute() to Infinity followed by IDL get 
PASS dd.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS dd.hidden: setAttribute() to -Infinity followed by IDL get 
PASS dd.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS dd.hidden: setAttribute() to "\0" followed by IDL get 
PASS dd.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dd.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS dd.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dd.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dd.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS dd.hidden: setAttribute() to "hidden" followed by IDL get 
PASS dd.hidden: IDL set to "" should not throw 
PASS dd.hidden: IDL set to "" followed by hasAttribute() 
PASS dd.hidden: IDL set to "" followed by IDL get 
PASS dd.hidden: IDL set to " foo " should not throw 
PASS dd.hidden: IDL set to " foo " followed by hasAttribute() 
PASS dd.hidden: IDL set to " foo " followed by IDL get 
PASS dd.hidden: IDL set to undefined should not throw 
PASS dd.hidden: IDL set to undefined followed by hasAttribute() 
PASS dd.hidden: IDL set to undefined followed by IDL get 
PASS dd.hidden: IDL set to null should not throw 
PASS dd.hidden: IDL set to null followed by hasAttribute() 
PASS dd.hidden: IDL set to null followed by IDL get 
PASS dd.hidden: IDL set to 7 should not throw 
PASS dd.hidden: IDL set to 7 followed by hasAttribute() 
PASS dd.hidden: IDL set to 7 followed by IDL get 
PASS dd.hidden: IDL set to 1.5 should not throw 
PASS dd.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS dd.hidden: IDL set to 1.5 followed by IDL get 
PASS dd.hidden: IDL set to true should not throw 
PASS dd.hidden: IDL set to true followed by hasAttribute() 
PASS dd.hidden: IDL set to true followed by IDL get 
PASS dd.hidden: IDL set to false should not throw 
PASS dd.hidden: IDL set to false followed by hasAttribute() 
PASS dd.hidden: IDL set to false followed by IDL get 
PASS dd.hidden: IDL set to object "[object Object]" should not throw 
PASS dd.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS dd.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS dd.hidden: IDL set to NaN should not throw 
PASS dd.hidden: IDL set to NaN followed by hasAttribute() 
PASS dd.hidden: IDL set to NaN followed by IDL get 
PASS dd.hidden: IDL set to Infinity should not throw 
PASS dd.hidden: IDL set to Infinity followed by hasAttribute() 
PASS dd.hidden: IDL set to Infinity followed by IDL get 
PASS dd.hidden: IDL set to -Infinity should not throw 
PASS dd.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS dd.hidden: IDL set to -Infinity followed by IDL get 
PASS dd.hidden: IDL set to "\0" should not throw 
PASS dd.hidden: IDL set to "\0" followed by hasAttribute() 
PASS dd.hidden: IDL set to "\0" followed by IDL get 
PASS dd.hidden: IDL set to object "test-toString" should not throw 
PASS dd.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS dd.hidden: IDL set to object "test-toString" followed by IDL get 
PASS dd.hidden: IDL set to object "test-valueOf" should not throw 
PASS dd.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS dd.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS dd.accessKey: typeof IDL attribute 
PASS dd.accessKey: IDL get with DOM attribute unset 
PASS dd.accessKey: setAttribute() to "" followed by getAttribute() 
PASS dd.accessKey: setAttribute() to "" followed by IDL get 
PASS dd.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dd.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dd.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS dd.accessKey: setAttribute() to undefined followed by IDL get 
PASS dd.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS dd.accessKey: setAttribute() to 7 followed by IDL get 
PASS dd.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS dd.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS dd.accessKey: setAttribute() to true followed by getAttribute() 
PASS dd.accessKey: setAttribute() to true followed by IDL get 
PASS dd.accessKey: setAttribute() to false followed by getAttribute() 
PASS dd.accessKey: setAttribute() to false followed by IDL get 
PASS dd.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dd.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS dd.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS dd.accessKey: setAttribute() to NaN followed by IDL get 
PASS dd.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS dd.accessKey: setAttribute() to Infinity followed by IDL get 
PASS dd.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS dd.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS dd.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS dd.accessKey: setAttribute() to "\0" followed by IDL get 
PASS dd.accessKey: setAttribute() to null followed by getAttribute() 
PASS dd.accessKey: setAttribute() to null followed by IDL get 
PASS dd.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dd.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS dd.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dd.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dd.accessKey: IDL set to "" should not throw 
PASS dd.accessKey: IDL set to "" followed by getAttribute() 
PASS dd.accessKey: IDL set to "" followed by IDL get 
PASS dd.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dd.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dd.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dd.accessKey: IDL set to undefined should not throw 
PASS dd.accessKey: IDL set to undefined followed by getAttribute() 
PASS dd.accessKey: IDL set to undefined followed by IDL get 
PASS dd.accessKey: IDL set to 7 should not throw 
PASS dd.accessKey: IDL set to 7 followed by getAttribute() 
PASS dd.accessKey: IDL set to 7 followed by IDL get 
PASS dd.accessKey: IDL set to 1.5 should not throw 
PASS dd.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS dd.accessKey: IDL set to 1.5 followed by IDL get 
PASS dd.accessKey: IDL set to true should not throw 
PASS dd.accessKey: IDL set to true followed by getAttribute() 
PASS dd.accessKey: IDL set to true followed by IDL get 
PASS dd.accessKey: IDL set to false should not throw 
PASS dd.accessKey: IDL set to false followed by getAttribute() 
PASS dd.accessKey: IDL set to false followed by IDL get 
PASS dd.accessKey: IDL set to object "[object Object]" should not throw 
PASS dd.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS dd.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS dd.accessKey: IDL set to NaN should not throw 
PASS dd.accessKey: IDL set to NaN followed by getAttribute() 
PASS dd.accessKey: IDL set to NaN followed by IDL get 
PASS dd.accessKey: IDL set to Infinity should not throw 
PASS dd.accessKey: IDL set to Infinity followed by getAttribute() 
PASS dd.accessKey: IDL set to Infinity followed by IDL get 
PASS dd.accessKey: IDL set to -Infinity should not throw 
PASS dd.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS dd.accessKey: IDL set to -Infinity followed by IDL get 
PASS dd.accessKey: IDL set to "\0" should not throw 
PASS dd.accessKey: IDL set to "\0" followed by getAttribute() 
PASS dd.accessKey: IDL set to "\0" followed by IDL get 
PASS dd.accessKey: IDL set to null should not throw 
PASS dd.accessKey: IDL set to null followed by getAttribute() 
PASS dd.accessKey: IDL set to null followed by IDL get 
PASS dd.accessKey: IDL set to object "test-toString" should not throw 
PASS dd.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS dd.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS dd.accessKey: IDL set to object "test-valueOf" should not throw 
PASS dd.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dd.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS dd.tabIndex: typeof IDL attribute 
PASS dd.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to -36 followed by IDL get 
PASS dd.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to -1 followed by IDL get 
PASS dd.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to 0 followed by IDL get 
PASS dd.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to 1 followed by IDL get 
PASS dd.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS dd.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS dd.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS dd.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS dd.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to "0" followed by IDL get 
PASS dd.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to "1" followed by IDL get 
PASS dd.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS dd.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS dd.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS dd.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS dd.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS dd.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS dd.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS dd.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS dd.tabIndex: IDL set to -36 should not throw 
PASS dd.tabIndex: IDL set to -36 followed by getAttribute() 
PASS dd.tabIndex: IDL set to -36 followed by IDL get 
PASS dd.tabIndex: IDL set to -1 should not throw 
PASS dd.tabIndex: IDL set to -1 followed by getAttribute() 
PASS dd.tabIndex: IDL set to -1 followed by IDL get 
PASS dd.tabIndex: IDL set to 0 should not throw 
PASS dd.tabIndex: IDL set to 0 followed by getAttribute() 
PASS dd.tabIndex: IDL set to 0 followed by IDL get 
PASS dd.tabIndex: IDL set to 1 should not throw 
PASS dd.tabIndex: IDL set to 1 followed by getAttribute() 
PASS dd.tabIndex: IDL set to 1 followed by IDL get 
PASS dd.tabIndex: IDL set to 2147483647 should not throw 
PASS dd.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS dd.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS dd.tabIndex: IDL set to -2147483648 should not throw 
PASS dd.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS dd.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL dd.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL dd.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS dd.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to null followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to true followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to false followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL dd.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS dd.itemScope: IDL set to "" should not throw 
FAIL dd.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL dd.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS dd.itemScope: IDL set to " foo " should not throw 
PASS dd.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL dd.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS dd.itemScope: IDL set to undefined should not throw 
FAIL dd.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL dd.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS dd.itemScope: IDL set to null should not throw 
FAIL dd.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL dd.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS dd.itemScope: IDL set to 7 should not throw 
PASS dd.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL dd.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS dd.itemScope: IDL set to 1.5 should not throw 
PASS dd.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL dd.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS dd.itemScope: IDL set to true should not throw 
PASS dd.itemScope: IDL set to true followed by hasAttribute() 
PASS dd.itemScope: IDL set to true followed by IDL get 
PASS dd.itemScope: IDL set to false should not throw 
FAIL dd.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS dd.itemScope: IDL set to false followed by IDL get 
PASS dd.itemScope: IDL set to object "[object Object]" should not throw 
PASS dd.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL dd.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS dd.itemScope: IDL set to NaN should not throw 
FAIL dd.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL dd.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS dd.itemScope: IDL set to Infinity should not throw 
PASS dd.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL dd.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS dd.itemScope: IDL set to -Infinity should not throw 
PASS dd.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL dd.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS dd.itemScope: IDL set to "\0" should not throw 
PASS dd.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL dd.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS dd.itemScope: IDL set to object "test-toString" should not throw 
PASS dd.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL dd.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS dd.itemScope: IDL set to object "test-valueOf" should not throw 
PASS dd.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL dd.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL dd.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL dd.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS dd.itemId: setAttribute() to "" followed by getAttribute() 
FAIL dd.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS dd.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL dd.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS dd.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL dd.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS dd.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL dd.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS dd.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL dd.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS dd.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL dd.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS dd.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL dd.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS dd.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL dd.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS dd.itemId: setAttribute() to true followed by getAttribute() 
FAIL dd.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS dd.itemId: setAttribute() to false followed by getAttribute() 
FAIL dd.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS dd.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL dd.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS dd.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL dd.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS dd.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL dd.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS dd.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL dd.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS dd.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL dd.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS dd.itemId: setAttribute() to null followed by getAttribute() 
FAIL dd.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS dd.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL dd.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS dd.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL dd.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS dd.itemId: IDL set to "" should not throw 
FAIL dd.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL dd.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS dd.itemId: IDL set to " foo " should not throw 
FAIL dd.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL dd.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS dd.itemId: IDL set to "http://site.example/" should not throw 
FAIL dd.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS dd.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS dd.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL dd.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL dd.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS dd.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL dd.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL dd.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS dd.itemId: IDL set to undefined should not throw 
FAIL dd.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL dd.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS dd.itemId: IDL set to 7 should not throw 
FAIL dd.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL dd.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS dd.itemId: IDL set to 1.5 should not throw 
FAIL dd.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL dd.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS dd.itemId: IDL set to true should not throw 
FAIL dd.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL dd.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS dd.itemId: IDL set to false should not throw 
FAIL dd.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL dd.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS dd.itemId: IDL set to object "[object Object]" should not throw 
FAIL dd.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL dd.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS dd.itemId: IDL set to NaN should not throw 
FAIL dd.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL dd.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS dd.itemId: IDL set to Infinity should not throw 
FAIL dd.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL dd.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS dd.itemId: IDL set to -Infinity should not throw 
FAIL dd.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL dd.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS dd.itemId: IDL set to "\0" should not throw 
FAIL dd.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL dd.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS dd.itemId: IDL set to null should not throw 
FAIL dd.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL dd.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS dd.itemId: IDL set to object "test-toString" should not throw 
FAIL dd.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL dd.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS dd.itemId: IDL set to object "test-valueOf" should not throw 
PASS dd.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL dd.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS figure.title: typeof IDL attribute 
PASS figure.title: IDL get with DOM attribute unset 
PASS figure.title: setAttribute() to "" followed by getAttribute() 
PASS figure.title: setAttribute() to "" followed by IDL get 
PASS figure.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figure.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figure.title: setAttribute() to undefined followed by getAttribute() 
PASS figure.title: setAttribute() to undefined followed by IDL get 
PASS figure.title: setAttribute() to 7 followed by getAttribute() 
PASS figure.title: setAttribute() to 7 followed by IDL get 
PASS figure.title: setAttribute() to 1.5 followed by getAttribute() 
PASS figure.title: setAttribute() to 1.5 followed by IDL get 
PASS figure.title: setAttribute() to true followed by getAttribute() 
PASS figure.title: setAttribute() to true followed by IDL get 
PASS figure.title: setAttribute() to false followed by getAttribute() 
PASS figure.title: setAttribute() to false followed by IDL get 
PASS figure.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS figure.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS figure.title: setAttribute() to NaN followed by getAttribute() 
PASS figure.title: setAttribute() to NaN followed by IDL get 
PASS figure.title: setAttribute() to Infinity followed by getAttribute() 
PASS figure.title: setAttribute() to Infinity followed by IDL get 
PASS figure.title: setAttribute() to -Infinity followed by getAttribute() 
PASS figure.title: setAttribute() to -Infinity followed by IDL get 
PASS figure.title: setAttribute() to "\0" followed by getAttribute() 
PASS figure.title: setAttribute() to "\0" followed by IDL get 
PASS figure.title: setAttribute() to null followed by getAttribute() 
PASS figure.title: setAttribute() to null followed by IDL get 
PASS figure.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS figure.title: setAttribute() to object "test-toString" followed by IDL get 
PASS figure.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS figure.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS figure.title: IDL set to "" should not throw 
PASS figure.title: IDL set to "" followed by getAttribute() 
PASS figure.title: IDL set to "" followed by IDL get 
PASS figure.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS figure.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figure.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figure.title: IDL set to undefined should not throw 
PASS figure.title: IDL set to undefined followed by getAttribute() 
PASS figure.title: IDL set to undefined followed by IDL get 
PASS figure.title: IDL set to 7 should not throw 
PASS figure.title: IDL set to 7 followed by getAttribute() 
PASS figure.title: IDL set to 7 followed by IDL get 
PASS figure.title: IDL set to 1.5 should not throw 
PASS figure.title: IDL set to 1.5 followed by getAttribute() 
PASS figure.title: IDL set to 1.5 followed by IDL get 
PASS figure.title: IDL set to true should not throw 
PASS figure.title: IDL set to true followed by getAttribute() 
PASS figure.title: IDL set to true followed by IDL get 
PASS figure.title: IDL set to false should not throw 
PASS figure.title: IDL set to false followed by getAttribute() 
PASS figure.title: IDL set to false followed by IDL get 
PASS figure.title: IDL set to object "[object Object]" should not throw 
PASS figure.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS figure.title: IDL set to object "[object Object]" followed by IDL get 
PASS figure.title: IDL set to NaN should not throw 
PASS figure.title: IDL set to NaN followed by getAttribute() 
PASS figure.title: IDL set to NaN followed by IDL get 
PASS figure.title: IDL set to Infinity should not throw 
PASS figure.title: IDL set to Infinity followed by getAttribute() 
PASS figure.title: IDL set to Infinity followed by IDL get 
PASS figure.title: IDL set to -Infinity should not throw 
PASS figure.title: IDL set to -Infinity followed by getAttribute() 
PASS figure.title: IDL set to -Infinity followed by IDL get 
PASS figure.title: IDL set to "\0" should not throw 
PASS figure.title: IDL set to "\0" followed by getAttribute() 
PASS figure.title: IDL set to "\0" followed by IDL get 
PASS figure.title: IDL set to null should not throw 
PASS figure.title: IDL set to null followed by getAttribute() 
PASS figure.title: IDL set to null followed by IDL get 
PASS figure.title: IDL set to object "test-toString" should not throw 
PASS figure.title: IDL set to object "test-toString" followed by getAttribute() 
PASS figure.title: IDL set to object "test-toString" followed by IDL get 
PASS figure.title: IDL set to object "test-valueOf" should not throw 
PASS figure.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS figure.title: IDL set to object "test-valueOf" followed by IDL get 
PASS figure.lang: typeof IDL attribute 
PASS figure.lang: IDL get with DOM attribute unset 
PASS figure.lang: setAttribute() to "" followed by getAttribute() 
PASS figure.lang: setAttribute() to "" followed by IDL get 
PASS figure.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figure.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figure.lang: setAttribute() to undefined followed by getAttribute() 
PASS figure.lang: setAttribute() to undefined followed by IDL get 
PASS figure.lang: setAttribute() to 7 followed by getAttribute() 
PASS figure.lang: setAttribute() to 7 followed by IDL get 
PASS figure.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS figure.lang: setAttribute() to 1.5 followed by IDL get 
PASS figure.lang: setAttribute() to true followed by getAttribute() 
PASS figure.lang: setAttribute() to true followed by IDL get 
PASS figure.lang: setAttribute() to false followed by getAttribute() 
PASS figure.lang: setAttribute() to false followed by IDL get 
PASS figure.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS figure.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS figure.lang: setAttribute() to NaN followed by getAttribute() 
PASS figure.lang: setAttribute() to NaN followed by IDL get 
PASS figure.lang: setAttribute() to Infinity followed by getAttribute() 
PASS figure.lang: setAttribute() to Infinity followed by IDL get 
PASS figure.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS figure.lang: setAttribute() to -Infinity followed by IDL get 
PASS figure.lang: setAttribute() to "\0" followed by getAttribute() 
PASS figure.lang: setAttribute() to "\0" followed by IDL get 
PASS figure.lang: setAttribute() to null followed by getAttribute() 
PASS figure.lang: setAttribute() to null followed by IDL get 
PASS figure.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS figure.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS figure.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS figure.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS figure.lang: IDL set to "" should not throw 
PASS figure.lang: IDL set to "" followed by getAttribute() 
PASS figure.lang: IDL set to "" followed by IDL get 
PASS figure.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS figure.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figure.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figure.lang: IDL set to undefined should not throw 
PASS figure.lang: IDL set to undefined followed by getAttribute() 
PASS figure.lang: IDL set to undefined followed by IDL get 
PASS figure.lang: IDL set to 7 should not throw 
PASS figure.lang: IDL set to 7 followed by getAttribute() 
PASS figure.lang: IDL set to 7 followed by IDL get 
PASS figure.lang: IDL set to 1.5 should not throw 
PASS figure.lang: IDL set to 1.5 followed by getAttribute() 
PASS figure.lang: IDL set to 1.5 followed by IDL get 
PASS figure.lang: IDL set to true should not throw 
PASS figure.lang: IDL set to true followed by getAttribute() 
PASS figure.lang: IDL set to true followed by IDL get 
PASS figure.lang: IDL set to false should not throw 
PASS figure.lang: IDL set to false followed by getAttribute() 
PASS figure.lang: IDL set to false followed by IDL get 
PASS figure.lang: IDL set to object "[object Object]" should not throw 
PASS figure.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS figure.lang: IDL set to object "[object Object]" followed by IDL get 
PASS figure.lang: IDL set to NaN should not throw 
PASS figure.lang: IDL set to NaN followed by getAttribute() 
PASS figure.lang: IDL set to NaN followed by IDL get 
PASS figure.lang: IDL set to Infinity should not throw 
PASS figure.lang: IDL set to Infinity followed by getAttribute() 
PASS figure.lang: IDL set to Infinity followed by IDL get 
PASS figure.lang: IDL set to -Infinity should not throw 
PASS figure.lang: IDL set to -Infinity followed by getAttribute() 
PASS figure.lang: IDL set to -Infinity followed by IDL get 
PASS figure.lang: IDL set to "\0" should not throw 
PASS figure.lang: IDL set to "\0" followed by getAttribute() 
PASS figure.lang: IDL set to "\0" followed by IDL get 
PASS figure.lang: IDL set to null should not throw 
PASS figure.lang: IDL set to null followed by getAttribute() 
PASS figure.lang: IDL set to null followed by IDL get 
PASS figure.lang: IDL set to object "test-toString" should not throw 
PASS figure.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS figure.lang: IDL set to object "test-toString" followed by IDL get 
PASS figure.lang: IDL set to object "test-valueOf" should not throw 
PASS figure.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS figure.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS figure.dir: typeof IDL attribute 
PASS figure.dir: IDL get with DOM attribute unset 
PASS figure.dir: setAttribute() to "" followed by getAttribute() 
PASS figure.dir: setAttribute() to "" followed by IDL get 
PASS figure.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figure.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figure.dir: setAttribute() to undefined followed by getAttribute() 
PASS figure.dir: setAttribute() to undefined followed by IDL get 
PASS figure.dir: setAttribute() to 7 followed by getAttribute() 
PASS figure.dir: setAttribute() to 7 followed by IDL get 
PASS figure.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS figure.dir: setAttribute() to 1.5 followed by IDL get 
PASS figure.dir: setAttribute() to true followed by getAttribute() 
PASS figure.dir: setAttribute() to true followed by IDL get 
PASS figure.dir: setAttribute() to false followed by getAttribute() 
PASS figure.dir: setAttribute() to false followed by IDL get 
PASS figure.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS figure.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS figure.dir: setAttribute() to NaN followed by getAttribute() 
PASS figure.dir: setAttribute() to NaN followed by IDL get 
PASS figure.dir: setAttribute() to Infinity followed by getAttribute() 
PASS figure.dir: setAttribute() to Infinity followed by IDL get 
PASS figure.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS figure.dir: setAttribute() to -Infinity followed by IDL get 
PASS figure.dir: setAttribute() to "\0" followed by getAttribute() 
PASS figure.dir: setAttribute() to "\0" followed by IDL get 
PASS figure.dir: setAttribute() to null followed by getAttribute() 
PASS figure.dir: setAttribute() to null followed by IDL get 
PASS figure.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS figure.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS figure.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS figure.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS figure.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS figure.dir: setAttribute() to "ltr" followed by IDL get 
PASS figure.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS figure.dir: setAttribute() to "xltr" followed by IDL get 
PASS figure.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS figure.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS figure.dir: setAttribute() to "tr" followed by getAttribute() 
PASS figure.dir: setAttribute() to "tr" followed by IDL get 
PASS figure.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS figure.dir: setAttribute() to "LTR" followed by IDL get 
PASS figure.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS figure.dir: setAttribute() to "rtl" followed by IDL get 
PASS figure.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS figure.dir: setAttribute() to "xrtl" followed by IDL get 
PASS figure.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS figure.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS figure.dir: setAttribute() to "tl" followed by getAttribute() 
PASS figure.dir: setAttribute() to "tl" followed by IDL get 
PASS figure.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS figure.dir: setAttribute() to "RTL" followed by IDL get 
PASS figure.dir: setAttribute() to "auto" followed by getAttribute() 
PASS figure.dir: setAttribute() to "auto" followed by IDL get 
PASS figure.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS figure.dir: setAttribute() to "xauto" followed by IDL get 
PASS figure.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS figure.dir: setAttribute() to "auto\0" followed by IDL get 
PASS figure.dir: setAttribute() to "uto" followed by getAttribute() 
PASS figure.dir: setAttribute() to "uto" followed by IDL get 
PASS figure.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS figure.dir: setAttribute() to "AUTO" followed by IDL get 
PASS figure.dir: IDL set to "" should not throw 
PASS figure.dir: IDL set to "" followed by getAttribute() 
PASS figure.dir: IDL set to "" followed by IDL get 
PASS figure.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS figure.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figure.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figure.dir: IDL set to undefined should not throw 
PASS figure.dir: IDL set to undefined followed by getAttribute() 
PASS figure.dir: IDL set to undefined followed by IDL get 
PASS figure.dir: IDL set to 7 should not throw 
PASS figure.dir: IDL set to 7 followed by getAttribute() 
PASS figure.dir: IDL set to 7 followed by IDL get 
PASS figure.dir: IDL set to 1.5 should not throw 
PASS figure.dir: IDL set to 1.5 followed by getAttribute() 
PASS figure.dir: IDL set to 1.5 followed by IDL get 
PASS figure.dir: IDL set to true should not throw 
PASS figure.dir: IDL set to true followed by getAttribute() 
PASS figure.dir: IDL set to true followed by IDL get 
PASS figure.dir: IDL set to false should not throw 
PASS figure.dir: IDL set to false followed by getAttribute() 
PASS figure.dir: IDL set to false followed by IDL get 
PASS figure.dir: IDL set to object "[object Object]" should not throw 
PASS figure.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS figure.dir: IDL set to object "[object Object]" followed by IDL get 
PASS figure.dir: IDL set to NaN should not throw 
PASS figure.dir: IDL set to NaN followed by getAttribute() 
PASS figure.dir: IDL set to NaN followed by IDL get 
PASS figure.dir: IDL set to Infinity should not throw 
PASS figure.dir: IDL set to Infinity followed by getAttribute() 
PASS figure.dir: IDL set to Infinity followed by IDL get 
PASS figure.dir: IDL set to -Infinity should not throw 
PASS figure.dir: IDL set to -Infinity followed by getAttribute() 
PASS figure.dir: IDL set to -Infinity followed by IDL get 
PASS figure.dir: IDL set to "\0" should not throw 
PASS figure.dir: IDL set to "\0" followed by getAttribute() 
PASS figure.dir: IDL set to "\0" followed by IDL get 
PASS figure.dir: IDL set to null should not throw 
PASS figure.dir: IDL set to null followed by IDL get 
PASS figure.dir: IDL set to object "test-toString" should not throw 
PASS figure.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS figure.dir: IDL set to object "test-toString" followed by IDL get 
PASS figure.dir: IDL set to object "test-valueOf" should not throw 
PASS figure.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS figure.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS figure.dir: IDL set to "ltr" should not throw 
PASS figure.dir: IDL set to "ltr" followed by getAttribute() 
PASS figure.dir: IDL set to "ltr" followed by IDL get 
PASS figure.dir: IDL set to "xltr" should not throw 
PASS figure.dir: IDL set to "xltr" followed by getAttribute() 
PASS figure.dir: IDL set to "xltr" followed by IDL get 
PASS figure.dir: IDL set to "ltr\0" should not throw 
PASS figure.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS figure.dir: IDL set to "ltr\0" followed by IDL get 
PASS figure.dir: IDL set to "tr" should not throw 
PASS figure.dir: IDL set to "tr" followed by getAttribute() 
PASS figure.dir: IDL set to "tr" followed by IDL get 
PASS figure.dir: IDL set to "LTR" should not throw 
PASS figure.dir: IDL set to "LTR" followed by getAttribute() 
PASS figure.dir: IDL set to "LTR" followed by IDL get 
PASS figure.dir: IDL set to "rtl" should not throw 
PASS figure.dir: IDL set to "rtl" followed by getAttribute() 
PASS figure.dir: IDL set to "rtl" followed by IDL get 
PASS figure.dir: IDL set to "xrtl" should not throw 
PASS figure.dir: IDL set to "xrtl" followed by getAttribute() 
PASS figure.dir: IDL set to "xrtl" followed by IDL get 
PASS figure.dir: IDL set to "rtl\0" should not throw 
PASS figure.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS figure.dir: IDL set to "rtl\0" followed by IDL get 
PASS figure.dir: IDL set to "tl" should not throw 
PASS figure.dir: IDL set to "tl" followed by getAttribute() 
PASS figure.dir: IDL set to "tl" followed by IDL get 
PASS figure.dir: IDL set to "RTL" should not throw 
PASS figure.dir: IDL set to "RTL" followed by getAttribute() 
PASS figure.dir: IDL set to "RTL" followed by IDL get 
PASS figure.dir: IDL set to "auto" should not throw 
PASS figure.dir: IDL set to "auto" followed by getAttribute() 
PASS figure.dir: IDL set to "auto" followed by IDL get 
PASS figure.dir: IDL set to "xauto" should not throw 
PASS figure.dir: IDL set to "xauto" followed by getAttribute() 
PASS figure.dir: IDL set to "xauto" followed by IDL get 
PASS figure.dir: IDL set to "auto\0" should not throw 
PASS figure.dir: IDL set to "auto\0" followed by getAttribute() 
PASS figure.dir: IDL set to "auto\0" followed by IDL get 
PASS figure.dir: IDL set to "uto" should not throw 
PASS figure.dir: IDL set to "uto" followed by getAttribute() 
PASS figure.dir: IDL set to "uto" followed by IDL get 
PASS figure.dir: IDL set to "AUTO" should not throw 
PASS figure.dir: IDL set to "AUTO" followed by getAttribute() 
PASS figure.dir: IDL set to "AUTO" followed by IDL get 
PASS figure.className (<figure class>): typeof IDL attribute 
PASS figure.className (<figure class>): IDL get with DOM attribute unset 
PASS figure.className (<figure class>): setAttribute() to "" followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to "" followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to undefined followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to undefined followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to 7 followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to 7 followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to 1.5 followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to 1.5 followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to true followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to true followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to false followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to false followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to NaN followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to NaN followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to Infinity followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to Infinity followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to -Infinity followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to -Infinity followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to "\0" followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to "\0" followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to null followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to null followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to object "test-toString" followed by IDL get 
PASS figure.className (<figure class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS figure.className (<figure class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS figure.className (<figure class>): IDL set to "" should not throw 
PASS figure.className (<figure class>): IDL set to "" followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to "" followed by IDL get 
PASS figure.className (<figure class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS figure.className (<figure class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figure.className (<figure class>): IDL set to undefined should not throw 
PASS figure.className (<figure class>): IDL set to undefined followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to undefined followed by IDL get 
PASS figure.className (<figure class>): IDL set to 7 should not throw 
PASS figure.className (<figure class>): IDL set to 7 followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to 7 followed by IDL get 
PASS figure.className (<figure class>): IDL set to 1.5 should not throw 
PASS figure.className (<figure class>): IDL set to 1.5 followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to 1.5 followed by IDL get 
PASS figure.className (<figure class>): IDL set to true should not throw 
PASS figure.className (<figure class>): IDL set to true followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to true followed by IDL get 
PASS figure.className (<figure class>): IDL set to false should not throw 
PASS figure.className (<figure class>): IDL set to false followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to false followed by IDL get 
PASS figure.className (<figure class>): IDL set to object "[object Object]" should not throw 
PASS figure.className (<figure class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to object "[object Object]" followed by IDL get 
PASS figure.className (<figure class>): IDL set to NaN should not throw 
PASS figure.className (<figure class>): IDL set to NaN followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to NaN followed by IDL get 
PASS figure.className (<figure class>): IDL set to Infinity should not throw 
PASS figure.className (<figure class>): IDL set to Infinity followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to Infinity followed by IDL get 
PASS figure.className (<figure class>): IDL set to -Infinity should not throw 
PASS figure.className (<figure class>): IDL set to -Infinity followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to -Infinity followed by IDL get 
PASS figure.className (<figure class>): IDL set to "\0" should not throw 
PASS figure.className (<figure class>): IDL set to "\0" followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to "\0" followed by IDL get 
PASS figure.className (<figure class>): IDL set to null should not throw 
PASS figure.className (<figure class>): IDL set to null followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to null followed by IDL get 
PASS figure.className (<figure class>): IDL set to object "test-toString" should not throw 
PASS figure.className (<figure class>): IDL set to object "test-toString" followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to object "test-toString" followed by IDL get 
PASS figure.className (<figure class>): IDL set to object "test-valueOf" should not throw 
PASS figure.className (<figure class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS figure.className (<figure class>): IDL set to object "test-valueOf" followed by IDL get 
PASS figure.hidden: typeof IDL attribute 
PASS figure.hidden: IDL get with DOM attribute unset 
PASS figure.hidden: setAttribute() to "" followed by getAttribute() 
PASS figure.hidden: setAttribute() to "" followed by IDL get 
PASS figure.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS figure.hidden: setAttribute() to " foo " followed by IDL get 
PASS figure.hidden: setAttribute() to undefined followed by getAttribute() 
PASS figure.hidden: setAttribute() to undefined followed by IDL get 
PASS figure.hidden: setAttribute() to null followed by getAttribute() 
PASS figure.hidden: setAttribute() to null followed by IDL get 
PASS figure.hidden: setAttribute() to 7 followed by getAttribute() 
PASS figure.hidden: setAttribute() to 7 followed by IDL get 
PASS figure.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS figure.hidden: setAttribute() to 1.5 followed by IDL get 
PASS figure.hidden: setAttribute() to true followed by getAttribute() 
PASS figure.hidden: setAttribute() to true followed by IDL get 
PASS figure.hidden: setAttribute() to false followed by getAttribute() 
PASS figure.hidden: setAttribute() to false followed by IDL get 
PASS figure.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS figure.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS figure.hidden: setAttribute() to NaN followed by getAttribute() 
PASS figure.hidden: setAttribute() to NaN followed by IDL get 
PASS figure.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS figure.hidden: setAttribute() to Infinity followed by IDL get 
PASS figure.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS figure.hidden: setAttribute() to -Infinity followed by IDL get 
PASS figure.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS figure.hidden: setAttribute() to "\0" followed by IDL get 
PASS figure.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS figure.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS figure.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS figure.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS figure.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS figure.hidden: setAttribute() to "hidden" followed by IDL get 
PASS figure.hidden: IDL set to "" should not throw 
PASS figure.hidden: IDL set to "" followed by hasAttribute() 
PASS figure.hidden: IDL set to "" followed by IDL get 
PASS figure.hidden: IDL set to " foo " should not throw 
PASS figure.hidden: IDL set to " foo " followed by hasAttribute() 
PASS figure.hidden: IDL set to " foo " followed by IDL get 
PASS figure.hidden: IDL set to undefined should not throw 
PASS figure.hidden: IDL set to undefined followed by hasAttribute() 
PASS figure.hidden: IDL set to undefined followed by IDL get 
PASS figure.hidden: IDL set to null should not throw 
PASS figure.hidden: IDL set to null followed by hasAttribute() 
PASS figure.hidden: IDL set to null followed by IDL get 
PASS figure.hidden: IDL set to 7 should not throw 
PASS figure.hidden: IDL set to 7 followed by hasAttribute() 
PASS figure.hidden: IDL set to 7 followed by IDL get 
PASS figure.hidden: IDL set to 1.5 should not throw 
PASS figure.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS figure.hidden: IDL set to 1.5 followed by IDL get 
PASS figure.hidden: IDL set to true should not throw 
PASS figure.hidden: IDL set to true followed by hasAttribute() 
PASS figure.hidden: IDL set to true followed by IDL get 
PASS figure.hidden: IDL set to false should not throw 
PASS figure.hidden: IDL set to false followed by hasAttribute() 
PASS figure.hidden: IDL set to false followed by IDL get 
PASS figure.hidden: IDL set to object "[object Object]" should not throw 
PASS figure.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS figure.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS figure.hidden: IDL set to NaN should not throw 
PASS figure.hidden: IDL set to NaN followed by hasAttribute() 
PASS figure.hidden: IDL set to NaN followed by IDL get 
PASS figure.hidden: IDL set to Infinity should not throw 
PASS figure.hidden: IDL set to Infinity followed by hasAttribute() 
PASS figure.hidden: IDL set to Infinity followed by IDL get 
PASS figure.hidden: IDL set to -Infinity should not throw 
PASS figure.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS figure.hidden: IDL set to -Infinity followed by IDL get 
PASS figure.hidden: IDL set to "\0" should not throw 
PASS figure.hidden: IDL set to "\0" followed by hasAttribute() 
PASS figure.hidden: IDL set to "\0" followed by IDL get 
PASS figure.hidden: IDL set to object "test-toString" should not throw 
PASS figure.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS figure.hidden: IDL set to object "test-toString" followed by IDL get 
PASS figure.hidden: IDL set to object "test-valueOf" should not throw 
PASS figure.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS figure.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS figure.accessKey: typeof IDL attribute 
PASS figure.accessKey: IDL get with DOM attribute unset 
PASS figure.accessKey: setAttribute() to "" followed by getAttribute() 
PASS figure.accessKey: setAttribute() to "" followed by IDL get 
PASS figure.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figure.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figure.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS figure.accessKey: setAttribute() to undefined followed by IDL get 
PASS figure.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS figure.accessKey: setAttribute() to 7 followed by IDL get 
PASS figure.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS figure.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS figure.accessKey: setAttribute() to true followed by getAttribute() 
PASS figure.accessKey: setAttribute() to true followed by IDL get 
PASS figure.accessKey: setAttribute() to false followed by getAttribute() 
PASS figure.accessKey: setAttribute() to false followed by IDL get 
PASS figure.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS figure.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS figure.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS figure.accessKey: setAttribute() to NaN followed by IDL get 
PASS figure.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS figure.accessKey: setAttribute() to Infinity followed by IDL get 
PASS figure.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS figure.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS figure.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS figure.accessKey: setAttribute() to "\0" followed by IDL get 
PASS figure.accessKey: setAttribute() to null followed by getAttribute() 
PASS figure.accessKey: setAttribute() to null followed by IDL get 
PASS figure.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS figure.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS figure.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS figure.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS figure.accessKey: IDL set to "" should not throw 
PASS figure.accessKey: IDL set to "" followed by getAttribute() 
PASS figure.accessKey: IDL set to "" followed by IDL get 
PASS figure.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS figure.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figure.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figure.accessKey: IDL set to undefined should not throw 
PASS figure.accessKey: IDL set to undefined followed by getAttribute() 
PASS figure.accessKey: IDL set to undefined followed by IDL get 
PASS figure.accessKey: IDL set to 7 should not throw 
PASS figure.accessKey: IDL set to 7 followed by getAttribute() 
PASS figure.accessKey: IDL set to 7 followed by IDL get 
PASS figure.accessKey: IDL set to 1.5 should not throw 
PASS figure.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS figure.accessKey: IDL set to 1.5 followed by IDL get 
PASS figure.accessKey: IDL set to true should not throw 
PASS figure.accessKey: IDL set to true followed by getAttribute() 
PASS figure.accessKey: IDL set to true followed by IDL get 
PASS figure.accessKey: IDL set to false should not throw 
PASS figure.accessKey: IDL set to false followed by getAttribute() 
PASS figure.accessKey: IDL set to false followed by IDL get 
PASS figure.accessKey: IDL set to object "[object Object]" should not throw 
PASS figure.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS figure.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS figure.accessKey: IDL set to NaN should not throw 
PASS figure.accessKey: IDL set to NaN followed by getAttribute() 
PASS figure.accessKey: IDL set to NaN followed by IDL get 
PASS figure.accessKey: IDL set to Infinity should not throw 
PASS figure.accessKey: IDL set to Infinity followed by getAttribute() 
PASS figure.accessKey: IDL set to Infinity followed by IDL get 
PASS figure.accessKey: IDL set to -Infinity should not throw 
PASS figure.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS figure.accessKey: IDL set to -Infinity followed by IDL get 
PASS figure.accessKey: IDL set to "\0" should not throw 
PASS figure.accessKey: IDL set to "\0" followed by getAttribute() 
PASS figure.accessKey: IDL set to "\0" followed by IDL get 
PASS figure.accessKey: IDL set to null should not throw 
PASS figure.accessKey: IDL set to null followed by getAttribute() 
PASS figure.accessKey: IDL set to null followed by IDL get 
PASS figure.accessKey: IDL set to object "test-toString" should not throw 
PASS figure.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS figure.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS figure.accessKey: IDL set to object "test-valueOf" should not throw 
PASS figure.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS figure.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS figure.tabIndex: typeof IDL attribute 
PASS figure.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to -36 followed by IDL get 
PASS figure.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to -1 followed by IDL get 
PASS figure.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to 0 followed by IDL get 
PASS figure.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to 1 followed by IDL get 
PASS figure.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS figure.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS figure.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS figure.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS figure.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to "0" followed by IDL get 
PASS figure.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to "1" followed by IDL get 
PASS figure.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS figure.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS figure.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS figure.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS figure.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS figure.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS figure.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS figure.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS figure.tabIndex: IDL set to -36 should not throw 
PASS figure.tabIndex: IDL set to -36 followed by getAttribute() 
PASS figure.tabIndex: IDL set to -36 followed by IDL get 
PASS figure.tabIndex: IDL set to -1 should not throw 
PASS figure.tabIndex: IDL set to -1 followed by getAttribute() 
PASS figure.tabIndex: IDL set to -1 followed by IDL get 
PASS figure.tabIndex: IDL set to 0 should not throw 
PASS figure.tabIndex: IDL set to 0 followed by getAttribute() 
PASS figure.tabIndex: IDL set to 0 followed by IDL get 
PASS figure.tabIndex: IDL set to 1 should not throw 
PASS figure.tabIndex: IDL set to 1 followed by getAttribute() 
PASS figure.tabIndex: IDL set to 1 followed by IDL get 
PASS figure.tabIndex: IDL set to 2147483647 should not throw 
PASS figure.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS figure.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS figure.tabIndex: IDL set to -2147483648 should not throw 
PASS figure.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS figure.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL figure.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL figure.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS figure.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to null followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to true followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to false followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL figure.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figure.itemScope: IDL set to "" should not throw 
FAIL figure.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL figure.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS figure.itemScope: IDL set to " foo " should not throw 
PASS figure.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL figure.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS figure.itemScope: IDL set to undefined should not throw 
FAIL figure.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL figure.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS figure.itemScope: IDL set to null should not throw 
FAIL figure.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL figure.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS figure.itemScope: IDL set to 7 should not throw 
PASS figure.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL figure.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS figure.itemScope: IDL set to 1.5 should not throw 
PASS figure.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL figure.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS figure.itemScope: IDL set to true should not throw 
PASS figure.itemScope: IDL set to true followed by hasAttribute() 
PASS figure.itemScope: IDL set to true followed by IDL get 
PASS figure.itemScope: IDL set to false should not throw 
FAIL figure.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS figure.itemScope: IDL set to false followed by IDL get 
PASS figure.itemScope: IDL set to object "[object Object]" should not throw 
PASS figure.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL figure.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS figure.itemScope: IDL set to NaN should not throw 
FAIL figure.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL figure.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS figure.itemScope: IDL set to Infinity should not throw 
PASS figure.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL figure.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS figure.itemScope: IDL set to -Infinity should not throw 
PASS figure.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL figure.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS figure.itemScope: IDL set to "\0" should not throw 
PASS figure.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL figure.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS figure.itemScope: IDL set to object "test-toString" should not throw 
PASS figure.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL figure.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS figure.itemScope: IDL set to object "test-valueOf" should not throw 
PASS figure.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL figure.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL figure.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL figure.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS figure.itemId: setAttribute() to "" followed by getAttribute() 
FAIL figure.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS figure.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL figure.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS figure.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL figure.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS figure.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL figure.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS figure.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL figure.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS figure.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL figure.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS figure.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL figure.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS figure.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL figure.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS figure.itemId: setAttribute() to true followed by getAttribute() 
FAIL figure.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS figure.itemId: setAttribute() to false followed by getAttribute() 
FAIL figure.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS figure.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL figure.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS figure.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL figure.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS figure.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL figure.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS figure.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL figure.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS figure.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL figure.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS figure.itemId: setAttribute() to null followed by getAttribute() 
FAIL figure.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS figure.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL figure.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS figure.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL figure.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS figure.itemId: IDL set to "" should not throw 
FAIL figure.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL figure.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS figure.itemId: IDL set to " foo " should not throw 
FAIL figure.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL figure.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS figure.itemId: IDL set to "http://site.example/" should not throw 
FAIL figure.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS figure.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS figure.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL figure.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL figure.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS figure.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL figure.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL figure.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS figure.itemId: IDL set to undefined should not throw 
FAIL figure.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL figure.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS figure.itemId: IDL set to 7 should not throw 
FAIL figure.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL figure.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS figure.itemId: IDL set to 1.5 should not throw 
FAIL figure.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL figure.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS figure.itemId: IDL set to true should not throw 
FAIL figure.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL figure.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS figure.itemId: IDL set to false should not throw 
FAIL figure.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL figure.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS figure.itemId: IDL set to object "[object Object]" should not throw 
FAIL figure.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL figure.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS figure.itemId: IDL set to NaN should not throw 
FAIL figure.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL figure.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS figure.itemId: IDL set to Infinity should not throw 
FAIL figure.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL figure.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS figure.itemId: IDL set to -Infinity should not throw 
FAIL figure.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL figure.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS figure.itemId: IDL set to "\0" should not throw 
FAIL figure.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL figure.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS figure.itemId: IDL set to null should not throw 
FAIL figure.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL figure.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS figure.itemId: IDL set to object "test-toString" should not throw 
FAIL figure.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL figure.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS figure.itemId: IDL set to object "test-valueOf" should not throw 
PASS figure.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL figure.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS figcaption.title: typeof IDL attribute 
PASS figcaption.title: IDL get with DOM attribute unset 
PASS figcaption.title: setAttribute() to "" followed by getAttribute() 
PASS figcaption.title: setAttribute() to "" followed by IDL get 
PASS figcaption.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figcaption.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figcaption.title: setAttribute() to undefined followed by getAttribute() 
PASS figcaption.title: setAttribute() to undefined followed by IDL get 
PASS figcaption.title: setAttribute() to 7 followed by getAttribute() 
PASS figcaption.title: setAttribute() to 7 followed by IDL get 
PASS figcaption.title: setAttribute() to 1.5 followed by getAttribute() 
PASS figcaption.title: setAttribute() to 1.5 followed by IDL get 
PASS figcaption.title: setAttribute() to true followed by getAttribute() 
PASS figcaption.title: setAttribute() to true followed by IDL get 
PASS figcaption.title: setAttribute() to false followed by getAttribute() 
PASS figcaption.title: setAttribute() to false followed by IDL get 
PASS figcaption.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS figcaption.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS figcaption.title: setAttribute() to NaN followed by getAttribute() 
PASS figcaption.title: setAttribute() to NaN followed by IDL get 
PASS figcaption.title: setAttribute() to Infinity followed by getAttribute() 
PASS figcaption.title: setAttribute() to Infinity followed by IDL get 
PASS figcaption.title: setAttribute() to -Infinity followed by getAttribute() 
PASS figcaption.title: setAttribute() to -Infinity followed by IDL get 
PASS figcaption.title: setAttribute() to "\0" followed by getAttribute() 
PASS figcaption.title: setAttribute() to "\0" followed by IDL get 
PASS figcaption.title: setAttribute() to null followed by getAttribute() 
PASS figcaption.title: setAttribute() to null followed by IDL get 
PASS figcaption.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS figcaption.title: setAttribute() to object "test-toString" followed by IDL get 
PASS figcaption.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS figcaption.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS figcaption.title: IDL set to "" should not throw 
PASS figcaption.title: IDL set to "" followed by getAttribute() 
PASS figcaption.title: IDL set to "" followed by IDL get 
PASS figcaption.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS figcaption.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figcaption.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figcaption.title: IDL set to undefined should not throw 
PASS figcaption.title: IDL set to undefined followed by getAttribute() 
PASS figcaption.title: IDL set to undefined followed by IDL get 
PASS figcaption.title: IDL set to 7 should not throw 
PASS figcaption.title: IDL set to 7 followed by getAttribute() 
PASS figcaption.title: IDL set to 7 followed by IDL get 
PASS figcaption.title: IDL set to 1.5 should not throw 
PASS figcaption.title: IDL set to 1.5 followed by getAttribute() 
PASS figcaption.title: IDL set to 1.5 followed by IDL get 
PASS figcaption.title: IDL set to true should not throw 
PASS figcaption.title: IDL set to true followed by getAttribute() 
PASS figcaption.title: IDL set to true followed by IDL get 
PASS figcaption.title: IDL set to false should not throw 
PASS figcaption.title: IDL set to false followed by getAttribute() 
PASS figcaption.title: IDL set to false followed by IDL get 
PASS figcaption.title: IDL set to object "[object Object]" should not throw 
PASS figcaption.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS figcaption.title: IDL set to object "[object Object]" followed by IDL get 
PASS figcaption.title: IDL set to NaN should not throw 
PASS figcaption.title: IDL set to NaN followed by getAttribute() 
PASS figcaption.title: IDL set to NaN followed by IDL get 
PASS figcaption.title: IDL set to Infinity should not throw 
PASS figcaption.title: IDL set to Infinity followed by getAttribute() 
PASS figcaption.title: IDL set to Infinity followed by IDL get 
PASS figcaption.title: IDL set to -Infinity should not throw 
PASS figcaption.title: IDL set to -Infinity followed by getAttribute() 
PASS figcaption.title: IDL set to -Infinity followed by IDL get 
PASS figcaption.title: IDL set to "\0" should not throw 
PASS figcaption.title: IDL set to "\0" followed by getAttribute() 
PASS figcaption.title: IDL set to "\0" followed by IDL get 
PASS figcaption.title: IDL set to null should not throw 
PASS figcaption.title: IDL set to null followed by getAttribute() 
PASS figcaption.title: IDL set to null followed by IDL get 
PASS figcaption.title: IDL set to object "test-toString" should not throw 
PASS figcaption.title: IDL set to object "test-toString" followed by getAttribute() 
PASS figcaption.title: IDL set to object "test-toString" followed by IDL get 
PASS figcaption.title: IDL set to object "test-valueOf" should not throw 
PASS figcaption.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS figcaption.title: IDL set to object "test-valueOf" followed by IDL get 
PASS figcaption.lang: typeof IDL attribute 
PASS figcaption.lang: IDL get with DOM attribute unset 
PASS figcaption.lang: setAttribute() to "" followed by getAttribute() 
PASS figcaption.lang: setAttribute() to "" followed by IDL get 
PASS figcaption.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figcaption.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figcaption.lang: setAttribute() to undefined followed by getAttribute() 
PASS figcaption.lang: setAttribute() to undefined followed by IDL get 
PASS figcaption.lang: setAttribute() to 7 followed by getAttribute() 
PASS figcaption.lang: setAttribute() to 7 followed by IDL get 
PASS figcaption.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS figcaption.lang: setAttribute() to 1.5 followed by IDL get 
PASS figcaption.lang: setAttribute() to true followed by getAttribute() 
PASS figcaption.lang: setAttribute() to true followed by IDL get 
PASS figcaption.lang: setAttribute() to false followed by getAttribute() 
PASS figcaption.lang: setAttribute() to false followed by IDL get 
PASS figcaption.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS figcaption.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS figcaption.lang: setAttribute() to NaN followed by getAttribute() 
PASS figcaption.lang: setAttribute() to NaN followed by IDL get 
PASS figcaption.lang: setAttribute() to Infinity followed by getAttribute() 
PASS figcaption.lang: setAttribute() to Infinity followed by IDL get 
PASS figcaption.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS figcaption.lang: setAttribute() to -Infinity followed by IDL get 
PASS figcaption.lang: setAttribute() to "\0" followed by getAttribute() 
PASS figcaption.lang: setAttribute() to "\0" followed by IDL get 
PASS figcaption.lang: setAttribute() to null followed by getAttribute() 
PASS figcaption.lang: setAttribute() to null followed by IDL get 
PASS figcaption.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS figcaption.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS figcaption.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS figcaption.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS figcaption.lang: IDL set to "" should not throw 
PASS figcaption.lang: IDL set to "" followed by getAttribute() 
PASS figcaption.lang: IDL set to "" followed by IDL get 
PASS figcaption.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS figcaption.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figcaption.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figcaption.lang: IDL set to undefined should not throw 
PASS figcaption.lang: IDL set to undefined followed by getAttribute() 
PASS figcaption.lang: IDL set to undefined followed by IDL get 
PASS figcaption.lang: IDL set to 7 should not throw 
PASS figcaption.lang: IDL set to 7 followed by getAttribute() 
PASS figcaption.lang: IDL set to 7 followed by IDL get 
PASS figcaption.lang: IDL set to 1.5 should not throw 
PASS figcaption.lang: IDL set to 1.5 followed by getAttribute() 
PASS figcaption.lang: IDL set to 1.5 followed by IDL get 
PASS figcaption.lang: IDL set to true should not throw 
PASS figcaption.lang: IDL set to true followed by getAttribute() 
PASS figcaption.lang: IDL set to true followed by IDL get 
PASS figcaption.lang: IDL set to false should not throw 
PASS figcaption.lang: IDL set to false followed by getAttribute() 
PASS figcaption.lang: IDL set to false followed by IDL get 
PASS figcaption.lang: IDL set to object "[object Object]" should not throw 
PASS figcaption.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS figcaption.lang: IDL set to object "[object Object]" followed by IDL get 
PASS figcaption.lang: IDL set to NaN should not throw 
PASS figcaption.lang: IDL set to NaN followed by getAttribute() 
PASS figcaption.lang: IDL set to NaN followed by IDL get 
PASS figcaption.lang: IDL set to Infinity should not throw 
PASS figcaption.lang: IDL set to Infinity followed by getAttribute() 
PASS figcaption.lang: IDL set to Infinity followed by IDL get 
PASS figcaption.lang: IDL set to -Infinity should not throw 
PASS figcaption.lang: IDL set to -Infinity followed by getAttribute() 
PASS figcaption.lang: IDL set to -Infinity followed by IDL get 
PASS figcaption.lang: IDL set to "\0" should not throw 
PASS figcaption.lang: IDL set to "\0" followed by getAttribute() 
PASS figcaption.lang: IDL set to "\0" followed by IDL get 
PASS figcaption.lang: IDL set to null should not throw 
PASS figcaption.lang: IDL set to null followed by getAttribute() 
PASS figcaption.lang: IDL set to null followed by IDL get 
PASS figcaption.lang: IDL set to object "test-toString" should not throw 
PASS figcaption.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS figcaption.lang: IDL set to object "test-toString" followed by IDL get 
PASS figcaption.lang: IDL set to object "test-valueOf" should not throw 
PASS figcaption.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS figcaption.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS figcaption.dir: typeof IDL attribute 
PASS figcaption.dir: IDL get with DOM attribute unset 
PASS figcaption.dir: setAttribute() to "" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "" followed by IDL get 
PASS figcaption.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figcaption.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figcaption.dir: setAttribute() to undefined followed by getAttribute() 
PASS figcaption.dir: setAttribute() to undefined followed by IDL get 
PASS figcaption.dir: setAttribute() to 7 followed by getAttribute() 
PASS figcaption.dir: setAttribute() to 7 followed by IDL get 
PASS figcaption.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS figcaption.dir: setAttribute() to 1.5 followed by IDL get 
PASS figcaption.dir: setAttribute() to true followed by getAttribute() 
PASS figcaption.dir: setAttribute() to true followed by IDL get 
PASS figcaption.dir: setAttribute() to false followed by getAttribute() 
PASS figcaption.dir: setAttribute() to false followed by IDL get 
PASS figcaption.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS figcaption.dir: setAttribute() to NaN followed by getAttribute() 
PASS figcaption.dir: setAttribute() to NaN followed by IDL get 
PASS figcaption.dir: setAttribute() to Infinity followed by getAttribute() 
PASS figcaption.dir: setAttribute() to Infinity followed by IDL get 
PASS figcaption.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS figcaption.dir: setAttribute() to -Infinity followed by IDL get 
PASS figcaption.dir: setAttribute() to "\0" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "\0" followed by IDL get 
PASS figcaption.dir: setAttribute() to null followed by getAttribute() 
PASS figcaption.dir: setAttribute() to null followed by IDL get 
PASS figcaption.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS figcaption.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS figcaption.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "ltr" followed by IDL get 
PASS figcaption.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "xltr" followed by IDL get 
PASS figcaption.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS figcaption.dir: setAttribute() to "tr" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "tr" followed by IDL get 
PASS figcaption.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "LTR" followed by IDL get 
PASS figcaption.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "rtl" followed by IDL get 
PASS figcaption.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "xrtl" followed by IDL get 
PASS figcaption.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS figcaption.dir: setAttribute() to "tl" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "tl" followed by IDL get 
PASS figcaption.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "RTL" followed by IDL get 
PASS figcaption.dir: setAttribute() to "auto" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "auto" followed by IDL get 
PASS figcaption.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "xauto" followed by IDL get 
PASS figcaption.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "auto\0" followed by IDL get 
PASS figcaption.dir: setAttribute() to "uto" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "uto" followed by IDL get 
PASS figcaption.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS figcaption.dir: setAttribute() to "AUTO" followed by IDL get 
PASS figcaption.dir: IDL set to "" should not throw 
PASS figcaption.dir: IDL set to "" followed by getAttribute() 
PASS figcaption.dir: IDL set to "" followed by IDL get 
PASS figcaption.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS figcaption.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figcaption.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figcaption.dir: IDL set to undefined should not throw 
PASS figcaption.dir: IDL set to undefined followed by getAttribute() 
PASS figcaption.dir: IDL set to undefined followed by IDL get 
PASS figcaption.dir: IDL set to 7 should not throw 
PASS figcaption.dir: IDL set to 7 followed by getAttribute() 
PASS figcaption.dir: IDL set to 7 followed by IDL get 
PASS figcaption.dir: IDL set to 1.5 should not throw 
PASS figcaption.dir: IDL set to 1.5 followed by getAttribute() 
PASS figcaption.dir: IDL set to 1.5 followed by IDL get 
PASS figcaption.dir: IDL set to true should not throw 
PASS figcaption.dir: IDL set to true followed by getAttribute() 
PASS figcaption.dir: IDL set to true followed by IDL get 
PASS figcaption.dir: IDL set to false should not throw 
PASS figcaption.dir: IDL set to false followed by getAttribute() 
PASS figcaption.dir: IDL set to false followed by IDL get 
PASS figcaption.dir: IDL set to object "[object Object]" should not throw 
PASS figcaption.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS figcaption.dir: IDL set to object "[object Object]" followed by IDL get 
PASS figcaption.dir: IDL set to NaN should not throw 
PASS figcaption.dir: IDL set to NaN followed by getAttribute() 
PASS figcaption.dir: IDL set to NaN followed by IDL get 
PASS figcaption.dir: IDL set to Infinity should not throw 
PASS figcaption.dir: IDL set to Infinity followed by getAttribute() 
PASS figcaption.dir: IDL set to Infinity followed by IDL get 
PASS figcaption.dir: IDL set to -Infinity should not throw 
PASS figcaption.dir: IDL set to -Infinity followed by getAttribute() 
PASS figcaption.dir: IDL set to -Infinity followed by IDL get 
PASS figcaption.dir: IDL set to "\0" should not throw 
PASS figcaption.dir: IDL set to "\0" followed by getAttribute() 
PASS figcaption.dir: IDL set to "\0" followed by IDL get 
PASS figcaption.dir: IDL set to null should not throw 
PASS figcaption.dir: IDL set to null followed by IDL get 
PASS figcaption.dir: IDL set to object "test-toString" should not throw 
PASS figcaption.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS figcaption.dir: IDL set to object "test-toString" followed by IDL get 
PASS figcaption.dir: IDL set to object "test-valueOf" should not throw 
PASS figcaption.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS figcaption.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS figcaption.dir: IDL set to "ltr" should not throw 
PASS figcaption.dir: IDL set to "ltr" followed by getAttribute() 
PASS figcaption.dir: IDL set to "ltr" followed by IDL get 
PASS figcaption.dir: IDL set to "xltr" should not throw 
PASS figcaption.dir: IDL set to "xltr" followed by getAttribute() 
PASS figcaption.dir: IDL set to "xltr" followed by IDL get 
PASS figcaption.dir: IDL set to "ltr\0" should not throw 
PASS figcaption.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS figcaption.dir: IDL set to "ltr\0" followed by IDL get 
PASS figcaption.dir: IDL set to "tr" should not throw 
PASS figcaption.dir: IDL set to "tr" followed by getAttribute() 
PASS figcaption.dir: IDL set to "tr" followed by IDL get 
PASS figcaption.dir: IDL set to "LTR" should not throw 
PASS figcaption.dir: IDL set to "LTR" followed by getAttribute() 
PASS figcaption.dir: IDL set to "LTR" followed by IDL get 
PASS figcaption.dir: IDL set to "rtl" should not throw 
PASS figcaption.dir: IDL set to "rtl" followed by getAttribute() 
PASS figcaption.dir: IDL set to "rtl" followed by IDL get 
PASS figcaption.dir: IDL set to "xrtl" should not throw 
PASS figcaption.dir: IDL set to "xrtl" followed by getAttribute() 
PASS figcaption.dir: IDL set to "xrtl" followed by IDL get 
PASS figcaption.dir: IDL set to "rtl\0" should not throw 
PASS figcaption.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS figcaption.dir: IDL set to "rtl\0" followed by IDL get 
PASS figcaption.dir: IDL set to "tl" should not throw 
PASS figcaption.dir: IDL set to "tl" followed by getAttribute() 
PASS figcaption.dir: IDL set to "tl" followed by IDL get 
PASS figcaption.dir: IDL set to "RTL" should not throw 
PASS figcaption.dir: IDL set to "RTL" followed by getAttribute() 
PASS figcaption.dir: IDL set to "RTL" followed by IDL get 
PASS figcaption.dir: IDL set to "auto" should not throw 
PASS figcaption.dir: IDL set to "auto" followed by getAttribute() 
PASS figcaption.dir: IDL set to "auto" followed by IDL get 
PASS figcaption.dir: IDL set to "xauto" should not throw 
PASS figcaption.dir: IDL set to "xauto" followed by getAttribute() 
PASS figcaption.dir: IDL set to "xauto" followed by IDL get 
PASS figcaption.dir: IDL set to "auto\0" should not throw 
PASS figcaption.dir: IDL set to "auto\0" followed by getAttribute() 
PASS figcaption.dir: IDL set to "auto\0" followed by IDL get 
PASS figcaption.dir: IDL set to "uto" should not throw 
PASS figcaption.dir: IDL set to "uto" followed by getAttribute() 
PASS figcaption.dir: IDL set to "uto" followed by IDL get 
PASS figcaption.dir: IDL set to "AUTO" should not throw 
PASS figcaption.dir: IDL set to "AUTO" followed by getAttribute() 
PASS figcaption.dir: IDL set to "AUTO" followed by IDL get 
PASS figcaption.className (<figcaption class>): typeof IDL attribute 
PASS figcaption.className (<figcaption class>): IDL get with DOM attribute unset 
PASS figcaption.className (<figcaption class>): setAttribute() to "" followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to "" followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to undefined followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to undefined followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to 7 followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to 7 followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to 1.5 followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to 1.5 followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to true followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to true followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to false followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to false followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to NaN followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to NaN followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to Infinity followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to Infinity followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to -Infinity followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to -Infinity followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to "\0" followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to "\0" followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to null followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to null followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to object "test-toString" followed by IDL get 
PASS figcaption.className (<figcaption class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS figcaption.className (<figcaption class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to "" should not throw 
PASS figcaption.className (<figcaption class>): IDL set to "" followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to "" followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS figcaption.className (<figcaption class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to undefined should not throw 
PASS figcaption.className (<figcaption class>): IDL set to undefined followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to undefined followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to 7 should not throw 
PASS figcaption.className (<figcaption class>): IDL set to 7 followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to 7 followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to 1.5 should not throw 
PASS figcaption.className (<figcaption class>): IDL set to 1.5 followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to 1.5 followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to true should not throw 
PASS figcaption.className (<figcaption class>): IDL set to true followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to true followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to false should not throw 
PASS figcaption.className (<figcaption class>): IDL set to false followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to false followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to object "[object Object]" should not throw 
PASS figcaption.className (<figcaption class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to object "[object Object]" followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to NaN should not throw 
PASS figcaption.className (<figcaption class>): IDL set to NaN followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to NaN followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to Infinity should not throw 
PASS figcaption.className (<figcaption class>): IDL set to Infinity followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to Infinity followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to -Infinity should not throw 
PASS figcaption.className (<figcaption class>): IDL set to -Infinity followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to -Infinity followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to "\0" should not throw 
PASS figcaption.className (<figcaption class>): IDL set to "\0" followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to "\0" followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to null should not throw 
PASS figcaption.className (<figcaption class>): IDL set to null followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to null followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to object "test-toString" should not throw 
PASS figcaption.className (<figcaption class>): IDL set to object "test-toString" followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to object "test-toString" followed by IDL get 
PASS figcaption.className (<figcaption class>): IDL set to object "test-valueOf" should not throw 
PASS figcaption.className (<figcaption class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS figcaption.className (<figcaption class>): IDL set to object "test-valueOf" followed by IDL get 
PASS figcaption.hidden: typeof IDL attribute 
PASS figcaption.hidden: IDL get with DOM attribute unset 
PASS figcaption.hidden: setAttribute() to "" followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to "" followed by IDL get 
PASS figcaption.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to " foo " followed by IDL get 
PASS figcaption.hidden: setAttribute() to undefined followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to undefined followed by IDL get 
PASS figcaption.hidden: setAttribute() to null followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to null followed by IDL get 
PASS figcaption.hidden: setAttribute() to 7 followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to 7 followed by IDL get 
PASS figcaption.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to 1.5 followed by IDL get 
PASS figcaption.hidden: setAttribute() to true followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to true followed by IDL get 
PASS figcaption.hidden: setAttribute() to false followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to false followed by IDL get 
PASS figcaption.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS figcaption.hidden: setAttribute() to NaN followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to NaN followed by IDL get 
PASS figcaption.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to Infinity followed by IDL get 
PASS figcaption.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to -Infinity followed by IDL get 
PASS figcaption.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to "\0" followed by IDL get 
PASS figcaption.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS figcaption.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS figcaption.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS figcaption.hidden: setAttribute() to "hidden" followed by IDL get 
PASS figcaption.hidden: IDL set to "" should not throw 
PASS figcaption.hidden: IDL set to "" followed by hasAttribute() 
PASS figcaption.hidden: IDL set to "" followed by IDL get 
PASS figcaption.hidden: IDL set to " foo " should not throw 
PASS figcaption.hidden: IDL set to " foo " followed by hasAttribute() 
PASS figcaption.hidden: IDL set to " foo " followed by IDL get 
PASS figcaption.hidden: IDL set to undefined should not throw 
PASS figcaption.hidden: IDL set to undefined followed by hasAttribute() 
PASS figcaption.hidden: IDL set to undefined followed by IDL get 
PASS figcaption.hidden: IDL set to null should not throw 
PASS figcaption.hidden: IDL set to null followed by hasAttribute() 
PASS figcaption.hidden: IDL set to null followed by IDL get 
PASS figcaption.hidden: IDL set to 7 should not throw 
PASS figcaption.hidden: IDL set to 7 followed by hasAttribute() 
PASS figcaption.hidden: IDL set to 7 followed by IDL get 
PASS figcaption.hidden: IDL set to 1.5 should not throw 
PASS figcaption.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS figcaption.hidden: IDL set to 1.5 followed by IDL get 
PASS figcaption.hidden: IDL set to true should not throw 
PASS figcaption.hidden: IDL set to true followed by hasAttribute() 
PASS figcaption.hidden: IDL set to true followed by IDL get 
PASS figcaption.hidden: IDL set to false should not throw 
PASS figcaption.hidden: IDL set to false followed by hasAttribute() 
PASS figcaption.hidden: IDL set to false followed by IDL get 
PASS figcaption.hidden: IDL set to object "[object Object]" should not throw 
PASS figcaption.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS figcaption.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS figcaption.hidden: IDL set to NaN should not throw 
PASS figcaption.hidden: IDL set to NaN followed by hasAttribute() 
PASS figcaption.hidden: IDL set to NaN followed by IDL get 
PASS figcaption.hidden: IDL set to Infinity should not throw 
PASS figcaption.hidden: IDL set to Infinity followed by hasAttribute() 
PASS figcaption.hidden: IDL set to Infinity followed by IDL get 
PASS figcaption.hidden: IDL set to -Infinity should not throw 
PASS figcaption.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS figcaption.hidden: IDL set to -Infinity followed by IDL get 
PASS figcaption.hidden: IDL set to "\0" should not throw 
PASS figcaption.hidden: IDL set to "\0" followed by hasAttribute() 
PASS figcaption.hidden: IDL set to "\0" followed by IDL get 
PASS figcaption.hidden: IDL set to object "test-toString" should not throw 
PASS figcaption.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS figcaption.hidden: IDL set to object "test-toString" followed by IDL get 
PASS figcaption.hidden: IDL set to object "test-valueOf" should not throw 
PASS figcaption.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS figcaption.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS figcaption.accessKey: typeof IDL attribute 
PASS figcaption.accessKey: IDL get with DOM attribute unset 
PASS figcaption.accessKey: setAttribute() to "" followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to "" followed by IDL get 
PASS figcaption.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figcaption.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to undefined followed by IDL get 
PASS figcaption.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to 7 followed by IDL get 
PASS figcaption.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS figcaption.accessKey: setAttribute() to true followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to true followed by IDL get 
PASS figcaption.accessKey: setAttribute() to false followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to false followed by IDL get 
PASS figcaption.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS figcaption.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to NaN followed by IDL get 
PASS figcaption.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to Infinity followed by IDL get 
PASS figcaption.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS figcaption.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to "\0" followed by IDL get 
PASS figcaption.accessKey: setAttribute() to null followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to null followed by IDL get 
PASS figcaption.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS figcaption.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS figcaption.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS figcaption.accessKey: IDL set to "" should not throw 
PASS figcaption.accessKey: IDL set to "" followed by getAttribute() 
PASS figcaption.accessKey: IDL set to "" followed by IDL get 
PASS figcaption.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS figcaption.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS figcaption.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS figcaption.accessKey: IDL set to undefined should not throw 
PASS figcaption.accessKey: IDL set to undefined followed by getAttribute() 
PASS figcaption.accessKey: IDL set to undefined followed by IDL get 
PASS figcaption.accessKey: IDL set to 7 should not throw 
PASS figcaption.accessKey: IDL set to 7 followed by getAttribute() 
PASS figcaption.accessKey: IDL set to 7 followed by IDL get 
PASS figcaption.accessKey: IDL set to 1.5 should not throw 
PASS figcaption.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS figcaption.accessKey: IDL set to 1.5 followed by IDL get 
PASS figcaption.accessKey: IDL set to true should not throw 
PASS figcaption.accessKey: IDL set to true followed by getAttribute() 
PASS figcaption.accessKey: IDL set to true followed by IDL get 
PASS figcaption.accessKey: IDL set to false should not throw 
PASS figcaption.accessKey: IDL set to false followed by getAttribute() 
PASS figcaption.accessKey: IDL set to false followed by IDL get 
PASS figcaption.accessKey: IDL set to object "[object Object]" should not throw 
PASS figcaption.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS figcaption.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS figcaption.accessKey: IDL set to NaN should not throw 
PASS figcaption.accessKey: IDL set to NaN followed by getAttribute() 
PASS figcaption.accessKey: IDL set to NaN followed by IDL get 
PASS figcaption.accessKey: IDL set to Infinity should not throw 
PASS figcaption.accessKey: IDL set to Infinity followed by getAttribute() 
PASS figcaption.accessKey: IDL set to Infinity followed by IDL get 
PASS figcaption.accessKey: IDL set to -Infinity should not throw 
PASS figcaption.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS figcaption.accessKey: IDL set to -Infinity followed by IDL get 
PASS figcaption.accessKey: IDL set to "\0" should not throw 
PASS figcaption.accessKey: IDL set to "\0" followed by getAttribute() 
PASS figcaption.accessKey: IDL set to "\0" followed by IDL get 
PASS figcaption.accessKey: IDL set to null should not throw 
PASS figcaption.accessKey: IDL set to null followed by getAttribute() 
PASS figcaption.accessKey: IDL set to null followed by IDL get 
PASS figcaption.accessKey: IDL set to object "test-toString" should not throw 
PASS figcaption.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS figcaption.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS figcaption.accessKey: IDL set to object "test-valueOf" should not throw 
PASS figcaption.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS figcaption.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS figcaption.tabIndex: typeof IDL attribute 
PASS figcaption.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to -36 followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to -1 followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to 0 followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to 1 followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to "0" followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to "1" followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS figcaption.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS figcaption.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS figcaption.tabIndex: IDL set to -36 should not throw 
PASS figcaption.tabIndex: IDL set to -36 followed by getAttribute() 
PASS figcaption.tabIndex: IDL set to -36 followed by IDL get 
PASS figcaption.tabIndex: IDL set to -1 should not throw 
PASS figcaption.tabIndex: IDL set to -1 followed by getAttribute() 
PASS figcaption.tabIndex: IDL set to -1 followed by IDL get 
PASS figcaption.tabIndex: IDL set to 0 should not throw 
PASS figcaption.tabIndex: IDL set to 0 followed by getAttribute() 
PASS figcaption.tabIndex: IDL set to 0 followed by IDL get 
PASS figcaption.tabIndex: IDL set to 1 should not throw 
PASS figcaption.tabIndex: IDL set to 1 followed by getAttribute() 
PASS figcaption.tabIndex: IDL set to 1 followed by IDL get 
PASS figcaption.tabIndex: IDL set to 2147483647 should not throw 
PASS figcaption.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS figcaption.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS figcaption.tabIndex: IDL set to -2147483648 should not throw 
PASS figcaption.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS figcaption.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL figcaption.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL figcaption.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to null followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to true followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to false followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL figcaption.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS figcaption.itemScope: IDL set to "" should not throw 
FAIL figcaption.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL figcaption.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS figcaption.itemScope: IDL set to " foo " should not throw 
PASS figcaption.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL figcaption.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS figcaption.itemScope: IDL set to undefined should not throw 
FAIL figcaption.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL figcaption.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS figcaption.itemScope: IDL set to null should not throw 
FAIL figcaption.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL figcaption.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS figcaption.itemScope: IDL set to 7 should not throw 
PASS figcaption.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL figcaption.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS figcaption.itemScope: IDL set to 1.5 should not throw 
PASS figcaption.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL figcaption.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS figcaption.itemScope: IDL set to true should not throw 
PASS figcaption.itemScope: IDL set to true followed by hasAttribute() 
PASS figcaption.itemScope: IDL set to true followed by IDL get 
PASS figcaption.itemScope: IDL set to false should not throw 
FAIL figcaption.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS figcaption.itemScope: IDL set to false followed by IDL get 
PASS figcaption.itemScope: IDL set to object "[object Object]" should not throw 
PASS figcaption.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL figcaption.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS figcaption.itemScope: IDL set to NaN should not throw 
FAIL figcaption.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL figcaption.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS figcaption.itemScope: IDL set to Infinity should not throw 
PASS figcaption.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL figcaption.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS figcaption.itemScope: IDL set to -Infinity should not throw 
PASS figcaption.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL figcaption.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS figcaption.itemScope: IDL set to "\0" should not throw 
PASS figcaption.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL figcaption.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS figcaption.itemScope: IDL set to object "test-toString" should not throw 
PASS figcaption.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL figcaption.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS figcaption.itemScope: IDL set to object "test-valueOf" should not throw 
PASS figcaption.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL figcaption.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL figcaption.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL figcaption.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to "" followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to true followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to false followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to null followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS figcaption.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL figcaption.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS figcaption.itemId: IDL set to "" should not throw 
FAIL figcaption.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS figcaption.itemId: IDL set to " foo " should not throw 
FAIL figcaption.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL figcaption.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS figcaption.itemId: IDL set to "http://site.example/" should not throw 
FAIL figcaption.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS figcaption.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS figcaption.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL figcaption.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS figcaption.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL figcaption.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL figcaption.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS figcaption.itemId: IDL set to undefined should not throw 
FAIL figcaption.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS figcaption.itemId: IDL set to 7 should not throw 
FAIL figcaption.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS figcaption.itemId: IDL set to 1.5 should not throw 
FAIL figcaption.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS figcaption.itemId: IDL set to true should not throw 
FAIL figcaption.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS figcaption.itemId: IDL set to false should not throw 
FAIL figcaption.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS figcaption.itemId: IDL set to object "[object Object]" should not throw 
FAIL figcaption.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS figcaption.itemId: IDL set to NaN should not throw 
FAIL figcaption.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS figcaption.itemId: IDL set to Infinity should not throw 
FAIL figcaption.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS figcaption.itemId: IDL set to -Infinity should not throw 
FAIL figcaption.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS figcaption.itemId: IDL set to "\0" should not throw 
FAIL figcaption.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS figcaption.itemId: IDL set to null should not throw 
FAIL figcaption.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS figcaption.itemId: IDL set to object "test-toString" should not throw 
FAIL figcaption.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL figcaption.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS figcaption.itemId: IDL set to object "test-valueOf" should not throw 
PASS figcaption.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL figcaption.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS main.title: typeof IDL attribute 
PASS main.title: IDL get with DOM attribute unset 
PASS main.title: setAttribute() to "" followed by getAttribute() 
PASS main.title: setAttribute() to "" followed by IDL get 
PASS main.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS main.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS main.title: setAttribute() to undefined followed by getAttribute() 
PASS main.title: setAttribute() to undefined followed by IDL get 
PASS main.title: setAttribute() to 7 followed by getAttribute() 
PASS main.title: setAttribute() to 7 followed by IDL get 
PASS main.title: setAttribute() to 1.5 followed by getAttribute() 
PASS main.title: setAttribute() to 1.5 followed by IDL get 
PASS main.title: setAttribute() to true followed by getAttribute() 
PASS main.title: setAttribute() to true followed by IDL get 
PASS main.title: setAttribute() to false followed by getAttribute() 
PASS main.title: setAttribute() to false followed by IDL get 
PASS main.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS main.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS main.title: setAttribute() to NaN followed by getAttribute() 
PASS main.title: setAttribute() to NaN followed by IDL get 
PASS main.title: setAttribute() to Infinity followed by getAttribute() 
PASS main.title: setAttribute() to Infinity followed by IDL get 
PASS main.title: setAttribute() to -Infinity followed by getAttribute() 
PASS main.title: setAttribute() to -Infinity followed by IDL get 
PASS main.title: setAttribute() to "\0" followed by getAttribute() 
PASS main.title: setAttribute() to "\0" followed by IDL get 
PASS main.title: setAttribute() to null followed by getAttribute() 
PASS main.title: setAttribute() to null followed by IDL get 
PASS main.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS main.title: setAttribute() to object "test-toString" followed by IDL get 
PASS main.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS main.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS main.title: IDL set to "" should not throw 
PASS main.title: IDL set to "" followed by getAttribute() 
PASS main.title: IDL set to "" followed by IDL get 
PASS main.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS main.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS main.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS main.title: IDL set to undefined should not throw 
PASS main.title: IDL set to undefined followed by getAttribute() 
PASS main.title: IDL set to undefined followed by IDL get 
PASS main.title: IDL set to 7 should not throw 
PASS main.title: IDL set to 7 followed by getAttribute() 
PASS main.title: IDL set to 7 followed by IDL get 
PASS main.title: IDL set to 1.5 should not throw 
PASS main.title: IDL set to 1.5 followed by getAttribute() 
PASS main.title: IDL set to 1.5 followed by IDL get 
PASS main.title: IDL set to true should not throw 
PASS main.title: IDL set to true followed by getAttribute() 
PASS main.title: IDL set to true followed by IDL get 
PASS main.title: IDL set to false should not throw 
PASS main.title: IDL set to false followed by getAttribute() 
PASS main.title: IDL set to false followed by IDL get 
PASS main.title: IDL set to object "[object Object]" should not throw 
PASS main.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS main.title: IDL set to object "[object Object]" followed by IDL get 
PASS main.title: IDL set to NaN should not throw 
PASS main.title: IDL set to NaN followed by getAttribute() 
PASS main.title: IDL set to NaN followed by IDL get 
PASS main.title: IDL set to Infinity should not throw 
PASS main.title: IDL set to Infinity followed by getAttribute() 
PASS main.title: IDL set to Infinity followed by IDL get 
PASS main.title: IDL set to -Infinity should not throw 
PASS main.title: IDL set to -Infinity followed by getAttribute() 
PASS main.title: IDL set to -Infinity followed by IDL get 
PASS main.title: IDL set to "\0" should not throw 
PASS main.title: IDL set to "\0" followed by getAttribute() 
PASS main.title: IDL set to "\0" followed by IDL get 
PASS main.title: IDL set to null should not throw 
PASS main.title: IDL set to null followed by getAttribute() 
PASS main.title: IDL set to null followed by IDL get 
PASS main.title: IDL set to object "test-toString" should not throw 
PASS main.title: IDL set to object "test-toString" followed by getAttribute() 
PASS main.title: IDL set to object "test-toString" followed by IDL get 
PASS main.title: IDL set to object "test-valueOf" should not throw 
PASS main.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS main.title: IDL set to object "test-valueOf" followed by IDL get 
PASS main.lang: typeof IDL attribute 
PASS main.lang: IDL get with DOM attribute unset 
PASS main.lang: setAttribute() to "" followed by getAttribute() 
PASS main.lang: setAttribute() to "" followed by IDL get 
PASS main.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS main.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS main.lang: setAttribute() to undefined followed by getAttribute() 
PASS main.lang: setAttribute() to undefined followed by IDL get 
PASS main.lang: setAttribute() to 7 followed by getAttribute() 
PASS main.lang: setAttribute() to 7 followed by IDL get 
PASS main.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS main.lang: setAttribute() to 1.5 followed by IDL get 
PASS main.lang: setAttribute() to true followed by getAttribute() 
PASS main.lang: setAttribute() to true followed by IDL get 
PASS main.lang: setAttribute() to false followed by getAttribute() 
PASS main.lang: setAttribute() to false followed by IDL get 
PASS main.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS main.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS main.lang: setAttribute() to NaN followed by getAttribute() 
PASS main.lang: setAttribute() to NaN followed by IDL get 
PASS main.lang: setAttribute() to Infinity followed by getAttribute() 
PASS main.lang: setAttribute() to Infinity followed by IDL get 
PASS main.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS main.lang: setAttribute() to -Infinity followed by IDL get 
PASS main.lang: setAttribute() to "\0" followed by getAttribute() 
PASS main.lang: setAttribute() to "\0" followed by IDL get 
PASS main.lang: setAttribute() to null followed by getAttribute() 
PASS main.lang: setAttribute() to null followed by IDL get 
PASS main.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS main.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS main.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS main.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS main.lang: IDL set to "" should not throw 
PASS main.lang: IDL set to "" followed by getAttribute() 
PASS main.lang: IDL set to "" followed by IDL get 
PASS main.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS main.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS main.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS main.lang: IDL set to undefined should not throw 
PASS main.lang: IDL set to undefined followed by getAttribute() 
PASS main.lang: IDL set to undefined followed by IDL get 
PASS main.lang: IDL set to 7 should not throw 
PASS main.lang: IDL set to 7 followed by getAttribute() 
PASS main.lang: IDL set to 7 followed by IDL get 
PASS main.lang: IDL set to 1.5 should not throw 
PASS main.lang: IDL set to 1.5 followed by getAttribute() 
PASS main.lang: IDL set to 1.5 followed by IDL get 
PASS main.lang: IDL set to true should not throw 
PASS main.lang: IDL set to true followed by getAttribute() 
PASS main.lang: IDL set to true followed by IDL get 
PASS main.lang: IDL set to false should not throw 
PASS main.lang: IDL set to false followed by getAttribute() 
PASS main.lang: IDL set to false followed by IDL get 
PASS main.lang: IDL set to object "[object Object]" should not throw 
PASS main.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS main.lang: IDL set to object "[object Object]" followed by IDL get 
PASS main.lang: IDL set to NaN should not throw 
PASS main.lang: IDL set to NaN followed by getAttribute() 
PASS main.lang: IDL set to NaN followed by IDL get 
PASS main.lang: IDL set to Infinity should not throw 
PASS main.lang: IDL set to Infinity followed by getAttribute() 
PASS main.lang: IDL set to Infinity followed by IDL get 
PASS main.lang: IDL set to -Infinity should not throw 
PASS main.lang: IDL set to -Infinity followed by getAttribute() 
PASS main.lang: IDL set to -Infinity followed by IDL get 
PASS main.lang: IDL set to "\0" should not throw 
PASS main.lang: IDL set to "\0" followed by getAttribute() 
PASS main.lang: IDL set to "\0" followed by IDL get 
PASS main.lang: IDL set to null should not throw 
PASS main.lang: IDL set to null followed by getAttribute() 
PASS main.lang: IDL set to null followed by IDL get 
PASS main.lang: IDL set to object "test-toString" should not throw 
PASS main.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS main.lang: IDL set to object "test-toString" followed by IDL get 
PASS main.lang: IDL set to object "test-valueOf" should not throw 
PASS main.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS main.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS main.dir: typeof IDL attribute 
PASS main.dir: IDL get with DOM attribute unset 
PASS main.dir: setAttribute() to "" followed by getAttribute() 
PASS main.dir: setAttribute() to "" followed by IDL get 
PASS main.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS main.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS main.dir: setAttribute() to undefined followed by getAttribute() 
PASS main.dir: setAttribute() to undefined followed by IDL get 
PASS main.dir: setAttribute() to 7 followed by getAttribute() 
PASS main.dir: setAttribute() to 7 followed by IDL get 
PASS main.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS main.dir: setAttribute() to 1.5 followed by IDL get 
PASS main.dir: setAttribute() to true followed by getAttribute() 
PASS main.dir: setAttribute() to true followed by IDL get 
PASS main.dir: setAttribute() to false followed by getAttribute() 
PASS main.dir: setAttribute() to false followed by IDL get 
PASS main.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS main.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS main.dir: setAttribute() to NaN followed by getAttribute() 
PASS main.dir: setAttribute() to NaN followed by IDL get 
PASS main.dir: setAttribute() to Infinity followed by getAttribute() 
PASS main.dir: setAttribute() to Infinity followed by IDL get 
PASS main.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS main.dir: setAttribute() to -Infinity followed by IDL get 
PASS main.dir: setAttribute() to "\0" followed by getAttribute() 
PASS main.dir: setAttribute() to "\0" followed by IDL get 
PASS main.dir: setAttribute() to null followed by getAttribute() 
PASS main.dir: setAttribute() to null followed by IDL get 
PASS main.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS main.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS main.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS main.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS main.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS main.dir: setAttribute() to "ltr" followed by IDL get 
PASS main.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS main.dir: setAttribute() to "xltr" followed by IDL get 
PASS main.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS main.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS main.dir: setAttribute() to "tr" followed by getAttribute() 
PASS main.dir: setAttribute() to "tr" followed by IDL get 
PASS main.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS main.dir: setAttribute() to "LTR" followed by IDL get 
PASS main.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS main.dir: setAttribute() to "rtl" followed by IDL get 
PASS main.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS main.dir: setAttribute() to "xrtl" followed by IDL get 
PASS main.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS main.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS main.dir: setAttribute() to "tl" followed by getAttribute() 
PASS main.dir: setAttribute() to "tl" followed by IDL get 
PASS main.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS main.dir: setAttribute() to "RTL" followed by IDL get 
PASS main.dir: setAttribute() to "auto" followed by getAttribute() 
PASS main.dir: setAttribute() to "auto" followed by IDL get 
PASS main.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS main.dir: setAttribute() to "xauto" followed by IDL get 
PASS main.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS main.dir: setAttribute() to "auto\0" followed by IDL get 
PASS main.dir: setAttribute() to "uto" followed by getAttribute() 
PASS main.dir: setAttribute() to "uto" followed by IDL get 
PASS main.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS main.dir: setAttribute() to "AUTO" followed by IDL get 
PASS main.dir: IDL set to "" should not throw 
PASS main.dir: IDL set to "" followed by getAttribute() 
PASS main.dir: IDL set to "" followed by IDL get 
PASS main.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS main.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS main.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS main.dir: IDL set to undefined should not throw 
PASS main.dir: IDL set to undefined followed by getAttribute() 
PASS main.dir: IDL set to undefined followed by IDL get 
PASS main.dir: IDL set to 7 should not throw 
PASS main.dir: IDL set to 7 followed by getAttribute() 
PASS main.dir: IDL set to 7 followed by IDL get 
PASS main.dir: IDL set to 1.5 should not throw 
PASS main.dir: IDL set to 1.5 followed by getAttribute() 
PASS main.dir: IDL set to 1.5 followed by IDL get 
PASS main.dir: IDL set to true should not throw 
PASS main.dir: IDL set to true followed by getAttribute() 
PASS main.dir: IDL set to true followed by IDL get 
PASS main.dir: IDL set to false should not throw 
PASS main.dir: IDL set to false followed by getAttribute() 
PASS main.dir: IDL set to false followed by IDL get 
PASS main.dir: IDL set to object "[object Object]" should not throw 
PASS main.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS main.dir: IDL set to object "[object Object]" followed by IDL get 
PASS main.dir: IDL set to NaN should not throw 
PASS main.dir: IDL set to NaN followed by getAttribute() 
PASS main.dir: IDL set to NaN followed by IDL get 
PASS main.dir: IDL set to Infinity should not throw 
PASS main.dir: IDL set to Infinity followed by getAttribute() 
PASS main.dir: IDL set to Infinity followed by IDL get 
PASS main.dir: IDL set to -Infinity should not throw 
PASS main.dir: IDL set to -Infinity followed by getAttribute() 
PASS main.dir: IDL set to -Infinity followed by IDL get 
PASS main.dir: IDL set to "\0" should not throw 
PASS main.dir: IDL set to "\0" followed by getAttribute() 
PASS main.dir: IDL set to "\0" followed by IDL get 
PASS main.dir: IDL set to null should not throw 
PASS main.dir: IDL set to null followed by IDL get 
PASS main.dir: IDL set to object "test-toString" should not throw 
PASS main.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS main.dir: IDL set to object "test-toString" followed by IDL get 
PASS main.dir: IDL set to object "test-valueOf" should not throw 
PASS main.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS main.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS main.dir: IDL set to "ltr" should not throw 
PASS main.dir: IDL set to "ltr" followed by getAttribute() 
PASS main.dir: IDL set to "ltr" followed by IDL get 
PASS main.dir: IDL set to "xltr" should not throw 
PASS main.dir: IDL set to "xltr" followed by getAttribute() 
PASS main.dir: IDL set to "xltr" followed by IDL get 
PASS main.dir: IDL set to "ltr\0" should not throw 
PASS main.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS main.dir: IDL set to "ltr\0" followed by IDL get 
PASS main.dir: IDL set to "tr" should not throw 
PASS main.dir: IDL set to "tr" followed by getAttribute() 
PASS main.dir: IDL set to "tr" followed by IDL get 
PASS main.dir: IDL set to "LTR" should not throw 
PASS main.dir: IDL set to "LTR" followed by getAttribute() 
PASS main.dir: IDL set to "LTR" followed by IDL get 
PASS main.dir: IDL set to "rtl" should not throw 
PASS main.dir: IDL set to "rtl" followed by getAttribute() 
PASS main.dir: IDL set to "rtl" followed by IDL get 
PASS main.dir: IDL set to "xrtl" should not throw 
PASS main.dir: IDL set to "xrtl" followed by getAttribute() 
PASS main.dir: IDL set to "xrtl" followed by IDL get 
PASS main.dir: IDL set to "rtl\0" should not throw 
PASS main.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS main.dir: IDL set to "rtl\0" followed by IDL get 
PASS main.dir: IDL set to "tl" should not throw 
PASS main.dir: IDL set to "tl" followed by getAttribute() 
PASS main.dir: IDL set to "tl" followed by IDL get 
PASS main.dir: IDL set to "RTL" should not throw 
PASS main.dir: IDL set to "RTL" followed by getAttribute() 
PASS main.dir: IDL set to "RTL" followed by IDL get 
PASS main.dir: IDL set to "auto" should not throw 
PASS main.dir: IDL set to "auto" followed by getAttribute() 
PASS main.dir: IDL set to "auto" followed by IDL get 
PASS main.dir: IDL set to "xauto" should not throw 
PASS main.dir: IDL set to "xauto" followed by getAttribute() 
PASS main.dir: IDL set to "xauto" followed by IDL get 
PASS main.dir: IDL set to "auto\0" should not throw 
PASS main.dir: IDL set to "auto\0" followed by getAttribute() 
PASS main.dir: IDL set to "auto\0" followed by IDL get 
PASS main.dir: IDL set to "uto" should not throw 
PASS main.dir: IDL set to "uto" followed by getAttribute() 
PASS main.dir: IDL set to "uto" followed by IDL get 
PASS main.dir: IDL set to "AUTO" should not throw 
PASS main.dir: IDL set to "AUTO" followed by getAttribute() 
PASS main.dir: IDL set to "AUTO" followed by IDL get 
PASS main.className (<main class>): typeof IDL attribute 
PASS main.className (<main class>): IDL get with DOM attribute unset 
PASS main.className (<main class>): setAttribute() to "" followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to "" followed by IDL get 
PASS main.className (<main class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS main.className (<main class>): setAttribute() to undefined followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to undefined followed by IDL get 
PASS main.className (<main class>): setAttribute() to 7 followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to 7 followed by IDL get 
PASS main.className (<main class>): setAttribute() to 1.5 followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to 1.5 followed by IDL get 
PASS main.className (<main class>): setAttribute() to true followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to true followed by IDL get 
PASS main.className (<main class>): setAttribute() to false followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to false followed by IDL get 
PASS main.className (<main class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS main.className (<main class>): setAttribute() to NaN followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to NaN followed by IDL get 
PASS main.className (<main class>): setAttribute() to Infinity followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to Infinity followed by IDL get 
PASS main.className (<main class>): setAttribute() to -Infinity followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to -Infinity followed by IDL get 
PASS main.className (<main class>): setAttribute() to "\0" followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to "\0" followed by IDL get 
PASS main.className (<main class>): setAttribute() to null followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to null followed by IDL get 
PASS main.className (<main class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to object "test-toString" followed by IDL get 
PASS main.className (<main class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS main.className (<main class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS main.className (<main class>): IDL set to "" should not throw 
PASS main.className (<main class>): IDL set to "" followed by getAttribute() 
PASS main.className (<main class>): IDL set to "" followed by IDL get 
PASS main.className (<main class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS main.className (<main class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS main.className (<main class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS main.className (<main class>): IDL set to undefined should not throw 
PASS main.className (<main class>): IDL set to undefined followed by getAttribute() 
PASS main.className (<main class>): IDL set to undefined followed by IDL get 
PASS main.className (<main class>): IDL set to 7 should not throw 
PASS main.className (<main class>): IDL set to 7 followed by getAttribute() 
PASS main.className (<main class>): IDL set to 7 followed by IDL get 
PASS main.className (<main class>): IDL set to 1.5 should not throw 
PASS main.className (<main class>): IDL set to 1.5 followed by getAttribute() 
PASS main.className (<main class>): IDL set to 1.5 followed by IDL get 
PASS main.className (<main class>): IDL set to true should not throw 
PASS main.className (<main class>): IDL set to true followed by getAttribute() 
PASS main.className (<main class>): IDL set to true followed by IDL get 
PASS main.className (<main class>): IDL set to false should not throw 
PASS main.className (<main class>): IDL set to false followed by getAttribute() 
PASS main.className (<main class>): IDL set to false followed by IDL get 
PASS main.className (<main class>): IDL set to object "[object Object]" should not throw 
PASS main.className (<main class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS main.className (<main class>): IDL set to object "[object Object]" followed by IDL get 
PASS main.className (<main class>): IDL set to NaN should not throw 
PASS main.className (<main class>): IDL set to NaN followed by getAttribute() 
PASS main.className (<main class>): IDL set to NaN followed by IDL get 
PASS main.className (<main class>): IDL set to Infinity should not throw 
PASS main.className (<main class>): IDL set to Infinity followed by getAttribute() 
PASS main.className (<main class>): IDL set to Infinity followed by IDL get 
PASS main.className (<main class>): IDL set to -Infinity should not throw 
PASS main.className (<main class>): IDL set to -Infinity followed by getAttribute() 
PASS main.className (<main class>): IDL set to -Infinity followed by IDL get 
PASS main.className (<main class>): IDL set to "\0" should not throw 
PASS main.className (<main class>): IDL set to "\0" followed by getAttribute() 
PASS main.className (<main class>): IDL set to "\0" followed by IDL get 
PASS main.className (<main class>): IDL set to null should not throw 
PASS main.className (<main class>): IDL set to null followed by getAttribute() 
PASS main.className (<main class>): IDL set to null followed by IDL get 
PASS main.className (<main class>): IDL set to object "test-toString" should not throw 
PASS main.className (<main class>): IDL set to object "test-toString" followed by getAttribute() 
PASS main.className (<main class>): IDL set to object "test-toString" followed by IDL get 
PASS main.className (<main class>): IDL set to object "test-valueOf" should not throw 
PASS main.className (<main class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS main.className (<main class>): IDL set to object "test-valueOf" followed by IDL get 
PASS main.hidden: typeof IDL attribute 
PASS main.hidden: IDL get with DOM attribute unset 
PASS main.hidden: setAttribute() to "" followed by getAttribute() 
PASS main.hidden: setAttribute() to "" followed by IDL get 
PASS main.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS main.hidden: setAttribute() to " foo " followed by IDL get 
PASS main.hidden: setAttribute() to undefined followed by getAttribute() 
PASS main.hidden: setAttribute() to undefined followed by IDL get 
PASS main.hidden: setAttribute() to null followed by getAttribute() 
PASS main.hidden: setAttribute() to null followed by IDL get 
PASS main.hidden: setAttribute() to 7 followed by getAttribute() 
PASS main.hidden: setAttribute() to 7 followed by IDL get 
PASS main.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS main.hidden: setAttribute() to 1.5 followed by IDL get 
PASS main.hidden: setAttribute() to true followed by getAttribute() 
PASS main.hidden: setAttribute() to true followed by IDL get 
PASS main.hidden: setAttribute() to false followed by getAttribute() 
PASS main.hidden: setAttribute() to false followed by IDL get 
PASS main.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS main.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS main.hidden: setAttribute() to NaN followed by getAttribute() 
PASS main.hidden: setAttribute() to NaN followed by IDL get 
PASS main.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS main.hidden: setAttribute() to Infinity followed by IDL get 
PASS main.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS main.hidden: setAttribute() to -Infinity followed by IDL get 
PASS main.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS main.hidden: setAttribute() to "\0" followed by IDL get 
PASS main.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS main.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS main.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS main.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS main.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS main.hidden: setAttribute() to "hidden" followed by IDL get 
PASS main.hidden: IDL set to "" should not throw 
PASS main.hidden: IDL set to "" followed by hasAttribute() 
PASS main.hidden: IDL set to "" followed by IDL get 
PASS main.hidden: IDL set to " foo " should not throw 
PASS main.hidden: IDL set to " foo " followed by hasAttribute() 
PASS main.hidden: IDL set to " foo " followed by IDL get 
PASS main.hidden: IDL set to undefined should not throw 
PASS main.hidden: IDL set to undefined followed by hasAttribute() 
PASS main.hidden: IDL set to undefined followed by IDL get 
PASS main.hidden: IDL set to null should not throw 
PASS main.hidden: IDL set to null followed by hasAttribute() 
PASS main.hidden: IDL set to null followed by IDL get 
PASS main.hidden: IDL set to 7 should not throw 
PASS main.hidden: IDL set to 7 followed by hasAttribute() 
PASS main.hidden: IDL set to 7 followed by IDL get 
PASS main.hidden: IDL set to 1.5 should not throw 
PASS main.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS main.hidden: IDL set to 1.5 followed by IDL get 
PASS main.hidden: IDL set to true should not throw 
PASS main.hidden: IDL set to true followed by hasAttribute() 
PASS main.hidden: IDL set to true followed by IDL get 
PASS main.hidden: IDL set to false should not throw 
PASS main.hidden: IDL set to false followed by hasAttribute() 
PASS main.hidden: IDL set to false followed by IDL get 
PASS main.hidden: IDL set to object "[object Object]" should not throw 
PASS main.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS main.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS main.hidden: IDL set to NaN should not throw 
PASS main.hidden: IDL set to NaN followed by hasAttribute() 
PASS main.hidden: IDL set to NaN followed by IDL get 
PASS main.hidden: IDL set to Infinity should not throw 
PASS main.hidden: IDL set to Infinity followed by hasAttribute() 
PASS main.hidden: IDL set to Infinity followed by IDL get 
PASS main.hidden: IDL set to -Infinity should not throw 
PASS main.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS main.hidden: IDL set to -Infinity followed by IDL get 
PASS main.hidden: IDL set to "\0" should not throw 
PASS main.hidden: IDL set to "\0" followed by hasAttribute() 
PASS main.hidden: IDL set to "\0" followed by IDL get 
PASS main.hidden: IDL set to object "test-toString" should not throw 
PASS main.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS main.hidden: IDL set to object "test-toString" followed by IDL get 
PASS main.hidden: IDL set to object "test-valueOf" should not throw 
PASS main.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS main.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS main.accessKey: typeof IDL attribute 
PASS main.accessKey: IDL get with DOM attribute unset 
PASS main.accessKey: setAttribute() to "" followed by getAttribute() 
PASS main.accessKey: setAttribute() to "" followed by IDL get 
PASS main.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS main.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS main.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS main.accessKey: setAttribute() to undefined followed by IDL get 
PASS main.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS main.accessKey: setAttribute() to 7 followed by IDL get 
PASS main.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS main.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS main.accessKey: setAttribute() to true followed by getAttribute() 
PASS main.accessKey: setAttribute() to true followed by IDL get 
PASS main.accessKey: setAttribute() to false followed by getAttribute() 
PASS main.accessKey: setAttribute() to false followed by IDL get 
PASS main.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS main.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS main.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS main.accessKey: setAttribute() to NaN followed by IDL get 
PASS main.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS main.accessKey: setAttribute() to Infinity followed by IDL get 
PASS main.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS main.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS main.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS main.accessKey: setAttribute() to "\0" followed by IDL get 
PASS main.accessKey: setAttribute() to null followed by getAttribute() 
PASS main.accessKey: setAttribute() to null followed by IDL get 
PASS main.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS main.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS main.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS main.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS main.accessKey: IDL set to "" should not throw 
PASS main.accessKey: IDL set to "" followed by getAttribute() 
PASS main.accessKey: IDL set to "" followed by IDL get 
PASS main.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS main.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS main.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS main.accessKey: IDL set to undefined should not throw 
PASS main.accessKey: IDL set to undefined followed by getAttribute() 
PASS main.accessKey: IDL set to undefined followed by IDL get 
PASS main.accessKey: IDL set to 7 should not throw 
PASS main.accessKey: IDL set to 7 followed by getAttribute() 
PASS main.accessKey: IDL set to 7 followed by IDL get 
PASS main.accessKey: IDL set to 1.5 should not throw 
PASS main.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS main.accessKey: IDL set to 1.5 followed by IDL get 
PASS main.accessKey: IDL set to true should not throw 
PASS main.accessKey: IDL set to true followed by getAttribute() 
PASS main.accessKey: IDL set to true followed by IDL get 
PASS main.accessKey: IDL set to false should not throw 
PASS main.accessKey: IDL set to false followed by getAttribute() 
PASS main.accessKey: IDL set to false followed by IDL get 
PASS main.accessKey: IDL set to object "[object Object]" should not throw 
PASS main.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS main.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS main.accessKey: IDL set to NaN should not throw 
PASS main.accessKey: IDL set to NaN followed by getAttribute() 
PASS main.accessKey: IDL set to NaN followed by IDL get 
PASS main.accessKey: IDL set to Infinity should not throw 
PASS main.accessKey: IDL set to Infinity followed by getAttribute() 
PASS main.accessKey: IDL set to Infinity followed by IDL get 
PASS main.accessKey: IDL set to -Infinity should not throw 
PASS main.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS main.accessKey: IDL set to -Infinity followed by IDL get 
PASS main.accessKey: IDL set to "\0" should not throw 
PASS main.accessKey: IDL set to "\0" followed by getAttribute() 
PASS main.accessKey: IDL set to "\0" followed by IDL get 
PASS main.accessKey: IDL set to null should not throw 
PASS main.accessKey: IDL set to null followed by getAttribute() 
PASS main.accessKey: IDL set to null followed by IDL get 
PASS main.accessKey: IDL set to object "test-toString" should not throw 
PASS main.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS main.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS main.accessKey: IDL set to object "test-valueOf" should not throw 
PASS main.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS main.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS main.tabIndex: typeof IDL attribute 
PASS main.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS main.tabIndex: setAttribute() to -36 followed by IDL get 
PASS main.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS main.tabIndex: setAttribute() to -1 followed by IDL get 
PASS main.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS main.tabIndex: setAttribute() to 0 followed by IDL get 
PASS main.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS main.tabIndex: setAttribute() to 1 followed by IDL get 
PASS main.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS main.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS main.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS main.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS main.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS main.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS main.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS main.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS main.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS main.tabIndex: setAttribute() to "0" followed by IDL get 
PASS main.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS main.tabIndex: setAttribute() to "1" followed by IDL get 
PASS main.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS main.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS main.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS main.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS main.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS main.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS main.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS main.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS main.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS main.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS main.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS main.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS main.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS main.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS main.tabIndex: IDL set to -36 should not throw 
PASS main.tabIndex: IDL set to -36 followed by getAttribute() 
PASS main.tabIndex: IDL set to -36 followed by IDL get 
PASS main.tabIndex: IDL set to -1 should not throw 
PASS main.tabIndex: IDL set to -1 followed by getAttribute() 
PASS main.tabIndex: IDL set to -1 followed by IDL get 
PASS main.tabIndex: IDL set to 0 should not throw 
PASS main.tabIndex: IDL set to 0 followed by getAttribute() 
PASS main.tabIndex: IDL set to 0 followed by IDL get 
PASS main.tabIndex: IDL set to 1 should not throw 
PASS main.tabIndex: IDL set to 1 followed by getAttribute() 
PASS main.tabIndex: IDL set to 1 followed by IDL get 
PASS main.tabIndex: IDL set to 2147483647 should not throw 
PASS main.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS main.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS main.tabIndex: IDL set to -2147483648 should not throw 
PASS main.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS main.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL main.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL main.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS main.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL main.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL main.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL main.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to null followed by getAttribute() 
FAIL main.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL main.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL main.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to true followed by getAttribute() 
FAIL main.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to false followed by getAttribute() 
FAIL main.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL main.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL main.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL main.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL main.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL main.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL main.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL main.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL main.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS main.itemScope: IDL set to "" should not throw 
FAIL main.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL main.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS main.itemScope: IDL set to " foo " should not throw 
PASS main.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL main.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS main.itemScope: IDL set to undefined should not throw 
FAIL main.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL main.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS main.itemScope: IDL set to null should not throw 
FAIL main.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL main.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS main.itemScope: IDL set to 7 should not throw 
PASS main.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL main.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS main.itemScope: IDL set to 1.5 should not throw 
PASS main.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL main.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS main.itemScope: IDL set to true should not throw 
PASS main.itemScope: IDL set to true followed by hasAttribute() 
PASS main.itemScope: IDL set to true followed by IDL get 
PASS main.itemScope: IDL set to false should not throw 
FAIL main.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS main.itemScope: IDL set to false followed by IDL get 
PASS main.itemScope: IDL set to object "[object Object]" should not throw 
PASS main.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL main.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS main.itemScope: IDL set to NaN should not throw 
FAIL main.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL main.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS main.itemScope: IDL set to Infinity should not throw 
PASS main.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL main.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS main.itemScope: IDL set to -Infinity should not throw 
PASS main.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL main.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS main.itemScope: IDL set to "\0" should not throw 
PASS main.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL main.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS main.itemScope: IDL set to object "test-toString" should not throw 
PASS main.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL main.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS main.itemScope: IDL set to object "test-valueOf" should not throw 
PASS main.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL main.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL main.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL main.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS main.itemId: setAttribute() to "" followed by getAttribute() 
FAIL main.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS main.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL main.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS main.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL main.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS main.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL main.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS main.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL main.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS main.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL main.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS main.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL main.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS main.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL main.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS main.itemId: setAttribute() to true followed by getAttribute() 
FAIL main.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS main.itemId: setAttribute() to false followed by getAttribute() 
FAIL main.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS main.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL main.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS main.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL main.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS main.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL main.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS main.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL main.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS main.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL main.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS main.itemId: setAttribute() to null followed by getAttribute() 
FAIL main.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS main.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL main.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS main.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL main.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS main.itemId: IDL set to "" should not throw 
FAIL main.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL main.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS main.itemId: IDL set to " foo " should not throw 
FAIL main.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL main.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS main.itemId: IDL set to "http://site.example/" should not throw 
FAIL main.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS main.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS main.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL main.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL main.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS main.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL main.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL main.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS main.itemId: IDL set to undefined should not throw 
FAIL main.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL main.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS main.itemId: IDL set to 7 should not throw 
FAIL main.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL main.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS main.itemId: IDL set to 1.5 should not throw 
FAIL main.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL main.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS main.itemId: IDL set to true should not throw 
FAIL main.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL main.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS main.itemId: IDL set to false should not throw 
FAIL main.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL main.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS main.itemId: IDL set to object "[object Object]" should not throw 
FAIL main.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL main.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS main.itemId: IDL set to NaN should not throw 
FAIL main.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL main.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS main.itemId: IDL set to Infinity should not throw 
FAIL main.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL main.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS main.itemId: IDL set to -Infinity should not throw 
FAIL main.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL main.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS main.itemId: IDL set to "\0" should not throw 
FAIL main.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL main.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS main.itemId: IDL set to null should not throw 
FAIL main.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL main.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS main.itemId: IDL set to object "test-toString" should not throw 
FAIL main.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL main.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS main.itemId: IDL set to object "test-valueOf" should not throw 
PASS main.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL main.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS div.title: typeof IDL attribute 
PASS div.title: IDL get with DOM attribute unset 
PASS div.title: setAttribute() to "" followed by getAttribute() 
PASS div.title: setAttribute() to "" followed by IDL get 
PASS div.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS div.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS div.title: setAttribute() to undefined followed by getAttribute() 
PASS div.title: setAttribute() to undefined followed by IDL get 
PASS div.title: setAttribute() to 7 followed by getAttribute() 
PASS div.title: setAttribute() to 7 followed by IDL get 
PASS div.title: setAttribute() to 1.5 followed by getAttribute() 
PASS div.title: setAttribute() to 1.5 followed by IDL get 
PASS div.title: setAttribute() to true followed by getAttribute() 
PASS div.title: setAttribute() to true followed by IDL get 
PASS div.title: setAttribute() to false followed by getAttribute() 
PASS div.title: setAttribute() to false followed by IDL get 
PASS div.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS div.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS div.title: setAttribute() to NaN followed by getAttribute() 
PASS div.title: setAttribute() to NaN followed by IDL get 
PASS div.title: setAttribute() to Infinity followed by getAttribute() 
PASS div.title: setAttribute() to Infinity followed by IDL get 
PASS div.title: setAttribute() to -Infinity followed by getAttribute() 
PASS div.title: setAttribute() to -Infinity followed by IDL get 
PASS div.title: setAttribute() to "\0" followed by getAttribute() 
PASS div.title: setAttribute() to "\0" followed by IDL get 
PASS div.title: setAttribute() to null followed by getAttribute() 
PASS div.title: setAttribute() to null followed by IDL get 
PASS div.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS div.title: setAttribute() to object "test-toString" followed by IDL get 
PASS div.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS div.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS div.title: IDL set to "" should not throw 
PASS div.title: IDL set to "" followed by getAttribute() 
PASS div.title: IDL set to "" followed by IDL get 
PASS div.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS div.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS div.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS div.title: IDL set to undefined should not throw 
PASS div.title: IDL set to undefined followed by getAttribute() 
PASS div.title: IDL set to undefined followed by IDL get 
PASS div.title: IDL set to 7 should not throw 
PASS div.title: IDL set to 7 followed by getAttribute() 
PASS div.title: IDL set to 7 followed by IDL get 
PASS div.title: IDL set to 1.5 should not throw 
PASS div.title: IDL set to 1.5 followed by getAttribute() 
PASS div.title: IDL set to 1.5 followed by IDL get 
PASS div.title: IDL set to true should not throw 
PASS div.title: IDL set to true followed by getAttribute() 
PASS div.title: IDL set to true followed by IDL get 
PASS div.title: IDL set to false should not throw 
PASS div.title: IDL set to false followed by getAttribute() 
PASS div.title: IDL set to false followed by IDL get 
PASS div.title: IDL set to object "[object Object]" should not throw 
PASS div.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS div.title: IDL set to object "[object Object]" followed by IDL get 
PASS div.title: IDL set to NaN should not throw 
PASS div.title: IDL set to NaN followed by getAttribute() 
PASS div.title: IDL set to NaN followed by IDL get 
PASS div.title: IDL set to Infinity should not throw 
PASS div.title: IDL set to Infinity followed by getAttribute() 
PASS div.title: IDL set to Infinity followed by IDL get 
PASS div.title: IDL set to -Infinity should not throw 
PASS div.title: IDL set to -Infinity followed by getAttribute() 
PASS div.title: IDL set to -Infinity followed by IDL get 
PASS div.title: IDL set to "\0" should not throw 
PASS div.title: IDL set to "\0" followed by getAttribute() 
PASS div.title: IDL set to "\0" followed by IDL get 
PASS div.title: IDL set to null should not throw 
PASS div.title: IDL set to null followed by getAttribute() 
PASS div.title: IDL set to null followed by IDL get 
PASS div.title: IDL set to object "test-toString" should not throw 
PASS div.title: IDL set to object "test-toString" followed by getAttribute() 
PASS div.title: IDL set to object "test-toString" followed by IDL get 
PASS div.title: IDL set to object "test-valueOf" should not throw 
PASS div.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS div.title: IDL set to object "test-valueOf" followed by IDL get 
PASS div.lang: typeof IDL attribute 
PASS div.lang: IDL get with DOM attribute unset 
PASS div.lang: setAttribute() to "" followed by getAttribute() 
PASS div.lang: setAttribute() to "" followed by IDL get 
PASS div.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS div.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS div.lang: setAttribute() to undefined followed by getAttribute() 
PASS div.lang: setAttribute() to undefined followed by IDL get 
PASS div.lang: setAttribute() to 7 followed by getAttribute() 
PASS div.lang: setAttribute() to 7 followed by IDL get 
PASS div.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS div.lang: setAttribute() to 1.5 followed by IDL get 
PASS div.lang: setAttribute() to true followed by getAttribute() 
PASS div.lang: setAttribute() to true followed by IDL get 
PASS div.lang: setAttribute() to false followed by getAttribute() 
PASS div.lang: setAttribute() to false followed by IDL get 
PASS div.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS div.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS div.lang: setAttribute() to NaN followed by getAttribute() 
PASS div.lang: setAttribute() to NaN followed by IDL get 
PASS div.lang: setAttribute() to Infinity followed by getAttribute() 
PASS div.lang: setAttribute() to Infinity followed by IDL get 
PASS div.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS div.lang: setAttribute() to -Infinity followed by IDL get 
PASS div.lang: setAttribute() to "\0" followed by getAttribute() 
PASS div.lang: setAttribute() to "\0" followed by IDL get 
PASS div.lang: setAttribute() to null followed by getAttribute() 
PASS div.lang: setAttribute() to null followed by IDL get 
PASS div.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS div.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS div.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS div.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS div.lang: IDL set to "" should not throw 
PASS div.lang: IDL set to "" followed by getAttribute() 
PASS div.lang: IDL set to "" followed by IDL get 
PASS div.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS div.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS div.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS div.lang: IDL set to undefined should not throw 
PASS div.lang: IDL set to undefined followed by getAttribute() 
PASS div.lang: IDL set to undefined followed by IDL get 
PASS div.lang: IDL set to 7 should not throw 
PASS div.lang: IDL set to 7 followed by getAttribute() 
PASS div.lang: IDL set to 7 followed by IDL get 
PASS div.lang: IDL set to 1.5 should not throw 
PASS div.lang: IDL set to 1.5 followed by getAttribute() 
PASS div.lang: IDL set to 1.5 followed by IDL get 
PASS div.lang: IDL set to true should not throw 
PASS div.lang: IDL set to true followed by getAttribute() 
PASS div.lang: IDL set to true followed by IDL get 
PASS div.lang: IDL set to false should not throw 
PASS div.lang: IDL set to false followed by getAttribute() 
PASS div.lang: IDL set to false followed by IDL get 
PASS div.lang: IDL set to object "[object Object]" should not throw 
PASS div.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS div.lang: IDL set to object "[object Object]" followed by IDL get 
PASS div.lang: IDL set to NaN should not throw 
PASS div.lang: IDL set to NaN followed by getAttribute() 
PASS div.lang: IDL set to NaN followed by IDL get 
PASS div.lang: IDL set to Infinity should not throw 
PASS div.lang: IDL set to Infinity followed by getAttribute() 
PASS div.lang: IDL set to Infinity followed by IDL get 
PASS div.lang: IDL set to -Infinity should not throw 
PASS div.lang: IDL set to -Infinity followed by getAttribute() 
PASS div.lang: IDL set to -Infinity followed by IDL get 
PASS div.lang: IDL set to "\0" should not throw 
PASS div.lang: IDL set to "\0" followed by getAttribute() 
PASS div.lang: IDL set to "\0" followed by IDL get 
PASS div.lang: IDL set to null should not throw 
PASS div.lang: IDL set to null followed by getAttribute() 
PASS div.lang: IDL set to null followed by IDL get 
PASS div.lang: IDL set to object "test-toString" should not throw 
PASS div.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS div.lang: IDL set to object "test-toString" followed by IDL get 
PASS div.lang: IDL set to object "test-valueOf" should not throw 
PASS div.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS div.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS div.dir: typeof IDL attribute 
PASS div.dir: IDL get with DOM attribute unset 
PASS div.dir: setAttribute() to "" followed by getAttribute() 
PASS div.dir: setAttribute() to "" followed by IDL get 
PASS div.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS div.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS div.dir: setAttribute() to undefined followed by getAttribute() 
PASS div.dir: setAttribute() to undefined followed by IDL get 
PASS div.dir: setAttribute() to 7 followed by getAttribute() 
PASS div.dir: setAttribute() to 7 followed by IDL get 
PASS div.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS div.dir: setAttribute() to 1.5 followed by IDL get 
PASS div.dir: setAttribute() to true followed by getAttribute() 
PASS div.dir: setAttribute() to true followed by IDL get 
PASS div.dir: setAttribute() to false followed by getAttribute() 
PASS div.dir: setAttribute() to false followed by IDL get 
PASS div.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS div.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS div.dir: setAttribute() to NaN followed by getAttribute() 
PASS div.dir: setAttribute() to NaN followed by IDL get 
PASS div.dir: setAttribute() to Infinity followed by getAttribute() 
PASS div.dir: setAttribute() to Infinity followed by IDL get 
PASS div.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS div.dir: setAttribute() to -Infinity followed by IDL get 
PASS div.dir: setAttribute() to "\0" followed by getAttribute() 
PASS div.dir: setAttribute() to "\0" followed by IDL get 
PASS div.dir: setAttribute() to null followed by getAttribute() 
PASS div.dir: setAttribute() to null followed by IDL get 
PASS div.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS div.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS div.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS div.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS div.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS div.dir: setAttribute() to "ltr" followed by IDL get 
PASS div.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS div.dir: setAttribute() to "xltr" followed by IDL get 
PASS div.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS div.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS div.dir: setAttribute() to "tr" followed by getAttribute() 
PASS div.dir: setAttribute() to "tr" followed by IDL get 
PASS div.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS div.dir: setAttribute() to "LTR" followed by IDL get 
PASS div.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS div.dir: setAttribute() to "rtl" followed by IDL get 
PASS div.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS div.dir: setAttribute() to "xrtl" followed by IDL get 
PASS div.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS div.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS div.dir: setAttribute() to "tl" followed by getAttribute() 
PASS div.dir: setAttribute() to "tl" followed by IDL get 
PASS div.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS div.dir: setAttribute() to "RTL" followed by IDL get 
PASS div.dir: setAttribute() to "auto" followed by getAttribute() 
PASS div.dir: setAttribute() to "auto" followed by IDL get 
PASS div.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS div.dir: setAttribute() to "xauto" followed by IDL get 
PASS div.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS div.dir: setAttribute() to "auto\0" followed by IDL get 
PASS div.dir: setAttribute() to "uto" followed by getAttribute() 
PASS div.dir: setAttribute() to "uto" followed by IDL get 
PASS div.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS div.dir: setAttribute() to "AUTO" followed by IDL get 
PASS div.dir: IDL set to "" should not throw 
PASS div.dir: IDL set to "" followed by getAttribute() 
PASS div.dir: IDL set to "" followed by IDL get 
PASS div.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS div.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS div.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS div.dir: IDL set to undefined should not throw 
PASS div.dir: IDL set to undefined followed by getAttribute() 
PASS div.dir: IDL set to undefined followed by IDL get 
PASS div.dir: IDL set to 7 should not throw 
PASS div.dir: IDL set to 7 followed by getAttribute() 
PASS div.dir: IDL set to 7 followed by IDL get 
PASS div.dir: IDL set to 1.5 should not throw 
PASS div.dir: IDL set to 1.5 followed by getAttribute() 
PASS div.dir: IDL set to 1.5 followed by IDL get 
PASS div.dir: IDL set to true should not throw 
PASS div.dir: IDL set to true followed by getAttribute() 
PASS div.dir: IDL set to true followed by IDL get 
PASS div.dir: IDL set to false should not throw 
PASS div.dir: IDL set to false followed by getAttribute() 
PASS div.dir: IDL set to false followed by IDL get 
PASS div.dir: IDL set to object "[object Object]" should not throw 
PASS div.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS div.dir: IDL set to object "[object Object]" followed by IDL get 
PASS div.dir: IDL set to NaN should not throw 
PASS div.dir: IDL set to NaN followed by getAttribute() 
PASS div.dir: IDL set to NaN followed by IDL get 
PASS div.dir: IDL set to Infinity should not throw 
PASS div.dir: IDL set to Infinity followed by getAttribute() 
PASS div.dir: IDL set to Infinity followed by IDL get 
PASS div.dir: IDL set to -Infinity should not throw 
PASS div.dir: IDL set to -Infinity followed by getAttribute() 
PASS div.dir: IDL set to -Infinity followed by IDL get 
PASS div.dir: IDL set to "\0" should not throw 
PASS div.dir: IDL set to "\0" followed by getAttribute() 
PASS div.dir: IDL set to "\0" followed by IDL get 
PASS div.dir: IDL set to null should not throw 
PASS div.dir: IDL set to null followed by IDL get 
PASS div.dir: IDL set to object "test-toString" should not throw 
PASS div.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS div.dir: IDL set to object "test-toString" followed by IDL get 
PASS div.dir: IDL set to object "test-valueOf" should not throw 
PASS div.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS div.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS div.dir: IDL set to "ltr" should not throw 
PASS div.dir: IDL set to "ltr" followed by getAttribute() 
PASS div.dir: IDL set to "ltr" followed by IDL get 
PASS div.dir: IDL set to "xltr" should not throw 
PASS div.dir: IDL set to "xltr" followed by getAttribute() 
PASS div.dir: IDL set to "xltr" followed by IDL get 
PASS div.dir: IDL set to "ltr\0" should not throw 
PASS div.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS div.dir: IDL set to "ltr\0" followed by IDL get 
PASS div.dir: IDL set to "tr" should not throw 
PASS div.dir: IDL set to "tr" followed by getAttribute() 
PASS div.dir: IDL set to "tr" followed by IDL get 
PASS div.dir: IDL set to "LTR" should not throw 
PASS div.dir: IDL set to "LTR" followed by getAttribute() 
PASS div.dir: IDL set to "LTR" followed by IDL get 
PASS div.dir: IDL set to "rtl" should not throw 
PASS div.dir: IDL set to "rtl" followed by getAttribute() 
PASS div.dir: IDL set to "rtl" followed by IDL get 
PASS div.dir: IDL set to "xrtl" should not throw 
PASS div.dir: IDL set to "xrtl" followed by getAttribute() 
PASS div.dir: IDL set to "xrtl" followed by IDL get 
PASS div.dir: IDL set to "rtl\0" should not throw 
PASS div.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS div.dir: IDL set to "rtl\0" followed by IDL get 
PASS div.dir: IDL set to "tl" should not throw 
PASS div.dir: IDL set to "tl" followed by getAttribute() 
PASS div.dir: IDL set to "tl" followed by IDL get 
PASS div.dir: IDL set to "RTL" should not throw 
PASS div.dir: IDL set to "RTL" followed by getAttribute() 
PASS div.dir: IDL set to "RTL" followed by IDL get 
PASS div.dir: IDL set to "auto" should not throw 
PASS div.dir: IDL set to "auto" followed by getAttribute() 
PASS div.dir: IDL set to "auto" followed by IDL get 
PASS div.dir: IDL set to "xauto" should not throw 
PASS div.dir: IDL set to "xauto" followed by getAttribute() 
PASS div.dir: IDL set to "xauto" followed by IDL get 
PASS div.dir: IDL set to "auto\0" should not throw 
PASS div.dir: IDL set to "auto\0" followed by getAttribute() 
PASS div.dir: IDL set to "auto\0" followed by IDL get 
PASS div.dir: IDL set to "uto" should not throw 
PASS div.dir: IDL set to "uto" followed by getAttribute() 
PASS div.dir: IDL set to "uto" followed by IDL get 
PASS div.dir: IDL set to "AUTO" should not throw 
PASS div.dir: IDL set to "AUTO" followed by getAttribute() 
PASS div.dir: IDL set to "AUTO" followed by IDL get 
PASS div.className (<div class>): typeof IDL attribute 
PASS div.className (<div class>): IDL get with DOM attribute unset 
PASS div.className (<div class>): setAttribute() to "" followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to "" followed by IDL get 
PASS div.className (<div class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS div.className (<div class>): setAttribute() to undefined followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to undefined followed by IDL get 
PASS div.className (<div class>): setAttribute() to 7 followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to 7 followed by IDL get 
PASS div.className (<div class>): setAttribute() to 1.5 followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to 1.5 followed by IDL get 
PASS div.className (<div class>): setAttribute() to true followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to true followed by IDL get 
PASS div.className (<div class>): setAttribute() to false followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to false followed by IDL get 
PASS div.className (<div class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS div.className (<div class>): setAttribute() to NaN followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to NaN followed by IDL get 
PASS div.className (<div class>): setAttribute() to Infinity followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to Infinity followed by IDL get 
PASS div.className (<div class>): setAttribute() to -Infinity followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to -Infinity followed by IDL get 
PASS div.className (<div class>): setAttribute() to "\0" followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to "\0" followed by IDL get 
PASS div.className (<div class>): setAttribute() to null followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to null followed by IDL get 
PASS div.className (<div class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to object "test-toString" followed by IDL get 
PASS div.className (<div class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS div.className (<div class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS div.className (<div class>): IDL set to "" should not throw 
PASS div.className (<div class>): IDL set to "" followed by getAttribute() 
PASS div.className (<div class>): IDL set to "" followed by IDL get 
PASS div.className (<div class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS div.className (<div class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS div.className (<div class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS div.className (<div class>): IDL set to undefined should not throw 
PASS div.className (<div class>): IDL set to undefined followed by getAttribute() 
PASS div.className (<div class>): IDL set to undefined followed by IDL get 
PASS div.className (<div class>): IDL set to 7 should not throw 
PASS div.className (<div class>): IDL set to 7 followed by getAttribute() 
PASS div.className (<div class>): IDL set to 7 followed by IDL get 
PASS div.className (<div class>): IDL set to 1.5 should not throw 
PASS div.className (<div class>): IDL set to 1.5 followed by getAttribute() 
PASS div.className (<div class>): IDL set to 1.5 followed by IDL get 
PASS div.className (<div class>): IDL set to true should not throw 
PASS div.className (<div class>): IDL set to true followed by getAttribute() 
PASS div.className (<div class>): IDL set to true followed by IDL get 
PASS div.className (<div class>): IDL set to false should not throw 
PASS div.className (<div class>): IDL set to false followed by getAttribute() 
PASS div.className (<div class>): IDL set to false followed by IDL get 
PASS div.className (<div class>): IDL set to object "[object Object]" should not throw 
PASS div.className (<div class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS div.className (<div class>): IDL set to object "[object Object]" followed by IDL get 
PASS div.className (<div class>): IDL set to NaN should not throw 
PASS div.className (<div class>): IDL set to NaN followed by getAttribute() 
PASS div.className (<div class>): IDL set to NaN followed by IDL get 
PASS div.className (<div class>): IDL set to Infinity should not throw 
PASS div.className (<div class>): IDL set to Infinity followed by getAttribute() 
PASS div.className (<div class>): IDL set to Infinity followed by IDL get 
PASS div.className (<div class>): IDL set to -Infinity should not throw 
PASS div.className (<div class>): IDL set to -Infinity followed by getAttribute() 
PASS div.className (<div class>): IDL set to -Infinity followed by IDL get 
PASS div.className (<div class>): IDL set to "\0" should not throw 
PASS div.className (<div class>): IDL set to "\0" followed by getAttribute() 
PASS div.className (<div class>): IDL set to "\0" followed by IDL get 
PASS div.className (<div class>): IDL set to null should not throw 
PASS div.className (<div class>): IDL set to null followed by getAttribute() 
PASS div.className (<div class>): IDL set to null followed by IDL get 
PASS div.className (<div class>): IDL set to object "test-toString" should not throw 
PASS div.className (<div class>): IDL set to object "test-toString" followed by getAttribute() 
PASS div.className (<div class>): IDL set to object "test-toString" followed by IDL get 
PASS div.className (<div class>): IDL set to object "test-valueOf" should not throw 
PASS div.className (<div class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS div.className (<div class>): IDL set to object "test-valueOf" followed by IDL get 
PASS div.hidden: typeof IDL attribute 
PASS div.hidden: IDL get with DOM attribute unset 
PASS div.hidden: setAttribute() to "" followed by getAttribute() 
PASS div.hidden: setAttribute() to "" followed by IDL get 
PASS div.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS div.hidden: setAttribute() to " foo " followed by IDL get 
PASS div.hidden: setAttribute() to undefined followed by getAttribute() 
PASS div.hidden: setAttribute() to undefined followed by IDL get 
PASS div.hidden: setAttribute() to null followed by getAttribute() 
PASS div.hidden: setAttribute() to null followed by IDL get 
PASS div.hidden: setAttribute() to 7 followed by getAttribute() 
PASS div.hidden: setAttribute() to 7 followed by IDL get 
PASS div.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS div.hidden: setAttribute() to 1.5 followed by IDL get 
PASS div.hidden: setAttribute() to true followed by getAttribute() 
PASS div.hidden: setAttribute() to true followed by IDL get 
PASS div.hidden: setAttribute() to false followed by getAttribute() 
PASS div.hidden: setAttribute() to false followed by IDL get 
PASS div.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS div.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS div.hidden: setAttribute() to NaN followed by getAttribute() 
PASS div.hidden: setAttribute() to NaN followed by IDL get 
PASS div.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS div.hidden: setAttribute() to Infinity followed by IDL get 
PASS div.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS div.hidden: setAttribute() to -Infinity followed by IDL get 
PASS div.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS div.hidden: setAttribute() to "\0" followed by IDL get 
PASS div.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS div.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS div.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS div.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS div.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS div.hidden: setAttribute() to "hidden" followed by IDL get 
PASS div.hidden: IDL set to "" should not throw 
PASS div.hidden: IDL set to "" followed by hasAttribute() 
PASS div.hidden: IDL set to "" followed by IDL get 
PASS div.hidden: IDL set to " foo " should not throw 
PASS div.hidden: IDL set to " foo " followed by hasAttribute() 
PASS div.hidden: IDL set to " foo " followed by IDL get 
PASS div.hidden: IDL set to undefined should not throw 
PASS div.hidden: IDL set to undefined followed by hasAttribute() 
PASS div.hidden: IDL set to undefined followed by IDL get 
PASS div.hidden: IDL set to null should not throw 
PASS div.hidden: IDL set to null followed by hasAttribute() 
PASS div.hidden: IDL set to null followed by IDL get 
PASS div.hidden: IDL set to 7 should not throw 
PASS div.hidden: IDL set to 7 followed by hasAttribute() 
PASS div.hidden: IDL set to 7 followed by IDL get 
PASS div.hidden: IDL set to 1.5 should not throw 
PASS div.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS div.hidden: IDL set to 1.5 followed by IDL get 
PASS div.hidden: IDL set to true should not throw 
PASS div.hidden: IDL set to true followed by hasAttribute() 
PASS div.hidden: IDL set to true followed by IDL get 
PASS div.hidden: IDL set to false should not throw 
PASS div.hidden: IDL set to false followed by hasAttribute() 
PASS div.hidden: IDL set to false followed by IDL get 
PASS div.hidden: IDL set to object "[object Object]" should not throw 
PASS div.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS div.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS div.hidden: IDL set to NaN should not throw 
PASS div.hidden: IDL set to NaN followed by hasAttribute() 
PASS div.hidden: IDL set to NaN followed by IDL get 
PASS div.hidden: IDL set to Infinity should not throw 
PASS div.hidden: IDL set to Infinity followed by hasAttribute() 
PASS div.hidden: IDL set to Infinity followed by IDL get 
PASS div.hidden: IDL set to -Infinity should not throw 
PASS div.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS div.hidden: IDL set to -Infinity followed by IDL get 
PASS div.hidden: IDL set to "\0" should not throw 
PASS div.hidden: IDL set to "\0" followed by hasAttribute() 
PASS div.hidden: IDL set to "\0" followed by IDL get 
PASS div.hidden: IDL set to object "test-toString" should not throw 
PASS div.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS div.hidden: IDL set to object "test-toString" followed by IDL get 
PASS div.hidden: IDL set to object "test-valueOf" should not throw 
PASS div.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS div.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS div.accessKey: typeof IDL attribute 
PASS div.accessKey: IDL get with DOM attribute unset 
PASS div.accessKey: setAttribute() to "" followed by getAttribute() 
PASS div.accessKey: setAttribute() to "" followed by IDL get 
PASS div.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS div.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS div.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS div.accessKey: setAttribute() to undefined followed by IDL get 
PASS div.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS div.accessKey: setAttribute() to 7 followed by IDL get 
PASS div.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS div.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS div.accessKey: setAttribute() to true followed by getAttribute() 
PASS div.accessKey: setAttribute() to true followed by IDL get 
PASS div.accessKey: setAttribute() to false followed by getAttribute() 
PASS div.accessKey: setAttribute() to false followed by IDL get 
PASS div.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS div.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS div.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS div.accessKey: setAttribute() to NaN followed by IDL get 
PASS div.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS div.accessKey: setAttribute() to Infinity followed by IDL get 
PASS div.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS div.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS div.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS div.accessKey: setAttribute() to "\0" followed by IDL get 
PASS div.accessKey: setAttribute() to null followed by getAttribute() 
PASS div.accessKey: setAttribute() to null followed by IDL get 
PASS div.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS div.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS div.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS div.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS div.accessKey: IDL set to "" should not throw 
PASS div.accessKey: IDL set to "" followed by getAttribute() 
PASS div.accessKey: IDL set to "" followed by IDL get 
PASS div.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS div.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS div.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS div.accessKey: IDL set to undefined should not throw 
PASS div.accessKey: IDL set to undefined followed by getAttribute() 
PASS div.accessKey: IDL set to undefined followed by IDL get 
PASS div.accessKey: IDL set to 7 should not throw 
PASS div.accessKey: IDL set to 7 followed by getAttribute() 
PASS div.accessKey: IDL set to 7 followed by IDL get 
PASS div.accessKey: IDL set to 1.5 should not throw 
PASS div.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS div.accessKey: IDL set to 1.5 followed by IDL get 
PASS div.accessKey: IDL set to true should not throw 
PASS div.accessKey: IDL set to true followed by getAttribute() 
PASS div.accessKey: IDL set to true followed by IDL get 
PASS div.accessKey: IDL set to false should not throw 
PASS div.accessKey: IDL set to false followed by getAttribute() 
PASS div.accessKey: IDL set to false followed by IDL get 
PASS div.accessKey: IDL set to object "[object Object]" should not throw 
PASS div.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS div.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS div.accessKey: IDL set to NaN should not throw 
PASS div.accessKey: IDL set to NaN followed by getAttribute() 
PASS div.accessKey: IDL set to NaN followed by IDL get 
PASS div.accessKey: IDL set to Infinity should not throw 
PASS div.accessKey: IDL set to Infinity followed by getAttribute() 
PASS div.accessKey: IDL set to Infinity followed by IDL get 
PASS div.accessKey: IDL set to -Infinity should not throw 
PASS div.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS div.accessKey: IDL set to -Infinity followed by IDL get 
PASS div.accessKey: IDL set to "\0" should not throw 
PASS div.accessKey: IDL set to "\0" followed by getAttribute() 
PASS div.accessKey: IDL set to "\0" followed by IDL get 
PASS div.accessKey: IDL set to null should not throw 
PASS div.accessKey: IDL set to null followed by getAttribute() 
PASS div.accessKey: IDL set to null followed by IDL get 
PASS div.accessKey: IDL set to object "test-toString" should not throw 
PASS div.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS div.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS div.accessKey: IDL set to object "test-valueOf" should not throw 
PASS div.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS div.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS div.tabIndex: typeof IDL attribute 
PASS div.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS div.tabIndex: setAttribute() to -36 followed by IDL get 
PASS div.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS div.tabIndex: setAttribute() to -1 followed by IDL get 
PASS div.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS div.tabIndex: setAttribute() to 0 followed by IDL get 
PASS div.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS div.tabIndex: setAttribute() to 1 followed by IDL get 
PASS div.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS div.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS div.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS div.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS div.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS div.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS div.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS div.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS div.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS div.tabIndex: setAttribute() to "0" followed by IDL get 
PASS div.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS div.tabIndex: setAttribute() to "1" followed by IDL get 
PASS div.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS div.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS div.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS div.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS div.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS div.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS div.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS div.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS div.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS div.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS div.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS div.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS div.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS div.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS div.tabIndex: IDL set to -36 should not throw 
PASS div.tabIndex: IDL set to -36 followed by getAttribute() 
PASS div.tabIndex: IDL set to -36 followed by IDL get 
PASS div.tabIndex: IDL set to -1 should not throw 
PASS div.tabIndex: IDL set to -1 followed by getAttribute() 
PASS div.tabIndex: IDL set to -1 followed by IDL get 
PASS div.tabIndex: IDL set to 0 should not throw 
PASS div.tabIndex: IDL set to 0 followed by getAttribute() 
PASS div.tabIndex: IDL set to 0 followed by IDL get 
PASS div.tabIndex: IDL set to 1 should not throw 
PASS div.tabIndex: IDL set to 1 followed by getAttribute() 
PASS div.tabIndex: IDL set to 1 followed by IDL get 
PASS div.tabIndex: IDL set to 2147483647 should not throw 
PASS div.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS div.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS div.tabIndex: IDL set to -2147483648 should not throw 
PASS div.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS div.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS div.align: typeof IDL attribute 
PASS div.align: IDL get with DOM attribute unset 
PASS div.align: setAttribute() to "" followed by getAttribute() 
PASS div.align: setAttribute() to "" followed by IDL get 
PASS div.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS div.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS div.align: setAttribute() to undefined followed by getAttribute() 
PASS div.align: setAttribute() to undefined followed by IDL get 
PASS div.align: setAttribute() to 7 followed by getAttribute() 
PASS div.align: setAttribute() to 7 followed by IDL get 
PASS div.align: setAttribute() to 1.5 followed by getAttribute() 
PASS div.align: setAttribute() to 1.5 followed by IDL get 
PASS div.align: setAttribute() to true followed by getAttribute() 
PASS div.align: setAttribute() to true followed by IDL get 
PASS div.align: setAttribute() to false followed by getAttribute() 
PASS div.align: setAttribute() to false followed by IDL get 
PASS div.align: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS div.align: setAttribute() to object "[object Object]" followed by IDL get 
PASS div.align: setAttribute() to NaN followed by getAttribute() 
PASS div.align: setAttribute() to NaN followed by IDL get 
PASS div.align: setAttribute() to Infinity followed by getAttribute() 
PASS div.align: setAttribute() to Infinity followed by IDL get 
PASS div.align: setAttribute() to -Infinity followed by getAttribute() 
PASS div.align: setAttribute() to -Infinity followed by IDL get 
PASS div.align: setAttribute() to "\0" followed by getAttribute() 
PASS div.align: setAttribute() to "\0" followed by IDL get 
PASS div.align: setAttribute() to null followed by getAttribute() 
PASS div.align: setAttribute() to null followed by IDL get 
PASS div.align: setAttribute() to object "test-toString" followed by getAttribute() 
PASS div.align: setAttribute() to object "test-toString" followed by IDL get 
PASS div.align: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS div.align: setAttribute() to object "test-valueOf" followed by IDL get 
PASS div.align: IDL set to "" should not throw 
PASS div.align: IDL set to "" followed by getAttribute() 
PASS div.align: IDL set to "" followed by IDL get 
PASS div.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS div.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS div.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS div.align: IDL set to undefined should not throw 
PASS div.align: IDL set to undefined followed by getAttribute() 
PASS div.align: IDL set to undefined followed by IDL get 
PASS div.align: IDL set to 7 should not throw 
PASS div.align: IDL set to 7 followed by getAttribute() 
PASS div.align: IDL set to 7 followed by IDL get 
PASS div.align: IDL set to 1.5 should not throw 
PASS div.align: IDL set to 1.5 followed by getAttribute() 
PASS div.align: IDL set to 1.5 followed by IDL get 
PASS div.align: IDL set to true should not throw 
PASS div.align: IDL set to true followed by getAttribute() 
PASS div.align: IDL set to true followed by IDL get 
PASS div.align: IDL set to false should not throw 
PASS div.align: IDL set to false followed by getAttribute() 
PASS div.align: IDL set to false followed by IDL get 
PASS div.align: IDL set to object "[object Object]" should not throw 
PASS div.align: IDL set to object "[object Object]" followed by getAttribute() 
PASS div.align: IDL set to object "[object Object]" followed by IDL get 
PASS div.align: IDL set to NaN should not throw 
PASS div.align: IDL set to NaN followed by getAttribute() 
PASS div.align: IDL set to NaN followed by IDL get 
PASS div.align: IDL set to Infinity should not throw 
PASS div.align: IDL set to Infinity followed by getAttribute() 
PASS div.align: IDL set to Infinity followed by IDL get 
PASS div.align: IDL set to -Infinity should not throw 
PASS div.align: IDL set to -Infinity followed by getAttribute() 
PASS div.align: IDL set to -Infinity followed by IDL get 
PASS div.align: IDL set to "\0" should not throw 
PASS div.align: IDL set to "\0" followed by getAttribute() 
PASS div.align: IDL set to "\0" followed by IDL get 
PASS div.align: IDL set to null should not throw 
PASS div.align: IDL set to null followed by getAttribute() 
PASS div.align: IDL set to null followed by IDL get 
PASS div.align: IDL set to object "test-toString" should not throw 
PASS div.align: IDL set to object "test-toString" followed by getAttribute() 
PASS div.align: IDL set to object "test-toString" followed by IDL get 
PASS div.align: IDL set to object "test-valueOf" should not throw 
PASS div.align: IDL set to object "test-valueOf" followed by getAttribute() 
PASS div.align: IDL set to object "test-valueOf" followed by IDL get 
FAIL div.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL div.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS div.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL div.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL div.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL div.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to null followed by getAttribute() 
FAIL div.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL div.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL div.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to true followed by getAttribute() 
FAIL div.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to false followed by getAttribute() 
FAIL div.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL div.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL div.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL div.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL div.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL div.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL div.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL div.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL div.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS div.itemScope: IDL set to "" should not throw 
FAIL div.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL div.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS div.itemScope: IDL set to " foo " should not throw 
PASS div.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL div.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS div.itemScope: IDL set to undefined should not throw 
FAIL div.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL div.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS div.itemScope: IDL set to null should not throw 
FAIL div.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL div.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS div.itemScope: IDL set to 7 should not throw 
PASS div.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL div.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS div.itemScope: IDL set to 1.5 should not throw 
PASS div.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL div.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS div.itemScope: IDL set to true should not throw 
PASS div.itemScope: IDL set to true followed by hasAttribute() 
PASS div.itemScope: IDL set to true followed by IDL get 
PASS div.itemScope: IDL set to false should not throw 
FAIL div.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS div.itemScope: IDL set to false followed by IDL get 
PASS div.itemScope: IDL set to object "[object Object]" should not throw 
PASS div.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL div.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS div.itemScope: IDL set to NaN should not throw 
FAIL div.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL div.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS div.itemScope: IDL set to Infinity should not throw 
PASS div.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL div.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS div.itemScope: IDL set to -Infinity should not throw 
PASS div.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL div.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS div.itemScope: IDL set to "\0" should not throw 
PASS div.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL div.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS div.itemScope: IDL set to object "test-toString" should not throw 
PASS div.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL div.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS div.itemScope: IDL set to object "test-valueOf" should not throw 
PASS div.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL div.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL div.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL div.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS div.itemId: setAttribute() to "" followed by getAttribute() 
FAIL div.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS div.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL div.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS div.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL div.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS div.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL div.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS div.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL div.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS div.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL div.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS div.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL div.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS div.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL div.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS div.itemId: setAttribute() to true followed by getAttribute() 
FAIL div.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS div.itemId: setAttribute() to false followed by getAttribute() 
FAIL div.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS div.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL div.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS div.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL div.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS div.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL div.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS div.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL div.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS div.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL div.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS div.itemId: setAttribute() to null followed by getAttribute() 
FAIL div.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS div.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL div.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS div.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL div.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS div.itemId: IDL set to "" should not throw 
FAIL div.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL div.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS div.itemId: IDL set to " foo " should not throw 
FAIL div.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL div.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS div.itemId: IDL set to "http://site.example/" should not throw 
FAIL div.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS div.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS div.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL div.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL div.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS div.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL div.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL div.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS div.itemId: IDL set to undefined should not throw 
FAIL div.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL div.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS div.itemId: IDL set to 7 should not throw 
FAIL div.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL div.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS div.itemId: IDL set to 1.5 should not throw 
FAIL div.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL div.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS div.itemId: IDL set to true should not throw 
FAIL div.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL div.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS div.itemId: IDL set to false should not throw 
FAIL div.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL div.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS div.itemId: IDL set to object "[object Object]" should not throw 
FAIL div.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL div.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS div.itemId: IDL set to NaN should not throw 
FAIL div.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL div.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS div.itemId: IDL set to Infinity should not throw 
FAIL div.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL div.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS div.itemId: IDL set to -Infinity should not throw 
FAIL div.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL div.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS div.itemId: IDL set to "\0" should not throw 
FAIL div.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL div.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS div.itemId: IDL set to null should not throw 
FAIL div.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL div.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS div.itemId: IDL set to object "test-toString" should not throw 
FAIL div.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL div.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS div.itemId: IDL set to object "test-valueOf" should not throw 
PASS div.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL div.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL meta.itemValue (<meta content>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL meta.itemValue (<meta content>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to "" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to undefined followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to 7 followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to 1.5 followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to true followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to false followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to NaN followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to Infinity followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to -Infinity followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to "\0" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to null followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS meta.itemValue (<meta content>): IDL set to "" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to "" followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to undefined should not throw 
FAIL meta.itemValue (<meta content>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS meta.itemValue (<meta content>): IDL set to 7 should not throw 
FAIL meta.itemValue (<meta content>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS meta.itemValue (<meta content>): IDL set to 1.5 should not throw 
FAIL meta.itemValue (<meta content>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS meta.itemValue (<meta content>): IDL set to true should not throw 
FAIL meta.itemValue (<meta content>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS meta.itemValue (<meta content>): IDL set to false should not throw 
FAIL meta.itemValue (<meta content>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS meta.itemValue (<meta content>): IDL set to object "[object Object]" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS meta.itemValue (<meta content>): IDL set to NaN should not throw 
FAIL meta.itemValue (<meta content>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS meta.itemValue (<meta content>): IDL set to Infinity should not throw 
FAIL meta.itemValue (<meta content>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS meta.itemValue (<meta content>): IDL set to -Infinity should not throw 
FAIL meta.itemValue (<meta content>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS meta.itemValue (<meta content>): IDL set to "\0" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to "\0" followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to null should not throw 
FAIL meta.itemValue (<meta content>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS meta.itemValue (<meta content>): IDL set to object "test-toString" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS meta.itemValue (<meta content>): IDL set to object "test-valueOf" should not throw 
PASS meta.itemValue (<meta content>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
FAIL audio.itemValue (<audio src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL audio.itemValue (<audio src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to " foo " followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to undefined followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to 7 followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to true followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to false followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to NaN followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to Infinity followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "\0" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to null followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS audio.itemValue (<audio src>): IDL set to "" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS audio.itemValue (<audio src>): IDL set to " foo " should not throw 
FAIL audio.itemValue (<audio src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS audio.itemValue (<audio src>): IDL set to "http://site.example/" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS audio.itemValue (<audio src>): IDL set to "http://site.example/" followed by IDL get 
PASS audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS audio.itemValue (<audio src>): IDL set to undefined should not throw 
FAIL audio.itemValue (<audio src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS audio.itemValue (<audio src>): IDL set to 7 should not throw 
FAIL audio.itemValue (<audio src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS audio.itemValue (<audio src>): IDL set to 1.5 should not throw 
FAIL audio.itemValue (<audio src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS audio.itemValue (<audio src>): IDL set to true should not throw 
FAIL audio.itemValue (<audio src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS audio.itemValue (<audio src>): IDL set to false should not throw 
FAIL audio.itemValue (<audio src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS audio.itemValue (<audio src>): IDL set to object "[object Object]" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS audio.itemValue (<audio src>): IDL set to NaN should not throw 
FAIL audio.itemValue (<audio src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS audio.itemValue (<audio src>): IDL set to Infinity should not throw 
FAIL audio.itemValue (<audio src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS audio.itemValue (<audio src>): IDL set to -Infinity should not throw 
FAIL audio.itemValue (<audio src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS audio.itemValue (<audio src>): IDL set to "\0" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS audio.itemValue (<audio src>): IDL set to null should not throw 
FAIL audio.itemValue (<audio src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS audio.itemValue (<audio src>): IDL set to object "test-toString" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS audio.itemValue (<audio src>): IDL set to object "test-valueOf" should not throw 
PASS audio.itemValue (<audio src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL embed.itemValue (<embed src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL embed.itemValue (<embed src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to " foo " followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to undefined followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to 7 followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to true followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to false followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to NaN followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to Infinity followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "\0" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to null followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS embed.itemValue (<embed src>): IDL set to "" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS embed.itemValue (<embed src>): IDL set to " foo " should not throw 
FAIL embed.itemValue (<embed src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS embed.itemValue (<embed src>): IDL set to "http://site.example/" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS embed.itemValue (<embed src>): IDL set to "http://site.example/" followed by IDL get 
PASS embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS embed.itemValue (<embed src>): IDL set to undefined should not throw 
FAIL embed.itemValue (<embed src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS embed.itemValue (<embed src>): IDL set to 7 should not throw 
FAIL embed.itemValue (<embed src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS embed.itemValue (<embed src>): IDL set to 1.5 should not throw 
FAIL embed.itemValue (<embed src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS embed.itemValue (<embed src>): IDL set to true should not throw 
FAIL embed.itemValue (<embed src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS embed.itemValue (<embed src>): IDL set to false should not throw 
FAIL embed.itemValue (<embed src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS embed.itemValue (<embed src>): IDL set to object "[object Object]" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS embed.itemValue (<embed src>): IDL set to NaN should not throw 
FAIL embed.itemValue (<embed src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS embed.itemValue (<embed src>): IDL set to Infinity should not throw 
FAIL embed.itemValue (<embed src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS embed.itemValue (<embed src>): IDL set to -Infinity should not throw 
FAIL embed.itemValue (<embed src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS embed.itemValue (<embed src>): IDL set to "\0" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS embed.itemValue (<embed src>): IDL set to null should not throw 
FAIL embed.itemValue (<embed src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS embed.itemValue (<embed src>): IDL set to object "test-toString" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS embed.itemValue (<embed src>): IDL set to object "test-valueOf" should not throw 
PASS embed.itemValue (<embed src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL iframe.itemValue (<iframe src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL iframe.itemValue (<iframe src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to " foo " followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to undefined followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to 7 followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to true followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to false followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to NaN followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to Infinity followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "\0" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to null followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): IDL set to "" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS iframe.itemValue (<iframe src>): IDL set to " foo " should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS iframe.itemValue (<iframe src>): IDL set to "http://site.example/" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS iframe.itemValue (<iframe src>): IDL set to "http://site.example/" followed by IDL get 
PASS iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS iframe.itemValue (<iframe src>): IDL set to undefined should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): IDL set to 7 should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS iframe.itemValue (<iframe src>): IDL set to 1.5 should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS iframe.itemValue (<iframe src>): IDL set to true should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS iframe.itemValue (<iframe src>): IDL set to false should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS iframe.itemValue (<iframe src>): IDL set to object "[object Object]" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS iframe.itemValue (<iframe src>): IDL set to NaN should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS iframe.itemValue (<iframe src>): IDL set to Infinity should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS iframe.itemValue (<iframe src>): IDL set to -Infinity should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS iframe.itemValue (<iframe src>): IDL set to "\0" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS iframe.itemValue (<iframe src>): IDL set to null should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS iframe.itemValue (<iframe src>): IDL set to object "test-toString" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" should not throw 
PASS iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL img.itemValue (<img src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL img.itemValue (<img src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to " foo " followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to undefined followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to 7 followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to true followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to false followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to NaN followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to Infinity followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "\0" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to null followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS img.itemValue (<img src>): IDL set to "" should not throw 
FAIL img.itemValue (<img src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS img.itemValue (<img src>): IDL set to " foo " should not throw 
FAIL img.itemValue (<img src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS img.itemValue (<img src>): IDL set to "http://site.example/" should not throw 
FAIL img.itemValue (<img src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS img.itemValue (<img src>): IDL set to "http://site.example/" followed by IDL get 
PASS img.itemValue (<img src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL img.itemValue (<img src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS img.itemValue (<img src>): IDL set to undefined should not throw 
FAIL img.itemValue (<img src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS img.itemValue (<img src>): IDL set to 7 should not throw 
FAIL img.itemValue (<img src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS img.itemValue (<img src>): IDL set to 1.5 should not throw 
FAIL img.itemValue (<img src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS img.itemValue (<img src>): IDL set to true should not throw 
FAIL img.itemValue (<img src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS img.itemValue (<img src>): IDL set to false should not throw 
FAIL img.itemValue (<img src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS img.itemValue (<img src>): IDL set to object "[object Object]" should not throw 
FAIL img.itemValue (<img src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS img.itemValue (<img src>): IDL set to NaN should not throw 
FAIL img.itemValue (<img src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS img.itemValue (<img src>): IDL set to Infinity should not throw 
FAIL img.itemValue (<img src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS img.itemValue (<img src>): IDL set to -Infinity should not throw 
FAIL img.itemValue (<img src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS img.itemValue (<img src>): IDL set to "\0" should not throw 
FAIL img.itemValue (<img src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS img.itemValue (<img src>): IDL set to null should not throw 
FAIL img.itemValue (<img src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS img.itemValue (<img src>): IDL set to object "test-toString" should not throw 
FAIL img.itemValue (<img src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS img.itemValue (<img src>): IDL set to object "test-valueOf" should not throw 
PASS img.itemValue (<img src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL img.itemValue (<img src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL source.itemValue (<source src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL source.itemValue (<source src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to " foo " followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to undefined followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to 7 followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to true followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to false followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to NaN followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to Infinity followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "\0" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to null followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS source.itemValue (<source src>): IDL set to "" should not throw 
FAIL source.itemValue (<source src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS source.itemValue (<source src>): IDL set to " foo " should not throw 
FAIL source.itemValue (<source src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS source.itemValue (<source src>): IDL set to "http://site.example/" should not throw 
FAIL source.itemValue (<source src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS source.itemValue (<source src>): IDL set to "http://site.example/" followed by IDL get 
PASS source.itemValue (<source src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL source.itemValue (<source src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS source.itemValue (<source src>): IDL set to undefined should not throw 
FAIL source.itemValue (<source src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS source.itemValue (<source src>): IDL set to 7 should not throw 
FAIL source.itemValue (<source src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS source.itemValue (<source src>): IDL set to 1.5 should not throw 
FAIL source.itemValue (<source src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS source.itemValue (<source src>): IDL set to true should not throw 
FAIL source.itemValue (<source src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS source.itemValue (<source src>): IDL set to false should not throw 
FAIL source.itemValue (<source src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS source.itemValue (<source src>): IDL set to object "[object Object]" should not throw 
FAIL source.itemValue (<source src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS source.itemValue (<source src>): IDL set to NaN should not throw 
FAIL source.itemValue (<source src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS source.itemValue (<source src>): IDL set to Infinity should not throw 
FAIL source.itemValue (<source src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS source.itemValue (<source src>): IDL set to -Infinity should not throw 
FAIL source.itemValue (<source src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS source.itemValue (<source src>): IDL set to "\0" should not throw 
FAIL source.itemValue (<source src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS source.itemValue (<source src>): IDL set to null should not throw 
FAIL source.itemValue (<source src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS source.itemValue (<source src>): IDL set to object "test-toString" should not throw 
FAIL source.itemValue (<source src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS source.itemValue (<source src>): IDL set to object "test-valueOf" should not throw 
PASS source.itemValue (<source src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL source.itemValue (<source src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL track.itemValue (<track src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL track.itemValue (<track src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to " foo " followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to undefined followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to 7 followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to true followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to false followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to NaN followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to Infinity followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "\0" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to null followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS track.itemValue (<track src>): IDL set to "" should not throw 
FAIL track.itemValue (<track src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS track.itemValue (<track src>): IDL set to " foo " should not throw 
FAIL track.itemValue (<track src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS track.itemValue (<track src>): IDL set to "http://site.example/" should not throw 
FAIL track.itemValue (<track src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS track.itemValue (<track src>): IDL set to "http://site.example/" followed by IDL get 
PASS track.itemValue (<track src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL track.itemValue (<track src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS track.itemValue (<track src>): IDL set to undefined should not throw 
FAIL track.itemValue (<track src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS track.itemValue (<track src>): IDL set to 7 should not throw 
FAIL track.itemValue (<track src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS track.itemValue (<track src>): IDL set to 1.5 should not throw 
FAIL track.itemValue (<track src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS track.itemValue (<track src>): IDL set to true should not throw 
FAIL track.itemValue (<track src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS track.itemValue (<track src>): IDL set to false should not throw 
FAIL track.itemValue (<track src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS track.itemValue (<track src>): IDL set to object "[object Object]" should not throw 
FAIL track.itemValue (<track src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS track.itemValue (<track src>): IDL set to NaN should not throw 
FAIL track.itemValue (<track src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS track.itemValue (<track src>): IDL set to Infinity should not throw 
FAIL track.itemValue (<track src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS track.itemValue (<track src>): IDL set to -Infinity should not throw 
FAIL track.itemValue (<track src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS track.itemValue (<track src>): IDL set to "\0" should not throw 
FAIL track.itemValue (<track src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS track.itemValue (<track src>): IDL set to null should not throw 
FAIL track.itemValue (<track src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS track.itemValue (<track src>): IDL set to object "test-toString" should not throw 
FAIL track.itemValue (<track src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS track.itemValue (<track src>): IDL set to object "test-valueOf" should not throw 
PASS track.itemValue (<track src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL track.itemValue (<track src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL video.itemValue (<video src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL video.itemValue (<video src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to " foo " followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to undefined followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to 7 followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to true followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to false followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to NaN followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to Infinity followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "\0" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to null followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS video.itemValue (<video src>): IDL set to "" should not throw 
FAIL video.itemValue (<video src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS video.itemValue (<video src>): IDL set to " foo " should not throw 
FAIL video.itemValue (<video src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS video.itemValue (<video src>): IDL set to "http://site.example/" should not throw 
FAIL video.itemValue (<video src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS video.itemValue (<video src>): IDL set to "http://site.example/" followed by IDL get 
PASS video.itemValue (<video src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL video.itemValue (<video src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS video.itemValue (<video src>): IDL set to undefined should not throw 
FAIL video.itemValue (<video src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS video.itemValue (<video src>): IDL set to 7 should not throw 
FAIL video.itemValue (<video src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS video.itemValue (<video src>): IDL set to 1.5 should not throw 
FAIL video.itemValue (<video src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS video.itemValue (<video src>): IDL set to true should not throw 
FAIL video.itemValue (<video src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS video.itemValue (<video src>): IDL set to false should not throw 
FAIL video.itemValue (<video src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS video.itemValue (<video src>): IDL set to object "[object Object]" should not throw 
FAIL video.itemValue (<video src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS video.itemValue (<video src>): IDL set to NaN should not throw 
FAIL video.itemValue (<video src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS video.itemValue (<video src>): IDL set to Infinity should not throw 
FAIL video.itemValue (<video src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS video.itemValue (<video src>): IDL set to -Infinity should not throw 
FAIL video.itemValue (<video src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS video.itemValue (<video src>): IDL set to "\0" should not throw 
FAIL video.itemValue (<video src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS video.itemValue (<video src>): IDL set to null should not throw 
FAIL video.itemValue (<video src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS video.itemValue (<video src>): IDL set to object "test-toString" should not throw 
FAIL video.itemValue (<video src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS video.itemValue (<video src>): IDL set to object "test-valueOf" should not throw 
PASS video.itemValue (<video src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL video.itemValue (<video src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL a.itemValue (<a href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL a.itemValue (<a href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to " foo " followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to undefined followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to 7 followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to true followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to false followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to NaN followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to Infinity followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "\0" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to null followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS a.itemValue (<a href>): IDL set to "" should not throw 
FAIL a.itemValue (<a href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS a.itemValue (<a href>): IDL set to " foo " should not throw 
FAIL a.itemValue (<a href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS a.itemValue (<a href>): IDL set to "http://site.example/" should not throw 
FAIL a.itemValue (<a href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS a.itemValue (<a href>): IDL set to "http://site.example/" followed by IDL get 
PASS a.itemValue (<a href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL a.itemValue (<a href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS a.itemValue (<a href>): IDL set to undefined should not throw 
FAIL a.itemValue (<a href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS a.itemValue (<a href>): IDL set to 7 should not throw 
FAIL a.itemValue (<a href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS a.itemValue (<a href>): IDL set to 1.5 should not throw 
FAIL a.itemValue (<a href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS a.itemValue (<a href>): IDL set to true should not throw 
FAIL a.itemValue (<a href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS a.itemValue (<a href>): IDL set to false should not throw 
FAIL a.itemValue (<a href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS a.itemValue (<a href>): IDL set to object "[object Object]" should not throw 
FAIL a.itemValue (<a href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS a.itemValue (<a href>): IDL set to NaN should not throw 
FAIL a.itemValue (<a href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS a.itemValue (<a href>): IDL set to Infinity should not throw 
FAIL a.itemValue (<a href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS a.itemValue (<a href>): IDL set to -Infinity should not throw 
FAIL a.itemValue (<a href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS a.itemValue (<a href>): IDL set to "\0" should not throw 
FAIL a.itemValue (<a href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS a.itemValue (<a href>): IDL set to null should not throw 
FAIL a.itemValue (<a href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS a.itemValue (<a href>): IDL set to object "test-toString" should not throw 
FAIL a.itemValue (<a href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS a.itemValue (<a href>): IDL set to object "test-valueOf" should not throw 
PASS a.itemValue (<a href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL a.itemValue (<a href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL area.itemValue (<area href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL area.itemValue (<area href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to " foo " followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to undefined followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to 7 followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to true followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to false followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to NaN followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to Infinity followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "\0" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to null followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS area.itemValue (<area href>): IDL set to "" should not throw 
FAIL area.itemValue (<area href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS area.itemValue (<area href>): IDL set to " foo " should not throw 
FAIL area.itemValue (<area href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS area.itemValue (<area href>): IDL set to "http://site.example/" should not throw 
FAIL area.itemValue (<area href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS area.itemValue (<area href>): IDL set to "http://site.example/" followed by IDL get 
PASS area.itemValue (<area href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL area.itemValue (<area href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS area.itemValue (<area href>): IDL set to undefined should not throw 
FAIL area.itemValue (<area href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS area.itemValue (<area href>): IDL set to 7 should not throw 
FAIL area.itemValue (<area href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS area.itemValue (<area href>): IDL set to 1.5 should not throw 
FAIL area.itemValue (<area href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS area.itemValue (<area href>): IDL set to true should not throw 
FAIL area.itemValue (<area href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS area.itemValue (<area href>): IDL set to false should not throw 
FAIL area.itemValue (<area href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS area.itemValue (<area href>): IDL set to object "[object Object]" should not throw 
FAIL area.itemValue (<area href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS area.itemValue (<area href>): IDL set to NaN should not throw 
FAIL area.itemValue (<area href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS area.itemValue (<area href>): IDL set to Infinity should not throw 
FAIL area.itemValue (<area href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS area.itemValue (<area href>): IDL set to -Infinity should not throw 
FAIL area.itemValue (<area href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS area.itemValue (<area href>): IDL set to "\0" should not throw 
FAIL area.itemValue (<area href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS area.itemValue (<area href>): IDL set to null should not throw 
FAIL area.itemValue (<area href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS area.itemValue (<area href>): IDL set to object "test-toString" should not throw 
FAIL area.itemValue (<area href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS area.itemValue (<area href>): IDL set to object "test-valueOf" should not throw 
PASS area.itemValue (<area href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL area.itemValue (<area href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL link.itemValue (<link href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL link.itemValue (<link href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to " foo " followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to undefined followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to 7 followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to true followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to false followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to NaN followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to Infinity followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "\0" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to null followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS link.itemValue (<link href>): IDL set to "" should not throw 
FAIL link.itemValue (<link href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS link.itemValue (<link href>): IDL set to " foo " should not throw 
FAIL link.itemValue (<link href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS link.itemValue (<link href>): IDL set to "http://site.example/" should not throw 
FAIL link.itemValue (<link href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS link.itemValue (<link href>): IDL set to "http://site.example/" followed by IDL get 
PASS link.itemValue (<link href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL link.itemValue (<link href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS link.itemValue (<link href>): IDL set to undefined should not throw 
FAIL link.itemValue (<link href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS link.itemValue (<link href>): IDL set to 7 should not throw 
FAIL link.itemValue (<link href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS link.itemValue (<link href>): IDL set to 1.5 should not throw 
FAIL link.itemValue (<link href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS link.itemValue (<link href>): IDL set to true should not throw 
FAIL link.itemValue (<link href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS link.itemValue (<link href>): IDL set to false should not throw 
FAIL link.itemValue (<link href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS link.itemValue (<link href>): IDL set to object "[object Object]" should not throw 
FAIL link.itemValue (<link href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS link.itemValue (<link href>): IDL set to NaN should not throw 
FAIL link.itemValue (<link href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS link.itemValue (<link href>): IDL set to Infinity should not throw 
FAIL link.itemValue (<link href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS link.itemValue (<link href>): IDL set to -Infinity should not throw 
FAIL link.itemValue (<link href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS link.itemValue (<link href>): IDL set to "\0" should not throw 
FAIL link.itemValue (<link href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS link.itemValue (<link href>): IDL set to null should not throw 
FAIL link.itemValue (<link href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS link.itemValue (<link href>): IDL set to object "test-toString" should not throw 
FAIL link.itemValue (<link href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS link.itemValue (<link href>): IDL set to object "test-valueOf" should not throw 
PASS link.itemValue (<link href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL link.itemValue (<link href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL object.itemValue (<object data>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL object.itemValue (<object data>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to " foo " followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to undefined followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to 7 followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to 1.5 followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to true followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to false followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to NaN followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to Infinity followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to -Infinity followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "\0" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-grouping.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to null followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS object.itemValue (<object data>): IDL set to "" should not throw 
FAIL object.itemValue (<object data>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got ""
PASS object.itemValue (<object data>): IDL set to " foo " should not throw 
FAIL object.itemValue (<object data>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS object.itemValue (<object data>): IDL set to "http://site.example/" should not throw 
FAIL object.itemValue (<object data>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS object.itemValue (<object data>): IDL set to "http://site.example/" followed by IDL get 
PASS object.itemValue (<object data>): IDL set to "//site.example/path???@#l" should not throw 
FAIL object.itemValue (<object data>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS object.itemValue (<object data>): IDL set to undefined should not throw 
FAIL object.itemValue (<object data>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS object.itemValue (<object data>): IDL set to 7 should not throw 
FAIL object.itemValue (<object data>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS object.itemValue (<object data>): IDL set to 1.5 should not throw 
FAIL object.itemValue (<object data>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS object.itemValue (<object data>): IDL set to true should not throw 
FAIL object.itemValue (<object data>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS object.itemValue (<object data>): IDL set to false should not throw 
FAIL object.itemValue (<object data>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS object.itemValue (<object data>): IDL set to object "[object Object]" should not throw 
FAIL object.itemValue (<object data>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS object.itemValue (<object data>): IDL set to NaN should not throw 
FAIL object.itemValue (<object data>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS object.itemValue (<object data>): IDL set to Infinity should not throw 
FAIL object.itemValue (<object data>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS object.itemValue (<object data>): IDL set to -Infinity should not throw 
FAIL object.itemValue (<object data>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS object.itemValue (<object data>): IDL set to "\0" should not throw 
FAIL object.itemValue (<object data>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-grouping.html" but got "\0"
PASS object.itemValue (<object data>): IDL set to null should not throw 
FAIL object.itemValue (<object data>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS object.itemValue (<object data>): IDL set to object "test-toString" should not throw 
FAIL object.itemValue (<object data>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS object.itemValue (<object data>): IDL set to object "test-valueOf" should not throw 
PASS object.itemValue (<object data>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL object.itemValue (<object data>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL data.itemValue (<data value>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL data.itemValue (<data value>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to "" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to undefined followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to 7 followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to 1.5 followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to true followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to false followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to NaN followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to Infinity followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to -Infinity followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to "\0" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to null followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS data.itemValue (<data value>): IDL set to "" should not throw 
FAIL data.itemValue (<data value>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to "" followed by IDL get 
PASS data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.itemValue (<data value>): IDL set to undefined should not throw 
FAIL data.itemValue (<data value>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS data.itemValue (<data value>): IDL set to 7 should not throw 
FAIL data.itemValue (<data value>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS data.itemValue (<data value>): IDL set to 1.5 should not throw 
FAIL data.itemValue (<data value>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS data.itemValue (<data value>): IDL set to true should not throw 
FAIL data.itemValue (<data value>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS data.itemValue (<data value>): IDL set to false should not throw 
FAIL data.itemValue (<data value>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS data.itemValue (<data value>): IDL set to object "[object Object]" should not throw 
FAIL data.itemValue (<data value>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS data.itemValue (<data value>): IDL set to NaN should not throw 
FAIL data.itemValue (<data value>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS data.itemValue (<data value>): IDL set to Infinity should not throw 
FAIL data.itemValue (<data value>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS data.itemValue (<data value>): IDL set to -Infinity should not throw 
FAIL data.itemValue (<data value>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS data.itemValue (<data value>): IDL set to "\0" should not throw 
FAIL data.itemValue (<data value>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to "\0" followed by IDL get 
PASS data.itemValue (<data value>): IDL set to null should not throw 
FAIL data.itemValue (<data value>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS data.itemValue (<data value>): IDL set to object "test-toString" should not throw 
FAIL data.itemValue (<data value>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS data.itemValue (<data value>): IDL set to object "test-valueOf" should not throw 
PASS data.itemValue (<data value>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL data.itemValue (<data value>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"

