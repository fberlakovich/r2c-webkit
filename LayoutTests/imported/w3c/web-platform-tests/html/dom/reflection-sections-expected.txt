Blocked access to external URL http://site.example/
Blocked access to external URL http://site.example/path???@#l
Implementers looking to fix bugs might want to use the original version of this suite's test framework, which conveniently aggregates similar errors and only reports failures. This file is (part of) the authoritative conformance test suite, and is suitable for incorporation into automated test suites.

(Note: missing tests for types tokenlist, settable tokenlist.)


PASS body.title: typeof IDL attribute 
PASS body.title: IDL get with DOM attribute unset 
PASS body.title: setAttribute() to "" followed by getAttribute() 
PASS body.title: setAttribute() to "" followed by IDL get 
PASS body.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.title: setAttribute() to undefined followed by getAttribute() 
PASS body.title: setAttribute() to undefined followed by IDL get 
PASS body.title: setAttribute() to 7 followed by getAttribute() 
PASS body.title: setAttribute() to 7 followed by IDL get 
PASS body.title: setAttribute() to 1.5 followed by getAttribute() 
PASS body.title: setAttribute() to 1.5 followed by IDL get 
PASS body.title: setAttribute() to true followed by getAttribute() 
PASS body.title: setAttribute() to true followed by IDL get 
PASS body.title: setAttribute() to false followed by getAttribute() 
PASS body.title: setAttribute() to false followed by IDL get 
PASS body.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS body.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS body.title: setAttribute() to NaN followed by getAttribute() 
PASS body.title: setAttribute() to NaN followed by IDL get 
PASS body.title: setAttribute() to Infinity followed by getAttribute() 
PASS body.title: setAttribute() to Infinity followed by IDL get 
PASS body.title: setAttribute() to -Infinity followed by getAttribute() 
PASS body.title: setAttribute() to -Infinity followed by IDL get 
PASS body.title: setAttribute() to "\0" followed by getAttribute() 
PASS body.title: setAttribute() to "\0" followed by IDL get 
PASS body.title: setAttribute() to null followed by getAttribute() 
PASS body.title: setAttribute() to null followed by IDL get 
PASS body.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS body.title: setAttribute() to object "test-toString" followed by IDL get 
PASS body.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS body.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS body.title: IDL set to "" should not throw 
PASS body.title: IDL set to "" followed by getAttribute() 
PASS body.title: IDL set to "" followed by IDL get 
PASS body.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS body.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.title: IDL set to undefined should not throw 
PASS body.title: IDL set to undefined followed by getAttribute() 
PASS body.title: IDL set to undefined followed by IDL get 
PASS body.title: IDL set to 7 should not throw 
PASS body.title: IDL set to 7 followed by getAttribute() 
PASS body.title: IDL set to 7 followed by IDL get 
PASS body.title: IDL set to 1.5 should not throw 
PASS body.title: IDL set to 1.5 followed by getAttribute() 
PASS body.title: IDL set to 1.5 followed by IDL get 
PASS body.title: IDL set to true should not throw 
PASS body.title: IDL set to true followed by getAttribute() 
PASS body.title: IDL set to true followed by IDL get 
PASS body.title: IDL set to false should not throw 
PASS body.title: IDL set to false followed by getAttribute() 
PASS body.title: IDL set to false followed by IDL get 
PASS body.title: IDL set to object "[object Object]" should not throw 
PASS body.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS body.title: IDL set to object "[object Object]" followed by IDL get 
PASS body.title: IDL set to NaN should not throw 
PASS body.title: IDL set to NaN followed by getAttribute() 
PASS body.title: IDL set to NaN followed by IDL get 
PASS body.title: IDL set to Infinity should not throw 
PASS body.title: IDL set to Infinity followed by getAttribute() 
PASS body.title: IDL set to Infinity followed by IDL get 
PASS body.title: IDL set to -Infinity should not throw 
PASS body.title: IDL set to -Infinity followed by getAttribute() 
PASS body.title: IDL set to -Infinity followed by IDL get 
PASS body.title: IDL set to "\0" should not throw 
PASS body.title: IDL set to "\0" followed by getAttribute() 
PASS body.title: IDL set to "\0" followed by IDL get 
PASS body.title: IDL set to null should not throw 
PASS body.title: IDL set to null followed by getAttribute() 
PASS body.title: IDL set to null followed by IDL get 
PASS body.title: IDL set to object "test-toString" should not throw 
PASS body.title: IDL set to object "test-toString" followed by getAttribute() 
PASS body.title: IDL set to object "test-toString" followed by IDL get 
PASS body.title: IDL set to object "test-valueOf" should not throw 
PASS body.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS body.title: IDL set to object "test-valueOf" followed by IDL get 
PASS body.lang: typeof IDL attribute 
PASS body.lang: IDL get with DOM attribute unset 
PASS body.lang: setAttribute() to "" followed by getAttribute() 
PASS body.lang: setAttribute() to "" followed by IDL get 
PASS body.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.lang: setAttribute() to undefined followed by getAttribute() 
PASS body.lang: setAttribute() to undefined followed by IDL get 
PASS body.lang: setAttribute() to 7 followed by getAttribute() 
PASS body.lang: setAttribute() to 7 followed by IDL get 
PASS body.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS body.lang: setAttribute() to 1.5 followed by IDL get 
PASS body.lang: setAttribute() to true followed by getAttribute() 
PASS body.lang: setAttribute() to true followed by IDL get 
PASS body.lang: setAttribute() to false followed by getAttribute() 
PASS body.lang: setAttribute() to false followed by IDL get 
PASS body.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS body.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS body.lang: setAttribute() to NaN followed by getAttribute() 
PASS body.lang: setAttribute() to NaN followed by IDL get 
PASS body.lang: setAttribute() to Infinity followed by getAttribute() 
PASS body.lang: setAttribute() to Infinity followed by IDL get 
PASS body.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS body.lang: setAttribute() to -Infinity followed by IDL get 
PASS body.lang: setAttribute() to "\0" followed by getAttribute() 
PASS body.lang: setAttribute() to "\0" followed by IDL get 
PASS body.lang: setAttribute() to null followed by getAttribute() 
PASS body.lang: setAttribute() to null followed by IDL get 
PASS body.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS body.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS body.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS body.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS body.lang: IDL set to "" should not throw 
PASS body.lang: IDL set to "" followed by getAttribute() 
PASS body.lang: IDL set to "" followed by IDL get 
PASS body.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS body.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.lang: IDL set to undefined should not throw 
PASS body.lang: IDL set to undefined followed by getAttribute() 
PASS body.lang: IDL set to undefined followed by IDL get 
PASS body.lang: IDL set to 7 should not throw 
PASS body.lang: IDL set to 7 followed by getAttribute() 
PASS body.lang: IDL set to 7 followed by IDL get 
PASS body.lang: IDL set to 1.5 should not throw 
PASS body.lang: IDL set to 1.5 followed by getAttribute() 
PASS body.lang: IDL set to 1.5 followed by IDL get 
PASS body.lang: IDL set to true should not throw 
PASS body.lang: IDL set to true followed by getAttribute() 
PASS body.lang: IDL set to true followed by IDL get 
PASS body.lang: IDL set to false should not throw 
PASS body.lang: IDL set to false followed by getAttribute() 
PASS body.lang: IDL set to false followed by IDL get 
PASS body.lang: IDL set to object "[object Object]" should not throw 
PASS body.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS body.lang: IDL set to object "[object Object]" followed by IDL get 
PASS body.lang: IDL set to NaN should not throw 
PASS body.lang: IDL set to NaN followed by getAttribute() 
PASS body.lang: IDL set to NaN followed by IDL get 
PASS body.lang: IDL set to Infinity should not throw 
PASS body.lang: IDL set to Infinity followed by getAttribute() 
PASS body.lang: IDL set to Infinity followed by IDL get 
PASS body.lang: IDL set to -Infinity should not throw 
PASS body.lang: IDL set to -Infinity followed by getAttribute() 
PASS body.lang: IDL set to -Infinity followed by IDL get 
PASS body.lang: IDL set to "\0" should not throw 
PASS body.lang: IDL set to "\0" followed by getAttribute() 
PASS body.lang: IDL set to "\0" followed by IDL get 
PASS body.lang: IDL set to null should not throw 
PASS body.lang: IDL set to null followed by getAttribute() 
PASS body.lang: IDL set to null followed by IDL get 
PASS body.lang: IDL set to object "test-toString" should not throw 
PASS body.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS body.lang: IDL set to object "test-toString" followed by IDL get 
PASS body.lang: IDL set to object "test-valueOf" should not throw 
PASS body.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS body.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS body.dir: typeof IDL attribute 
PASS body.dir: IDL get with DOM attribute unset 
PASS body.dir: setAttribute() to "" followed by getAttribute() 
PASS body.dir: setAttribute() to "" followed by IDL get 
PASS body.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.dir: setAttribute() to undefined followed by getAttribute() 
PASS body.dir: setAttribute() to undefined followed by IDL get 
PASS body.dir: setAttribute() to 7 followed by getAttribute() 
PASS body.dir: setAttribute() to 7 followed by IDL get 
PASS body.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS body.dir: setAttribute() to 1.5 followed by IDL get 
PASS body.dir: setAttribute() to true followed by getAttribute() 
PASS body.dir: setAttribute() to true followed by IDL get 
PASS body.dir: setAttribute() to false followed by getAttribute() 
PASS body.dir: setAttribute() to false followed by IDL get 
PASS body.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS body.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS body.dir: setAttribute() to NaN followed by getAttribute() 
PASS body.dir: setAttribute() to NaN followed by IDL get 
PASS body.dir: setAttribute() to Infinity followed by getAttribute() 
PASS body.dir: setAttribute() to Infinity followed by IDL get 
PASS body.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS body.dir: setAttribute() to -Infinity followed by IDL get 
PASS body.dir: setAttribute() to "\0" followed by getAttribute() 
PASS body.dir: setAttribute() to "\0" followed by IDL get 
PASS body.dir: setAttribute() to null followed by getAttribute() 
PASS body.dir: setAttribute() to null followed by IDL get 
PASS body.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS body.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS body.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS body.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS body.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS body.dir: setAttribute() to "ltr" followed by IDL get 
PASS body.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS body.dir: setAttribute() to "xltr" followed by IDL get 
PASS body.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS body.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS body.dir: setAttribute() to "tr" followed by getAttribute() 
PASS body.dir: setAttribute() to "tr" followed by IDL get 
PASS body.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS body.dir: setAttribute() to "LTR" followed by IDL get 
PASS body.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS body.dir: setAttribute() to "rtl" followed by IDL get 
PASS body.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS body.dir: setAttribute() to "xrtl" followed by IDL get 
PASS body.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS body.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS body.dir: setAttribute() to "tl" followed by getAttribute() 
PASS body.dir: setAttribute() to "tl" followed by IDL get 
PASS body.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS body.dir: setAttribute() to "RTL" followed by IDL get 
PASS body.dir: setAttribute() to "auto" followed by getAttribute() 
PASS body.dir: setAttribute() to "auto" followed by IDL get 
PASS body.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS body.dir: setAttribute() to "xauto" followed by IDL get 
PASS body.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS body.dir: setAttribute() to "auto\0" followed by IDL get 
PASS body.dir: setAttribute() to "uto" followed by getAttribute() 
PASS body.dir: setAttribute() to "uto" followed by IDL get 
PASS body.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS body.dir: setAttribute() to "AUTO" followed by IDL get 
PASS body.dir: IDL set to "" should not throw 
PASS body.dir: IDL set to "" followed by getAttribute() 
PASS body.dir: IDL set to "" followed by IDL get 
PASS body.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS body.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.dir: IDL set to undefined should not throw 
PASS body.dir: IDL set to undefined followed by getAttribute() 
PASS body.dir: IDL set to undefined followed by IDL get 
PASS body.dir: IDL set to 7 should not throw 
PASS body.dir: IDL set to 7 followed by getAttribute() 
PASS body.dir: IDL set to 7 followed by IDL get 
PASS body.dir: IDL set to 1.5 should not throw 
PASS body.dir: IDL set to 1.5 followed by getAttribute() 
PASS body.dir: IDL set to 1.5 followed by IDL get 
PASS body.dir: IDL set to true should not throw 
PASS body.dir: IDL set to true followed by getAttribute() 
PASS body.dir: IDL set to true followed by IDL get 
PASS body.dir: IDL set to false should not throw 
PASS body.dir: IDL set to false followed by getAttribute() 
PASS body.dir: IDL set to false followed by IDL get 
PASS body.dir: IDL set to object "[object Object]" should not throw 
PASS body.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS body.dir: IDL set to object "[object Object]" followed by IDL get 
PASS body.dir: IDL set to NaN should not throw 
PASS body.dir: IDL set to NaN followed by getAttribute() 
PASS body.dir: IDL set to NaN followed by IDL get 
PASS body.dir: IDL set to Infinity should not throw 
PASS body.dir: IDL set to Infinity followed by getAttribute() 
PASS body.dir: IDL set to Infinity followed by IDL get 
PASS body.dir: IDL set to -Infinity should not throw 
PASS body.dir: IDL set to -Infinity followed by getAttribute() 
PASS body.dir: IDL set to -Infinity followed by IDL get 
PASS body.dir: IDL set to "\0" should not throw 
PASS body.dir: IDL set to "\0" followed by getAttribute() 
PASS body.dir: IDL set to "\0" followed by IDL get 
PASS body.dir: IDL set to null should not throw 
PASS body.dir: IDL set to null followed by IDL get 
PASS body.dir: IDL set to object "test-toString" should not throw 
PASS body.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS body.dir: IDL set to object "test-toString" followed by IDL get 
PASS body.dir: IDL set to object "test-valueOf" should not throw 
PASS body.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS body.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS body.dir: IDL set to "ltr" should not throw 
PASS body.dir: IDL set to "ltr" followed by getAttribute() 
PASS body.dir: IDL set to "ltr" followed by IDL get 
PASS body.dir: IDL set to "xltr" should not throw 
PASS body.dir: IDL set to "xltr" followed by getAttribute() 
PASS body.dir: IDL set to "xltr" followed by IDL get 
PASS body.dir: IDL set to "ltr\0" should not throw 
PASS body.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS body.dir: IDL set to "ltr\0" followed by IDL get 
PASS body.dir: IDL set to "tr" should not throw 
PASS body.dir: IDL set to "tr" followed by getAttribute() 
PASS body.dir: IDL set to "tr" followed by IDL get 
PASS body.dir: IDL set to "LTR" should not throw 
PASS body.dir: IDL set to "LTR" followed by getAttribute() 
PASS body.dir: IDL set to "LTR" followed by IDL get 
PASS body.dir: IDL set to "rtl" should not throw 
PASS body.dir: IDL set to "rtl" followed by getAttribute() 
PASS body.dir: IDL set to "rtl" followed by IDL get 
PASS body.dir: IDL set to "xrtl" should not throw 
PASS body.dir: IDL set to "xrtl" followed by getAttribute() 
PASS body.dir: IDL set to "xrtl" followed by IDL get 
PASS body.dir: IDL set to "rtl\0" should not throw 
PASS body.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS body.dir: IDL set to "rtl\0" followed by IDL get 
PASS body.dir: IDL set to "tl" should not throw 
PASS body.dir: IDL set to "tl" followed by getAttribute() 
PASS body.dir: IDL set to "tl" followed by IDL get 
PASS body.dir: IDL set to "RTL" should not throw 
PASS body.dir: IDL set to "RTL" followed by getAttribute() 
PASS body.dir: IDL set to "RTL" followed by IDL get 
PASS body.dir: IDL set to "auto" should not throw 
PASS body.dir: IDL set to "auto" followed by getAttribute() 
PASS body.dir: IDL set to "auto" followed by IDL get 
PASS body.dir: IDL set to "xauto" should not throw 
PASS body.dir: IDL set to "xauto" followed by getAttribute() 
PASS body.dir: IDL set to "xauto" followed by IDL get 
PASS body.dir: IDL set to "auto\0" should not throw 
PASS body.dir: IDL set to "auto\0" followed by getAttribute() 
PASS body.dir: IDL set to "auto\0" followed by IDL get 
PASS body.dir: IDL set to "uto" should not throw 
PASS body.dir: IDL set to "uto" followed by getAttribute() 
PASS body.dir: IDL set to "uto" followed by IDL get 
PASS body.dir: IDL set to "AUTO" should not throw 
PASS body.dir: IDL set to "AUTO" followed by getAttribute() 
PASS body.dir: IDL set to "AUTO" followed by IDL get 
PASS body.className (<body class>): typeof IDL attribute 
PASS body.className (<body class>): IDL get with DOM attribute unset 
PASS body.className (<body class>): setAttribute() to "" followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to "" followed by IDL get 
PASS body.className (<body class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.className (<body class>): setAttribute() to undefined followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to undefined followed by IDL get 
PASS body.className (<body class>): setAttribute() to 7 followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to 7 followed by IDL get 
PASS body.className (<body class>): setAttribute() to 1.5 followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to 1.5 followed by IDL get 
PASS body.className (<body class>): setAttribute() to true followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to true followed by IDL get 
PASS body.className (<body class>): setAttribute() to false followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to false followed by IDL get 
PASS body.className (<body class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS body.className (<body class>): setAttribute() to NaN followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to NaN followed by IDL get 
PASS body.className (<body class>): setAttribute() to Infinity followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to Infinity followed by IDL get 
PASS body.className (<body class>): setAttribute() to -Infinity followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to -Infinity followed by IDL get 
PASS body.className (<body class>): setAttribute() to "\0" followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to "\0" followed by IDL get 
PASS body.className (<body class>): setAttribute() to null followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to null followed by IDL get 
PASS body.className (<body class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to object "test-toString" followed by IDL get 
PASS body.className (<body class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS body.className (<body class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS body.className (<body class>): IDL set to "" should not throw 
PASS body.className (<body class>): IDL set to "" followed by getAttribute() 
PASS body.className (<body class>): IDL set to "" followed by IDL get 
PASS body.className (<body class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS body.className (<body class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.className (<body class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.className (<body class>): IDL set to undefined should not throw 
PASS body.className (<body class>): IDL set to undefined followed by getAttribute() 
PASS body.className (<body class>): IDL set to undefined followed by IDL get 
PASS body.className (<body class>): IDL set to 7 should not throw 
PASS body.className (<body class>): IDL set to 7 followed by getAttribute() 
PASS body.className (<body class>): IDL set to 7 followed by IDL get 
PASS body.className (<body class>): IDL set to 1.5 should not throw 
PASS body.className (<body class>): IDL set to 1.5 followed by getAttribute() 
PASS body.className (<body class>): IDL set to 1.5 followed by IDL get 
PASS body.className (<body class>): IDL set to true should not throw 
PASS body.className (<body class>): IDL set to true followed by getAttribute() 
PASS body.className (<body class>): IDL set to true followed by IDL get 
PASS body.className (<body class>): IDL set to false should not throw 
PASS body.className (<body class>): IDL set to false followed by getAttribute() 
PASS body.className (<body class>): IDL set to false followed by IDL get 
PASS body.className (<body class>): IDL set to object "[object Object]" should not throw 
PASS body.className (<body class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS body.className (<body class>): IDL set to object "[object Object]" followed by IDL get 
PASS body.className (<body class>): IDL set to NaN should not throw 
PASS body.className (<body class>): IDL set to NaN followed by getAttribute() 
PASS body.className (<body class>): IDL set to NaN followed by IDL get 
PASS body.className (<body class>): IDL set to Infinity should not throw 
PASS body.className (<body class>): IDL set to Infinity followed by getAttribute() 
PASS body.className (<body class>): IDL set to Infinity followed by IDL get 
PASS body.className (<body class>): IDL set to -Infinity should not throw 
PASS body.className (<body class>): IDL set to -Infinity followed by getAttribute() 
PASS body.className (<body class>): IDL set to -Infinity followed by IDL get 
PASS body.className (<body class>): IDL set to "\0" should not throw 
PASS body.className (<body class>): IDL set to "\0" followed by getAttribute() 
PASS body.className (<body class>): IDL set to "\0" followed by IDL get 
PASS body.className (<body class>): IDL set to null should not throw 
PASS body.className (<body class>): IDL set to null followed by getAttribute() 
PASS body.className (<body class>): IDL set to null followed by IDL get 
PASS body.className (<body class>): IDL set to object "test-toString" should not throw 
PASS body.className (<body class>): IDL set to object "test-toString" followed by getAttribute() 
PASS body.className (<body class>): IDL set to object "test-toString" followed by IDL get 
PASS body.className (<body class>): IDL set to object "test-valueOf" should not throw 
PASS body.className (<body class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS body.className (<body class>): IDL set to object "test-valueOf" followed by IDL get 
PASS body.hidden: typeof IDL attribute 
PASS body.hidden: IDL get with DOM attribute unset 
PASS body.hidden: setAttribute() to "" followed by getAttribute() 
PASS body.hidden: setAttribute() to "" followed by IDL get 
PASS body.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS body.hidden: setAttribute() to " foo " followed by IDL get 
PASS body.hidden: setAttribute() to undefined followed by getAttribute() 
PASS body.hidden: setAttribute() to undefined followed by IDL get 
PASS body.hidden: setAttribute() to null followed by getAttribute() 
PASS body.hidden: setAttribute() to null followed by IDL get 
PASS body.hidden: setAttribute() to 7 followed by getAttribute() 
PASS body.hidden: setAttribute() to 7 followed by IDL get 
PASS body.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS body.hidden: setAttribute() to 1.5 followed by IDL get 
PASS body.hidden: setAttribute() to true followed by getAttribute() 
PASS body.hidden: setAttribute() to true followed by IDL get 
PASS body.hidden: setAttribute() to false followed by getAttribute() 
PASS body.hidden: setAttribute() to false followed by IDL get 
PASS body.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS body.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS body.hidden: setAttribute() to NaN followed by getAttribute() 
PASS body.hidden: setAttribute() to NaN followed by IDL get 
PASS body.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS body.hidden: setAttribute() to Infinity followed by IDL get 
PASS body.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS body.hidden: setAttribute() to -Infinity followed by IDL get 
PASS body.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS body.hidden: setAttribute() to "\0" followed by IDL get 
PASS body.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS body.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS body.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS body.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS body.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS body.hidden: setAttribute() to "hidden" followed by IDL get 
PASS body.hidden: IDL set to "" should not throw 
PASS body.hidden: IDL set to "" followed by hasAttribute() 
PASS body.hidden: IDL set to "" followed by IDL get 
PASS body.hidden: IDL set to " foo " should not throw 
PASS body.hidden: IDL set to " foo " followed by hasAttribute() 
PASS body.hidden: IDL set to " foo " followed by IDL get 
PASS body.hidden: IDL set to undefined should not throw 
PASS body.hidden: IDL set to undefined followed by hasAttribute() 
PASS body.hidden: IDL set to undefined followed by IDL get 
PASS body.hidden: IDL set to null should not throw 
PASS body.hidden: IDL set to null followed by hasAttribute() 
PASS body.hidden: IDL set to null followed by IDL get 
PASS body.hidden: IDL set to 7 should not throw 
PASS body.hidden: IDL set to 7 followed by hasAttribute() 
PASS body.hidden: IDL set to 7 followed by IDL get 
PASS body.hidden: IDL set to 1.5 should not throw 
PASS body.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS body.hidden: IDL set to 1.5 followed by IDL get 
PASS body.hidden: IDL set to true should not throw 
PASS body.hidden: IDL set to true followed by hasAttribute() 
PASS body.hidden: IDL set to true followed by IDL get 
PASS body.hidden: IDL set to false should not throw 
PASS body.hidden: IDL set to false followed by hasAttribute() 
PASS body.hidden: IDL set to false followed by IDL get 
PASS body.hidden: IDL set to object "[object Object]" should not throw 
PASS body.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS body.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS body.hidden: IDL set to NaN should not throw 
PASS body.hidden: IDL set to NaN followed by hasAttribute() 
PASS body.hidden: IDL set to NaN followed by IDL get 
PASS body.hidden: IDL set to Infinity should not throw 
PASS body.hidden: IDL set to Infinity followed by hasAttribute() 
PASS body.hidden: IDL set to Infinity followed by IDL get 
PASS body.hidden: IDL set to -Infinity should not throw 
PASS body.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS body.hidden: IDL set to -Infinity followed by IDL get 
PASS body.hidden: IDL set to "\0" should not throw 
PASS body.hidden: IDL set to "\0" followed by hasAttribute() 
PASS body.hidden: IDL set to "\0" followed by IDL get 
PASS body.hidden: IDL set to object "test-toString" should not throw 
PASS body.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS body.hidden: IDL set to object "test-toString" followed by IDL get 
PASS body.hidden: IDL set to object "test-valueOf" should not throw 
PASS body.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS body.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS body.accessKey: typeof IDL attribute 
PASS body.accessKey: IDL get with DOM attribute unset 
PASS body.accessKey: setAttribute() to "" followed by getAttribute() 
PASS body.accessKey: setAttribute() to "" followed by IDL get 
PASS body.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS body.accessKey: setAttribute() to undefined followed by IDL get 
PASS body.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS body.accessKey: setAttribute() to 7 followed by IDL get 
PASS body.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS body.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS body.accessKey: setAttribute() to true followed by getAttribute() 
PASS body.accessKey: setAttribute() to true followed by IDL get 
PASS body.accessKey: setAttribute() to false followed by getAttribute() 
PASS body.accessKey: setAttribute() to false followed by IDL get 
PASS body.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS body.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS body.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS body.accessKey: setAttribute() to NaN followed by IDL get 
PASS body.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS body.accessKey: setAttribute() to Infinity followed by IDL get 
PASS body.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS body.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS body.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS body.accessKey: setAttribute() to "\0" followed by IDL get 
PASS body.accessKey: setAttribute() to null followed by getAttribute() 
PASS body.accessKey: setAttribute() to null followed by IDL get 
PASS body.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS body.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS body.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS body.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS body.accessKey: IDL set to "" should not throw 
PASS body.accessKey: IDL set to "" followed by getAttribute() 
PASS body.accessKey: IDL set to "" followed by IDL get 
PASS body.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS body.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.accessKey: IDL set to undefined should not throw 
PASS body.accessKey: IDL set to undefined followed by getAttribute() 
PASS body.accessKey: IDL set to undefined followed by IDL get 
PASS body.accessKey: IDL set to 7 should not throw 
PASS body.accessKey: IDL set to 7 followed by getAttribute() 
PASS body.accessKey: IDL set to 7 followed by IDL get 
PASS body.accessKey: IDL set to 1.5 should not throw 
PASS body.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS body.accessKey: IDL set to 1.5 followed by IDL get 
PASS body.accessKey: IDL set to true should not throw 
PASS body.accessKey: IDL set to true followed by getAttribute() 
PASS body.accessKey: IDL set to true followed by IDL get 
PASS body.accessKey: IDL set to false should not throw 
PASS body.accessKey: IDL set to false followed by getAttribute() 
PASS body.accessKey: IDL set to false followed by IDL get 
PASS body.accessKey: IDL set to object "[object Object]" should not throw 
PASS body.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS body.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS body.accessKey: IDL set to NaN should not throw 
PASS body.accessKey: IDL set to NaN followed by getAttribute() 
PASS body.accessKey: IDL set to NaN followed by IDL get 
PASS body.accessKey: IDL set to Infinity should not throw 
PASS body.accessKey: IDL set to Infinity followed by getAttribute() 
PASS body.accessKey: IDL set to Infinity followed by IDL get 
PASS body.accessKey: IDL set to -Infinity should not throw 
PASS body.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS body.accessKey: IDL set to -Infinity followed by IDL get 
PASS body.accessKey: IDL set to "\0" should not throw 
PASS body.accessKey: IDL set to "\0" followed by getAttribute() 
PASS body.accessKey: IDL set to "\0" followed by IDL get 
PASS body.accessKey: IDL set to null should not throw 
PASS body.accessKey: IDL set to null followed by getAttribute() 
PASS body.accessKey: IDL set to null followed by IDL get 
PASS body.accessKey: IDL set to object "test-toString" should not throw 
PASS body.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS body.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS body.accessKey: IDL set to object "test-valueOf" should not throw 
PASS body.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS body.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS body.tabIndex: typeof IDL attribute 
PASS body.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS body.tabIndex: setAttribute() to -36 followed by IDL get 
PASS body.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS body.tabIndex: setAttribute() to -1 followed by IDL get 
PASS body.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS body.tabIndex: setAttribute() to 0 followed by IDL get 
PASS body.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS body.tabIndex: setAttribute() to 1 followed by IDL get 
PASS body.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS body.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS body.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS body.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS body.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS body.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS body.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS body.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS body.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS body.tabIndex: setAttribute() to "0" followed by IDL get 
PASS body.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS body.tabIndex: setAttribute() to "1" followed by IDL get 
PASS body.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS body.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS body.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS body.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS body.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS body.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS body.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS body.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS body.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS body.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS body.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS body.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS body.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS body.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS body.tabIndex: IDL set to -36 should not throw 
PASS body.tabIndex: IDL set to -36 followed by getAttribute() 
PASS body.tabIndex: IDL set to -36 followed by IDL get 
PASS body.tabIndex: IDL set to -1 should not throw 
PASS body.tabIndex: IDL set to -1 followed by getAttribute() 
PASS body.tabIndex: IDL set to -1 followed by IDL get 
PASS body.tabIndex: IDL set to 0 should not throw 
PASS body.tabIndex: IDL set to 0 followed by getAttribute() 
PASS body.tabIndex: IDL set to 0 followed by IDL get 
PASS body.tabIndex: IDL set to 1 should not throw 
PASS body.tabIndex: IDL set to 1 followed by getAttribute() 
PASS body.tabIndex: IDL set to 1 followed by IDL get 
PASS body.tabIndex: IDL set to 2147483647 should not throw 
PASS body.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS body.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS body.tabIndex: IDL set to -2147483648 should not throw 
PASS body.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS body.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS body.text: typeof IDL attribute 
PASS body.text: IDL get with DOM attribute unset 
PASS body.text: setAttribute() to "" followed by getAttribute() 
PASS body.text: setAttribute() to "" followed by IDL get 
PASS body.text: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.text: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.text: setAttribute() to undefined followed by getAttribute() 
PASS body.text: setAttribute() to undefined followed by IDL get 
PASS body.text: setAttribute() to 7 followed by getAttribute() 
PASS body.text: setAttribute() to 7 followed by IDL get 
PASS body.text: setAttribute() to 1.5 followed by getAttribute() 
PASS body.text: setAttribute() to 1.5 followed by IDL get 
PASS body.text: setAttribute() to true followed by getAttribute() 
PASS body.text: setAttribute() to true followed by IDL get 
PASS body.text: setAttribute() to false followed by getAttribute() 
PASS body.text: setAttribute() to false followed by IDL get 
PASS body.text: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS body.text: setAttribute() to object "[object Object]" followed by IDL get 
PASS body.text: setAttribute() to NaN followed by getAttribute() 
PASS body.text: setAttribute() to NaN followed by IDL get 
PASS body.text: setAttribute() to Infinity followed by getAttribute() 
PASS body.text: setAttribute() to Infinity followed by IDL get 
PASS body.text: setAttribute() to -Infinity followed by getAttribute() 
PASS body.text: setAttribute() to -Infinity followed by IDL get 
PASS body.text: setAttribute() to "\0" followed by getAttribute() 
PASS body.text: setAttribute() to "\0" followed by IDL get 
PASS body.text: setAttribute() to null followed by getAttribute() 
PASS body.text: setAttribute() to null followed by IDL get 
PASS body.text: setAttribute() to object "test-toString" followed by getAttribute() 
PASS body.text: setAttribute() to object "test-toString" followed by IDL get 
PASS body.text: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS body.text: setAttribute() to object "test-valueOf" followed by IDL get 
PASS body.text: IDL set to "" should not throw 
PASS body.text: IDL set to "" followed by getAttribute() 
PASS body.text: IDL set to "" followed by IDL get 
PASS body.text: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS body.text: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.text: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.text: IDL set to undefined should not throw 
PASS body.text: IDL set to undefined followed by getAttribute() 
PASS body.text: IDL set to undefined followed by IDL get 
PASS body.text: IDL set to 7 should not throw 
PASS body.text: IDL set to 7 followed by getAttribute() 
PASS body.text: IDL set to 7 followed by IDL get 
PASS body.text: IDL set to 1.5 should not throw 
PASS body.text: IDL set to 1.5 followed by getAttribute() 
PASS body.text: IDL set to 1.5 followed by IDL get 
PASS body.text: IDL set to true should not throw 
PASS body.text: IDL set to true followed by getAttribute() 
PASS body.text: IDL set to true followed by IDL get 
PASS body.text: IDL set to false should not throw 
PASS body.text: IDL set to false followed by getAttribute() 
PASS body.text: IDL set to false followed by IDL get 
PASS body.text: IDL set to object "[object Object]" should not throw 
PASS body.text: IDL set to object "[object Object]" followed by getAttribute() 
PASS body.text: IDL set to object "[object Object]" followed by IDL get 
PASS body.text: IDL set to NaN should not throw 
PASS body.text: IDL set to NaN followed by getAttribute() 
PASS body.text: IDL set to NaN followed by IDL get 
PASS body.text: IDL set to Infinity should not throw 
PASS body.text: IDL set to Infinity followed by getAttribute() 
PASS body.text: IDL set to Infinity followed by IDL get 
PASS body.text: IDL set to -Infinity should not throw 
PASS body.text: IDL set to -Infinity followed by getAttribute() 
PASS body.text: IDL set to -Infinity followed by IDL get 
PASS body.text: IDL set to "\0" should not throw 
PASS body.text: IDL set to "\0" followed by getAttribute() 
PASS body.text: IDL set to "\0" followed by IDL get 
PASS body.text: IDL set to null should not throw 
FAIL body.text: IDL set to null followed by getAttribute() assert_equals: expected "" but got "null"
FAIL body.text: IDL set to null followed by IDL get assert_equals: expected "" but got "null"
PASS body.text: IDL set to object "test-toString" should not throw 
PASS body.text: IDL set to object "test-toString" followed by getAttribute() 
PASS body.text: IDL set to object "test-toString" followed by IDL get 
PASS body.text: IDL set to object "test-valueOf" should not throw 
PASS body.text: IDL set to object "test-valueOf" followed by getAttribute() 
PASS body.text: IDL set to object "test-valueOf" followed by IDL get 
PASS body.link: typeof IDL attribute 
PASS body.link: IDL get with DOM attribute unset 
PASS body.link: setAttribute() to "" followed by getAttribute() 
PASS body.link: setAttribute() to "" followed by IDL get 
PASS body.link: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.link: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.link: setAttribute() to undefined followed by getAttribute() 
PASS body.link: setAttribute() to undefined followed by IDL get 
PASS body.link: setAttribute() to 7 followed by getAttribute() 
PASS body.link: setAttribute() to 7 followed by IDL get 
PASS body.link: setAttribute() to 1.5 followed by getAttribute() 
PASS body.link: setAttribute() to 1.5 followed by IDL get 
PASS body.link: setAttribute() to true followed by getAttribute() 
PASS body.link: setAttribute() to true followed by IDL get 
PASS body.link: setAttribute() to false followed by getAttribute() 
PASS body.link: setAttribute() to false followed by IDL get 
PASS body.link: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS body.link: setAttribute() to object "[object Object]" followed by IDL get 
PASS body.link: setAttribute() to NaN followed by getAttribute() 
PASS body.link: setAttribute() to NaN followed by IDL get 
PASS body.link: setAttribute() to Infinity followed by getAttribute() 
PASS body.link: setAttribute() to Infinity followed by IDL get 
PASS body.link: setAttribute() to -Infinity followed by getAttribute() 
PASS body.link: setAttribute() to -Infinity followed by IDL get 
PASS body.link: setAttribute() to "\0" followed by getAttribute() 
PASS body.link: setAttribute() to "\0" followed by IDL get 
PASS body.link: setAttribute() to null followed by getAttribute() 
PASS body.link: setAttribute() to null followed by IDL get 
PASS body.link: setAttribute() to object "test-toString" followed by getAttribute() 
PASS body.link: setAttribute() to object "test-toString" followed by IDL get 
PASS body.link: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS body.link: setAttribute() to object "test-valueOf" followed by IDL get 
PASS body.link: IDL set to "" should not throw 
PASS body.link: IDL set to "" followed by getAttribute() 
PASS body.link: IDL set to "" followed by IDL get 
PASS body.link: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS body.link: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.link: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.link: IDL set to undefined should not throw 
PASS body.link: IDL set to undefined followed by getAttribute() 
PASS body.link: IDL set to undefined followed by IDL get 
PASS body.link: IDL set to 7 should not throw 
PASS body.link: IDL set to 7 followed by getAttribute() 
PASS body.link: IDL set to 7 followed by IDL get 
PASS body.link: IDL set to 1.5 should not throw 
PASS body.link: IDL set to 1.5 followed by getAttribute() 
PASS body.link: IDL set to 1.5 followed by IDL get 
PASS body.link: IDL set to true should not throw 
PASS body.link: IDL set to true followed by getAttribute() 
PASS body.link: IDL set to true followed by IDL get 
PASS body.link: IDL set to false should not throw 
PASS body.link: IDL set to false followed by getAttribute() 
PASS body.link: IDL set to false followed by IDL get 
PASS body.link: IDL set to object "[object Object]" should not throw 
PASS body.link: IDL set to object "[object Object]" followed by getAttribute() 
PASS body.link: IDL set to object "[object Object]" followed by IDL get 
PASS body.link: IDL set to NaN should not throw 
PASS body.link: IDL set to NaN followed by getAttribute() 
PASS body.link: IDL set to NaN followed by IDL get 
PASS body.link: IDL set to Infinity should not throw 
PASS body.link: IDL set to Infinity followed by getAttribute() 
PASS body.link: IDL set to Infinity followed by IDL get 
PASS body.link: IDL set to -Infinity should not throw 
PASS body.link: IDL set to -Infinity followed by getAttribute() 
PASS body.link: IDL set to -Infinity followed by IDL get 
PASS body.link: IDL set to "\0" should not throw 
PASS body.link: IDL set to "\0" followed by getAttribute() 
PASS body.link: IDL set to "\0" followed by IDL get 
PASS body.link: IDL set to null should not throw 
FAIL body.link: IDL set to null followed by getAttribute() assert_equals: expected "" but got "null"
FAIL body.link: IDL set to null followed by IDL get assert_equals: expected "" but got "null"
PASS body.link: IDL set to object "test-toString" should not throw 
PASS body.link: IDL set to object "test-toString" followed by getAttribute() 
PASS body.link: IDL set to object "test-toString" followed by IDL get 
PASS body.link: IDL set to object "test-valueOf" should not throw 
PASS body.link: IDL set to object "test-valueOf" followed by getAttribute() 
PASS body.link: IDL set to object "test-valueOf" followed by IDL get 
PASS body.vLink: typeof IDL attribute 
PASS body.vLink: IDL get with DOM attribute unset 
PASS body.vLink: setAttribute() to "" followed by getAttribute() 
PASS body.vLink: setAttribute() to "" followed by IDL get 
PASS body.vLink: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.vLink: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.vLink: setAttribute() to undefined followed by getAttribute() 
PASS body.vLink: setAttribute() to undefined followed by IDL get 
PASS body.vLink: setAttribute() to 7 followed by getAttribute() 
PASS body.vLink: setAttribute() to 7 followed by IDL get 
PASS body.vLink: setAttribute() to 1.5 followed by getAttribute() 
PASS body.vLink: setAttribute() to 1.5 followed by IDL get 
PASS body.vLink: setAttribute() to true followed by getAttribute() 
PASS body.vLink: setAttribute() to true followed by IDL get 
PASS body.vLink: setAttribute() to false followed by getAttribute() 
PASS body.vLink: setAttribute() to false followed by IDL get 
PASS body.vLink: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS body.vLink: setAttribute() to object "[object Object]" followed by IDL get 
PASS body.vLink: setAttribute() to NaN followed by getAttribute() 
PASS body.vLink: setAttribute() to NaN followed by IDL get 
PASS body.vLink: setAttribute() to Infinity followed by getAttribute() 
PASS body.vLink: setAttribute() to Infinity followed by IDL get 
PASS body.vLink: setAttribute() to -Infinity followed by getAttribute() 
PASS body.vLink: setAttribute() to -Infinity followed by IDL get 
PASS body.vLink: setAttribute() to "\0" followed by getAttribute() 
PASS body.vLink: setAttribute() to "\0" followed by IDL get 
PASS body.vLink: setAttribute() to null followed by getAttribute() 
PASS body.vLink: setAttribute() to null followed by IDL get 
PASS body.vLink: setAttribute() to object "test-toString" followed by getAttribute() 
PASS body.vLink: setAttribute() to object "test-toString" followed by IDL get 
PASS body.vLink: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS body.vLink: setAttribute() to object "test-valueOf" followed by IDL get 
PASS body.vLink: IDL set to "" should not throw 
PASS body.vLink: IDL set to "" followed by getAttribute() 
PASS body.vLink: IDL set to "" followed by IDL get 
PASS body.vLink: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS body.vLink: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.vLink: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.vLink: IDL set to undefined should not throw 
PASS body.vLink: IDL set to undefined followed by getAttribute() 
PASS body.vLink: IDL set to undefined followed by IDL get 
PASS body.vLink: IDL set to 7 should not throw 
PASS body.vLink: IDL set to 7 followed by getAttribute() 
PASS body.vLink: IDL set to 7 followed by IDL get 
PASS body.vLink: IDL set to 1.5 should not throw 
PASS body.vLink: IDL set to 1.5 followed by getAttribute() 
PASS body.vLink: IDL set to 1.5 followed by IDL get 
PASS body.vLink: IDL set to true should not throw 
PASS body.vLink: IDL set to true followed by getAttribute() 
PASS body.vLink: IDL set to true followed by IDL get 
PASS body.vLink: IDL set to false should not throw 
PASS body.vLink: IDL set to false followed by getAttribute() 
PASS body.vLink: IDL set to false followed by IDL get 
PASS body.vLink: IDL set to object "[object Object]" should not throw 
PASS body.vLink: IDL set to object "[object Object]" followed by getAttribute() 
PASS body.vLink: IDL set to object "[object Object]" followed by IDL get 
PASS body.vLink: IDL set to NaN should not throw 
PASS body.vLink: IDL set to NaN followed by getAttribute() 
PASS body.vLink: IDL set to NaN followed by IDL get 
PASS body.vLink: IDL set to Infinity should not throw 
PASS body.vLink: IDL set to Infinity followed by getAttribute() 
PASS body.vLink: IDL set to Infinity followed by IDL get 
PASS body.vLink: IDL set to -Infinity should not throw 
PASS body.vLink: IDL set to -Infinity followed by getAttribute() 
PASS body.vLink: IDL set to -Infinity followed by IDL get 
PASS body.vLink: IDL set to "\0" should not throw 
PASS body.vLink: IDL set to "\0" followed by getAttribute() 
PASS body.vLink: IDL set to "\0" followed by IDL get 
PASS body.vLink: IDL set to null should not throw 
FAIL body.vLink: IDL set to null followed by getAttribute() assert_equals: expected "" but got "null"
FAIL body.vLink: IDL set to null followed by IDL get assert_equals: expected "" but got "null"
PASS body.vLink: IDL set to object "test-toString" should not throw 
PASS body.vLink: IDL set to object "test-toString" followed by getAttribute() 
PASS body.vLink: IDL set to object "test-toString" followed by IDL get 
PASS body.vLink: IDL set to object "test-valueOf" should not throw 
PASS body.vLink: IDL set to object "test-valueOf" followed by getAttribute() 
PASS body.vLink: IDL set to object "test-valueOf" followed by IDL get 
PASS body.aLink: typeof IDL attribute 
PASS body.aLink: IDL get with DOM attribute unset 
PASS body.aLink: setAttribute() to "" followed by getAttribute() 
PASS body.aLink: setAttribute() to "" followed by IDL get 
PASS body.aLink: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.aLink: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.aLink: setAttribute() to undefined followed by getAttribute() 
PASS body.aLink: setAttribute() to undefined followed by IDL get 
PASS body.aLink: setAttribute() to 7 followed by getAttribute() 
PASS body.aLink: setAttribute() to 7 followed by IDL get 
PASS body.aLink: setAttribute() to 1.5 followed by getAttribute() 
PASS body.aLink: setAttribute() to 1.5 followed by IDL get 
PASS body.aLink: setAttribute() to true followed by getAttribute() 
PASS body.aLink: setAttribute() to true followed by IDL get 
PASS body.aLink: setAttribute() to false followed by getAttribute() 
PASS body.aLink: setAttribute() to false followed by IDL get 
PASS body.aLink: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS body.aLink: setAttribute() to object "[object Object]" followed by IDL get 
PASS body.aLink: setAttribute() to NaN followed by getAttribute() 
PASS body.aLink: setAttribute() to NaN followed by IDL get 
PASS body.aLink: setAttribute() to Infinity followed by getAttribute() 
PASS body.aLink: setAttribute() to Infinity followed by IDL get 
PASS body.aLink: setAttribute() to -Infinity followed by getAttribute() 
PASS body.aLink: setAttribute() to -Infinity followed by IDL get 
PASS body.aLink: setAttribute() to "\0" followed by getAttribute() 
PASS body.aLink: setAttribute() to "\0" followed by IDL get 
PASS body.aLink: setAttribute() to null followed by getAttribute() 
PASS body.aLink: setAttribute() to null followed by IDL get 
PASS body.aLink: setAttribute() to object "test-toString" followed by getAttribute() 
PASS body.aLink: setAttribute() to object "test-toString" followed by IDL get 
PASS body.aLink: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS body.aLink: setAttribute() to object "test-valueOf" followed by IDL get 
PASS body.aLink: IDL set to "" should not throw 
PASS body.aLink: IDL set to "" followed by getAttribute() 
PASS body.aLink: IDL set to "" followed by IDL get 
PASS body.aLink: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS body.aLink: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.aLink: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.aLink: IDL set to undefined should not throw 
PASS body.aLink: IDL set to undefined followed by getAttribute() 
PASS body.aLink: IDL set to undefined followed by IDL get 
PASS body.aLink: IDL set to 7 should not throw 
PASS body.aLink: IDL set to 7 followed by getAttribute() 
PASS body.aLink: IDL set to 7 followed by IDL get 
PASS body.aLink: IDL set to 1.5 should not throw 
PASS body.aLink: IDL set to 1.5 followed by getAttribute() 
PASS body.aLink: IDL set to 1.5 followed by IDL get 
PASS body.aLink: IDL set to true should not throw 
PASS body.aLink: IDL set to true followed by getAttribute() 
PASS body.aLink: IDL set to true followed by IDL get 
PASS body.aLink: IDL set to false should not throw 
PASS body.aLink: IDL set to false followed by getAttribute() 
PASS body.aLink: IDL set to false followed by IDL get 
PASS body.aLink: IDL set to object "[object Object]" should not throw 
PASS body.aLink: IDL set to object "[object Object]" followed by getAttribute() 
PASS body.aLink: IDL set to object "[object Object]" followed by IDL get 
PASS body.aLink: IDL set to NaN should not throw 
PASS body.aLink: IDL set to NaN followed by getAttribute() 
PASS body.aLink: IDL set to NaN followed by IDL get 
PASS body.aLink: IDL set to Infinity should not throw 
PASS body.aLink: IDL set to Infinity followed by getAttribute() 
PASS body.aLink: IDL set to Infinity followed by IDL get 
PASS body.aLink: IDL set to -Infinity should not throw 
PASS body.aLink: IDL set to -Infinity followed by getAttribute() 
PASS body.aLink: IDL set to -Infinity followed by IDL get 
PASS body.aLink: IDL set to "\0" should not throw 
PASS body.aLink: IDL set to "\0" followed by getAttribute() 
PASS body.aLink: IDL set to "\0" followed by IDL get 
PASS body.aLink: IDL set to null should not throw 
FAIL body.aLink: IDL set to null followed by getAttribute() assert_equals: expected "" but got "null"
FAIL body.aLink: IDL set to null followed by IDL get assert_equals: expected "" but got "null"
PASS body.aLink: IDL set to object "test-toString" should not throw 
PASS body.aLink: IDL set to object "test-toString" followed by getAttribute() 
PASS body.aLink: IDL set to object "test-toString" followed by IDL get 
PASS body.aLink: IDL set to object "test-valueOf" should not throw 
PASS body.aLink: IDL set to object "test-valueOf" followed by getAttribute() 
PASS body.aLink: IDL set to object "test-valueOf" followed by IDL get 
PASS body.bgColor: typeof IDL attribute 
PASS body.bgColor: IDL get with DOM attribute unset 
PASS body.bgColor: setAttribute() to "" followed by getAttribute() 
PASS body.bgColor: setAttribute() to "" followed by IDL get 
PASS body.bgColor: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.bgColor: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.bgColor: setAttribute() to undefined followed by getAttribute() 
PASS body.bgColor: setAttribute() to undefined followed by IDL get 
PASS body.bgColor: setAttribute() to 7 followed by getAttribute() 
PASS body.bgColor: setAttribute() to 7 followed by IDL get 
PASS body.bgColor: setAttribute() to 1.5 followed by getAttribute() 
PASS body.bgColor: setAttribute() to 1.5 followed by IDL get 
PASS body.bgColor: setAttribute() to true followed by getAttribute() 
PASS body.bgColor: setAttribute() to true followed by IDL get 
PASS body.bgColor: setAttribute() to false followed by getAttribute() 
PASS body.bgColor: setAttribute() to false followed by IDL get 
PASS body.bgColor: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS body.bgColor: setAttribute() to object "[object Object]" followed by IDL get 
PASS body.bgColor: setAttribute() to NaN followed by getAttribute() 
PASS body.bgColor: setAttribute() to NaN followed by IDL get 
PASS body.bgColor: setAttribute() to Infinity followed by getAttribute() 
PASS body.bgColor: setAttribute() to Infinity followed by IDL get 
PASS body.bgColor: setAttribute() to -Infinity followed by getAttribute() 
PASS body.bgColor: setAttribute() to -Infinity followed by IDL get 
PASS body.bgColor: setAttribute() to "\0" followed by getAttribute() 
PASS body.bgColor: setAttribute() to "\0" followed by IDL get 
PASS body.bgColor: setAttribute() to null followed by getAttribute() 
PASS body.bgColor: setAttribute() to null followed by IDL get 
PASS body.bgColor: setAttribute() to object "test-toString" followed by getAttribute() 
PASS body.bgColor: setAttribute() to object "test-toString" followed by IDL get 
PASS body.bgColor: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS body.bgColor: setAttribute() to object "test-valueOf" followed by IDL get 
PASS body.bgColor: IDL set to "" should not throw 
PASS body.bgColor: IDL set to "" followed by getAttribute() 
PASS body.bgColor: IDL set to "" followed by IDL get 
PASS body.bgColor: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS body.bgColor: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.bgColor: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.bgColor: IDL set to undefined should not throw 
PASS body.bgColor: IDL set to undefined followed by getAttribute() 
PASS body.bgColor: IDL set to undefined followed by IDL get 
PASS body.bgColor: IDL set to 7 should not throw 
PASS body.bgColor: IDL set to 7 followed by getAttribute() 
PASS body.bgColor: IDL set to 7 followed by IDL get 
PASS body.bgColor: IDL set to 1.5 should not throw 
PASS body.bgColor: IDL set to 1.5 followed by getAttribute() 
PASS body.bgColor: IDL set to 1.5 followed by IDL get 
PASS body.bgColor: IDL set to true should not throw 
PASS body.bgColor: IDL set to true followed by getAttribute() 
PASS body.bgColor: IDL set to true followed by IDL get 
PASS body.bgColor: IDL set to false should not throw 
PASS body.bgColor: IDL set to false followed by getAttribute() 
PASS body.bgColor: IDL set to false followed by IDL get 
PASS body.bgColor: IDL set to object "[object Object]" should not throw 
PASS body.bgColor: IDL set to object "[object Object]" followed by getAttribute() 
PASS body.bgColor: IDL set to object "[object Object]" followed by IDL get 
PASS body.bgColor: IDL set to NaN should not throw 
PASS body.bgColor: IDL set to NaN followed by getAttribute() 
PASS body.bgColor: IDL set to NaN followed by IDL get 
PASS body.bgColor: IDL set to Infinity should not throw 
PASS body.bgColor: IDL set to Infinity followed by getAttribute() 
PASS body.bgColor: IDL set to Infinity followed by IDL get 
PASS body.bgColor: IDL set to -Infinity should not throw 
PASS body.bgColor: IDL set to -Infinity followed by getAttribute() 
PASS body.bgColor: IDL set to -Infinity followed by IDL get 
PASS body.bgColor: IDL set to "\0" should not throw 
PASS body.bgColor: IDL set to "\0" followed by getAttribute() 
PASS body.bgColor: IDL set to "\0" followed by IDL get 
PASS body.bgColor: IDL set to null should not throw 
FAIL body.bgColor: IDL set to null followed by getAttribute() assert_equals: expected "" but got "null"
FAIL body.bgColor: IDL set to null followed by IDL get assert_equals: expected "" but got "null"
PASS body.bgColor: IDL set to object "test-toString" should not throw 
PASS body.bgColor: IDL set to object "test-toString" followed by getAttribute() 
PASS body.bgColor: IDL set to object "test-toString" followed by IDL get 
PASS body.bgColor: IDL set to object "test-valueOf" should not throw 
PASS body.bgColor: IDL set to object "test-valueOf" followed by getAttribute() 
PASS body.bgColor: IDL set to object "test-valueOf" followed by IDL get 
PASS body.background: typeof IDL attribute 
PASS body.background: IDL get with DOM attribute unset 
PASS body.background: setAttribute() to "" followed by getAttribute() 
PASS body.background: setAttribute() to "" followed by IDL get 
PASS body.background: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.background: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.background: setAttribute() to undefined followed by getAttribute() 
PASS body.background: setAttribute() to undefined followed by IDL get 
PASS body.background: setAttribute() to 7 followed by getAttribute() 
PASS body.background: setAttribute() to 7 followed by IDL get 
PASS body.background: setAttribute() to 1.5 followed by getAttribute() 
PASS body.background: setAttribute() to 1.5 followed by IDL get 
PASS body.background: setAttribute() to true followed by getAttribute() 
PASS body.background: setAttribute() to true followed by IDL get 
PASS body.background: setAttribute() to false followed by getAttribute() 
PASS body.background: setAttribute() to false followed by IDL get 
PASS body.background: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS body.background: setAttribute() to object "[object Object]" followed by IDL get 
PASS body.background: setAttribute() to NaN followed by getAttribute() 
PASS body.background: setAttribute() to NaN followed by IDL get 
PASS body.background: setAttribute() to Infinity followed by getAttribute() 
PASS body.background: setAttribute() to Infinity followed by IDL get 
PASS body.background: setAttribute() to -Infinity followed by getAttribute() 
PASS body.background: setAttribute() to -Infinity followed by IDL get 
PASS body.background: setAttribute() to "\0" followed by getAttribute() 
PASS body.background: setAttribute() to "\0" followed by IDL get 
PASS body.background: setAttribute() to null followed by getAttribute() 
PASS body.background: setAttribute() to null followed by IDL get 
PASS body.background: setAttribute() to object "test-toString" followed by getAttribute() 
PASS body.background: setAttribute() to object "test-toString" followed by IDL get 
PASS body.background: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS body.background: setAttribute() to object "test-valueOf" followed by IDL get 
PASS body.background: IDL set to "" should not throw 
PASS body.background: IDL set to "" followed by getAttribute() 
PASS body.background: IDL set to "" followed by IDL get 
PASS body.background: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS body.background: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS body.background: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS body.background: IDL set to undefined should not throw 
PASS body.background: IDL set to undefined followed by getAttribute() 
PASS body.background: IDL set to undefined followed by IDL get 
PASS body.background: IDL set to 7 should not throw 
PASS body.background: IDL set to 7 followed by getAttribute() 
PASS body.background: IDL set to 7 followed by IDL get 
PASS body.background: IDL set to 1.5 should not throw 
PASS body.background: IDL set to 1.5 followed by getAttribute() 
PASS body.background: IDL set to 1.5 followed by IDL get 
PASS body.background: IDL set to true should not throw 
PASS body.background: IDL set to true followed by getAttribute() 
PASS body.background: IDL set to true followed by IDL get 
PASS body.background: IDL set to false should not throw 
PASS body.background: IDL set to false followed by getAttribute() 
PASS body.background: IDL set to false followed by IDL get 
PASS body.background: IDL set to object "[object Object]" should not throw 
PASS body.background: IDL set to object "[object Object]" followed by getAttribute() 
PASS body.background: IDL set to object "[object Object]" followed by IDL get 
PASS body.background: IDL set to NaN should not throw 
PASS body.background: IDL set to NaN followed by getAttribute() 
PASS body.background: IDL set to NaN followed by IDL get 
PASS body.background: IDL set to Infinity should not throw 
PASS body.background: IDL set to Infinity followed by getAttribute() 
PASS body.background: IDL set to Infinity followed by IDL get 
PASS body.background: IDL set to -Infinity should not throw 
PASS body.background: IDL set to -Infinity followed by getAttribute() 
PASS body.background: IDL set to -Infinity followed by IDL get 
PASS body.background: IDL set to "\0" should not throw 
PASS body.background: IDL set to "\0" followed by getAttribute() 
PASS body.background: IDL set to "\0" followed by IDL get 
PASS body.background: IDL set to null should not throw 
PASS body.background: IDL set to null followed by getAttribute() 
PASS body.background: IDL set to null followed by IDL get 
PASS body.background: IDL set to object "test-toString" should not throw 
PASS body.background: IDL set to object "test-toString" followed by getAttribute() 
PASS body.background: IDL set to object "test-toString" followed by IDL get 
PASS body.background: IDL set to object "test-valueOf" should not throw 
PASS body.background: IDL set to object "test-valueOf" followed by getAttribute() 
PASS body.background: IDL set to object "test-valueOf" followed by IDL get 
FAIL body.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL body.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS body.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL body.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL body.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL body.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to null followed by getAttribute() 
FAIL body.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL body.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL body.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to true followed by getAttribute() 
FAIL body.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to false followed by getAttribute() 
FAIL body.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL body.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL body.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL body.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL body.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL body.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL body.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL body.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL body.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS body.itemScope: IDL set to "" should not throw 
FAIL body.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL body.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS body.itemScope: IDL set to " foo " should not throw 
PASS body.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL body.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS body.itemScope: IDL set to undefined should not throw 
FAIL body.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL body.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS body.itemScope: IDL set to null should not throw 
FAIL body.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL body.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS body.itemScope: IDL set to 7 should not throw 
PASS body.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL body.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS body.itemScope: IDL set to 1.5 should not throw 
PASS body.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL body.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS body.itemScope: IDL set to true should not throw 
PASS body.itemScope: IDL set to true followed by hasAttribute() 
PASS body.itemScope: IDL set to true followed by IDL get 
PASS body.itemScope: IDL set to false should not throw 
FAIL body.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS body.itemScope: IDL set to false followed by IDL get 
PASS body.itemScope: IDL set to object "[object Object]" should not throw 
PASS body.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL body.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS body.itemScope: IDL set to NaN should not throw 
FAIL body.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL body.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS body.itemScope: IDL set to Infinity should not throw 
PASS body.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL body.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS body.itemScope: IDL set to -Infinity should not throw 
PASS body.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL body.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS body.itemScope: IDL set to "\0" should not throw 
PASS body.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL body.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS body.itemScope: IDL set to object "test-toString" should not throw 
PASS body.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL body.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS body.itemScope: IDL set to object "test-valueOf" should not throw 
PASS body.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL body.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL body.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL body.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS body.itemId: setAttribute() to "" followed by getAttribute() 
FAIL body.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS body.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL body.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS body.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL body.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS body.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL body.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS body.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL body.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS body.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL body.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS body.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL body.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS body.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL body.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS body.itemId: setAttribute() to true followed by getAttribute() 
FAIL body.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS body.itemId: setAttribute() to false followed by getAttribute() 
FAIL body.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS body.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL body.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS body.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL body.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS body.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL body.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS body.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL body.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS body.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL body.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS body.itemId: setAttribute() to null followed by getAttribute() 
FAIL body.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS body.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL body.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS body.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL body.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS body.itemId: IDL set to "" should not throw 
FAIL body.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL body.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS body.itemId: IDL set to " foo " should not throw 
FAIL body.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL body.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS body.itemId: IDL set to "http://site.example/" should not throw 
FAIL body.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS body.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS body.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL body.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL body.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS body.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL body.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL body.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS body.itemId: IDL set to undefined should not throw 
FAIL body.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL body.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS body.itemId: IDL set to 7 should not throw 
FAIL body.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL body.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS body.itemId: IDL set to 1.5 should not throw 
FAIL body.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL body.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS body.itemId: IDL set to true should not throw 
FAIL body.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL body.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS body.itemId: IDL set to false should not throw 
FAIL body.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL body.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS body.itemId: IDL set to object "[object Object]" should not throw 
FAIL body.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL body.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS body.itemId: IDL set to NaN should not throw 
FAIL body.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL body.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS body.itemId: IDL set to Infinity should not throw 
FAIL body.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL body.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS body.itemId: IDL set to -Infinity should not throw 
FAIL body.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL body.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS body.itemId: IDL set to "\0" should not throw 
FAIL body.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL body.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS body.itemId: IDL set to null should not throw 
FAIL body.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL body.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS body.itemId: IDL set to object "test-toString" should not throw 
FAIL body.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL body.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS body.itemId: IDL set to object "test-valueOf" should not throw 
PASS body.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL body.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS article.title: typeof IDL attribute 
PASS article.title: IDL get with DOM attribute unset 
PASS article.title: setAttribute() to "" followed by getAttribute() 
PASS article.title: setAttribute() to "" followed by IDL get 
PASS article.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS article.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS article.title: setAttribute() to undefined followed by getAttribute() 
PASS article.title: setAttribute() to undefined followed by IDL get 
PASS article.title: setAttribute() to 7 followed by getAttribute() 
PASS article.title: setAttribute() to 7 followed by IDL get 
PASS article.title: setAttribute() to 1.5 followed by getAttribute() 
PASS article.title: setAttribute() to 1.5 followed by IDL get 
PASS article.title: setAttribute() to true followed by getAttribute() 
PASS article.title: setAttribute() to true followed by IDL get 
PASS article.title: setAttribute() to false followed by getAttribute() 
PASS article.title: setAttribute() to false followed by IDL get 
PASS article.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS article.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS article.title: setAttribute() to NaN followed by getAttribute() 
PASS article.title: setAttribute() to NaN followed by IDL get 
PASS article.title: setAttribute() to Infinity followed by getAttribute() 
PASS article.title: setAttribute() to Infinity followed by IDL get 
PASS article.title: setAttribute() to -Infinity followed by getAttribute() 
PASS article.title: setAttribute() to -Infinity followed by IDL get 
PASS article.title: setAttribute() to "\0" followed by getAttribute() 
PASS article.title: setAttribute() to "\0" followed by IDL get 
PASS article.title: setAttribute() to null followed by getAttribute() 
PASS article.title: setAttribute() to null followed by IDL get 
PASS article.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS article.title: setAttribute() to object "test-toString" followed by IDL get 
PASS article.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS article.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS article.title: IDL set to "" should not throw 
PASS article.title: IDL set to "" followed by getAttribute() 
PASS article.title: IDL set to "" followed by IDL get 
PASS article.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS article.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS article.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS article.title: IDL set to undefined should not throw 
PASS article.title: IDL set to undefined followed by getAttribute() 
PASS article.title: IDL set to undefined followed by IDL get 
PASS article.title: IDL set to 7 should not throw 
PASS article.title: IDL set to 7 followed by getAttribute() 
PASS article.title: IDL set to 7 followed by IDL get 
PASS article.title: IDL set to 1.5 should not throw 
PASS article.title: IDL set to 1.5 followed by getAttribute() 
PASS article.title: IDL set to 1.5 followed by IDL get 
PASS article.title: IDL set to true should not throw 
PASS article.title: IDL set to true followed by getAttribute() 
PASS article.title: IDL set to true followed by IDL get 
PASS article.title: IDL set to false should not throw 
PASS article.title: IDL set to false followed by getAttribute() 
PASS article.title: IDL set to false followed by IDL get 
PASS article.title: IDL set to object "[object Object]" should not throw 
PASS article.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS article.title: IDL set to object "[object Object]" followed by IDL get 
PASS article.title: IDL set to NaN should not throw 
PASS article.title: IDL set to NaN followed by getAttribute() 
PASS article.title: IDL set to NaN followed by IDL get 
PASS article.title: IDL set to Infinity should not throw 
PASS article.title: IDL set to Infinity followed by getAttribute() 
PASS article.title: IDL set to Infinity followed by IDL get 
PASS article.title: IDL set to -Infinity should not throw 
PASS article.title: IDL set to -Infinity followed by getAttribute() 
PASS article.title: IDL set to -Infinity followed by IDL get 
PASS article.title: IDL set to "\0" should not throw 
PASS article.title: IDL set to "\0" followed by getAttribute() 
PASS article.title: IDL set to "\0" followed by IDL get 
PASS article.title: IDL set to null should not throw 
PASS article.title: IDL set to null followed by getAttribute() 
PASS article.title: IDL set to null followed by IDL get 
PASS article.title: IDL set to object "test-toString" should not throw 
PASS article.title: IDL set to object "test-toString" followed by getAttribute() 
PASS article.title: IDL set to object "test-toString" followed by IDL get 
PASS article.title: IDL set to object "test-valueOf" should not throw 
PASS article.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS article.title: IDL set to object "test-valueOf" followed by IDL get 
PASS article.lang: typeof IDL attribute 
PASS article.lang: IDL get with DOM attribute unset 
PASS article.lang: setAttribute() to "" followed by getAttribute() 
PASS article.lang: setAttribute() to "" followed by IDL get 
PASS article.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS article.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS article.lang: setAttribute() to undefined followed by getAttribute() 
PASS article.lang: setAttribute() to undefined followed by IDL get 
PASS article.lang: setAttribute() to 7 followed by getAttribute() 
PASS article.lang: setAttribute() to 7 followed by IDL get 
PASS article.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS article.lang: setAttribute() to 1.5 followed by IDL get 
PASS article.lang: setAttribute() to true followed by getAttribute() 
PASS article.lang: setAttribute() to true followed by IDL get 
PASS article.lang: setAttribute() to false followed by getAttribute() 
PASS article.lang: setAttribute() to false followed by IDL get 
PASS article.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS article.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS article.lang: setAttribute() to NaN followed by getAttribute() 
PASS article.lang: setAttribute() to NaN followed by IDL get 
PASS article.lang: setAttribute() to Infinity followed by getAttribute() 
PASS article.lang: setAttribute() to Infinity followed by IDL get 
PASS article.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS article.lang: setAttribute() to -Infinity followed by IDL get 
PASS article.lang: setAttribute() to "\0" followed by getAttribute() 
PASS article.lang: setAttribute() to "\0" followed by IDL get 
PASS article.lang: setAttribute() to null followed by getAttribute() 
PASS article.lang: setAttribute() to null followed by IDL get 
PASS article.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS article.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS article.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS article.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS article.lang: IDL set to "" should not throw 
PASS article.lang: IDL set to "" followed by getAttribute() 
PASS article.lang: IDL set to "" followed by IDL get 
PASS article.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS article.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS article.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS article.lang: IDL set to undefined should not throw 
PASS article.lang: IDL set to undefined followed by getAttribute() 
PASS article.lang: IDL set to undefined followed by IDL get 
PASS article.lang: IDL set to 7 should not throw 
PASS article.lang: IDL set to 7 followed by getAttribute() 
PASS article.lang: IDL set to 7 followed by IDL get 
PASS article.lang: IDL set to 1.5 should not throw 
PASS article.lang: IDL set to 1.5 followed by getAttribute() 
PASS article.lang: IDL set to 1.5 followed by IDL get 
PASS article.lang: IDL set to true should not throw 
PASS article.lang: IDL set to true followed by getAttribute() 
PASS article.lang: IDL set to true followed by IDL get 
PASS article.lang: IDL set to false should not throw 
PASS article.lang: IDL set to false followed by getAttribute() 
PASS article.lang: IDL set to false followed by IDL get 
PASS article.lang: IDL set to object "[object Object]" should not throw 
PASS article.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS article.lang: IDL set to object "[object Object]" followed by IDL get 
PASS article.lang: IDL set to NaN should not throw 
PASS article.lang: IDL set to NaN followed by getAttribute() 
PASS article.lang: IDL set to NaN followed by IDL get 
PASS article.lang: IDL set to Infinity should not throw 
PASS article.lang: IDL set to Infinity followed by getAttribute() 
PASS article.lang: IDL set to Infinity followed by IDL get 
PASS article.lang: IDL set to -Infinity should not throw 
PASS article.lang: IDL set to -Infinity followed by getAttribute() 
PASS article.lang: IDL set to -Infinity followed by IDL get 
PASS article.lang: IDL set to "\0" should not throw 
PASS article.lang: IDL set to "\0" followed by getAttribute() 
PASS article.lang: IDL set to "\0" followed by IDL get 
PASS article.lang: IDL set to null should not throw 
PASS article.lang: IDL set to null followed by getAttribute() 
PASS article.lang: IDL set to null followed by IDL get 
PASS article.lang: IDL set to object "test-toString" should not throw 
PASS article.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS article.lang: IDL set to object "test-toString" followed by IDL get 
PASS article.lang: IDL set to object "test-valueOf" should not throw 
PASS article.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS article.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS article.dir: typeof IDL attribute 
PASS article.dir: IDL get with DOM attribute unset 
PASS article.dir: setAttribute() to "" followed by getAttribute() 
PASS article.dir: setAttribute() to "" followed by IDL get 
PASS article.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS article.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS article.dir: setAttribute() to undefined followed by getAttribute() 
PASS article.dir: setAttribute() to undefined followed by IDL get 
PASS article.dir: setAttribute() to 7 followed by getAttribute() 
PASS article.dir: setAttribute() to 7 followed by IDL get 
PASS article.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS article.dir: setAttribute() to 1.5 followed by IDL get 
PASS article.dir: setAttribute() to true followed by getAttribute() 
PASS article.dir: setAttribute() to true followed by IDL get 
PASS article.dir: setAttribute() to false followed by getAttribute() 
PASS article.dir: setAttribute() to false followed by IDL get 
PASS article.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS article.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS article.dir: setAttribute() to NaN followed by getAttribute() 
PASS article.dir: setAttribute() to NaN followed by IDL get 
PASS article.dir: setAttribute() to Infinity followed by getAttribute() 
PASS article.dir: setAttribute() to Infinity followed by IDL get 
PASS article.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS article.dir: setAttribute() to -Infinity followed by IDL get 
PASS article.dir: setAttribute() to "\0" followed by getAttribute() 
PASS article.dir: setAttribute() to "\0" followed by IDL get 
PASS article.dir: setAttribute() to null followed by getAttribute() 
PASS article.dir: setAttribute() to null followed by IDL get 
PASS article.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS article.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS article.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS article.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS article.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS article.dir: setAttribute() to "ltr" followed by IDL get 
PASS article.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS article.dir: setAttribute() to "xltr" followed by IDL get 
PASS article.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS article.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS article.dir: setAttribute() to "tr" followed by getAttribute() 
PASS article.dir: setAttribute() to "tr" followed by IDL get 
PASS article.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS article.dir: setAttribute() to "LTR" followed by IDL get 
PASS article.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS article.dir: setAttribute() to "rtl" followed by IDL get 
PASS article.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS article.dir: setAttribute() to "xrtl" followed by IDL get 
PASS article.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS article.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS article.dir: setAttribute() to "tl" followed by getAttribute() 
PASS article.dir: setAttribute() to "tl" followed by IDL get 
PASS article.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS article.dir: setAttribute() to "RTL" followed by IDL get 
PASS article.dir: setAttribute() to "auto" followed by getAttribute() 
PASS article.dir: setAttribute() to "auto" followed by IDL get 
PASS article.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS article.dir: setAttribute() to "xauto" followed by IDL get 
PASS article.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS article.dir: setAttribute() to "auto\0" followed by IDL get 
PASS article.dir: setAttribute() to "uto" followed by getAttribute() 
PASS article.dir: setAttribute() to "uto" followed by IDL get 
PASS article.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS article.dir: setAttribute() to "AUTO" followed by IDL get 
PASS article.dir: IDL set to "" should not throw 
PASS article.dir: IDL set to "" followed by getAttribute() 
PASS article.dir: IDL set to "" followed by IDL get 
PASS article.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS article.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS article.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS article.dir: IDL set to undefined should not throw 
PASS article.dir: IDL set to undefined followed by getAttribute() 
PASS article.dir: IDL set to undefined followed by IDL get 
PASS article.dir: IDL set to 7 should not throw 
PASS article.dir: IDL set to 7 followed by getAttribute() 
PASS article.dir: IDL set to 7 followed by IDL get 
PASS article.dir: IDL set to 1.5 should not throw 
PASS article.dir: IDL set to 1.5 followed by getAttribute() 
PASS article.dir: IDL set to 1.5 followed by IDL get 
PASS article.dir: IDL set to true should not throw 
PASS article.dir: IDL set to true followed by getAttribute() 
PASS article.dir: IDL set to true followed by IDL get 
PASS article.dir: IDL set to false should not throw 
PASS article.dir: IDL set to false followed by getAttribute() 
PASS article.dir: IDL set to false followed by IDL get 
PASS article.dir: IDL set to object "[object Object]" should not throw 
PASS article.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS article.dir: IDL set to object "[object Object]" followed by IDL get 
PASS article.dir: IDL set to NaN should not throw 
PASS article.dir: IDL set to NaN followed by getAttribute() 
PASS article.dir: IDL set to NaN followed by IDL get 
PASS article.dir: IDL set to Infinity should not throw 
PASS article.dir: IDL set to Infinity followed by getAttribute() 
PASS article.dir: IDL set to Infinity followed by IDL get 
PASS article.dir: IDL set to -Infinity should not throw 
PASS article.dir: IDL set to -Infinity followed by getAttribute() 
PASS article.dir: IDL set to -Infinity followed by IDL get 
PASS article.dir: IDL set to "\0" should not throw 
PASS article.dir: IDL set to "\0" followed by getAttribute() 
PASS article.dir: IDL set to "\0" followed by IDL get 
PASS article.dir: IDL set to null should not throw 
PASS article.dir: IDL set to null followed by IDL get 
PASS article.dir: IDL set to object "test-toString" should not throw 
PASS article.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS article.dir: IDL set to object "test-toString" followed by IDL get 
PASS article.dir: IDL set to object "test-valueOf" should not throw 
PASS article.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS article.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS article.dir: IDL set to "ltr" should not throw 
PASS article.dir: IDL set to "ltr" followed by getAttribute() 
PASS article.dir: IDL set to "ltr" followed by IDL get 
PASS article.dir: IDL set to "xltr" should not throw 
PASS article.dir: IDL set to "xltr" followed by getAttribute() 
PASS article.dir: IDL set to "xltr" followed by IDL get 
PASS article.dir: IDL set to "ltr\0" should not throw 
PASS article.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS article.dir: IDL set to "ltr\0" followed by IDL get 
PASS article.dir: IDL set to "tr" should not throw 
PASS article.dir: IDL set to "tr" followed by getAttribute() 
PASS article.dir: IDL set to "tr" followed by IDL get 
PASS article.dir: IDL set to "LTR" should not throw 
PASS article.dir: IDL set to "LTR" followed by getAttribute() 
PASS article.dir: IDL set to "LTR" followed by IDL get 
PASS article.dir: IDL set to "rtl" should not throw 
PASS article.dir: IDL set to "rtl" followed by getAttribute() 
PASS article.dir: IDL set to "rtl" followed by IDL get 
PASS article.dir: IDL set to "xrtl" should not throw 
PASS article.dir: IDL set to "xrtl" followed by getAttribute() 
PASS article.dir: IDL set to "xrtl" followed by IDL get 
PASS article.dir: IDL set to "rtl\0" should not throw 
PASS article.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS article.dir: IDL set to "rtl\0" followed by IDL get 
PASS article.dir: IDL set to "tl" should not throw 
PASS article.dir: IDL set to "tl" followed by getAttribute() 
PASS article.dir: IDL set to "tl" followed by IDL get 
PASS article.dir: IDL set to "RTL" should not throw 
PASS article.dir: IDL set to "RTL" followed by getAttribute() 
PASS article.dir: IDL set to "RTL" followed by IDL get 
PASS article.dir: IDL set to "auto" should not throw 
PASS article.dir: IDL set to "auto" followed by getAttribute() 
PASS article.dir: IDL set to "auto" followed by IDL get 
PASS article.dir: IDL set to "xauto" should not throw 
PASS article.dir: IDL set to "xauto" followed by getAttribute() 
PASS article.dir: IDL set to "xauto" followed by IDL get 
PASS article.dir: IDL set to "auto\0" should not throw 
PASS article.dir: IDL set to "auto\0" followed by getAttribute() 
PASS article.dir: IDL set to "auto\0" followed by IDL get 
PASS article.dir: IDL set to "uto" should not throw 
PASS article.dir: IDL set to "uto" followed by getAttribute() 
PASS article.dir: IDL set to "uto" followed by IDL get 
PASS article.dir: IDL set to "AUTO" should not throw 
PASS article.dir: IDL set to "AUTO" followed by getAttribute() 
PASS article.dir: IDL set to "AUTO" followed by IDL get 
PASS article.className (<article class>): typeof IDL attribute 
PASS article.className (<article class>): IDL get with DOM attribute unset 
PASS article.className (<article class>): setAttribute() to "" followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to "" followed by IDL get 
PASS article.className (<article class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS article.className (<article class>): setAttribute() to undefined followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to undefined followed by IDL get 
PASS article.className (<article class>): setAttribute() to 7 followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to 7 followed by IDL get 
PASS article.className (<article class>): setAttribute() to 1.5 followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to 1.5 followed by IDL get 
PASS article.className (<article class>): setAttribute() to true followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to true followed by IDL get 
PASS article.className (<article class>): setAttribute() to false followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to false followed by IDL get 
PASS article.className (<article class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS article.className (<article class>): setAttribute() to NaN followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to NaN followed by IDL get 
PASS article.className (<article class>): setAttribute() to Infinity followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to Infinity followed by IDL get 
PASS article.className (<article class>): setAttribute() to -Infinity followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to -Infinity followed by IDL get 
PASS article.className (<article class>): setAttribute() to "\0" followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to "\0" followed by IDL get 
PASS article.className (<article class>): setAttribute() to null followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to null followed by IDL get 
PASS article.className (<article class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to object "test-toString" followed by IDL get 
PASS article.className (<article class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS article.className (<article class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS article.className (<article class>): IDL set to "" should not throw 
PASS article.className (<article class>): IDL set to "" followed by getAttribute() 
PASS article.className (<article class>): IDL set to "" followed by IDL get 
PASS article.className (<article class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS article.className (<article class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS article.className (<article class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS article.className (<article class>): IDL set to undefined should not throw 
PASS article.className (<article class>): IDL set to undefined followed by getAttribute() 
PASS article.className (<article class>): IDL set to undefined followed by IDL get 
PASS article.className (<article class>): IDL set to 7 should not throw 
PASS article.className (<article class>): IDL set to 7 followed by getAttribute() 
PASS article.className (<article class>): IDL set to 7 followed by IDL get 
PASS article.className (<article class>): IDL set to 1.5 should not throw 
PASS article.className (<article class>): IDL set to 1.5 followed by getAttribute() 
PASS article.className (<article class>): IDL set to 1.5 followed by IDL get 
PASS article.className (<article class>): IDL set to true should not throw 
PASS article.className (<article class>): IDL set to true followed by getAttribute() 
PASS article.className (<article class>): IDL set to true followed by IDL get 
PASS article.className (<article class>): IDL set to false should not throw 
PASS article.className (<article class>): IDL set to false followed by getAttribute() 
PASS article.className (<article class>): IDL set to false followed by IDL get 
PASS article.className (<article class>): IDL set to object "[object Object]" should not throw 
PASS article.className (<article class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS article.className (<article class>): IDL set to object "[object Object]" followed by IDL get 
PASS article.className (<article class>): IDL set to NaN should not throw 
PASS article.className (<article class>): IDL set to NaN followed by getAttribute() 
PASS article.className (<article class>): IDL set to NaN followed by IDL get 
PASS article.className (<article class>): IDL set to Infinity should not throw 
PASS article.className (<article class>): IDL set to Infinity followed by getAttribute() 
PASS article.className (<article class>): IDL set to Infinity followed by IDL get 
PASS article.className (<article class>): IDL set to -Infinity should not throw 
PASS article.className (<article class>): IDL set to -Infinity followed by getAttribute() 
PASS article.className (<article class>): IDL set to -Infinity followed by IDL get 
PASS article.className (<article class>): IDL set to "\0" should not throw 
PASS article.className (<article class>): IDL set to "\0" followed by getAttribute() 
PASS article.className (<article class>): IDL set to "\0" followed by IDL get 
PASS article.className (<article class>): IDL set to null should not throw 
PASS article.className (<article class>): IDL set to null followed by getAttribute() 
PASS article.className (<article class>): IDL set to null followed by IDL get 
PASS article.className (<article class>): IDL set to object "test-toString" should not throw 
PASS article.className (<article class>): IDL set to object "test-toString" followed by getAttribute() 
PASS article.className (<article class>): IDL set to object "test-toString" followed by IDL get 
PASS article.className (<article class>): IDL set to object "test-valueOf" should not throw 
PASS article.className (<article class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS article.className (<article class>): IDL set to object "test-valueOf" followed by IDL get 
PASS article.hidden: typeof IDL attribute 
PASS article.hidden: IDL get with DOM attribute unset 
PASS article.hidden: setAttribute() to "" followed by getAttribute() 
PASS article.hidden: setAttribute() to "" followed by IDL get 
PASS article.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS article.hidden: setAttribute() to " foo " followed by IDL get 
PASS article.hidden: setAttribute() to undefined followed by getAttribute() 
PASS article.hidden: setAttribute() to undefined followed by IDL get 
PASS article.hidden: setAttribute() to null followed by getAttribute() 
PASS article.hidden: setAttribute() to null followed by IDL get 
PASS article.hidden: setAttribute() to 7 followed by getAttribute() 
PASS article.hidden: setAttribute() to 7 followed by IDL get 
PASS article.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS article.hidden: setAttribute() to 1.5 followed by IDL get 
PASS article.hidden: setAttribute() to true followed by getAttribute() 
PASS article.hidden: setAttribute() to true followed by IDL get 
PASS article.hidden: setAttribute() to false followed by getAttribute() 
PASS article.hidden: setAttribute() to false followed by IDL get 
PASS article.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS article.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS article.hidden: setAttribute() to NaN followed by getAttribute() 
PASS article.hidden: setAttribute() to NaN followed by IDL get 
PASS article.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS article.hidden: setAttribute() to Infinity followed by IDL get 
PASS article.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS article.hidden: setAttribute() to -Infinity followed by IDL get 
PASS article.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS article.hidden: setAttribute() to "\0" followed by IDL get 
PASS article.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS article.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS article.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS article.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS article.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS article.hidden: setAttribute() to "hidden" followed by IDL get 
PASS article.hidden: IDL set to "" should not throw 
PASS article.hidden: IDL set to "" followed by hasAttribute() 
PASS article.hidden: IDL set to "" followed by IDL get 
PASS article.hidden: IDL set to " foo " should not throw 
PASS article.hidden: IDL set to " foo " followed by hasAttribute() 
PASS article.hidden: IDL set to " foo " followed by IDL get 
PASS article.hidden: IDL set to undefined should not throw 
PASS article.hidden: IDL set to undefined followed by hasAttribute() 
PASS article.hidden: IDL set to undefined followed by IDL get 
PASS article.hidden: IDL set to null should not throw 
PASS article.hidden: IDL set to null followed by hasAttribute() 
PASS article.hidden: IDL set to null followed by IDL get 
PASS article.hidden: IDL set to 7 should not throw 
PASS article.hidden: IDL set to 7 followed by hasAttribute() 
PASS article.hidden: IDL set to 7 followed by IDL get 
PASS article.hidden: IDL set to 1.5 should not throw 
PASS article.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS article.hidden: IDL set to 1.5 followed by IDL get 
PASS article.hidden: IDL set to true should not throw 
PASS article.hidden: IDL set to true followed by hasAttribute() 
PASS article.hidden: IDL set to true followed by IDL get 
PASS article.hidden: IDL set to false should not throw 
PASS article.hidden: IDL set to false followed by hasAttribute() 
PASS article.hidden: IDL set to false followed by IDL get 
PASS article.hidden: IDL set to object "[object Object]" should not throw 
PASS article.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS article.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS article.hidden: IDL set to NaN should not throw 
PASS article.hidden: IDL set to NaN followed by hasAttribute() 
PASS article.hidden: IDL set to NaN followed by IDL get 
PASS article.hidden: IDL set to Infinity should not throw 
PASS article.hidden: IDL set to Infinity followed by hasAttribute() 
PASS article.hidden: IDL set to Infinity followed by IDL get 
PASS article.hidden: IDL set to -Infinity should not throw 
PASS article.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS article.hidden: IDL set to -Infinity followed by IDL get 
PASS article.hidden: IDL set to "\0" should not throw 
PASS article.hidden: IDL set to "\0" followed by hasAttribute() 
PASS article.hidden: IDL set to "\0" followed by IDL get 
PASS article.hidden: IDL set to object "test-toString" should not throw 
PASS article.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS article.hidden: IDL set to object "test-toString" followed by IDL get 
PASS article.hidden: IDL set to object "test-valueOf" should not throw 
PASS article.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS article.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS article.accessKey: typeof IDL attribute 
PASS article.accessKey: IDL get with DOM attribute unset 
PASS article.accessKey: setAttribute() to "" followed by getAttribute() 
PASS article.accessKey: setAttribute() to "" followed by IDL get 
PASS article.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS article.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS article.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS article.accessKey: setAttribute() to undefined followed by IDL get 
PASS article.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS article.accessKey: setAttribute() to 7 followed by IDL get 
PASS article.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS article.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS article.accessKey: setAttribute() to true followed by getAttribute() 
PASS article.accessKey: setAttribute() to true followed by IDL get 
PASS article.accessKey: setAttribute() to false followed by getAttribute() 
PASS article.accessKey: setAttribute() to false followed by IDL get 
PASS article.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS article.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS article.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS article.accessKey: setAttribute() to NaN followed by IDL get 
PASS article.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS article.accessKey: setAttribute() to Infinity followed by IDL get 
PASS article.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS article.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS article.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS article.accessKey: setAttribute() to "\0" followed by IDL get 
PASS article.accessKey: setAttribute() to null followed by getAttribute() 
PASS article.accessKey: setAttribute() to null followed by IDL get 
PASS article.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS article.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS article.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS article.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS article.accessKey: IDL set to "" should not throw 
PASS article.accessKey: IDL set to "" followed by getAttribute() 
PASS article.accessKey: IDL set to "" followed by IDL get 
PASS article.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS article.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS article.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS article.accessKey: IDL set to undefined should not throw 
PASS article.accessKey: IDL set to undefined followed by getAttribute() 
PASS article.accessKey: IDL set to undefined followed by IDL get 
PASS article.accessKey: IDL set to 7 should not throw 
PASS article.accessKey: IDL set to 7 followed by getAttribute() 
PASS article.accessKey: IDL set to 7 followed by IDL get 
PASS article.accessKey: IDL set to 1.5 should not throw 
PASS article.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS article.accessKey: IDL set to 1.5 followed by IDL get 
PASS article.accessKey: IDL set to true should not throw 
PASS article.accessKey: IDL set to true followed by getAttribute() 
PASS article.accessKey: IDL set to true followed by IDL get 
PASS article.accessKey: IDL set to false should not throw 
PASS article.accessKey: IDL set to false followed by getAttribute() 
PASS article.accessKey: IDL set to false followed by IDL get 
PASS article.accessKey: IDL set to object "[object Object]" should not throw 
PASS article.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS article.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS article.accessKey: IDL set to NaN should not throw 
PASS article.accessKey: IDL set to NaN followed by getAttribute() 
PASS article.accessKey: IDL set to NaN followed by IDL get 
PASS article.accessKey: IDL set to Infinity should not throw 
PASS article.accessKey: IDL set to Infinity followed by getAttribute() 
PASS article.accessKey: IDL set to Infinity followed by IDL get 
PASS article.accessKey: IDL set to -Infinity should not throw 
PASS article.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS article.accessKey: IDL set to -Infinity followed by IDL get 
PASS article.accessKey: IDL set to "\0" should not throw 
PASS article.accessKey: IDL set to "\0" followed by getAttribute() 
PASS article.accessKey: IDL set to "\0" followed by IDL get 
PASS article.accessKey: IDL set to null should not throw 
PASS article.accessKey: IDL set to null followed by getAttribute() 
PASS article.accessKey: IDL set to null followed by IDL get 
PASS article.accessKey: IDL set to object "test-toString" should not throw 
PASS article.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS article.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS article.accessKey: IDL set to object "test-valueOf" should not throw 
PASS article.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS article.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS article.tabIndex: typeof IDL attribute 
PASS article.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS article.tabIndex: setAttribute() to -36 followed by IDL get 
PASS article.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS article.tabIndex: setAttribute() to -1 followed by IDL get 
PASS article.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS article.tabIndex: setAttribute() to 0 followed by IDL get 
PASS article.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS article.tabIndex: setAttribute() to 1 followed by IDL get 
PASS article.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS article.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS article.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS article.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS article.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS article.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS article.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS article.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS article.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS article.tabIndex: setAttribute() to "0" followed by IDL get 
PASS article.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS article.tabIndex: setAttribute() to "1" followed by IDL get 
PASS article.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS article.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS article.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS article.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS article.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS article.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS article.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS article.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS article.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS article.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS article.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS article.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS article.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS article.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS article.tabIndex: IDL set to -36 should not throw 
PASS article.tabIndex: IDL set to -36 followed by getAttribute() 
PASS article.tabIndex: IDL set to -36 followed by IDL get 
PASS article.tabIndex: IDL set to -1 should not throw 
PASS article.tabIndex: IDL set to -1 followed by getAttribute() 
PASS article.tabIndex: IDL set to -1 followed by IDL get 
PASS article.tabIndex: IDL set to 0 should not throw 
PASS article.tabIndex: IDL set to 0 followed by getAttribute() 
PASS article.tabIndex: IDL set to 0 followed by IDL get 
PASS article.tabIndex: IDL set to 1 should not throw 
PASS article.tabIndex: IDL set to 1 followed by getAttribute() 
PASS article.tabIndex: IDL set to 1 followed by IDL get 
PASS article.tabIndex: IDL set to 2147483647 should not throw 
PASS article.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS article.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS article.tabIndex: IDL set to -2147483648 should not throw 
PASS article.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS article.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL article.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL article.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS article.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL article.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL article.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL article.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to null followed by getAttribute() 
FAIL article.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL article.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL article.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to true followed by getAttribute() 
FAIL article.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to false followed by getAttribute() 
FAIL article.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL article.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL article.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL article.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL article.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL article.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL article.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL article.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL article.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS article.itemScope: IDL set to "" should not throw 
FAIL article.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL article.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS article.itemScope: IDL set to " foo " should not throw 
PASS article.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL article.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS article.itemScope: IDL set to undefined should not throw 
FAIL article.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL article.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS article.itemScope: IDL set to null should not throw 
FAIL article.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL article.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS article.itemScope: IDL set to 7 should not throw 
PASS article.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL article.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS article.itemScope: IDL set to 1.5 should not throw 
PASS article.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL article.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS article.itemScope: IDL set to true should not throw 
PASS article.itemScope: IDL set to true followed by hasAttribute() 
PASS article.itemScope: IDL set to true followed by IDL get 
PASS article.itemScope: IDL set to false should not throw 
FAIL article.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS article.itemScope: IDL set to false followed by IDL get 
PASS article.itemScope: IDL set to object "[object Object]" should not throw 
PASS article.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL article.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS article.itemScope: IDL set to NaN should not throw 
FAIL article.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL article.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS article.itemScope: IDL set to Infinity should not throw 
PASS article.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL article.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS article.itemScope: IDL set to -Infinity should not throw 
PASS article.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL article.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS article.itemScope: IDL set to "\0" should not throw 
PASS article.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL article.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS article.itemScope: IDL set to object "test-toString" should not throw 
PASS article.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL article.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS article.itemScope: IDL set to object "test-valueOf" should not throw 
PASS article.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL article.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL article.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL article.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS article.itemId: setAttribute() to "" followed by getAttribute() 
FAIL article.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS article.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL article.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS article.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL article.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS article.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL article.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS article.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL article.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS article.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL article.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS article.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL article.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS article.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL article.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS article.itemId: setAttribute() to true followed by getAttribute() 
FAIL article.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS article.itemId: setAttribute() to false followed by getAttribute() 
FAIL article.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS article.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL article.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS article.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL article.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS article.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL article.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS article.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL article.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS article.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL article.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS article.itemId: setAttribute() to null followed by getAttribute() 
FAIL article.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS article.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL article.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS article.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL article.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS article.itemId: IDL set to "" should not throw 
FAIL article.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL article.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS article.itemId: IDL set to " foo " should not throw 
FAIL article.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL article.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS article.itemId: IDL set to "http://site.example/" should not throw 
FAIL article.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS article.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS article.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL article.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL article.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS article.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL article.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL article.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS article.itemId: IDL set to undefined should not throw 
FAIL article.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL article.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS article.itemId: IDL set to 7 should not throw 
FAIL article.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL article.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS article.itemId: IDL set to 1.5 should not throw 
FAIL article.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL article.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS article.itemId: IDL set to true should not throw 
FAIL article.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL article.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS article.itemId: IDL set to false should not throw 
FAIL article.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL article.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS article.itemId: IDL set to object "[object Object]" should not throw 
FAIL article.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL article.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS article.itemId: IDL set to NaN should not throw 
FAIL article.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL article.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS article.itemId: IDL set to Infinity should not throw 
FAIL article.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL article.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS article.itemId: IDL set to -Infinity should not throw 
FAIL article.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL article.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS article.itemId: IDL set to "\0" should not throw 
FAIL article.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL article.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS article.itemId: IDL set to null should not throw 
FAIL article.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL article.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS article.itemId: IDL set to object "test-toString" should not throw 
FAIL article.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL article.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS article.itemId: IDL set to object "test-valueOf" should not throw 
PASS article.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL article.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS section.title: typeof IDL attribute 
PASS section.title: IDL get with DOM attribute unset 
PASS section.title: setAttribute() to "" followed by getAttribute() 
PASS section.title: setAttribute() to "" followed by IDL get 
PASS section.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS section.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS section.title: setAttribute() to undefined followed by getAttribute() 
PASS section.title: setAttribute() to undefined followed by IDL get 
PASS section.title: setAttribute() to 7 followed by getAttribute() 
PASS section.title: setAttribute() to 7 followed by IDL get 
PASS section.title: setAttribute() to 1.5 followed by getAttribute() 
PASS section.title: setAttribute() to 1.5 followed by IDL get 
PASS section.title: setAttribute() to true followed by getAttribute() 
PASS section.title: setAttribute() to true followed by IDL get 
PASS section.title: setAttribute() to false followed by getAttribute() 
PASS section.title: setAttribute() to false followed by IDL get 
PASS section.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS section.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS section.title: setAttribute() to NaN followed by getAttribute() 
PASS section.title: setAttribute() to NaN followed by IDL get 
PASS section.title: setAttribute() to Infinity followed by getAttribute() 
PASS section.title: setAttribute() to Infinity followed by IDL get 
PASS section.title: setAttribute() to -Infinity followed by getAttribute() 
PASS section.title: setAttribute() to -Infinity followed by IDL get 
PASS section.title: setAttribute() to "\0" followed by getAttribute() 
PASS section.title: setAttribute() to "\0" followed by IDL get 
PASS section.title: setAttribute() to null followed by getAttribute() 
PASS section.title: setAttribute() to null followed by IDL get 
PASS section.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS section.title: setAttribute() to object "test-toString" followed by IDL get 
PASS section.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS section.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS section.title: IDL set to "" should not throw 
PASS section.title: IDL set to "" followed by getAttribute() 
PASS section.title: IDL set to "" followed by IDL get 
PASS section.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS section.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS section.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS section.title: IDL set to undefined should not throw 
PASS section.title: IDL set to undefined followed by getAttribute() 
PASS section.title: IDL set to undefined followed by IDL get 
PASS section.title: IDL set to 7 should not throw 
PASS section.title: IDL set to 7 followed by getAttribute() 
PASS section.title: IDL set to 7 followed by IDL get 
PASS section.title: IDL set to 1.5 should not throw 
PASS section.title: IDL set to 1.5 followed by getAttribute() 
PASS section.title: IDL set to 1.5 followed by IDL get 
PASS section.title: IDL set to true should not throw 
PASS section.title: IDL set to true followed by getAttribute() 
PASS section.title: IDL set to true followed by IDL get 
PASS section.title: IDL set to false should not throw 
PASS section.title: IDL set to false followed by getAttribute() 
PASS section.title: IDL set to false followed by IDL get 
PASS section.title: IDL set to object "[object Object]" should not throw 
PASS section.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS section.title: IDL set to object "[object Object]" followed by IDL get 
PASS section.title: IDL set to NaN should not throw 
PASS section.title: IDL set to NaN followed by getAttribute() 
PASS section.title: IDL set to NaN followed by IDL get 
PASS section.title: IDL set to Infinity should not throw 
PASS section.title: IDL set to Infinity followed by getAttribute() 
PASS section.title: IDL set to Infinity followed by IDL get 
PASS section.title: IDL set to -Infinity should not throw 
PASS section.title: IDL set to -Infinity followed by getAttribute() 
PASS section.title: IDL set to -Infinity followed by IDL get 
PASS section.title: IDL set to "\0" should not throw 
PASS section.title: IDL set to "\0" followed by getAttribute() 
PASS section.title: IDL set to "\0" followed by IDL get 
PASS section.title: IDL set to null should not throw 
PASS section.title: IDL set to null followed by getAttribute() 
PASS section.title: IDL set to null followed by IDL get 
PASS section.title: IDL set to object "test-toString" should not throw 
PASS section.title: IDL set to object "test-toString" followed by getAttribute() 
PASS section.title: IDL set to object "test-toString" followed by IDL get 
PASS section.title: IDL set to object "test-valueOf" should not throw 
PASS section.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS section.title: IDL set to object "test-valueOf" followed by IDL get 
PASS section.lang: typeof IDL attribute 
PASS section.lang: IDL get with DOM attribute unset 
PASS section.lang: setAttribute() to "" followed by getAttribute() 
PASS section.lang: setAttribute() to "" followed by IDL get 
PASS section.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS section.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS section.lang: setAttribute() to undefined followed by getAttribute() 
PASS section.lang: setAttribute() to undefined followed by IDL get 
PASS section.lang: setAttribute() to 7 followed by getAttribute() 
PASS section.lang: setAttribute() to 7 followed by IDL get 
PASS section.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS section.lang: setAttribute() to 1.5 followed by IDL get 
PASS section.lang: setAttribute() to true followed by getAttribute() 
PASS section.lang: setAttribute() to true followed by IDL get 
PASS section.lang: setAttribute() to false followed by getAttribute() 
PASS section.lang: setAttribute() to false followed by IDL get 
PASS section.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS section.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS section.lang: setAttribute() to NaN followed by getAttribute() 
PASS section.lang: setAttribute() to NaN followed by IDL get 
PASS section.lang: setAttribute() to Infinity followed by getAttribute() 
PASS section.lang: setAttribute() to Infinity followed by IDL get 
PASS section.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS section.lang: setAttribute() to -Infinity followed by IDL get 
PASS section.lang: setAttribute() to "\0" followed by getAttribute() 
PASS section.lang: setAttribute() to "\0" followed by IDL get 
PASS section.lang: setAttribute() to null followed by getAttribute() 
PASS section.lang: setAttribute() to null followed by IDL get 
PASS section.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS section.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS section.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS section.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS section.lang: IDL set to "" should not throw 
PASS section.lang: IDL set to "" followed by getAttribute() 
PASS section.lang: IDL set to "" followed by IDL get 
PASS section.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS section.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS section.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS section.lang: IDL set to undefined should not throw 
PASS section.lang: IDL set to undefined followed by getAttribute() 
PASS section.lang: IDL set to undefined followed by IDL get 
PASS section.lang: IDL set to 7 should not throw 
PASS section.lang: IDL set to 7 followed by getAttribute() 
PASS section.lang: IDL set to 7 followed by IDL get 
PASS section.lang: IDL set to 1.5 should not throw 
PASS section.lang: IDL set to 1.5 followed by getAttribute() 
PASS section.lang: IDL set to 1.5 followed by IDL get 
PASS section.lang: IDL set to true should not throw 
PASS section.lang: IDL set to true followed by getAttribute() 
PASS section.lang: IDL set to true followed by IDL get 
PASS section.lang: IDL set to false should not throw 
PASS section.lang: IDL set to false followed by getAttribute() 
PASS section.lang: IDL set to false followed by IDL get 
PASS section.lang: IDL set to object "[object Object]" should not throw 
PASS section.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS section.lang: IDL set to object "[object Object]" followed by IDL get 
PASS section.lang: IDL set to NaN should not throw 
PASS section.lang: IDL set to NaN followed by getAttribute() 
PASS section.lang: IDL set to NaN followed by IDL get 
PASS section.lang: IDL set to Infinity should not throw 
PASS section.lang: IDL set to Infinity followed by getAttribute() 
PASS section.lang: IDL set to Infinity followed by IDL get 
PASS section.lang: IDL set to -Infinity should not throw 
PASS section.lang: IDL set to -Infinity followed by getAttribute() 
PASS section.lang: IDL set to -Infinity followed by IDL get 
PASS section.lang: IDL set to "\0" should not throw 
PASS section.lang: IDL set to "\0" followed by getAttribute() 
PASS section.lang: IDL set to "\0" followed by IDL get 
PASS section.lang: IDL set to null should not throw 
PASS section.lang: IDL set to null followed by getAttribute() 
PASS section.lang: IDL set to null followed by IDL get 
PASS section.lang: IDL set to object "test-toString" should not throw 
PASS section.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS section.lang: IDL set to object "test-toString" followed by IDL get 
PASS section.lang: IDL set to object "test-valueOf" should not throw 
PASS section.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS section.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS section.dir: typeof IDL attribute 
PASS section.dir: IDL get with DOM attribute unset 
PASS section.dir: setAttribute() to "" followed by getAttribute() 
PASS section.dir: setAttribute() to "" followed by IDL get 
PASS section.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS section.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS section.dir: setAttribute() to undefined followed by getAttribute() 
PASS section.dir: setAttribute() to undefined followed by IDL get 
PASS section.dir: setAttribute() to 7 followed by getAttribute() 
PASS section.dir: setAttribute() to 7 followed by IDL get 
PASS section.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS section.dir: setAttribute() to 1.5 followed by IDL get 
PASS section.dir: setAttribute() to true followed by getAttribute() 
PASS section.dir: setAttribute() to true followed by IDL get 
PASS section.dir: setAttribute() to false followed by getAttribute() 
PASS section.dir: setAttribute() to false followed by IDL get 
PASS section.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS section.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS section.dir: setAttribute() to NaN followed by getAttribute() 
PASS section.dir: setAttribute() to NaN followed by IDL get 
PASS section.dir: setAttribute() to Infinity followed by getAttribute() 
PASS section.dir: setAttribute() to Infinity followed by IDL get 
PASS section.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS section.dir: setAttribute() to -Infinity followed by IDL get 
PASS section.dir: setAttribute() to "\0" followed by getAttribute() 
PASS section.dir: setAttribute() to "\0" followed by IDL get 
PASS section.dir: setAttribute() to null followed by getAttribute() 
PASS section.dir: setAttribute() to null followed by IDL get 
PASS section.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS section.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS section.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS section.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS section.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS section.dir: setAttribute() to "ltr" followed by IDL get 
PASS section.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS section.dir: setAttribute() to "xltr" followed by IDL get 
PASS section.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS section.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS section.dir: setAttribute() to "tr" followed by getAttribute() 
PASS section.dir: setAttribute() to "tr" followed by IDL get 
PASS section.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS section.dir: setAttribute() to "LTR" followed by IDL get 
PASS section.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS section.dir: setAttribute() to "rtl" followed by IDL get 
PASS section.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS section.dir: setAttribute() to "xrtl" followed by IDL get 
PASS section.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS section.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS section.dir: setAttribute() to "tl" followed by getAttribute() 
PASS section.dir: setAttribute() to "tl" followed by IDL get 
PASS section.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS section.dir: setAttribute() to "RTL" followed by IDL get 
PASS section.dir: setAttribute() to "auto" followed by getAttribute() 
PASS section.dir: setAttribute() to "auto" followed by IDL get 
PASS section.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS section.dir: setAttribute() to "xauto" followed by IDL get 
PASS section.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS section.dir: setAttribute() to "auto\0" followed by IDL get 
PASS section.dir: setAttribute() to "uto" followed by getAttribute() 
PASS section.dir: setAttribute() to "uto" followed by IDL get 
PASS section.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS section.dir: setAttribute() to "AUTO" followed by IDL get 
PASS section.dir: IDL set to "" should not throw 
PASS section.dir: IDL set to "" followed by getAttribute() 
PASS section.dir: IDL set to "" followed by IDL get 
PASS section.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS section.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS section.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS section.dir: IDL set to undefined should not throw 
PASS section.dir: IDL set to undefined followed by getAttribute() 
PASS section.dir: IDL set to undefined followed by IDL get 
PASS section.dir: IDL set to 7 should not throw 
PASS section.dir: IDL set to 7 followed by getAttribute() 
PASS section.dir: IDL set to 7 followed by IDL get 
PASS section.dir: IDL set to 1.5 should not throw 
PASS section.dir: IDL set to 1.5 followed by getAttribute() 
PASS section.dir: IDL set to 1.5 followed by IDL get 
PASS section.dir: IDL set to true should not throw 
PASS section.dir: IDL set to true followed by getAttribute() 
PASS section.dir: IDL set to true followed by IDL get 
PASS section.dir: IDL set to false should not throw 
PASS section.dir: IDL set to false followed by getAttribute() 
PASS section.dir: IDL set to false followed by IDL get 
PASS section.dir: IDL set to object "[object Object]" should not throw 
PASS section.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS section.dir: IDL set to object "[object Object]" followed by IDL get 
PASS section.dir: IDL set to NaN should not throw 
PASS section.dir: IDL set to NaN followed by getAttribute() 
PASS section.dir: IDL set to NaN followed by IDL get 
PASS section.dir: IDL set to Infinity should not throw 
PASS section.dir: IDL set to Infinity followed by getAttribute() 
PASS section.dir: IDL set to Infinity followed by IDL get 
PASS section.dir: IDL set to -Infinity should not throw 
PASS section.dir: IDL set to -Infinity followed by getAttribute() 
PASS section.dir: IDL set to -Infinity followed by IDL get 
PASS section.dir: IDL set to "\0" should not throw 
PASS section.dir: IDL set to "\0" followed by getAttribute() 
PASS section.dir: IDL set to "\0" followed by IDL get 
PASS section.dir: IDL set to null should not throw 
PASS section.dir: IDL set to null followed by IDL get 
PASS section.dir: IDL set to object "test-toString" should not throw 
PASS section.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS section.dir: IDL set to object "test-toString" followed by IDL get 
PASS section.dir: IDL set to object "test-valueOf" should not throw 
PASS section.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS section.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS section.dir: IDL set to "ltr" should not throw 
PASS section.dir: IDL set to "ltr" followed by getAttribute() 
PASS section.dir: IDL set to "ltr" followed by IDL get 
PASS section.dir: IDL set to "xltr" should not throw 
PASS section.dir: IDL set to "xltr" followed by getAttribute() 
PASS section.dir: IDL set to "xltr" followed by IDL get 
PASS section.dir: IDL set to "ltr\0" should not throw 
PASS section.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS section.dir: IDL set to "ltr\0" followed by IDL get 
PASS section.dir: IDL set to "tr" should not throw 
PASS section.dir: IDL set to "tr" followed by getAttribute() 
PASS section.dir: IDL set to "tr" followed by IDL get 
PASS section.dir: IDL set to "LTR" should not throw 
PASS section.dir: IDL set to "LTR" followed by getAttribute() 
PASS section.dir: IDL set to "LTR" followed by IDL get 
PASS section.dir: IDL set to "rtl" should not throw 
PASS section.dir: IDL set to "rtl" followed by getAttribute() 
PASS section.dir: IDL set to "rtl" followed by IDL get 
PASS section.dir: IDL set to "xrtl" should not throw 
PASS section.dir: IDL set to "xrtl" followed by getAttribute() 
PASS section.dir: IDL set to "xrtl" followed by IDL get 
PASS section.dir: IDL set to "rtl\0" should not throw 
PASS section.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS section.dir: IDL set to "rtl\0" followed by IDL get 
PASS section.dir: IDL set to "tl" should not throw 
PASS section.dir: IDL set to "tl" followed by getAttribute() 
PASS section.dir: IDL set to "tl" followed by IDL get 
PASS section.dir: IDL set to "RTL" should not throw 
PASS section.dir: IDL set to "RTL" followed by getAttribute() 
PASS section.dir: IDL set to "RTL" followed by IDL get 
PASS section.dir: IDL set to "auto" should not throw 
PASS section.dir: IDL set to "auto" followed by getAttribute() 
PASS section.dir: IDL set to "auto" followed by IDL get 
PASS section.dir: IDL set to "xauto" should not throw 
PASS section.dir: IDL set to "xauto" followed by getAttribute() 
PASS section.dir: IDL set to "xauto" followed by IDL get 
PASS section.dir: IDL set to "auto\0" should not throw 
PASS section.dir: IDL set to "auto\0" followed by getAttribute() 
PASS section.dir: IDL set to "auto\0" followed by IDL get 
PASS section.dir: IDL set to "uto" should not throw 
PASS section.dir: IDL set to "uto" followed by getAttribute() 
PASS section.dir: IDL set to "uto" followed by IDL get 
PASS section.dir: IDL set to "AUTO" should not throw 
PASS section.dir: IDL set to "AUTO" followed by getAttribute() 
PASS section.dir: IDL set to "AUTO" followed by IDL get 
PASS section.className (<section class>): typeof IDL attribute 
PASS section.className (<section class>): IDL get with DOM attribute unset 
PASS section.className (<section class>): setAttribute() to "" followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to "" followed by IDL get 
PASS section.className (<section class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS section.className (<section class>): setAttribute() to undefined followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to undefined followed by IDL get 
PASS section.className (<section class>): setAttribute() to 7 followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to 7 followed by IDL get 
PASS section.className (<section class>): setAttribute() to 1.5 followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to 1.5 followed by IDL get 
PASS section.className (<section class>): setAttribute() to true followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to true followed by IDL get 
PASS section.className (<section class>): setAttribute() to false followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to false followed by IDL get 
PASS section.className (<section class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS section.className (<section class>): setAttribute() to NaN followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to NaN followed by IDL get 
PASS section.className (<section class>): setAttribute() to Infinity followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to Infinity followed by IDL get 
PASS section.className (<section class>): setAttribute() to -Infinity followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to -Infinity followed by IDL get 
PASS section.className (<section class>): setAttribute() to "\0" followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to "\0" followed by IDL get 
PASS section.className (<section class>): setAttribute() to null followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to null followed by IDL get 
PASS section.className (<section class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to object "test-toString" followed by IDL get 
PASS section.className (<section class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS section.className (<section class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS section.className (<section class>): IDL set to "" should not throw 
PASS section.className (<section class>): IDL set to "" followed by getAttribute() 
PASS section.className (<section class>): IDL set to "" followed by IDL get 
PASS section.className (<section class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS section.className (<section class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS section.className (<section class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS section.className (<section class>): IDL set to undefined should not throw 
PASS section.className (<section class>): IDL set to undefined followed by getAttribute() 
PASS section.className (<section class>): IDL set to undefined followed by IDL get 
PASS section.className (<section class>): IDL set to 7 should not throw 
PASS section.className (<section class>): IDL set to 7 followed by getAttribute() 
PASS section.className (<section class>): IDL set to 7 followed by IDL get 
PASS section.className (<section class>): IDL set to 1.5 should not throw 
PASS section.className (<section class>): IDL set to 1.5 followed by getAttribute() 
PASS section.className (<section class>): IDL set to 1.5 followed by IDL get 
PASS section.className (<section class>): IDL set to true should not throw 
PASS section.className (<section class>): IDL set to true followed by getAttribute() 
PASS section.className (<section class>): IDL set to true followed by IDL get 
PASS section.className (<section class>): IDL set to false should not throw 
PASS section.className (<section class>): IDL set to false followed by getAttribute() 
PASS section.className (<section class>): IDL set to false followed by IDL get 
PASS section.className (<section class>): IDL set to object "[object Object]" should not throw 
PASS section.className (<section class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS section.className (<section class>): IDL set to object "[object Object]" followed by IDL get 
PASS section.className (<section class>): IDL set to NaN should not throw 
PASS section.className (<section class>): IDL set to NaN followed by getAttribute() 
PASS section.className (<section class>): IDL set to NaN followed by IDL get 
PASS section.className (<section class>): IDL set to Infinity should not throw 
PASS section.className (<section class>): IDL set to Infinity followed by getAttribute() 
PASS section.className (<section class>): IDL set to Infinity followed by IDL get 
PASS section.className (<section class>): IDL set to -Infinity should not throw 
PASS section.className (<section class>): IDL set to -Infinity followed by getAttribute() 
PASS section.className (<section class>): IDL set to -Infinity followed by IDL get 
PASS section.className (<section class>): IDL set to "\0" should not throw 
PASS section.className (<section class>): IDL set to "\0" followed by getAttribute() 
PASS section.className (<section class>): IDL set to "\0" followed by IDL get 
PASS section.className (<section class>): IDL set to null should not throw 
PASS section.className (<section class>): IDL set to null followed by getAttribute() 
PASS section.className (<section class>): IDL set to null followed by IDL get 
PASS section.className (<section class>): IDL set to object "test-toString" should not throw 
PASS section.className (<section class>): IDL set to object "test-toString" followed by getAttribute() 
PASS section.className (<section class>): IDL set to object "test-toString" followed by IDL get 
PASS section.className (<section class>): IDL set to object "test-valueOf" should not throw 
PASS section.className (<section class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS section.className (<section class>): IDL set to object "test-valueOf" followed by IDL get 
PASS section.hidden: typeof IDL attribute 
PASS section.hidden: IDL get with DOM attribute unset 
PASS section.hidden: setAttribute() to "" followed by getAttribute() 
PASS section.hidden: setAttribute() to "" followed by IDL get 
PASS section.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS section.hidden: setAttribute() to " foo " followed by IDL get 
PASS section.hidden: setAttribute() to undefined followed by getAttribute() 
PASS section.hidden: setAttribute() to undefined followed by IDL get 
PASS section.hidden: setAttribute() to null followed by getAttribute() 
PASS section.hidden: setAttribute() to null followed by IDL get 
PASS section.hidden: setAttribute() to 7 followed by getAttribute() 
PASS section.hidden: setAttribute() to 7 followed by IDL get 
PASS section.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS section.hidden: setAttribute() to 1.5 followed by IDL get 
PASS section.hidden: setAttribute() to true followed by getAttribute() 
PASS section.hidden: setAttribute() to true followed by IDL get 
PASS section.hidden: setAttribute() to false followed by getAttribute() 
PASS section.hidden: setAttribute() to false followed by IDL get 
PASS section.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS section.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS section.hidden: setAttribute() to NaN followed by getAttribute() 
PASS section.hidden: setAttribute() to NaN followed by IDL get 
PASS section.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS section.hidden: setAttribute() to Infinity followed by IDL get 
PASS section.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS section.hidden: setAttribute() to -Infinity followed by IDL get 
PASS section.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS section.hidden: setAttribute() to "\0" followed by IDL get 
PASS section.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS section.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS section.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS section.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS section.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS section.hidden: setAttribute() to "hidden" followed by IDL get 
PASS section.hidden: IDL set to "" should not throw 
PASS section.hidden: IDL set to "" followed by hasAttribute() 
PASS section.hidden: IDL set to "" followed by IDL get 
PASS section.hidden: IDL set to " foo " should not throw 
PASS section.hidden: IDL set to " foo " followed by hasAttribute() 
PASS section.hidden: IDL set to " foo " followed by IDL get 
PASS section.hidden: IDL set to undefined should not throw 
PASS section.hidden: IDL set to undefined followed by hasAttribute() 
PASS section.hidden: IDL set to undefined followed by IDL get 
PASS section.hidden: IDL set to null should not throw 
PASS section.hidden: IDL set to null followed by hasAttribute() 
PASS section.hidden: IDL set to null followed by IDL get 
PASS section.hidden: IDL set to 7 should not throw 
PASS section.hidden: IDL set to 7 followed by hasAttribute() 
PASS section.hidden: IDL set to 7 followed by IDL get 
PASS section.hidden: IDL set to 1.5 should not throw 
PASS section.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS section.hidden: IDL set to 1.5 followed by IDL get 
PASS section.hidden: IDL set to true should not throw 
PASS section.hidden: IDL set to true followed by hasAttribute() 
PASS section.hidden: IDL set to true followed by IDL get 
PASS section.hidden: IDL set to false should not throw 
PASS section.hidden: IDL set to false followed by hasAttribute() 
PASS section.hidden: IDL set to false followed by IDL get 
PASS section.hidden: IDL set to object "[object Object]" should not throw 
PASS section.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS section.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS section.hidden: IDL set to NaN should not throw 
PASS section.hidden: IDL set to NaN followed by hasAttribute() 
PASS section.hidden: IDL set to NaN followed by IDL get 
PASS section.hidden: IDL set to Infinity should not throw 
PASS section.hidden: IDL set to Infinity followed by hasAttribute() 
PASS section.hidden: IDL set to Infinity followed by IDL get 
PASS section.hidden: IDL set to -Infinity should not throw 
PASS section.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS section.hidden: IDL set to -Infinity followed by IDL get 
PASS section.hidden: IDL set to "\0" should not throw 
PASS section.hidden: IDL set to "\0" followed by hasAttribute() 
PASS section.hidden: IDL set to "\0" followed by IDL get 
PASS section.hidden: IDL set to object "test-toString" should not throw 
PASS section.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS section.hidden: IDL set to object "test-toString" followed by IDL get 
PASS section.hidden: IDL set to object "test-valueOf" should not throw 
PASS section.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS section.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS section.accessKey: typeof IDL attribute 
PASS section.accessKey: IDL get with DOM attribute unset 
PASS section.accessKey: setAttribute() to "" followed by getAttribute() 
PASS section.accessKey: setAttribute() to "" followed by IDL get 
PASS section.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS section.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS section.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS section.accessKey: setAttribute() to undefined followed by IDL get 
PASS section.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS section.accessKey: setAttribute() to 7 followed by IDL get 
PASS section.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS section.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS section.accessKey: setAttribute() to true followed by getAttribute() 
PASS section.accessKey: setAttribute() to true followed by IDL get 
PASS section.accessKey: setAttribute() to false followed by getAttribute() 
PASS section.accessKey: setAttribute() to false followed by IDL get 
PASS section.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS section.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS section.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS section.accessKey: setAttribute() to NaN followed by IDL get 
PASS section.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS section.accessKey: setAttribute() to Infinity followed by IDL get 
PASS section.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS section.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS section.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS section.accessKey: setAttribute() to "\0" followed by IDL get 
PASS section.accessKey: setAttribute() to null followed by getAttribute() 
PASS section.accessKey: setAttribute() to null followed by IDL get 
PASS section.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS section.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS section.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS section.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS section.accessKey: IDL set to "" should not throw 
PASS section.accessKey: IDL set to "" followed by getAttribute() 
PASS section.accessKey: IDL set to "" followed by IDL get 
PASS section.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS section.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS section.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS section.accessKey: IDL set to undefined should not throw 
PASS section.accessKey: IDL set to undefined followed by getAttribute() 
PASS section.accessKey: IDL set to undefined followed by IDL get 
PASS section.accessKey: IDL set to 7 should not throw 
PASS section.accessKey: IDL set to 7 followed by getAttribute() 
PASS section.accessKey: IDL set to 7 followed by IDL get 
PASS section.accessKey: IDL set to 1.5 should not throw 
PASS section.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS section.accessKey: IDL set to 1.5 followed by IDL get 
PASS section.accessKey: IDL set to true should not throw 
PASS section.accessKey: IDL set to true followed by getAttribute() 
PASS section.accessKey: IDL set to true followed by IDL get 
PASS section.accessKey: IDL set to false should not throw 
PASS section.accessKey: IDL set to false followed by getAttribute() 
PASS section.accessKey: IDL set to false followed by IDL get 
PASS section.accessKey: IDL set to object "[object Object]" should not throw 
PASS section.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS section.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS section.accessKey: IDL set to NaN should not throw 
PASS section.accessKey: IDL set to NaN followed by getAttribute() 
PASS section.accessKey: IDL set to NaN followed by IDL get 
PASS section.accessKey: IDL set to Infinity should not throw 
PASS section.accessKey: IDL set to Infinity followed by getAttribute() 
PASS section.accessKey: IDL set to Infinity followed by IDL get 
PASS section.accessKey: IDL set to -Infinity should not throw 
PASS section.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS section.accessKey: IDL set to -Infinity followed by IDL get 
PASS section.accessKey: IDL set to "\0" should not throw 
PASS section.accessKey: IDL set to "\0" followed by getAttribute() 
PASS section.accessKey: IDL set to "\0" followed by IDL get 
PASS section.accessKey: IDL set to null should not throw 
PASS section.accessKey: IDL set to null followed by getAttribute() 
PASS section.accessKey: IDL set to null followed by IDL get 
PASS section.accessKey: IDL set to object "test-toString" should not throw 
PASS section.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS section.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS section.accessKey: IDL set to object "test-valueOf" should not throw 
PASS section.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS section.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS section.tabIndex: typeof IDL attribute 
PASS section.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS section.tabIndex: setAttribute() to -36 followed by IDL get 
PASS section.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS section.tabIndex: setAttribute() to -1 followed by IDL get 
PASS section.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS section.tabIndex: setAttribute() to 0 followed by IDL get 
PASS section.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS section.tabIndex: setAttribute() to 1 followed by IDL get 
PASS section.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS section.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS section.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS section.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS section.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS section.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS section.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS section.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS section.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS section.tabIndex: setAttribute() to "0" followed by IDL get 
PASS section.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS section.tabIndex: setAttribute() to "1" followed by IDL get 
PASS section.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS section.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS section.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS section.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS section.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS section.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS section.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS section.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS section.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS section.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS section.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS section.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS section.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS section.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS section.tabIndex: IDL set to -36 should not throw 
PASS section.tabIndex: IDL set to -36 followed by getAttribute() 
PASS section.tabIndex: IDL set to -36 followed by IDL get 
PASS section.tabIndex: IDL set to -1 should not throw 
PASS section.tabIndex: IDL set to -1 followed by getAttribute() 
PASS section.tabIndex: IDL set to -1 followed by IDL get 
PASS section.tabIndex: IDL set to 0 should not throw 
PASS section.tabIndex: IDL set to 0 followed by getAttribute() 
PASS section.tabIndex: IDL set to 0 followed by IDL get 
PASS section.tabIndex: IDL set to 1 should not throw 
PASS section.tabIndex: IDL set to 1 followed by getAttribute() 
PASS section.tabIndex: IDL set to 1 followed by IDL get 
PASS section.tabIndex: IDL set to 2147483647 should not throw 
PASS section.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS section.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS section.tabIndex: IDL set to -2147483648 should not throw 
PASS section.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS section.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL section.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL section.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS section.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL section.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL section.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL section.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to null followed by getAttribute() 
FAIL section.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL section.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL section.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to true followed by getAttribute() 
FAIL section.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to false followed by getAttribute() 
FAIL section.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL section.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL section.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL section.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL section.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL section.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL section.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL section.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL section.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS section.itemScope: IDL set to "" should not throw 
FAIL section.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL section.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS section.itemScope: IDL set to " foo " should not throw 
PASS section.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL section.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS section.itemScope: IDL set to undefined should not throw 
FAIL section.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL section.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS section.itemScope: IDL set to null should not throw 
FAIL section.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL section.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS section.itemScope: IDL set to 7 should not throw 
PASS section.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL section.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS section.itemScope: IDL set to 1.5 should not throw 
PASS section.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL section.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS section.itemScope: IDL set to true should not throw 
PASS section.itemScope: IDL set to true followed by hasAttribute() 
PASS section.itemScope: IDL set to true followed by IDL get 
PASS section.itemScope: IDL set to false should not throw 
FAIL section.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS section.itemScope: IDL set to false followed by IDL get 
PASS section.itemScope: IDL set to object "[object Object]" should not throw 
PASS section.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL section.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS section.itemScope: IDL set to NaN should not throw 
FAIL section.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL section.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS section.itemScope: IDL set to Infinity should not throw 
PASS section.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL section.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS section.itemScope: IDL set to -Infinity should not throw 
PASS section.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL section.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS section.itemScope: IDL set to "\0" should not throw 
PASS section.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL section.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS section.itemScope: IDL set to object "test-toString" should not throw 
PASS section.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL section.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS section.itemScope: IDL set to object "test-valueOf" should not throw 
PASS section.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL section.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL section.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL section.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS section.itemId: setAttribute() to "" followed by getAttribute() 
FAIL section.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS section.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL section.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS section.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL section.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS section.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL section.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS section.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL section.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS section.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL section.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS section.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL section.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS section.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL section.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS section.itemId: setAttribute() to true followed by getAttribute() 
FAIL section.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS section.itemId: setAttribute() to false followed by getAttribute() 
FAIL section.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS section.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL section.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS section.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL section.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS section.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL section.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS section.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL section.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS section.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL section.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS section.itemId: setAttribute() to null followed by getAttribute() 
FAIL section.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS section.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL section.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS section.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL section.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS section.itemId: IDL set to "" should not throw 
FAIL section.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL section.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS section.itemId: IDL set to " foo " should not throw 
FAIL section.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL section.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS section.itemId: IDL set to "http://site.example/" should not throw 
FAIL section.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS section.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS section.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL section.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL section.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS section.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL section.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL section.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS section.itemId: IDL set to undefined should not throw 
FAIL section.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL section.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS section.itemId: IDL set to 7 should not throw 
FAIL section.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL section.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS section.itemId: IDL set to 1.5 should not throw 
FAIL section.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL section.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS section.itemId: IDL set to true should not throw 
FAIL section.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL section.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS section.itemId: IDL set to false should not throw 
FAIL section.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL section.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS section.itemId: IDL set to object "[object Object]" should not throw 
FAIL section.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL section.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS section.itemId: IDL set to NaN should not throw 
FAIL section.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL section.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS section.itemId: IDL set to Infinity should not throw 
FAIL section.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL section.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS section.itemId: IDL set to -Infinity should not throw 
FAIL section.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL section.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS section.itemId: IDL set to "\0" should not throw 
FAIL section.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL section.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS section.itemId: IDL set to null should not throw 
FAIL section.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL section.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS section.itemId: IDL set to object "test-toString" should not throw 
FAIL section.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL section.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS section.itemId: IDL set to object "test-valueOf" should not throw 
PASS section.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL section.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS nav.title: typeof IDL attribute 
PASS nav.title: IDL get with DOM attribute unset 
PASS nav.title: setAttribute() to "" followed by getAttribute() 
PASS nav.title: setAttribute() to "" followed by IDL get 
PASS nav.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS nav.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS nav.title: setAttribute() to undefined followed by getAttribute() 
PASS nav.title: setAttribute() to undefined followed by IDL get 
PASS nav.title: setAttribute() to 7 followed by getAttribute() 
PASS nav.title: setAttribute() to 7 followed by IDL get 
PASS nav.title: setAttribute() to 1.5 followed by getAttribute() 
PASS nav.title: setAttribute() to 1.5 followed by IDL get 
PASS nav.title: setAttribute() to true followed by getAttribute() 
PASS nav.title: setAttribute() to true followed by IDL get 
PASS nav.title: setAttribute() to false followed by getAttribute() 
PASS nav.title: setAttribute() to false followed by IDL get 
PASS nav.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS nav.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS nav.title: setAttribute() to NaN followed by getAttribute() 
PASS nav.title: setAttribute() to NaN followed by IDL get 
PASS nav.title: setAttribute() to Infinity followed by getAttribute() 
PASS nav.title: setAttribute() to Infinity followed by IDL get 
PASS nav.title: setAttribute() to -Infinity followed by getAttribute() 
PASS nav.title: setAttribute() to -Infinity followed by IDL get 
PASS nav.title: setAttribute() to "\0" followed by getAttribute() 
PASS nav.title: setAttribute() to "\0" followed by IDL get 
PASS nav.title: setAttribute() to null followed by getAttribute() 
PASS nav.title: setAttribute() to null followed by IDL get 
PASS nav.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS nav.title: setAttribute() to object "test-toString" followed by IDL get 
PASS nav.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS nav.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS nav.title: IDL set to "" should not throw 
PASS nav.title: IDL set to "" followed by getAttribute() 
PASS nav.title: IDL set to "" followed by IDL get 
PASS nav.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS nav.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS nav.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS nav.title: IDL set to undefined should not throw 
PASS nav.title: IDL set to undefined followed by getAttribute() 
PASS nav.title: IDL set to undefined followed by IDL get 
PASS nav.title: IDL set to 7 should not throw 
PASS nav.title: IDL set to 7 followed by getAttribute() 
PASS nav.title: IDL set to 7 followed by IDL get 
PASS nav.title: IDL set to 1.5 should not throw 
PASS nav.title: IDL set to 1.5 followed by getAttribute() 
PASS nav.title: IDL set to 1.5 followed by IDL get 
PASS nav.title: IDL set to true should not throw 
PASS nav.title: IDL set to true followed by getAttribute() 
PASS nav.title: IDL set to true followed by IDL get 
PASS nav.title: IDL set to false should not throw 
PASS nav.title: IDL set to false followed by getAttribute() 
PASS nav.title: IDL set to false followed by IDL get 
PASS nav.title: IDL set to object "[object Object]" should not throw 
PASS nav.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS nav.title: IDL set to object "[object Object]" followed by IDL get 
PASS nav.title: IDL set to NaN should not throw 
PASS nav.title: IDL set to NaN followed by getAttribute() 
PASS nav.title: IDL set to NaN followed by IDL get 
PASS nav.title: IDL set to Infinity should not throw 
PASS nav.title: IDL set to Infinity followed by getAttribute() 
PASS nav.title: IDL set to Infinity followed by IDL get 
PASS nav.title: IDL set to -Infinity should not throw 
PASS nav.title: IDL set to -Infinity followed by getAttribute() 
PASS nav.title: IDL set to -Infinity followed by IDL get 
PASS nav.title: IDL set to "\0" should not throw 
PASS nav.title: IDL set to "\0" followed by getAttribute() 
PASS nav.title: IDL set to "\0" followed by IDL get 
PASS nav.title: IDL set to null should not throw 
PASS nav.title: IDL set to null followed by getAttribute() 
PASS nav.title: IDL set to null followed by IDL get 
PASS nav.title: IDL set to object "test-toString" should not throw 
PASS nav.title: IDL set to object "test-toString" followed by getAttribute() 
PASS nav.title: IDL set to object "test-toString" followed by IDL get 
PASS nav.title: IDL set to object "test-valueOf" should not throw 
PASS nav.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS nav.title: IDL set to object "test-valueOf" followed by IDL get 
PASS nav.lang: typeof IDL attribute 
PASS nav.lang: IDL get with DOM attribute unset 
PASS nav.lang: setAttribute() to "" followed by getAttribute() 
PASS nav.lang: setAttribute() to "" followed by IDL get 
PASS nav.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS nav.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS nav.lang: setAttribute() to undefined followed by getAttribute() 
PASS nav.lang: setAttribute() to undefined followed by IDL get 
PASS nav.lang: setAttribute() to 7 followed by getAttribute() 
PASS nav.lang: setAttribute() to 7 followed by IDL get 
PASS nav.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS nav.lang: setAttribute() to 1.5 followed by IDL get 
PASS nav.lang: setAttribute() to true followed by getAttribute() 
PASS nav.lang: setAttribute() to true followed by IDL get 
PASS nav.lang: setAttribute() to false followed by getAttribute() 
PASS nav.lang: setAttribute() to false followed by IDL get 
PASS nav.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS nav.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS nav.lang: setAttribute() to NaN followed by getAttribute() 
PASS nav.lang: setAttribute() to NaN followed by IDL get 
PASS nav.lang: setAttribute() to Infinity followed by getAttribute() 
PASS nav.lang: setAttribute() to Infinity followed by IDL get 
PASS nav.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS nav.lang: setAttribute() to -Infinity followed by IDL get 
PASS nav.lang: setAttribute() to "\0" followed by getAttribute() 
PASS nav.lang: setAttribute() to "\0" followed by IDL get 
PASS nav.lang: setAttribute() to null followed by getAttribute() 
PASS nav.lang: setAttribute() to null followed by IDL get 
PASS nav.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS nav.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS nav.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS nav.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS nav.lang: IDL set to "" should not throw 
PASS nav.lang: IDL set to "" followed by getAttribute() 
PASS nav.lang: IDL set to "" followed by IDL get 
PASS nav.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS nav.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS nav.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS nav.lang: IDL set to undefined should not throw 
PASS nav.lang: IDL set to undefined followed by getAttribute() 
PASS nav.lang: IDL set to undefined followed by IDL get 
PASS nav.lang: IDL set to 7 should not throw 
PASS nav.lang: IDL set to 7 followed by getAttribute() 
PASS nav.lang: IDL set to 7 followed by IDL get 
PASS nav.lang: IDL set to 1.5 should not throw 
PASS nav.lang: IDL set to 1.5 followed by getAttribute() 
PASS nav.lang: IDL set to 1.5 followed by IDL get 
PASS nav.lang: IDL set to true should not throw 
PASS nav.lang: IDL set to true followed by getAttribute() 
PASS nav.lang: IDL set to true followed by IDL get 
PASS nav.lang: IDL set to false should not throw 
PASS nav.lang: IDL set to false followed by getAttribute() 
PASS nav.lang: IDL set to false followed by IDL get 
PASS nav.lang: IDL set to object "[object Object]" should not throw 
PASS nav.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS nav.lang: IDL set to object "[object Object]" followed by IDL get 
PASS nav.lang: IDL set to NaN should not throw 
PASS nav.lang: IDL set to NaN followed by getAttribute() 
PASS nav.lang: IDL set to NaN followed by IDL get 
PASS nav.lang: IDL set to Infinity should not throw 
PASS nav.lang: IDL set to Infinity followed by getAttribute() 
PASS nav.lang: IDL set to Infinity followed by IDL get 
PASS nav.lang: IDL set to -Infinity should not throw 
PASS nav.lang: IDL set to -Infinity followed by getAttribute() 
PASS nav.lang: IDL set to -Infinity followed by IDL get 
PASS nav.lang: IDL set to "\0" should not throw 
PASS nav.lang: IDL set to "\0" followed by getAttribute() 
PASS nav.lang: IDL set to "\0" followed by IDL get 
PASS nav.lang: IDL set to null should not throw 
PASS nav.lang: IDL set to null followed by getAttribute() 
PASS nav.lang: IDL set to null followed by IDL get 
PASS nav.lang: IDL set to object "test-toString" should not throw 
PASS nav.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS nav.lang: IDL set to object "test-toString" followed by IDL get 
PASS nav.lang: IDL set to object "test-valueOf" should not throw 
PASS nav.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS nav.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS nav.dir: typeof IDL attribute 
PASS nav.dir: IDL get with DOM attribute unset 
PASS nav.dir: setAttribute() to "" followed by getAttribute() 
PASS nav.dir: setAttribute() to "" followed by IDL get 
PASS nav.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS nav.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS nav.dir: setAttribute() to undefined followed by getAttribute() 
PASS nav.dir: setAttribute() to undefined followed by IDL get 
PASS nav.dir: setAttribute() to 7 followed by getAttribute() 
PASS nav.dir: setAttribute() to 7 followed by IDL get 
PASS nav.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS nav.dir: setAttribute() to 1.5 followed by IDL get 
PASS nav.dir: setAttribute() to true followed by getAttribute() 
PASS nav.dir: setAttribute() to true followed by IDL get 
PASS nav.dir: setAttribute() to false followed by getAttribute() 
PASS nav.dir: setAttribute() to false followed by IDL get 
PASS nav.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS nav.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS nav.dir: setAttribute() to NaN followed by getAttribute() 
PASS nav.dir: setAttribute() to NaN followed by IDL get 
PASS nav.dir: setAttribute() to Infinity followed by getAttribute() 
PASS nav.dir: setAttribute() to Infinity followed by IDL get 
PASS nav.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS nav.dir: setAttribute() to -Infinity followed by IDL get 
PASS nav.dir: setAttribute() to "\0" followed by getAttribute() 
PASS nav.dir: setAttribute() to "\0" followed by IDL get 
PASS nav.dir: setAttribute() to null followed by getAttribute() 
PASS nav.dir: setAttribute() to null followed by IDL get 
PASS nav.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS nav.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS nav.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS nav.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS nav.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS nav.dir: setAttribute() to "ltr" followed by IDL get 
PASS nav.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS nav.dir: setAttribute() to "xltr" followed by IDL get 
PASS nav.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS nav.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS nav.dir: setAttribute() to "tr" followed by getAttribute() 
PASS nav.dir: setAttribute() to "tr" followed by IDL get 
PASS nav.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS nav.dir: setAttribute() to "LTR" followed by IDL get 
PASS nav.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS nav.dir: setAttribute() to "rtl" followed by IDL get 
PASS nav.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS nav.dir: setAttribute() to "xrtl" followed by IDL get 
PASS nav.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS nav.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS nav.dir: setAttribute() to "tl" followed by getAttribute() 
PASS nav.dir: setAttribute() to "tl" followed by IDL get 
PASS nav.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS nav.dir: setAttribute() to "RTL" followed by IDL get 
PASS nav.dir: setAttribute() to "auto" followed by getAttribute() 
PASS nav.dir: setAttribute() to "auto" followed by IDL get 
PASS nav.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS nav.dir: setAttribute() to "xauto" followed by IDL get 
PASS nav.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS nav.dir: setAttribute() to "auto\0" followed by IDL get 
PASS nav.dir: setAttribute() to "uto" followed by getAttribute() 
PASS nav.dir: setAttribute() to "uto" followed by IDL get 
PASS nav.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS nav.dir: setAttribute() to "AUTO" followed by IDL get 
PASS nav.dir: IDL set to "" should not throw 
PASS nav.dir: IDL set to "" followed by getAttribute() 
PASS nav.dir: IDL set to "" followed by IDL get 
PASS nav.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS nav.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS nav.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS nav.dir: IDL set to undefined should not throw 
PASS nav.dir: IDL set to undefined followed by getAttribute() 
PASS nav.dir: IDL set to undefined followed by IDL get 
PASS nav.dir: IDL set to 7 should not throw 
PASS nav.dir: IDL set to 7 followed by getAttribute() 
PASS nav.dir: IDL set to 7 followed by IDL get 
PASS nav.dir: IDL set to 1.5 should not throw 
PASS nav.dir: IDL set to 1.5 followed by getAttribute() 
PASS nav.dir: IDL set to 1.5 followed by IDL get 
PASS nav.dir: IDL set to true should not throw 
PASS nav.dir: IDL set to true followed by getAttribute() 
PASS nav.dir: IDL set to true followed by IDL get 
PASS nav.dir: IDL set to false should not throw 
PASS nav.dir: IDL set to false followed by getAttribute() 
PASS nav.dir: IDL set to false followed by IDL get 
PASS nav.dir: IDL set to object "[object Object]" should not throw 
PASS nav.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS nav.dir: IDL set to object "[object Object]" followed by IDL get 
PASS nav.dir: IDL set to NaN should not throw 
PASS nav.dir: IDL set to NaN followed by getAttribute() 
PASS nav.dir: IDL set to NaN followed by IDL get 
PASS nav.dir: IDL set to Infinity should not throw 
PASS nav.dir: IDL set to Infinity followed by getAttribute() 
PASS nav.dir: IDL set to Infinity followed by IDL get 
PASS nav.dir: IDL set to -Infinity should not throw 
PASS nav.dir: IDL set to -Infinity followed by getAttribute() 
PASS nav.dir: IDL set to -Infinity followed by IDL get 
PASS nav.dir: IDL set to "\0" should not throw 
PASS nav.dir: IDL set to "\0" followed by getAttribute() 
PASS nav.dir: IDL set to "\0" followed by IDL get 
PASS nav.dir: IDL set to null should not throw 
PASS nav.dir: IDL set to null followed by IDL get 
PASS nav.dir: IDL set to object "test-toString" should not throw 
PASS nav.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS nav.dir: IDL set to object "test-toString" followed by IDL get 
PASS nav.dir: IDL set to object "test-valueOf" should not throw 
PASS nav.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS nav.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS nav.dir: IDL set to "ltr" should not throw 
PASS nav.dir: IDL set to "ltr" followed by getAttribute() 
PASS nav.dir: IDL set to "ltr" followed by IDL get 
PASS nav.dir: IDL set to "xltr" should not throw 
PASS nav.dir: IDL set to "xltr" followed by getAttribute() 
PASS nav.dir: IDL set to "xltr" followed by IDL get 
PASS nav.dir: IDL set to "ltr\0" should not throw 
PASS nav.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS nav.dir: IDL set to "ltr\0" followed by IDL get 
PASS nav.dir: IDL set to "tr" should not throw 
PASS nav.dir: IDL set to "tr" followed by getAttribute() 
PASS nav.dir: IDL set to "tr" followed by IDL get 
PASS nav.dir: IDL set to "LTR" should not throw 
PASS nav.dir: IDL set to "LTR" followed by getAttribute() 
PASS nav.dir: IDL set to "LTR" followed by IDL get 
PASS nav.dir: IDL set to "rtl" should not throw 
PASS nav.dir: IDL set to "rtl" followed by getAttribute() 
PASS nav.dir: IDL set to "rtl" followed by IDL get 
PASS nav.dir: IDL set to "xrtl" should not throw 
PASS nav.dir: IDL set to "xrtl" followed by getAttribute() 
PASS nav.dir: IDL set to "xrtl" followed by IDL get 
PASS nav.dir: IDL set to "rtl\0" should not throw 
PASS nav.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS nav.dir: IDL set to "rtl\0" followed by IDL get 
PASS nav.dir: IDL set to "tl" should not throw 
PASS nav.dir: IDL set to "tl" followed by getAttribute() 
PASS nav.dir: IDL set to "tl" followed by IDL get 
PASS nav.dir: IDL set to "RTL" should not throw 
PASS nav.dir: IDL set to "RTL" followed by getAttribute() 
PASS nav.dir: IDL set to "RTL" followed by IDL get 
PASS nav.dir: IDL set to "auto" should not throw 
PASS nav.dir: IDL set to "auto" followed by getAttribute() 
PASS nav.dir: IDL set to "auto" followed by IDL get 
PASS nav.dir: IDL set to "xauto" should not throw 
PASS nav.dir: IDL set to "xauto" followed by getAttribute() 
PASS nav.dir: IDL set to "xauto" followed by IDL get 
PASS nav.dir: IDL set to "auto\0" should not throw 
PASS nav.dir: IDL set to "auto\0" followed by getAttribute() 
PASS nav.dir: IDL set to "auto\0" followed by IDL get 
PASS nav.dir: IDL set to "uto" should not throw 
PASS nav.dir: IDL set to "uto" followed by getAttribute() 
PASS nav.dir: IDL set to "uto" followed by IDL get 
PASS nav.dir: IDL set to "AUTO" should not throw 
PASS nav.dir: IDL set to "AUTO" followed by getAttribute() 
PASS nav.dir: IDL set to "AUTO" followed by IDL get 
PASS nav.className (<nav class>): typeof IDL attribute 
PASS nav.className (<nav class>): IDL get with DOM attribute unset 
PASS nav.className (<nav class>): setAttribute() to "" followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to "" followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to undefined followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to undefined followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to 7 followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to 7 followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to 1.5 followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to 1.5 followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to true followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to true followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to false followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to false followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to NaN followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to NaN followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to Infinity followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to Infinity followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to -Infinity followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to -Infinity followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to "\0" followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to "\0" followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to null followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to null followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to object "test-toString" followed by IDL get 
PASS nav.className (<nav class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS nav.className (<nav class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS nav.className (<nav class>): IDL set to "" should not throw 
PASS nav.className (<nav class>): IDL set to "" followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to "" followed by IDL get 
PASS nav.className (<nav class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS nav.className (<nav class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS nav.className (<nav class>): IDL set to undefined should not throw 
PASS nav.className (<nav class>): IDL set to undefined followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to undefined followed by IDL get 
PASS nav.className (<nav class>): IDL set to 7 should not throw 
PASS nav.className (<nav class>): IDL set to 7 followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to 7 followed by IDL get 
PASS nav.className (<nav class>): IDL set to 1.5 should not throw 
PASS nav.className (<nav class>): IDL set to 1.5 followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to 1.5 followed by IDL get 
PASS nav.className (<nav class>): IDL set to true should not throw 
PASS nav.className (<nav class>): IDL set to true followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to true followed by IDL get 
PASS nav.className (<nav class>): IDL set to false should not throw 
PASS nav.className (<nav class>): IDL set to false followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to false followed by IDL get 
PASS nav.className (<nav class>): IDL set to object "[object Object]" should not throw 
PASS nav.className (<nav class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to object "[object Object]" followed by IDL get 
PASS nav.className (<nav class>): IDL set to NaN should not throw 
PASS nav.className (<nav class>): IDL set to NaN followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to NaN followed by IDL get 
PASS nav.className (<nav class>): IDL set to Infinity should not throw 
PASS nav.className (<nav class>): IDL set to Infinity followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to Infinity followed by IDL get 
PASS nav.className (<nav class>): IDL set to -Infinity should not throw 
PASS nav.className (<nav class>): IDL set to -Infinity followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to -Infinity followed by IDL get 
PASS nav.className (<nav class>): IDL set to "\0" should not throw 
PASS nav.className (<nav class>): IDL set to "\0" followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to "\0" followed by IDL get 
PASS nav.className (<nav class>): IDL set to null should not throw 
PASS nav.className (<nav class>): IDL set to null followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to null followed by IDL get 
PASS nav.className (<nav class>): IDL set to object "test-toString" should not throw 
PASS nav.className (<nav class>): IDL set to object "test-toString" followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to object "test-toString" followed by IDL get 
PASS nav.className (<nav class>): IDL set to object "test-valueOf" should not throw 
PASS nav.className (<nav class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS nav.className (<nav class>): IDL set to object "test-valueOf" followed by IDL get 
PASS nav.hidden: typeof IDL attribute 
PASS nav.hidden: IDL get with DOM attribute unset 
PASS nav.hidden: setAttribute() to "" followed by getAttribute() 
PASS nav.hidden: setAttribute() to "" followed by IDL get 
PASS nav.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS nav.hidden: setAttribute() to " foo " followed by IDL get 
PASS nav.hidden: setAttribute() to undefined followed by getAttribute() 
PASS nav.hidden: setAttribute() to undefined followed by IDL get 
PASS nav.hidden: setAttribute() to null followed by getAttribute() 
PASS nav.hidden: setAttribute() to null followed by IDL get 
PASS nav.hidden: setAttribute() to 7 followed by getAttribute() 
PASS nav.hidden: setAttribute() to 7 followed by IDL get 
PASS nav.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS nav.hidden: setAttribute() to 1.5 followed by IDL get 
PASS nav.hidden: setAttribute() to true followed by getAttribute() 
PASS nav.hidden: setAttribute() to true followed by IDL get 
PASS nav.hidden: setAttribute() to false followed by getAttribute() 
PASS nav.hidden: setAttribute() to false followed by IDL get 
PASS nav.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS nav.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS nav.hidden: setAttribute() to NaN followed by getAttribute() 
PASS nav.hidden: setAttribute() to NaN followed by IDL get 
PASS nav.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS nav.hidden: setAttribute() to Infinity followed by IDL get 
PASS nav.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS nav.hidden: setAttribute() to -Infinity followed by IDL get 
PASS nav.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS nav.hidden: setAttribute() to "\0" followed by IDL get 
PASS nav.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS nav.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS nav.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS nav.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS nav.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS nav.hidden: setAttribute() to "hidden" followed by IDL get 
PASS nav.hidden: IDL set to "" should not throw 
PASS nav.hidden: IDL set to "" followed by hasAttribute() 
PASS nav.hidden: IDL set to "" followed by IDL get 
PASS nav.hidden: IDL set to " foo " should not throw 
PASS nav.hidden: IDL set to " foo " followed by hasAttribute() 
PASS nav.hidden: IDL set to " foo " followed by IDL get 
PASS nav.hidden: IDL set to undefined should not throw 
PASS nav.hidden: IDL set to undefined followed by hasAttribute() 
PASS nav.hidden: IDL set to undefined followed by IDL get 
PASS nav.hidden: IDL set to null should not throw 
PASS nav.hidden: IDL set to null followed by hasAttribute() 
PASS nav.hidden: IDL set to null followed by IDL get 
PASS nav.hidden: IDL set to 7 should not throw 
PASS nav.hidden: IDL set to 7 followed by hasAttribute() 
PASS nav.hidden: IDL set to 7 followed by IDL get 
PASS nav.hidden: IDL set to 1.5 should not throw 
PASS nav.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS nav.hidden: IDL set to 1.5 followed by IDL get 
PASS nav.hidden: IDL set to true should not throw 
PASS nav.hidden: IDL set to true followed by hasAttribute() 
PASS nav.hidden: IDL set to true followed by IDL get 
PASS nav.hidden: IDL set to false should not throw 
PASS nav.hidden: IDL set to false followed by hasAttribute() 
PASS nav.hidden: IDL set to false followed by IDL get 
PASS nav.hidden: IDL set to object "[object Object]" should not throw 
PASS nav.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS nav.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS nav.hidden: IDL set to NaN should not throw 
PASS nav.hidden: IDL set to NaN followed by hasAttribute() 
PASS nav.hidden: IDL set to NaN followed by IDL get 
PASS nav.hidden: IDL set to Infinity should not throw 
PASS nav.hidden: IDL set to Infinity followed by hasAttribute() 
PASS nav.hidden: IDL set to Infinity followed by IDL get 
PASS nav.hidden: IDL set to -Infinity should not throw 
PASS nav.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS nav.hidden: IDL set to -Infinity followed by IDL get 
PASS nav.hidden: IDL set to "\0" should not throw 
PASS nav.hidden: IDL set to "\0" followed by hasAttribute() 
PASS nav.hidden: IDL set to "\0" followed by IDL get 
PASS nav.hidden: IDL set to object "test-toString" should not throw 
PASS nav.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS nav.hidden: IDL set to object "test-toString" followed by IDL get 
PASS nav.hidden: IDL set to object "test-valueOf" should not throw 
PASS nav.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS nav.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS nav.accessKey: typeof IDL attribute 
PASS nav.accessKey: IDL get with DOM attribute unset 
PASS nav.accessKey: setAttribute() to "" followed by getAttribute() 
PASS nav.accessKey: setAttribute() to "" followed by IDL get 
PASS nav.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS nav.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS nav.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS nav.accessKey: setAttribute() to undefined followed by IDL get 
PASS nav.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS nav.accessKey: setAttribute() to 7 followed by IDL get 
PASS nav.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS nav.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS nav.accessKey: setAttribute() to true followed by getAttribute() 
PASS nav.accessKey: setAttribute() to true followed by IDL get 
PASS nav.accessKey: setAttribute() to false followed by getAttribute() 
PASS nav.accessKey: setAttribute() to false followed by IDL get 
PASS nav.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS nav.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS nav.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS nav.accessKey: setAttribute() to NaN followed by IDL get 
PASS nav.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS nav.accessKey: setAttribute() to Infinity followed by IDL get 
PASS nav.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS nav.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS nav.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS nav.accessKey: setAttribute() to "\0" followed by IDL get 
PASS nav.accessKey: setAttribute() to null followed by getAttribute() 
PASS nav.accessKey: setAttribute() to null followed by IDL get 
PASS nav.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS nav.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS nav.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS nav.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS nav.accessKey: IDL set to "" should not throw 
PASS nav.accessKey: IDL set to "" followed by getAttribute() 
PASS nav.accessKey: IDL set to "" followed by IDL get 
PASS nav.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS nav.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS nav.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS nav.accessKey: IDL set to undefined should not throw 
PASS nav.accessKey: IDL set to undefined followed by getAttribute() 
PASS nav.accessKey: IDL set to undefined followed by IDL get 
PASS nav.accessKey: IDL set to 7 should not throw 
PASS nav.accessKey: IDL set to 7 followed by getAttribute() 
PASS nav.accessKey: IDL set to 7 followed by IDL get 
PASS nav.accessKey: IDL set to 1.5 should not throw 
PASS nav.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS nav.accessKey: IDL set to 1.5 followed by IDL get 
PASS nav.accessKey: IDL set to true should not throw 
PASS nav.accessKey: IDL set to true followed by getAttribute() 
PASS nav.accessKey: IDL set to true followed by IDL get 
PASS nav.accessKey: IDL set to false should not throw 
PASS nav.accessKey: IDL set to false followed by getAttribute() 
PASS nav.accessKey: IDL set to false followed by IDL get 
PASS nav.accessKey: IDL set to object "[object Object]" should not throw 
PASS nav.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS nav.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS nav.accessKey: IDL set to NaN should not throw 
PASS nav.accessKey: IDL set to NaN followed by getAttribute() 
PASS nav.accessKey: IDL set to NaN followed by IDL get 
PASS nav.accessKey: IDL set to Infinity should not throw 
PASS nav.accessKey: IDL set to Infinity followed by getAttribute() 
PASS nav.accessKey: IDL set to Infinity followed by IDL get 
PASS nav.accessKey: IDL set to -Infinity should not throw 
PASS nav.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS nav.accessKey: IDL set to -Infinity followed by IDL get 
PASS nav.accessKey: IDL set to "\0" should not throw 
PASS nav.accessKey: IDL set to "\0" followed by getAttribute() 
PASS nav.accessKey: IDL set to "\0" followed by IDL get 
PASS nav.accessKey: IDL set to null should not throw 
PASS nav.accessKey: IDL set to null followed by getAttribute() 
PASS nav.accessKey: IDL set to null followed by IDL get 
PASS nav.accessKey: IDL set to object "test-toString" should not throw 
PASS nav.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS nav.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS nav.accessKey: IDL set to object "test-valueOf" should not throw 
PASS nav.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS nav.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS nav.tabIndex: typeof IDL attribute 
PASS nav.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to -36 followed by IDL get 
PASS nav.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to -1 followed by IDL get 
PASS nav.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to 0 followed by IDL get 
PASS nav.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to 1 followed by IDL get 
PASS nav.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS nav.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS nav.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS nav.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS nav.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to "0" followed by IDL get 
PASS nav.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to "1" followed by IDL get 
PASS nav.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS nav.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS nav.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS nav.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS nav.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS nav.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS nav.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS nav.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS nav.tabIndex: IDL set to -36 should not throw 
PASS nav.tabIndex: IDL set to -36 followed by getAttribute() 
PASS nav.tabIndex: IDL set to -36 followed by IDL get 
PASS nav.tabIndex: IDL set to -1 should not throw 
PASS nav.tabIndex: IDL set to -1 followed by getAttribute() 
PASS nav.tabIndex: IDL set to -1 followed by IDL get 
PASS nav.tabIndex: IDL set to 0 should not throw 
PASS nav.tabIndex: IDL set to 0 followed by getAttribute() 
PASS nav.tabIndex: IDL set to 0 followed by IDL get 
PASS nav.tabIndex: IDL set to 1 should not throw 
PASS nav.tabIndex: IDL set to 1 followed by getAttribute() 
PASS nav.tabIndex: IDL set to 1 followed by IDL get 
PASS nav.tabIndex: IDL set to 2147483647 should not throw 
PASS nav.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS nav.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS nav.tabIndex: IDL set to -2147483648 should not throw 
PASS nav.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS nav.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL nav.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL nav.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS nav.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to null followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to true followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to false followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL nav.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS nav.itemScope: IDL set to "" should not throw 
FAIL nav.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL nav.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS nav.itemScope: IDL set to " foo " should not throw 
PASS nav.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL nav.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS nav.itemScope: IDL set to undefined should not throw 
FAIL nav.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL nav.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS nav.itemScope: IDL set to null should not throw 
FAIL nav.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL nav.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS nav.itemScope: IDL set to 7 should not throw 
PASS nav.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL nav.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS nav.itemScope: IDL set to 1.5 should not throw 
PASS nav.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL nav.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS nav.itemScope: IDL set to true should not throw 
PASS nav.itemScope: IDL set to true followed by hasAttribute() 
PASS nav.itemScope: IDL set to true followed by IDL get 
PASS nav.itemScope: IDL set to false should not throw 
FAIL nav.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS nav.itemScope: IDL set to false followed by IDL get 
PASS nav.itemScope: IDL set to object "[object Object]" should not throw 
PASS nav.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL nav.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS nav.itemScope: IDL set to NaN should not throw 
FAIL nav.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL nav.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS nav.itemScope: IDL set to Infinity should not throw 
PASS nav.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL nav.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS nav.itemScope: IDL set to -Infinity should not throw 
PASS nav.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL nav.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS nav.itemScope: IDL set to "\0" should not throw 
PASS nav.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL nav.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS nav.itemScope: IDL set to object "test-toString" should not throw 
PASS nav.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL nav.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS nav.itemScope: IDL set to object "test-valueOf" should not throw 
PASS nav.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL nav.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL nav.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL nav.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS nav.itemId: setAttribute() to "" followed by getAttribute() 
FAIL nav.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS nav.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL nav.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS nav.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL nav.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS nav.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL nav.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS nav.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL nav.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS nav.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL nav.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS nav.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL nav.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS nav.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL nav.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS nav.itemId: setAttribute() to true followed by getAttribute() 
FAIL nav.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS nav.itemId: setAttribute() to false followed by getAttribute() 
FAIL nav.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS nav.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL nav.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS nav.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL nav.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS nav.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL nav.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS nav.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL nav.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS nav.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL nav.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS nav.itemId: setAttribute() to null followed by getAttribute() 
FAIL nav.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS nav.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL nav.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS nav.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL nav.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS nav.itemId: IDL set to "" should not throw 
FAIL nav.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL nav.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS nav.itemId: IDL set to " foo " should not throw 
FAIL nav.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL nav.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS nav.itemId: IDL set to "http://site.example/" should not throw 
FAIL nav.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS nav.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS nav.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL nav.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL nav.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS nav.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL nav.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL nav.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS nav.itemId: IDL set to undefined should not throw 
FAIL nav.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL nav.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS nav.itemId: IDL set to 7 should not throw 
FAIL nav.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL nav.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS nav.itemId: IDL set to 1.5 should not throw 
FAIL nav.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL nav.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS nav.itemId: IDL set to true should not throw 
FAIL nav.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL nav.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS nav.itemId: IDL set to false should not throw 
FAIL nav.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL nav.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS nav.itemId: IDL set to object "[object Object]" should not throw 
FAIL nav.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL nav.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS nav.itemId: IDL set to NaN should not throw 
FAIL nav.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL nav.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS nav.itemId: IDL set to Infinity should not throw 
FAIL nav.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL nav.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS nav.itemId: IDL set to -Infinity should not throw 
FAIL nav.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL nav.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS nav.itemId: IDL set to "\0" should not throw 
FAIL nav.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL nav.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS nav.itemId: IDL set to null should not throw 
FAIL nav.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL nav.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS nav.itemId: IDL set to object "test-toString" should not throw 
FAIL nav.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL nav.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS nav.itemId: IDL set to object "test-valueOf" should not throw 
PASS nav.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL nav.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS aside.title: typeof IDL attribute 
PASS aside.title: IDL get with DOM attribute unset 
PASS aside.title: setAttribute() to "" followed by getAttribute() 
PASS aside.title: setAttribute() to "" followed by IDL get 
PASS aside.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS aside.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS aside.title: setAttribute() to undefined followed by getAttribute() 
PASS aside.title: setAttribute() to undefined followed by IDL get 
PASS aside.title: setAttribute() to 7 followed by getAttribute() 
PASS aside.title: setAttribute() to 7 followed by IDL get 
PASS aside.title: setAttribute() to 1.5 followed by getAttribute() 
PASS aside.title: setAttribute() to 1.5 followed by IDL get 
PASS aside.title: setAttribute() to true followed by getAttribute() 
PASS aside.title: setAttribute() to true followed by IDL get 
PASS aside.title: setAttribute() to false followed by getAttribute() 
PASS aside.title: setAttribute() to false followed by IDL get 
PASS aside.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS aside.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS aside.title: setAttribute() to NaN followed by getAttribute() 
PASS aside.title: setAttribute() to NaN followed by IDL get 
PASS aside.title: setAttribute() to Infinity followed by getAttribute() 
PASS aside.title: setAttribute() to Infinity followed by IDL get 
PASS aside.title: setAttribute() to -Infinity followed by getAttribute() 
PASS aside.title: setAttribute() to -Infinity followed by IDL get 
PASS aside.title: setAttribute() to "\0" followed by getAttribute() 
PASS aside.title: setAttribute() to "\0" followed by IDL get 
PASS aside.title: setAttribute() to null followed by getAttribute() 
PASS aside.title: setAttribute() to null followed by IDL get 
PASS aside.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS aside.title: setAttribute() to object "test-toString" followed by IDL get 
PASS aside.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS aside.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS aside.title: IDL set to "" should not throw 
PASS aside.title: IDL set to "" followed by getAttribute() 
PASS aside.title: IDL set to "" followed by IDL get 
PASS aside.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS aside.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS aside.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS aside.title: IDL set to undefined should not throw 
PASS aside.title: IDL set to undefined followed by getAttribute() 
PASS aside.title: IDL set to undefined followed by IDL get 
PASS aside.title: IDL set to 7 should not throw 
PASS aside.title: IDL set to 7 followed by getAttribute() 
PASS aside.title: IDL set to 7 followed by IDL get 
PASS aside.title: IDL set to 1.5 should not throw 
PASS aside.title: IDL set to 1.5 followed by getAttribute() 
PASS aside.title: IDL set to 1.5 followed by IDL get 
PASS aside.title: IDL set to true should not throw 
PASS aside.title: IDL set to true followed by getAttribute() 
PASS aside.title: IDL set to true followed by IDL get 
PASS aside.title: IDL set to false should not throw 
PASS aside.title: IDL set to false followed by getAttribute() 
PASS aside.title: IDL set to false followed by IDL get 
PASS aside.title: IDL set to object "[object Object]" should not throw 
PASS aside.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS aside.title: IDL set to object "[object Object]" followed by IDL get 
PASS aside.title: IDL set to NaN should not throw 
PASS aside.title: IDL set to NaN followed by getAttribute() 
PASS aside.title: IDL set to NaN followed by IDL get 
PASS aside.title: IDL set to Infinity should not throw 
PASS aside.title: IDL set to Infinity followed by getAttribute() 
PASS aside.title: IDL set to Infinity followed by IDL get 
PASS aside.title: IDL set to -Infinity should not throw 
PASS aside.title: IDL set to -Infinity followed by getAttribute() 
PASS aside.title: IDL set to -Infinity followed by IDL get 
PASS aside.title: IDL set to "\0" should not throw 
PASS aside.title: IDL set to "\0" followed by getAttribute() 
PASS aside.title: IDL set to "\0" followed by IDL get 
PASS aside.title: IDL set to null should not throw 
PASS aside.title: IDL set to null followed by getAttribute() 
PASS aside.title: IDL set to null followed by IDL get 
PASS aside.title: IDL set to object "test-toString" should not throw 
PASS aside.title: IDL set to object "test-toString" followed by getAttribute() 
PASS aside.title: IDL set to object "test-toString" followed by IDL get 
PASS aside.title: IDL set to object "test-valueOf" should not throw 
PASS aside.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS aside.title: IDL set to object "test-valueOf" followed by IDL get 
PASS aside.lang: typeof IDL attribute 
PASS aside.lang: IDL get with DOM attribute unset 
PASS aside.lang: setAttribute() to "" followed by getAttribute() 
PASS aside.lang: setAttribute() to "" followed by IDL get 
PASS aside.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS aside.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS aside.lang: setAttribute() to undefined followed by getAttribute() 
PASS aside.lang: setAttribute() to undefined followed by IDL get 
PASS aside.lang: setAttribute() to 7 followed by getAttribute() 
PASS aside.lang: setAttribute() to 7 followed by IDL get 
PASS aside.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS aside.lang: setAttribute() to 1.5 followed by IDL get 
PASS aside.lang: setAttribute() to true followed by getAttribute() 
PASS aside.lang: setAttribute() to true followed by IDL get 
PASS aside.lang: setAttribute() to false followed by getAttribute() 
PASS aside.lang: setAttribute() to false followed by IDL get 
PASS aside.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS aside.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS aside.lang: setAttribute() to NaN followed by getAttribute() 
PASS aside.lang: setAttribute() to NaN followed by IDL get 
PASS aside.lang: setAttribute() to Infinity followed by getAttribute() 
PASS aside.lang: setAttribute() to Infinity followed by IDL get 
PASS aside.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS aside.lang: setAttribute() to -Infinity followed by IDL get 
PASS aside.lang: setAttribute() to "\0" followed by getAttribute() 
PASS aside.lang: setAttribute() to "\0" followed by IDL get 
PASS aside.lang: setAttribute() to null followed by getAttribute() 
PASS aside.lang: setAttribute() to null followed by IDL get 
PASS aside.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS aside.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS aside.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS aside.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS aside.lang: IDL set to "" should not throw 
PASS aside.lang: IDL set to "" followed by getAttribute() 
PASS aside.lang: IDL set to "" followed by IDL get 
PASS aside.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS aside.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS aside.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS aside.lang: IDL set to undefined should not throw 
PASS aside.lang: IDL set to undefined followed by getAttribute() 
PASS aside.lang: IDL set to undefined followed by IDL get 
PASS aside.lang: IDL set to 7 should not throw 
PASS aside.lang: IDL set to 7 followed by getAttribute() 
PASS aside.lang: IDL set to 7 followed by IDL get 
PASS aside.lang: IDL set to 1.5 should not throw 
PASS aside.lang: IDL set to 1.5 followed by getAttribute() 
PASS aside.lang: IDL set to 1.5 followed by IDL get 
PASS aside.lang: IDL set to true should not throw 
PASS aside.lang: IDL set to true followed by getAttribute() 
PASS aside.lang: IDL set to true followed by IDL get 
PASS aside.lang: IDL set to false should not throw 
PASS aside.lang: IDL set to false followed by getAttribute() 
PASS aside.lang: IDL set to false followed by IDL get 
PASS aside.lang: IDL set to object "[object Object]" should not throw 
PASS aside.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS aside.lang: IDL set to object "[object Object]" followed by IDL get 
PASS aside.lang: IDL set to NaN should not throw 
PASS aside.lang: IDL set to NaN followed by getAttribute() 
PASS aside.lang: IDL set to NaN followed by IDL get 
PASS aside.lang: IDL set to Infinity should not throw 
PASS aside.lang: IDL set to Infinity followed by getAttribute() 
PASS aside.lang: IDL set to Infinity followed by IDL get 
PASS aside.lang: IDL set to -Infinity should not throw 
PASS aside.lang: IDL set to -Infinity followed by getAttribute() 
PASS aside.lang: IDL set to -Infinity followed by IDL get 
PASS aside.lang: IDL set to "\0" should not throw 
PASS aside.lang: IDL set to "\0" followed by getAttribute() 
PASS aside.lang: IDL set to "\0" followed by IDL get 
PASS aside.lang: IDL set to null should not throw 
PASS aside.lang: IDL set to null followed by getAttribute() 
PASS aside.lang: IDL set to null followed by IDL get 
PASS aside.lang: IDL set to object "test-toString" should not throw 
PASS aside.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS aside.lang: IDL set to object "test-toString" followed by IDL get 
PASS aside.lang: IDL set to object "test-valueOf" should not throw 
PASS aside.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS aside.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS aside.dir: typeof IDL attribute 
PASS aside.dir: IDL get with DOM attribute unset 
PASS aside.dir: setAttribute() to "" followed by getAttribute() 
PASS aside.dir: setAttribute() to "" followed by IDL get 
PASS aside.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS aside.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS aside.dir: setAttribute() to undefined followed by getAttribute() 
PASS aside.dir: setAttribute() to undefined followed by IDL get 
PASS aside.dir: setAttribute() to 7 followed by getAttribute() 
PASS aside.dir: setAttribute() to 7 followed by IDL get 
PASS aside.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS aside.dir: setAttribute() to 1.5 followed by IDL get 
PASS aside.dir: setAttribute() to true followed by getAttribute() 
PASS aside.dir: setAttribute() to true followed by IDL get 
PASS aside.dir: setAttribute() to false followed by getAttribute() 
PASS aside.dir: setAttribute() to false followed by IDL get 
PASS aside.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS aside.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS aside.dir: setAttribute() to NaN followed by getAttribute() 
PASS aside.dir: setAttribute() to NaN followed by IDL get 
PASS aside.dir: setAttribute() to Infinity followed by getAttribute() 
PASS aside.dir: setAttribute() to Infinity followed by IDL get 
PASS aside.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS aside.dir: setAttribute() to -Infinity followed by IDL get 
PASS aside.dir: setAttribute() to "\0" followed by getAttribute() 
PASS aside.dir: setAttribute() to "\0" followed by IDL get 
PASS aside.dir: setAttribute() to null followed by getAttribute() 
PASS aside.dir: setAttribute() to null followed by IDL get 
PASS aside.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS aside.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS aside.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS aside.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS aside.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS aside.dir: setAttribute() to "ltr" followed by IDL get 
PASS aside.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS aside.dir: setAttribute() to "xltr" followed by IDL get 
PASS aside.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS aside.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS aside.dir: setAttribute() to "tr" followed by getAttribute() 
PASS aside.dir: setAttribute() to "tr" followed by IDL get 
PASS aside.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS aside.dir: setAttribute() to "LTR" followed by IDL get 
PASS aside.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS aside.dir: setAttribute() to "rtl" followed by IDL get 
PASS aside.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS aside.dir: setAttribute() to "xrtl" followed by IDL get 
PASS aside.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS aside.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS aside.dir: setAttribute() to "tl" followed by getAttribute() 
PASS aside.dir: setAttribute() to "tl" followed by IDL get 
PASS aside.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS aside.dir: setAttribute() to "RTL" followed by IDL get 
PASS aside.dir: setAttribute() to "auto" followed by getAttribute() 
PASS aside.dir: setAttribute() to "auto" followed by IDL get 
PASS aside.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS aside.dir: setAttribute() to "xauto" followed by IDL get 
PASS aside.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS aside.dir: setAttribute() to "auto\0" followed by IDL get 
PASS aside.dir: setAttribute() to "uto" followed by getAttribute() 
PASS aside.dir: setAttribute() to "uto" followed by IDL get 
PASS aside.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS aside.dir: setAttribute() to "AUTO" followed by IDL get 
PASS aside.dir: IDL set to "" should not throw 
PASS aside.dir: IDL set to "" followed by getAttribute() 
PASS aside.dir: IDL set to "" followed by IDL get 
PASS aside.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS aside.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS aside.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS aside.dir: IDL set to undefined should not throw 
PASS aside.dir: IDL set to undefined followed by getAttribute() 
PASS aside.dir: IDL set to undefined followed by IDL get 
PASS aside.dir: IDL set to 7 should not throw 
PASS aside.dir: IDL set to 7 followed by getAttribute() 
PASS aside.dir: IDL set to 7 followed by IDL get 
PASS aside.dir: IDL set to 1.5 should not throw 
PASS aside.dir: IDL set to 1.5 followed by getAttribute() 
PASS aside.dir: IDL set to 1.5 followed by IDL get 
PASS aside.dir: IDL set to true should not throw 
PASS aside.dir: IDL set to true followed by getAttribute() 
PASS aside.dir: IDL set to true followed by IDL get 
PASS aside.dir: IDL set to false should not throw 
PASS aside.dir: IDL set to false followed by getAttribute() 
PASS aside.dir: IDL set to false followed by IDL get 
PASS aside.dir: IDL set to object "[object Object]" should not throw 
PASS aside.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS aside.dir: IDL set to object "[object Object]" followed by IDL get 
PASS aside.dir: IDL set to NaN should not throw 
PASS aside.dir: IDL set to NaN followed by getAttribute() 
PASS aside.dir: IDL set to NaN followed by IDL get 
PASS aside.dir: IDL set to Infinity should not throw 
PASS aside.dir: IDL set to Infinity followed by getAttribute() 
PASS aside.dir: IDL set to Infinity followed by IDL get 
PASS aside.dir: IDL set to -Infinity should not throw 
PASS aside.dir: IDL set to -Infinity followed by getAttribute() 
PASS aside.dir: IDL set to -Infinity followed by IDL get 
PASS aside.dir: IDL set to "\0" should not throw 
PASS aside.dir: IDL set to "\0" followed by getAttribute() 
PASS aside.dir: IDL set to "\0" followed by IDL get 
PASS aside.dir: IDL set to null should not throw 
PASS aside.dir: IDL set to null followed by IDL get 
PASS aside.dir: IDL set to object "test-toString" should not throw 
PASS aside.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS aside.dir: IDL set to object "test-toString" followed by IDL get 
PASS aside.dir: IDL set to object "test-valueOf" should not throw 
PASS aside.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS aside.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS aside.dir: IDL set to "ltr" should not throw 
PASS aside.dir: IDL set to "ltr" followed by getAttribute() 
PASS aside.dir: IDL set to "ltr" followed by IDL get 
PASS aside.dir: IDL set to "xltr" should not throw 
PASS aside.dir: IDL set to "xltr" followed by getAttribute() 
PASS aside.dir: IDL set to "xltr" followed by IDL get 
PASS aside.dir: IDL set to "ltr\0" should not throw 
PASS aside.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS aside.dir: IDL set to "ltr\0" followed by IDL get 
PASS aside.dir: IDL set to "tr" should not throw 
PASS aside.dir: IDL set to "tr" followed by getAttribute() 
PASS aside.dir: IDL set to "tr" followed by IDL get 
PASS aside.dir: IDL set to "LTR" should not throw 
PASS aside.dir: IDL set to "LTR" followed by getAttribute() 
PASS aside.dir: IDL set to "LTR" followed by IDL get 
PASS aside.dir: IDL set to "rtl" should not throw 
PASS aside.dir: IDL set to "rtl" followed by getAttribute() 
PASS aside.dir: IDL set to "rtl" followed by IDL get 
PASS aside.dir: IDL set to "xrtl" should not throw 
PASS aside.dir: IDL set to "xrtl" followed by getAttribute() 
PASS aside.dir: IDL set to "xrtl" followed by IDL get 
PASS aside.dir: IDL set to "rtl\0" should not throw 
PASS aside.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS aside.dir: IDL set to "rtl\0" followed by IDL get 
PASS aside.dir: IDL set to "tl" should not throw 
PASS aside.dir: IDL set to "tl" followed by getAttribute() 
PASS aside.dir: IDL set to "tl" followed by IDL get 
PASS aside.dir: IDL set to "RTL" should not throw 
PASS aside.dir: IDL set to "RTL" followed by getAttribute() 
PASS aside.dir: IDL set to "RTL" followed by IDL get 
PASS aside.dir: IDL set to "auto" should not throw 
PASS aside.dir: IDL set to "auto" followed by getAttribute() 
PASS aside.dir: IDL set to "auto" followed by IDL get 
PASS aside.dir: IDL set to "xauto" should not throw 
PASS aside.dir: IDL set to "xauto" followed by getAttribute() 
PASS aside.dir: IDL set to "xauto" followed by IDL get 
PASS aside.dir: IDL set to "auto\0" should not throw 
PASS aside.dir: IDL set to "auto\0" followed by getAttribute() 
PASS aside.dir: IDL set to "auto\0" followed by IDL get 
PASS aside.dir: IDL set to "uto" should not throw 
PASS aside.dir: IDL set to "uto" followed by getAttribute() 
PASS aside.dir: IDL set to "uto" followed by IDL get 
PASS aside.dir: IDL set to "AUTO" should not throw 
PASS aside.dir: IDL set to "AUTO" followed by getAttribute() 
PASS aside.dir: IDL set to "AUTO" followed by IDL get 
PASS aside.className (<aside class>): typeof IDL attribute 
PASS aside.className (<aside class>): IDL get with DOM attribute unset 
PASS aside.className (<aside class>): setAttribute() to "" followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to "" followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to undefined followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to undefined followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to 7 followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to 7 followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to 1.5 followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to 1.5 followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to true followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to true followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to false followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to false followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to NaN followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to NaN followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to Infinity followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to Infinity followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to -Infinity followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to -Infinity followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to "\0" followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to "\0" followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to null followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to null followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to object "test-toString" followed by IDL get 
PASS aside.className (<aside class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS aside.className (<aside class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS aside.className (<aside class>): IDL set to "" should not throw 
PASS aside.className (<aside class>): IDL set to "" followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to "" followed by IDL get 
PASS aside.className (<aside class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS aside.className (<aside class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS aside.className (<aside class>): IDL set to undefined should not throw 
PASS aside.className (<aside class>): IDL set to undefined followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to undefined followed by IDL get 
PASS aside.className (<aside class>): IDL set to 7 should not throw 
PASS aside.className (<aside class>): IDL set to 7 followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to 7 followed by IDL get 
PASS aside.className (<aside class>): IDL set to 1.5 should not throw 
PASS aside.className (<aside class>): IDL set to 1.5 followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to 1.5 followed by IDL get 
PASS aside.className (<aside class>): IDL set to true should not throw 
PASS aside.className (<aside class>): IDL set to true followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to true followed by IDL get 
PASS aside.className (<aside class>): IDL set to false should not throw 
PASS aside.className (<aside class>): IDL set to false followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to false followed by IDL get 
PASS aside.className (<aside class>): IDL set to object "[object Object]" should not throw 
PASS aside.className (<aside class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to object "[object Object]" followed by IDL get 
PASS aside.className (<aside class>): IDL set to NaN should not throw 
PASS aside.className (<aside class>): IDL set to NaN followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to NaN followed by IDL get 
PASS aside.className (<aside class>): IDL set to Infinity should not throw 
PASS aside.className (<aside class>): IDL set to Infinity followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to Infinity followed by IDL get 
PASS aside.className (<aside class>): IDL set to -Infinity should not throw 
PASS aside.className (<aside class>): IDL set to -Infinity followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to -Infinity followed by IDL get 
PASS aside.className (<aside class>): IDL set to "\0" should not throw 
PASS aside.className (<aside class>): IDL set to "\0" followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to "\0" followed by IDL get 
PASS aside.className (<aside class>): IDL set to null should not throw 
PASS aside.className (<aside class>): IDL set to null followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to null followed by IDL get 
PASS aside.className (<aside class>): IDL set to object "test-toString" should not throw 
PASS aside.className (<aside class>): IDL set to object "test-toString" followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to object "test-toString" followed by IDL get 
PASS aside.className (<aside class>): IDL set to object "test-valueOf" should not throw 
PASS aside.className (<aside class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS aside.className (<aside class>): IDL set to object "test-valueOf" followed by IDL get 
PASS aside.hidden: typeof IDL attribute 
PASS aside.hidden: IDL get with DOM attribute unset 
PASS aside.hidden: setAttribute() to "" followed by getAttribute() 
PASS aside.hidden: setAttribute() to "" followed by IDL get 
PASS aside.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS aside.hidden: setAttribute() to " foo " followed by IDL get 
PASS aside.hidden: setAttribute() to undefined followed by getAttribute() 
PASS aside.hidden: setAttribute() to undefined followed by IDL get 
PASS aside.hidden: setAttribute() to null followed by getAttribute() 
PASS aside.hidden: setAttribute() to null followed by IDL get 
PASS aside.hidden: setAttribute() to 7 followed by getAttribute() 
PASS aside.hidden: setAttribute() to 7 followed by IDL get 
PASS aside.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS aside.hidden: setAttribute() to 1.5 followed by IDL get 
PASS aside.hidden: setAttribute() to true followed by getAttribute() 
PASS aside.hidden: setAttribute() to true followed by IDL get 
PASS aside.hidden: setAttribute() to false followed by getAttribute() 
PASS aside.hidden: setAttribute() to false followed by IDL get 
PASS aside.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS aside.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS aside.hidden: setAttribute() to NaN followed by getAttribute() 
PASS aside.hidden: setAttribute() to NaN followed by IDL get 
PASS aside.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS aside.hidden: setAttribute() to Infinity followed by IDL get 
PASS aside.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS aside.hidden: setAttribute() to -Infinity followed by IDL get 
PASS aside.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS aside.hidden: setAttribute() to "\0" followed by IDL get 
PASS aside.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS aside.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS aside.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS aside.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS aside.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS aside.hidden: setAttribute() to "hidden" followed by IDL get 
PASS aside.hidden: IDL set to "" should not throw 
PASS aside.hidden: IDL set to "" followed by hasAttribute() 
PASS aside.hidden: IDL set to "" followed by IDL get 
PASS aside.hidden: IDL set to " foo " should not throw 
PASS aside.hidden: IDL set to " foo " followed by hasAttribute() 
PASS aside.hidden: IDL set to " foo " followed by IDL get 
PASS aside.hidden: IDL set to undefined should not throw 
PASS aside.hidden: IDL set to undefined followed by hasAttribute() 
PASS aside.hidden: IDL set to undefined followed by IDL get 
PASS aside.hidden: IDL set to null should not throw 
PASS aside.hidden: IDL set to null followed by hasAttribute() 
PASS aside.hidden: IDL set to null followed by IDL get 
PASS aside.hidden: IDL set to 7 should not throw 
PASS aside.hidden: IDL set to 7 followed by hasAttribute() 
PASS aside.hidden: IDL set to 7 followed by IDL get 
PASS aside.hidden: IDL set to 1.5 should not throw 
PASS aside.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS aside.hidden: IDL set to 1.5 followed by IDL get 
PASS aside.hidden: IDL set to true should not throw 
PASS aside.hidden: IDL set to true followed by hasAttribute() 
PASS aside.hidden: IDL set to true followed by IDL get 
PASS aside.hidden: IDL set to false should not throw 
PASS aside.hidden: IDL set to false followed by hasAttribute() 
PASS aside.hidden: IDL set to false followed by IDL get 
PASS aside.hidden: IDL set to object "[object Object]" should not throw 
PASS aside.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS aside.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS aside.hidden: IDL set to NaN should not throw 
PASS aside.hidden: IDL set to NaN followed by hasAttribute() 
PASS aside.hidden: IDL set to NaN followed by IDL get 
PASS aside.hidden: IDL set to Infinity should not throw 
PASS aside.hidden: IDL set to Infinity followed by hasAttribute() 
PASS aside.hidden: IDL set to Infinity followed by IDL get 
PASS aside.hidden: IDL set to -Infinity should not throw 
PASS aside.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS aside.hidden: IDL set to -Infinity followed by IDL get 
PASS aside.hidden: IDL set to "\0" should not throw 
PASS aside.hidden: IDL set to "\0" followed by hasAttribute() 
PASS aside.hidden: IDL set to "\0" followed by IDL get 
PASS aside.hidden: IDL set to object "test-toString" should not throw 
PASS aside.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS aside.hidden: IDL set to object "test-toString" followed by IDL get 
PASS aside.hidden: IDL set to object "test-valueOf" should not throw 
PASS aside.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS aside.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS aside.accessKey: typeof IDL attribute 
PASS aside.accessKey: IDL get with DOM attribute unset 
PASS aside.accessKey: setAttribute() to "" followed by getAttribute() 
PASS aside.accessKey: setAttribute() to "" followed by IDL get 
PASS aside.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS aside.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS aside.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS aside.accessKey: setAttribute() to undefined followed by IDL get 
PASS aside.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS aside.accessKey: setAttribute() to 7 followed by IDL get 
PASS aside.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS aside.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS aside.accessKey: setAttribute() to true followed by getAttribute() 
PASS aside.accessKey: setAttribute() to true followed by IDL get 
PASS aside.accessKey: setAttribute() to false followed by getAttribute() 
PASS aside.accessKey: setAttribute() to false followed by IDL get 
PASS aside.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS aside.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS aside.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS aside.accessKey: setAttribute() to NaN followed by IDL get 
PASS aside.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS aside.accessKey: setAttribute() to Infinity followed by IDL get 
PASS aside.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS aside.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS aside.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS aside.accessKey: setAttribute() to "\0" followed by IDL get 
PASS aside.accessKey: setAttribute() to null followed by getAttribute() 
PASS aside.accessKey: setAttribute() to null followed by IDL get 
PASS aside.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS aside.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS aside.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS aside.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS aside.accessKey: IDL set to "" should not throw 
PASS aside.accessKey: IDL set to "" followed by getAttribute() 
PASS aside.accessKey: IDL set to "" followed by IDL get 
PASS aside.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS aside.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS aside.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS aside.accessKey: IDL set to undefined should not throw 
PASS aside.accessKey: IDL set to undefined followed by getAttribute() 
PASS aside.accessKey: IDL set to undefined followed by IDL get 
PASS aside.accessKey: IDL set to 7 should not throw 
PASS aside.accessKey: IDL set to 7 followed by getAttribute() 
PASS aside.accessKey: IDL set to 7 followed by IDL get 
PASS aside.accessKey: IDL set to 1.5 should not throw 
PASS aside.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS aside.accessKey: IDL set to 1.5 followed by IDL get 
PASS aside.accessKey: IDL set to true should not throw 
PASS aside.accessKey: IDL set to true followed by getAttribute() 
PASS aside.accessKey: IDL set to true followed by IDL get 
PASS aside.accessKey: IDL set to false should not throw 
PASS aside.accessKey: IDL set to false followed by getAttribute() 
PASS aside.accessKey: IDL set to false followed by IDL get 
PASS aside.accessKey: IDL set to object "[object Object]" should not throw 
PASS aside.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS aside.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS aside.accessKey: IDL set to NaN should not throw 
PASS aside.accessKey: IDL set to NaN followed by getAttribute() 
PASS aside.accessKey: IDL set to NaN followed by IDL get 
PASS aside.accessKey: IDL set to Infinity should not throw 
PASS aside.accessKey: IDL set to Infinity followed by getAttribute() 
PASS aside.accessKey: IDL set to Infinity followed by IDL get 
PASS aside.accessKey: IDL set to -Infinity should not throw 
PASS aside.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS aside.accessKey: IDL set to -Infinity followed by IDL get 
PASS aside.accessKey: IDL set to "\0" should not throw 
PASS aside.accessKey: IDL set to "\0" followed by getAttribute() 
PASS aside.accessKey: IDL set to "\0" followed by IDL get 
PASS aside.accessKey: IDL set to null should not throw 
PASS aside.accessKey: IDL set to null followed by getAttribute() 
PASS aside.accessKey: IDL set to null followed by IDL get 
PASS aside.accessKey: IDL set to object "test-toString" should not throw 
PASS aside.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS aside.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS aside.accessKey: IDL set to object "test-valueOf" should not throw 
PASS aside.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS aside.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS aside.tabIndex: typeof IDL attribute 
PASS aside.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to -36 followed by IDL get 
PASS aside.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to -1 followed by IDL get 
PASS aside.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to 0 followed by IDL get 
PASS aside.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to 1 followed by IDL get 
PASS aside.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS aside.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS aside.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS aside.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS aside.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to "0" followed by IDL get 
PASS aside.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to "1" followed by IDL get 
PASS aside.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS aside.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS aside.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS aside.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS aside.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS aside.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS aside.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS aside.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS aside.tabIndex: IDL set to -36 should not throw 
PASS aside.tabIndex: IDL set to -36 followed by getAttribute() 
PASS aside.tabIndex: IDL set to -36 followed by IDL get 
PASS aside.tabIndex: IDL set to -1 should not throw 
PASS aside.tabIndex: IDL set to -1 followed by getAttribute() 
PASS aside.tabIndex: IDL set to -1 followed by IDL get 
PASS aside.tabIndex: IDL set to 0 should not throw 
PASS aside.tabIndex: IDL set to 0 followed by getAttribute() 
PASS aside.tabIndex: IDL set to 0 followed by IDL get 
PASS aside.tabIndex: IDL set to 1 should not throw 
PASS aside.tabIndex: IDL set to 1 followed by getAttribute() 
PASS aside.tabIndex: IDL set to 1 followed by IDL get 
PASS aside.tabIndex: IDL set to 2147483647 should not throw 
PASS aside.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS aside.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS aside.tabIndex: IDL set to -2147483648 should not throw 
PASS aside.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS aside.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL aside.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL aside.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS aside.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to null followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to true followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to false followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL aside.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS aside.itemScope: IDL set to "" should not throw 
FAIL aside.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL aside.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS aside.itemScope: IDL set to " foo " should not throw 
PASS aside.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL aside.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS aside.itemScope: IDL set to undefined should not throw 
FAIL aside.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL aside.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS aside.itemScope: IDL set to null should not throw 
FAIL aside.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL aside.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS aside.itemScope: IDL set to 7 should not throw 
PASS aside.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL aside.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS aside.itemScope: IDL set to 1.5 should not throw 
PASS aside.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL aside.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS aside.itemScope: IDL set to true should not throw 
PASS aside.itemScope: IDL set to true followed by hasAttribute() 
PASS aside.itemScope: IDL set to true followed by IDL get 
PASS aside.itemScope: IDL set to false should not throw 
FAIL aside.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS aside.itemScope: IDL set to false followed by IDL get 
PASS aside.itemScope: IDL set to object "[object Object]" should not throw 
PASS aside.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL aside.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS aside.itemScope: IDL set to NaN should not throw 
FAIL aside.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL aside.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS aside.itemScope: IDL set to Infinity should not throw 
PASS aside.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL aside.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS aside.itemScope: IDL set to -Infinity should not throw 
PASS aside.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL aside.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS aside.itemScope: IDL set to "\0" should not throw 
PASS aside.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL aside.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS aside.itemScope: IDL set to object "test-toString" should not throw 
PASS aside.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL aside.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS aside.itemScope: IDL set to object "test-valueOf" should not throw 
PASS aside.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL aside.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL aside.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL aside.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS aside.itemId: setAttribute() to "" followed by getAttribute() 
FAIL aside.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS aside.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL aside.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS aside.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL aside.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS aside.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL aside.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS aside.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL aside.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS aside.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL aside.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS aside.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL aside.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS aside.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL aside.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS aside.itemId: setAttribute() to true followed by getAttribute() 
FAIL aside.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS aside.itemId: setAttribute() to false followed by getAttribute() 
FAIL aside.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS aside.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL aside.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS aside.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL aside.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS aside.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL aside.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS aside.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL aside.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS aside.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL aside.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS aside.itemId: setAttribute() to null followed by getAttribute() 
FAIL aside.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS aside.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL aside.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS aside.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL aside.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS aside.itemId: IDL set to "" should not throw 
FAIL aside.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL aside.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS aside.itemId: IDL set to " foo " should not throw 
FAIL aside.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL aside.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS aside.itemId: IDL set to "http://site.example/" should not throw 
FAIL aside.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS aside.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS aside.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL aside.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL aside.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS aside.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL aside.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL aside.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS aside.itemId: IDL set to undefined should not throw 
FAIL aside.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL aside.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS aside.itemId: IDL set to 7 should not throw 
FAIL aside.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL aside.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS aside.itemId: IDL set to 1.5 should not throw 
FAIL aside.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL aside.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS aside.itemId: IDL set to true should not throw 
FAIL aside.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL aside.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS aside.itemId: IDL set to false should not throw 
FAIL aside.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL aside.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS aside.itemId: IDL set to object "[object Object]" should not throw 
FAIL aside.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL aside.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS aside.itemId: IDL set to NaN should not throw 
FAIL aside.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL aside.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS aside.itemId: IDL set to Infinity should not throw 
FAIL aside.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL aside.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS aside.itemId: IDL set to -Infinity should not throw 
FAIL aside.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL aside.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS aside.itemId: IDL set to "\0" should not throw 
FAIL aside.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL aside.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS aside.itemId: IDL set to null should not throw 
FAIL aside.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL aside.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS aside.itemId: IDL set to object "test-toString" should not throw 
FAIL aside.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL aside.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS aside.itemId: IDL set to object "test-valueOf" should not throw 
PASS aside.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL aside.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS h1.title: typeof IDL attribute 
PASS h1.title: IDL get with DOM attribute unset 
PASS h1.title: setAttribute() to "" followed by getAttribute() 
PASS h1.title: setAttribute() to "" followed by IDL get 
PASS h1.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h1.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h1.title: setAttribute() to undefined followed by getAttribute() 
PASS h1.title: setAttribute() to undefined followed by IDL get 
PASS h1.title: setAttribute() to 7 followed by getAttribute() 
PASS h1.title: setAttribute() to 7 followed by IDL get 
PASS h1.title: setAttribute() to 1.5 followed by getAttribute() 
PASS h1.title: setAttribute() to 1.5 followed by IDL get 
PASS h1.title: setAttribute() to true followed by getAttribute() 
PASS h1.title: setAttribute() to true followed by IDL get 
PASS h1.title: setAttribute() to false followed by getAttribute() 
PASS h1.title: setAttribute() to false followed by IDL get 
PASS h1.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h1.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS h1.title: setAttribute() to NaN followed by getAttribute() 
PASS h1.title: setAttribute() to NaN followed by IDL get 
PASS h1.title: setAttribute() to Infinity followed by getAttribute() 
PASS h1.title: setAttribute() to Infinity followed by IDL get 
PASS h1.title: setAttribute() to -Infinity followed by getAttribute() 
PASS h1.title: setAttribute() to -Infinity followed by IDL get 
PASS h1.title: setAttribute() to "\0" followed by getAttribute() 
PASS h1.title: setAttribute() to "\0" followed by IDL get 
PASS h1.title: setAttribute() to null followed by getAttribute() 
PASS h1.title: setAttribute() to null followed by IDL get 
PASS h1.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h1.title: setAttribute() to object "test-toString" followed by IDL get 
PASS h1.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h1.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h1.title: IDL set to "" should not throw 
PASS h1.title: IDL set to "" followed by getAttribute() 
PASS h1.title: IDL set to "" followed by IDL get 
PASS h1.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h1.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h1.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h1.title: IDL set to undefined should not throw 
PASS h1.title: IDL set to undefined followed by getAttribute() 
PASS h1.title: IDL set to undefined followed by IDL get 
PASS h1.title: IDL set to 7 should not throw 
PASS h1.title: IDL set to 7 followed by getAttribute() 
PASS h1.title: IDL set to 7 followed by IDL get 
PASS h1.title: IDL set to 1.5 should not throw 
PASS h1.title: IDL set to 1.5 followed by getAttribute() 
PASS h1.title: IDL set to 1.5 followed by IDL get 
PASS h1.title: IDL set to true should not throw 
PASS h1.title: IDL set to true followed by getAttribute() 
PASS h1.title: IDL set to true followed by IDL get 
PASS h1.title: IDL set to false should not throw 
PASS h1.title: IDL set to false followed by getAttribute() 
PASS h1.title: IDL set to false followed by IDL get 
PASS h1.title: IDL set to object "[object Object]" should not throw 
PASS h1.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS h1.title: IDL set to object "[object Object]" followed by IDL get 
PASS h1.title: IDL set to NaN should not throw 
PASS h1.title: IDL set to NaN followed by getAttribute() 
PASS h1.title: IDL set to NaN followed by IDL get 
PASS h1.title: IDL set to Infinity should not throw 
PASS h1.title: IDL set to Infinity followed by getAttribute() 
PASS h1.title: IDL set to Infinity followed by IDL get 
PASS h1.title: IDL set to -Infinity should not throw 
PASS h1.title: IDL set to -Infinity followed by getAttribute() 
PASS h1.title: IDL set to -Infinity followed by IDL get 
PASS h1.title: IDL set to "\0" should not throw 
PASS h1.title: IDL set to "\0" followed by getAttribute() 
PASS h1.title: IDL set to "\0" followed by IDL get 
PASS h1.title: IDL set to null should not throw 
PASS h1.title: IDL set to null followed by getAttribute() 
PASS h1.title: IDL set to null followed by IDL get 
PASS h1.title: IDL set to object "test-toString" should not throw 
PASS h1.title: IDL set to object "test-toString" followed by getAttribute() 
PASS h1.title: IDL set to object "test-toString" followed by IDL get 
PASS h1.title: IDL set to object "test-valueOf" should not throw 
PASS h1.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h1.title: IDL set to object "test-valueOf" followed by IDL get 
PASS h1.lang: typeof IDL attribute 
PASS h1.lang: IDL get with DOM attribute unset 
PASS h1.lang: setAttribute() to "" followed by getAttribute() 
PASS h1.lang: setAttribute() to "" followed by IDL get 
PASS h1.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h1.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h1.lang: setAttribute() to undefined followed by getAttribute() 
PASS h1.lang: setAttribute() to undefined followed by IDL get 
PASS h1.lang: setAttribute() to 7 followed by getAttribute() 
PASS h1.lang: setAttribute() to 7 followed by IDL get 
PASS h1.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS h1.lang: setAttribute() to 1.5 followed by IDL get 
PASS h1.lang: setAttribute() to true followed by getAttribute() 
PASS h1.lang: setAttribute() to true followed by IDL get 
PASS h1.lang: setAttribute() to false followed by getAttribute() 
PASS h1.lang: setAttribute() to false followed by IDL get 
PASS h1.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h1.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS h1.lang: setAttribute() to NaN followed by getAttribute() 
PASS h1.lang: setAttribute() to NaN followed by IDL get 
PASS h1.lang: setAttribute() to Infinity followed by getAttribute() 
PASS h1.lang: setAttribute() to Infinity followed by IDL get 
PASS h1.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS h1.lang: setAttribute() to -Infinity followed by IDL get 
PASS h1.lang: setAttribute() to "\0" followed by getAttribute() 
PASS h1.lang: setAttribute() to "\0" followed by IDL get 
PASS h1.lang: setAttribute() to null followed by getAttribute() 
PASS h1.lang: setAttribute() to null followed by IDL get 
PASS h1.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h1.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS h1.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h1.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h1.lang: IDL set to "" should not throw 
PASS h1.lang: IDL set to "" followed by getAttribute() 
PASS h1.lang: IDL set to "" followed by IDL get 
PASS h1.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h1.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h1.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h1.lang: IDL set to undefined should not throw 
PASS h1.lang: IDL set to undefined followed by getAttribute() 
PASS h1.lang: IDL set to undefined followed by IDL get 
PASS h1.lang: IDL set to 7 should not throw 
PASS h1.lang: IDL set to 7 followed by getAttribute() 
PASS h1.lang: IDL set to 7 followed by IDL get 
PASS h1.lang: IDL set to 1.5 should not throw 
PASS h1.lang: IDL set to 1.5 followed by getAttribute() 
PASS h1.lang: IDL set to 1.5 followed by IDL get 
PASS h1.lang: IDL set to true should not throw 
PASS h1.lang: IDL set to true followed by getAttribute() 
PASS h1.lang: IDL set to true followed by IDL get 
PASS h1.lang: IDL set to false should not throw 
PASS h1.lang: IDL set to false followed by getAttribute() 
PASS h1.lang: IDL set to false followed by IDL get 
PASS h1.lang: IDL set to object "[object Object]" should not throw 
PASS h1.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS h1.lang: IDL set to object "[object Object]" followed by IDL get 
PASS h1.lang: IDL set to NaN should not throw 
PASS h1.lang: IDL set to NaN followed by getAttribute() 
PASS h1.lang: IDL set to NaN followed by IDL get 
PASS h1.lang: IDL set to Infinity should not throw 
PASS h1.lang: IDL set to Infinity followed by getAttribute() 
PASS h1.lang: IDL set to Infinity followed by IDL get 
PASS h1.lang: IDL set to -Infinity should not throw 
PASS h1.lang: IDL set to -Infinity followed by getAttribute() 
PASS h1.lang: IDL set to -Infinity followed by IDL get 
PASS h1.lang: IDL set to "\0" should not throw 
PASS h1.lang: IDL set to "\0" followed by getAttribute() 
PASS h1.lang: IDL set to "\0" followed by IDL get 
PASS h1.lang: IDL set to null should not throw 
PASS h1.lang: IDL set to null followed by getAttribute() 
PASS h1.lang: IDL set to null followed by IDL get 
PASS h1.lang: IDL set to object "test-toString" should not throw 
PASS h1.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS h1.lang: IDL set to object "test-toString" followed by IDL get 
PASS h1.lang: IDL set to object "test-valueOf" should not throw 
PASS h1.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h1.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS h1.dir: typeof IDL attribute 
PASS h1.dir: IDL get with DOM attribute unset 
PASS h1.dir: setAttribute() to "" followed by getAttribute() 
PASS h1.dir: setAttribute() to "" followed by IDL get 
PASS h1.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h1.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h1.dir: setAttribute() to undefined followed by getAttribute() 
PASS h1.dir: setAttribute() to undefined followed by IDL get 
PASS h1.dir: setAttribute() to 7 followed by getAttribute() 
PASS h1.dir: setAttribute() to 7 followed by IDL get 
PASS h1.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS h1.dir: setAttribute() to 1.5 followed by IDL get 
PASS h1.dir: setAttribute() to true followed by getAttribute() 
PASS h1.dir: setAttribute() to true followed by IDL get 
PASS h1.dir: setAttribute() to false followed by getAttribute() 
PASS h1.dir: setAttribute() to false followed by IDL get 
PASS h1.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h1.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS h1.dir: setAttribute() to NaN followed by getAttribute() 
PASS h1.dir: setAttribute() to NaN followed by IDL get 
PASS h1.dir: setAttribute() to Infinity followed by getAttribute() 
PASS h1.dir: setAttribute() to Infinity followed by IDL get 
PASS h1.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS h1.dir: setAttribute() to -Infinity followed by IDL get 
PASS h1.dir: setAttribute() to "\0" followed by getAttribute() 
PASS h1.dir: setAttribute() to "\0" followed by IDL get 
PASS h1.dir: setAttribute() to null followed by getAttribute() 
PASS h1.dir: setAttribute() to null followed by IDL get 
PASS h1.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h1.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS h1.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h1.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h1.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS h1.dir: setAttribute() to "ltr" followed by IDL get 
PASS h1.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS h1.dir: setAttribute() to "xltr" followed by IDL get 
PASS h1.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS h1.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS h1.dir: setAttribute() to "tr" followed by getAttribute() 
PASS h1.dir: setAttribute() to "tr" followed by IDL get 
PASS h1.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS h1.dir: setAttribute() to "LTR" followed by IDL get 
PASS h1.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS h1.dir: setAttribute() to "rtl" followed by IDL get 
PASS h1.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS h1.dir: setAttribute() to "xrtl" followed by IDL get 
PASS h1.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS h1.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS h1.dir: setAttribute() to "tl" followed by getAttribute() 
PASS h1.dir: setAttribute() to "tl" followed by IDL get 
PASS h1.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS h1.dir: setAttribute() to "RTL" followed by IDL get 
PASS h1.dir: setAttribute() to "auto" followed by getAttribute() 
PASS h1.dir: setAttribute() to "auto" followed by IDL get 
PASS h1.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS h1.dir: setAttribute() to "xauto" followed by IDL get 
PASS h1.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS h1.dir: setAttribute() to "auto\0" followed by IDL get 
PASS h1.dir: setAttribute() to "uto" followed by getAttribute() 
PASS h1.dir: setAttribute() to "uto" followed by IDL get 
PASS h1.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS h1.dir: setAttribute() to "AUTO" followed by IDL get 
PASS h1.dir: IDL set to "" should not throw 
PASS h1.dir: IDL set to "" followed by getAttribute() 
PASS h1.dir: IDL set to "" followed by IDL get 
PASS h1.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h1.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h1.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h1.dir: IDL set to undefined should not throw 
PASS h1.dir: IDL set to undefined followed by getAttribute() 
PASS h1.dir: IDL set to undefined followed by IDL get 
PASS h1.dir: IDL set to 7 should not throw 
PASS h1.dir: IDL set to 7 followed by getAttribute() 
PASS h1.dir: IDL set to 7 followed by IDL get 
PASS h1.dir: IDL set to 1.5 should not throw 
PASS h1.dir: IDL set to 1.5 followed by getAttribute() 
PASS h1.dir: IDL set to 1.5 followed by IDL get 
PASS h1.dir: IDL set to true should not throw 
PASS h1.dir: IDL set to true followed by getAttribute() 
PASS h1.dir: IDL set to true followed by IDL get 
PASS h1.dir: IDL set to false should not throw 
PASS h1.dir: IDL set to false followed by getAttribute() 
PASS h1.dir: IDL set to false followed by IDL get 
PASS h1.dir: IDL set to object "[object Object]" should not throw 
PASS h1.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS h1.dir: IDL set to object "[object Object]" followed by IDL get 
PASS h1.dir: IDL set to NaN should not throw 
PASS h1.dir: IDL set to NaN followed by getAttribute() 
PASS h1.dir: IDL set to NaN followed by IDL get 
PASS h1.dir: IDL set to Infinity should not throw 
PASS h1.dir: IDL set to Infinity followed by getAttribute() 
PASS h1.dir: IDL set to Infinity followed by IDL get 
PASS h1.dir: IDL set to -Infinity should not throw 
PASS h1.dir: IDL set to -Infinity followed by getAttribute() 
PASS h1.dir: IDL set to -Infinity followed by IDL get 
PASS h1.dir: IDL set to "\0" should not throw 
PASS h1.dir: IDL set to "\0" followed by getAttribute() 
PASS h1.dir: IDL set to "\0" followed by IDL get 
PASS h1.dir: IDL set to null should not throw 
PASS h1.dir: IDL set to null followed by IDL get 
PASS h1.dir: IDL set to object "test-toString" should not throw 
PASS h1.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS h1.dir: IDL set to object "test-toString" followed by IDL get 
PASS h1.dir: IDL set to object "test-valueOf" should not throw 
PASS h1.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h1.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS h1.dir: IDL set to "ltr" should not throw 
PASS h1.dir: IDL set to "ltr" followed by getAttribute() 
PASS h1.dir: IDL set to "ltr" followed by IDL get 
PASS h1.dir: IDL set to "xltr" should not throw 
PASS h1.dir: IDL set to "xltr" followed by getAttribute() 
PASS h1.dir: IDL set to "xltr" followed by IDL get 
PASS h1.dir: IDL set to "ltr\0" should not throw 
PASS h1.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS h1.dir: IDL set to "ltr\0" followed by IDL get 
PASS h1.dir: IDL set to "tr" should not throw 
PASS h1.dir: IDL set to "tr" followed by getAttribute() 
PASS h1.dir: IDL set to "tr" followed by IDL get 
PASS h1.dir: IDL set to "LTR" should not throw 
PASS h1.dir: IDL set to "LTR" followed by getAttribute() 
PASS h1.dir: IDL set to "LTR" followed by IDL get 
PASS h1.dir: IDL set to "rtl" should not throw 
PASS h1.dir: IDL set to "rtl" followed by getAttribute() 
PASS h1.dir: IDL set to "rtl" followed by IDL get 
PASS h1.dir: IDL set to "xrtl" should not throw 
PASS h1.dir: IDL set to "xrtl" followed by getAttribute() 
PASS h1.dir: IDL set to "xrtl" followed by IDL get 
PASS h1.dir: IDL set to "rtl\0" should not throw 
PASS h1.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS h1.dir: IDL set to "rtl\0" followed by IDL get 
PASS h1.dir: IDL set to "tl" should not throw 
PASS h1.dir: IDL set to "tl" followed by getAttribute() 
PASS h1.dir: IDL set to "tl" followed by IDL get 
PASS h1.dir: IDL set to "RTL" should not throw 
PASS h1.dir: IDL set to "RTL" followed by getAttribute() 
PASS h1.dir: IDL set to "RTL" followed by IDL get 
PASS h1.dir: IDL set to "auto" should not throw 
PASS h1.dir: IDL set to "auto" followed by getAttribute() 
PASS h1.dir: IDL set to "auto" followed by IDL get 
PASS h1.dir: IDL set to "xauto" should not throw 
PASS h1.dir: IDL set to "xauto" followed by getAttribute() 
PASS h1.dir: IDL set to "xauto" followed by IDL get 
PASS h1.dir: IDL set to "auto\0" should not throw 
PASS h1.dir: IDL set to "auto\0" followed by getAttribute() 
PASS h1.dir: IDL set to "auto\0" followed by IDL get 
PASS h1.dir: IDL set to "uto" should not throw 
PASS h1.dir: IDL set to "uto" followed by getAttribute() 
PASS h1.dir: IDL set to "uto" followed by IDL get 
PASS h1.dir: IDL set to "AUTO" should not throw 
PASS h1.dir: IDL set to "AUTO" followed by getAttribute() 
PASS h1.dir: IDL set to "AUTO" followed by IDL get 
PASS h1.className (<h1 class>): typeof IDL attribute 
PASS h1.className (<h1 class>): IDL get with DOM attribute unset 
PASS h1.className (<h1 class>): setAttribute() to "" followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to "" followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to undefined followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to undefined followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to 7 followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to 7 followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to 1.5 followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to 1.5 followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to true followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to true followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to false followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to false followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to NaN followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to NaN followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to Infinity followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to Infinity followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to -Infinity followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to -Infinity followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to "\0" followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to "\0" followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to null followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to null followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to object "test-toString" followed by IDL get 
PASS h1.className (<h1 class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h1.className (<h1 class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS h1.className (<h1 class>): IDL set to "" should not throw 
PASS h1.className (<h1 class>): IDL set to "" followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to "" followed by IDL get 
PASS h1.className (<h1 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h1.className (<h1 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h1.className (<h1 class>): IDL set to undefined should not throw 
PASS h1.className (<h1 class>): IDL set to undefined followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to undefined followed by IDL get 
PASS h1.className (<h1 class>): IDL set to 7 should not throw 
PASS h1.className (<h1 class>): IDL set to 7 followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to 7 followed by IDL get 
PASS h1.className (<h1 class>): IDL set to 1.5 should not throw 
PASS h1.className (<h1 class>): IDL set to 1.5 followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to 1.5 followed by IDL get 
PASS h1.className (<h1 class>): IDL set to true should not throw 
PASS h1.className (<h1 class>): IDL set to true followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to true followed by IDL get 
PASS h1.className (<h1 class>): IDL set to false should not throw 
PASS h1.className (<h1 class>): IDL set to false followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to false followed by IDL get 
PASS h1.className (<h1 class>): IDL set to object "[object Object]" should not throw 
PASS h1.className (<h1 class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to object "[object Object]" followed by IDL get 
PASS h1.className (<h1 class>): IDL set to NaN should not throw 
PASS h1.className (<h1 class>): IDL set to NaN followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to NaN followed by IDL get 
PASS h1.className (<h1 class>): IDL set to Infinity should not throw 
PASS h1.className (<h1 class>): IDL set to Infinity followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to Infinity followed by IDL get 
PASS h1.className (<h1 class>): IDL set to -Infinity should not throw 
PASS h1.className (<h1 class>): IDL set to -Infinity followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to -Infinity followed by IDL get 
PASS h1.className (<h1 class>): IDL set to "\0" should not throw 
PASS h1.className (<h1 class>): IDL set to "\0" followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to "\0" followed by IDL get 
PASS h1.className (<h1 class>): IDL set to null should not throw 
PASS h1.className (<h1 class>): IDL set to null followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to null followed by IDL get 
PASS h1.className (<h1 class>): IDL set to object "test-toString" should not throw 
PASS h1.className (<h1 class>): IDL set to object "test-toString" followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to object "test-toString" followed by IDL get 
PASS h1.className (<h1 class>): IDL set to object "test-valueOf" should not throw 
PASS h1.className (<h1 class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS h1.className (<h1 class>): IDL set to object "test-valueOf" followed by IDL get 
PASS h1.hidden: typeof IDL attribute 
PASS h1.hidden: IDL get with DOM attribute unset 
PASS h1.hidden: setAttribute() to "" followed by getAttribute() 
PASS h1.hidden: setAttribute() to "" followed by IDL get 
PASS h1.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS h1.hidden: setAttribute() to " foo " followed by IDL get 
PASS h1.hidden: setAttribute() to undefined followed by getAttribute() 
PASS h1.hidden: setAttribute() to undefined followed by IDL get 
PASS h1.hidden: setAttribute() to null followed by getAttribute() 
PASS h1.hidden: setAttribute() to null followed by IDL get 
PASS h1.hidden: setAttribute() to 7 followed by getAttribute() 
PASS h1.hidden: setAttribute() to 7 followed by IDL get 
PASS h1.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS h1.hidden: setAttribute() to 1.5 followed by IDL get 
PASS h1.hidden: setAttribute() to true followed by getAttribute() 
PASS h1.hidden: setAttribute() to true followed by IDL get 
PASS h1.hidden: setAttribute() to false followed by getAttribute() 
PASS h1.hidden: setAttribute() to false followed by IDL get 
PASS h1.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h1.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS h1.hidden: setAttribute() to NaN followed by getAttribute() 
PASS h1.hidden: setAttribute() to NaN followed by IDL get 
PASS h1.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS h1.hidden: setAttribute() to Infinity followed by IDL get 
PASS h1.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS h1.hidden: setAttribute() to -Infinity followed by IDL get 
PASS h1.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS h1.hidden: setAttribute() to "\0" followed by IDL get 
PASS h1.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h1.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS h1.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h1.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h1.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS h1.hidden: setAttribute() to "hidden" followed by IDL get 
PASS h1.hidden: IDL set to "" should not throw 
PASS h1.hidden: IDL set to "" followed by hasAttribute() 
PASS h1.hidden: IDL set to "" followed by IDL get 
PASS h1.hidden: IDL set to " foo " should not throw 
PASS h1.hidden: IDL set to " foo " followed by hasAttribute() 
PASS h1.hidden: IDL set to " foo " followed by IDL get 
PASS h1.hidden: IDL set to undefined should not throw 
PASS h1.hidden: IDL set to undefined followed by hasAttribute() 
PASS h1.hidden: IDL set to undefined followed by IDL get 
PASS h1.hidden: IDL set to null should not throw 
PASS h1.hidden: IDL set to null followed by hasAttribute() 
PASS h1.hidden: IDL set to null followed by IDL get 
PASS h1.hidden: IDL set to 7 should not throw 
PASS h1.hidden: IDL set to 7 followed by hasAttribute() 
PASS h1.hidden: IDL set to 7 followed by IDL get 
PASS h1.hidden: IDL set to 1.5 should not throw 
PASS h1.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS h1.hidden: IDL set to 1.5 followed by IDL get 
PASS h1.hidden: IDL set to true should not throw 
PASS h1.hidden: IDL set to true followed by hasAttribute() 
PASS h1.hidden: IDL set to true followed by IDL get 
PASS h1.hidden: IDL set to false should not throw 
PASS h1.hidden: IDL set to false followed by hasAttribute() 
PASS h1.hidden: IDL set to false followed by IDL get 
PASS h1.hidden: IDL set to object "[object Object]" should not throw 
PASS h1.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS h1.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS h1.hidden: IDL set to NaN should not throw 
PASS h1.hidden: IDL set to NaN followed by hasAttribute() 
PASS h1.hidden: IDL set to NaN followed by IDL get 
PASS h1.hidden: IDL set to Infinity should not throw 
PASS h1.hidden: IDL set to Infinity followed by hasAttribute() 
PASS h1.hidden: IDL set to Infinity followed by IDL get 
PASS h1.hidden: IDL set to -Infinity should not throw 
PASS h1.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS h1.hidden: IDL set to -Infinity followed by IDL get 
PASS h1.hidden: IDL set to "\0" should not throw 
PASS h1.hidden: IDL set to "\0" followed by hasAttribute() 
PASS h1.hidden: IDL set to "\0" followed by IDL get 
PASS h1.hidden: IDL set to object "test-toString" should not throw 
PASS h1.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS h1.hidden: IDL set to object "test-toString" followed by IDL get 
PASS h1.hidden: IDL set to object "test-valueOf" should not throw 
PASS h1.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS h1.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS h1.accessKey: typeof IDL attribute 
PASS h1.accessKey: IDL get with DOM attribute unset 
PASS h1.accessKey: setAttribute() to "" followed by getAttribute() 
PASS h1.accessKey: setAttribute() to "" followed by IDL get 
PASS h1.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h1.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h1.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS h1.accessKey: setAttribute() to undefined followed by IDL get 
PASS h1.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS h1.accessKey: setAttribute() to 7 followed by IDL get 
PASS h1.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS h1.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS h1.accessKey: setAttribute() to true followed by getAttribute() 
PASS h1.accessKey: setAttribute() to true followed by IDL get 
PASS h1.accessKey: setAttribute() to false followed by getAttribute() 
PASS h1.accessKey: setAttribute() to false followed by IDL get 
PASS h1.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h1.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS h1.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS h1.accessKey: setAttribute() to NaN followed by IDL get 
PASS h1.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS h1.accessKey: setAttribute() to Infinity followed by IDL get 
PASS h1.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS h1.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS h1.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS h1.accessKey: setAttribute() to "\0" followed by IDL get 
PASS h1.accessKey: setAttribute() to null followed by getAttribute() 
PASS h1.accessKey: setAttribute() to null followed by IDL get 
PASS h1.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h1.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS h1.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h1.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h1.accessKey: IDL set to "" should not throw 
PASS h1.accessKey: IDL set to "" followed by getAttribute() 
PASS h1.accessKey: IDL set to "" followed by IDL get 
PASS h1.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h1.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h1.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h1.accessKey: IDL set to undefined should not throw 
PASS h1.accessKey: IDL set to undefined followed by getAttribute() 
PASS h1.accessKey: IDL set to undefined followed by IDL get 
PASS h1.accessKey: IDL set to 7 should not throw 
PASS h1.accessKey: IDL set to 7 followed by getAttribute() 
PASS h1.accessKey: IDL set to 7 followed by IDL get 
PASS h1.accessKey: IDL set to 1.5 should not throw 
PASS h1.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS h1.accessKey: IDL set to 1.5 followed by IDL get 
PASS h1.accessKey: IDL set to true should not throw 
PASS h1.accessKey: IDL set to true followed by getAttribute() 
PASS h1.accessKey: IDL set to true followed by IDL get 
PASS h1.accessKey: IDL set to false should not throw 
PASS h1.accessKey: IDL set to false followed by getAttribute() 
PASS h1.accessKey: IDL set to false followed by IDL get 
PASS h1.accessKey: IDL set to object "[object Object]" should not throw 
PASS h1.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS h1.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS h1.accessKey: IDL set to NaN should not throw 
PASS h1.accessKey: IDL set to NaN followed by getAttribute() 
PASS h1.accessKey: IDL set to NaN followed by IDL get 
PASS h1.accessKey: IDL set to Infinity should not throw 
PASS h1.accessKey: IDL set to Infinity followed by getAttribute() 
PASS h1.accessKey: IDL set to Infinity followed by IDL get 
PASS h1.accessKey: IDL set to -Infinity should not throw 
PASS h1.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS h1.accessKey: IDL set to -Infinity followed by IDL get 
PASS h1.accessKey: IDL set to "\0" should not throw 
PASS h1.accessKey: IDL set to "\0" followed by getAttribute() 
PASS h1.accessKey: IDL set to "\0" followed by IDL get 
PASS h1.accessKey: IDL set to null should not throw 
PASS h1.accessKey: IDL set to null followed by getAttribute() 
PASS h1.accessKey: IDL set to null followed by IDL get 
PASS h1.accessKey: IDL set to object "test-toString" should not throw 
PASS h1.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS h1.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS h1.accessKey: IDL set to object "test-valueOf" should not throw 
PASS h1.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h1.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS h1.tabIndex: typeof IDL attribute 
PASS h1.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to -36 followed by IDL get 
PASS h1.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to -1 followed by IDL get 
PASS h1.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to 0 followed by IDL get 
PASS h1.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to 1 followed by IDL get 
PASS h1.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS h1.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS h1.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS h1.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS h1.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to "0" followed by IDL get 
PASS h1.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to "1" followed by IDL get 
PASS h1.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS h1.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS h1.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS h1.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS h1.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS h1.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS h1.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS h1.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS h1.tabIndex: IDL set to -36 should not throw 
PASS h1.tabIndex: IDL set to -36 followed by getAttribute() 
PASS h1.tabIndex: IDL set to -36 followed by IDL get 
PASS h1.tabIndex: IDL set to -1 should not throw 
PASS h1.tabIndex: IDL set to -1 followed by getAttribute() 
PASS h1.tabIndex: IDL set to -1 followed by IDL get 
PASS h1.tabIndex: IDL set to 0 should not throw 
PASS h1.tabIndex: IDL set to 0 followed by getAttribute() 
PASS h1.tabIndex: IDL set to 0 followed by IDL get 
PASS h1.tabIndex: IDL set to 1 should not throw 
PASS h1.tabIndex: IDL set to 1 followed by getAttribute() 
PASS h1.tabIndex: IDL set to 1 followed by IDL get 
PASS h1.tabIndex: IDL set to 2147483647 should not throw 
PASS h1.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS h1.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS h1.tabIndex: IDL set to -2147483648 should not throw 
PASS h1.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS h1.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS h1.align: typeof IDL attribute 
PASS h1.align: IDL get with DOM attribute unset 
PASS h1.align: setAttribute() to "" followed by getAttribute() 
PASS h1.align: setAttribute() to "" followed by IDL get 
PASS h1.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h1.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h1.align: setAttribute() to undefined followed by getAttribute() 
PASS h1.align: setAttribute() to undefined followed by IDL get 
PASS h1.align: setAttribute() to 7 followed by getAttribute() 
PASS h1.align: setAttribute() to 7 followed by IDL get 
PASS h1.align: setAttribute() to 1.5 followed by getAttribute() 
PASS h1.align: setAttribute() to 1.5 followed by IDL get 
PASS h1.align: setAttribute() to true followed by getAttribute() 
PASS h1.align: setAttribute() to true followed by IDL get 
PASS h1.align: setAttribute() to false followed by getAttribute() 
PASS h1.align: setAttribute() to false followed by IDL get 
PASS h1.align: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h1.align: setAttribute() to object "[object Object]" followed by IDL get 
PASS h1.align: setAttribute() to NaN followed by getAttribute() 
PASS h1.align: setAttribute() to NaN followed by IDL get 
PASS h1.align: setAttribute() to Infinity followed by getAttribute() 
PASS h1.align: setAttribute() to Infinity followed by IDL get 
PASS h1.align: setAttribute() to -Infinity followed by getAttribute() 
PASS h1.align: setAttribute() to -Infinity followed by IDL get 
PASS h1.align: setAttribute() to "\0" followed by getAttribute() 
PASS h1.align: setAttribute() to "\0" followed by IDL get 
PASS h1.align: setAttribute() to null followed by getAttribute() 
PASS h1.align: setAttribute() to null followed by IDL get 
PASS h1.align: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h1.align: setAttribute() to object "test-toString" followed by IDL get 
PASS h1.align: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h1.align: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h1.align: IDL set to "" should not throw 
PASS h1.align: IDL set to "" followed by getAttribute() 
PASS h1.align: IDL set to "" followed by IDL get 
PASS h1.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h1.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h1.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h1.align: IDL set to undefined should not throw 
PASS h1.align: IDL set to undefined followed by getAttribute() 
PASS h1.align: IDL set to undefined followed by IDL get 
PASS h1.align: IDL set to 7 should not throw 
PASS h1.align: IDL set to 7 followed by getAttribute() 
PASS h1.align: IDL set to 7 followed by IDL get 
PASS h1.align: IDL set to 1.5 should not throw 
PASS h1.align: IDL set to 1.5 followed by getAttribute() 
PASS h1.align: IDL set to 1.5 followed by IDL get 
PASS h1.align: IDL set to true should not throw 
PASS h1.align: IDL set to true followed by getAttribute() 
PASS h1.align: IDL set to true followed by IDL get 
PASS h1.align: IDL set to false should not throw 
PASS h1.align: IDL set to false followed by getAttribute() 
PASS h1.align: IDL set to false followed by IDL get 
PASS h1.align: IDL set to object "[object Object]" should not throw 
PASS h1.align: IDL set to object "[object Object]" followed by getAttribute() 
PASS h1.align: IDL set to object "[object Object]" followed by IDL get 
PASS h1.align: IDL set to NaN should not throw 
PASS h1.align: IDL set to NaN followed by getAttribute() 
PASS h1.align: IDL set to NaN followed by IDL get 
PASS h1.align: IDL set to Infinity should not throw 
PASS h1.align: IDL set to Infinity followed by getAttribute() 
PASS h1.align: IDL set to Infinity followed by IDL get 
PASS h1.align: IDL set to -Infinity should not throw 
PASS h1.align: IDL set to -Infinity followed by getAttribute() 
PASS h1.align: IDL set to -Infinity followed by IDL get 
PASS h1.align: IDL set to "\0" should not throw 
PASS h1.align: IDL set to "\0" followed by getAttribute() 
PASS h1.align: IDL set to "\0" followed by IDL get 
PASS h1.align: IDL set to null should not throw 
PASS h1.align: IDL set to null followed by getAttribute() 
PASS h1.align: IDL set to null followed by IDL get 
PASS h1.align: IDL set to object "test-toString" should not throw 
PASS h1.align: IDL set to object "test-toString" followed by getAttribute() 
PASS h1.align: IDL set to object "test-toString" followed by IDL get 
PASS h1.align: IDL set to object "test-valueOf" should not throw 
PASS h1.align: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h1.align: IDL set to object "test-valueOf" followed by IDL get 
FAIL h1.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL h1.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS h1.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to null followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to true followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to false followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL h1.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h1.itemScope: IDL set to "" should not throw 
FAIL h1.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL h1.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS h1.itemScope: IDL set to " foo " should not throw 
PASS h1.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL h1.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS h1.itemScope: IDL set to undefined should not throw 
FAIL h1.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL h1.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS h1.itemScope: IDL set to null should not throw 
FAIL h1.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL h1.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS h1.itemScope: IDL set to 7 should not throw 
PASS h1.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL h1.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS h1.itemScope: IDL set to 1.5 should not throw 
PASS h1.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL h1.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS h1.itemScope: IDL set to true should not throw 
PASS h1.itemScope: IDL set to true followed by hasAttribute() 
PASS h1.itemScope: IDL set to true followed by IDL get 
PASS h1.itemScope: IDL set to false should not throw 
FAIL h1.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS h1.itemScope: IDL set to false followed by IDL get 
PASS h1.itemScope: IDL set to object "[object Object]" should not throw 
PASS h1.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL h1.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS h1.itemScope: IDL set to NaN should not throw 
FAIL h1.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL h1.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS h1.itemScope: IDL set to Infinity should not throw 
PASS h1.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL h1.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS h1.itemScope: IDL set to -Infinity should not throw 
PASS h1.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL h1.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS h1.itemScope: IDL set to "\0" should not throw 
PASS h1.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL h1.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS h1.itemScope: IDL set to object "test-toString" should not throw 
PASS h1.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL h1.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS h1.itemScope: IDL set to object "test-valueOf" should not throw 
PASS h1.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL h1.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL h1.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL h1.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS h1.itemId: setAttribute() to "" followed by getAttribute() 
FAIL h1.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h1.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL h1.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS h1.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL h1.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS h1.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL h1.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS h1.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL h1.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h1.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL h1.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS h1.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL h1.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS h1.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL h1.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS h1.itemId: setAttribute() to true followed by getAttribute() 
FAIL h1.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS h1.itemId: setAttribute() to false followed by getAttribute() 
FAIL h1.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS h1.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL h1.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS h1.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL h1.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS h1.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL h1.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS h1.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL h1.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS h1.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL h1.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h1.itemId: setAttribute() to null followed by getAttribute() 
FAIL h1.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS h1.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL h1.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS h1.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL h1.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS h1.itemId: IDL set to "" should not throw 
FAIL h1.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL h1.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS h1.itemId: IDL set to " foo " should not throw 
FAIL h1.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL h1.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS h1.itemId: IDL set to "http://site.example/" should not throw 
FAIL h1.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS h1.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS h1.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL h1.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL h1.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS h1.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL h1.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL h1.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS h1.itemId: IDL set to undefined should not throw 
FAIL h1.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL h1.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS h1.itemId: IDL set to 7 should not throw 
FAIL h1.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL h1.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS h1.itemId: IDL set to 1.5 should not throw 
FAIL h1.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL h1.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS h1.itemId: IDL set to true should not throw 
FAIL h1.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL h1.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS h1.itemId: IDL set to false should not throw 
FAIL h1.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL h1.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS h1.itemId: IDL set to object "[object Object]" should not throw 
FAIL h1.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL h1.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS h1.itemId: IDL set to NaN should not throw 
FAIL h1.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL h1.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS h1.itemId: IDL set to Infinity should not throw 
FAIL h1.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL h1.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS h1.itemId: IDL set to -Infinity should not throw 
FAIL h1.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL h1.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS h1.itemId: IDL set to "\0" should not throw 
FAIL h1.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL h1.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS h1.itemId: IDL set to null should not throw 
FAIL h1.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL h1.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS h1.itemId: IDL set to object "test-toString" should not throw 
FAIL h1.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL h1.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS h1.itemId: IDL set to object "test-valueOf" should not throw 
PASS h1.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL h1.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS h2.title: typeof IDL attribute 
PASS h2.title: IDL get with DOM attribute unset 
PASS h2.title: setAttribute() to "" followed by getAttribute() 
PASS h2.title: setAttribute() to "" followed by IDL get 
PASS h2.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h2.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h2.title: setAttribute() to undefined followed by getAttribute() 
PASS h2.title: setAttribute() to undefined followed by IDL get 
PASS h2.title: setAttribute() to 7 followed by getAttribute() 
PASS h2.title: setAttribute() to 7 followed by IDL get 
PASS h2.title: setAttribute() to 1.5 followed by getAttribute() 
PASS h2.title: setAttribute() to 1.5 followed by IDL get 
PASS h2.title: setAttribute() to true followed by getAttribute() 
PASS h2.title: setAttribute() to true followed by IDL get 
PASS h2.title: setAttribute() to false followed by getAttribute() 
PASS h2.title: setAttribute() to false followed by IDL get 
PASS h2.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h2.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS h2.title: setAttribute() to NaN followed by getAttribute() 
PASS h2.title: setAttribute() to NaN followed by IDL get 
PASS h2.title: setAttribute() to Infinity followed by getAttribute() 
PASS h2.title: setAttribute() to Infinity followed by IDL get 
PASS h2.title: setAttribute() to -Infinity followed by getAttribute() 
PASS h2.title: setAttribute() to -Infinity followed by IDL get 
PASS h2.title: setAttribute() to "\0" followed by getAttribute() 
PASS h2.title: setAttribute() to "\0" followed by IDL get 
PASS h2.title: setAttribute() to null followed by getAttribute() 
PASS h2.title: setAttribute() to null followed by IDL get 
PASS h2.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h2.title: setAttribute() to object "test-toString" followed by IDL get 
PASS h2.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h2.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h2.title: IDL set to "" should not throw 
PASS h2.title: IDL set to "" followed by getAttribute() 
PASS h2.title: IDL set to "" followed by IDL get 
PASS h2.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h2.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h2.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h2.title: IDL set to undefined should not throw 
PASS h2.title: IDL set to undefined followed by getAttribute() 
PASS h2.title: IDL set to undefined followed by IDL get 
PASS h2.title: IDL set to 7 should not throw 
PASS h2.title: IDL set to 7 followed by getAttribute() 
PASS h2.title: IDL set to 7 followed by IDL get 
PASS h2.title: IDL set to 1.5 should not throw 
PASS h2.title: IDL set to 1.5 followed by getAttribute() 
PASS h2.title: IDL set to 1.5 followed by IDL get 
PASS h2.title: IDL set to true should not throw 
PASS h2.title: IDL set to true followed by getAttribute() 
PASS h2.title: IDL set to true followed by IDL get 
PASS h2.title: IDL set to false should not throw 
PASS h2.title: IDL set to false followed by getAttribute() 
PASS h2.title: IDL set to false followed by IDL get 
PASS h2.title: IDL set to object "[object Object]" should not throw 
PASS h2.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS h2.title: IDL set to object "[object Object]" followed by IDL get 
PASS h2.title: IDL set to NaN should not throw 
PASS h2.title: IDL set to NaN followed by getAttribute() 
PASS h2.title: IDL set to NaN followed by IDL get 
PASS h2.title: IDL set to Infinity should not throw 
PASS h2.title: IDL set to Infinity followed by getAttribute() 
PASS h2.title: IDL set to Infinity followed by IDL get 
PASS h2.title: IDL set to -Infinity should not throw 
PASS h2.title: IDL set to -Infinity followed by getAttribute() 
PASS h2.title: IDL set to -Infinity followed by IDL get 
PASS h2.title: IDL set to "\0" should not throw 
PASS h2.title: IDL set to "\0" followed by getAttribute() 
PASS h2.title: IDL set to "\0" followed by IDL get 
PASS h2.title: IDL set to null should not throw 
PASS h2.title: IDL set to null followed by getAttribute() 
PASS h2.title: IDL set to null followed by IDL get 
PASS h2.title: IDL set to object "test-toString" should not throw 
PASS h2.title: IDL set to object "test-toString" followed by getAttribute() 
PASS h2.title: IDL set to object "test-toString" followed by IDL get 
PASS h2.title: IDL set to object "test-valueOf" should not throw 
PASS h2.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h2.title: IDL set to object "test-valueOf" followed by IDL get 
PASS h2.lang: typeof IDL attribute 
PASS h2.lang: IDL get with DOM attribute unset 
PASS h2.lang: setAttribute() to "" followed by getAttribute() 
PASS h2.lang: setAttribute() to "" followed by IDL get 
PASS h2.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h2.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h2.lang: setAttribute() to undefined followed by getAttribute() 
PASS h2.lang: setAttribute() to undefined followed by IDL get 
PASS h2.lang: setAttribute() to 7 followed by getAttribute() 
PASS h2.lang: setAttribute() to 7 followed by IDL get 
PASS h2.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS h2.lang: setAttribute() to 1.5 followed by IDL get 
PASS h2.lang: setAttribute() to true followed by getAttribute() 
PASS h2.lang: setAttribute() to true followed by IDL get 
PASS h2.lang: setAttribute() to false followed by getAttribute() 
PASS h2.lang: setAttribute() to false followed by IDL get 
PASS h2.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h2.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS h2.lang: setAttribute() to NaN followed by getAttribute() 
PASS h2.lang: setAttribute() to NaN followed by IDL get 
PASS h2.lang: setAttribute() to Infinity followed by getAttribute() 
PASS h2.lang: setAttribute() to Infinity followed by IDL get 
PASS h2.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS h2.lang: setAttribute() to -Infinity followed by IDL get 
PASS h2.lang: setAttribute() to "\0" followed by getAttribute() 
PASS h2.lang: setAttribute() to "\0" followed by IDL get 
PASS h2.lang: setAttribute() to null followed by getAttribute() 
PASS h2.lang: setAttribute() to null followed by IDL get 
PASS h2.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h2.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS h2.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h2.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h2.lang: IDL set to "" should not throw 
PASS h2.lang: IDL set to "" followed by getAttribute() 
PASS h2.lang: IDL set to "" followed by IDL get 
PASS h2.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h2.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h2.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h2.lang: IDL set to undefined should not throw 
PASS h2.lang: IDL set to undefined followed by getAttribute() 
PASS h2.lang: IDL set to undefined followed by IDL get 
PASS h2.lang: IDL set to 7 should not throw 
PASS h2.lang: IDL set to 7 followed by getAttribute() 
PASS h2.lang: IDL set to 7 followed by IDL get 
PASS h2.lang: IDL set to 1.5 should not throw 
PASS h2.lang: IDL set to 1.5 followed by getAttribute() 
PASS h2.lang: IDL set to 1.5 followed by IDL get 
PASS h2.lang: IDL set to true should not throw 
PASS h2.lang: IDL set to true followed by getAttribute() 
PASS h2.lang: IDL set to true followed by IDL get 
PASS h2.lang: IDL set to false should not throw 
PASS h2.lang: IDL set to false followed by getAttribute() 
PASS h2.lang: IDL set to false followed by IDL get 
PASS h2.lang: IDL set to object "[object Object]" should not throw 
PASS h2.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS h2.lang: IDL set to object "[object Object]" followed by IDL get 
PASS h2.lang: IDL set to NaN should not throw 
PASS h2.lang: IDL set to NaN followed by getAttribute() 
PASS h2.lang: IDL set to NaN followed by IDL get 
PASS h2.lang: IDL set to Infinity should not throw 
PASS h2.lang: IDL set to Infinity followed by getAttribute() 
PASS h2.lang: IDL set to Infinity followed by IDL get 
PASS h2.lang: IDL set to -Infinity should not throw 
PASS h2.lang: IDL set to -Infinity followed by getAttribute() 
PASS h2.lang: IDL set to -Infinity followed by IDL get 
PASS h2.lang: IDL set to "\0" should not throw 
PASS h2.lang: IDL set to "\0" followed by getAttribute() 
PASS h2.lang: IDL set to "\0" followed by IDL get 
PASS h2.lang: IDL set to null should not throw 
PASS h2.lang: IDL set to null followed by getAttribute() 
PASS h2.lang: IDL set to null followed by IDL get 
PASS h2.lang: IDL set to object "test-toString" should not throw 
PASS h2.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS h2.lang: IDL set to object "test-toString" followed by IDL get 
PASS h2.lang: IDL set to object "test-valueOf" should not throw 
PASS h2.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h2.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS h2.dir: typeof IDL attribute 
PASS h2.dir: IDL get with DOM attribute unset 
PASS h2.dir: setAttribute() to "" followed by getAttribute() 
PASS h2.dir: setAttribute() to "" followed by IDL get 
PASS h2.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h2.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h2.dir: setAttribute() to undefined followed by getAttribute() 
PASS h2.dir: setAttribute() to undefined followed by IDL get 
PASS h2.dir: setAttribute() to 7 followed by getAttribute() 
PASS h2.dir: setAttribute() to 7 followed by IDL get 
PASS h2.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS h2.dir: setAttribute() to 1.5 followed by IDL get 
PASS h2.dir: setAttribute() to true followed by getAttribute() 
PASS h2.dir: setAttribute() to true followed by IDL get 
PASS h2.dir: setAttribute() to false followed by getAttribute() 
PASS h2.dir: setAttribute() to false followed by IDL get 
PASS h2.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h2.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS h2.dir: setAttribute() to NaN followed by getAttribute() 
PASS h2.dir: setAttribute() to NaN followed by IDL get 
PASS h2.dir: setAttribute() to Infinity followed by getAttribute() 
PASS h2.dir: setAttribute() to Infinity followed by IDL get 
PASS h2.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS h2.dir: setAttribute() to -Infinity followed by IDL get 
PASS h2.dir: setAttribute() to "\0" followed by getAttribute() 
PASS h2.dir: setAttribute() to "\0" followed by IDL get 
PASS h2.dir: setAttribute() to null followed by getAttribute() 
PASS h2.dir: setAttribute() to null followed by IDL get 
PASS h2.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h2.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS h2.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h2.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h2.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS h2.dir: setAttribute() to "ltr" followed by IDL get 
PASS h2.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS h2.dir: setAttribute() to "xltr" followed by IDL get 
PASS h2.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS h2.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS h2.dir: setAttribute() to "tr" followed by getAttribute() 
PASS h2.dir: setAttribute() to "tr" followed by IDL get 
PASS h2.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS h2.dir: setAttribute() to "LTR" followed by IDL get 
PASS h2.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS h2.dir: setAttribute() to "rtl" followed by IDL get 
PASS h2.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS h2.dir: setAttribute() to "xrtl" followed by IDL get 
PASS h2.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS h2.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS h2.dir: setAttribute() to "tl" followed by getAttribute() 
PASS h2.dir: setAttribute() to "tl" followed by IDL get 
PASS h2.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS h2.dir: setAttribute() to "RTL" followed by IDL get 
PASS h2.dir: setAttribute() to "auto" followed by getAttribute() 
PASS h2.dir: setAttribute() to "auto" followed by IDL get 
PASS h2.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS h2.dir: setAttribute() to "xauto" followed by IDL get 
PASS h2.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS h2.dir: setAttribute() to "auto\0" followed by IDL get 
PASS h2.dir: setAttribute() to "uto" followed by getAttribute() 
PASS h2.dir: setAttribute() to "uto" followed by IDL get 
PASS h2.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS h2.dir: setAttribute() to "AUTO" followed by IDL get 
PASS h2.dir: IDL set to "" should not throw 
PASS h2.dir: IDL set to "" followed by getAttribute() 
PASS h2.dir: IDL set to "" followed by IDL get 
PASS h2.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h2.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h2.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h2.dir: IDL set to undefined should not throw 
PASS h2.dir: IDL set to undefined followed by getAttribute() 
PASS h2.dir: IDL set to undefined followed by IDL get 
PASS h2.dir: IDL set to 7 should not throw 
PASS h2.dir: IDL set to 7 followed by getAttribute() 
PASS h2.dir: IDL set to 7 followed by IDL get 
PASS h2.dir: IDL set to 1.5 should not throw 
PASS h2.dir: IDL set to 1.5 followed by getAttribute() 
PASS h2.dir: IDL set to 1.5 followed by IDL get 
PASS h2.dir: IDL set to true should not throw 
PASS h2.dir: IDL set to true followed by getAttribute() 
PASS h2.dir: IDL set to true followed by IDL get 
PASS h2.dir: IDL set to false should not throw 
PASS h2.dir: IDL set to false followed by getAttribute() 
PASS h2.dir: IDL set to false followed by IDL get 
PASS h2.dir: IDL set to object "[object Object]" should not throw 
PASS h2.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS h2.dir: IDL set to object "[object Object]" followed by IDL get 
PASS h2.dir: IDL set to NaN should not throw 
PASS h2.dir: IDL set to NaN followed by getAttribute() 
PASS h2.dir: IDL set to NaN followed by IDL get 
PASS h2.dir: IDL set to Infinity should not throw 
PASS h2.dir: IDL set to Infinity followed by getAttribute() 
PASS h2.dir: IDL set to Infinity followed by IDL get 
PASS h2.dir: IDL set to -Infinity should not throw 
PASS h2.dir: IDL set to -Infinity followed by getAttribute() 
PASS h2.dir: IDL set to -Infinity followed by IDL get 
PASS h2.dir: IDL set to "\0" should not throw 
PASS h2.dir: IDL set to "\0" followed by getAttribute() 
PASS h2.dir: IDL set to "\0" followed by IDL get 
PASS h2.dir: IDL set to null should not throw 
PASS h2.dir: IDL set to null followed by IDL get 
PASS h2.dir: IDL set to object "test-toString" should not throw 
PASS h2.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS h2.dir: IDL set to object "test-toString" followed by IDL get 
PASS h2.dir: IDL set to object "test-valueOf" should not throw 
PASS h2.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h2.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS h2.dir: IDL set to "ltr" should not throw 
PASS h2.dir: IDL set to "ltr" followed by getAttribute() 
PASS h2.dir: IDL set to "ltr" followed by IDL get 
PASS h2.dir: IDL set to "xltr" should not throw 
PASS h2.dir: IDL set to "xltr" followed by getAttribute() 
PASS h2.dir: IDL set to "xltr" followed by IDL get 
PASS h2.dir: IDL set to "ltr\0" should not throw 
PASS h2.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS h2.dir: IDL set to "ltr\0" followed by IDL get 
PASS h2.dir: IDL set to "tr" should not throw 
PASS h2.dir: IDL set to "tr" followed by getAttribute() 
PASS h2.dir: IDL set to "tr" followed by IDL get 
PASS h2.dir: IDL set to "LTR" should not throw 
PASS h2.dir: IDL set to "LTR" followed by getAttribute() 
PASS h2.dir: IDL set to "LTR" followed by IDL get 
PASS h2.dir: IDL set to "rtl" should not throw 
PASS h2.dir: IDL set to "rtl" followed by getAttribute() 
PASS h2.dir: IDL set to "rtl" followed by IDL get 
PASS h2.dir: IDL set to "xrtl" should not throw 
PASS h2.dir: IDL set to "xrtl" followed by getAttribute() 
PASS h2.dir: IDL set to "xrtl" followed by IDL get 
PASS h2.dir: IDL set to "rtl\0" should not throw 
PASS h2.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS h2.dir: IDL set to "rtl\0" followed by IDL get 
PASS h2.dir: IDL set to "tl" should not throw 
PASS h2.dir: IDL set to "tl" followed by getAttribute() 
PASS h2.dir: IDL set to "tl" followed by IDL get 
PASS h2.dir: IDL set to "RTL" should not throw 
PASS h2.dir: IDL set to "RTL" followed by getAttribute() 
PASS h2.dir: IDL set to "RTL" followed by IDL get 
PASS h2.dir: IDL set to "auto" should not throw 
PASS h2.dir: IDL set to "auto" followed by getAttribute() 
PASS h2.dir: IDL set to "auto" followed by IDL get 
PASS h2.dir: IDL set to "xauto" should not throw 
PASS h2.dir: IDL set to "xauto" followed by getAttribute() 
PASS h2.dir: IDL set to "xauto" followed by IDL get 
PASS h2.dir: IDL set to "auto\0" should not throw 
PASS h2.dir: IDL set to "auto\0" followed by getAttribute() 
PASS h2.dir: IDL set to "auto\0" followed by IDL get 
PASS h2.dir: IDL set to "uto" should not throw 
PASS h2.dir: IDL set to "uto" followed by getAttribute() 
PASS h2.dir: IDL set to "uto" followed by IDL get 
PASS h2.dir: IDL set to "AUTO" should not throw 
PASS h2.dir: IDL set to "AUTO" followed by getAttribute() 
PASS h2.dir: IDL set to "AUTO" followed by IDL get 
PASS h2.className (<h2 class>): typeof IDL attribute 
PASS h2.className (<h2 class>): IDL get with DOM attribute unset 
PASS h2.className (<h2 class>): setAttribute() to "" followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to "" followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to undefined followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to undefined followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to 7 followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to 7 followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to 1.5 followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to 1.5 followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to true followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to true followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to false followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to false followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to NaN followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to NaN followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to Infinity followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to Infinity followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to -Infinity followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to -Infinity followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to "\0" followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to "\0" followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to null followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to null followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to object "test-toString" followed by IDL get 
PASS h2.className (<h2 class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h2.className (<h2 class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS h2.className (<h2 class>): IDL set to "" should not throw 
PASS h2.className (<h2 class>): IDL set to "" followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to "" followed by IDL get 
PASS h2.className (<h2 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h2.className (<h2 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h2.className (<h2 class>): IDL set to undefined should not throw 
PASS h2.className (<h2 class>): IDL set to undefined followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to undefined followed by IDL get 
PASS h2.className (<h2 class>): IDL set to 7 should not throw 
PASS h2.className (<h2 class>): IDL set to 7 followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to 7 followed by IDL get 
PASS h2.className (<h2 class>): IDL set to 1.5 should not throw 
PASS h2.className (<h2 class>): IDL set to 1.5 followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to 1.5 followed by IDL get 
PASS h2.className (<h2 class>): IDL set to true should not throw 
PASS h2.className (<h2 class>): IDL set to true followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to true followed by IDL get 
PASS h2.className (<h2 class>): IDL set to false should not throw 
PASS h2.className (<h2 class>): IDL set to false followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to false followed by IDL get 
PASS h2.className (<h2 class>): IDL set to object "[object Object]" should not throw 
PASS h2.className (<h2 class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to object "[object Object]" followed by IDL get 
PASS h2.className (<h2 class>): IDL set to NaN should not throw 
PASS h2.className (<h2 class>): IDL set to NaN followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to NaN followed by IDL get 
PASS h2.className (<h2 class>): IDL set to Infinity should not throw 
PASS h2.className (<h2 class>): IDL set to Infinity followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to Infinity followed by IDL get 
PASS h2.className (<h2 class>): IDL set to -Infinity should not throw 
PASS h2.className (<h2 class>): IDL set to -Infinity followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to -Infinity followed by IDL get 
PASS h2.className (<h2 class>): IDL set to "\0" should not throw 
PASS h2.className (<h2 class>): IDL set to "\0" followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to "\0" followed by IDL get 
PASS h2.className (<h2 class>): IDL set to null should not throw 
PASS h2.className (<h2 class>): IDL set to null followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to null followed by IDL get 
PASS h2.className (<h2 class>): IDL set to object "test-toString" should not throw 
PASS h2.className (<h2 class>): IDL set to object "test-toString" followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to object "test-toString" followed by IDL get 
PASS h2.className (<h2 class>): IDL set to object "test-valueOf" should not throw 
PASS h2.className (<h2 class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS h2.className (<h2 class>): IDL set to object "test-valueOf" followed by IDL get 
PASS h2.hidden: typeof IDL attribute 
PASS h2.hidden: IDL get with DOM attribute unset 
PASS h2.hidden: setAttribute() to "" followed by getAttribute() 
PASS h2.hidden: setAttribute() to "" followed by IDL get 
PASS h2.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS h2.hidden: setAttribute() to " foo " followed by IDL get 
PASS h2.hidden: setAttribute() to undefined followed by getAttribute() 
PASS h2.hidden: setAttribute() to undefined followed by IDL get 
PASS h2.hidden: setAttribute() to null followed by getAttribute() 
PASS h2.hidden: setAttribute() to null followed by IDL get 
PASS h2.hidden: setAttribute() to 7 followed by getAttribute() 
PASS h2.hidden: setAttribute() to 7 followed by IDL get 
PASS h2.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS h2.hidden: setAttribute() to 1.5 followed by IDL get 
PASS h2.hidden: setAttribute() to true followed by getAttribute() 
PASS h2.hidden: setAttribute() to true followed by IDL get 
PASS h2.hidden: setAttribute() to false followed by getAttribute() 
PASS h2.hidden: setAttribute() to false followed by IDL get 
PASS h2.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h2.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS h2.hidden: setAttribute() to NaN followed by getAttribute() 
PASS h2.hidden: setAttribute() to NaN followed by IDL get 
PASS h2.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS h2.hidden: setAttribute() to Infinity followed by IDL get 
PASS h2.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS h2.hidden: setAttribute() to -Infinity followed by IDL get 
PASS h2.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS h2.hidden: setAttribute() to "\0" followed by IDL get 
PASS h2.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h2.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS h2.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h2.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h2.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS h2.hidden: setAttribute() to "hidden" followed by IDL get 
PASS h2.hidden: IDL set to "" should not throw 
PASS h2.hidden: IDL set to "" followed by hasAttribute() 
PASS h2.hidden: IDL set to "" followed by IDL get 
PASS h2.hidden: IDL set to " foo " should not throw 
PASS h2.hidden: IDL set to " foo " followed by hasAttribute() 
PASS h2.hidden: IDL set to " foo " followed by IDL get 
PASS h2.hidden: IDL set to undefined should not throw 
PASS h2.hidden: IDL set to undefined followed by hasAttribute() 
PASS h2.hidden: IDL set to undefined followed by IDL get 
PASS h2.hidden: IDL set to null should not throw 
PASS h2.hidden: IDL set to null followed by hasAttribute() 
PASS h2.hidden: IDL set to null followed by IDL get 
PASS h2.hidden: IDL set to 7 should not throw 
PASS h2.hidden: IDL set to 7 followed by hasAttribute() 
PASS h2.hidden: IDL set to 7 followed by IDL get 
PASS h2.hidden: IDL set to 1.5 should not throw 
PASS h2.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS h2.hidden: IDL set to 1.5 followed by IDL get 
PASS h2.hidden: IDL set to true should not throw 
PASS h2.hidden: IDL set to true followed by hasAttribute() 
PASS h2.hidden: IDL set to true followed by IDL get 
PASS h2.hidden: IDL set to false should not throw 
PASS h2.hidden: IDL set to false followed by hasAttribute() 
PASS h2.hidden: IDL set to false followed by IDL get 
PASS h2.hidden: IDL set to object "[object Object]" should not throw 
PASS h2.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS h2.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS h2.hidden: IDL set to NaN should not throw 
PASS h2.hidden: IDL set to NaN followed by hasAttribute() 
PASS h2.hidden: IDL set to NaN followed by IDL get 
PASS h2.hidden: IDL set to Infinity should not throw 
PASS h2.hidden: IDL set to Infinity followed by hasAttribute() 
PASS h2.hidden: IDL set to Infinity followed by IDL get 
PASS h2.hidden: IDL set to -Infinity should not throw 
PASS h2.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS h2.hidden: IDL set to -Infinity followed by IDL get 
PASS h2.hidden: IDL set to "\0" should not throw 
PASS h2.hidden: IDL set to "\0" followed by hasAttribute() 
PASS h2.hidden: IDL set to "\0" followed by IDL get 
PASS h2.hidden: IDL set to object "test-toString" should not throw 
PASS h2.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS h2.hidden: IDL set to object "test-toString" followed by IDL get 
PASS h2.hidden: IDL set to object "test-valueOf" should not throw 
PASS h2.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS h2.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS h2.accessKey: typeof IDL attribute 
PASS h2.accessKey: IDL get with DOM attribute unset 
PASS h2.accessKey: setAttribute() to "" followed by getAttribute() 
PASS h2.accessKey: setAttribute() to "" followed by IDL get 
PASS h2.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h2.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h2.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS h2.accessKey: setAttribute() to undefined followed by IDL get 
PASS h2.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS h2.accessKey: setAttribute() to 7 followed by IDL get 
PASS h2.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS h2.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS h2.accessKey: setAttribute() to true followed by getAttribute() 
PASS h2.accessKey: setAttribute() to true followed by IDL get 
PASS h2.accessKey: setAttribute() to false followed by getAttribute() 
PASS h2.accessKey: setAttribute() to false followed by IDL get 
PASS h2.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h2.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS h2.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS h2.accessKey: setAttribute() to NaN followed by IDL get 
PASS h2.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS h2.accessKey: setAttribute() to Infinity followed by IDL get 
PASS h2.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS h2.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS h2.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS h2.accessKey: setAttribute() to "\0" followed by IDL get 
PASS h2.accessKey: setAttribute() to null followed by getAttribute() 
PASS h2.accessKey: setAttribute() to null followed by IDL get 
PASS h2.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h2.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS h2.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h2.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h2.accessKey: IDL set to "" should not throw 
PASS h2.accessKey: IDL set to "" followed by getAttribute() 
PASS h2.accessKey: IDL set to "" followed by IDL get 
PASS h2.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h2.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h2.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h2.accessKey: IDL set to undefined should not throw 
PASS h2.accessKey: IDL set to undefined followed by getAttribute() 
PASS h2.accessKey: IDL set to undefined followed by IDL get 
PASS h2.accessKey: IDL set to 7 should not throw 
PASS h2.accessKey: IDL set to 7 followed by getAttribute() 
PASS h2.accessKey: IDL set to 7 followed by IDL get 
PASS h2.accessKey: IDL set to 1.5 should not throw 
PASS h2.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS h2.accessKey: IDL set to 1.5 followed by IDL get 
PASS h2.accessKey: IDL set to true should not throw 
PASS h2.accessKey: IDL set to true followed by getAttribute() 
PASS h2.accessKey: IDL set to true followed by IDL get 
PASS h2.accessKey: IDL set to false should not throw 
PASS h2.accessKey: IDL set to false followed by getAttribute() 
PASS h2.accessKey: IDL set to false followed by IDL get 
PASS h2.accessKey: IDL set to object "[object Object]" should not throw 
PASS h2.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS h2.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS h2.accessKey: IDL set to NaN should not throw 
PASS h2.accessKey: IDL set to NaN followed by getAttribute() 
PASS h2.accessKey: IDL set to NaN followed by IDL get 
PASS h2.accessKey: IDL set to Infinity should not throw 
PASS h2.accessKey: IDL set to Infinity followed by getAttribute() 
PASS h2.accessKey: IDL set to Infinity followed by IDL get 
PASS h2.accessKey: IDL set to -Infinity should not throw 
PASS h2.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS h2.accessKey: IDL set to -Infinity followed by IDL get 
PASS h2.accessKey: IDL set to "\0" should not throw 
PASS h2.accessKey: IDL set to "\0" followed by getAttribute() 
PASS h2.accessKey: IDL set to "\0" followed by IDL get 
PASS h2.accessKey: IDL set to null should not throw 
PASS h2.accessKey: IDL set to null followed by getAttribute() 
PASS h2.accessKey: IDL set to null followed by IDL get 
PASS h2.accessKey: IDL set to object "test-toString" should not throw 
PASS h2.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS h2.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS h2.accessKey: IDL set to object "test-valueOf" should not throw 
PASS h2.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h2.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS h2.tabIndex: typeof IDL attribute 
PASS h2.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to -36 followed by IDL get 
PASS h2.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to -1 followed by IDL get 
PASS h2.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to 0 followed by IDL get 
PASS h2.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to 1 followed by IDL get 
PASS h2.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS h2.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS h2.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS h2.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS h2.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to "0" followed by IDL get 
PASS h2.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to "1" followed by IDL get 
PASS h2.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS h2.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS h2.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS h2.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS h2.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS h2.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS h2.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS h2.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS h2.tabIndex: IDL set to -36 should not throw 
PASS h2.tabIndex: IDL set to -36 followed by getAttribute() 
PASS h2.tabIndex: IDL set to -36 followed by IDL get 
PASS h2.tabIndex: IDL set to -1 should not throw 
PASS h2.tabIndex: IDL set to -1 followed by getAttribute() 
PASS h2.tabIndex: IDL set to -1 followed by IDL get 
PASS h2.tabIndex: IDL set to 0 should not throw 
PASS h2.tabIndex: IDL set to 0 followed by getAttribute() 
PASS h2.tabIndex: IDL set to 0 followed by IDL get 
PASS h2.tabIndex: IDL set to 1 should not throw 
PASS h2.tabIndex: IDL set to 1 followed by getAttribute() 
PASS h2.tabIndex: IDL set to 1 followed by IDL get 
PASS h2.tabIndex: IDL set to 2147483647 should not throw 
PASS h2.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS h2.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS h2.tabIndex: IDL set to -2147483648 should not throw 
PASS h2.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS h2.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS h2.align: typeof IDL attribute 
PASS h2.align: IDL get with DOM attribute unset 
PASS h2.align: setAttribute() to "" followed by getAttribute() 
PASS h2.align: setAttribute() to "" followed by IDL get 
PASS h2.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h2.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h2.align: setAttribute() to undefined followed by getAttribute() 
PASS h2.align: setAttribute() to undefined followed by IDL get 
PASS h2.align: setAttribute() to 7 followed by getAttribute() 
PASS h2.align: setAttribute() to 7 followed by IDL get 
PASS h2.align: setAttribute() to 1.5 followed by getAttribute() 
PASS h2.align: setAttribute() to 1.5 followed by IDL get 
PASS h2.align: setAttribute() to true followed by getAttribute() 
PASS h2.align: setAttribute() to true followed by IDL get 
PASS h2.align: setAttribute() to false followed by getAttribute() 
PASS h2.align: setAttribute() to false followed by IDL get 
PASS h2.align: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h2.align: setAttribute() to object "[object Object]" followed by IDL get 
PASS h2.align: setAttribute() to NaN followed by getAttribute() 
PASS h2.align: setAttribute() to NaN followed by IDL get 
PASS h2.align: setAttribute() to Infinity followed by getAttribute() 
PASS h2.align: setAttribute() to Infinity followed by IDL get 
PASS h2.align: setAttribute() to -Infinity followed by getAttribute() 
PASS h2.align: setAttribute() to -Infinity followed by IDL get 
PASS h2.align: setAttribute() to "\0" followed by getAttribute() 
PASS h2.align: setAttribute() to "\0" followed by IDL get 
PASS h2.align: setAttribute() to null followed by getAttribute() 
PASS h2.align: setAttribute() to null followed by IDL get 
PASS h2.align: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h2.align: setAttribute() to object "test-toString" followed by IDL get 
PASS h2.align: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h2.align: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h2.align: IDL set to "" should not throw 
PASS h2.align: IDL set to "" followed by getAttribute() 
PASS h2.align: IDL set to "" followed by IDL get 
PASS h2.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h2.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h2.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h2.align: IDL set to undefined should not throw 
PASS h2.align: IDL set to undefined followed by getAttribute() 
PASS h2.align: IDL set to undefined followed by IDL get 
PASS h2.align: IDL set to 7 should not throw 
PASS h2.align: IDL set to 7 followed by getAttribute() 
PASS h2.align: IDL set to 7 followed by IDL get 
PASS h2.align: IDL set to 1.5 should not throw 
PASS h2.align: IDL set to 1.5 followed by getAttribute() 
PASS h2.align: IDL set to 1.5 followed by IDL get 
PASS h2.align: IDL set to true should not throw 
PASS h2.align: IDL set to true followed by getAttribute() 
PASS h2.align: IDL set to true followed by IDL get 
PASS h2.align: IDL set to false should not throw 
PASS h2.align: IDL set to false followed by getAttribute() 
PASS h2.align: IDL set to false followed by IDL get 
PASS h2.align: IDL set to object "[object Object]" should not throw 
PASS h2.align: IDL set to object "[object Object]" followed by getAttribute() 
PASS h2.align: IDL set to object "[object Object]" followed by IDL get 
PASS h2.align: IDL set to NaN should not throw 
PASS h2.align: IDL set to NaN followed by getAttribute() 
PASS h2.align: IDL set to NaN followed by IDL get 
PASS h2.align: IDL set to Infinity should not throw 
PASS h2.align: IDL set to Infinity followed by getAttribute() 
PASS h2.align: IDL set to Infinity followed by IDL get 
PASS h2.align: IDL set to -Infinity should not throw 
PASS h2.align: IDL set to -Infinity followed by getAttribute() 
PASS h2.align: IDL set to -Infinity followed by IDL get 
PASS h2.align: IDL set to "\0" should not throw 
PASS h2.align: IDL set to "\0" followed by getAttribute() 
PASS h2.align: IDL set to "\0" followed by IDL get 
PASS h2.align: IDL set to null should not throw 
PASS h2.align: IDL set to null followed by getAttribute() 
PASS h2.align: IDL set to null followed by IDL get 
PASS h2.align: IDL set to object "test-toString" should not throw 
PASS h2.align: IDL set to object "test-toString" followed by getAttribute() 
PASS h2.align: IDL set to object "test-toString" followed by IDL get 
PASS h2.align: IDL set to object "test-valueOf" should not throw 
PASS h2.align: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h2.align: IDL set to object "test-valueOf" followed by IDL get 
FAIL h2.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL h2.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS h2.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to null followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to true followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to false followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL h2.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h2.itemScope: IDL set to "" should not throw 
FAIL h2.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL h2.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS h2.itemScope: IDL set to " foo " should not throw 
PASS h2.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL h2.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS h2.itemScope: IDL set to undefined should not throw 
FAIL h2.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL h2.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS h2.itemScope: IDL set to null should not throw 
FAIL h2.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL h2.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS h2.itemScope: IDL set to 7 should not throw 
PASS h2.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL h2.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS h2.itemScope: IDL set to 1.5 should not throw 
PASS h2.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL h2.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS h2.itemScope: IDL set to true should not throw 
PASS h2.itemScope: IDL set to true followed by hasAttribute() 
PASS h2.itemScope: IDL set to true followed by IDL get 
PASS h2.itemScope: IDL set to false should not throw 
FAIL h2.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS h2.itemScope: IDL set to false followed by IDL get 
PASS h2.itemScope: IDL set to object "[object Object]" should not throw 
PASS h2.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL h2.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS h2.itemScope: IDL set to NaN should not throw 
FAIL h2.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL h2.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS h2.itemScope: IDL set to Infinity should not throw 
PASS h2.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL h2.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS h2.itemScope: IDL set to -Infinity should not throw 
PASS h2.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL h2.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS h2.itemScope: IDL set to "\0" should not throw 
PASS h2.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL h2.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS h2.itemScope: IDL set to object "test-toString" should not throw 
PASS h2.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL h2.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS h2.itemScope: IDL set to object "test-valueOf" should not throw 
PASS h2.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL h2.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL h2.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL h2.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS h2.itemId: setAttribute() to "" followed by getAttribute() 
FAIL h2.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h2.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL h2.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS h2.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL h2.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS h2.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL h2.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS h2.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL h2.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h2.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL h2.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS h2.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL h2.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS h2.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL h2.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS h2.itemId: setAttribute() to true followed by getAttribute() 
FAIL h2.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS h2.itemId: setAttribute() to false followed by getAttribute() 
FAIL h2.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS h2.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL h2.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS h2.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL h2.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS h2.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL h2.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS h2.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL h2.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS h2.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL h2.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h2.itemId: setAttribute() to null followed by getAttribute() 
FAIL h2.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS h2.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL h2.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS h2.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL h2.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS h2.itemId: IDL set to "" should not throw 
FAIL h2.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL h2.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS h2.itemId: IDL set to " foo " should not throw 
FAIL h2.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL h2.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS h2.itemId: IDL set to "http://site.example/" should not throw 
FAIL h2.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS h2.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS h2.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL h2.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL h2.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS h2.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL h2.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL h2.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS h2.itemId: IDL set to undefined should not throw 
FAIL h2.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL h2.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS h2.itemId: IDL set to 7 should not throw 
FAIL h2.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL h2.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS h2.itemId: IDL set to 1.5 should not throw 
FAIL h2.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL h2.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS h2.itemId: IDL set to true should not throw 
FAIL h2.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL h2.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS h2.itemId: IDL set to false should not throw 
FAIL h2.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL h2.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS h2.itemId: IDL set to object "[object Object]" should not throw 
FAIL h2.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL h2.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS h2.itemId: IDL set to NaN should not throw 
FAIL h2.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL h2.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS h2.itemId: IDL set to Infinity should not throw 
FAIL h2.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL h2.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS h2.itemId: IDL set to -Infinity should not throw 
FAIL h2.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL h2.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS h2.itemId: IDL set to "\0" should not throw 
FAIL h2.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL h2.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS h2.itemId: IDL set to null should not throw 
FAIL h2.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL h2.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS h2.itemId: IDL set to object "test-toString" should not throw 
FAIL h2.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL h2.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS h2.itemId: IDL set to object "test-valueOf" should not throw 
PASS h2.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL h2.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS h3.title: typeof IDL attribute 
PASS h3.title: IDL get with DOM attribute unset 
PASS h3.title: setAttribute() to "" followed by getAttribute() 
PASS h3.title: setAttribute() to "" followed by IDL get 
PASS h3.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h3.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h3.title: setAttribute() to undefined followed by getAttribute() 
PASS h3.title: setAttribute() to undefined followed by IDL get 
PASS h3.title: setAttribute() to 7 followed by getAttribute() 
PASS h3.title: setAttribute() to 7 followed by IDL get 
PASS h3.title: setAttribute() to 1.5 followed by getAttribute() 
PASS h3.title: setAttribute() to 1.5 followed by IDL get 
PASS h3.title: setAttribute() to true followed by getAttribute() 
PASS h3.title: setAttribute() to true followed by IDL get 
PASS h3.title: setAttribute() to false followed by getAttribute() 
PASS h3.title: setAttribute() to false followed by IDL get 
PASS h3.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h3.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS h3.title: setAttribute() to NaN followed by getAttribute() 
PASS h3.title: setAttribute() to NaN followed by IDL get 
PASS h3.title: setAttribute() to Infinity followed by getAttribute() 
PASS h3.title: setAttribute() to Infinity followed by IDL get 
PASS h3.title: setAttribute() to -Infinity followed by getAttribute() 
PASS h3.title: setAttribute() to -Infinity followed by IDL get 
PASS h3.title: setAttribute() to "\0" followed by getAttribute() 
PASS h3.title: setAttribute() to "\0" followed by IDL get 
PASS h3.title: setAttribute() to null followed by getAttribute() 
PASS h3.title: setAttribute() to null followed by IDL get 
PASS h3.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h3.title: setAttribute() to object "test-toString" followed by IDL get 
PASS h3.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h3.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h3.title: IDL set to "" should not throw 
PASS h3.title: IDL set to "" followed by getAttribute() 
PASS h3.title: IDL set to "" followed by IDL get 
PASS h3.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h3.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h3.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h3.title: IDL set to undefined should not throw 
PASS h3.title: IDL set to undefined followed by getAttribute() 
PASS h3.title: IDL set to undefined followed by IDL get 
PASS h3.title: IDL set to 7 should not throw 
PASS h3.title: IDL set to 7 followed by getAttribute() 
PASS h3.title: IDL set to 7 followed by IDL get 
PASS h3.title: IDL set to 1.5 should not throw 
PASS h3.title: IDL set to 1.5 followed by getAttribute() 
PASS h3.title: IDL set to 1.5 followed by IDL get 
PASS h3.title: IDL set to true should not throw 
PASS h3.title: IDL set to true followed by getAttribute() 
PASS h3.title: IDL set to true followed by IDL get 
PASS h3.title: IDL set to false should not throw 
PASS h3.title: IDL set to false followed by getAttribute() 
PASS h3.title: IDL set to false followed by IDL get 
PASS h3.title: IDL set to object "[object Object]" should not throw 
PASS h3.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS h3.title: IDL set to object "[object Object]" followed by IDL get 
PASS h3.title: IDL set to NaN should not throw 
PASS h3.title: IDL set to NaN followed by getAttribute() 
PASS h3.title: IDL set to NaN followed by IDL get 
PASS h3.title: IDL set to Infinity should not throw 
PASS h3.title: IDL set to Infinity followed by getAttribute() 
PASS h3.title: IDL set to Infinity followed by IDL get 
PASS h3.title: IDL set to -Infinity should not throw 
PASS h3.title: IDL set to -Infinity followed by getAttribute() 
PASS h3.title: IDL set to -Infinity followed by IDL get 
PASS h3.title: IDL set to "\0" should not throw 
PASS h3.title: IDL set to "\0" followed by getAttribute() 
PASS h3.title: IDL set to "\0" followed by IDL get 
PASS h3.title: IDL set to null should not throw 
PASS h3.title: IDL set to null followed by getAttribute() 
PASS h3.title: IDL set to null followed by IDL get 
PASS h3.title: IDL set to object "test-toString" should not throw 
PASS h3.title: IDL set to object "test-toString" followed by getAttribute() 
PASS h3.title: IDL set to object "test-toString" followed by IDL get 
PASS h3.title: IDL set to object "test-valueOf" should not throw 
PASS h3.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h3.title: IDL set to object "test-valueOf" followed by IDL get 
PASS h3.lang: typeof IDL attribute 
PASS h3.lang: IDL get with DOM attribute unset 
PASS h3.lang: setAttribute() to "" followed by getAttribute() 
PASS h3.lang: setAttribute() to "" followed by IDL get 
PASS h3.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h3.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h3.lang: setAttribute() to undefined followed by getAttribute() 
PASS h3.lang: setAttribute() to undefined followed by IDL get 
PASS h3.lang: setAttribute() to 7 followed by getAttribute() 
PASS h3.lang: setAttribute() to 7 followed by IDL get 
PASS h3.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS h3.lang: setAttribute() to 1.5 followed by IDL get 
PASS h3.lang: setAttribute() to true followed by getAttribute() 
PASS h3.lang: setAttribute() to true followed by IDL get 
PASS h3.lang: setAttribute() to false followed by getAttribute() 
PASS h3.lang: setAttribute() to false followed by IDL get 
PASS h3.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h3.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS h3.lang: setAttribute() to NaN followed by getAttribute() 
PASS h3.lang: setAttribute() to NaN followed by IDL get 
PASS h3.lang: setAttribute() to Infinity followed by getAttribute() 
PASS h3.lang: setAttribute() to Infinity followed by IDL get 
PASS h3.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS h3.lang: setAttribute() to -Infinity followed by IDL get 
PASS h3.lang: setAttribute() to "\0" followed by getAttribute() 
PASS h3.lang: setAttribute() to "\0" followed by IDL get 
PASS h3.lang: setAttribute() to null followed by getAttribute() 
PASS h3.lang: setAttribute() to null followed by IDL get 
PASS h3.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h3.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS h3.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h3.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h3.lang: IDL set to "" should not throw 
PASS h3.lang: IDL set to "" followed by getAttribute() 
PASS h3.lang: IDL set to "" followed by IDL get 
PASS h3.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h3.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h3.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h3.lang: IDL set to undefined should not throw 
PASS h3.lang: IDL set to undefined followed by getAttribute() 
PASS h3.lang: IDL set to undefined followed by IDL get 
PASS h3.lang: IDL set to 7 should not throw 
PASS h3.lang: IDL set to 7 followed by getAttribute() 
PASS h3.lang: IDL set to 7 followed by IDL get 
PASS h3.lang: IDL set to 1.5 should not throw 
PASS h3.lang: IDL set to 1.5 followed by getAttribute() 
PASS h3.lang: IDL set to 1.5 followed by IDL get 
PASS h3.lang: IDL set to true should not throw 
PASS h3.lang: IDL set to true followed by getAttribute() 
PASS h3.lang: IDL set to true followed by IDL get 
PASS h3.lang: IDL set to false should not throw 
PASS h3.lang: IDL set to false followed by getAttribute() 
PASS h3.lang: IDL set to false followed by IDL get 
PASS h3.lang: IDL set to object "[object Object]" should not throw 
PASS h3.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS h3.lang: IDL set to object "[object Object]" followed by IDL get 
PASS h3.lang: IDL set to NaN should not throw 
PASS h3.lang: IDL set to NaN followed by getAttribute() 
PASS h3.lang: IDL set to NaN followed by IDL get 
PASS h3.lang: IDL set to Infinity should not throw 
PASS h3.lang: IDL set to Infinity followed by getAttribute() 
PASS h3.lang: IDL set to Infinity followed by IDL get 
PASS h3.lang: IDL set to -Infinity should not throw 
PASS h3.lang: IDL set to -Infinity followed by getAttribute() 
PASS h3.lang: IDL set to -Infinity followed by IDL get 
PASS h3.lang: IDL set to "\0" should not throw 
PASS h3.lang: IDL set to "\0" followed by getAttribute() 
PASS h3.lang: IDL set to "\0" followed by IDL get 
PASS h3.lang: IDL set to null should not throw 
PASS h3.lang: IDL set to null followed by getAttribute() 
PASS h3.lang: IDL set to null followed by IDL get 
PASS h3.lang: IDL set to object "test-toString" should not throw 
PASS h3.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS h3.lang: IDL set to object "test-toString" followed by IDL get 
PASS h3.lang: IDL set to object "test-valueOf" should not throw 
PASS h3.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h3.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS h3.dir: typeof IDL attribute 
PASS h3.dir: IDL get with DOM attribute unset 
PASS h3.dir: setAttribute() to "" followed by getAttribute() 
PASS h3.dir: setAttribute() to "" followed by IDL get 
PASS h3.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h3.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h3.dir: setAttribute() to undefined followed by getAttribute() 
PASS h3.dir: setAttribute() to undefined followed by IDL get 
PASS h3.dir: setAttribute() to 7 followed by getAttribute() 
PASS h3.dir: setAttribute() to 7 followed by IDL get 
PASS h3.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS h3.dir: setAttribute() to 1.5 followed by IDL get 
PASS h3.dir: setAttribute() to true followed by getAttribute() 
PASS h3.dir: setAttribute() to true followed by IDL get 
PASS h3.dir: setAttribute() to false followed by getAttribute() 
PASS h3.dir: setAttribute() to false followed by IDL get 
PASS h3.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h3.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS h3.dir: setAttribute() to NaN followed by getAttribute() 
PASS h3.dir: setAttribute() to NaN followed by IDL get 
PASS h3.dir: setAttribute() to Infinity followed by getAttribute() 
PASS h3.dir: setAttribute() to Infinity followed by IDL get 
PASS h3.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS h3.dir: setAttribute() to -Infinity followed by IDL get 
PASS h3.dir: setAttribute() to "\0" followed by getAttribute() 
PASS h3.dir: setAttribute() to "\0" followed by IDL get 
PASS h3.dir: setAttribute() to null followed by getAttribute() 
PASS h3.dir: setAttribute() to null followed by IDL get 
PASS h3.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h3.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS h3.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h3.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h3.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS h3.dir: setAttribute() to "ltr" followed by IDL get 
PASS h3.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS h3.dir: setAttribute() to "xltr" followed by IDL get 
PASS h3.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS h3.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS h3.dir: setAttribute() to "tr" followed by getAttribute() 
PASS h3.dir: setAttribute() to "tr" followed by IDL get 
PASS h3.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS h3.dir: setAttribute() to "LTR" followed by IDL get 
PASS h3.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS h3.dir: setAttribute() to "rtl" followed by IDL get 
PASS h3.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS h3.dir: setAttribute() to "xrtl" followed by IDL get 
PASS h3.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS h3.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS h3.dir: setAttribute() to "tl" followed by getAttribute() 
PASS h3.dir: setAttribute() to "tl" followed by IDL get 
PASS h3.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS h3.dir: setAttribute() to "RTL" followed by IDL get 
PASS h3.dir: setAttribute() to "auto" followed by getAttribute() 
PASS h3.dir: setAttribute() to "auto" followed by IDL get 
PASS h3.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS h3.dir: setAttribute() to "xauto" followed by IDL get 
PASS h3.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS h3.dir: setAttribute() to "auto\0" followed by IDL get 
PASS h3.dir: setAttribute() to "uto" followed by getAttribute() 
PASS h3.dir: setAttribute() to "uto" followed by IDL get 
PASS h3.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS h3.dir: setAttribute() to "AUTO" followed by IDL get 
PASS h3.dir: IDL set to "" should not throw 
PASS h3.dir: IDL set to "" followed by getAttribute() 
PASS h3.dir: IDL set to "" followed by IDL get 
PASS h3.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h3.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h3.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h3.dir: IDL set to undefined should not throw 
PASS h3.dir: IDL set to undefined followed by getAttribute() 
PASS h3.dir: IDL set to undefined followed by IDL get 
PASS h3.dir: IDL set to 7 should not throw 
PASS h3.dir: IDL set to 7 followed by getAttribute() 
PASS h3.dir: IDL set to 7 followed by IDL get 
PASS h3.dir: IDL set to 1.5 should not throw 
PASS h3.dir: IDL set to 1.5 followed by getAttribute() 
PASS h3.dir: IDL set to 1.5 followed by IDL get 
PASS h3.dir: IDL set to true should not throw 
PASS h3.dir: IDL set to true followed by getAttribute() 
PASS h3.dir: IDL set to true followed by IDL get 
PASS h3.dir: IDL set to false should not throw 
PASS h3.dir: IDL set to false followed by getAttribute() 
PASS h3.dir: IDL set to false followed by IDL get 
PASS h3.dir: IDL set to object "[object Object]" should not throw 
PASS h3.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS h3.dir: IDL set to object "[object Object]" followed by IDL get 
PASS h3.dir: IDL set to NaN should not throw 
PASS h3.dir: IDL set to NaN followed by getAttribute() 
PASS h3.dir: IDL set to NaN followed by IDL get 
PASS h3.dir: IDL set to Infinity should not throw 
PASS h3.dir: IDL set to Infinity followed by getAttribute() 
PASS h3.dir: IDL set to Infinity followed by IDL get 
PASS h3.dir: IDL set to -Infinity should not throw 
PASS h3.dir: IDL set to -Infinity followed by getAttribute() 
PASS h3.dir: IDL set to -Infinity followed by IDL get 
PASS h3.dir: IDL set to "\0" should not throw 
PASS h3.dir: IDL set to "\0" followed by getAttribute() 
PASS h3.dir: IDL set to "\0" followed by IDL get 
PASS h3.dir: IDL set to null should not throw 
PASS h3.dir: IDL set to null followed by IDL get 
PASS h3.dir: IDL set to object "test-toString" should not throw 
PASS h3.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS h3.dir: IDL set to object "test-toString" followed by IDL get 
PASS h3.dir: IDL set to object "test-valueOf" should not throw 
PASS h3.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h3.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS h3.dir: IDL set to "ltr" should not throw 
PASS h3.dir: IDL set to "ltr" followed by getAttribute() 
PASS h3.dir: IDL set to "ltr" followed by IDL get 
PASS h3.dir: IDL set to "xltr" should not throw 
PASS h3.dir: IDL set to "xltr" followed by getAttribute() 
PASS h3.dir: IDL set to "xltr" followed by IDL get 
PASS h3.dir: IDL set to "ltr\0" should not throw 
PASS h3.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS h3.dir: IDL set to "ltr\0" followed by IDL get 
PASS h3.dir: IDL set to "tr" should not throw 
PASS h3.dir: IDL set to "tr" followed by getAttribute() 
PASS h3.dir: IDL set to "tr" followed by IDL get 
PASS h3.dir: IDL set to "LTR" should not throw 
PASS h3.dir: IDL set to "LTR" followed by getAttribute() 
PASS h3.dir: IDL set to "LTR" followed by IDL get 
PASS h3.dir: IDL set to "rtl" should not throw 
PASS h3.dir: IDL set to "rtl" followed by getAttribute() 
PASS h3.dir: IDL set to "rtl" followed by IDL get 
PASS h3.dir: IDL set to "xrtl" should not throw 
PASS h3.dir: IDL set to "xrtl" followed by getAttribute() 
PASS h3.dir: IDL set to "xrtl" followed by IDL get 
PASS h3.dir: IDL set to "rtl\0" should not throw 
PASS h3.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS h3.dir: IDL set to "rtl\0" followed by IDL get 
PASS h3.dir: IDL set to "tl" should not throw 
PASS h3.dir: IDL set to "tl" followed by getAttribute() 
PASS h3.dir: IDL set to "tl" followed by IDL get 
PASS h3.dir: IDL set to "RTL" should not throw 
PASS h3.dir: IDL set to "RTL" followed by getAttribute() 
PASS h3.dir: IDL set to "RTL" followed by IDL get 
PASS h3.dir: IDL set to "auto" should not throw 
PASS h3.dir: IDL set to "auto" followed by getAttribute() 
PASS h3.dir: IDL set to "auto" followed by IDL get 
PASS h3.dir: IDL set to "xauto" should not throw 
PASS h3.dir: IDL set to "xauto" followed by getAttribute() 
PASS h3.dir: IDL set to "xauto" followed by IDL get 
PASS h3.dir: IDL set to "auto\0" should not throw 
PASS h3.dir: IDL set to "auto\0" followed by getAttribute() 
PASS h3.dir: IDL set to "auto\0" followed by IDL get 
PASS h3.dir: IDL set to "uto" should not throw 
PASS h3.dir: IDL set to "uto" followed by getAttribute() 
PASS h3.dir: IDL set to "uto" followed by IDL get 
PASS h3.dir: IDL set to "AUTO" should not throw 
PASS h3.dir: IDL set to "AUTO" followed by getAttribute() 
PASS h3.dir: IDL set to "AUTO" followed by IDL get 
PASS h3.className (<h3 class>): typeof IDL attribute 
PASS h3.className (<h3 class>): IDL get with DOM attribute unset 
PASS h3.className (<h3 class>): setAttribute() to "" followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to "" followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to undefined followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to undefined followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to 7 followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to 7 followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to 1.5 followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to 1.5 followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to true followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to true followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to false followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to false followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to NaN followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to NaN followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to Infinity followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to Infinity followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to -Infinity followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to -Infinity followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to "\0" followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to "\0" followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to null followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to null followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to object "test-toString" followed by IDL get 
PASS h3.className (<h3 class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h3.className (<h3 class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS h3.className (<h3 class>): IDL set to "" should not throw 
PASS h3.className (<h3 class>): IDL set to "" followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to "" followed by IDL get 
PASS h3.className (<h3 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h3.className (<h3 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h3.className (<h3 class>): IDL set to undefined should not throw 
PASS h3.className (<h3 class>): IDL set to undefined followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to undefined followed by IDL get 
PASS h3.className (<h3 class>): IDL set to 7 should not throw 
PASS h3.className (<h3 class>): IDL set to 7 followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to 7 followed by IDL get 
PASS h3.className (<h3 class>): IDL set to 1.5 should not throw 
PASS h3.className (<h3 class>): IDL set to 1.5 followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to 1.5 followed by IDL get 
PASS h3.className (<h3 class>): IDL set to true should not throw 
PASS h3.className (<h3 class>): IDL set to true followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to true followed by IDL get 
PASS h3.className (<h3 class>): IDL set to false should not throw 
PASS h3.className (<h3 class>): IDL set to false followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to false followed by IDL get 
PASS h3.className (<h3 class>): IDL set to object "[object Object]" should not throw 
PASS h3.className (<h3 class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to object "[object Object]" followed by IDL get 
PASS h3.className (<h3 class>): IDL set to NaN should not throw 
PASS h3.className (<h3 class>): IDL set to NaN followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to NaN followed by IDL get 
PASS h3.className (<h3 class>): IDL set to Infinity should not throw 
PASS h3.className (<h3 class>): IDL set to Infinity followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to Infinity followed by IDL get 
PASS h3.className (<h3 class>): IDL set to -Infinity should not throw 
PASS h3.className (<h3 class>): IDL set to -Infinity followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to -Infinity followed by IDL get 
PASS h3.className (<h3 class>): IDL set to "\0" should not throw 
PASS h3.className (<h3 class>): IDL set to "\0" followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to "\0" followed by IDL get 
PASS h3.className (<h3 class>): IDL set to null should not throw 
PASS h3.className (<h3 class>): IDL set to null followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to null followed by IDL get 
PASS h3.className (<h3 class>): IDL set to object "test-toString" should not throw 
PASS h3.className (<h3 class>): IDL set to object "test-toString" followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to object "test-toString" followed by IDL get 
PASS h3.className (<h3 class>): IDL set to object "test-valueOf" should not throw 
PASS h3.className (<h3 class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS h3.className (<h3 class>): IDL set to object "test-valueOf" followed by IDL get 
PASS h3.hidden: typeof IDL attribute 
PASS h3.hidden: IDL get with DOM attribute unset 
PASS h3.hidden: setAttribute() to "" followed by getAttribute() 
PASS h3.hidden: setAttribute() to "" followed by IDL get 
PASS h3.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS h3.hidden: setAttribute() to " foo " followed by IDL get 
PASS h3.hidden: setAttribute() to undefined followed by getAttribute() 
PASS h3.hidden: setAttribute() to undefined followed by IDL get 
PASS h3.hidden: setAttribute() to null followed by getAttribute() 
PASS h3.hidden: setAttribute() to null followed by IDL get 
PASS h3.hidden: setAttribute() to 7 followed by getAttribute() 
PASS h3.hidden: setAttribute() to 7 followed by IDL get 
PASS h3.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS h3.hidden: setAttribute() to 1.5 followed by IDL get 
PASS h3.hidden: setAttribute() to true followed by getAttribute() 
PASS h3.hidden: setAttribute() to true followed by IDL get 
PASS h3.hidden: setAttribute() to false followed by getAttribute() 
PASS h3.hidden: setAttribute() to false followed by IDL get 
PASS h3.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h3.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS h3.hidden: setAttribute() to NaN followed by getAttribute() 
PASS h3.hidden: setAttribute() to NaN followed by IDL get 
PASS h3.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS h3.hidden: setAttribute() to Infinity followed by IDL get 
PASS h3.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS h3.hidden: setAttribute() to -Infinity followed by IDL get 
PASS h3.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS h3.hidden: setAttribute() to "\0" followed by IDL get 
PASS h3.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h3.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS h3.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h3.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h3.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS h3.hidden: setAttribute() to "hidden" followed by IDL get 
PASS h3.hidden: IDL set to "" should not throw 
PASS h3.hidden: IDL set to "" followed by hasAttribute() 
PASS h3.hidden: IDL set to "" followed by IDL get 
PASS h3.hidden: IDL set to " foo " should not throw 
PASS h3.hidden: IDL set to " foo " followed by hasAttribute() 
PASS h3.hidden: IDL set to " foo " followed by IDL get 
PASS h3.hidden: IDL set to undefined should not throw 
PASS h3.hidden: IDL set to undefined followed by hasAttribute() 
PASS h3.hidden: IDL set to undefined followed by IDL get 
PASS h3.hidden: IDL set to null should not throw 
PASS h3.hidden: IDL set to null followed by hasAttribute() 
PASS h3.hidden: IDL set to null followed by IDL get 
PASS h3.hidden: IDL set to 7 should not throw 
PASS h3.hidden: IDL set to 7 followed by hasAttribute() 
PASS h3.hidden: IDL set to 7 followed by IDL get 
PASS h3.hidden: IDL set to 1.5 should not throw 
PASS h3.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS h3.hidden: IDL set to 1.5 followed by IDL get 
PASS h3.hidden: IDL set to true should not throw 
PASS h3.hidden: IDL set to true followed by hasAttribute() 
PASS h3.hidden: IDL set to true followed by IDL get 
PASS h3.hidden: IDL set to false should not throw 
PASS h3.hidden: IDL set to false followed by hasAttribute() 
PASS h3.hidden: IDL set to false followed by IDL get 
PASS h3.hidden: IDL set to object "[object Object]" should not throw 
PASS h3.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS h3.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS h3.hidden: IDL set to NaN should not throw 
PASS h3.hidden: IDL set to NaN followed by hasAttribute() 
PASS h3.hidden: IDL set to NaN followed by IDL get 
PASS h3.hidden: IDL set to Infinity should not throw 
PASS h3.hidden: IDL set to Infinity followed by hasAttribute() 
PASS h3.hidden: IDL set to Infinity followed by IDL get 
PASS h3.hidden: IDL set to -Infinity should not throw 
PASS h3.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS h3.hidden: IDL set to -Infinity followed by IDL get 
PASS h3.hidden: IDL set to "\0" should not throw 
PASS h3.hidden: IDL set to "\0" followed by hasAttribute() 
PASS h3.hidden: IDL set to "\0" followed by IDL get 
PASS h3.hidden: IDL set to object "test-toString" should not throw 
PASS h3.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS h3.hidden: IDL set to object "test-toString" followed by IDL get 
PASS h3.hidden: IDL set to object "test-valueOf" should not throw 
PASS h3.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS h3.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS h3.accessKey: typeof IDL attribute 
PASS h3.accessKey: IDL get with DOM attribute unset 
PASS h3.accessKey: setAttribute() to "" followed by getAttribute() 
PASS h3.accessKey: setAttribute() to "" followed by IDL get 
PASS h3.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h3.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h3.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS h3.accessKey: setAttribute() to undefined followed by IDL get 
PASS h3.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS h3.accessKey: setAttribute() to 7 followed by IDL get 
PASS h3.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS h3.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS h3.accessKey: setAttribute() to true followed by getAttribute() 
PASS h3.accessKey: setAttribute() to true followed by IDL get 
PASS h3.accessKey: setAttribute() to false followed by getAttribute() 
PASS h3.accessKey: setAttribute() to false followed by IDL get 
PASS h3.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h3.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS h3.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS h3.accessKey: setAttribute() to NaN followed by IDL get 
PASS h3.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS h3.accessKey: setAttribute() to Infinity followed by IDL get 
PASS h3.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS h3.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS h3.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS h3.accessKey: setAttribute() to "\0" followed by IDL get 
PASS h3.accessKey: setAttribute() to null followed by getAttribute() 
PASS h3.accessKey: setAttribute() to null followed by IDL get 
PASS h3.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h3.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS h3.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h3.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h3.accessKey: IDL set to "" should not throw 
PASS h3.accessKey: IDL set to "" followed by getAttribute() 
PASS h3.accessKey: IDL set to "" followed by IDL get 
PASS h3.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h3.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h3.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h3.accessKey: IDL set to undefined should not throw 
PASS h3.accessKey: IDL set to undefined followed by getAttribute() 
PASS h3.accessKey: IDL set to undefined followed by IDL get 
PASS h3.accessKey: IDL set to 7 should not throw 
PASS h3.accessKey: IDL set to 7 followed by getAttribute() 
PASS h3.accessKey: IDL set to 7 followed by IDL get 
PASS h3.accessKey: IDL set to 1.5 should not throw 
PASS h3.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS h3.accessKey: IDL set to 1.5 followed by IDL get 
PASS h3.accessKey: IDL set to true should not throw 
PASS h3.accessKey: IDL set to true followed by getAttribute() 
PASS h3.accessKey: IDL set to true followed by IDL get 
PASS h3.accessKey: IDL set to false should not throw 
PASS h3.accessKey: IDL set to false followed by getAttribute() 
PASS h3.accessKey: IDL set to false followed by IDL get 
PASS h3.accessKey: IDL set to object "[object Object]" should not throw 
PASS h3.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS h3.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS h3.accessKey: IDL set to NaN should not throw 
PASS h3.accessKey: IDL set to NaN followed by getAttribute() 
PASS h3.accessKey: IDL set to NaN followed by IDL get 
PASS h3.accessKey: IDL set to Infinity should not throw 
PASS h3.accessKey: IDL set to Infinity followed by getAttribute() 
PASS h3.accessKey: IDL set to Infinity followed by IDL get 
PASS h3.accessKey: IDL set to -Infinity should not throw 
PASS h3.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS h3.accessKey: IDL set to -Infinity followed by IDL get 
PASS h3.accessKey: IDL set to "\0" should not throw 
PASS h3.accessKey: IDL set to "\0" followed by getAttribute() 
PASS h3.accessKey: IDL set to "\0" followed by IDL get 
PASS h3.accessKey: IDL set to null should not throw 
PASS h3.accessKey: IDL set to null followed by getAttribute() 
PASS h3.accessKey: IDL set to null followed by IDL get 
PASS h3.accessKey: IDL set to object "test-toString" should not throw 
PASS h3.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS h3.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS h3.accessKey: IDL set to object "test-valueOf" should not throw 
PASS h3.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h3.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS h3.tabIndex: typeof IDL attribute 
PASS h3.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to -36 followed by IDL get 
PASS h3.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to -1 followed by IDL get 
PASS h3.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to 0 followed by IDL get 
PASS h3.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to 1 followed by IDL get 
PASS h3.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS h3.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS h3.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS h3.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS h3.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to "0" followed by IDL get 
PASS h3.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to "1" followed by IDL get 
PASS h3.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS h3.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS h3.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS h3.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS h3.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS h3.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS h3.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS h3.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS h3.tabIndex: IDL set to -36 should not throw 
PASS h3.tabIndex: IDL set to -36 followed by getAttribute() 
PASS h3.tabIndex: IDL set to -36 followed by IDL get 
PASS h3.tabIndex: IDL set to -1 should not throw 
PASS h3.tabIndex: IDL set to -1 followed by getAttribute() 
PASS h3.tabIndex: IDL set to -1 followed by IDL get 
PASS h3.tabIndex: IDL set to 0 should not throw 
PASS h3.tabIndex: IDL set to 0 followed by getAttribute() 
PASS h3.tabIndex: IDL set to 0 followed by IDL get 
PASS h3.tabIndex: IDL set to 1 should not throw 
PASS h3.tabIndex: IDL set to 1 followed by getAttribute() 
PASS h3.tabIndex: IDL set to 1 followed by IDL get 
PASS h3.tabIndex: IDL set to 2147483647 should not throw 
PASS h3.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS h3.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS h3.tabIndex: IDL set to -2147483648 should not throw 
PASS h3.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS h3.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS h3.align: typeof IDL attribute 
PASS h3.align: IDL get with DOM attribute unset 
PASS h3.align: setAttribute() to "" followed by getAttribute() 
PASS h3.align: setAttribute() to "" followed by IDL get 
PASS h3.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h3.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h3.align: setAttribute() to undefined followed by getAttribute() 
PASS h3.align: setAttribute() to undefined followed by IDL get 
PASS h3.align: setAttribute() to 7 followed by getAttribute() 
PASS h3.align: setAttribute() to 7 followed by IDL get 
PASS h3.align: setAttribute() to 1.5 followed by getAttribute() 
PASS h3.align: setAttribute() to 1.5 followed by IDL get 
PASS h3.align: setAttribute() to true followed by getAttribute() 
PASS h3.align: setAttribute() to true followed by IDL get 
PASS h3.align: setAttribute() to false followed by getAttribute() 
PASS h3.align: setAttribute() to false followed by IDL get 
PASS h3.align: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h3.align: setAttribute() to object "[object Object]" followed by IDL get 
PASS h3.align: setAttribute() to NaN followed by getAttribute() 
PASS h3.align: setAttribute() to NaN followed by IDL get 
PASS h3.align: setAttribute() to Infinity followed by getAttribute() 
PASS h3.align: setAttribute() to Infinity followed by IDL get 
PASS h3.align: setAttribute() to -Infinity followed by getAttribute() 
PASS h3.align: setAttribute() to -Infinity followed by IDL get 
PASS h3.align: setAttribute() to "\0" followed by getAttribute() 
PASS h3.align: setAttribute() to "\0" followed by IDL get 
PASS h3.align: setAttribute() to null followed by getAttribute() 
PASS h3.align: setAttribute() to null followed by IDL get 
PASS h3.align: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h3.align: setAttribute() to object "test-toString" followed by IDL get 
PASS h3.align: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h3.align: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h3.align: IDL set to "" should not throw 
PASS h3.align: IDL set to "" followed by getAttribute() 
PASS h3.align: IDL set to "" followed by IDL get 
PASS h3.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h3.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h3.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h3.align: IDL set to undefined should not throw 
PASS h3.align: IDL set to undefined followed by getAttribute() 
PASS h3.align: IDL set to undefined followed by IDL get 
PASS h3.align: IDL set to 7 should not throw 
PASS h3.align: IDL set to 7 followed by getAttribute() 
PASS h3.align: IDL set to 7 followed by IDL get 
PASS h3.align: IDL set to 1.5 should not throw 
PASS h3.align: IDL set to 1.5 followed by getAttribute() 
PASS h3.align: IDL set to 1.5 followed by IDL get 
PASS h3.align: IDL set to true should not throw 
PASS h3.align: IDL set to true followed by getAttribute() 
PASS h3.align: IDL set to true followed by IDL get 
PASS h3.align: IDL set to false should not throw 
PASS h3.align: IDL set to false followed by getAttribute() 
PASS h3.align: IDL set to false followed by IDL get 
PASS h3.align: IDL set to object "[object Object]" should not throw 
PASS h3.align: IDL set to object "[object Object]" followed by getAttribute() 
PASS h3.align: IDL set to object "[object Object]" followed by IDL get 
PASS h3.align: IDL set to NaN should not throw 
PASS h3.align: IDL set to NaN followed by getAttribute() 
PASS h3.align: IDL set to NaN followed by IDL get 
PASS h3.align: IDL set to Infinity should not throw 
PASS h3.align: IDL set to Infinity followed by getAttribute() 
PASS h3.align: IDL set to Infinity followed by IDL get 
PASS h3.align: IDL set to -Infinity should not throw 
PASS h3.align: IDL set to -Infinity followed by getAttribute() 
PASS h3.align: IDL set to -Infinity followed by IDL get 
PASS h3.align: IDL set to "\0" should not throw 
PASS h3.align: IDL set to "\0" followed by getAttribute() 
PASS h3.align: IDL set to "\0" followed by IDL get 
PASS h3.align: IDL set to null should not throw 
PASS h3.align: IDL set to null followed by getAttribute() 
PASS h3.align: IDL set to null followed by IDL get 
PASS h3.align: IDL set to object "test-toString" should not throw 
PASS h3.align: IDL set to object "test-toString" followed by getAttribute() 
PASS h3.align: IDL set to object "test-toString" followed by IDL get 
PASS h3.align: IDL set to object "test-valueOf" should not throw 
PASS h3.align: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h3.align: IDL set to object "test-valueOf" followed by IDL get 
FAIL h3.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL h3.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS h3.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to null followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to true followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to false followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL h3.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h3.itemScope: IDL set to "" should not throw 
FAIL h3.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL h3.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS h3.itemScope: IDL set to " foo " should not throw 
PASS h3.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL h3.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS h3.itemScope: IDL set to undefined should not throw 
FAIL h3.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL h3.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS h3.itemScope: IDL set to null should not throw 
FAIL h3.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL h3.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS h3.itemScope: IDL set to 7 should not throw 
PASS h3.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL h3.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS h3.itemScope: IDL set to 1.5 should not throw 
PASS h3.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL h3.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS h3.itemScope: IDL set to true should not throw 
PASS h3.itemScope: IDL set to true followed by hasAttribute() 
PASS h3.itemScope: IDL set to true followed by IDL get 
PASS h3.itemScope: IDL set to false should not throw 
FAIL h3.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS h3.itemScope: IDL set to false followed by IDL get 
PASS h3.itemScope: IDL set to object "[object Object]" should not throw 
PASS h3.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL h3.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS h3.itemScope: IDL set to NaN should not throw 
FAIL h3.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL h3.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS h3.itemScope: IDL set to Infinity should not throw 
PASS h3.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL h3.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS h3.itemScope: IDL set to -Infinity should not throw 
PASS h3.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL h3.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS h3.itemScope: IDL set to "\0" should not throw 
PASS h3.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL h3.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS h3.itemScope: IDL set to object "test-toString" should not throw 
PASS h3.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL h3.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS h3.itemScope: IDL set to object "test-valueOf" should not throw 
PASS h3.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL h3.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL h3.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL h3.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS h3.itemId: setAttribute() to "" followed by getAttribute() 
FAIL h3.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h3.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL h3.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS h3.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL h3.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS h3.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL h3.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS h3.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL h3.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h3.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL h3.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS h3.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL h3.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS h3.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL h3.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS h3.itemId: setAttribute() to true followed by getAttribute() 
FAIL h3.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS h3.itemId: setAttribute() to false followed by getAttribute() 
FAIL h3.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS h3.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL h3.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS h3.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL h3.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS h3.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL h3.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS h3.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL h3.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS h3.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL h3.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h3.itemId: setAttribute() to null followed by getAttribute() 
FAIL h3.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS h3.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL h3.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS h3.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL h3.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS h3.itemId: IDL set to "" should not throw 
FAIL h3.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL h3.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS h3.itemId: IDL set to " foo " should not throw 
FAIL h3.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL h3.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS h3.itemId: IDL set to "http://site.example/" should not throw 
FAIL h3.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS h3.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS h3.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL h3.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL h3.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS h3.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL h3.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL h3.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS h3.itemId: IDL set to undefined should not throw 
FAIL h3.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL h3.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS h3.itemId: IDL set to 7 should not throw 
FAIL h3.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL h3.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS h3.itemId: IDL set to 1.5 should not throw 
FAIL h3.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL h3.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS h3.itemId: IDL set to true should not throw 
FAIL h3.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL h3.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS h3.itemId: IDL set to false should not throw 
FAIL h3.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL h3.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS h3.itemId: IDL set to object "[object Object]" should not throw 
FAIL h3.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL h3.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS h3.itemId: IDL set to NaN should not throw 
FAIL h3.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL h3.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS h3.itemId: IDL set to Infinity should not throw 
FAIL h3.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL h3.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS h3.itemId: IDL set to -Infinity should not throw 
FAIL h3.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL h3.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS h3.itemId: IDL set to "\0" should not throw 
FAIL h3.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL h3.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS h3.itemId: IDL set to null should not throw 
FAIL h3.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL h3.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS h3.itemId: IDL set to object "test-toString" should not throw 
FAIL h3.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL h3.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS h3.itemId: IDL set to object "test-valueOf" should not throw 
PASS h3.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL h3.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS h4.title: typeof IDL attribute 
PASS h4.title: IDL get with DOM attribute unset 
PASS h4.title: setAttribute() to "" followed by getAttribute() 
PASS h4.title: setAttribute() to "" followed by IDL get 
PASS h4.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h4.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h4.title: setAttribute() to undefined followed by getAttribute() 
PASS h4.title: setAttribute() to undefined followed by IDL get 
PASS h4.title: setAttribute() to 7 followed by getAttribute() 
PASS h4.title: setAttribute() to 7 followed by IDL get 
PASS h4.title: setAttribute() to 1.5 followed by getAttribute() 
PASS h4.title: setAttribute() to 1.5 followed by IDL get 
PASS h4.title: setAttribute() to true followed by getAttribute() 
PASS h4.title: setAttribute() to true followed by IDL get 
PASS h4.title: setAttribute() to false followed by getAttribute() 
PASS h4.title: setAttribute() to false followed by IDL get 
PASS h4.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h4.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS h4.title: setAttribute() to NaN followed by getAttribute() 
PASS h4.title: setAttribute() to NaN followed by IDL get 
PASS h4.title: setAttribute() to Infinity followed by getAttribute() 
PASS h4.title: setAttribute() to Infinity followed by IDL get 
PASS h4.title: setAttribute() to -Infinity followed by getAttribute() 
PASS h4.title: setAttribute() to -Infinity followed by IDL get 
PASS h4.title: setAttribute() to "\0" followed by getAttribute() 
PASS h4.title: setAttribute() to "\0" followed by IDL get 
PASS h4.title: setAttribute() to null followed by getAttribute() 
PASS h4.title: setAttribute() to null followed by IDL get 
PASS h4.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h4.title: setAttribute() to object "test-toString" followed by IDL get 
PASS h4.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h4.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h4.title: IDL set to "" should not throw 
PASS h4.title: IDL set to "" followed by getAttribute() 
PASS h4.title: IDL set to "" followed by IDL get 
PASS h4.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h4.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h4.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h4.title: IDL set to undefined should not throw 
PASS h4.title: IDL set to undefined followed by getAttribute() 
PASS h4.title: IDL set to undefined followed by IDL get 
PASS h4.title: IDL set to 7 should not throw 
PASS h4.title: IDL set to 7 followed by getAttribute() 
PASS h4.title: IDL set to 7 followed by IDL get 
PASS h4.title: IDL set to 1.5 should not throw 
PASS h4.title: IDL set to 1.5 followed by getAttribute() 
PASS h4.title: IDL set to 1.5 followed by IDL get 
PASS h4.title: IDL set to true should not throw 
PASS h4.title: IDL set to true followed by getAttribute() 
PASS h4.title: IDL set to true followed by IDL get 
PASS h4.title: IDL set to false should not throw 
PASS h4.title: IDL set to false followed by getAttribute() 
PASS h4.title: IDL set to false followed by IDL get 
PASS h4.title: IDL set to object "[object Object]" should not throw 
PASS h4.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS h4.title: IDL set to object "[object Object]" followed by IDL get 
PASS h4.title: IDL set to NaN should not throw 
PASS h4.title: IDL set to NaN followed by getAttribute() 
PASS h4.title: IDL set to NaN followed by IDL get 
PASS h4.title: IDL set to Infinity should not throw 
PASS h4.title: IDL set to Infinity followed by getAttribute() 
PASS h4.title: IDL set to Infinity followed by IDL get 
PASS h4.title: IDL set to -Infinity should not throw 
PASS h4.title: IDL set to -Infinity followed by getAttribute() 
PASS h4.title: IDL set to -Infinity followed by IDL get 
PASS h4.title: IDL set to "\0" should not throw 
PASS h4.title: IDL set to "\0" followed by getAttribute() 
PASS h4.title: IDL set to "\0" followed by IDL get 
PASS h4.title: IDL set to null should not throw 
PASS h4.title: IDL set to null followed by getAttribute() 
PASS h4.title: IDL set to null followed by IDL get 
PASS h4.title: IDL set to object "test-toString" should not throw 
PASS h4.title: IDL set to object "test-toString" followed by getAttribute() 
PASS h4.title: IDL set to object "test-toString" followed by IDL get 
PASS h4.title: IDL set to object "test-valueOf" should not throw 
PASS h4.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h4.title: IDL set to object "test-valueOf" followed by IDL get 
PASS h4.lang: typeof IDL attribute 
PASS h4.lang: IDL get with DOM attribute unset 
PASS h4.lang: setAttribute() to "" followed by getAttribute() 
PASS h4.lang: setAttribute() to "" followed by IDL get 
PASS h4.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h4.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h4.lang: setAttribute() to undefined followed by getAttribute() 
PASS h4.lang: setAttribute() to undefined followed by IDL get 
PASS h4.lang: setAttribute() to 7 followed by getAttribute() 
PASS h4.lang: setAttribute() to 7 followed by IDL get 
PASS h4.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS h4.lang: setAttribute() to 1.5 followed by IDL get 
PASS h4.lang: setAttribute() to true followed by getAttribute() 
PASS h4.lang: setAttribute() to true followed by IDL get 
PASS h4.lang: setAttribute() to false followed by getAttribute() 
PASS h4.lang: setAttribute() to false followed by IDL get 
PASS h4.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h4.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS h4.lang: setAttribute() to NaN followed by getAttribute() 
PASS h4.lang: setAttribute() to NaN followed by IDL get 
PASS h4.lang: setAttribute() to Infinity followed by getAttribute() 
PASS h4.lang: setAttribute() to Infinity followed by IDL get 
PASS h4.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS h4.lang: setAttribute() to -Infinity followed by IDL get 
PASS h4.lang: setAttribute() to "\0" followed by getAttribute() 
PASS h4.lang: setAttribute() to "\0" followed by IDL get 
PASS h4.lang: setAttribute() to null followed by getAttribute() 
PASS h4.lang: setAttribute() to null followed by IDL get 
PASS h4.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h4.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS h4.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h4.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h4.lang: IDL set to "" should not throw 
PASS h4.lang: IDL set to "" followed by getAttribute() 
PASS h4.lang: IDL set to "" followed by IDL get 
PASS h4.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h4.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h4.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h4.lang: IDL set to undefined should not throw 
PASS h4.lang: IDL set to undefined followed by getAttribute() 
PASS h4.lang: IDL set to undefined followed by IDL get 
PASS h4.lang: IDL set to 7 should not throw 
PASS h4.lang: IDL set to 7 followed by getAttribute() 
PASS h4.lang: IDL set to 7 followed by IDL get 
PASS h4.lang: IDL set to 1.5 should not throw 
PASS h4.lang: IDL set to 1.5 followed by getAttribute() 
PASS h4.lang: IDL set to 1.5 followed by IDL get 
PASS h4.lang: IDL set to true should not throw 
PASS h4.lang: IDL set to true followed by getAttribute() 
PASS h4.lang: IDL set to true followed by IDL get 
PASS h4.lang: IDL set to false should not throw 
PASS h4.lang: IDL set to false followed by getAttribute() 
PASS h4.lang: IDL set to false followed by IDL get 
PASS h4.lang: IDL set to object "[object Object]" should not throw 
PASS h4.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS h4.lang: IDL set to object "[object Object]" followed by IDL get 
PASS h4.lang: IDL set to NaN should not throw 
PASS h4.lang: IDL set to NaN followed by getAttribute() 
PASS h4.lang: IDL set to NaN followed by IDL get 
PASS h4.lang: IDL set to Infinity should not throw 
PASS h4.lang: IDL set to Infinity followed by getAttribute() 
PASS h4.lang: IDL set to Infinity followed by IDL get 
PASS h4.lang: IDL set to -Infinity should not throw 
PASS h4.lang: IDL set to -Infinity followed by getAttribute() 
PASS h4.lang: IDL set to -Infinity followed by IDL get 
PASS h4.lang: IDL set to "\0" should not throw 
PASS h4.lang: IDL set to "\0" followed by getAttribute() 
PASS h4.lang: IDL set to "\0" followed by IDL get 
PASS h4.lang: IDL set to null should not throw 
PASS h4.lang: IDL set to null followed by getAttribute() 
PASS h4.lang: IDL set to null followed by IDL get 
PASS h4.lang: IDL set to object "test-toString" should not throw 
PASS h4.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS h4.lang: IDL set to object "test-toString" followed by IDL get 
PASS h4.lang: IDL set to object "test-valueOf" should not throw 
PASS h4.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h4.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS h4.dir: typeof IDL attribute 
PASS h4.dir: IDL get with DOM attribute unset 
PASS h4.dir: setAttribute() to "" followed by getAttribute() 
PASS h4.dir: setAttribute() to "" followed by IDL get 
PASS h4.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h4.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h4.dir: setAttribute() to undefined followed by getAttribute() 
PASS h4.dir: setAttribute() to undefined followed by IDL get 
PASS h4.dir: setAttribute() to 7 followed by getAttribute() 
PASS h4.dir: setAttribute() to 7 followed by IDL get 
PASS h4.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS h4.dir: setAttribute() to 1.5 followed by IDL get 
PASS h4.dir: setAttribute() to true followed by getAttribute() 
PASS h4.dir: setAttribute() to true followed by IDL get 
PASS h4.dir: setAttribute() to false followed by getAttribute() 
PASS h4.dir: setAttribute() to false followed by IDL get 
PASS h4.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h4.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS h4.dir: setAttribute() to NaN followed by getAttribute() 
PASS h4.dir: setAttribute() to NaN followed by IDL get 
PASS h4.dir: setAttribute() to Infinity followed by getAttribute() 
PASS h4.dir: setAttribute() to Infinity followed by IDL get 
PASS h4.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS h4.dir: setAttribute() to -Infinity followed by IDL get 
PASS h4.dir: setAttribute() to "\0" followed by getAttribute() 
PASS h4.dir: setAttribute() to "\0" followed by IDL get 
PASS h4.dir: setAttribute() to null followed by getAttribute() 
PASS h4.dir: setAttribute() to null followed by IDL get 
PASS h4.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h4.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS h4.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h4.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h4.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS h4.dir: setAttribute() to "ltr" followed by IDL get 
PASS h4.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS h4.dir: setAttribute() to "xltr" followed by IDL get 
PASS h4.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS h4.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS h4.dir: setAttribute() to "tr" followed by getAttribute() 
PASS h4.dir: setAttribute() to "tr" followed by IDL get 
PASS h4.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS h4.dir: setAttribute() to "LTR" followed by IDL get 
PASS h4.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS h4.dir: setAttribute() to "rtl" followed by IDL get 
PASS h4.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS h4.dir: setAttribute() to "xrtl" followed by IDL get 
PASS h4.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS h4.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS h4.dir: setAttribute() to "tl" followed by getAttribute() 
PASS h4.dir: setAttribute() to "tl" followed by IDL get 
PASS h4.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS h4.dir: setAttribute() to "RTL" followed by IDL get 
PASS h4.dir: setAttribute() to "auto" followed by getAttribute() 
PASS h4.dir: setAttribute() to "auto" followed by IDL get 
PASS h4.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS h4.dir: setAttribute() to "xauto" followed by IDL get 
PASS h4.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS h4.dir: setAttribute() to "auto\0" followed by IDL get 
PASS h4.dir: setAttribute() to "uto" followed by getAttribute() 
PASS h4.dir: setAttribute() to "uto" followed by IDL get 
PASS h4.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS h4.dir: setAttribute() to "AUTO" followed by IDL get 
PASS h4.dir: IDL set to "" should not throw 
PASS h4.dir: IDL set to "" followed by getAttribute() 
PASS h4.dir: IDL set to "" followed by IDL get 
PASS h4.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h4.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h4.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h4.dir: IDL set to undefined should not throw 
PASS h4.dir: IDL set to undefined followed by getAttribute() 
PASS h4.dir: IDL set to undefined followed by IDL get 
PASS h4.dir: IDL set to 7 should not throw 
PASS h4.dir: IDL set to 7 followed by getAttribute() 
PASS h4.dir: IDL set to 7 followed by IDL get 
PASS h4.dir: IDL set to 1.5 should not throw 
PASS h4.dir: IDL set to 1.5 followed by getAttribute() 
PASS h4.dir: IDL set to 1.5 followed by IDL get 
PASS h4.dir: IDL set to true should not throw 
PASS h4.dir: IDL set to true followed by getAttribute() 
PASS h4.dir: IDL set to true followed by IDL get 
PASS h4.dir: IDL set to false should not throw 
PASS h4.dir: IDL set to false followed by getAttribute() 
PASS h4.dir: IDL set to false followed by IDL get 
PASS h4.dir: IDL set to object "[object Object]" should not throw 
PASS h4.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS h4.dir: IDL set to object "[object Object]" followed by IDL get 
PASS h4.dir: IDL set to NaN should not throw 
PASS h4.dir: IDL set to NaN followed by getAttribute() 
PASS h4.dir: IDL set to NaN followed by IDL get 
PASS h4.dir: IDL set to Infinity should not throw 
PASS h4.dir: IDL set to Infinity followed by getAttribute() 
PASS h4.dir: IDL set to Infinity followed by IDL get 
PASS h4.dir: IDL set to -Infinity should not throw 
PASS h4.dir: IDL set to -Infinity followed by getAttribute() 
PASS h4.dir: IDL set to -Infinity followed by IDL get 
PASS h4.dir: IDL set to "\0" should not throw 
PASS h4.dir: IDL set to "\0" followed by getAttribute() 
PASS h4.dir: IDL set to "\0" followed by IDL get 
PASS h4.dir: IDL set to null should not throw 
PASS h4.dir: IDL set to null followed by IDL get 
PASS h4.dir: IDL set to object "test-toString" should not throw 
PASS h4.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS h4.dir: IDL set to object "test-toString" followed by IDL get 
PASS h4.dir: IDL set to object "test-valueOf" should not throw 
PASS h4.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h4.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS h4.dir: IDL set to "ltr" should not throw 
PASS h4.dir: IDL set to "ltr" followed by getAttribute() 
PASS h4.dir: IDL set to "ltr" followed by IDL get 
PASS h4.dir: IDL set to "xltr" should not throw 
PASS h4.dir: IDL set to "xltr" followed by getAttribute() 
PASS h4.dir: IDL set to "xltr" followed by IDL get 
PASS h4.dir: IDL set to "ltr\0" should not throw 
PASS h4.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS h4.dir: IDL set to "ltr\0" followed by IDL get 
PASS h4.dir: IDL set to "tr" should not throw 
PASS h4.dir: IDL set to "tr" followed by getAttribute() 
PASS h4.dir: IDL set to "tr" followed by IDL get 
PASS h4.dir: IDL set to "LTR" should not throw 
PASS h4.dir: IDL set to "LTR" followed by getAttribute() 
PASS h4.dir: IDL set to "LTR" followed by IDL get 
PASS h4.dir: IDL set to "rtl" should not throw 
PASS h4.dir: IDL set to "rtl" followed by getAttribute() 
PASS h4.dir: IDL set to "rtl" followed by IDL get 
PASS h4.dir: IDL set to "xrtl" should not throw 
PASS h4.dir: IDL set to "xrtl" followed by getAttribute() 
PASS h4.dir: IDL set to "xrtl" followed by IDL get 
PASS h4.dir: IDL set to "rtl\0" should not throw 
PASS h4.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS h4.dir: IDL set to "rtl\0" followed by IDL get 
PASS h4.dir: IDL set to "tl" should not throw 
PASS h4.dir: IDL set to "tl" followed by getAttribute() 
PASS h4.dir: IDL set to "tl" followed by IDL get 
PASS h4.dir: IDL set to "RTL" should not throw 
PASS h4.dir: IDL set to "RTL" followed by getAttribute() 
PASS h4.dir: IDL set to "RTL" followed by IDL get 
PASS h4.dir: IDL set to "auto" should not throw 
PASS h4.dir: IDL set to "auto" followed by getAttribute() 
PASS h4.dir: IDL set to "auto" followed by IDL get 
PASS h4.dir: IDL set to "xauto" should not throw 
PASS h4.dir: IDL set to "xauto" followed by getAttribute() 
PASS h4.dir: IDL set to "xauto" followed by IDL get 
PASS h4.dir: IDL set to "auto\0" should not throw 
PASS h4.dir: IDL set to "auto\0" followed by getAttribute() 
PASS h4.dir: IDL set to "auto\0" followed by IDL get 
PASS h4.dir: IDL set to "uto" should not throw 
PASS h4.dir: IDL set to "uto" followed by getAttribute() 
PASS h4.dir: IDL set to "uto" followed by IDL get 
PASS h4.dir: IDL set to "AUTO" should not throw 
PASS h4.dir: IDL set to "AUTO" followed by getAttribute() 
PASS h4.dir: IDL set to "AUTO" followed by IDL get 
PASS h4.className (<h4 class>): typeof IDL attribute 
PASS h4.className (<h4 class>): IDL get with DOM attribute unset 
PASS h4.className (<h4 class>): setAttribute() to "" followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to "" followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to undefined followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to undefined followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to 7 followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to 7 followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to 1.5 followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to 1.5 followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to true followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to true followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to false followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to false followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to NaN followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to NaN followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to Infinity followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to Infinity followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to -Infinity followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to -Infinity followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to "\0" followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to "\0" followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to null followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to null followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to object "test-toString" followed by IDL get 
PASS h4.className (<h4 class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h4.className (<h4 class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS h4.className (<h4 class>): IDL set to "" should not throw 
PASS h4.className (<h4 class>): IDL set to "" followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to "" followed by IDL get 
PASS h4.className (<h4 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h4.className (<h4 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h4.className (<h4 class>): IDL set to undefined should not throw 
PASS h4.className (<h4 class>): IDL set to undefined followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to undefined followed by IDL get 
PASS h4.className (<h4 class>): IDL set to 7 should not throw 
PASS h4.className (<h4 class>): IDL set to 7 followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to 7 followed by IDL get 
PASS h4.className (<h4 class>): IDL set to 1.5 should not throw 
PASS h4.className (<h4 class>): IDL set to 1.5 followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to 1.5 followed by IDL get 
PASS h4.className (<h4 class>): IDL set to true should not throw 
PASS h4.className (<h4 class>): IDL set to true followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to true followed by IDL get 
PASS h4.className (<h4 class>): IDL set to false should not throw 
PASS h4.className (<h4 class>): IDL set to false followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to false followed by IDL get 
PASS h4.className (<h4 class>): IDL set to object "[object Object]" should not throw 
PASS h4.className (<h4 class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to object "[object Object]" followed by IDL get 
PASS h4.className (<h4 class>): IDL set to NaN should not throw 
PASS h4.className (<h4 class>): IDL set to NaN followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to NaN followed by IDL get 
PASS h4.className (<h4 class>): IDL set to Infinity should not throw 
PASS h4.className (<h4 class>): IDL set to Infinity followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to Infinity followed by IDL get 
PASS h4.className (<h4 class>): IDL set to -Infinity should not throw 
PASS h4.className (<h4 class>): IDL set to -Infinity followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to -Infinity followed by IDL get 
PASS h4.className (<h4 class>): IDL set to "\0" should not throw 
PASS h4.className (<h4 class>): IDL set to "\0" followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to "\0" followed by IDL get 
PASS h4.className (<h4 class>): IDL set to null should not throw 
PASS h4.className (<h4 class>): IDL set to null followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to null followed by IDL get 
PASS h4.className (<h4 class>): IDL set to object "test-toString" should not throw 
PASS h4.className (<h4 class>): IDL set to object "test-toString" followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to object "test-toString" followed by IDL get 
PASS h4.className (<h4 class>): IDL set to object "test-valueOf" should not throw 
PASS h4.className (<h4 class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS h4.className (<h4 class>): IDL set to object "test-valueOf" followed by IDL get 
PASS h4.hidden: typeof IDL attribute 
PASS h4.hidden: IDL get with DOM attribute unset 
PASS h4.hidden: setAttribute() to "" followed by getAttribute() 
PASS h4.hidden: setAttribute() to "" followed by IDL get 
PASS h4.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS h4.hidden: setAttribute() to " foo " followed by IDL get 
PASS h4.hidden: setAttribute() to undefined followed by getAttribute() 
PASS h4.hidden: setAttribute() to undefined followed by IDL get 
PASS h4.hidden: setAttribute() to null followed by getAttribute() 
PASS h4.hidden: setAttribute() to null followed by IDL get 
PASS h4.hidden: setAttribute() to 7 followed by getAttribute() 
PASS h4.hidden: setAttribute() to 7 followed by IDL get 
PASS h4.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS h4.hidden: setAttribute() to 1.5 followed by IDL get 
PASS h4.hidden: setAttribute() to true followed by getAttribute() 
PASS h4.hidden: setAttribute() to true followed by IDL get 
PASS h4.hidden: setAttribute() to false followed by getAttribute() 
PASS h4.hidden: setAttribute() to false followed by IDL get 
PASS h4.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h4.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS h4.hidden: setAttribute() to NaN followed by getAttribute() 
PASS h4.hidden: setAttribute() to NaN followed by IDL get 
PASS h4.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS h4.hidden: setAttribute() to Infinity followed by IDL get 
PASS h4.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS h4.hidden: setAttribute() to -Infinity followed by IDL get 
PASS h4.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS h4.hidden: setAttribute() to "\0" followed by IDL get 
PASS h4.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h4.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS h4.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h4.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h4.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS h4.hidden: setAttribute() to "hidden" followed by IDL get 
PASS h4.hidden: IDL set to "" should not throw 
PASS h4.hidden: IDL set to "" followed by hasAttribute() 
PASS h4.hidden: IDL set to "" followed by IDL get 
PASS h4.hidden: IDL set to " foo " should not throw 
PASS h4.hidden: IDL set to " foo " followed by hasAttribute() 
PASS h4.hidden: IDL set to " foo " followed by IDL get 
PASS h4.hidden: IDL set to undefined should not throw 
PASS h4.hidden: IDL set to undefined followed by hasAttribute() 
PASS h4.hidden: IDL set to undefined followed by IDL get 
PASS h4.hidden: IDL set to null should not throw 
PASS h4.hidden: IDL set to null followed by hasAttribute() 
PASS h4.hidden: IDL set to null followed by IDL get 
PASS h4.hidden: IDL set to 7 should not throw 
PASS h4.hidden: IDL set to 7 followed by hasAttribute() 
PASS h4.hidden: IDL set to 7 followed by IDL get 
PASS h4.hidden: IDL set to 1.5 should not throw 
PASS h4.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS h4.hidden: IDL set to 1.5 followed by IDL get 
PASS h4.hidden: IDL set to true should not throw 
PASS h4.hidden: IDL set to true followed by hasAttribute() 
PASS h4.hidden: IDL set to true followed by IDL get 
PASS h4.hidden: IDL set to false should not throw 
PASS h4.hidden: IDL set to false followed by hasAttribute() 
PASS h4.hidden: IDL set to false followed by IDL get 
PASS h4.hidden: IDL set to object "[object Object]" should not throw 
PASS h4.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS h4.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS h4.hidden: IDL set to NaN should not throw 
PASS h4.hidden: IDL set to NaN followed by hasAttribute() 
PASS h4.hidden: IDL set to NaN followed by IDL get 
PASS h4.hidden: IDL set to Infinity should not throw 
PASS h4.hidden: IDL set to Infinity followed by hasAttribute() 
PASS h4.hidden: IDL set to Infinity followed by IDL get 
PASS h4.hidden: IDL set to -Infinity should not throw 
PASS h4.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS h4.hidden: IDL set to -Infinity followed by IDL get 
PASS h4.hidden: IDL set to "\0" should not throw 
PASS h4.hidden: IDL set to "\0" followed by hasAttribute() 
PASS h4.hidden: IDL set to "\0" followed by IDL get 
PASS h4.hidden: IDL set to object "test-toString" should not throw 
PASS h4.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS h4.hidden: IDL set to object "test-toString" followed by IDL get 
PASS h4.hidden: IDL set to object "test-valueOf" should not throw 
PASS h4.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS h4.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS h4.accessKey: typeof IDL attribute 
PASS h4.accessKey: IDL get with DOM attribute unset 
PASS h4.accessKey: setAttribute() to "" followed by getAttribute() 
PASS h4.accessKey: setAttribute() to "" followed by IDL get 
PASS h4.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h4.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h4.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS h4.accessKey: setAttribute() to undefined followed by IDL get 
PASS h4.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS h4.accessKey: setAttribute() to 7 followed by IDL get 
PASS h4.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS h4.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS h4.accessKey: setAttribute() to true followed by getAttribute() 
PASS h4.accessKey: setAttribute() to true followed by IDL get 
PASS h4.accessKey: setAttribute() to false followed by getAttribute() 
PASS h4.accessKey: setAttribute() to false followed by IDL get 
PASS h4.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h4.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS h4.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS h4.accessKey: setAttribute() to NaN followed by IDL get 
PASS h4.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS h4.accessKey: setAttribute() to Infinity followed by IDL get 
PASS h4.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS h4.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS h4.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS h4.accessKey: setAttribute() to "\0" followed by IDL get 
PASS h4.accessKey: setAttribute() to null followed by getAttribute() 
PASS h4.accessKey: setAttribute() to null followed by IDL get 
PASS h4.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h4.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS h4.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h4.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h4.accessKey: IDL set to "" should not throw 
PASS h4.accessKey: IDL set to "" followed by getAttribute() 
PASS h4.accessKey: IDL set to "" followed by IDL get 
PASS h4.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h4.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h4.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h4.accessKey: IDL set to undefined should not throw 
PASS h4.accessKey: IDL set to undefined followed by getAttribute() 
PASS h4.accessKey: IDL set to undefined followed by IDL get 
PASS h4.accessKey: IDL set to 7 should not throw 
PASS h4.accessKey: IDL set to 7 followed by getAttribute() 
PASS h4.accessKey: IDL set to 7 followed by IDL get 
PASS h4.accessKey: IDL set to 1.5 should not throw 
PASS h4.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS h4.accessKey: IDL set to 1.5 followed by IDL get 
PASS h4.accessKey: IDL set to true should not throw 
PASS h4.accessKey: IDL set to true followed by getAttribute() 
PASS h4.accessKey: IDL set to true followed by IDL get 
PASS h4.accessKey: IDL set to false should not throw 
PASS h4.accessKey: IDL set to false followed by getAttribute() 
PASS h4.accessKey: IDL set to false followed by IDL get 
PASS h4.accessKey: IDL set to object "[object Object]" should not throw 
PASS h4.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS h4.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS h4.accessKey: IDL set to NaN should not throw 
PASS h4.accessKey: IDL set to NaN followed by getAttribute() 
PASS h4.accessKey: IDL set to NaN followed by IDL get 
PASS h4.accessKey: IDL set to Infinity should not throw 
PASS h4.accessKey: IDL set to Infinity followed by getAttribute() 
PASS h4.accessKey: IDL set to Infinity followed by IDL get 
PASS h4.accessKey: IDL set to -Infinity should not throw 
PASS h4.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS h4.accessKey: IDL set to -Infinity followed by IDL get 
PASS h4.accessKey: IDL set to "\0" should not throw 
PASS h4.accessKey: IDL set to "\0" followed by getAttribute() 
PASS h4.accessKey: IDL set to "\0" followed by IDL get 
PASS h4.accessKey: IDL set to null should not throw 
PASS h4.accessKey: IDL set to null followed by getAttribute() 
PASS h4.accessKey: IDL set to null followed by IDL get 
PASS h4.accessKey: IDL set to object "test-toString" should not throw 
PASS h4.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS h4.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS h4.accessKey: IDL set to object "test-valueOf" should not throw 
PASS h4.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h4.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS h4.tabIndex: typeof IDL attribute 
PASS h4.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to -36 followed by IDL get 
PASS h4.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to -1 followed by IDL get 
PASS h4.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to 0 followed by IDL get 
PASS h4.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to 1 followed by IDL get 
PASS h4.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS h4.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS h4.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS h4.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS h4.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to "0" followed by IDL get 
PASS h4.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to "1" followed by IDL get 
PASS h4.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS h4.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS h4.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS h4.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS h4.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS h4.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS h4.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS h4.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS h4.tabIndex: IDL set to -36 should not throw 
PASS h4.tabIndex: IDL set to -36 followed by getAttribute() 
PASS h4.tabIndex: IDL set to -36 followed by IDL get 
PASS h4.tabIndex: IDL set to -1 should not throw 
PASS h4.tabIndex: IDL set to -1 followed by getAttribute() 
PASS h4.tabIndex: IDL set to -1 followed by IDL get 
PASS h4.tabIndex: IDL set to 0 should not throw 
PASS h4.tabIndex: IDL set to 0 followed by getAttribute() 
PASS h4.tabIndex: IDL set to 0 followed by IDL get 
PASS h4.tabIndex: IDL set to 1 should not throw 
PASS h4.tabIndex: IDL set to 1 followed by getAttribute() 
PASS h4.tabIndex: IDL set to 1 followed by IDL get 
PASS h4.tabIndex: IDL set to 2147483647 should not throw 
PASS h4.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS h4.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS h4.tabIndex: IDL set to -2147483648 should not throw 
PASS h4.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS h4.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS h4.align: typeof IDL attribute 
PASS h4.align: IDL get with DOM attribute unset 
PASS h4.align: setAttribute() to "" followed by getAttribute() 
PASS h4.align: setAttribute() to "" followed by IDL get 
PASS h4.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h4.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h4.align: setAttribute() to undefined followed by getAttribute() 
PASS h4.align: setAttribute() to undefined followed by IDL get 
PASS h4.align: setAttribute() to 7 followed by getAttribute() 
PASS h4.align: setAttribute() to 7 followed by IDL get 
PASS h4.align: setAttribute() to 1.5 followed by getAttribute() 
PASS h4.align: setAttribute() to 1.5 followed by IDL get 
PASS h4.align: setAttribute() to true followed by getAttribute() 
PASS h4.align: setAttribute() to true followed by IDL get 
PASS h4.align: setAttribute() to false followed by getAttribute() 
PASS h4.align: setAttribute() to false followed by IDL get 
PASS h4.align: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h4.align: setAttribute() to object "[object Object]" followed by IDL get 
PASS h4.align: setAttribute() to NaN followed by getAttribute() 
PASS h4.align: setAttribute() to NaN followed by IDL get 
PASS h4.align: setAttribute() to Infinity followed by getAttribute() 
PASS h4.align: setAttribute() to Infinity followed by IDL get 
PASS h4.align: setAttribute() to -Infinity followed by getAttribute() 
PASS h4.align: setAttribute() to -Infinity followed by IDL get 
PASS h4.align: setAttribute() to "\0" followed by getAttribute() 
PASS h4.align: setAttribute() to "\0" followed by IDL get 
PASS h4.align: setAttribute() to null followed by getAttribute() 
PASS h4.align: setAttribute() to null followed by IDL get 
PASS h4.align: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h4.align: setAttribute() to object "test-toString" followed by IDL get 
PASS h4.align: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h4.align: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h4.align: IDL set to "" should not throw 
PASS h4.align: IDL set to "" followed by getAttribute() 
PASS h4.align: IDL set to "" followed by IDL get 
PASS h4.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h4.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h4.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h4.align: IDL set to undefined should not throw 
PASS h4.align: IDL set to undefined followed by getAttribute() 
PASS h4.align: IDL set to undefined followed by IDL get 
PASS h4.align: IDL set to 7 should not throw 
PASS h4.align: IDL set to 7 followed by getAttribute() 
PASS h4.align: IDL set to 7 followed by IDL get 
PASS h4.align: IDL set to 1.5 should not throw 
PASS h4.align: IDL set to 1.5 followed by getAttribute() 
PASS h4.align: IDL set to 1.5 followed by IDL get 
PASS h4.align: IDL set to true should not throw 
PASS h4.align: IDL set to true followed by getAttribute() 
PASS h4.align: IDL set to true followed by IDL get 
PASS h4.align: IDL set to false should not throw 
PASS h4.align: IDL set to false followed by getAttribute() 
PASS h4.align: IDL set to false followed by IDL get 
PASS h4.align: IDL set to object "[object Object]" should not throw 
PASS h4.align: IDL set to object "[object Object]" followed by getAttribute() 
PASS h4.align: IDL set to object "[object Object]" followed by IDL get 
PASS h4.align: IDL set to NaN should not throw 
PASS h4.align: IDL set to NaN followed by getAttribute() 
PASS h4.align: IDL set to NaN followed by IDL get 
PASS h4.align: IDL set to Infinity should not throw 
PASS h4.align: IDL set to Infinity followed by getAttribute() 
PASS h4.align: IDL set to Infinity followed by IDL get 
PASS h4.align: IDL set to -Infinity should not throw 
PASS h4.align: IDL set to -Infinity followed by getAttribute() 
PASS h4.align: IDL set to -Infinity followed by IDL get 
PASS h4.align: IDL set to "\0" should not throw 
PASS h4.align: IDL set to "\0" followed by getAttribute() 
PASS h4.align: IDL set to "\0" followed by IDL get 
PASS h4.align: IDL set to null should not throw 
PASS h4.align: IDL set to null followed by getAttribute() 
PASS h4.align: IDL set to null followed by IDL get 
PASS h4.align: IDL set to object "test-toString" should not throw 
PASS h4.align: IDL set to object "test-toString" followed by getAttribute() 
PASS h4.align: IDL set to object "test-toString" followed by IDL get 
PASS h4.align: IDL set to object "test-valueOf" should not throw 
PASS h4.align: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h4.align: IDL set to object "test-valueOf" followed by IDL get 
FAIL h4.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL h4.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS h4.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to null followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to true followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to false followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL h4.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h4.itemScope: IDL set to "" should not throw 
FAIL h4.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL h4.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS h4.itemScope: IDL set to " foo " should not throw 
PASS h4.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL h4.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS h4.itemScope: IDL set to undefined should not throw 
FAIL h4.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL h4.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS h4.itemScope: IDL set to null should not throw 
FAIL h4.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL h4.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS h4.itemScope: IDL set to 7 should not throw 
PASS h4.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL h4.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS h4.itemScope: IDL set to 1.5 should not throw 
PASS h4.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL h4.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS h4.itemScope: IDL set to true should not throw 
PASS h4.itemScope: IDL set to true followed by hasAttribute() 
PASS h4.itemScope: IDL set to true followed by IDL get 
PASS h4.itemScope: IDL set to false should not throw 
FAIL h4.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS h4.itemScope: IDL set to false followed by IDL get 
PASS h4.itemScope: IDL set to object "[object Object]" should not throw 
PASS h4.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL h4.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS h4.itemScope: IDL set to NaN should not throw 
FAIL h4.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL h4.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS h4.itemScope: IDL set to Infinity should not throw 
PASS h4.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL h4.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS h4.itemScope: IDL set to -Infinity should not throw 
PASS h4.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL h4.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS h4.itemScope: IDL set to "\0" should not throw 
PASS h4.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL h4.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS h4.itemScope: IDL set to object "test-toString" should not throw 
PASS h4.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL h4.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS h4.itemScope: IDL set to object "test-valueOf" should not throw 
PASS h4.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL h4.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL h4.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL h4.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS h4.itemId: setAttribute() to "" followed by getAttribute() 
FAIL h4.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h4.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL h4.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS h4.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL h4.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS h4.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL h4.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS h4.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL h4.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h4.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL h4.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS h4.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL h4.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS h4.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL h4.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS h4.itemId: setAttribute() to true followed by getAttribute() 
FAIL h4.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS h4.itemId: setAttribute() to false followed by getAttribute() 
FAIL h4.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS h4.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL h4.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS h4.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL h4.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS h4.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL h4.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS h4.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL h4.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS h4.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL h4.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h4.itemId: setAttribute() to null followed by getAttribute() 
FAIL h4.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS h4.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL h4.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS h4.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL h4.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS h4.itemId: IDL set to "" should not throw 
FAIL h4.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL h4.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS h4.itemId: IDL set to " foo " should not throw 
FAIL h4.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL h4.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS h4.itemId: IDL set to "http://site.example/" should not throw 
FAIL h4.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS h4.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS h4.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL h4.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL h4.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS h4.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL h4.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL h4.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS h4.itemId: IDL set to undefined should not throw 
FAIL h4.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL h4.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS h4.itemId: IDL set to 7 should not throw 
FAIL h4.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL h4.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS h4.itemId: IDL set to 1.5 should not throw 
FAIL h4.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL h4.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS h4.itemId: IDL set to true should not throw 
FAIL h4.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL h4.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS h4.itemId: IDL set to false should not throw 
FAIL h4.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL h4.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS h4.itemId: IDL set to object "[object Object]" should not throw 
FAIL h4.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL h4.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS h4.itemId: IDL set to NaN should not throw 
FAIL h4.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL h4.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS h4.itemId: IDL set to Infinity should not throw 
FAIL h4.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL h4.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS h4.itemId: IDL set to -Infinity should not throw 
FAIL h4.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL h4.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS h4.itemId: IDL set to "\0" should not throw 
FAIL h4.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL h4.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS h4.itemId: IDL set to null should not throw 
FAIL h4.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL h4.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS h4.itemId: IDL set to object "test-toString" should not throw 
FAIL h4.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL h4.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS h4.itemId: IDL set to object "test-valueOf" should not throw 
PASS h4.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL h4.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS h5.title: typeof IDL attribute 
PASS h5.title: IDL get with DOM attribute unset 
PASS h5.title: setAttribute() to "" followed by getAttribute() 
PASS h5.title: setAttribute() to "" followed by IDL get 
PASS h5.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h5.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h5.title: setAttribute() to undefined followed by getAttribute() 
PASS h5.title: setAttribute() to undefined followed by IDL get 
PASS h5.title: setAttribute() to 7 followed by getAttribute() 
PASS h5.title: setAttribute() to 7 followed by IDL get 
PASS h5.title: setAttribute() to 1.5 followed by getAttribute() 
PASS h5.title: setAttribute() to 1.5 followed by IDL get 
PASS h5.title: setAttribute() to true followed by getAttribute() 
PASS h5.title: setAttribute() to true followed by IDL get 
PASS h5.title: setAttribute() to false followed by getAttribute() 
PASS h5.title: setAttribute() to false followed by IDL get 
PASS h5.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h5.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS h5.title: setAttribute() to NaN followed by getAttribute() 
PASS h5.title: setAttribute() to NaN followed by IDL get 
PASS h5.title: setAttribute() to Infinity followed by getAttribute() 
PASS h5.title: setAttribute() to Infinity followed by IDL get 
PASS h5.title: setAttribute() to -Infinity followed by getAttribute() 
PASS h5.title: setAttribute() to -Infinity followed by IDL get 
PASS h5.title: setAttribute() to "\0" followed by getAttribute() 
PASS h5.title: setAttribute() to "\0" followed by IDL get 
PASS h5.title: setAttribute() to null followed by getAttribute() 
PASS h5.title: setAttribute() to null followed by IDL get 
PASS h5.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h5.title: setAttribute() to object "test-toString" followed by IDL get 
PASS h5.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h5.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h5.title: IDL set to "" should not throw 
PASS h5.title: IDL set to "" followed by getAttribute() 
PASS h5.title: IDL set to "" followed by IDL get 
PASS h5.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h5.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h5.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h5.title: IDL set to undefined should not throw 
PASS h5.title: IDL set to undefined followed by getAttribute() 
PASS h5.title: IDL set to undefined followed by IDL get 
PASS h5.title: IDL set to 7 should not throw 
PASS h5.title: IDL set to 7 followed by getAttribute() 
PASS h5.title: IDL set to 7 followed by IDL get 
PASS h5.title: IDL set to 1.5 should not throw 
PASS h5.title: IDL set to 1.5 followed by getAttribute() 
PASS h5.title: IDL set to 1.5 followed by IDL get 
PASS h5.title: IDL set to true should not throw 
PASS h5.title: IDL set to true followed by getAttribute() 
PASS h5.title: IDL set to true followed by IDL get 
PASS h5.title: IDL set to false should not throw 
PASS h5.title: IDL set to false followed by getAttribute() 
PASS h5.title: IDL set to false followed by IDL get 
PASS h5.title: IDL set to object "[object Object]" should not throw 
PASS h5.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS h5.title: IDL set to object "[object Object]" followed by IDL get 
PASS h5.title: IDL set to NaN should not throw 
PASS h5.title: IDL set to NaN followed by getAttribute() 
PASS h5.title: IDL set to NaN followed by IDL get 
PASS h5.title: IDL set to Infinity should not throw 
PASS h5.title: IDL set to Infinity followed by getAttribute() 
PASS h5.title: IDL set to Infinity followed by IDL get 
PASS h5.title: IDL set to -Infinity should not throw 
PASS h5.title: IDL set to -Infinity followed by getAttribute() 
PASS h5.title: IDL set to -Infinity followed by IDL get 
PASS h5.title: IDL set to "\0" should not throw 
PASS h5.title: IDL set to "\0" followed by getAttribute() 
PASS h5.title: IDL set to "\0" followed by IDL get 
PASS h5.title: IDL set to null should not throw 
PASS h5.title: IDL set to null followed by getAttribute() 
PASS h5.title: IDL set to null followed by IDL get 
PASS h5.title: IDL set to object "test-toString" should not throw 
PASS h5.title: IDL set to object "test-toString" followed by getAttribute() 
PASS h5.title: IDL set to object "test-toString" followed by IDL get 
PASS h5.title: IDL set to object "test-valueOf" should not throw 
PASS h5.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h5.title: IDL set to object "test-valueOf" followed by IDL get 
PASS h5.lang: typeof IDL attribute 
PASS h5.lang: IDL get with DOM attribute unset 
PASS h5.lang: setAttribute() to "" followed by getAttribute() 
PASS h5.lang: setAttribute() to "" followed by IDL get 
PASS h5.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h5.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h5.lang: setAttribute() to undefined followed by getAttribute() 
PASS h5.lang: setAttribute() to undefined followed by IDL get 
PASS h5.lang: setAttribute() to 7 followed by getAttribute() 
PASS h5.lang: setAttribute() to 7 followed by IDL get 
PASS h5.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS h5.lang: setAttribute() to 1.5 followed by IDL get 
PASS h5.lang: setAttribute() to true followed by getAttribute() 
PASS h5.lang: setAttribute() to true followed by IDL get 
PASS h5.lang: setAttribute() to false followed by getAttribute() 
PASS h5.lang: setAttribute() to false followed by IDL get 
PASS h5.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h5.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS h5.lang: setAttribute() to NaN followed by getAttribute() 
PASS h5.lang: setAttribute() to NaN followed by IDL get 
PASS h5.lang: setAttribute() to Infinity followed by getAttribute() 
PASS h5.lang: setAttribute() to Infinity followed by IDL get 
PASS h5.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS h5.lang: setAttribute() to -Infinity followed by IDL get 
PASS h5.lang: setAttribute() to "\0" followed by getAttribute() 
PASS h5.lang: setAttribute() to "\0" followed by IDL get 
PASS h5.lang: setAttribute() to null followed by getAttribute() 
PASS h5.lang: setAttribute() to null followed by IDL get 
PASS h5.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h5.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS h5.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h5.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h5.lang: IDL set to "" should not throw 
PASS h5.lang: IDL set to "" followed by getAttribute() 
PASS h5.lang: IDL set to "" followed by IDL get 
PASS h5.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h5.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h5.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h5.lang: IDL set to undefined should not throw 
PASS h5.lang: IDL set to undefined followed by getAttribute() 
PASS h5.lang: IDL set to undefined followed by IDL get 
PASS h5.lang: IDL set to 7 should not throw 
PASS h5.lang: IDL set to 7 followed by getAttribute() 
PASS h5.lang: IDL set to 7 followed by IDL get 
PASS h5.lang: IDL set to 1.5 should not throw 
PASS h5.lang: IDL set to 1.5 followed by getAttribute() 
PASS h5.lang: IDL set to 1.5 followed by IDL get 
PASS h5.lang: IDL set to true should not throw 
PASS h5.lang: IDL set to true followed by getAttribute() 
PASS h5.lang: IDL set to true followed by IDL get 
PASS h5.lang: IDL set to false should not throw 
PASS h5.lang: IDL set to false followed by getAttribute() 
PASS h5.lang: IDL set to false followed by IDL get 
PASS h5.lang: IDL set to object "[object Object]" should not throw 
PASS h5.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS h5.lang: IDL set to object "[object Object]" followed by IDL get 
PASS h5.lang: IDL set to NaN should not throw 
PASS h5.lang: IDL set to NaN followed by getAttribute() 
PASS h5.lang: IDL set to NaN followed by IDL get 
PASS h5.lang: IDL set to Infinity should not throw 
PASS h5.lang: IDL set to Infinity followed by getAttribute() 
PASS h5.lang: IDL set to Infinity followed by IDL get 
PASS h5.lang: IDL set to -Infinity should not throw 
PASS h5.lang: IDL set to -Infinity followed by getAttribute() 
PASS h5.lang: IDL set to -Infinity followed by IDL get 
PASS h5.lang: IDL set to "\0" should not throw 
PASS h5.lang: IDL set to "\0" followed by getAttribute() 
PASS h5.lang: IDL set to "\0" followed by IDL get 
PASS h5.lang: IDL set to null should not throw 
PASS h5.lang: IDL set to null followed by getAttribute() 
PASS h5.lang: IDL set to null followed by IDL get 
PASS h5.lang: IDL set to object "test-toString" should not throw 
PASS h5.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS h5.lang: IDL set to object "test-toString" followed by IDL get 
PASS h5.lang: IDL set to object "test-valueOf" should not throw 
PASS h5.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h5.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS h5.dir: typeof IDL attribute 
PASS h5.dir: IDL get with DOM attribute unset 
PASS h5.dir: setAttribute() to "" followed by getAttribute() 
PASS h5.dir: setAttribute() to "" followed by IDL get 
PASS h5.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h5.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h5.dir: setAttribute() to undefined followed by getAttribute() 
PASS h5.dir: setAttribute() to undefined followed by IDL get 
PASS h5.dir: setAttribute() to 7 followed by getAttribute() 
PASS h5.dir: setAttribute() to 7 followed by IDL get 
PASS h5.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS h5.dir: setAttribute() to 1.5 followed by IDL get 
PASS h5.dir: setAttribute() to true followed by getAttribute() 
PASS h5.dir: setAttribute() to true followed by IDL get 
PASS h5.dir: setAttribute() to false followed by getAttribute() 
PASS h5.dir: setAttribute() to false followed by IDL get 
PASS h5.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h5.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS h5.dir: setAttribute() to NaN followed by getAttribute() 
PASS h5.dir: setAttribute() to NaN followed by IDL get 
PASS h5.dir: setAttribute() to Infinity followed by getAttribute() 
PASS h5.dir: setAttribute() to Infinity followed by IDL get 
PASS h5.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS h5.dir: setAttribute() to -Infinity followed by IDL get 
PASS h5.dir: setAttribute() to "\0" followed by getAttribute() 
PASS h5.dir: setAttribute() to "\0" followed by IDL get 
PASS h5.dir: setAttribute() to null followed by getAttribute() 
PASS h5.dir: setAttribute() to null followed by IDL get 
PASS h5.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h5.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS h5.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h5.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h5.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS h5.dir: setAttribute() to "ltr" followed by IDL get 
PASS h5.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS h5.dir: setAttribute() to "xltr" followed by IDL get 
PASS h5.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS h5.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS h5.dir: setAttribute() to "tr" followed by getAttribute() 
PASS h5.dir: setAttribute() to "tr" followed by IDL get 
PASS h5.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS h5.dir: setAttribute() to "LTR" followed by IDL get 
PASS h5.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS h5.dir: setAttribute() to "rtl" followed by IDL get 
PASS h5.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS h5.dir: setAttribute() to "xrtl" followed by IDL get 
PASS h5.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS h5.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS h5.dir: setAttribute() to "tl" followed by getAttribute() 
PASS h5.dir: setAttribute() to "tl" followed by IDL get 
PASS h5.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS h5.dir: setAttribute() to "RTL" followed by IDL get 
PASS h5.dir: setAttribute() to "auto" followed by getAttribute() 
PASS h5.dir: setAttribute() to "auto" followed by IDL get 
PASS h5.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS h5.dir: setAttribute() to "xauto" followed by IDL get 
PASS h5.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS h5.dir: setAttribute() to "auto\0" followed by IDL get 
PASS h5.dir: setAttribute() to "uto" followed by getAttribute() 
PASS h5.dir: setAttribute() to "uto" followed by IDL get 
PASS h5.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS h5.dir: setAttribute() to "AUTO" followed by IDL get 
PASS h5.dir: IDL set to "" should not throw 
PASS h5.dir: IDL set to "" followed by getAttribute() 
PASS h5.dir: IDL set to "" followed by IDL get 
PASS h5.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h5.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h5.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h5.dir: IDL set to undefined should not throw 
PASS h5.dir: IDL set to undefined followed by getAttribute() 
PASS h5.dir: IDL set to undefined followed by IDL get 
PASS h5.dir: IDL set to 7 should not throw 
PASS h5.dir: IDL set to 7 followed by getAttribute() 
PASS h5.dir: IDL set to 7 followed by IDL get 
PASS h5.dir: IDL set to 1.5 should not throw 
PASS h5.dir: IDL set to 1.5 followed by getAttribute() 
PASS h5.dir: IDL set to 1.5 followed by IDL get 
PASS h5.dir: IDL set to true should not throw 
PASS h5.dir: IDL set to true followed by getAttribute() 
PASS h5.dir: IDL set to true followed by IDL get 
PASS h5.dir: IDL set to false should not throw 
PASS h5.dir: IDL set to false followed by getAttribute() 
PASS h5.dir: IDL set to false followed by IDL get 
PASS h5.dir: IDL set to object "[object Object]" should not throw 
PASS h5.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS h5.dir: IDL set to object "[object Object]" followed by IDL get 
PASS h5.dir: IDL set to NaN should not throw 
PASS h5.dir: IDL set to NaN followed by getAttribute() 
PASS h5.dir: IDL set to NaN followed by IDL get 
PASS h5.dir: IDL set to Infinity should not throw 
PASS h5.dir: IDL set to Infinity followed by getAttribute() 
PASS h5.dir: IDL set to Infinity followed by IDL get 
PASS h5.dir: IDL set to -Infinity should not throw 
PASS h5.dir: IDL set to -Infinity followed by getAttribute() 
PASS h5.dir: IDL set to -Infinity followed by IDL get 
PASS h5.dir: IDL set to "\0" should not throw 
PASS h5.dir: IDL set to "\0" followed by getAttribute() 
PASS h5.dir: IDL set to "\0" followed by IDL get 
PASS h5.dir: IDL set to null should not throw 
PASS h5.dir: IDL set to null followed by IDL get 
PASS h5.dir: IDL set to object "test-toString" should not throw 
PASS h5.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS h5.dir: IDL set to object "test-toString" followed by IDL get 
PASS h5.dir: IDL set to object "test-valueOf" should not throw 
PASS h5.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h5.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS h5.dir: IDL set to "ltr" should not throw 
PASS h5.dir: IDL set to "ltr" followed by getAttribute() 
PASS h5.dir: IDL set to "ltr" followed by IDL get 
PASS h5.dir: IDL set to "xltr" should not throw 
PASS h5.dir: IDL set to "xltr" followed by getAttribute() 
PASS h5.dir: IDL set to "xltr" followed by IDL get 
PASS h5.dir: IDL set to "ltr\0" should not throw 
PASS h5.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS h5.dir: IDL set to "ltr\0" followed by IDL get 
PASS h5.dir: IDL set to "tr" should not throw 
PASS h5.dir: IDL set to "tr" followed by getAttribute() 
PASS h5.dir: IDL set to "tr" followed by IDL get 
PASS h5.dir: IDL set to "LTR" should not throw 
PASS h5.dir: IDL set to "LTR" followed by getAttribute() 
PASS h5.dir: IDL set to "LTR" followed by IDL get 
PASS h5.dir: IDL set to "rtl" should not throw 
PASS h5.dir: IDL set to "rtl" followed by getAttribute() 
PASS h5.dir: IDL set to "rtl" followed by IDL get 
PASS h5.dir: IDL set to "xrtl" should not throw 
PASS h5.dir: IDL set to "xrtl" followed by getAttribute() 
PASS h5.dir: IDL set to "xrtl" followed by IDL get 
PASS h5.dir: IDL set to "rtl\0" should not throw 
PASS h5.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS h5.dir: IDL set to "rtl\0" followed by IDL get 
PASS h5.dir: IDL set to "tl" should not throw 
PASS h5.dir: IDL set to "tl" followed by getAttribute() 
PASS h5.dir: IDL set to "tl" followed by IDL get 
PASS h5.dir: IDL set to "RTL" should not throw 
PASS h5.dir: IDL set to "RTL" followed by getAttribute() 
PASS h5.dir: IDL set to "RTL" followed by IDL get 
PASS h5.dir: IDL set to "auto" should not throw 
PASS h5.dir: IDL set to "auto" followed by getAttribute() 
PASS h5.dir: IDL set to "auto" followed by IDL get 
PASS h5.dir: IDL set to "xauto" should not throw 
PASS h5.dir: IDL set to "xauto" followed by getAttribute() 
PASS h5.dir: IDL set to "xauto" followed by IDL get 
PASS h5.dir: IDL set to "auto\0" should not throw 
PASS h5.dir: IDL set to "auto\0" followed by getAttribute() 
PASS h5.dir: IDL set to "auto\0" followed by IDL get 
PASS h5.dir: IDL set to "uto" should not throw 
PASS h5.dir: IDL set to "uto" followed by getAttribute() 
PASS h5.dir: IDL set to "uto" followed by IDL get 
PASS h5.dir: IDL set to "AUTO" should not throw 
PASS h5.dir: IDL set to "AUTO" followed by getAttribute() 
PASS h5.dir: IDL set to "AUTO" followed by IDL get 
PASS h5.className (<h5 class>): typeof IDL attribute 
PASS h5.className (<h5 class>): IDL get with DOM attribute unset 
PASS h5.className (<h5 class>): setAttribute() to "" followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to "" followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to undefined followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to undefined followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to 7 followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to 7 followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to 1.5 followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to 1.5 followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to true followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to true followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to false followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to false followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to NaN followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to NaN followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to Infinity followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to Infinity followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to -Infinity followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to -Infinity followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to "\0" followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to "\0" followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to null followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to null followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to object "test-toString" followed by IDL get 
PASS h5.className (<h5 class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h5.className (<h5 class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS h5.className (<h5 class>): IDL set to "" should not throw 
PASS h5.className (<h5 class>): IDL set to "" followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to "" followed by IDL get 
PASS h5.className (<h5 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h5.className (<h5 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h5.className (<h5 class>): IDL set to undefined should not throw 
PASS h5.className (<h5 class>): IDL set to undefined followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to undefined followed by IDL get 
PASS h5.className (<h5 class>): IDL set to 7 should not throw 
PASS h5.className (<h5 class>): IDL set to 7 followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to 7 followed by IDL get 
PASS h5.className (<h5 class>): IDL set to 1.5 should not throw 
PASS h5.className (<h5 class>): IDL set to 1.5 followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to 1.5 followed by IDL get 
PASS h5.className (<h5 class>): IDL set to true should not throw 
PASS h5.className (<h5 class>): IDL set to true followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to true followed by IDL get 
PASS h5.className (<h5 class>): IDL set to false should not throw 
PASS h5.className (<h5 class>): IDL set to false followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to false followed by IDL get 
PASS h5.className (<h5 class>): IDL set to object "[object Object]" should not throw 
PASS h5.className (<h5 class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to object "[object Object]" followed by IDL get 
PASS h5.className (<h5 class>): IDL set to NaN should not throw 
PASS h5.className (<h5 class>): IDL set to NaN followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to NaN followed by IDL get 
PASS h5.className (<h5 class>): IDL set to Infinity should not throw 
PASS h5.className (<h5 class>): IDL set to Infinity followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to Infinity followed by IDL get 
PASS h5.className (<h5 class>): IDL set to -Infinity should not throw 
PASS h5.className (<h5 class>): IDL set to -Infinity followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to -Infinity followed by IDL get 
PASS h5.className (<h5 class>): IDL set to "\0" should not throw 
PASS h5.className (<h5 class>): IDL set to "\0" followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to "\0" followed by IDL get 
PASS h5.className (<h5 class>): IDL set to null should not throw 
PASS h5.className (<h5 class>): IDL set to null followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to null followed by IDL get 
PASS h5.className (<h5 class>): IDL set to object "test-toString" should not throw 
PASS h5.className (<h5 class>): IDL set to object "test-toString" followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to object "test-toString" followed by IDL get 
PASS h5.className (<h5 class>): IDL set to object "test-valueOf" should not throw 
PASS h5.className (<h5 class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS h5.className (<h5 class>): IDL set to object "test-valueOf" followed by IDL get 
PASS h5.hidden: typeof IDL attribute 
PASS h5.hidden: IDL get with DOM attribute unset 
PASS h5.hidden: setAttribute() to "" followed by getAttribute() 
PASS h5.hidden: setAttribute() to "" followed by IDL get 
PASS h5.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS h5.hidden: setAttribute() to " foo " followed by IDL get 
PASS h5.hidden: setAttribute() to undefined followed by getAttribute() 
PASS h5.hidden: setAttribute() to undefined followed by IDL get 
PASS h5.hidden: setAttribute() to null followed by getAttribute() 
PASS h5.hidden: setAttribute() to null followed by IDL get 
PASS h5.hidden: setAttribute() to 7 followed by getAttribute() 
PASS h5.hidden: setAttribute() to 7 followed by IDL get 
PASS h5.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS h5.hidden: setAttribute() to 1.5 followed by IDL get 
PASS h5.hidden: setAttribute() to true followed by getAttribute() 
PASS h5.hidden: setAttribute() to true followed by IDL get 
PASS h5.hidden: setAttribute() to false followed by getAttribute() 
PASS h5.hidden: setAttribute() to false followed by IDL get 
PASS h5.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h5.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS h5.hidden: setAttribute() to NaN followed by getAttribute() 
PASS h5.hidden: setAttribute() to NaN followed by IDL get 
PASS h5.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS h5.hidden: setAttribute() to Infinity followed by IDL get 
PASS h5.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS h5.hidden: setAttribute() to -Infinity followed by IDL get 
PASS h5.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS h5.hidden: setAttribute() to "\0" followed by IDL get 
PASS h5.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h5.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS h5.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h5.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h5.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS h5.hidden: setAttribute() to "hidden" followed by IDL get 
PASS h5.hidden: IDL set to "" should not throw 
PASS h5.hidden: IDL set to "" followed by hasAttribute() 
PASS h5.hidden: IDL set to "" followed by IDL get 
PASS h5.hidden: IDL set to " foo " should not throw 
PASS h5.hidden: IDL set to " foo " followed by hasAttribute() 
PASS h5.hidden: IDL set to " foo " followed by IDL get 
PASS h5.hidden: IDL set to undefined should not throw 
PASS h5.hidden: IDL set to undefined followed by hasAttribute() 
PASS h5.hidden: IDL set to undefined followed by IDL get 
PASS h5.hidden: IDL set to null should not throw 
PASS h5.hidden: IDL set to null followed by hasAttribute() 
PASS h5.hidden: IDL set to null followed by IDL get 
PASS h5.hidden: IDL set to 7 should not throw 
PASS h5.hidden: IDL set to 7 followed by hasAttribute() 
PASS h5.hidden: IDL set to 7 followed by IDL get 
PASS h5.hidden: IDL set to 1.5 should not throw 
PASS h5.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS h5.hidden: IDL set to 1.5 followed by IDL get 
PASS h5.hidden: IDL set to true should not throw 
PASS h5.hidden: IDL set to true followed by hasAttribute() 
PASS h5.hidden: IDL set to true followed by IDL get 
PASS h5.hidden: IDL set to false should not throw 
PASS h5.hidden: IDL set to false followed by hasAttribute() 
PASS h5.hidden: IDL set to false followed by IDL get 
PASS h5.hidden: IDL set to object "[object Object]" should not throw 
PASS h5.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS h5.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS h5.hidden: IDL set to NaN should not throw 
PASS h5.hidden: IDL set to NaN followed by hasAttribute() 
PASS h5.hidden: IDL set to NaN followed by IDL get 
PASS h5.hidden: IDL set to Infinity should not throw 
PASS h5.hidden: IDL set to Infinity followed by hasAttribute() 
PASS h5.hidden: IDL set to Infinity followed by IDL get 
PASS h5.hidden: IDL set to -Infinity should not throw 
PASS h5.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS h5.hidden: IDL set to -Infinity followed by IDL get 
PASS h5.hidden: IDL set to "\0" should not throw 
PASS h5.hidden: IDL set to "\0" followed by hasAttribute() 
PASS h5.hidden: IDL set to "\0" followed by IDL get 
PASS h5.hidden: IDL set to object "test-toString" should not throw 
PASS h5.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS h5.hidden: IDL set to object "test-toString" followed by IDL get 
PASS h5.hidden: IDL set to object "test-valueOf" should not throw 
PASS h5.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS h5.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS h5.accessKey: typeof IDL attribute 
PASS h5.accessKey: IDL get with DOM attribute unset 
PASS h5.accessKey: setAttribute() to "" followed by getAttribute() 
PASS h5.accessKey: setAttribute() to "" followed by IDL get 
PASS h5.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h5.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h5.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS h5.accessKey: setAttribute() to undefined followed by IDL get 
PASS h5.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS h5.accessKey: setAttribute() to 7 followed by IDL get 
PASS h5.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS h5.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS h5.accessKey: setAttribute() to true followed by getAttribute() 
PASS h5.accessKey: setAttribute() to true followed by IDL get 
PASS h5.accessKey: setAttribute() to false followed by getAttribute() 
PASS h5.accessKey: setAttribute() to false followed by IDL get 
PASS h5.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h5.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS h5.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS h5.accessKey: setAttribute() to NaN followed by IDL get 
PASS h5.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS h5.accessKey: setAttribute() to Infinity followed by IDL get 
PASS h5.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS h5.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS h5.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS h5.accessKey: setAttribute() to "\0" followed by IDL get 
PASS h5.accessKey: setAttribute() to null followed by getAttribute() 
PASS h5.accessKey: setAttribute() to null followed by IDL get 
PASS h5.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h5.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS h5.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h5.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h5.accessKey: IDL set to "" should not throw 
PASS h5.accessKey: IDL set to "" followed by getAttribute() 
PASS h5.accessKey: IDL set to "" followed by IDL get 
PASS h5.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h5.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h5.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h5.accessKey: IDL set to undefined should not throw 
PASS h5.accessKey: IDL set to undefined followed by getAttribute() 
PASS h5.accessKey: IDL set to undefined followed by IDL get 
PASS h5.accessKey: IDL set to 7 should not throw 
PASS h5.accessKey: IDL set to 7 followed by getAttribute() 
PASS h5.accessKey: IDL set to 7 followed by IDL get 
PASS h5.accessKey: IDL set to 1.5 should not throw 
PASS h5.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS h5.accessKey: IDL set to 1.5 followed by IDL get 
PASS h5.accessKey: IDL set to true should not throw 
PASS h5.accessKey: IDL set to true followed by getAttribute() 
PASS h5.accessKey: IDL set to true followed by IDL get 
PASS h5.accessKey: IDL set to false should not throw 
PASS h5.accessKey: IDL set to false followed by getAttribute() 
PASS h5.accessKey: IDL set to false followed by IDL get 
PASS h5.accessKey: IDL set to object "[object Object]" should not throw 
PASS h5.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS h5.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS h5.accessKey: IDL set to NaN should not throw 
PASS h5.accessKey: IDL set to NaN followed by getAttribute() 
PASS h5.accessKey: IDL set to NaN followed by IDL get 
PASS h5.accessKey: IDL set to Infinity should not throw 
PASS h5.accessKey: IDL set to Infinity followed by getAttribute() 
PASS h5.accessKey: IDL set to Infinity followed by IDL get 
PASS h5.accessKey: IDL set to -Infinity should not throw 
PASS h5.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS h5.accessKey: IDL set to -Infinity followed by IDL get 
PASS h5.accessKey: IDL set to "\0" should not throw 
PASS h5.accessKey: IDL set to "\0" followed by getAttribute() 
PASS h5.accessKey: IDL set to "\0" followed by IDL get 
PASS h5.accessKey: IDL set to null should not throw 
PASS h5.accessKey: IDL set to null followed by getAttribute() 
PASS h5.accessKey: IDL set to null followed by IDL get 
PASS h5.accessKey: IDL set to object "test-toString" should not throw 
PASS h5.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS h5.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS h5.accessKey: IDL set to object "test-valueOf" should not throw 
PASS h5.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h5.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS h5.tabIndex: typeof IDL attribute 
PASS h5.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to -36 followed by IDL get 
PASS h5.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to -1 followed by IDL get 
PASS h5.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to 0 followed by IDL get 
PASS h5.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to 1 followed by IDL get 
PASS h5.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS h5.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS h5.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS h5.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS h5.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to "0" followed by IDL get 
PASS h5.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to "1" followed by IDL get 
PASS h5.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS h5.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS h5.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS h5.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS h5.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS h5.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS h5.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS h5.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS h5.tabIndex: IDL set to -36 should not throw 
PASS h5.tabIndex: IDL set to -36 followed by getAttribute() 
PASS h5.tabIndex: IDL set to -36 followed by IDL get 
PASS h5.tabIndex: IDL set to -1 should not throw 
PASS h5.tabIndex: IDL set to -1 followed by getAttribute() 
PASS h5.tabIndex: IDL set to -1 followed by IDL get 
PASS h5.tabIndex: IDL set to 0 should not throw 
PASS h5.tabIndex: IDL set to 0 followed by getAttribute() 
PASS h5.tabIndex: IDL set to 0 followed by IDL get 
PASS h5.tabIndex: IDL set to 1 should not throw 
PASS h5.tabIndex: IDL set to 1 followed by getAttribute() 
PASS h5.tabIndex: IDL set to 1 followed by IDL get 
PASS h5.tabIndex: IDL set to 2147483647 should not throw 
PASS h5.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS h5.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS h5.tabIndex: IDL set to -2147483648 should not throw 
PASS h5.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS h5.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS h5.align: typeof IDL attribute 
PASS h5.align: IDL get with DOM attribute unset 
PASS h5.align: setAttribute() to "" followed by getAttribute() 
PASS h5.align: setAttribute() to "" followed by IDL get 
PASS h5.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h5.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h5.align: setAttribute() to undefined followed by getAttribute() 
PASS h5.align: setAttribute() to undefined followed by IDL get 
PASS h5.align: setAttribute() to 7 followed by getAttribute() 
PASS h5.align: setAttribute() to 7 followed by IDL get 
PASS h5.align: setAttribute() to 1.5 followed by getAttribute() 
PASS h5.align: setAttribute() to 1.5 followed by IDL get 
PASS h5.align: setAttribute() to true followed by getAttribute() 
PASS h5.align: setAttribute() to true followed by IDL get 
PASS h5.align: setAttribute() to false followed by getAttribute() 
PASS h5.align: setAttribute() to false followed by IDL get 
PASS h5.align: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h5.align: setAttribute() to object "[object Object]" followed by IDL get 
PASS h5.align: setAttribute() to NaN followed by getAttribute() 
PASS h5.align: setAttribute() to NaN followed by IDL get 
PASS h5.align: setAttribute() to Infinity followed by getAttribute() 
PASS h5.align: setAttribute() to Infinity followed by IDL get 
PASS h5.align: setAttribute() to -Infinity followed by getAttribute() 
PASS h5.align: setAttribute() to -Infinity followed by IDL get 
PASS h5.align: setAttribute() to "\0" followed by getAttribute() 
PASS h5.align: setAttribute() to "\0" followed by IDL get 
PASS h5.align: setAttribute() to null followed by getAttribute() 
PASS h5.align: setAttribute() to null followed by IDL get 
PASS h5.align: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h5.align: setAttribute() to object "test-toString" followed by IDL get 
PASS h5.align: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h5.align: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h5.align: IDL set to "" should not throw 
PASS h5.align: IDL set to "" followed by getAttribute() 
PASS h5.align: IDL set to "" followed by IDL get 
PASS h5.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h5.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h5.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h5.align: IDL set to undefined should not throw 
PASS h5.align: IDL set to undefined followed by getAttribute() 
PASS h5.align: IDL set to undefined followed by IDL get 
PASS h5.align: IDL set to 7 should not throw 
PASS h5.align: IDL set to 7 followed by getAttribute() 
PASS h5.align: IDL set to 7 followed by IDL get 
PASS h5.align: IDL set to 1.5 should not throw 
PASS h5.align: IDL set to 1.5 followed by getAttribute() 
PASS h5.align: IDL set to 1.5 followed by IDL get 
PASS h5.align: IDL set to true should not throw 
PASS h5.align: IDL set to true followed by getAttribute() 
PASS h5.align: IDL set to true followed by IDL get 
PASS h5.align: IDL set to false should not throw 
PASS h5.align: IDL set to false followed by getAttribute() 
PASS h5.align: IDL set to false followed by IDL get 
PASS h5.align: IDL set to object "[object Object]" should not throw 
PASS h5.align: IDL set to object "[object Object]" followed by getAttribute() 
PASS h5.align: IDL set to object "[object Object]" followed by IDL get 
PASS h5.align: IDL set to NaN should not throw 
PASS h5.align: IDL set to NaN followed by getAttribute() 
PASS h5.align: IDL set to NaN followed by IDL get 
PASS h5.align: IDL set to Infinity should not throw 
PASS h5.align: IDL set to Infinity followed by getAttribute() 
PASS h5.align: IDL set to Infinity followed by IDL get 
PASS h5.align: IDL set to -Infinity should not throw 
PASS h5.align: IDL set to -Infinity followed by getAttribute() 
PASS h5.align: IDL set to -Infinity followed by IDL get 
PASS h5.align: IDL set to "\0" should not throw 
PASS h5.align: IDL set to "\0" followed by getAttribute() 
PASS h5.align: IDL set to "\0" followed by IDL get 
PASS h5.align: IDL set to null should not throw 
PASS h5.align: IDL set to null followed by getAttribute() 
PASS h5.align: IDL set to null followed by IDL get 
PASS h5.align: IDL set to object "test-toString" should not throw 
PASS h5.align: IDL set to object "test-toString" followed by getAttribute() 
PASS h5.align: IDL set to object "test-toString" followed by IDL get 
PASS h5.align: IDL set to object "test-valueOf" should not throw 
PASS h5.align: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h5.align: IDL set to object "test-valueOf" followed by IDL get 
FAIL h5.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL h5.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS h5.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to null followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to true followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to false followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL h5.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h5.itemScope: IDL set to "" should not throw 
FAIL h5.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL h5.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS h5.itemScope: IDL set to " foo " should not throw 
PASS h5.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL h5.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS h5.itemScope: IDL set to undefined should not throw 
FAIL h5.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL h5.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS h5.itemScope: IDL set to null should not throw 
FAIL h5.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL h5.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS h5.itemScope: IDL set to 7 should not throw 
PASS h5.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL h5.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS h5.itemScope: IDL set to 1.5 should not throw 
PASS h5.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL h5.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS h5.itemScope: IDL set to true should not throw 
PASS h5.itemScope: IDL set to true followed by hasAttribute() 
PASS h5.itemScope: IDL set to true followed by IDL get 
PASS h5.itemScope: IDL set to false should not throw 
FAIL h5.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS h5.itemScope: IDL set to false followed by IDL get 
PASS h5.itemScope: IDL set to object "[object Object]" should not throw 
PASS h5.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL h5.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS h5.itemScope: IDL set to NaN should not throw 
FAIL h5.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL h5.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS h5.itemScope: IDL set to Infinity should not throw 
PASS h5.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL h5.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS h5.itemScope: IDL set to -Infinity should not throw 
PASS h5.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL h5.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS h5.itemScope: IDL set to "\0" should not throw 
PASS h5.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL h5.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS h5.itemScope: IDL set to object "test-toString" should not throw 
PASS h5.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL h5.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS h5.itemScope: IDL set to object "test-valueOf" should not throw 
PASS h5.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL h5.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL h5.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL h5.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS h5.itemId: setAttribute() to "" followed by getAttribute() 
FAIL h5.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h5.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL h5.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS h5.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL h5.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS h5.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL h5.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS h5.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL h5.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h5.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL h5.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS h5.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL h5.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS h5.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL h5.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS h5.itemId: setAttribute() to true followed by getAttribute() 
FAIL h5.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS h5.itemId: setAttribute() to false followed by getAttribute() 
FAIL h5.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS h5.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL h5.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS h5.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL h5.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS h5.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL h5.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS h5.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL h5.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS h5.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL h5.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h5.itemId: setAttribute() to null followed by getAttribute() 
FAIL h5.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS h5.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL h5.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS h5.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL h5.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS h5.itemId: IDL set to "" should not throw 
FAIL h5.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL h5.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS h5.itemId: IDL set to " foo " should not throw 
FAIL h5.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL h5.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS h5.itemId: IDL set to "http://site.example/" should not throw 
FAIL h5.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS h5.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS h5.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL h5.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL h5.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS h5.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL h5.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL h5.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS h5.itemId: IDL set to undefined should not throw 
FAIL h5.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL h5.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS h5.itemId: IDL set to 7 should not throw 
FAIL h5.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL h5.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS h5.itemId: IDL set to 1.5 should not throw 
FAIL h5.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL h5.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS h5.itemId: IDL set to true should not throw 
FAIL h5.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL h5.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS h5.itemId: IDL set to false should not throw 
FAIL h5.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL h5.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS h5.itemId: IDL set to object "[object Object]" should not throw 
FAIL h5.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL h5.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS h5.itemId: IDL set to NaN should not throw 
FAIL h5.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL h5.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS h5.itemId: IDL set to Infinity should not throw 
FAIL h5.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL h5.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS h5.itemId: IDL set to -Infinity should not throw 
FAIL h5.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL h5.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS h5.itemId: IDL set to "\0" should not throw 
FAIL h5.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL h5.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS h5.itemId: IDL set to null should not throw 
FAIL h5.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL h5.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS h5.itemId: IDL set to object "test-toString" should not throw 
FAIL h5.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL h5.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS h5.itemId: IDL set to object "test-valueOf" should not throw 
PASS h5.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL h5.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS h6.title: typeof IDL attribute 
PASS h6.title: IDL get with DOM attribute unset 
PASS h6.title: setAttribute() to "" followed by getAttribute() 
PASS h6.title: setAttribute() to "" followed by IDL get 
PASS h6.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h6.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h6.title: setAttribute() to undefined followed by getAttribute() 
PASS h6.title: setAttribute() to undefined followed by IDL get 
PASS h6.title: setAttribute() to 7 followed by getAttribute() 
PASS h6.title: setAttribute() to 7 followed by IDL get 
PASS h6.title: setAttribute() to 1.5 followed by getAttribute() 
PASS h6.title: setAttribute() to 1.5 followed by IDL get 
PASS h6.title: setAttribute() to true followed by getAttribute() 
PASS h6.title: setAttribute() to true followed by IDL get 
PASS h6.title: setAttribute() to false followed by getAttribute() 
PASS h6.title: setAttribute() to false followed by IDL get 
PASS h6.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h6.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS h6.title: setAttribute() to NaN followed by getAttribute() 
PASS h6.title: setAttribute() to NaN followed by IDL get 
PASS h6.title: setAttribute() to Infinity followed by getAttribute() 
PASS h6.title: setAttribute() to Infinity followed by IDL get 
PASS h6.title: setAttribute() to -Infinity followed by getAttribute() 
PASS h6.title: setAttribute() to -Infinity followed by IDL get 
PASS h6.title: setAttribute() to "\0" followed by getAttribute() 
PASS h6.title: setAttribute() to "\0" followed by IDL get 
PASS h6.title: setAttribute() to null followed by getAttribute() 
PASS h6.title: setAttribute() to null followed by IDL get 
PASS h6.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h6.title: setAttribute() to object "test-toString" followed by IDL get 
PASS h6.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h6.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h6.title: IDL set to "" should not throw 
PASS h6.title: IDL set to "" followed by getAttribute() 
PASS h6.title: IDL set to "" followed by IDL get 
PASS h6.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h6.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h6.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h6.title: IDL set to undefined should not throw 
PASS h6.title: IDL set to undefined followed by getAttribute() 
PASS h6.title: IDL set to undefined followed by IDL get 
PASS h6.title: IDL set to 7 should not throw 
PASS h6.title: IDL set to 7 followed by getAttribute() 
PASS h6.title: IDL set to 7 followed by IDL get 
PASS h6.title: IDL set to 1.5 should not throw 
PASS h6.title: IDL set to 1.5 followed by getAttribute() 
PASS h6.title: IDL set to 1.5 followed by IDL get 
PASS h6.title: IDL set to true should not throw 
PASS h6.title: IDL set to true followed by getAttribute() 
PASS h6.title: IDL set to true followed by IDL get 
PASS h6.title: IDL set to false should not throw 
PASS h6.title: IDL set to false followed by getAttribute() 
PASS h6.title: IDL set to false followed by IDL get 
PASS h6.title: IDL set to object "[object Object]" should not throw 
PASS h6.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS h6.title: IDL set to object "[object Object]" followed by IDL get 
PASS h6.title: IDL set to NaN should not throw 
PASS h6.title: IDL set to NaN followed by getAttribute() 
PASS h6.title: IDL set to NaN followed by IDL get 
PASS h6.title: IDL set to Infinity should not throw 
PASS h6.title: IDL set to Infinity followed by getAttribute() 
PASS h6.title: IDL set to Infinity followed by IDL get 
PASS h6.title: IDL set to -Infinity should not throw 
PASS h6.title: IDL set to -Infinity followed by getAttribute() 
PASS h6.title: IDL set to -Infinity followed by IDL get 
PASS h6.title: IDL set to "\0" should not throw 
PASS h6.title: IDL set to "\0" followed by getAttribute() 
PASS h6.title: IDL set to "\0" followed by IDL get 
PASS h6.title: IDL set to null should not throw 
PASS h6.title: IDL set to null followed by getAttribute() 
PASS h6.title: IDL set to null followed by IDL get 
PASS h6.title: IDL set to object "test-toString" should not throw 
PASS h6.title: IDL set to object "test-toString" followed by getAttribute() 
PASS h6.title: IDL set to object "test-toString" followed by IDL get 
PASS h6.title: IDL set to object "test-valueOf" should not throw 
PASS h6.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h6.title: IDL set to object "test-valueOf" followed by IDL get 
PASS h6.lang: typeof IDL attribute 
PASS h6.lang: IDL get with DOM attribute unset 
PASS h6.lang: setAttribute() to "" followed by getAttribute() 
PASS h6.lang: setAttribute() to "" followed by IDL get 
PASS h6.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h6.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h6.lang: setAttribute() to undefined followed by getAttribute() 
PASS h6.lang: setAttribute() to undefined followed by IDL get 
PASS h6.lang: setAttribute() to 7 followed by getAttribute() 
PASS h6.lang: setAttribute() to 7 followed by IDL get 
PASS h6.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS h6.lang: setAttribute() to 1.5 followed by IDL get 
PASS h6.lang: setAttribute() to true followed by getAttribute() 
PASS h6.lang: setAttribute() to true followed by IDL get 
PASS h6.lang: setAttribute() to false followed by getAttribute() 
PASS h6.lang: setAttribute() to false followed by IDL get 
PASS h6.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h6.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS h6.lang: setAttribute() to NaN followed by getAttribute() 
PASS h6.lang: setAttribute() to NaN followed by IDL get 
PASS h6.lang: setAttribute() to Infinity followed by getAttribute() 
PASS h6.lang: setAttribute() to Infinity followed by IDL get 
PASS h6.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS h6.lang: setAttribute() to -Infinity followed by IDL get 
PASS h6.lang: setAttribute() to "\0" followed by getAttribute() 
PASS h6.lang: setAttribute() to "\0" followed by IDL get 
PASS h6.lang: setAttribute() to null followed by getAttribute() 
PASS h6.lang: setAttribute() to null followed by IDL get 
PASS h6.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h6.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS h6.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h6.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h6.lang: IDL set to "" should not throw 
PASS h6.lang: IDL set to "" followed by getAttribute() 
PASS h6.lang: IDL set to "" followed by IDL get 
PASS h6.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h6.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h6.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h6.lang: IDL set to undefined should not throw 
PASS h6.lang: IDL set to undefined followed by getAttribute() 
PASS h6.lang: IDL set to undefined followed by IDL get 
PASS h6.lang: IDL set to 7 should not throw 
PASS h6.lang: IDL set to 7 followed by getAttribute() 
PASS h6.lang: IDL set to 7 followed by IDL get 
PASS h6.lang: IDL set to 1.5 should not throw 
PASS h6.lang: IDL set to 1.5 followed by getAttribute() 
PASS h6.lang: IDL set to 1.5 followed by IDL get 
PASS h6.lang: IDL set to true should not throw 
PASS h6.lang: IDL set to true followed by getAttribute() 
PASS h6.lang: IDL set to true followed by IDL get 
PASS h6.lang: IDL set to false should not throw 
PASS h6.lang: IDL set to false followed by getAttribute() 
PASS h6.lang: IDL set to false followed by IDL get 
PASS h6.lang: IDL set to object "[object Object]" should not throw 
PASS h6.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS h6.lang: IDL set to object "[object Object]" followed by IDL get 
PASS h6.lang: IDL set to NaN should not throw 
PASS h6.lang: IDL set to NaN followed by getAttribute() 
PASS h6.lang: IDL set to NaN followed by IDL get 
PASS h6.lang: IDL set to Infinity should not throw 
PASS h6.lang: IDL set to Infinity followed by getAttribute() 
PASS h6.lang: IDL set to Infinity followed by IDL get 
PASS h6.lang: IDL set to -Infinity should not throw 
PASS h6.lang: IDL set to -Infinity followed by getAttribute() 
PASS h6.lang: IDL set to -Infinity followed by IDL get 
PASS h6.lang: IDL set to "\0" should not throw 
PASS h6.lang: IDL set to "\0" followed by getAttribute() 
PASS h6.lang: IDL set to "\0" followed by IDL get 
PASS h6.lang: IDL set to null should not throw 
PASS h6.lang: IDL set to null followed by getAttribute() 
PASS h6.lang: IDL set to null followed by IDL get 
PASS h6.lang: IDL set to object "test-toString" should not throw 
PASS h6.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS h6.lang: IDL set to object "test-toString" followed by IDL get 
PASS h6.lang: IDL set to object "test-valueOf" should not throw 
PASS h6.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h6.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS h6.dir: typeof IDL attribute 
PASS h6.dir: IDL get with DOM attribute unset 
PASS h6.dir: setAttribute() to "" followed by getAttribute() 
PASS h6.dir: setAttribute() to "" followed by IDL get 
PASS h6.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h6.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h6.dir: setAttribute() to undefined followed by getAttribute() 
PASS h6.dir: setAttribute() to undefined followed by IDL get 
PASS h6.dir: setAttribute() to 7 followed by getAttribute() 
PASS h6.dir: setAttribute() to 7 followed by IDL get 
PASS h6.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS h6.dir: setAttribute() to 1.5 followed by IDL get 
PASS h6.dir: setAttribute() to true followed by getAttribute() 
PASS h6.dir: setAttribute() to true followed by IDL get 
PASS h6.dir: setAttribute() to false followed by getAttribute() 
PASS h6.dir: setAttribute() to false followed by IDL get 
PASS h6.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h6.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS h6.dir: setAttribute() to NaN followed by getAttribute() 
PASS h6.dir: setAttribute() to NaN followed by IDL get 
PASS h6.dir: setAttribute() to Infinity followed by getAttribute() 
PASS h6.dir: setAttribute() to Infinity followed by IDL get 
PASS h6.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS h6.dir: setAttribute() to -Infinity followed by IDL get 
PASS h6.dir: setAttribute() to "\0" followed by getAttribute() 
PASS h6.dir: setAttribute() to "\0" followed by IDL get 
PASS h6.dir: setAttribute() to null followed by getAttribute() 
PASS h6.dir: setAttribute() to null followed by IDL get 
PASS h6.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h6.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS h6.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h6.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h6.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS h6.dir: setAttribute() to "ltr" followed by IDL get 
PASS h6.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS h6.dir: setAttribute() to "xltr" followed by IDL get 
PASS h6.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS h6.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS h6.dir: setAttribute() to "tr" followed by getAttribute() 
PASS h6.dir: setAttribute() to "tr" followed by IDL get 
PASS h6.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS h6.dir: setAttribute() to "LTR" followed by IDL get 
PASS h6.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS h6.dir: setAttribute() to "rtl" followed by IDL get 
PASS h6.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS h6.dir: setAttribute() to "xrtl" followed by IDL get 
PASS h6.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS h6.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS h6.dir: setAttribute() to "tl" followed by getAttribute() 
PASS h6.dir: setAttribute() to "tl" followed by IDL get 
PASS h6.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS h6.dir: setAttribute() to "RTL" followed by IDL get 
PASS h6.dir: setAttribute() to "auto" followed by getAttribute() 
PASS h6.dir: setAttribute() to "auto" followed by IDL get 
PASS h6.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS h6.dir: setAttribute() to "xauto" followed by IDL get 
PASS h6.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS h6.dir: setAttribute() to "auto\0" followed by IDL get 
PASS h6.dir: setAttribute() to "uto" followed by getAttribute() 
PASS h6.dir: setAttribute() to "uto" followed by IDL get 
PASS h6.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS h6.dir: setAttribute() to "AUTO" followed by IDL get 
PASS h6.dir: IDL set to "" should not throw 
PASS h6.dir: IDL set to "" followed by getAttribute() 
PASS h6.dir: IDL set to "" followed by IDL get 
PASS h6.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h6.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h6.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h6.dir: IDL set to undefined should not throw 
PASS h6.dir: IDL set to undefined followed by getAttribute() 
PASS h6.dir: IDL set to undefined followed by IDL get 
PASS h6.dir: IDL set to 7 should not throw 
PASS h6.dir: IDL set to 7 followed by getAttribute() 
PASS h6.dir: IDL set to 7 followed by IDL get 
PASS h6.dir: IDL set to 1.5 should not throw 
PASS h6.dir: IDL set to 1.5 followed by getAttribute() 
PASS h6.dir: IDL set to 1.5 followed by IDL get 
PASS h6.dir: IDL set to true should not throw 
PASS h6.dir: IDL set to true followed by getAttribute() 
PASS h6.dir: IDL set to true followed by IDL get 
PASS h6.dir: IDL set to false should not throw 
PASS h6.dir: IDL set to false followed by getAttribute() 
PASS h6.dir: IDL set to false followed by IDL get 
PASS h6.dir: IDL set to object "[object Object]" should not throw 
PASS h6.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS h6.dir: IDL set to object "[object Object]" followed by IDL get 
PASS h6.dir: IDL set to NaN should not throw 
PASS h6.dir: IDL set to NaN followed by getAttribute() 
PASS h6.dir: IDL set to NaN followed by IDL get 
PASS h6.dir: IDL set to Infinity should not throw 
PASS h6.dir: IDL set to Infinity followed by getAttribute() 
PASS h6.dir: IDL set to Infinity followed by IDL get 
PASS h6.dir: IDL set to -Infinity should not throw 
PASS h6.dir: IDL set to -Infinity followed by getAttribute() 
PASS h6.dir: IDL set to -Infinity followed by IDL get 
PASS h6.dir: IDL set to "\0" should not throw 
PASS h6.dir: IDL set to "\0" followed by getAttribute() 
PASS h6.dir: IDL set to "\0" followed by IDL get 
PASS h6.dir: IDL set to null should not throw 
PASS h6.dir: IDL set to null followed by IDL get 
PASS h6.dir: IDL set to object "test-toString" should not throw 
PASS h6.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS h6.dir: IDL set to object "test-toString" followed by IDL get 
PASS h6.dir: IDL set to object "test-valueOf" should not throw 
PASS h6.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h6.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS h6.dir: IDL set to "ltr" should not throw 
PASS h6.dir: IDL set to "ltr" followed by getAttribute() 
PASS h6.dir: IDL set to "ltr" followed by IDL get 
PASS h6.dir: IDL set to "xltr" should not throw 
PASS h6.dir: IDL set to "xltr" followed by getAttribute() 
PASS h6.dir: IDL set to "xltr" followed by IDL get 
PASS h6.dir: IDL set to "ltr\0" should not throw 
PASS h6.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS h6.dir: IDL set to "ltr\0" followed by IDL get 
PASS h6.dir: IDL set to "tr" should not throw 
PASS h6.dir: IDL set to "tr" followed by getAttribute() 
PASS h6.dir: IDL set to "tr" followed by IDL get 
PASS h6.dir: IDL set to "LTR" should not throw 
PASS h6.dir: IDL set to "LTR" followed by getAttribute() 
PASS h6.dir: IDL set to "LTR" followed by IDL get 
PASS h6.dir: IDL set to "rtl" should not throw 
PASS h6.dir: IDL set to "rtl" followed by getAttribute() 
PASS h6.dir: IDL set to "rtl" followed by IDL get 
PASS h6.dir: IDL set to "xrtl" should not throw 
PASS h6.dir: IDL set to "xrtl" followed by getAttribute() 
PASS h6.dir: IDL set to "xrtl" followed by IDL get 
PASS h6.dir: IDL set to "rtl\0" should not throw 
PASS h6.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS h6.dir: IDL set to "rtl\0" followed by IDL get 
PASS h6.dir: IDL set to "tl" should not throw 
PASS h6.dir: IDL set to "tl" followed by getAttribute() 
PASS h6.dir: IDL set to "tl" followed by IDL get 
PASS h6.dir: IDL set to "RTL" should not throw 
PASS h6.dir: IDL set to "RTL" followed by getAttribute() 
PASS h6.dir: IDL set to "RTL" followed by IDL get 
PASS h6.dir: IDL set to "auto" should not throw 
PASS h6.dir: IDL set to "auto" followed by getAttribute() 
PASS h6.dir: IDL set to "auto" followed by IDL get 
PASS h6.dir: IDL set to "xauto" should not throw 
PASS h6.dir: IDL set to "xauto" followed by getAttribute() 
PASS h6.dir: IDL set to "xauto" followed by IDL get 
PASS h6.dir: IDL set to "auto\0" should not throw 
PASS h6.dir: IDL set to "auto\0" followed by getAttribute() 
PASS h6.dir: IDL set to "auto\0" followed by IDL get 
PASS h6.dir: IDL set to "uto" should not throw 
PASS h6.dir: IDL set to "uto" followed by getAttribute() 
PASS h6.dir: IDL set to "uto" followed by IDL get 
PASS h6.dir: IDL set to "AUTO" should not throw 
PASS h6.dir: IDL set to "AUTO" followed by getAttribute() 
PASS h6.dir: IDL set to "AUTO" followed by IDL get 
PASS h6.className (<h6 class>): typeof IDL attribute 
PASS h6.className (<h6 class>): IDL get with DOM attribute unset 
PASS h6.className (<h6 class>): setAttribute() to "" followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to "" followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to undefined followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to undefined followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to 7 followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to 7 followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to 1.5 followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to 1.5 followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to true followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to true followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to false followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to false followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to NaN followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to NaN followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to Infinity followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to Infinity followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to -Infinity followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to -Infinity followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to "\0" followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to "\0" followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to null followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to null followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to object "test-toString" followed by IDL get 
PASS h6.className (<h6 class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h6.className (<h6 class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS h6.className (<h6 class>): IDL set to "" should not throw 
PASS h6.className (<h6 class>): IDL set to "" followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to "" followed by IDL get 
PASS h6.className (<h6 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h6.className (<h6 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h6.className (<h6 class>): IDL set to undefined should not throw 
PASS h6.className (<h6 class>): IDL set to undefined followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to undefined followed by IDL get 
PASS h6.className (<h6 class>): IDL set to 7 should not throw 
PASS h6.className (<h6 class>): IDL set to 7 followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to 7 followed by IDL get 
PASS h6.className (<h6 class>): IDL set to 1.5 should not throw 
PASS h6.className (<h6 class>): IDL set to 1.5 followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to 1.5 followed by IDL get 
PASS h6.className (<h6 class>): IDL set to true should not throw 
PASS h6.className (<h6 class>): IDL set to true followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to true followed by IDL get 
PASS h6.className (<h6 class>): IDL set to false should not throw 
PASS h6.className (<h6 class>): IDL set to false followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to false followed by IDL get 
PASS h6.className (<h6 class>): IDL set to object "[object Object]" should not throw 
PASS h6.className (<h6 class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to object "[object Object]" followed by IDL get 
PASS h6.className (<h6 class>): IDL set to NaN should not throw 
PASS h6.className (<h6 class>): IDL set to NaN followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to NaN followed by IDL get 
PASS h6.className (<h6 class>): IDL set to Infinity should not throw 
PASS h6.className (<h6 class>): IDL set to Infinity followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to Infinity followed by IDL get 
PASS h6.className (<h6 class>): IDL set to -Infinity should not throw 
PASS h6.className (<h6 class>): IDL set to -Infinity followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to -Infinity followed by IDL get 
PASS h6.className (<h6 class>): IDL set to "\0" should not throw 
PASS h6.className (<h6 class>): IDL set to "\0" followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to "\0" followed by IDL get 
PASS h6.className (<h6 class>): IDL set to null should not throw 
PASS h6.className (<h6 class>): IDL set to null followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to null followed by IDL get 
PASS h6.className (<h6 class>): IDL set to object "test-toString" should not throw 
PASS h6.className (<h6 class>): IDL set to object "test-toString" followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to object "test-toString" followed by IDL get 
PASS h6.className (<h6 class>): IDL set to object "test-valueOf" should not throw 
PASS h6.className (<h6 class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS h6.className (<h6 class>): IDL set to object "test-valueOf" followed by IDL get 
PASS h6.hidden: typeof IDL attribute 
PASS h6.hidden: IDL get with DOM attribute unset 
PASS h6.hidden: setAttribute() to "" followed by getAttribute() 
PASS h6.hidden: setAttribute() to "" followed by IDL get 
PASS h6.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS h6.hidden: setAttribute() to " foo " followed by IDL get 
PASS h6.hidden: setAttribute() to undefined followed by getAttribute() 
PASS h6.hidden: setAttribute() to undefined followed by IDL get 
PASS h6.hidden: setAttribute() to null followed by getAttribute() 
PASS h6.hidden: setAttribute() to null followed by IDL get 
PASS h6.hidden: setAttribute() to 7 followed by getAttribute() 
PASS h6.hidden: setAttribute() to 7 followed by IDL get 
PASS h6.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS h6.hidden: setAttribute() to 1.5 followed by IDL get 
PASS h6.hidden: setAttribute() to true followed by getAttribute() 
PASS h6.hidden: setAttribute() to true followed by IDL get 
PASS h6.hidden: setAttribute() to false followed by getAttribute() 
PASS h6.hidden: setAttribute() to false followed by IDL get 
PASS h6.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h6.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS h6.hidden: setAttribute() to NaN followed by getAttribute() 
PASS h6.hidden: setAttribute() to NaN followed by IDL get 
PASS h6.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS h6.hidden: setAttribute() to Infinity followed by IDL get 
PASS h6.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS h6.hidden: setAttribute() to -Infinity followed by IDL get 
PASS h6.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS h6.hidden: setAttribute() to "\0" followed by IDL get 
PASS h6.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h6.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS h6.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h6.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h6.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS h6.hidden: setAttribute() to "hidden" followed by IDL get 
PASS h6.hidden: IDL set to "" should not throw 
PASS h6.hidden: IDL set to "" followed by hasAttribute() 
PASS h6.hidden: IDL set to "" followed by IDL get 
PASS h6.hidden: IDL set to " foo " should not throw 
PASS h6.hidden: IDL set to " foo " followed by hasAttribute() 
PASS h6.hidden: IDL set to " foo " followed by IDL get 
PASS h6.hidden: IDL set to undefined should not throw 
PASS h6.hidden: IDL set to undefined followed by hasAttribute() 
PASS h6.hidden: IDL set to undefined followed by IDL get 
PASS h6.hidden: IDL set to null should not throw 
PASS h6.hidden: IDL set to null followed by hasAttribute() 
PASS h6.hidden: IDL set to null followed by IDL get 
PASS h6.hidden: IDL set to 7 should not throw 
PASS h6.hidden: IDL set to 7 followed by hasAttribute() 
PASS h6.hidden: IDL set to 7 followed by IDL get 
PASS h6.hidden: IDL set to 1.5 should not throw 
PASS h6.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS h6.hidden: IDL set to 1.5 followed by IDL get 
PASS h6.hidden: IDL set to true should not throw 
PASS h6.hidden: IDL set to true followed by hasAttribute() 
PASS h6.hidden: IDL set to true followed by IDL get 
PASS h6.hidden: IDL set to false should not throw 
PASS h6.hidden: IDL set to false followed by hasAttribute() 
PASS h6.hidden: IDL set to false followed by IDL get 
PASS h6.hidden: IDL set to object "[object Object]" should not throw 
PASS h6.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS h6.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS h6.hidden: IDL set to NaN should not throw 
PASS h6.hidden: IDL set to NaN followed by hasAttribute() 
PASS h6.hidden: IDL set to NaN followed by IDL get 
PASS h6.hidden: IDL set to Infinity should not throw 
PASS h6.hidden: IDL set to Infinity followed by hasAttribute() 
PASS h6.hidden: IDL set to Infinity followed by IDL get 
PASS h6.hidden: IDL set to -Infinity should not throw 
PASS h6.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS h6.hidden: IDL set to -Infinity followed by IDL get 
PASS h6.hidden: IDL set to "\0" should not throw 
PASS h6.hidden: IDL set to "\0" followed by hasAttribute() 
PASS h6.hidden: IDL set to "\0" followed by IDL get 
PASS h6.hidden: IDL set to object "test-toString" should not throw 
PASS h6.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS h6.hidden: IDL set to object "test-toString" followed by IDL get 
PASS h6.hidden: IDL set to object "test-valueOf" should not throw 
PASS h6.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS h6.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS h6.accessKey: typeof IDL attribute 
PASS h6.accessKey: IDL get with DOM attribute unset 
PASS h6.accessKey: setAttribute() to "" followed by getAttribute() 
PASS h6.accessKey: setAttribute() to "" followed by IDL get 
PASS h6.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h6.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h6.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS h6.accessKey: setAttribute() to undefined followed by IDL get 
PASS h6.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS h6.accessKey: setAttribute() to 7 followed by IDL get 
PASS h6.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS h6.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS h6.accessKey: setAttribute() to true followed by getAttribute() 
PASS h6.accessKey: setAttribute() to true followed by IDL get 
PASS h6.accessKey: setAttribute() to false followed by getAttribute() 
PASS h6.accessKey: setAttribute() to false followed by IDL get 
PASS h6.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h6.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS h6.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS h6.accessKey: setAttribute() to NaN followed by IDL get 
PASS h6.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS h6.accessKey: setAttribute() to Infinity followed by IDL get 
PASS h6.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS h6.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS h6.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS h6.accessKey: setAttribute() to "\0" followed by IDL get 
PASS h6.accessKey: setAttribute() to null followed by getAttribute() 
PASS h6.accessKey: setAttribute() to null followed by IDL get 
PASS h6.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h6.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS h6.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h6.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h6.accessKey: IDL set to "" should not throw 
PASS h6.accessKey: IDL set to "" followed by getAttribute() 
PASS h6.accessKey: IDL set to "" followed by IDL get 
PASS h6.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h6.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h6.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h6.accessKey: IDL set to undefined should not throw 
PASS h6.accessKey: IDL set to undefined followed by getAttribute() 
PASS h6.accessKey: IDL set to undefined followed by IDL get 
PASS h6.accessKey: IDL set to 7 should not throw 
PASS h6.accessKey: IDL set to 7 followed by getAttribute() 
PASS h6.accessKey: IDL set to 7 followed by IDL get 
PASS h6.accessKey: IDL set to 1.5 should not throw 
PASS h6.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS h6.accessKey: IDL set to 1.5 followed by IDL get 
PASS h6.accessKey: IDL set to true should not throw 
PASS h6.accessKey: IDL set to true followed by getAttribute() 
PASS h6.accessKey: IDL set to true followed by IDL get 
PASS h6.accessKey: IDL set to false should not throw 
PASS h6.accessKey: IDL set to false followed by getAttribute() 
PASS h6.accessKey: IDL set to false followed by IDL get 
PASS h6.accessKey: IDL set to object "[object Object]" should not throw 
PASS h6.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS h6.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS h6.accessKey: IDL set to NaN should not throw 
PASS h6.accessKey: IDL set to NaN followed by getAttribute() 
PASS h6.accessKey: IDL set to NaN followed by IDL get 
PASS h6.accessKey: IDL set to Infinity should not throw 
PASS h6.accessKey: IDL set to Infinity followed by getAttribute() 
PASS h6.accessKey: IDL set to Infinity followed by IDL get 
PASS h6.accessKey: IDL set to -Infinity should not throw 
PASS h6.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS h6.accessKey: IDL set to -Infinity followed by IDL get 
PASS h6.accessKey: IDL set to "\0" should not throw 
PASS h6.accessKey: IDL set to "\0" followed by getAttribute() 
PASS h6.accessKey: IDL set to "\0" followed by IDL get 
PASS h6.accessKey: IDL set to null should not throw 
PASS h6.accessKey: IDL set to null followed by getAttribute() 
PASS h6.accessKey: IDL set to null followed by IDL get 
PASS h6.accessKey: IDL set to object "test-toString" should not throw 
PASS h6.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS h6.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS h6.accessKey: IDL set to object "test-valueOf" should not throw 
PASS h6.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h6.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS h6.tabIndex: typeof IDL attribute 
PASS h6.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to -36 followed by IDL get 
PASS h6.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to -1 followed by IDL get 
PASS h6.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to 0 followed by IDL get 
PASS h6.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to 1 followed by IDL get 
PASS h6.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS h6.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS h6.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS h6.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS h6.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to "0" followed by IDL get 
PASS h6.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to "1" followed by IDL get 
PASS h6.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS h6.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS h6.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS h6.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS h6.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS h6.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS h6.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS h6.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS h6.tabIndex: IDL set to -36 should not throw 
PASS h6.tabIndex: IDL set to -36 followed by getAttribute() 
PASS h6.tabIndex: IDL set to -36 followed by IDL get 
PASS h6.tabIndex: IDL set to -1 should not throw 
PASS h6.tabIndex: IDL set to -1 followed by getAttribute() 
PASS h6.tabIndex: IDL set to -1 followed by IDL get 
PASS h6.tabIndex: IDL set to 0 should not throw 
PASS h6.tabIndex: IDL set to 0 followed by getAttribute() 
PASS h6.tabIndex: IDL set to 0 followed by IDL get 
PASS h6.tabIndex: IDL set to 1 should not throw 
PASS h6.tabIndex: IDL set to 1 followed by getAttribute() 
PASS h6.tabIndex: IDL set to 1 followed by IDL get 
PASS h6.tabIndex: IDL set to 2147483647 should not throw 
PASS h6.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS h6.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS h6.tabIndex: IDL set to -2147483648 should not throw 
PASS h6.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS h6.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS h6.align: typeof IDL attribute 
PASS h6.align: IDL get with DOM attribute unset 
PASS h6.align: setAttribute() to "" followed by getAttribute() 
PASS h6.align: setAttribute() to "" followed by IDL get 
PASS h6.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h6.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h6.align: setAttribute() to undefined followed by getAttribute() 
PASS h6.align: setAttribute() to undefined followed by IDL get 
PASS h6.align: setAttribute() to 7 followed by getAttribute() 
PASS h6.align: setAttribute() to 7 followed by IDL get 
PASS h6.align: setAttribute() to 1.5 followed by getAttribute() 
PASS h6.align: setAttribute() to 1.5 followed by IDL get 
PASS h6.align: setAttribute() to true followed by getAttribute() 
PASS h6.align: setAttribute() to true followed by IDL get 
PASS h6.align: setAttribute() to false followed by getAttribute() 
PASS h6.align: setAttribute() to false followed by IDL get 
PASS h6.align: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS h6.align: setAttribute() to object "[object Object]" followed by IDL get 
PASS h6.align: setAttribute() to NaN followed by getAttribute() 
PASS h6.align: setAttribute() to NaN followed by IDL get 
PASS h6.align: setAttribute() to Infinity followed by getAttribute() 
PASS h6.align: setAttribute() to Infinity followed by IDL get 
PASS h6.align: setAttribute() to -Infinity followed by getAttribute() 
PASS h6.align: setAttribute() to -Infinity followed by IDL get 
PASS h6.align: setAttribute() to "\0" followed by getAttribute() 
PASS h6.align: setAttribute() to "\0" followed by IDL get 
PASS h6.align: setAttribute() to null followed by getAttribute() 
PASS h6.align: setAttribute() to null followed by IDL get 
PASS h6.align: setAttribute() to object "test-toString" followed by getAttribute() 
PASS h6.align: setAttribute() to object "test-toString" followed by IDL get 
PASS h6.align: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS h6.align: setAttribute() to object "test-valueOf" followed by IDL get 
PASS h6.align: IDL set to "" should not throw 
PASS h6.align: IDL set to "" followed by getAttribute() 
PASS h6.align: IDL set to "" followed by IDL get 
PASS h6.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS h6.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS h6.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS h6.align: IDL set to undefined should not throw 
PASS h6.align: IDL set to undefined followed by getAttribute() 
PASS h6.align: IDL set to undefined followed by IDL get 
PASS h6.align: IDL set to 7 should not throw 
PASS h6.align: IDL set to 7 followed by getAttribute() 
PASS h6.align: IDL set to 7 followed by IDL get 
PASS h6.align: IDL set to 1.5 should not throw 
PASS h6.align: IDL set to 1.5 followed by getAttribute() 
PASS h6.align: IDL set to 1.5 followed by IDL get 
PASS h6.align: IDL set to true should not throw 
PASS h6.align: IDL set to true followed by getAttribute() 
PASS h6.align: IDL set to true followed by IDL get 
PASS h6.align: IDL set to false should not throw 
PASS h6.align: IDL set to false followed by getAttribute() 
PASS h6.align: IDL set to false followed by IDL get 
PASS h6.align: IDL set to object "[object Object]" should not throw 
PASS h6.align: IDL set to object "[object Object]" followed by getAttribute() 
PASS h6.align: IDL set to object "[object Object]" followed by IDL get 
PASS h6.align: IDL set to NaN should not throw 
PASS h6.align: IDL set to NaN followed by getAttribute() 
PASS h6.align: IDL set to NaN followed by IDL get 
PASS h6.align: IDL set to Infinity should not throw 
PASS h6.align: IDL set to Infinity followed by getAttribute() 
PASS h6.align: IDL set to Infinity followed by IDL get 
PASS h6.align: IDL set to -Infinity should not throw 
PASS h6.align: IDL set to -Infinity followed by getAttribute() 
PASS h6.align: IDL set to -Infinity followed by IDL get 
PASS h6.align: IDL set to "\0" should not throw 
PASS h6.align: IDL set to "\0" followed by getAttribute() 
PASS h6.align: IDL set to "\0" followed by IDL get 
PASS h6.align: IDL set to null should not throw 
PASS h6.align: IDL set to null followed by getAttribute() 
PASS h6.align: IDL set to null followed by IDL get 
PASS h6.align: IDL set to object "test-toString" should not throw 
PASS h6.align: IDL set to object "test-toString" followed by getAttribute() 
PASS h6.align: IDL set to object "test-toString" followed by IDL get 
PASS h6.align: IDL set to object "test-valueOf" should not throw 
PASS h6.align: IDL set to object "test-valueOf" followed by getAttribute() 
PASS h6.align: IDL set to object "test-valueOf" followed by IDL get 
FAIL h6.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL h6.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS h6.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to null followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to true followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to false followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL h6.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS h6.itemScope: IDL set to "" should not throw 
FAIL h6.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL h6.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS h6.itemScope: IDL set to " foo " should not throw 
PASS h6.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL h6.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS h6.itemScope: IDL set to undefined should not throw 
FAIL h6.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL h6.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS h6.itemScope: IDL set to null should not throw 
FAIL h6.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL h6.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS h6.itemScope: IDL set to 7 should not throw 
PASS h6.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL h6.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS h6.itemScope: IDL set to 1.5 should not throw 
PASS h6.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL h6.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS h6.itemScope: IDL set to true should not throw 
PASS h6.itemScope: IDL set to true followed by hasAttribute() 
PASS h6.itemScope: IDL set to true followed by IDL get 
PASS h6.itemScope: IDL set to false should not throw 
FAIL h6.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS h6.itemScope: IDL set to false followed by IDL get 
PASS h6.itemScope: IDL set to object "[object Object]" should not throw 
PASS h6.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL h6.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS h6.itemScope: IDL set to NaN should not throw 
FAIL h6.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL h6.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS h6.itemScope: IDL set to Infinity should not throw 
PASS h6.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL h6.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS h6.itemScope: IDL set to -Infinity should not throw 
PASS h6.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL h6.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS h6.itemScope: IDL set to "\0" should not throw 
PASS h6.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL h6.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS h6.itemScope: IDL set to object "test-toString" should not throw 
PASS h6.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL h6.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS h6.itemScope: IDL set to object "test-valueOf" should not throw 
PASS h6.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL h6.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL h6.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL h6.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS h6.itemId: setAttribute() to "" followed by getAttribute() 
FAIL h6.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h6.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL h6.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS h6.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL h6.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS h6.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL h6.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS h6.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL h6.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h6.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL h6.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS h6.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL h6.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS h6.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL h6.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS h6.itemId: setAttribute() to true followed by getAttribute() 
FAIL h6.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS h6.itemId: setAttribute() to false followed by getAttribute() 
FAIL h6.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS h6.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL h6.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS h6.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL h6.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS h6.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL h6.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS h6.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL h6.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS h6.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL h6.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS h6.itemId: setAttribute() to null followed by getAttribute() 
FAIL h6.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS h6.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL h6.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS h6.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL h6.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS h6.itemId: IDL set to "" should not throw 
FAIL h6.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL h6.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS h6.itemId: IDL set to " foo " should not throw 
FAIL h6.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL h6.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS h6.itemId: IDL set to "http://site.example/" should not throw 
FAIL h6.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS h6.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS h6.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL h6.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL h6.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS h6.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL h6.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL h6.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS h6.itemId: IDL set to undefined should not throw 
FAIL h6.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL h6.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS h6.itemId: IDL set to 7 should not throw 
FAIL h6.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL h6.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS h6.itemId: IDL set to 1.5 should not throw 
FAIL h6.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL h6.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS h6.itemId: IDL set to true should not throw 
FAIL h6.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL h6.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS h6.itemId: IDL set to false should not throw 
FAIL h6.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL h6.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS h6.itemId: IDL set to object "[object Object]" should not throw 
FAIL h6.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL h6.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS h6.itemId: IDL set to NaN should not throw 
FAIL h6.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL h6.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS h6.itemId: IDL set to Infinity should not throw 
FAIL h6.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL h6.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS h6.itemId: IDL set to -Infinity should not throw 
FAIL h6.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL h6.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS h6.itemId: IDL set to "\0" should not throw 
FAIL h6.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL h6.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS h6.itemId: IDL set to null should not throw 
FAIL h6.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL h6.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS h6.itemId: IDL set to object "test-toString" should not throw 
FAIL h6.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL h6.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS h6.itemId: IDL set to object "test-valueOf" should not throw 
PASS h6.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL h6.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS hgroup.title: typeof IDL attribute 
PASS hgroup.title: IDL get with DOM attribute unset 
PASS hgroup.title: setAttribute() to "" followed by getAttribute() 
PASS hgroup.title: setAttribute() to "" followed by IDL get 
PASS hgroup.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hgroup.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hgroup.title: setAttribute() to undefined followed by getAttribute() 
PASS hgroup.title: setAttribute() to undefined followed by IDL get 
PASS hgroup.title: setAttribute() to 7 followed by getAttribute() 
PASS hgroup.title: setAttribute() to 7 followed by IDL get 
PASS hgroup.title: setAttribute() to 1.5 followed by getAttribute() 
PASS hgroup.title: setAttribute() to 1.5 followed by IDL get 
PASS hgroup.title: setAttribute() to true followed by getAttribute() 
PASS hgroup.title: setAttribute() to true followed by IDL get 
PASS hgroup.title: setAttribute() to false followed by getAttribute() 
PASS hgroup.title: setAttribute() to false followed by IDL get 
PASS hgroup.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hgroup.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS hgroup.title: setAttribute() to NaN followed by getAttribute() 
PASS hgroup.title: setAttribute() to NaN followed by IDL get 
PASS hgroup.title: setAttribute() to Infinity followed by getAttribute() 
PASS hgroup.title: setAttribute() to Infinity followed by IDL get 
PASS hgroup.title: setAttribute() to -Infinity followed by getAttribute() 
PASS hgroup.title: setAttribute() to -Infinity followed by IDL get 
PASS hgroup.title: setAttribute() to "\0" followed by getAttribute() 
PASS hgroup.title: setAttribute() to "\0" followed by IDL get 
PASS hgroup.title: setAttribute() to null followed by getAttribute() 
PASS hgroup.title: setAttribute() to null followed by IDL get 
PASS hgroup.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hgroup.title: setAttribute() to object "test-toString" followed by IDL get 
PASS hgroup.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hgroup.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hgroup.title: IDL set to "" should not throw 
PASS hgroup.title: IDL set to "" followed by getAttribute() 
PASS hgroup.title: IDL set to "" followed by IDL get 
PASS hgroup.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hgroup.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hgroup.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hgroup.title: IDL set to undefined should not throw 
PASS hgroup.title: IDL set to undefined followed by getAttribute() 
PASS hgroup.title: IDL set to undefined followed by IDL get 
PASS hgroup.title: IDL set to 7 should not throw 
PASS hgroup.title: IDL set to 7 followed by getAttribute() 
PASS hgroup.title: IDL set to 7 followed by IDL get 
PASS hgroup.title: IDL set to 1.5 should not throw 
PASS hgroup.title: IDL set to 1.5 followed by getAttribute() 
PASS hgroup.title: IDL set to 1.5 followed by IDL get 
PASS hgroup.title: IDL set to true should not throw 
PASS hgroup.title: IDL set to true followed by getAttribute() 
PASS hgroup.title: IDL set to true followed by IDL get 
PASS hgroup.title: IDL set to false should not throw 
PASS hgroup.title: IDL set to false followed by getAttribute() 
PASS hgroup.title: IDL set to false followed by IDL get 
PASS hgroup.title: IDL set to object "[object Object]" should not throw 
PASS hgroup.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS hgroup.title: IDL set to object "[object Object]" followed by IDL get 
PASS hgroup.title: IDL set to NaN should not throw 
PASS hgroup.title: IDL set to NaN followed by getAttribute() 
PASS hgroup.title: IDL set to NaN followed by IDL get 
PASS hgroup.title: IDL set to Infinity should not throw 
PASS hgroup.title: IDL set to Infinity followed by getAttribute() 
PASS hgroup.title: IDL set to Infinity followed by IDL get 
PASS hgroup.title: IDL set to -Infinity should not throw 
PASS hgroup.title: IDL set to -Infinity followed by getAttribute() 
PASS hgroup.title: IDL set to -Infinity followed by IDL get 
PASS hgroup.title: IDL set to "\0" should not throw 
PASS hgroup.title: IDL set to "\0" followed by getAttribute() 
PASS hgroup.title: IDL set to "\0" followed by IDL get 
PASS hgroup.title: IDL set to null should not throw 
PASS hgroup.title: IDL set to null followed by getAttribute() 
PASS hgroup.title: IDL set to null followed by IDL get 
PASS hgroup.title: IDL set to object "test-toString" should not throw 
PASS hgroup.title: IDL set to object "test-toString" followed by getAttribute() 
PASS hgroup.title: IDL set to object "test-toString" followed by IDL get 
PASS hgroup.title: IDL set to object "test-valueOf" should not throw 
PASS hgroup.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS hgroup.title: IDL set to object "test-valueOf" followed by IDL get 
PASS hgroup.lang: typeof IDL attribute 
PASS hgroup.lang: IDL get with DOM attribute unset 
PASS hgroup.lang: setAttribute() to "" followed by getAttribute() 
PASS hgroup.lang: setAttribute() to "" followed by IDL get 
PASS hgroup.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hgroup.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hgroup.lang: setAttribute() to undefined followed by getAttribute() 
PASS hgroup.lang: setAttribute() to undefined followed by IDL get 
PASS hgroup.lang: setAttribute() to 7 followed by getAttribute() 
PASS hgroup.lang: setAttribute() to 7 followed by IDL get 
PASS hgroup.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS hgroup.lang: setAttribute() to 1.5 followed by IDL get 
PASS hgroup.lang: setAttribute() to true followed by getAttribute() 
PASS hgroup.lang: setAttribute() to true followed by IDL get 
PASS hgroup.lang: setAttribute() to false followed by getAttribute() 
PASS hgroup.lang: setAttribute() to false followed by IDL get 
PASS hgroup.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hgroup.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS hgroup.lang: setAttribute() to NaN followed by getAttribute() 
PASS hgroup.lang: setAttribute() to NaN followed by IDL get 
PASS hgroup.lang: setAttribute() to Infinity followed by getAttribute() 
PASS hgroup.lang: setAttribute() to Infinity followed by IDL get 
PASS hgroup.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS hgroup.lang: setAttribute() to -Infinity followed by IDL get 
PASS hgroup.lang: setAttribute() to "\0" followed by getAttribute() 
PASS hgroup.lang: setAttribute() to "\0" followed by IDL get 
PASS hgroup.lang: setAttribute() to null followed by getAttribute() 
PASS hgroup.lang: setAttribute() to null followed by IDL get 
PASS hgroup.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hgroup.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS hgroup.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hgroup.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hgroup.lang: IDL set to "" should not throw 
PASS hgroup.lang: IDL set to "" followed by getAttribute() 
PASS hgroup.lang: IDL set to "" followed by IDL get 
PASS hgroup.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hgroup.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hgroup.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hgroup.lang: IDL set to undefined should not throw 
PASS hgroup.lang: IDL set to undefined followed by getAttribute() 
PASS hgroup.lang: IDL set to undefined followed by IDL get 
PASS hgroup.lang: IDL set to 7 should not throw 
PASS hgroup.lang: IDL set to 7 followed by getAttribute() 
PASS hgroup.lang: IDL set to 7 followed by IDL get 
PASS hgroup.lang: IDL set to 1.5 should not throw 
PASS hgroup.lang: IDL set to 1.5 followed by getAttribute() 
PASS hgroup.lang: IDL set to 1.5 followed by IDL get 
PASS hgroup.lang: IDL set to true should not throw 
PASS hgroup.lang: IDL set to true followed by getAttribute() 
PASS hgroup.lang: IDL set to true followed by IDL get 
PASS hgroup.lang: IDL set to false should not throw 
PASS hgroup.lang: IDL set to false followed by getAttribute() 
PASS hgroup.lang: IDL set to false followed by IDL get 
PASS hgroup.lang: IDL set to object "[object Object]" should not throw 
PASS hgroup.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS hgroup.lang: IDL set to object "[object Object]" followed by IDL get 
PASS hgroup.lang: IDL set to NaN should not throw 
PASS hgroup.lang: IDL set to NaN followed by getAttribute() 
PASS hgroup.lang: IDL set to NaN followed by IDL get 
PASS hgroup.lang: IDL set to Infinity should not throw 
PASS hgroup.lang: IDL set to Infinity followed by getAttribute() 
PASS hgroup.lang: IDL set to Infinity followed by IDL get 
PASS hgroup.lang: IDL set to -Infinity should not throw 
PASS hgroup.lang: IDL set to -Infinity followed by getAttribute() 
PASS hgroup.lang: IDL set to -Infinity followed by IDL get 
PASS hgroup.lang: IDL set to "\0" should not throw 
PASS hgroup.lang: IDL set to "\0" followed by getAttribute() 
PASS hgroup.lang: IDL set to "\0" followed by IDL get 
PASS hgroup.lang: IDL set to null should not throw 
PASS hgroup.lang: IDL set to null followed by getAttribute() 
PASS hgroup.lang: IDL set to null followed by IDL get 
PASS hgroup.lang: IDL set to object "test-toString" should not throw 
PASS hgroup.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS hgroup.lang: IDL set to object "test-toString" followed by IDL get 
PASS hgroup.lang: IDL set to object "test-valueOf" should not throw 
PASS hgroup.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS hgroup.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS hgroup.dir: typeof IDL attribute 
PASS hgroup.dir: IDL get with DOM attribute unset 
PASS hgroup.dir: setAttribute() to "" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "" followed by IDL get 
PASS hgroup.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hgroup.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hgroup.dir: setAttribute() to undefined followed by getAttribute() 
PASS hgroup.dir: setAttribute() to undefined followed by IDL get 
PASS hgroup.dir: setAttribute() to 7 followed by getAttribute() 
PASS hgroup.dir: setAttribute() to 7 followed by IDL get 
PASS hgroup.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS hgroup.dir: setAttribute() to 1.5 followed by IDL get 
PASS hgroup.dir: setAttribute() to true followed by getAttribute() 
PASS hgroup.dir: setAttribute() to true followed by IDL get 
PASS hgroup.dir: setAttribute() to false followed by getAttribute() 
PASS hgroup.dir: setAttribute() to false followed by IDL get 
PASS hgroup.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS hgroup.dir: setAttribute() to NaN followed by getAttribute() 
PASS hgroup.dir: setAttribute() to NaN followed by IDL get 
PASS hgroup.dir: setAttribute() to Infinity followed by getAttribute() 
PASS hgroup.dir: setAttribute() to Infinity followed by IDL get 
PASS hgroup.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS hgroup.dir: setAttribute() to -Infinity followed by IDL get 
PASS hgroup.dir: setAttribute() to "\0" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "\0" followed by IDL get 
PASS hgroup.dir: setAttribute() to null followed by getAttribute() 
PASS hgroup.dir: setAttribute() to null followed by IDL get 
PASS hgroup.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS hgroup.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hgroup.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "ltr" followed by IDL get 
PASS hgroup.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "xltr" followed by IDL get 
PASS hgroup.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS hgroup.dir: setAttribute() to "tr" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "tr" followed by IDL get 
PASS hgroup.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "LTR" followed by IDL get 
PASS hgroup.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "rtl" followed by IDL get 
PASS hgroup.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "xrtl" followed by IDL get 
PASS hgroup.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS hgroup.dir: setAttribute() to "tl" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "tl" followed by IDL get 
PASS hgroup.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "RTL" followed by IDL get 
PASS hgroup.dir: setAttribute() to "auto" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "auto" followed by IDL get 
PASS hgroup.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "xauto" followed by IDL get 
PASS hgroup.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "auto\0" followed by IDL get 
PASS hgroup.dir: setAttribute() to "uto" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "uto" followed by IDL get 
PASS hgroup.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS hgroup.dir: setAttribute() to "AUTO" followed by IDL get 
PASS hgroup.dir: IDL set to "" should not throw 
PASS hgroup.dir: IDL set to "" followed by getAttribute() 
PASS hgroup.dir: IDL set to "" followed by IDL get 
PASS hgroup.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hgroup.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hgroup.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hgroup.dir: IDL set to undefined should not throw 
PASS hgroup.dir: IDL set to undefined followed by getAttribute() 
PASS hgroup.dir: IDL set to undefined followed by IDL get 
PASS hgroup.dir: IDL set to 7 should not throw 
PASS hgroup.dir: IDL set to 7 followed by getAttribute() 
PASS hgroup.dir: IDL set to 7 followed by IDL get 
PASS hgroup.dir: IDL set to 1.5 should not throw 
PASS hgroup.dir: IDL set to 1.5 followed by getAttribute() 
PASS hgroup.dir: IDL set to 1.5 followed by IDL get 
PASS hgroup.dir: IDL set to true should not throw 
PASS hgroup.dir: IDL set to true followed by getAttribute() 
PASS hgroup.dir: IDL set to true followed by IDL get 
PASS hgroup.dir: IDL set to false should not throw 
PASS hgroup.dir: IDL set to false followed by getAttribute() 
PASS hgroup.dir: IDL set to false followed by IDL get 
PASS hgroup.dir: IDL set to object "[object Object]" should not throw 
PASS hgroup.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS hgroup.dir: IDL set to object "[object Object]" followed by IDL get 
PASS hgroup.dir: IDL set to NaN should not throw 
PASS hgroup.dir: IDL set to NaN followed by getAttribute() 
PASS hgroup.dir: IDL set to NaN followed by IDL get 
PASS hgroup.dir: IDL set to Infinity should not throw 
PASS hgroup.dir: IDL set to Infinity followed by getAttribute() 
PASS hgroup.dir: IDL set to Infinity followed by IDL get 
PASS hgroup.dir: IDL set to -Infinity should not throw 
PASS hgroup.dir: IDL set to -Infinity followed by getAttribute() 
PASS hgroup.dir: IDL set to -Infinity followed by IDL get 
PASS hgroup.dir: IDL set to "\0" should not throw 
PASS hgroup.dir: IDL set to "\0" followed by getAttribute() 
PASS hgroup.dir: IDL set to "\0" followed by IDL get 
PASS hgroup.dir: IDL set to null should not throw 
PASS hgroup.dir: IDL set to null followed by IDL get 
PASS hgroup.dir: IDL set to object "test-toString" should not throw 
PASS hgroup.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS hgroup.dir: IDL set to object "test-toString" followed by IDL get 
PASS hgroup.dir: IDL set to object "test-valueOf" should not throw 
PASS hgroup.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS hgroup.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS hgroup.dir: IDL set to "ltr" should not throw 
PASS hgroup.dir: IDL set to "ltr" followed by getAttribute() 
PASS hgroup.dir: IDL set to "ltr" followed by IDL get 
PASS hgroup.dir: IDL set to "xltr" should not throw 
PASS hgroup.dir: IDL set to "xltr" followed by getAttribute() 
PASS hgroup.dir: IDL set to "xltr" followed by IDL get 
PASS hgroup.dir: IDL set to "ltr\0" should not throw 
PASS hgroup.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS hgroup.dir: IDL set to "ltr\0" followed by IDL get 
PASS hgroup.dir: IDL set to "tr" should not throw 
PASS hgroup.dir: IDL set to "tr" followed by getAttribute() 
PASS hgroup.dir: IDL set to "tr" followed by IDL get 
PASS hgroup.dir: IDL set to "LTR" should not throw 
PASS hgroup.dir: IDL set to "LTR" followed by getAttribute() 
PASS hgroup.dir: IDL set to "LTR" followed by IDL get 
PASS hgroup.dir: IDL set to "rtl" should not throw 
PASS hgroup.dir: IDL set to "rtl" followed by getAttribute() 
PASS hgroup.dir: IDL set to "rtl" followed by IDL get 
PASS hgroup.dir: IDL set to "xrtl" should not throw 
PASS hgroup.dir: IDL set to "xrtl" followed by getAttribute() 
PASS hgroup.dir: IDL set to "xrtl" followed by IDL get 
PASS hgroup.dir: IDL set to "rtl\0" should not throw 
PASS hgroup.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS hgroup.dir: IDL set to "rtl\0" followed by IDL get 
PASS hgroup.dir: IDL set to "tl" should not throw 
PASS hgroup.dir: IDL set to "tl" followed by getAttribute() 
PASS hgroup.dir: IDL set to "tl" followed by IDL get 
PASS hgroup.dir: IDL set to "RTL" should not throw 
PASS hgroup.dir: IDL set to "RTL" followed by getAttribute() 
PASS hgroup.dir: IDL set to "RTL" followed by IDL get 
PASS hgroup.dir: IDL set to "auto" should not throw 
PASS hgroup.dir: IDL set to "auto" followed by getAttribute() 
PASS hgroup.dir: IDL set to "auto" followed by IDL get 
PASS hgroup.dir: IDL set to "xauto" should not throw 
PASS hgroup.dir: IDL set to "xauto" followed by getAttribute() 
PASS hgroup.dir: IDL set to "xauto" followed by IDL get 
PASS hgroup.dir: IDL set to "auto\0" should not throw 
PASS hgroup.dir: IDL set to "auto\0" followed by getAttribute() 
PASS hgroup.dir: IDL set to "auto\0" followed by IDL get 
PASS hgroup.dir: IDL set to "uto" should not throw 
PASS hgroup.dir: IDL set to "uto" followed by getAttribute() 
PASS hgroup.dir: IDL set to "uto" followed by IDL get 
PASS hgroup.dir: IDL set to "AUTO" should not throw 
PASS hgroup.dir: IDL set to "AUTO" followed by getAttribute() 
PASS hgroup.dir: IDL set to "AUTO" followed by IDL get 
PASS hgroup.className (<hgroup class>): typeof IDL attribute 
PASS hgroup.className (<hgroup class>): IDL get with DOM attribute unset 
PASS hgroup.className (<hgroup class>): setAttribute() to "" followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to "" followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to undefined followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to undefined followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to 7 followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to 7 followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to 1.5 followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to 1.5 followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to true followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to true followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to false followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to false followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to NaN followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to NaN followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to Infinity followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to Infinity followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to -Infinity followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to -Infinity followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to "\0" followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to "\0" followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to null followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to null followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to object "test-toString" followed by IDL get 
PASS hgroup.className (<hgroup class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hgroup.className (<hgroup class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to "" should not throw 
PASS hgroup.className (<hgroup class>): IDL set to "" followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to "" followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hgroup.className (<hgroup class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to undefined should not throw 
PASS hgroup.className (<hgroup class>): IDL set to undefined followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to undefined followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to 7 should not throw 
PASS hgroup.className (<hgroup class>): IDL set to 7 followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to 7 followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to 1.5 should not throw 
PASS hgroup.className (<hgroup class>): IDL set to 1.5 followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to 1.5 followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to true should not throw 
PASS hgroup.className (<hgroup class>): IDL set to true followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to true followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to false should not throw 
PASS hgroup.className (<hgroup class>): IDL set to false followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to false followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to object "[object Object]" should not throw 
PASS hgroup.className (<hgroup class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to object "[object Object]" followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to NaN should not throw 
PASS hgroup.className (<hgroup class>): IDL set to NaN followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to NaN followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to Infinity should not throw 
PASS hgroup.className (<hgroup class>): IDL set to Infinity followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to Infinity followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to -Infinity should not throw 
PASS hgroup.className (<hgroup class>): IDL set to -Infinity followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to -Infinity followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to "\0" should not throw 
PASS hgroup.className (<hgroup class>): IDL set to "\0" followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to "\0" followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to null should not throw 
PASS hgroup.className (<hgroup class>): IDL set to null followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to null followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to object "test-toString" should not throw 
PASS hgroup.className (<hgroup class>): IDL set to object "test-toString" followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to object "test-toString" followed by IDL get 
PASS hgroup.className (<hgroup class>): IDL set to object "test-valueOf" should not throw 
PASS hgroup.className (<hgroup class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS hgroup.className (<hgroup class>): IDL set to object "test-valueOf" followed by IDL get 
PASS hgroup.hidden: typeof IDL attribute 
PASS hgroup.hidden: IDL get with DOM attribute unset 
PASS hgroup.hidden: setAttribute() to "" followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to "" followed by IDL get 
PASS hgroup.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to " foo " followed by IDL get 
PASS hgroup.hidden: setAttribute() to undefined followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to undefined followed by IDL get 
PASS hgroup.hidden: setAttribute() to null followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to null followed by IDL get 
PASS hgroup.hidden: setAttribute() to 7 followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to 7 followed by IDL get 
PASS hgroup.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to 1.5 followed by IDL get 
PASS hgroup.hidden: setAttribute() to true followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to true followed by IDL get 
PASS hgroup.hidden: setAttribute() to false followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to false followed by IDL get 
PASS hgroup.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS hgroup.hidden: setAttribute() to NaN followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to NaN followed by IDL get 
PASS hgroup.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to Infinity followed by IDL get 
PASS hgroup.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to -Infinity followed by IDL get 
PASS hgroup.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to "\0" followed by IDL get 
PASS hgroup.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS hgroup.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hgroup.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS hgroup.hidden: setAttribute() to "hidden" followed by IDL get 
PASS hgroup.hidden: IDL set to "" should not throw 
PASS hgroup.hidden: IDL set to "" followed by hasAttribute() 
PASS hgroup.hidden: IDL set to "" followed by IDL get 
PASS hgroup.hidden: IDL set to " foo " should not throw 
PASS hgroup.hidden: IDL set to " foo " followed by hasAttribute() 
PASS hgroup.hidden: IDL set to " foo " followed by IDL get 
PASS hgroup.hidden: IDL set to undefined should not throw 
PASS hgroup.hidden: IDL set to undefined followed by hasAttribute() 
PASS hgroup.hidden: IDL set to undefined followed by IDL get 
PASS hgroup.hidden: IDL set to null should not throw 
PASS hgroup.hidden: IDL set to null followed by hasAttribute() 
PASS hgroup.hidden: IDL set to null followed by IDL get 
PASS hgroup.hidden: IDL set to 7 should not throw 
PASS hgroup.hidden: IDL set to 7 followed by hasAttribute() 
PASS hgroup.hidden: IDL set to 7 followed by IDL get 
PASS hgroup.hidden: IDL set to 1.5 should not throw 
PASS hgroup.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS hgroup.hidden: IDL set to 1.5 followed by IDL get 
PASS hgroup.hidden: IDL set to true should not throw 
PASS hgroup.hidden: IDL set to true followed by hasAttribute() 
PASS hgroup.hidden: IDL set to true followed by IDL get 
PASS hgroup.hidden: IDL set to false should not throw 
PASS hgroup.hidden: IDL set to false followed by hasAttribute() 
PASS hgroup.hidden: IDL set to false followed by IDL get 
PASS hgroup.hidden: IDL set to object "[object Object]" should not throw 
PASS hgroup.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS hgroup.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS hgroup.hidden: IDL set to NaN should not throw 
PASS hgroup.hidden: IDL set to NaN followed by hasAttribute() 
PASS hgroup.hidden: IDL set to NaN followed by IDL get 
PASS hgroup.hidden: IDL set to Infinity should not throw 
PASS hgroup.hidden: IDL set to Infinity followed by hasAttribute() 
PASS hgroup.hidden: IDL set to Infinity followed by IDL get 
PASS hgroup.hidden: IDL set to -Infinity should not throw 
PASS hgroup.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS hgroup.hidden: IDL set to -Infinity followed by IDL get 
PASS hgroup.hidden: IDL set to "\0" should not throw 
PASS hgroup.hidden: IDL set to "\0" followed by hasAttribute() 
PASS hgroup.hidden: IDL set to "\0" followed by IDL get 
PASS hgroup.hidden: IDL set to object "test-toString" should not throw 
PASS hgroup.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS hgroup.hidden: IDL set to object "test-toString" followed by IDL get 
PASS hgroup.hidden: IDL set to object "test-valueOf" should not throw 
PASS hgroup.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS hgroup.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS hgroup.accessKey: typeof IDL attribute 
PASS hgroup.accessKey: IDL get with DOM attribute unset 
PASS hgroup.accessKey: setAttribute() to "" followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to "" followed by IDL get 
PASS hgroup.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hgroup.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to undefined followed by IDL get 
PASS hgroup.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to 7 followed by IDL get 
PASS hgroup.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS hgroup.accessKey: setAttribute() to true followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to true followed by IDL get 
PASS hgroup.accessKey: setAttribute() to false followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to false followed by IDL get 
PASS hgroup.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS hgroup.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to NaN followed by IDL get 
PASS hgroup.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to Infinity followed by IDL get 
PASS hgroup.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS hgroup.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to "\0" followed by IDL get 
PASS hgroup.accessKey: setAttribute() to null followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to null followed by IDL get 
PASS hgroup.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS hgroup.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS hgroup.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS hgroup.accessKey: IDL set to "" should not throw 
PASS hgroup.accessKey: IDL set to "" followed by getAttribute() 
PASS hgroup.accessKey: IDL set to "" followed by IDL get 
PASS hgroup.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS hgroup.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS hgroup.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS hgroup.accessKey: IDL set to undefined should not throw 
PASS hgroup.accessKey: IDL set to undefined followed by getAttribute() 
PASS hgroup.accessKey: IDL set to undefined followed by IDL get 
PASS hgroup.accessKey: IDL set to 7 should not throw 
PASS hgroup.accessKey: IDL set to 7 followed by getAttribute() 
PASS hgroup.accessKey: IDL set to 7 followed by IDL get 
PASS hgroup.accessKey: IDL set to 1.5 should not throw 
PASS hgroup.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS hgroup.accessKey: IDL set to 1.5 followed by IDL get 
PASS hgroup.accessKey: IDL set to true should not throw 
PASS hgroup.accessKey: IDL set to true followed by getAttribute() 
PASS hgroup.accessKey: IDL set to true followed by IDL get 
PASS hgroup.accessKey: IDL set to false should not throw 
PASS hgroup.accessKey: IDL set to false followed by getAttribute() 
PASS hgroup.accessKey: IDL set to false followed by IDL get 
PASS hgroup.accessKey: IDL set to object "[object Object]" should not throw 
PASS hgroup.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS hgroup.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS hgroup.accessKey: IDL set to NaN should not throw 
PASS hgroup.accessKey: IDL set to NaN followed by getAttribute() 
PASS hgroup.accessKey: IDL set to NaN followed by IDL get 
PASS hgroup.accessKey: IDL set to Infinity should not throw 
PASS hgroup.accessKey: IDL set to Infinity followed by getAttribute() 
PASS hgroup.accessKey: IDL set to Infinity followed by IDL get 
PASS hgroup.accessKey: IDL set to -Infinity should not throw 
PASS hgroup.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS hgroup.accessKey: IDL set to -Infinity followed by IDL get 
PASS hgroup.accessKey: IDL set to "\0" should not throw 
PASS hgroup.accessKey: IDL set to "\0" followed by getAttribute() 
PASS hgroup.accessKey: IDL set to "\0" followed by IDL get 
PASS hgroup.accessKey: IDL set to null should not throw 
PASS hgroup.accessKey: IDL set to null followed by getAttribute() 
PASS hgroup.accessKey: IDL set to null followed by IDL get 
PASS hgroup.accessKey: IDL set to object "test-toString" should not throw 
PASS hgroup.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS hgroup.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS hgroup.accessKey: IDL set to object "test-valueOf" should not throw 
PASS hgroup.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS hgroup.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS hgroup.tabIndex: typeof IDL attribute 
PASS hgroup.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to -36 followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to -1 followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to 0 followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to 1 followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to "0" followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to "1" followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS hgroup.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS hgroup.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS hgroup.tabIndex: IDL set to -36 should not throw 
PASS hgroup.tabIndex: IDL set to -36 followed by getAttribute() 
PASS hgroup.tabIndex: IDL set to -36 followed by IDL get 
PASS hgroup.tabIndex: IDL set to -1 should not throw 
PASS hgroup.tabIndex: IDL set to -1 followed by getAttribute() 
PASS hgroup.tabIndex: IDL set to -1 followed by IDL get 
PASS hgroup.tabIndex: IDL set to 0 should not throw 
PASS hgroup.tabIndex: IDL set to 0 followed by getAttribute() 
PASS hgroup.tabIndex: IDL set to 0 followed by IDL get 
PASS hgroup.tabIndex: IDL set to 1 should not throw 
PASS hgroup.tabIndex: IDL set to 1 followed by getAttribute() 
PASS hgroup.tabIndex: IDL set to 1 followed by IDL get 
PASS hgroup.tabIndex: IDL set to 2147483647 should not throw 
PASS hgroup.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS hgroup.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS hgroup.tabIndex: IDL set to -2147483648 should not throw 
PASS hgroup.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS hgroup.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL hgroup.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL hgroup.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to null followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to true followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to false followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL hgroup.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS hgroup.itemScope: IDL set to "" should not throw 
FAIL hgroup.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL hgroup.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS hgroup.itemScope: IDL set to " foo " should not throw 
PASS hgroup.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL hgroup.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS hgroup.itemScope: IDL set to undefined should not throw 
FAIL hgroup.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL hgroup.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS hgroup.itemScope: IDL set to null should not throw 
FAIL hgroup.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL hgroup.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS hgroup.itemScope: IDL set to 7 should not throw 
PASS hgroup.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL hgroup.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS hgroup.itemScope: IDL set to 1.5 should not throw 
PASS hgroup.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL hgroup.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS hgroup.itemScope: IDL set to true should not throw 
PASS hgroup.itemScope: IDL set to true followed by hasAttribute() 
PASS hgroup.itemScope: IDL set to true followed by IDL get 
PASS hgroup.itemScope: IDL set to false should not throw 
FAIL hgroup.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS hgroup.itemScope: IDL set to false followed by IDL get 
PASS hgroup.itemScope: IDL set to object "[object Object]" should not throw 
PASS hgroup.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL hgroup.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS hgroup.itemScope: IDL set to NaN should not throw 
FAIL hgroup.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL hgroup.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS hgroup.itemScope: IDL set to Infinity should not throw 
PASS hgroup.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL hgroup.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS hgroup.itemScope: IDL set to -Infinity should not throw 
PASS hgroup.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL hgroup.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS hgroup.itemScope: IDL set to "\0" should not throw 
PASS hgroup.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL hgroup.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS hgroup.itemScope: IDL set to object "test-toString" should not throw 
PASS hgroup.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL hgroup.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS hgroup.itemScope: IDL set to object "test-valueOf" should not throw 
PASS hgroup.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL hgroup.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL hgroup.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL hgroup.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to "" followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to true followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to false followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to null followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS hgroup.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL hgroup.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS hgroup.itemId: IDL set to "" should not throw 
FAIL hgroup.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS hgroup.itemId: IDL set to " foo " should not throw 
FAIL hgroup.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL hgroup.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS hgroup.itemId: IDL set to "http://site.example/" should not throw 
FAIL hgroup.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS hgroup.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS hgroup.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL hgroup.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS hgroup.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL hgroup.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL hgroup.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS hgroup.itemId: IDL set to undefined should not throw 
FAIL hgroup.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS hgroup.itemId: IDL set to 7 should not throw 
FAIL hgroup.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS hgroup.itemId: IDL set to 1.5 should not throw 
FAIL hgroup.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS hgroup.itemId: IDL set to true should not throw 
FAIL hgroup.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS hgroup.itemId: IDL set to false should not throw 
FAIL hgroup.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS hgroup.itemId: IDL set to object "[object Object]" should not throw 
FAIL hgroup.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS hgroup.itemId: IDL set to NaN should not throw 
FAIL hgroup.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS hgroup.itemId: IDL set to Infinity should not throw 
FAIL hgroup.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS hgroup.itemId: IDL set to -Infinity should not throw 
FAIL hgroup.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS hgroup.itemId: IDL set to "\0" should not throw 
FAIL hgroup.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS hgroup.itemId: IDL set to null should not throw 
FAIL hgroup.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS hgroup.itemId: IDL set to object "test-toString" should not throw 
FAIL hgroup.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL hgroup.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS hgroup.itemId: IDL set to object "test-valueOf" should not throw 
PASS hgroup.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL hgroup.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS header.title: typeof IDL attribute 
PASS header.title: IDL get with DOM attribute unset 
PASS header.title: setAttribute() to "" followed by getAttribute() 
PASS header.title: setAttribute() to "" followed by IDL get 
PASS header.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS header.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS header.title: setAttribute() to undefined followed by getAttribute() 
PASS header.title: setAttribute() to undefined followed by IDL get 
PASS header.title: setAttribute() to 7 followed by getAttribute() 
PASS header.title: setAttribute() to 7 followed by IDL get 
PASS header.title: setAttribute() to 1.5 followed by getAttribute() 
PASS header.title: setAttribute() to 1.5 followed by IDL get 
PASS header.title: setAttribute() to true followed by getAttribute() 
PASS header.title: setAttribute() to true followed by IDL get 
PASS header.title: setAttribute() to false followed by getAttribute() 
PASS header.title: setAttribute() to false followed by IDL get 
PASS header.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS header.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS header.title: setAttribute() to NaN followed by getAttribute() 
PASS header.title: setAttribute() to NaN followed by IDL get 
PASS header.title: setAttribute() to Infinity followed by getAttribute() 
PASS header.title: setAttribute() to Infinity followed by IDL get 
PASS header.title: setAttribute() to -Infinity followed by getAttribute() 
PASS header.title: setAttribute() to -Infinity followed by IDL get 
PASS header.title: setAttribute() to "\0" followed by getAttribute() 
PASS header.title: setAttribute() to "\0" followed by IDL get 
PASS header.title: setAttribute() to null followed by getAttribute() 
PASS header.title: setAttribute() to null followed by IDL get 
PASS header.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS header.title: setAttribute() to object "test-toString" followed by IDL get 
PASS header.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS header.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS header.title: IDL set to "" should not throw 
PASS header.title: IDL set to "" followed by getAttribute() 
PASS header.title: IDL set to "" followed by IDL get 
PASS header.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS header.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS header.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS header.title: IDL set to undefined should not throw 
PASS header.title: IDL set to undefined followed by getAttribute() 
PASS header.title: IDL set to undefined followed by IDL get 
PASS header.title: IDL set to 7 should not throw 
PASS header.title: IDL set to 7 followed by getAttribute() 
PASS header.title: IDL set to 7 followed by IDL get 
PASS header.title: IDL set to 1.5 should not throw 
PASS header.title: IDL set to 1.5 followed by getAttribute() 
PASS header.title: IDL set to 1.5 followed by IDL get 
PASS header.title: IDL set to true should not throw 
PASS header.title: IDL set to true followed by getAttribute() 
PASS header.title: IDL set to true followed by IDL get 
PASS header.title: IDL set to false should not throw 
PASS header.title: IDL set to false followed by getAttribute() 
PASS header.title: IDL set to false followed by IDL get 
PASS header.title: IDL set to object "[object Object]" should not throw 
PASS header.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS header.title: IDL set to object "[object Object]" followed by IDL get 
PASS header.title: IDL set to NaN should not throw 
PASS header.title: IDL set to NaN followed by getAttribute() 
PASS header.title: IDL set to NaN followed by IDL get 
PASS header.title: IDL set to Infinity should not throw 
PASS header.title: IDL set to Infinity followed by getAttribute() 
PASS header.title: IDL set to Infinity followed by IDL get 
PASS header.title: IDL set to -Infinity should not throw 
PASS header.title: IDL set to -Infinity followed by getAttribute() 
PASS header.title: IDL set to -Infinity followed by IDL get 
PASS header.title: IDL set to "\0" should not throw 
PASS header.title: IDL set to "\0" followed by getAttribute() 
PASS header.title: IDL set to "\0" followed by IDL get 
PASS header.title: IDL set to null should not throw 
PASS header.title: IDL set to null followed by getAttribute() 
PASS header.title: IDL set to null followed by IDL get 
PASS header.title: IDL set to object "test-toString" should not throw 
PASS header.title: IDL set to object "test-toString" followed by getAttribute() 
PASS header.title: IDL set to object "test-toString" followed by IDL get 
PASS header.title: IDL set to object "test-valueOf" should not throw 
PASS header.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS header.title: IDL set to object "test-valueOf" followed by IDL get 
PASS header.lang: typeof IDL attribute 
PASS header.lang: IDL get with DOM attribute unset 
PASS header.lang: setAttribute() to "" followed by getAttribute() 
PASS header.lang: setAttribute() to "" followed by IDL get 
PASS header.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS header.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS header.lang: setAttribute() to undefined followed by getAttribute() 
PASS header.lang: setAttribute() to undefined followed by IDL get 
PASS header.lang: setAttribute() to 7 followed by getAttribute() 
PASS header.lang: setAttribute() to 7 followed by IDL get 
PASS header.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS header.lang: setAttribute() to 1.5 followed by IDL get 
PASS header.lang: setAttribute() to true followed by getAttribute() 
PASS header.lang: setAttribute() to true followed by IDL get 
PASS header.lang: setAttribute() to false followed by getAttribute() 
PASS header.lang: setAttribute() to false followed by IDL get 
PASS header.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS header.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS header.lang: setAttribute() to NaN followed by getAttribute() 
PASS header.lang: setAttribute() to NaN followed by IDL get 
PASS header.lang: setAttribute() to Infinity followed by getAttribute() 
PASS header.lang: setAttribute() to Infinity followed by IDL get 
PASS header.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS header.lang: setAttribute() to -Infinity followed by IDL get 
PASS header.lang: setAttribute() to "\0" followed by getAttribute() 
PASS header.lang: setAttribute() to "\0" followed by IDL get 
PASS header.lang: setAttribute() to null followed by getAttribute() 
PASS header.lang: setAttribute() to null followed by IDL get 
PASS header.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS header.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS header.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS header.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS header.lang: IDL set to "" should not throw 
PASS header.lang: IDL set to "" followed by getAttribute() 
PASS header.lang: IDL set to "" followed by IDL get 
PASS header.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS header.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS header.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS header.lang: IDL set to undefined should not throw 
PASS header.lang: IDL set to undefined followed by getAttribute() 
PASS header.lang: IDL set to undefined followed by IDL get 
PASS header.lang: IDL set to 7 should not throw 
PASS header.lang: IDL set to 7 followed by getAttribute() 
PASS header.lang: IDL set to 7 followed by IDL get 
PASS header.lang: IDL set to 1.5 should not throw 
PASS header.lang: IDL set to 1.5 followed by getAttribute() 
PASS header.lang: IDL set to 1.5 followed by IDL get 
PASS header.lang: IDL set to true should not throw 
PASS header.lang: IDL set to true followed by getAttribute() 
PASS header.lang: IDL set to true followed by IDL get 
PASS header.lang: IDL set to false should not throw 
PASS header.lang: IDL set to false followed by getAttribute() 
PASS header.lang: IDL set to false followed by IDL get 
PASS header.lang: IDL set to object "[object Object]" should not throw 
PASS header.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS header.lang: IDL set to object "[object Object]" followed by IDL get 
PASS header.lang: IDL set to NaN should not throw 
PASS header.lang: IDL set to NaN followed by getAttribute() 
PASS header.lang: IDL set to NaN followed by IDL get 
PASS header.lang: IDL set to Infinity should not throw 
PASS header.lang: IDL set to Infinity followed by getAttribute() 
PASS header.lang: IDL set to Infinity followed by IDL get 
PASS header.lang: IDL set to -Infinity should not throw 
PASS header.lang: IDL set to -Infinity followed by getAttribute() 
PASS header.lang: IDL set to -Infinity followed by IDL get 
PASS header.lang: IDL set to "\0" should not throw 
PASS header.lang: IDL set to "\0" followed by getAttribute() 
PASS header.lang: IDL set to "\0" followed by IDL get 
PASS header.lang: IDL set to null should not throw 
PASS header.lang: IDL set to null followed by getAttribute() 
PASS header.lang: IDL set to null followed by IDL get 
PASS header.lang: IDL set to object "test-toString" should not throw 
PASS header.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS header.lang: IDL set to object "test-toString" followed by IDL get 
PASS header.lang: IDL set to object "test-valueOf" should not throw 
PASS header.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS header.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS header.dir: typeof IDL attribute 
PASS header.dir: IDL get with DOM attribute unset 
PASS header.dir: setAttribute() to "" followed by getAttribute() 
PASS header.dir: setAttribute() to "" followed by IDL get 
PASS header.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS header.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS header.dir: setAttribute() to undefined followed by getAttribute() 
PASS header.dir: setAttribute() to undefined followed by IDL get 
PASS header.dir: setAttribute() to 7 followed by getAttribute() 
PASS header.dir: setAttribute() to 7 followed by IDL get 
PASS header.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS header.dir: setAttribute() to 1.5 followed by IDL get 
PASS header.dir: setAttribute() to true followed by getAttribute() 
PASS header.dir: setAttribute() to true followed by IDL get 
PASS header.dir: setAttribute() to false followed by getAttribute() 
PASS header.dir: setAttribute() to false followed by IDL get 
PASS header.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS header.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS header.dir: setAttribute() to NaN followed by getAttribute() 
PASS header.dir: setAttribute() to NaN followed by IDL get 
PASS header.dir: setAttribute() to Infinity followed by getAttribute() 
PASS header.dir: setAttribute() to Infinity followed by IDL get 
PASS header.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS header.dir: setAttribute() to -Infinity followed by IDL get 
PASS header.dir: setAttribute() to "\0" followed by getAttribute() 
PASS header.dir: setAttribute() to "\0" followed by IDL get 
PASS header.dir: setAttribute() to null followed by getAttribute() 
PASS header.dir: setAttribute() to null followed by IDL get 
PASS header.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS header.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS header.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS header.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS header.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS header.dir: setAttribute() to "ltr" followed by IDL get 
PASS header.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS header.dir: setAttribute() to "xltr" followed by IDL get 
PASS header.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS header.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS header.dir: setAttribute() to "tr" followed by getAttribute() 
PASS header.dir: setAttribute() to "tr" followed by IDL get 
PASS header.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS header.dir: setAttribute() to "LTR" followed by IDL get 
PASS header.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS header.dir: setAttribute() to "rtl" followed by IDL get 
PASS header.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS header.dir: setAttribute() to "xrtl" followed by IDL get 
PASS header.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS header.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS header.dir: setAttribute() to "tl" followed by getAttribute() 
PASS header.dir: setAttribute() to "tl" followed by IDL get 
PASS header.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS header.dir: setAttribute() to "RTL" followed by IDL get 
PASS header.dir: setAttribute() to "auto" followed by getAttribute() 
PASS header.dir: setAttribute() to "auto" followed by IDL get 
PASS header.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS header.dir: setAttribute() to "xauto" followed by IDL get 
PASS header.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS header.dir: setAttribute() to "auto\0" followed by IDL get 
PASS header.dir: setAttribute() to "uto" followed by getAttribute() 
PASS header.dir: setAttribute() to "uto" followed by IDL get 
PASS header.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS header.dir: setAttribute() to "AUTO" followed by IDL get 
PASS header.dir: IDL set to "" should not throw 
PASS header.dir: IDL set to "" followed by getAttribute() 
PASS header.dir: IDL set to "" followed by IDL get 
PASS header.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS header.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS header.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS header.dir: IDL set to undefined should not throw 
PASS header.dir: IDL set to undefined followed by getAttribute() 
PASS header.dir: IDL set to undefined followed by IDL get 
PASS header.dir: IDL set to 7 should not throw 
PASS header.dir: IDL set to 7 followed by getAttribute() 
PASS header.dir: IDL set to 7 followed by IDL get 
PASS header.dir: IDL set to 1.5 should not throw 
PASS header.dir: IDL set to 1.5 followed by getAttribute() 
PASS header.dir: IDL set to 1.5 followed by IDL get 
PASS header.dir: IDL set to true should not throw 
PASS header.dir: IDL set to true followed by getAttribute() 
PASS header.dir: IDL set to true followed by IDL get 
PASS header.dir: IDL set to false should not throw 
PASS header.dir: IDL set to false followed by getAttribute() 
PASS header.dir: IDL set to false followed by IDL get 
PASS header.dir: IDL set to object "[object Object]" should not throw 
PASS header.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS header.dir: IDL set to object "[object Object]" followed by IDL get 
PASS header.dir: IDL set to NaN should not throw 
PASS header.dir: IDL set to NaN followed by getAttribute() 
PASS header.dir: IDL set to NaN followed by IDL get 
PASS header.dir: IDL set to Infinity should not throw 
PASS header.dir: IDL set to Infinity followed by getAttribute() 
PASS header.dir: IDL set to Infinity followed by IDL get 
PASS header.dir: IDL set to -Infinity should not throw 
PASS header.dir: IDL set to -Infinity followed by getAttribute() 
PASS header.dir: IDL set to -Infinity followed by IDL get 
PASS header.dir: IDL set to "\0" should not throw 
PASS header.dir: IDL set to "\0" followed by getAttribute() 
PASS header.dir: IDL set to "\0" followed by IDL get 
PASS header.dir: IDL set to null should not throw 
PASS header.dir: IDL set to null followed by IDL get 
PASS header.dir: IDL set to object "test-toString" should not throw 
PASS header.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS header.dir: IDL set to object "test-toString" followed by IDL get 
PASS header.dir: IDL set to object "test-valueOf" should not throw 
PASS header.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS header.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS header.dir: IDL set to "ltr" should not throw 
PASS header.dir: IDL set to "ltr" followed by getAttribute() 
PASS header.dir: IDL set to "ltr" followed by IDL get 
PASS header.dir: IDL set to "xltr" should not throw 
PASS header.dir: IDL set to "xltr" followed by getAttribute() 
PASS header.dir: IDL set to "xltr" followed by IDL get 
PASS header.dir: IDL set to "ltr\0" should not throw 
PASS header.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS header.dir: IDL set to "ltr\0" followed by IDL get 
PASS header.dir: IDL set to "tr" should not throw 
PASS header.dir: IDL set to "tr" followed by getAttribute() 
PASS header.dir: IDL set to "tr" followed by IDL get 
PASS header.dir: IDL set to "LTR" should not throw 
PASS header.dir: IDL set to "LTR" followed by getAttribute() 
PASS header.dir: IDL set to "LTR" followed by IDL get 
PASS header.dir: IDL set to "rtl" should not throw 
PASS header.dir: IDL set to "rtl" followed by getAttribute() 
PASS header.dir: IDL set to "rtl" followed by IDL get 
PASS header.dir: IDL set to "xrtl" should not throw 
PASS header.dir: IDL set to "xrtl" followed by getAttribute() 
PASS header.dir: IDL set to "xrtl" followed by IDL get 
PASS header.dir: IDL set to "rtl\0" should not throw 
PASS header.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS header.dir: IDL set to "rtl\0" followed by IDL get 
PASS header.dir: IDL set to "tl" should not throw 
PASS header.dir: IDL set to "tl" followed by getAttribute() 
PASS header.dir: IDL set to "tl" followed by IDL get 
PASS header.dir: IDL set to "RTL" should not throw 
PASS header.dir: IDL set to "RTL" followed by getAttribute() 
PASS header.dir: IDL set to "RTL" followed by IDL get 
PASS header.dir: IDL set to "auto" should not throw 
PASS header.dir: IDL set to "auto" followed by getAttribute() 
PASS header.dir: IDL set to "auto" followed by IDL get 
PASS header.dir: IDL set to "xauto" should not throw 
PASS header.dir: IDL set to "xauto" followed by getAttribute() 
PASS header.dir: IDL set to "xauto" followed by IDL get 
PASS header.dir: IDL set to "auto\0" should not throw 
PASS header.dir: IDL set to "auto\0" followed by getAttribute() 
PASS header.dir: IDL set to "auto\0" followed by IDL get 
PASS header.dir: IDL set to "uto" should not throw 
PASS header.dir: IDL set to "uto" followed by getAttribute() 
PASS header.dir: IDL set to "uto" followed by IDL get 
PASS header.dir: IDL set to "AUTO" should not throw 
PASS header.dir: IDL set to "AUTO" followed by getAttribute() 
PASS header.dir: IDL set to "AUTO" followed by IDL get 
PASS header.className (<header class>): typeof IDL attribute 
PASS header.className (<header class>): IDL get with DOM attribute unset 
PASS header.className (<header class>): setAttribute() to "" followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to "" followed by IDL get 
PASS header.className (<header class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS header.className (<header class>): setAttribute() to undefined followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to undefined followed by IDL get 
PASS header.className (<header class>): setAttribute() to 7 followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to 7 followed by IDL get 
PASS header.className (<header class>): setAttribute() to 1.5 followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to 1.5 followed by IDL get 
PASS header.className (<header class>): setAttribute() to true followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to true followed by IDL get 
PASS header.className (<header class>): setAttribute() to false followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to false followed by IDL get 
PASS header.className (<header class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS header.className (<header class>): setAttribute() to NaN followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to NaN followed by IDL get 
PASS header.className (<header class>): setAttribute() to Infinity followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to Infinity followed by IDL get 
PASS header.className (<header class>): setAttribute() to -Infinity followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to -Infinity followed by IDL get 
PASS header.className (<header class>): setAttribute() to "\0" followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to "\0" followed by IDL get 
PASS header.className (<header class>): setAttribute() to null followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to null followed by IDL get 
PASS header.className (<header class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to object "test-toString" followed by IDL get 
PASS header.className (<header class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS header.className (<header class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS header.className (<header class>): IDL set to "" should not throw 
PASS header.className (<header class>): IDL set to "" followed by getAttribute() 
PASS header.className (<header class>): IDL set to "" followed by IDL get 
PASS header.className (<header class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS header.className (<header class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS header.className (<header class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS header.className (<header class>): IDL set to undefined should not throw 
PASS header.className (<header class>): IDL set to undefined followed by getAttribute() 
PASS header.className (<header class>): IDL set to undefined followed by IDL get 
PASS header.className (<header class>): IDL set to 7 should not throw 
PASS header.className (<header class>): IDL set to 7 followed by getAttribute() 
PASS header.className (<header class>): IDL set to 7 followed by IDL get 
PASS header.className (<header class>): IDL set to 1.5 should not throw 
PASS header.className (<header class>): IDL set to 1.5 followed by getAttribute() 
PASS header.className (<header class>): IDL set to 1.5 followed by IDL get 
PASS header.className (<header class>): IDL set to true should not throw 
PASS header.className (<header class>): IDL set to true followed by getAttribute() 
PASS header.className (<header class>): IDL set to true followed by IDL get 
PASS header.className (<header class>): IDL set to false should not throw 
PASS header.className (<header class>): IDL set to false followed by getAttribute() 
PASS header.className (<header class>): IDL set to false followed by IDL get 
PASS header.className (<header class>): IDL set to object "[object Object]" should not throw 
PASS header.className (<header class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS header.className (<header class>): IDL set to object "[object Object]" followed by IDL get 
PASS header.className (<header class>): IDL set to NaN should not throw 
PASS header.className (<header class>): IDL set to NaN followed by getAttribute() 
PASS header.className (<header class>): IDL set to NaN followed by IDL get 
PASS header.className (<header class>): IDL set to Infinity should not throw 
PASS header.className (<header class>): IDL set to Infinity followed by getAttribute() 
PASS header.className (<header class>): IDL set to Infinity followed by IDL get 
PASS header.className (<header class>): IDL set to -Infinity should not throw 
PASS header.className (<header class>): IDL set to -Infinity followed by getAttribute() 
PASS header.className (<header class>): IDL set to -Infinity followed by IDL get 
PASS header.className (<header class>): IDL set to "\0" should not throw 
PASS header.className (<header class>): IDL set to "\0" followed by getAttribute() 
PASS header.className (<header class>): IDL set to "\0" followed by IDL get 
PASS header.className (<header class>): IDL set to null should not throw 
PASS header.className (<header class>): IDL set to null followed by getAttribute() 
PASS header.className (<header class>): IDL set to null followed by IDL get 
PASS header.className (<header class>): IDL set to object "test-toString" should not throw 
PASS header.className (<header class>): IDL set to object "test-toString" followed by getAttribute() 
PASS header.className (<header class>): IDL set to object "test-toString" followed by IDL get 
PASS header.className (<header class>): IDL set to object "test-valueOf" should not throw 
PASS header.className (<header class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS header.className (<header class>): IDL set to object "test-valueOf" followed by IDL get 
PASS header.hidden: typeof IDL attribute 
PASS header.hidden: IDL get with DOM attribute unset 
PASS header.hidden: setAttribute() to "" followed by getAttribute() 
PASS header.hidden: setAttribute() to "" followed by IDL get 
PASS header.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS header.hidden: setAttribute() to " foo " followed by IDL get 
PASS header.hidden: setAttribute() to undefined followed by getAttribute() 
PASS header.hidden: setAttribute() to undefined followed by IDL get 
PASS header.hidden: setAttribute() to null followed by getAttribute() 
PASS header.hidden: setAttribute() to null followed by IDL get 
PASS header.hidden: setAttribute() to 7 followed by getAttribute() 
PASS header.hidden: setAttribute() to 7 followed by IDL get 
PASS header.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS header.hidden: setAttribute() to 1.5 followed by IDL get 
PASS header.hidden: setAttribute() to true followed by getAttribute() 
PASS header.hidden: setAttribute() to true followed by IDL get 
PASS header.hidden: setAttribute() to false followed by getAttribute() 
PASS header.hidden: setAttribute() to false followed by IDL get 
PASS header.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS header.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS header.hidden: setAttribute() to NaN followed by getAttribute() 
PASS header.hidden: setAttribute() to NaN followed by IDL get 
PASS header.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS header.hidden: setAttribute() to Infinity followed by IDL get 
PASS header.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS header.hidden: setAttribute() to -Infinity followed by IDL get 
PASS header.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS header.hidden: setAttribute() to "\0" followed by IDL get 
PASS header.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS header.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS header.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS header.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS header.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS header.hidden: setAttribute() to "hidden" followed by IDL get 
PASS header.hidden: IDL set to "" should not throw 
PASS header.hidden: IDL set to "" followed by hasAttribute() 
PASS header.hidden: IDL set to "" followed by IDL get 
PASS header.hidden: IDL set to " foo " should not throw 
PASS header.hidden: IDL set to " foo " followed by hasAttribute() 
PASS header.hidden: IDL set to " foo " followed by IDL get 
PASS header.hidden: IDL set to undefined should not throw 
PASS header.hidden: IDL set to undefined followed by hasAttribute() 
PASS header.hidden: IDL set to undefined followed by IDL get 
PASS header.hidden: IDL set to null should not throw 
PASS header.hidden: IDL set to null followed by hasAttribute() 
PASS header.hidden: IDL set to null followed by IDL get 
PASS header.hidden: IDL set to 7 should not throw 
PASS header.hidden: IDL set to 7 followed by hasAttribute() 
PASS header.hidden: IDL set to 7 followed by IDL get 
PASS header.hidden: IDL set to 1.5 should not throw 
PASS header.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS header.hidden: IDL set to 1.5 followed by IDL get 
PASS header.hidden: IDL set to true should not throw 
PASS header.hidden: IDL set to true followed by hasAttribute() 
PASS header.hidden: IDL set to true followed by IDL get 
PASS header.hidden: IDL set to false should not throw 
PASS header.hidden: IDL set to false followed by hasAttribute() 
PASS header.hidden: IDL set to false followed by IDL get 
PASS header.hidden: IDL set to object "[object Object]" should not throw 
PASS header.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS header.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS header.hidden: IDL set to NaN should not throw 
PASS header.hidden: IDL set to NaN followed by hasAttribute() 
PASS header.hidden: IDL set to NaN followed by IDL get 
PASS header.hidden: IDL set to Infinity should not throw 
PASS header.hidden: IDL set to Infinity followed by hasAttribute() 
PASS header.hidden: IDL set to Infinity followed by IDL get 
PASS header.hidden: IDL set to -Infinity should not throw 
PASS header.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS header.hidden: IDL set to -Infinity followed by IDL get 
PASS header.hidden: IDL set to "\0" should not throw 
PASS header.hidden: IDL set to "\0" followed by hasAttribute() 
PASS header.hidden: IDL set to "\0" followed by IDL get 
PASS header.hidden: IDL set to object "test-toString" should not throw 
PASS header.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS header.hidden: IDL set to object "test-toString" followed by IDL get 
PASS header.hidden: IDL set to object "test-valueOf" should not throw 
PASS header.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS header.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS header.accessKey: typeof IDL attribute 
PASS header.accessKey: IDL get with DOM attribute unset 
PASS header.accessKey: setAttribute() to "" followed by getAttribute() 
PASS header.accessKey: setAttribute() to "" followed by IDL get 
PASS header.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS header.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS header.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS header.accessKey: setAttribute() to undefined followed by IDL get 
PASS header.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS header.accessKey: setAttribute() to 7 followed by IDL get 
PASS header.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS header.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS header.accessKey: setAttribute() to true followed by getAttribute() 
PASS header.accessKey: setAttribute() to true followed by IDL get 
PASS header.accessKey: setAttribute() to false followed by getAttribute() 
PASS header.accessKey: setAttribute() to false followed by IDL get 
PASS header.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS header.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS header.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS header.accessKey: setAttribute() to NaN followed by IDL get 
PASS header.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS header.accessKey: setAttribute() to Infinity followed by IDL get 
PASS header.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS header.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS header.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS header.accessKey: setAttribute() to "\0" followed by IDL get 
PASS header.accessKey: setAttribute() to null followed by getAttribute() 
PASS header.accessKey: setAttribute() to null followed by IDL get 
PASS header.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS header.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS header.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS header.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS header.accessKey: IDL set to "" should not throw 
PASS header.accessKey: IDL set to "" followed by getAttribute() 
PASS header.accessKey: IDL set to "" followed by IDL get 
PASS header.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS header.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS header.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS header.accessKey: IDL set to undefined should not throw 
PASS header.accessKey: IDL set to undefined followed by getAttribute() 
PASS header.accessKey: IDL set to undefined followed by IDL get 
PASS header.accessKey: IDL set to 7 should not throw 
PASS header.accessKey: IDL set to 7 followed by getAttribute() 
PASS header.accessKey: IDL set to 7 followed by IDL get 
PASS header.accessKey: IDL set to 1.5 should not throw 
PASS header.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS header.accessKey: IDL set to 1.5 followed by IDL get 
PASS header.accessKey: IDL set to true should not throw 
PASS header.accessKey: IDL set to true followed by getAttribute() 
PASS header.accessKey: IDL set to true followed by IDL get 
PASS header.accessKey: IDL set to false should not throw 
PASS header.accessKey: IDL set to false followed by getAttribute() 
PASS header.accessKey: IDL set to false followed by IDL get 
PASS header.accessKey: IDL set to object "[object Object]" should not throw 
PASS header.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS header.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS header.accessKey: IDL set to NaN should not throw 
PASS header.accessKey: IDL set to NaN followed by getAttribute() 
PASS header.accessKey: IDL set to NaN followed by IDL get 
PASS header.accessKey: IDL set to Infinity should not throw 
PASS header.accessKey: IDL set to Infinity followed by getAttribute() 
PASS header.accessKey: IDL set to Infinity followed by IDL get 
PASS header.accessKey: IDL set to -Infinity should not throw 
PASS header.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS header.accessKey: IDL set to -Infinity followed by IDL get 
PASS header.accessKey: IDL set to "\0" should not throw 
PASS header.accessKey: IDL set to "\0" followed by getAttribute() 
PASS header.accessKey: IDL set to "\0" followed by IDL get 
PASS header.accessKey: IDL set to null should not throw 
PASS header.accessKey: IDL set to null followed by getAttribute() 
PASS header.accessKey: IDL set to null followed by IDL get 
PASS header.accessKey: IDL set to object "test-toString" should not throw 
PASS header.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS header.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS header.accessKey: IDL set to object "test-valueOf" should not throw 
PASS header.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS header.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS header.tabIndex: typeof IDL attribute 
PASS header.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS header.tabIndex: setAttribute() to -36 followed by IDL get 
PASS header.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS header.tabIndex: setAttribute() to -1 followed by IDL get 
PASS header.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS header.tabIndex: setAttribute() to 0 followed by IDL get 
PASS header.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS header.tabIndex: setAttribute() to 1 followed by IDL get 
PASS header.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS header.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS header.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS header.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS header.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS header.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS header.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS header.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS header.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS header.tabIndex: setAttribute() to "0" followed by IDL get 
PASS header.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS header.tabIndex: setAttribute() to "1" followed by IDL get 
PASS header.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS header.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS header.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS header.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS header.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS header.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS header.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS header.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS header.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS header.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS header.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS header.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS header.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS header.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS header.tabIndex: IDL set to -36 should not throw 
PASS header.tabIndex: IDL set to -36 followed by getAttribute() 
PASS header.tabIndex: IDL set to -36 followed by IDL get 
PASS header.tabIndex: IDL set to -1 should not throw 
PASS header.tabIndex: IDL set to -1 followed by getAttribute() 
PASS header.tabIndex: IDL set to -1 followed by IDL get 
PASS header.tabIndex: IDL set to 0 should not throw 
PASS header.tabIndex: IDL set to 0 followed by getAttribute() 
PASS header.tabIndex: IDL set to 0 followed by IDL get 
PASS header.tabIndex: IDL set to 1 should not throw 
PASS header.tabIndex: IDL set to 1 followed by getAttribute() 
PASS header.tabIndex: IDL set to 1 followed by IDL get 
PASS header.tabIndex: IDL set to 2147483647 should not throw 
PASS header.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS header.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS header.tabIndex: IDL set to -2147483648 should not throw 
PASS header.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS header.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL header.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL header.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS header.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL header.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL header.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL header.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to null followed by getAttribute() 
FAIL header.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL header.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL header.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to true followed by getAttribute() 
FAIL header.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to false followed by getAttribute() 
FAIL header.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL header.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL header.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL header.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL header.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL header.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL header.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL header.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL header.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS header.itemScope: IDL set to "" should not throw 
FAIL header.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL header.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS header.itemScope: IDL set to " foo " should not throw 
PASS header.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL header.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS header.itemScope: IDL set to undefined should not throw 
FAIL header.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL header.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS header.itemScope: IDL set to null should not throw 
FAIL header.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL header.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS header.itemScope: IDL set to 7 should not throw 
PASS header.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL header.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS header.itemScope: IDL set to 1.5 should not throw 
PASS header.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL header.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS header.itemScope: IDL set to true should not throw 
PASS header.itemScope: IDL set to true followed by hasAttribute() 
PASS header.itemScope: IDL set to true followed by IDL get 
PASS header.itemScope: IDL set to false should not throw 
FAIL header.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS header.itemScope: IDL set to false followed by IDL get 
PASS header.itemScope: IDL set to object "[object Object]" should not throw 
PASS header.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL header.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS header.itemScope: IDL set to NaN should not throw 
FAIL header.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL header.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS header.itemScope: IDL set to Infinity should not throw 
PASS header.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL header.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS header.itemScope: IDL set to -Infinity should not throw 
PASS header.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL header.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS header.itemScope: IDL set to "\0" should not throw 
PASS header.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL header.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS header.itemScope: IDL set to object "test-toString" should not throw 
PASS header.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL header.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS header.itemScope: IDL set to object "test-valueOf" should not throw 
PASS header.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL header.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL header.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL header.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS header.itemId: setAttribute() to "" followed by getAttribute() 
FAIL header.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS header.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL header.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS header.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL header.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS header.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL header.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS header.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL header.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS header.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL header.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS header.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL header.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS header.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL header.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS header.itemId: setAttribute() to true followed by getAttribute() 
FAIL header.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS header.itemId: setAttribute() to false followed by getAttribute() 
FAIL header.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS header.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL header.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS header.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL header.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS header.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL header.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS header.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL header.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS header.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL header.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS header.itemId: setAttribute() to null followed by getAttribute() 
FAIL header.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS header.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL header.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS header.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL header.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS header.itemId: IDL set to "" should not throw 
FAIL header.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL header.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS header.itemId: IDL set to " foo " should not throw 
FAIL header.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL header.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS header.itemId: IDL set to "http://site.example/" should not throw 
FAIL header.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS header.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS header.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL header.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL header.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS header.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL header.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL header.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS header.itemId: IDL set to undefined should not throw 
FAIL header.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL header.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS header.itemId: IDL set to 7 should not throw 
FAIL header.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL header.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS header.itemId: IDL set to 1.5 should not throw 
FAIL header.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL header.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS header.itemId: IDL set to true should not throw 
FAIL header.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL header.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS header.itemId: IDL set to false should not throw 
FAIL header.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL header.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS header.itemId: IDL set to object "[object Object]" should not throw 
FAIL header.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL header.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS header.itemId: IDL set to NaN should not throw 
FAIL header.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL header.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS header.itemId: IDL set to Infinity should not throw 
FAIL header.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL header.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS header.itemId: IDL set to -Infinity should not throw 
FAIL header.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL header.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS header.itemId: IDL set to "\0" should not throw 
FAIL header.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL header.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS header.itemId: IDL set to null should not throw 
FAIL header.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL header.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS header.itemId: IDL set to object "test-toString" should not throw 
FAIL header.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL header.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS header.itemId: IDL set to object "test-valueOf" should not throw 
PASS header.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL header.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS footer.title: typeof IDL attribute 
PASS footer.title: IDL get with DOM attribute unset 
PASS footer.title: setAttribute() to "" followed by getAttribute() 
PASS footer.title: setAttribute() to "" followed by IDL get 
PASS footer.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS footer.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS footer.title: setAttribute() to undefined followed by getAttribute() 
PASS footer.title: setAttribute() to undefined followed by IDL get 
PASS footer.title: setAttribute() to 7 followed by getAttribute() 
PASS footer.title: setAttribute() to 7 followed by IDL get 
PASS footer.title: setAttribute() to 1.5 followed by getAttribute() 
PASS footer.title: setAttribute() to 1.5 followed by IDL get 
PASS footer.title: setAttribute() to true followed by getAttribute() 
PASS footer.title: setAttribute() to true followed by IDL get 
PASS footer.title: setAttribute() to false followed by getAttribute() 
PASS footer.title: setAttribute() to false followed by IDL get 
PASS footer.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS footer.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS footer.title: setAttribute() to NaN followed by getAttribute() 
PASS footer.title: setAttribute() to NaN followed by IDL get 
PASS footer.title: setAttribute() to Infinity followed by getAttribute() 
PASS footer.title: setAttribute() to Infinity followed by IDL get 
PASS footer.title: setAttribute() to -Infinity followed by getAttribute() 
PASS footer.title: setAttribute() to -Infinity followed by IDL get 
PASS footer.title: setAttribute() to "\0" followed by getAttribute() 
PASS footer.title: setAttribute() to "\0" followed by IDL get 
PASS footer.title: setAttribute() to null followed by getAttribute() 
PASS footer.title: setAttribute() to null followed by IDL get 
PASS footer.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS footer.title: setAttribute() to object "test-toString" followed by IDL get 
PASS footer.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS footer.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS footer.title: IDL set to "" should not throw 
PASS footer.title: IDL set to "" followed by getAttribute() 
PASS footer.title: IDL set to "" followed by IDL get 
PASS footer.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS footer.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS footer.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS footer.title: IDL set to undefined should not throw 
PASS footer.title: IDL set to undefined followed by getAttribute() 
PASS footer.title: IDL set to undefined followed by IDL get 
PASS footer.title: IDL set to 7 should not throw 
PASS footer.title: IDL set to 7 followed by getAttribute() 
PASS footer.title: IDL set to 7 followed by IDL get 
PASS footer.title: IDL set to 1.5 should not throw 
PASS footer.title: IDL set to 1.5 followed by getAttribute() 
PASS footer.title: IDL set to 1.5 followed by IDL get 
PASS footer.title: IDL set to true should not throw 
PASS footer.title: IDL set to true followed by getAttribute() 
PASS footer.title: IDL set to true followed by IDL get 
PASS footer.title: IDL set to false should not throw 
PASS footer.title: IDL set to false followed by getAttribute() 
PASS footer.title: IDL set to false followed by IDL get 
PASS footer.title: IDL set to object "[object Object]" should not throw 
PASS footer.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS footer.title: IDL set to object "[object Object]" followed by IDL get 
PASS footer.title: IDL set to NaN should not throw 
PASS footer.title: IDL set to NaN followed by getAttribute() 
PASS footer.title: IDL set to NaN followed by IDL get 
PASS footer.title: IDL set to Infinity should not throw 
PASS footer.title: IDL set to Infinity followed by getAttribute() 
PASS footer.title: IDL set to Infinity followed by IDL get 
PASS footer.title: IDL set to -Infinity should not throw 
PASS footer.title: IDL set to -Infinity followed by getAttribute() 
PASS footer.title: IDL set to -Infinity followed by IDL get 
PASS footer.title: IDL set to "\0" should not throw 
PASS footer.title: IDL set to "\0" followed by getAttribute() 
PASS footer.title: IDL set to "\0" followed by IDL get 
PASS footer.title: IDL set to null should not throw 
PASS footer.title: IDL set to null followed by getAttribute() 
PASS footer.title: IDL set to null followed by IDL get 
PASS footer.title: IDL set to object "test-toString" should not throw 
PASS footer.title: IDL set to object "test-toString" followed by getAttribute() 
PASS footer.title: IDL set to object "test-toString" followed by IDL get 
PASS footer.title: IDL set to object "test-valueOf" should not throw 
PASS footer.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS footer.title: IDL set to object "test-valueOf" followed by IDL get 
PASS footer.lang: typeof IDL attribute 
PASS footer.lang: IDL get with DOM attribute unset 
PASS footer.lang: setAttribute() to "" followed by getAttribute() 
PASS footer.lang: setAttribute() to "" followed by IDL get 
PASS footer.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS footer.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS footer.lang: setAttribute() to undefined followed by getAttribute() 
PASS footer.lang: setAttribute() to undefined followed by IDL get 
PASS footer.lang: setAttribute() to 7 followed by getAttribute() 
PASS footer.lang: setAttribute() to 7 followed by IDL get 
PASS footer.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS footer.lang: setAttribute() to 1.5 followed by IDL get 
PASS footer.lang: setAttribute() to true followed by getAttribute() 
PASS footer.lang: setAttribute() to true followed by IDL get 
PASS footer.lang: setAttribute() to false followed by getAttribute() 
PASS footer.lang: setAttribute() to false followed by IDL get 
PASS footer.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS footer.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS footer.lang: setAttribute() to NaN followed by getAttribute() 
PASS footer.lang: setAttribute() to NaN followed by IDL get 
PASS footer.lang: setAttribute() to Infinity followed by getAttribute() 
PASS footer.lang: setAttribute() to Infinity followed by IDL get 
PASS footer.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS footer.lang: setAttribute() to -Infinity followed by IDL get 
PASS footer.lang: setAttribute() to "\0" followed by getAttribute() 
PASS footer.lang: setAttribute() to "\0" followed by IDL get 
PASS footer.lang: setAttribute() to null followed by getAttribute() 
PASS footer.lang: setAttribute() to null followed by IDL get 
PASS footer.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS footer.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS footer.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS footer.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS footer.lang: IDL set to "" should not throw 
PASS footer.lang: IDL set to "" followed by getAttribute() 
PASS footer.lang: IDL set to "" followed by IDL get 
PASS footer.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS footer.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS footer.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS footer.lang: IDL set to undefined should not throw 
PASS footer.lang: IDL set to undefined followed by getAttribute() 
PASS footer.lang: IDL set to undefined followed by IDL get 
PASS footer.lang: IDL set to 7 should not throw 
PASS footer.lang: IDL set to 7 followed by getAttribute() 
PASS footer.lang: IDL set to 7 followed by IDL get 
PASS footer.lang: IDL set to 1.5 should not throw 
PASS footer.lang: IDL set to 1.5 followed by getAttribute() 
PASS footer.lang: IDL set to 1.5 followed by IDL get 
PASS footer.lang: IDL set to true should not throw 
PASS footer.lang: IDL set to true followed by getAttribute() 
PASS footer.lang: IDL set to true followed by IDL get 
PASS footer.lang: IDL set to false should not throw 
PASS footer.lang: IDL set to false followed by getAttribute() 
PASS footer.lang: IDL set to false followed by IDL get 
PASS footer.lang: IDL set to object "[object Object]" should not throw 
PASS footer.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS footer.lang: IDL set to object "[object Object]" followed by IDL get 
PASS footer.lang: IDL set to NaN should not throw 
PASS footer.lang: IDL set to NaN followed by getAttribute() 
PASS footer.lang: IDL set to NaN followed by IDL get 
PASS footer.lang: IDL set to Infinity should not throw 
PASS footer.lang: IDL set to Infinity followed by getAttribute() 
PASS footer.lang: IDL set to Infinity followed by IDL get 
PASS footer.lang: IDL set to -Infinity should not throw 
PASS footer.lang: IDL set to -Infinity followed by getAttribute() 
PASS footer.lang: IDL set to -Infinity followed by IDL get 
PASS footer.lang: IDL set to "\0" should not throw 
PASS footer.lang: IDL set to "\0" followed by getAttribute() 
PASS footer.lang: IDL set to "\0" followed by IDL get 
PASS footer.lang: IDL set to null should not throw 
PASS footer.lang: IDL set to null followed by getAttribute() 
PASS footer.lang: IDL set to null followed by IDL get 
PASS footer.lang: IDL set to object "test-toString" should not throw 
PASS footer.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS footer.lang: IDL set to object "test-toString" followed by IDL get 
PASS footer.lang: IDL set to object "test-valueOf" should not throw 
PASS footer.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS footer.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS footer.dir: typeof IDL attribute 
PASS footer.dir: IDL get with DOM attribute unset 
PASS footer.dir: setAttribute() to "" followed by getAttribute() 
PASS footer.dir: setAttribute() to "" followed by IDL get 
PASS footer.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS footer.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS footer.dir: setAttribute() to undefined followed by getAttribute() 
PASS footer.dir: setAttribute() to undefined followed by IDL get 
PASS footer.dir: setAttribute() to 7 followed by getAttribute() 
PASS footer.dir: setAttribute() to 7 followed by IDL get 
PASS footer.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS footer.dir: setAttribute() to 1.5 followed by IDL get 
PASS footer.dir: setAttribute() to true followed by getAttribute() 
PASS footer.dir: setAttribute() to true followed by IDL get 
PASS footer.dir: setAttribute() to false followed by getAttribute() 
PASS footer.dir: setAttribute() to false followed by IDL get 
PASS footer.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS footer.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS footer.dir: setAttribute() to NaN followed by getAttribute() 
PASS footer.dir: setAttribute() to NaN followed by IDL get 
PASS footer.dir: setAttribute() to Infinity followed by getAttribute() 
PASS footer.dir: setAttribute() to Infinity followed by IDL get 
PASS footer.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS footer.dir: setAttribute() to -Infinity followed by IDL get 
PASS footer.dir: setAttribute() to "\0" followed by getAttribute() 
PASS footer.dir: setAttribute() to "\0" followed by IDL get 
PASS footer.dir: setAttribute() to null followed by getAttribute() 
PASS footer.dir: setAttribute() to null followed by IDL get 
PASS footer.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS footer.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS footer.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS footer.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS footer.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS footer.dir: setAttribute() to "ltr" followed by IDL get 
PASS footer.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS footer.dir: setAttribute() to "xltr" followed by IDL get 
PASS footer.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS footer.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS footer.dir: setAttribute() to "tr" followed by getAttribute() 
PASS footer.dir: setAttribute() to "tr" followed by IDL get 
PASS footer.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS footer.dir: setAttribute() to "LTR" followed by IDL get 
PASS footer.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS footer.dir: setAttribute() to "rtl" followed by IDL get 
PASS footer.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS footer.dir: setAttribute() to "xrtl" followed by IDL get 
PASS footer.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS footer.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS footer.dir: setAttribute() to "tl" followed by getAttribute() 
PASS footer.dir: setAttribute() to "tl" followed by IDL get 
PASS footer.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS footer.dir: setAttribute() to "RTL" followed by IDL get 
PASS footer.dir: setAttribute() to "auto" followed by getAttribute() 
PASS footer.dir: setAttribute() to "auto" followed by IDL get 
PASS footer.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS footer.dir: setAttribute() to "xauto" followed by IDL get 
PASS footer.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS footer.dir: setAttribute() to "auto\0" followed by IDL get 
PASS footer.dir: setAttribute() to "uto" followed by getAttribute() 
PASS footer.dir: setAttribute() to "uto" followed by IDL get 
PASS footer.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS footer.dir: setAttribute() to "AUTO" followed by IDL get 
PASS footer.dir: IDL set to "" should not throw 
PASS footer.dir: IDL set to "" followed by getAttribute() 
PASS footer.dir: IDL set to "" followed by IDL get 
PASS footer.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS footer.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS footer.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS footer.dir: IDL set to undefined should not throw 
PASS footer.dir: IDL set to undefined followed by getAttribute() 
PASS footer.dir: IDL set to undefined followed by IDL get 
PASS footer.dir: IDL set to 7 should not throw 
PASS footer.dir: IDL set to 7 followed by getAttribute() 
PASS footer.dir: IDL set to 7 followed by IDL get 
PASS footer.dir: IDL set to 1.5 should not throw 
PASS footer.dir: IDL set to 1.5 followed by getAttribute() 
PASS footer.dir: IDL set to 1.5 followed by IDL get 
PASS footer.dir: IDL set to true should not throw 
PASS footer.dir: IDL set to true followed by getAttribute() 
PASS footer.dir: IDL set to true followed by IDL get 
PASS footer.dir: IDL set to false should not throw 
PASS footer.dir: IDL set to false followed by getAttribute() 
PASS footer.dir: IDL set to false followed by IDL get 
PASS footer.dir: IDL set to object "[object Object]" should not throw 
PASS footer.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS footer.dir: IDL set to object "[object Object]" followed by IDL get 
PASS footer.dir: IDL set to NaN should not throw 
PASS footer.dir: IDL set to NaN followed by getAttribute() 
PASS footer.dir: IDL set to NaN followed by IDL get 
PASS footer.dir: IDL set to Infinity should not throw 
PASS footer.dir: IDL set to Infinity followed by getAttribute() 
PASS footer.dir: IDL set to Infinity followed by IDL get 
PASS footer.dir: IDL set to -Infinity should not throw 
PASS footer.dir: IDL set to -Infinity followed by getAttribute() 
PASS footer.dir: IDL set to -Infinity followed by IDL get 
PASS footer.dir: IDL set to "\0" should not throw 
PASS footer.dir: IDL set to "\0" followed by getAttribute() 
PASS footer.dir: IDL set to "\0" followed by IDL get 
PASS footer.dir: IDL set to null should not throw 
PASS footer.dir: IDL set to null followed by IDL get 
PASS footer.dir: IDL set to object "test-toString" should not throw 
PASS footer.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS footer.dir: IDL set to object "test-toString" followed by IDL get 
PASS footer.dir: IDL set to object "test-valueOf" should not throw 
PASS footer.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS footer.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS footer.dir: IDL set to "ltr" should not throw 
PASS footer.dir: IDL set to "ltr" followed by getAttribute() 
PASS footer.dir: IDL set to "ltr" followed by IDL get 
PASS footer.dir: IDL set to "xltr" should not throw 
PASS footer.dir: IDL set to "xltr" followed by getAttribute() 
PASS footer.dir: IDL set to "xltr" followed by IDL get 
PASS footer.dir: IDL set to "ltr\0" should not throw 
PASS footer.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS footer.dir: IDL set to "ltr\0" followed by IDL get 
PASS footer.dir: IDL set to "tr" should not throw 
PASS footer.dir: IDL set to "tr" followed by getAttribute() 
PASS footer.dir: IDL set to "tr" followed by IDL get 
PASS footer.dir: IDL set to "LTR" should not throw 
PASS footer.dir: IDL set to "LTR" followed by getAttribute() 
PASS footer.dir: IDL set to "LTR" followed by IDL get 
PASS footer.dir: IDL set to "rtl" should not throw 
PASS footer.dir: IDL set to "rtl" followed by getAttribute() 
PASS footer.dir: IDL set to "rtl" followed by IDL get 
PASS footer.dir: IDL set to "xrtl" should not throw 
PASS footer.dir: IDL set to "xrtl" followed by getAttribute() 
PASS footer.dir: IDL set to "xrtl" followed by IDL get 
PASS footer.dir: IDL set to "rtl\0" should not throw 
PASS footer.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS footer.dir: IDL set to "rtl\0" followed by IDL get 
PASS footer.dir: IDL set to "tl" should not throw 
PASS footer.dir: IDL set to "tl" followed by getAttribute() 
PASS footer.dir: IDL set to "tl" followed by IDL get 
PASS footer.dir: IDL set to "RTL" should not throw 
PASS footer.dir: IDL set to "RTL" followed by getAttribute() 
PASS footer.dir: IDL set to "RTL" followed by IDL get 
PASS footer.dir: IDL set to "auto" should not throw 
PASS footer.dir: IDL set to "auto" followed by getAttribute() 
PASS footer.dir: IDL set to "auto" followed by IDL get 
PASS footer.dir: IDL set to "xauto" should not throw 
PASS footer.dir: IDL set to "xauto" followed by getAttribute() 
PASS footer.dir: IDL set to "xauto" followed by IDL get 
PASS footer.dir: IDL set to "auto\0" should not throw 
PASS footer.dir: IDL set to "auto\0" followed by getAttribute() 
PASS footer.dir: IDL set to "auto\0" followed by IDL get 
PASS footer.dir: IDL set to "uto" should not throw 
PASS footer.dir: IDL set to "uto" followed by getAttribute() 
PASS footer.dir: IDL set to "uto" followed by IDL get 
PASS footer.dir: IDL set to "AUTO" should not throw 
PASS footer.dir: IDL set to "AUTO" followed by getAttribute() 
PASS footer.dir: IDL set to "AUTO" followed by IDL get 
PASS footer.className (<footer class>): typeof IDL attribute 
PASS footer.className (<footer class>): IDL get with DOM attribute unset 
PASS footer.className (<footer class>): setAttribute() to "" followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to "" followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to undefined followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to undefined followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to 7 followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to 7 followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to 1.5 followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to 1.5 followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to true followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to true followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to false followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to false followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to NaN followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to NaN followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to Infinity followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to Infinity followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to -Infinity followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to -Infinity followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to "\0" followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to "\0" followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to null followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to null followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to object "test-toString" followed by IDL get 
PASS footer.className (<footer class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS footer.className (<footer class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS footer.className (<footer class>): IDL set to "" should not throw 
PASS footer.className (<footer class>): IDL set to "" followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to "" followed by IDL get 
PASS footer.className (<footer class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS footer.className (<footer class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS footer.className (<footer class>): IDL set to undefined should not throw 
PASS footer.className (<footer class>): IDL set to undefined followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to undefined followed by IDL get 
PASS footer.className (<footer class>): IDL set to 7 should not throw 
PASS footer.className (<footer class>): IDL set to 7 followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to 7 followed by IDL get 
PASS footer.className (<footer class>): IDL set to 1.5 should not throw 
PASS footer.className (<footer class>): IDL set to 1.5 followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to 1.5 followed by IDL get 
PASS footer.className (<footer class>): IDL set to true should not throw 
PASS footer.className (<footer class>): IDL set to true followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to true followed by IDL get 
PASS footer.className (<footer class>): IDL set to false should not throw 
PASS footer.className (<footer class>): IDL set to false followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to false followed by IDL get 
PASS footer.className (<footer class>): IDL set to object "[object Object]" should not throw 
PASS footer.className (<footer class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to object "[object Object]" followed by IDL get 
PASS footer.className (<footer class>): IDL set to NaN should not throw 
PASS footer.className (<footer class>): IDL set to NaN followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to NaN followed by IDL get 
PASS footer.className (<footer class>): IDL set to Infinity should not throw 
PASS footer.className (<footer class>): IDL set to Infinity followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to Infinity followed by IDL get 
PASS footer.className (<footer class>): IDL set to -Infinity should not throw 
PASS footer.className (<footer class>): IDL set to -Infinity followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to -Infinity followed by IDL get 
PASS footer.className (<footer class>): IDL set to "\0" should not throw 
PASS footer.className (<footer class>): IDL set to "\0" followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to "\0" followed by IDL get 
PASS footer.className (<footer class>): IDL set to null should not throw 
PASS footer.className (<footer class>): IDL set to null followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to null followed by IDL get 
PASS footer.className (<footer class>): IDL set to object "test-toString" should not throw 
PASS footer.className (<footer class>): IDL set to object "test-toString" followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to object "test-toString" followed by IDL get 
PASS footer.className (<footer class>): IDL set to object "test-valueOf" should not throw 
PASS footer.className (<footer class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS footer.className (<footer class>): IDL set to object "test-valueOf" followed by IDL get 
PASS footer.hidden: typeof IDL attribute 
PASS footer.hidden: IDL get with DOM attribute unset 
PASS footer.hidden: setAttribute() to "" followed by getAttribute() 
PASS footer.hidden: setAttribute() to "" followed by IDL get 
PASS footer.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS footer.hidden: setAttribute() to " foo " followed by IDL get 
PASS footer.hidden: setAttribute() to undefined followed by getAttribute() 
PASS footer.hidden: setAttribute() to undefined followed by IDL get 
PASS footer.hidden: setAttribute() to null followed by getAttribute() 
PASS footer.hidden: setAttribute() to null followed by IDL get 
PASS footer.hidden: setAttribute() to 7 followed by getAttribute() 
PASS footer.hidden: setAttribute() to 7 followed by IDL get 
PASS footer.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS footer.hidden: setAttribute() to 1.5 followed by IDL get 
PASS footer.hidden: setAttribute() to true followed by getAttribute() 
PASS footer.hidden: setAttribute() to true followed by IDL get 
PASS footer.hidden: setAttribute() to false followed by getAttribute() 
PASS footer.hidden: setAttribute() to false followed by IDL get 
PASS footer.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS footer.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS footer.hidden: setAttribute() to NaN followed by getAttribute() 
PASS footer.hidden: setAttribute() to NaN followed by IDL get 
PASS footer.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS footer.hidden: setAttribute() to Infinity followed by IDL get 
PASS footer.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS footer.hidden: setAttribute() to -Infinity followed by IDL get 
PASS footer.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS footer.hidden: setAttribute() to "\0" followed by IDL get 
PASS footer.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS footer.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS footer.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS footer.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS footer.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS footer.hidden: setAttribute() to "hidden" followed by IDL get 
PASS footer.hidden: IDL set to "" should not throw 
PASS footer.hidden: IDL set to "" followed by hasAttribute() 
PASS footer.hidden: IDL set to "" followed by IDL get 
PASS footer.hidden: IDL set to " foo " should not throw 
PASS footer.hidden: IDL set to " foo " followed by hasAttribute() 
PASS footer.hidden: IDL set to " foo " followed by IDL get 
PASS footer.hidden: IDL set to undefined should not throw 
PASS footer.hidden: IDL set to undefined followed by hasAttribute() 
PASS footer.hidden: IDL set to undefined followed by IDL get 
PASS footer.hidden: IDL set to null should not throw 
PASS footer.hidden: IDL set to null followed by hasAttribute() 
PASS footer.hidden: IDL set to null followed by IDL get 
PASS footer.hidden: IDL set to 7 should not throw 
PASS footer.hidden: IDL set to 7 followed by hasAttribute() 
PASS footer.hidden: IDL set to 7 followed by IDL get 
PASS footer.hidden: IDL set to 1.5 should not throw 
PASS footer.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS footer.hidden: IDL set to 1.5 followed by IDL get 
PASS footer.hidden: IDL set to true should not throw 
PASS footer.hidden: IDL set to true followed by hasAttribute() 
PASS footer.hidden: IDL set to true followed by IDL get 
PASS footer.hidden: IDL set to false should not throw 
PASS footer.hidden: IDL set to false followed by hasAttribute() 
PASS footer.hidden: IDL set to false followed by IDL get 
PASS footer.hidden: IDL set to object "[object Object]" should not throw 
PASS footer.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS footer.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS footer.hidden: IDL set to NaN should not throw 
PASS footer.hidden: IDL set to NaN followed by hasAttribute() 
PASS footer.hidden: IDL set to NaN followed by IDL get 
PASS footer.hidden: IDL set to Infinity should not throw 
PASS footer.hidden: IDL set to Infinity followed by hasAttribute() 
PASS footer.hidden: IDL set to Infinity followed by IDL get 
PASS footer.hidden: IDL set to -Infinity should not throw 
PASS footer.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS footer.hidden: IDL set to -Infinity followed by IDL get 
PASS footer.hidden: IDL set to "\0" should not throw 
PASS footer.hidden: IDL set to "\0" followed by hasAttribute() 
PASS footer.hidden: IDL set to "\0" followed by IDL get 
PASS footer.hidden: IDL set to object "test-toString" should not throw 
PASS footer.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS footer.hidden: IDL set to object "test-toString" followed by IDL get 
PASS footer.hidden: IDL set to object "test-valueOf" should not throw 
PASS footer.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS footer.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS footer.accessKey: typeof IDL attribute 
PASS footer.accessKey: IDL get with DOM attribute unset 
PASS footer.accessKey: setAttribute() to "" followed by getAttribute() 
PASS footer.accessKey: setAttribute() to "" followed by IDL get 
PASS footer.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS footer.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS footer.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS footer.accessKey: setAttribute() to undefined followed by IDL get 
PASS footer.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS footer.accessKey: setAttribute() to 7 followed by IDL get 
PASS footer.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS footer.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS footer.accessKey: setAttribute() to true followed by getAttribute() 
PASS footer.accessKey: setAttribute() to true followed by IDL get 
PASS footer.accessKey: setAttribute() to false followed by getAttribute() 
PASS footer.accessKey: setAttribute() to false followed by IDL get 
PASS footer.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS footer.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS footer.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS footer.accessKey: setAttribute() to NaN followed by IDL get 
PASS footer.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS footer.accessKey: setAttribute() to Infinity followed by IDL get 
PASS footer.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS footer.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS footer.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS footer.accessKey: setAttribute() to "\0" followed by IDL get 
PASS footer.accessKey: setAttribute() to null followed by getAttribute() 
PASS footer.accessKey: setAttribute() to null followed by IDL get 
PASS footer.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS footer.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS footer.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS footer.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS footer.accessKey: IDL set to "" should not throw 
PASS footer.accessKey: IDL set to "" followed by getAttribute() 
PASS footer.accessKey: IDL set to "" followed by IDL get 
PASS footer.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS footer.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS footer.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS footer.accessKey: IDL set to undefined should not throw 
PASS footer.accessKey: IDL set to undefined followed by getAttribute() 
PASS footer.accessKey: IDL set to undefined followed by IDL get 
PASS footer.accessKey: IDL set to 7 should not throw 
PASS footer.accessKey: IDL set to 7 followed by getAttribute() 
PASS footer.accessKey: IDL set to 7 followed by IDL get 
PASS footer.accessKey: IDL set to 1.5 should not throw 
PASS footer.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS footer.accessKey: IDL set to 1.5 followed by IDL get 
PASS footer.accessKey: IDL set to true should not throw 
PASS footer.accessKey: IDL set to true followed by getAttribute() 
PASS footer.accessKey: IDL set to true followed by IDL get 
PASS footer.accessKey: IDL set to false should not throw 
PASS footer.accessKey: IDL set to false followed by getAttribute() 
PASS footer.accessKey: IDL set to false followed by IDL get 
PASS footer.accessKey: IDL set to object "[object Object]" should not throw 
PASS footer.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS footer.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS footer.accessKey: IDL set to NaN should not throw 
PASS footer.accessKey: IDL set to NaN followed by getAttribute() 
PASS footer.accessKey: IDL set to NaN followed by IDL get 
PASS footer.accessKey: IDL set to Infinity should not throw 
PASS footer.accessKey: IDL set to Infinity followed by getAttribute() 
PASS footer.accessKey: IDL set to Infinity followed by IDL get 
PASS footer.accessKey: IDL set to -Infinity should not throw 
PASS footer.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS footer.accessKey: IDL set to -Infinity followed by IDL get 
PASS footer.accessKey: IDL set to "\0" should not throw 
PASS footer.accessKey: IDL set to "\0" followed by getAttribute() 
PASS footer.accessKey: IDL set to "\0" followed by IDL get 
PASS footer.accessKey: IDL set to null should not throw 
PASS footer.accessKey: IDL set to null followed by getAttribute() 
PASS footer.accessKey: IDL set to null followed by IDL get 
PASS footer.accessKey: IDL set to object "test-toString" should not throw 
PASS footer.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS footer.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS footer.accessKey: IDL set to object "test-valueOf" should not throw 
PASS footer.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS footer.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS footer.tabIndex: typeof IDL attribute 
PASS footer.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to -36 followed by IDL get 
PASS footer.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to -1 followed by IDL get 
PASS footer.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to 0 followed by IDL get 
PASS footer.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to 1 followed by IDL get 
PASS footer.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS footer.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS footer.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS footer.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS footer.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to "0" followed by IDL get 
PASS footer.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to "1" followed by IDL get 
PASS footer.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS footer.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS footer.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS footer.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS footer.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS footer.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS footer.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS footer.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS footer.tabIndex: IDL set to -36 should not throw 
PASS footer.tabIndex: IDL set to -36 followed by getAttribute() 
PASS footer.tabIndex: IDL set to -36 followed by IDL get 
PASS footer.tabIndex: IDL set to -1 should not throw 
PASS footer.tabIndex: IDL set to -1 followed by getAttribute() 
PASS footer.tabIndex: IDL set to -1 followed by IDL get 
PASS footer.tabIndex: IDL set to 0 should not throw 
PASS footer.tabIndex: IDL set to 0 followed by getAttribute() 
PASS footer.tabIndex: IDL set to 0 followed by IDL get 
PASS footer.tabIndex: IDL set to 1 should not throw 
PASS footer.tabIndex: IDL set to 1 followed by getAttribute() 
PASS footer.tabIndex: IDL set to 1 followed by IDL get 
PASS footer.tabIndex: IDL set to 2147483647 should not throw 
PASS footer.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS footer.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS footer.tabIndex: IDL set to -2147483648 should not throw 
PASS footer.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS footer.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL footer.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL footer.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS footer.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to null followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to true followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to false followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL footer.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS footer.itemScope: IDL set to "" should not throw 
FAIL footer.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL footer.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS footer.itemScope: IDL set to " foo " should not throw 
PASS footer.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL footer.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS footer.itemScope: IDL set to undefined should not throw 
FAIL footer.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL footer.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS footer.itemScope: IDL set to null should not throw 
FAIL footer.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL footer.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS footer.itemScope: IDL set to 7 should not throw 
PASS footer.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL footer.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS footer.itemScope: IDL set to 1.5 should not throw 
PASS footer.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL footer.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS footer.itemScope: IDL set to true should not throw 
PASS footer.itemScope: IDL set to true followed by hasAttribute() 
PASS footer.itemScope: IDL set to true followed by IDL get 
PASS footer.itemScope: IDL set to false should not throw 
FAIL footer.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS footer.itemScope: IDL set to false followed by IDL get 
PASS footer.itemScope: IDL set to object "[object Object]" should not throw 
PASS footer.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL footer.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS footer.itemScope: IDL set to NaN should not throw 
FAIL footer.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL footer.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS footer.itemScope: IDL set to Infinity should not throw 
PASS footer.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL footer.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS footer.itemScope: IDL set to -Infinity should not throw 
PASS footer.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL footer.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS footer.itemScope: IDL set to "\0" should not throw 
PASS footer.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL footer.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS footer.itemScope: IDL set to object "test-toString" should not throw 
PASS footer.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL footer.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS footer.itemScope: IDL set to object "test-valueOf" should not throw 
PASS footer.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL footer.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL footer.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL footer.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS footer.itemId: setAttribute() to "" followed by getAttribute() 
FAIL footer.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS footer.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL footer.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS footer.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL footer.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS footer.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL footer.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS footer.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL footer.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS footer.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL footer.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS footer.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL footer.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS footer.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL footer.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS footer.itemId: setAttribute() to true followed by getAttribute() 
FAIL footer.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS footer.itemId: setAttribute() to false followed by getAttribute() 
FAIL footer.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS footer.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL footer.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS footer.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL footer.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS footer.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL footer.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS footer.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL footer.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS footer.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL footer.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS footer.itemId: setAttribute() to null followed by getAttribute() 
FAIL footer.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS footer.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL footer.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS footer.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL footer.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS footer.itemId: IDL set to "" should not throw 
FAIL footer.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL footer.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS footer.itemId: IDL set to " foo " should not throw 
FAIL footer.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL footer.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS footer.itemId: IDL set to "http://site.example/" should not throw 
FAIL footer.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS footer.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS footer.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL footer.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL footer.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS footer.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL footer.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL footer.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS footer.itemId: IDL set to undefined should not throw 
FAIL footer.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL footer.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS footer.itemId: IDL set to 7 should not throw 
FAIL footer.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL footer.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS footer.itemId: IDL set to 1.5 should not throw 
FAIL footer.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL footer.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS footer.itemId: IDL set to true should not throw 
FAIL footer.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL footer.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS footer.itemId: IDL set to false should not throw 
FAIL footer.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL footer.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS footer.itemId: IDL set to object "[object Object]" should not throw 
FAIL footer.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL footer.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS footer.itemId: IDL set to NaN should not throw 
FAIL footer.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL footer.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS footer.itemId: IDL set to Infinity should not throw 
FAIL footer.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL footer.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS footer.itemId: IDL set to -Infinity should not throw 
FAIL footer.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL footer.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS footer.itemId: IDL set to "\0" should not throw 
FAIL footer.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL footer.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS footer.itemId: IDL set to null should not throw 
FAIL footer.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL footer.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS footer.itemId: IDL set to object "test-toString" should not throw 
FAIL footer.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL footer.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS footer.itemId: IDL set to object "test-valueOf" should not throw 
PASS footer.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL footer.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS address.title: typeof IDL attribute 
PASS address.title: IDL get with DOM attribute unset 
PASS address.title: setAttribute() to "" followed by getAttribute() 
PASS address.title: setAttribute() to "" followed by IDL get 
PASS address.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS address.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS address.title: setAttribute() to undefined followed by getAttribute() 
PASS address.title: setAttribute() to undefined followed by IDL get 
PASS address.title: setAttribute() to 7 followed by getAttribute() 
PASS address.title: setAttribute() to 7 followed by IDL get 
PASS address.title: setAttribute() to 1.5 followed by getAttribute() 
PASS address.title: setAttribute() to 1.5 followed by IDL get 
PASS address.title: setAttribute() to true followed by getAttribute() 
PASS address.title: setAttribute() to true followed by IDL get 
PASS address.title: setAttribute() to false followed by getAttribute() 
PASS address.title: setAttribute() to false followed by IDL get 
PASS address.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS address.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS address.title: setAttribute() to NaN followed by getAttribute() 
PASS address.title: setAttribute() to NaN followed by IDL get 
PASS address.title: setAttribute() to Infinity followed by getAttribute() 
PASS address.title: setAttribute() to Infinity followed by IDL get 
PASS address.title: setAttribute() to -Infinity followed by getAttribute() 
PASS address.title: setAttribute() to -Infinity followed by IDL get 
PASS address.title: setAttribute() to "\0" followed by getAttribute() 
PASS address.title: setAttribute() to "\0" followed by IDL get 
PASS address.title: setAttribute() to null followed by getAttribute() 
PASS address.title: setAttribute() to null followed by IDL get 
PASS address.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS address.title: setAttribute() to object "test-toString" followed by IDL get 
PASS address.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS address.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS address.title: IDL set to "" should not throw 
PASS address.title: IDL set to "" followed by getAttribute() 
PASS address.title: IDL set to "" followed by IDL get 
PASS address.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS address.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS address.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS address.title: IDL set to undefined should not throw 
PASS address.title: IDL set to undefined followed by getAttribute() 
PASS address.title: IDL set to undefined followed by IDL get 
PASS address.title: IDL set to 7 should not throw 
PASS address.title: IDL set to 7 followed by getAttribute() 
PASS address.title: IDL set to 7 followed by IDL get 
PASS address.title: IDL set to 1.5 should not throw 
PASS address.title: IDL set to 1.5 followed by getAttribute() 
PASS address.title: IDL set to 1.5 followed by IDL get 
PASS address.title: IDL set to true should not throw 
PASS address.title: IDL set to true followed by getAttribute() 
PASS address.title: IDL set to true followed by IDL get 
PASS address.title: IDL set to false should not throw 
PASS address.title: IDL set to false followed by getAttribute() 
PASS address.title: IDL set to false followed by IDL get 
PASS address.title: IDL set to object "[object Object]" should not throw 
PASS address.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS address.title: IDL set to object "[object Object]" followed by IDL get 
PASS address.title: IDL set to NaN should not throw 
PASS address.title: IDL set to NaN followed by getAttribute() 
PASS address.title: IDL set to NaN followed by IDL get 
PASS address.title: IDL set to Infinity should not throw 
PASS address.title: IDL set to Infinity followed by getAttribute() 
PASS address.title: IDL set to Infinity followed by IDL get 
PASS address.title: IDL set to -Infinity should not throw 
PASS address.title: IDL set to -Infinity followed by getAttribute() 
PASS address.title: IDL set to -Infinity followed by IDL get 
PASS address.title: IDL set to "\0" should not throw 
PASS address.title: IDL set to "\0" followed by getAttribute() 
PASS address.title: IDL set to "\0" followed by IDL get 
PASS address.title: IDL set to null should not throw 
PASS address.title: IDL set to null followed by getAttribute() 
PASS address.title: IDL set to null followed by IDL get 
PASS address.title: IDL set to object "test-toString" should not throw 
PASS address.title: IDL set to object "test-toString" followed by getAttribute() 
PASS address.title: IDL set to object "test-toString" followed by IDL get 
PASS address.title: IDL set to object "test-valueOf" should not throw 
PASS address.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS address.title: IDL set to object "test-valueOf" followed by IDL get 
PASS address.lang: typeof IDL attribute 
PASS address.lang: IDL get with DOM attribute unset 
PASS address.lang: setAttribute() to "" followed by getAttribute() 
PASS address.lang: setAttribute() to "" followed by IDL get 
PASS address.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS address.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS address.lang: setAttribute() to undefined followed by getAttribute() 
PASS address.lang: setAttribute() to undefined followed by IDL get 
PASS address.lang: setAttribute() to 7 followed by getAttribute() 
PASS address.lang: setAttribute() to 7 followed by IDL get 
PASS address.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS address.lang: setAttribute() to 1.5 followed by IDL get 
PASS address.lang: setAttribute() to true followed by getAttribute() 
PASS address.lang: setAttribute() to true followed by IDL get 
PASS address.lang: setAttribute() to false followed by getAttribute() 
PASS address.lang: setAttribute() to false followed by IDL get 
PASS address.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS address.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS address.lang: setAttribute() to NaN followed by getAttribute() 
PASS address.lang: setAttribute() to NaN followed by IDL get 
PASS address.lang: setAttribute() to Infinity followed by getAttribute() 
PASS address.lang: setAttribute() to Infinity followed by IDL get 
PASS address.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS address.lang: setAttribute() to -Infinity followed by IDL get 
PASS address.lang: setAttribute() to "\0" followed by getAttribute() 
PASS address.lang: setAttribute() to "\0" followed by IDL get 
PASS address.lang: setAttribute() to null followed by getAttribute() 
PASS address.lang: setAttribute() to null followed by IDL get 
PASS address.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS address.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS address.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS address.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS address.lang: IDL set to "" should not throw 
PASS address.lang: IDL set to "" followed by getAttribute() 
PASS address.lang: IDL set to "" followed by IDL get 
PASS address.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS address.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS address.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS address.lang: IDL set to undefined should not throw 
PASS address.lang: IDL set to undefined followed by getAttribute() 
PASS address.lang: IDL set to undefined followed by IDL get 
PASS address.lang: IDL set to 7 should not throw 
PASS address.lang: IDL set to 7 followed by getAttribute() 
PASS address.lang: IDL set to 7 followed by IDL get 
PASS address.lang: IDL set to 1.5 should not throw 
PASS address.lang: IDL set to 1.5 followed by getAttribute() 
PASS address.lang: IDL set to 1.5 followed by IDL get 
PASS address.lang: IDL set to true should not throw 
PASS address.lang: IDL set to true followed by getAttribute() 
PASS address.lang: IDL set to true followed by IDL get 
PASS address.lang: IDL set to false should not throw 
PASS address.lang: IDL set to false followed by getAttribute() 
PASS address.lang: IDL set to false followed by IDL get 
PASS address.lang: IDL set to object "[object Object]" should not throw 
PASS address.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS address.lang: IDL set to object "[object Object]" followed by IDL get 
PASS address.lang: IDL set to NaN should not throw 
PASS address.lang: IDL set to NaN followed by getAttribute() 
PASS address.lang: IDL set to NaN followed by IDL get 
PASS address.lang: IDL set to Infinity should not throw 
PASS address.lang: IDL set to Infinity followed by getAttribute() 
PASS address.lang: IDL set to Infinity followed by IDL get 
PASS address.lang: IDL set to -Infinity should not throw 
PASS address.lang: IDL set to -Infinity followed by getAttribute() 
PASS address.lang: IDL set to -Infinity followed by IDL get 
PASS address.lang: IDL set to "\0" should not throw 
PASS address.lang: IDL set to "\0" followed by getAttribute() 
PASS address.lang: IDL set to "\0" followed by IDL get 
PASS address.lang: IDL set to null should not throw 
PASS address.lang: IDL set to null followed by getAttribute() 
PASS address.lang: IDL set to null followed by IDL get 
PASS address.lang: IDL set to object "test-toString" should not throw 
PASS address.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS address.lang: IDL set to object "test-toString" followed by IDL get 
PASS address.lang: IDL set to object "test-valueOf" should not throw 
PASS address.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS address.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS address.dir: typeof IDL attribute 
PASS address.dir: IDL get with DOM attribute unset 
PASS address.dir: setAttribute() to "" followed by getAttribute() 
PASS address.dir: setAttribute() to "" followed by IDL get 
PASS address.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS address.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS address.dir: setAttribute() to undefined followed by getAttribute() 
PASS address.dir: setAttribute() to undefined followed by IDL get 
PASS address.dir: setAttribute() to 7 followed by getAttribute() 
PASS address.dir: setAttribute() to 7 followed by IDL get 
PASS address.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS address.dir: setAttribute() to 1.5 followed by IDL get 
PASS address.dir: setAttribute() to true followed by getAttribute() 
PASS address.dir: setAttribute() to true followed by IDL get 
PASS address.dir: setAttribute() to false followed by getAttribute() 
PASS address.dir: setAttribute() to false followed by IDL get 
PASS address.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS address.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS address.dir: setAttribute() to NaN followed by getAttribute() 
PASS address.dir: setAttribute() to NaN followed by IDL get 
PASS address.dir: setAttribute() to Infinity followed by getAttribute() 
PASS address.dir: setAttribute() to Infinity followed by IDL get 
PASS address.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS address.dir: setAttribute() to -Infinity followed by IDL get 
PASS address.dir: setAttribute() to "\0" followed by getAttribute() 
PASS address.dir: setAttribute() to "\0" followed by IDL get 
PASS address.dir: setAttribute() to null followed by getAttribute() 
PASS address.dir: setAttribute() to null followed by IDL get 
PASS address.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS address.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS address.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS address.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS address.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS address.dir: setAttribute() to "ltr" followed by IDL get 
PASS address.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS address.dir: setAttribute() to "xltr" followed by IDL get 
PASS address.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS address.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS address.dir: setAttribute() to "tr" followed by getAttribute() 
PASS address.dir: setAttribute() to "tr" followed by IDL get 
PASS address.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS address.dir: setAttribute() to "LTR" followed by IDL get 
PASS address.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS address.dir: setAttribute() to "rtl" followed by IDL get 
PASS address.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS address.dir: setAttribute() to "xrtl" followed by IDL get 
PASS address.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS address.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS address.dir: setAttribute() to "tl" followed by getAttribute() 
PASS address.dir: setAttribute() to "tl" followed by IDL get 
PASS address.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS address.dir: setAttribute() to "RTL" followed by IDL get 
PASS address.dir: setAttribute() to "auto" followed by getAttribute() 
PASS address.dir: setAttribute() to "auto" followed by IDL get 
PASS address.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS address.dir: setAttribute() to "xauto" followed by IDL get 
PASS address.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS address.dir: setAttribute() to "auto\0" followed by IDL get 
PASS address.dir: setAttribute() to "uto" followed by getAttribute() 
PASS address.dir: setAttribute() to "uto" followed by IDL get 
PASS address.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS address.dir: setAttribute() to "AUTO" followed by IDL get 
PASS address.dir: IDL set to "" should not throw 
PASS address.dir: IDL set to "" followed by getAttribute() 
PASS address.dir: IDL set to "" followed by IDL get 
PASS address.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS address.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS address.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS address.dir: IDL set to undefined should not throw 
PASS address.dir: IDL set to undefined followed by getAttribute() 
PASS address.dir: IDL set to undefined followed by IDL get 
PASS address.dir: IDL set to 7 should not throw 
PASS address.dir: IDL set to 7 followed by getAttribute() 
PASS address.dir: IDL set to 7 followed by IDL get 
PASS address.dir: IDL set to 1.5 should not throw 
PASS address.dir: IDL set to 1.5 followed by getAttribute() 
PASS address.dir: IDL set to 1.5 followed by IDL get 
PASS address.dir: IDL set to true should not throw 
PASS address.dir: IDL set to true followed by getAttribute() 
PASS address.dir: IDL set to true followed by IDL get 
PASS address.dir: IDL set to false should not throw 
PASS address.dir: IDL set to false followed by getAttribute() 
PASS address.dir: IDL set to false followed by IDL get 
PASS address.dir: IDL set to object "[object Object]" should not throw 
PASS address.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS address.dir: IDL set to object "[object Object]" followed by IDL get 
PASS address.dir: IDL set to NaN should not throw 
PASS address.dir: IDL set to NaN followed by getAttribute() 
PASS address.dir: IDL set to NaN followed by IDL get 
PASS address.dir: IDL set to Infinity should not throw 
PASS address.dir: IDL set to Infinity followed by getAttribute() 
PASS address.dir: IDL set to Infinity followed by IDL get 
PASS address.dir: IDL set to -Infinity should not throw 
PASS address.dir: IDL set to -Infinity followed by getAttribute() 
PASS address.dir: IDL set to -Infinity followed by IDL get 
PASS address.dir: IDL set to "\0" should not throw 
PASS address.dir: IDL set to "\0" followed by getAttribute() 
PASS address.dir: IDL set to "\0" followed by IDL get 
PASS address.dir: IDL set to null should not throw 
PASS address.dir: IDL set to null followed by IDL get 
PASS address.dir: IDL set to object "test-toString" should not throw 
PASS address.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS address.dir: IDL set to object "test-toString" followed by IDL get 
PASS address.dir: IDL set to object "test-valueOf" should not throw 
PASS address.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS address.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS address.dir: IDL set to "ltr" should not throw 
PASS address.dir: IDL set to "ltr" followed by getAttribute() 
PASS address.dir: IDL set to "ltr" followed by IDL get 
PASS address.dir: IDL set to "xltr" should not throw 
PASS address.dir: IDL set to "xltr" followed by getAttribute() 
PASS address.dir: IDL set to "xltr" followed by IDL get 
PASS address.dir: IDL set to "ltr\0" should not throw 
PASS address.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS address.dir: IDL set to "ltr\0" followed by IDL get 
PASS address.dir: IDL set to "tr" should not throw 
PASS address.dir: IDL set to "tr" followed by getAttribute() 
PASS address.dir: IDL set to "tr" followed by IDL get 
PASS address.dir: IDL set to "LTR" should not throw 
PASS address.dir: IDL set to "LTR" followed by getAttribute() 
PASS address.dir: IDL set to "LTR" followed by IDL get 
PASS address.dir: IDL set to "rtl" should not throw 
PASS address.dir: IDL set to "rtl" followed by getAttribute() 
PASS address.dir: IDL set to "rtl" followed by IDL get 
PASS address.dir: IDL set to "xrtl" should not throw 
PASS address.dir: IDL set to "xrtl" followed by getAttribute() 
PASS address.dir: IDL set to "xrtl" followed by IDL get 
PASS address.dir: IDL set to "rtl\0" should not throw 
PASS address.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS address.dir: IDL set to "rtl\0" followed by IDL get 
PASS address.dir: IDL set to "tl" should not throw 
PASS address.dir: IDL set to "tl" followed by getAttribute() 
PASS address.dir: IDL set to "tl" followed by IDL get 
PASS address.dir: IDL set to "RTL" should not throw 
PASS address.dir: IDL set to "RTL" followed by getAttribute() 
PASS address.dir: IDL set to "RTL" followed by IDL get 
PASS address.dir: IDL set to "auto" should not throw 
PASS address.dir: IDL set to "auto" followed by getAttribute() 
PASS address.dir: IDL set to "auto" followed by IDL get 
PASS address.dir: IDL set to "xauto" should not throw 
PASS address.dir: IDL set to "xauto" followed by getAttribute() 
PASS address.dir: IDL set to "xauto" followed by IDL get 
PASS address.dir: IDL set to "auto\0" should not throw 
PASS address.dir: IDL set to "auto\0" followed by getAttribute() 
PASS address.dir: IDL set to "auto\0" followed by IDL get 
PASS address.dir: IDL set to "uto" should not throw 
PASS address.dir: IDL set to "uto" followed by getAttribute() 
PASS address.dir: IDL set to "uto" followed by IDL get 
PASS address.dir: IDL set to "AUTO" should not throw 
PASS address.dir: IDL set to "AUTO" followed by getAttribute() 
PASS address.dir: IDL set to "AUTO" followed by IDL get 
PASS address.className (<address class>): typeof IDL attribute 
PASS address.className (<address class>): IDL get with DOM attribute unset 
PASS address.className (<address class>): setAttribute() to "" followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to "" followed by IDL get 
PASS address.className (<address class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS address.className (<address class>): setAttribute() to undefined followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to undefined followed by IDL get 
PASS address.className (<address class>): setAttribute() to 7 followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to 7 followed by IDL get 
PASS address.className (<address class>): setAttribute() to 1.5 followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to 1.5 followed by IDL get 
PASS address.className (<address class>): setAttribute() to true followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to true followed by IDL get 
PASS address.className (<address class>): setAttribute() to false followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to false followed by IDL get 
PASS address.className (<address class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS address.className (<address class>): setAttribute() to NaN followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to NaN followed by IDL get 
PASS address.className (<address class>): setAttribute() to Infinity followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to Infinity followed by IDL get 
PASS address.className (<address class>): setAttribute() to -Infinity followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to -Infinity followed by IDL get 
PASS address.className (<address class>): setAttribute() to "\0" followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to "\0" followed by IDL get 
PASS address.className (<address class>): setAttribute() to null followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to null followed by IDL get 
PASS address.className (<address class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to object "test-toString" followed by IDL get 
PASS address.className (<address class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS address.className (<address class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS address.className (<address class>): IDL set to "" should not throw 
PASS address.className (<address class>): IDL set to "" followed by getAttribute() 
PASS address.className (<address class>): IDL set to "" followed by IDL get 
PASS address.className (<address class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS address.className (<address class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS address.className (<address class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS address.className (<address class>): IDL set to undefined should not throw 
PASS address.className (<address class>): IDL set to undefined followed by getAttribute() 
PASS address.className (<address class>): IDL set to undefined followed by IDL get 
PASS address.className (<address class>): IDL set to 7 should not throw 
PASS address.className (<address class>): IDL set to 7 followed by getAttribute() 
PASS address.className (<address class>): IDL set to 7 followed by IDL get 
PASS address.className (<address class>): IDL set to 1.5 should not throw 
PASS address.className (<address class>): IDL set to 1.5 followed by getAttribute() 
PASS address.className (<address class>): IDL set to 1.5 followed by IDL get 
PASS address.className (<address class>): IDL set to true should not throw 
PASS address.className (<address class>): IDL set to true followed by getAttribute() 
PASS address.className (<address class>): IDL set to true followed by IDL get 
PASS address.className (<address class>): IDL set to false should not throw 
PASS address.className (<address class>): IDL set to false followed by getAttribute() 
PASS address.className (<address class>): IDL set to false followed by IDL get 
PASS address.className (<address class>): IDL set to object "[object Object]" should not throw 
PASS address.className (<address class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS address.className (<address class>): IDL set to object "[object Object]" followed by IDL get 
PASS address.className (<address class>): IDL set to NaN should not throw 
PASS address.className (<address class>): IDL set to NaN followed by getAttribute() 
PASS address.className (<address class>): IDL set to NaN followed by IDL get 
PASS address.className (<address class>): IDL set to Infinity should not throw 
PASS address.className (<address class>): IDL set to Infinity followed by getAttribute() 
PASS address.className (<address class>): IDL set to Infinity followed by IDL get 
PASS address.className (<address class>): IDL set to -Infinity should not throw 
PASS address.className (<address class>): IDL set to -Infinity followed by getAttribute() 
PASS address.className (<address class>): IDL set to -Infinity followed by IDL get 
PASS address.className (<address class>): IDL set to "\0" should not throw 
PASS address.className (<address class>): IDL set to "\0" followed by getAttribute() 
PASS address.className (<address class>): IDL set to "\0" followed by IDL get 
PASS address.className (<address class>): IDL set to null should not throw 
PASS address.className (<address class>): IDL set to null followed by getAttribute() 
PASS address.className (<address class>): IDL set to null followed by IDL get 
PASS address.className (<address class>): IDL set to object "test-toString" should not throw 
PASS address.className (<address class>): IDL set to object "test-toString" followed by getAttribute() 
PASS address.className (<address class>): IDL set to object "test-toString" followed by IDL get 
PASS address.className (<address class>): IDL set to object "test-valueOf" should not throw 
PASS address.className (<address class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS address.className (<address class>): IDL set to object "test-valueOf" followed by IDL get 
PASS address.hidden: typeof IDL attribute 
PASS address.hidden: IDL get with DOM attribute unset 
PASS address.hidden: setAttribute() to "" followed by getAttribute() 
PASS address.hidden: setAttribute() to "" followed by IDL get 
PASS address.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS address.hidden: setAttribute() to " foo " followed by IDL get 
PASS address.hidden: setAttribute() to undefined followed by getAttribute() 
PASS address.hidden: setAttribute() to undefined followed by IDL get 
PASS address.hidden: setAttribute() to null followed by getAttribute() 
PASS address.hidden: setAttribute() to null followed by IDL get 
PASS address.hidden: setAttribute() to 7 followed by getAttribute() 
PASS address.hidden: setAttribute() to 7 followed by IDL get 
PASS address.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS address.hidden: setAttribute() to 1.5 followed by IDL get 
PASS address.hidden: setAttribute() to true followed by getAttribute() 
PASS address.hidden: setAttribute() to true followed by IDL get 
PASS address.hidden: setAttribute() to false followed by getAttribute() 
PASS address.hidden: setAttribute() to false followed by IDL get 
PASS address.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS address.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS address.hidden: setAttribute() to NaN followed by getAttribute() 
PASS address.hidden: setAttribute() to NaN followed by IDL get 
PASS address.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS address.hidden: setAttribute() to Infinity followed by IDL get 
PASS address.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS address.hidden: setAttribute() to -Infinity followed by IDL get 
PASS address.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS address.hidden: setAttribute() to "\0" followed by IDL get 
PASS address.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS address.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS address.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS address.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS address.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS address.hidden: setAttribute() to "hidden" followed by IDL get 
PASS address.hidden: IDL set to "" should not throw 
PASS address.hidden: IDL set to "" followed by hasAttribute() 
PASS address.hidden: IDL set to "" followed by IDL get 
PASS address.hidden: IDL set to " foo " should not throw 
PASS address.hidden: IDL set to " foo " followed by hasAttribute() 
PASS address.hidden: IDL set to " foo " followed by IDL get 
PASS address.hidden: IDL set to undefined should not throw 
PASS address.hidden: IDL set to undefined followed by hasAttribute() 
PASS address.hidden: IDL set to undefined followed by IDL get 
PASS address.hidden: IDL set to null should not throw 
PASS address.hidden: IDL set to null followed by hasAttribute() 
PASS address.hidden: IDL set to null followed by IDL get 
PASS address.hidden: IDL set to 7 should not throw 
PASS address.hidden: IDL set to 7 followed by hasAttribute() 
PASS address.hidden: IDL set to 7 followed by IDL get 
PASS address.hidden: IDL set to 1.5 should not throw 
PASS address.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS address.hidden: IDL set to 1.5 followed by IDL get 
PASS address.hidden: IDL set to true should not throw 
PASS address.hidden: IDL set to true followed by hasAttribute() 
PASS address.hidden: IDL set to true followed by IDL get 
PASS address.hidden: IDL set to false should not throw 
PASS address.hidden: IDL set to false followed by hasAttribute() 
PASS address.hidden: IDL set to false followed by IDL get 
PASS address.hidden: IDL set to object "[object Object]" should not throw 
PASS address.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS address.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS address.hidden: IDL set to NaN should not throw 
PASS address.hidden: IDL set to NaN followed by hasAttribute() 
PASS address.hidden: IDL set to NaN followed by IDL get 
PASS address.hidden: IDL set to Infinity should not throw 
PASS address.hidden: IDL set to Infinity followed by hasAttribute() 
PASS address.hidden: IDL set to Infinity followed by IDL get 
PASS address.hidden: IDL set to -Infinity should not throw 
PASS address.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS address.hidden: IDL set to -Infinity followed by IDL get 
PASS address.hidden: IDL set to "\0" should not throw 
PASS address.hidden: IDL set to "\0" followed by hasAttribute() 
PASS address.hidden: IDL set to "\0" followed by IDL get 
PASS address.hidden: IDL set to object "test-toString" should not throw 
PASS address.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS address.hidden: IDL set to object "test-toString" followed by IDL get 
PASS address.hidden: IDL set to object "test-valueOf" should not throw 
PASS address.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS address.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS address.accessKey: typeof IDL attribute 
PASS address.accessKey: IDL get with DOM attribute unset 
PASS address.accessKey: setAttribute() to "" followed by getAttribute() 
PASS address.accessKey: setAttribute() to "" followed by IDL get 
PASS address.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS address.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS address.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS address.accessKey: setAttribute() to undefined followed by IDL get 
PASS address.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS address.accessKey: setAttribute() to 7 followed by IDL get 
PASS address.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS address.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS address.accessKey: setAttribute() to true followed by getAttribute() 
PASS address.accessKey: setAttribute() to true followed by IDL get 
PASS address.accessKey: setAttribute() to false followed by getAttribute() 
PASS address.accessKey: setAttribute() to false followed by IDL get 
PASS address.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS address.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS address.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS address.accessKey: setAttribute() to NaN followed by IDL get 
PASS address.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS address.accessKey: setAttribute() to Infinity followed by IDL get 
PASS address.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS address.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS address.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS address.accessKey: setAttribute() to "\0" followed by IDL get 
PASS address.accessKey: setAttribute() to null followed by getAttribute() 
PASS address.accessKey: setAttribute() to null followed by IDL get 
PASS address.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS address.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS address.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS address.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS address.accessKey: IDL set to "" should not throw 
PASS address.accessKey: IDL set to "" followed by getAttribute() 
PASS address.accessKey: IDL set to "" followed by IDL get 
PASS address.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS address.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS address.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS address.accessKey: IDL set to undefined should not throw 
PASS address.accessKey: IDL set to undefined followed by getAttribute() 
PASS address.accessKey: IDL set to undefined followed by IDL get 
PASS address.accessKey: IDL set to 7 should not throw 
PASS address.accessKey: IDL set to 7 followed by getAttribute() 
PASS address.accessKey: IDL set to 7 followed by IDL get 
PASS address.accessKey: IDL set to 1.5 should not throw 
PASS address.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS address.accessKey: IDL set to 1.5 followed by IDL get 
PASS address.accessKey: IDL set to true should not throw 
PASS address.accessKey: IDL set to true followed by getAttribute() 
PASS address.accessKey: IDL set to true followed by IDL get 
PASS address.accessKey: IDL set to false should not throw 
PASS address.accessKey: IDL set to false followed by getAttribute() 
PASS address.accessKey: IDL set to false followed by IDL get 
PASS address.accessKey: IDL set to object "[object Object]" should not throw 
PASS address.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS address.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS address.accessKey: IDL set to NaN should not throw 
PASS address.accessKey: IDL set to NaN followed by getAttribute() 
PASS address.accessKey: IDL set to NaN followed by IDL get 
PASS address.accessKey: IDL set to Infinity should not throw 
PASS address.accessKey: IDL set to Infinity followed by getAttribute() 
PASS address.accessKey: IDL set to Infinity followed by IDL get 
PASS address.accessKey: IDL set to -Infinity should not throw 
PASS address.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS address.accessKey: IDL set to -Infinity followed by IDL get 
PASS address.accessKey: IDL set to "\0" should not throw 
PASS address.accessKey: IDL set to "\0" followed by getAttribute() 
PASS address.accessKey: IDL set to "\0" followed by IDL get 
PASS address.accessKey: IDL set to null should not throw 
PASS address.accessKey: IDL set to null followed by getAttribute() 
PASS address.accessKey: IDL set to null followed by IDL get 
PASS address.accessKey: IDL set to object "test-toString" should not throw 
PASS address.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS address.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS address.accessKey: IDL set to object "test-valueOf" should not throw 
PASS address.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS address.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS address.tabIndex: typeof IDL attribute 
PASS address.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS address.tabIndex: setAttribute() to -36 followed by IDL get 
PASS address.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS address.tabIndex: setAttribute() to -1 followed by IDL get 
PASS address.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS address.tabIndex: setAttribute() to 0 followed by IDL get 
PASS address.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS address.tabIndex: setAttribute() to 1 followed by IDL get 
PASS address.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS address.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS address.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS address.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS address.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS address.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS address.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS address.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS address.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS address.tabIndex: setAttribute() to "0" followed by IDL get 
PASS address.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS address.tabIndex: setAttribute() to "1" followed by IDL get 
PASS address.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS address.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS address.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS address.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS address.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS address.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS address.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS address.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS address.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS address.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS address.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS address.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS address.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS address.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS address.tabIndex: IDL set to -36 should not throw 
PASS address.tabIndex: IDL set to -36 followed by getAttribute() 
PASS address.tabIndex: IDL set to -36 followed by IDL get 
PASS address.tabIndex: IDL set to -1 should not throw 
PASS address.tabIndex: IDL set to -1 followed by getAttribute() 
PASS address.tabIndex: IDL set to -1 followed by IDL get 
PASS address.tabIndex: IDL set to 0 should not throw 
PASS address.tabIndex: IDL set to 0 followed by getAttribute() 
PASS address.tabIndex: IDL set to 0 followed by IDL get 
PASS address.tabIndex: IDL set to 1 should not throw 
PASS address.tabIndex: IDL set to 1 followed by getAttribute() 
PASS address.tabIndex: IDL set to 1 followed by IDL get 
PASS address.tabIndex: IDL set to 2147483647 should not throw 
PASS address.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS address.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS address.tabIndex: IDL set to -2147483648 should not throw 
PASS address.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS address.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL address.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL address.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS address.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL address.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL address.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL address.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to null followed by getAttribute() 
FAIL address.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL address.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL address.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to true followed by getAttribute() 
FAIL address.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to false followed by getAttribute() 
FAIL address.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL address.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL address.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL address.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL address.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL address.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL address.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL address.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL address.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS address.itemScope: IDL set to "" should not throw 
FAIL address.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL address.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS address.itemScope: IDL set to " foo " should not throw 
PASS address.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL address.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS address.itemScope: IDL set to undefined should not throw 
FAIL address.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL address.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS address.itemScope: IDL set to null should not throw 
FAIL address.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL address.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS address.itemScope: IDL set to 7 should not throw 
PASS address.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL address.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS address.itemScope: IDL set to 1.5 should not throw 
PASS address.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL address.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS address.itemScope: IDL set to true should not throw 
PASS address.itemScope: IDL set to true followed by hasAttribute() 
PASS address.itemScope: IDL set to true followed by IDL get 
PASS address.itemScope: IDL set to false should not throw 
FAIL address.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS address.itemScope: IDL set to false followed by IDL get 
PASS address.itemScope: IDL set to object "[object Object]" should not throw 
PASS address.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL address.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS address.itemScope: IDL set to NaN should not throw 
FAIL address.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL address.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS address.itemScope: IDL set to Infinity should not throw 
PASS address.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL address.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS address.itemScope: IDL set to -Infinity should not throw 
PASS address.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL address.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS address.itemScope: IDL set to "\0" should not throw 
PASS address.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL address.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS address.itemScope: IDL set to object "test-toString" should not throw 
PASS address.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL address.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS address.itemScope: IDL set to object "test-valueOf" should not throw 
PASS address.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL address.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL address.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL address.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS address.itemId: setAttribute() to "" followed by getAttribute() 
FAIL address.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS address.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL address.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS address.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL address.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS address.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL address.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS address.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL address.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS address.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL address.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS address.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL address.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS address.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL address.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS address.itemId: setAttribute() to true followed by getAttribute() 
FAIL address.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS address.itemId: setAttribute() to false followed by getAttribute() 
FAIL address.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS address.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL address.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS address.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL address.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS address.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL address.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS address.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL address.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS address.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL address.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS address.itemId: setAttribute() to null followed by getAttribute() 
FAIL address.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS address.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL address.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS address.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL address.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS address.itemId: IDL set to "" should not throw 
FAIL address.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL address.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS address.itemId: IDL set to " foo " should not throw 
FAIL address.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL address.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS address.itemId: IDL set to "http://site.example/" should not throw 
FAIL address.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS address.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS address.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL address.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL address.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS address.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL address.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL address.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS address.itemId: IDL set to undefined should not throw 
FAIL address.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL address.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS address.itemId: IDL set to 7 should not throw 
FAIL address.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL address.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS address.itemId: IDL set to 1.5 should not throw 
FAIL address.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL address.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS address.itemId: IDL set to true should not throw 
FAIL address.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL address.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS address.itemId: IDL set to false should not throw 
FAIL address.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL address.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS address.itemId: IDL set to object "[object Object]" should not throw 
FAIL address.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL address.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS address.itemId: IDL set to NaN should not throw 
FAIL address.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL address.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS address.itemId: IDL set to Infinity should not throw 
FAIL address.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL address.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS address.itemId: IDL set to -Infinity should not throw 
FAIL address.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL address.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS address.itemId: IDL set to "\0" should not throw 
FAIL address.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL address.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS address.itemId: IDL set to null should not throw 
FAIL address.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL address.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS address.itemId: IDL set to object "test-toString" should not throw 
FAIL address.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL address.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS address.itemId: IDL set to object "test-valueOf" should not throw 
PASS address.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL address.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS #document.dir (<html dir>): typeof IDL attribute 
PASS #document.dir (<html dir>): IDL get with DOM attribute unset 
PASS #document.dir (<html dir>): setAttribute() to "" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to undefined followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to undefined followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to 7 followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to 7 followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to 1.5 followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to 1.5 followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to true followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to true followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to false followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to false followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to object "[object Object]" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to NaN followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to NaN followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to Infinity followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to Infinity followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to -Infinity followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to -Infinity followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "\0" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "\0" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to null followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to null followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to object "test-toString" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "ltr" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "ltr" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "xltr" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "xltr" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "ltr\0" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "ltr\0" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "tr" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "tr" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "LTR" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "LTR" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "rtl" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "rtl" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "xrtl" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "xrtl" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "rtl\0" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "rtl\0" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "tl" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "tl" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "RTL" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "RTL" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "auto" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "auto" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "xauto" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "xauto" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "auto\0" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "auto\0" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "uto" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "uto" followed by IDL get 
PASS #document.dir (<html dir>): setAttribute() to "AUTO" followed by getAttribute() 
PASS #document.dir (<html dir>): setAttribute() to "AUTO" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "" should not throw 
PASS #document.dir (<html dir>): IDL set to "" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS #document.dir (<html dir>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS #document.dir (<html dir>): IDL set to undefined should not throw 
PASS #document.dir (<html dir>): IDL set to undefined followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to undefined followed by IDL get 
PASS #document.dir (<html dir>): IDL set to 7 should not throw 
PASS #document.dir (<html dir>): IDL set to 7 followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to 7 followed by IDL get 
PASS #document.dir (<html dir>): IDL set to 1.5 should not throw 
PASS #document.dir (<html dir>): IDL set to 1.5 followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to 1.5 followed by IDL get 
PASS #document.dir (<html dir>): IDL set to true should not throw 
PASS #document.dir (<html dir>): IDL set to true followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to true followed by IDL get 
PASS #document.dir (<html dir>): IDL set to false should not throw 
PASS #document.dir (<html dir>): IDL set to false followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to false followed by IDL get 
PASS #document.dir (<html dir>): IDL set to object "[object Object]" should not throw 
PASS #document.dir (<html dir>): IDL set to object "[object Object]" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to object "[object Object]" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to NaN should not throw 
PASS #document.dir (<html dir>): IDL set to NaN followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to NaN followed by IDL get 
PASS #document.dir (<html dir>): IDL set to Infinity should not throw 
PASS #document.dir (<html dir>): IDL set to Infinity followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to Infinity followed by IDL get 
PASS #document.dir (<html dir>): IDL set to -Infinity should not throw 
PASS #document.dir (<html dir>): IDL set to -Infinity followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to -Infinity followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "\0" should not throw 
PASS #document.dir (<html dir>): IDL set to "\0" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "\0" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to null should not throw 
PASS #document.dir (<html dir>): IDL set to null followed by IDL get 
PASS #document.dir (<html dir>): IDL set to object "test-toString" should not throw 
PASS #document.dir (<html dir>): IDL set to object "test-toString" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to object "test-toString" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to object "test-valueOf" should not throw 
PASS #document.dir (<html dir>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to object "test-valueOf" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "ltr" should not throw 
PASS #document.dir (<html dir>): IDL set to "ltr" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "ltr" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "xltr" should not throw 
PASS #document.dir (<html dir>): IDL set to "xltr" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "xltr" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "ltr\0" should not throw 
PASS #document.dir (<html dir>): IDL set to "ltr\0" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "ltr\0" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "tr" should not throw 
PASS #document.dir (<html dir>): IDL set to "tr" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "tr" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "LTR" should not throw 
PASS #document.dir (<html dir>): IDL set to "LTR" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "LTR" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "rtl" should not throw 
PASS #document.dir (<html dir>): IDL set to "rtl" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "rtl" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "xrtl" should not throw 
PASS #document.dir (<html dir>): IDL set to "xrtl" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "xrtl" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "rtl\0" should not throw 
PASS #document.dir (<html dir>): IDL set to "rtl\0" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "rtl\0" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "tl" should not throw 
PASS #document.dir (<html dir>): IDL set to "tl" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "tl" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "RTL" should not throw 
PASS #document.dir (<html dir>): IDL set to "RTL" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "RTL" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "auto" should not throw 
PASS #document.dir (<html dir>): IDL set to "auto" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "auto" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "xauto" should not throw 
PASS #document.dir (<html dir>): IDL set to "xauto" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "xauto" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "auto\0" should not throw 
PASS #document.dir (<html dir>): IDL set to "auto\0" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "auto\0" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "uto" should not throw 
PASS #document.dir (<html dir>): IDL set to "uto" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "uto" followed by IDL get 
PASS #document.dir (<html dir>): IDL set to "AUTO" should not throw 
PASS #document.dir (<html dir>): IDL set to "AUTO" followed by getAttribute() 
PASS #document.dir (<html dir>): IDL set to "AUTO" followed by IDL get 
PASS #document.fgColor (<body text>): typeof IDL attribute 
PASS #document.fgColor (<body text>): IDL get with DOM attribute unset 
PASS #document.fgColor (<body text>): setAttribute() to "" followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to "" followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to undefined followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to undefined followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to 7 followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to 7 followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to 1.5 followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to 1.5 followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to true followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to true followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to false followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to false followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to object "[object Object]" followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to NaN followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to NaN followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to Infinity followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to Infinity followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to -Infinity followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to -Infinity followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to "\0" followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to "\0" followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to null followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to null followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to object "test-toString" followed by IDL get 
PASS #document.fgColor (<body text>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS #document.fgColor (<body text>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to "" should not throw 
PASS #document.fgColor (<body text>): IDL set to "" followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to "" followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS #document.fgColor (<body text>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to undefined should not throw 
PASS #document.fgColor (<body text>): IDL set to undefined followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to undefined followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to 7 should not throw 
PASS #document.fgColor (<body text>): IDL set to 7 followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to 7 followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to 1.5 should not throw 
PASS #document.fgColor (<body text>): IDL set to 1.5 followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to 1.5 followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to true should not throw 
PASS #document.fgColor (<body text>): IDL set to true followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to true followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to false should not throw 
PASS #document.fgColor (<body text>): IDL set to false followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to false followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to object "[object Object]" should not throw 
PASS #document.fgColor (<body text>): IDL set to object "[object Object]" followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to object "[object Object]" followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to NaN should not throw 
PASS #document.fgColor (<body text>): IDL set to NaN followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to NaN followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to Infinity should not throw 
PASS #document.fgColor (<body text>): IDL set to Infinity followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to Infinity followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to -Infinity should not throw 
PASS #document.fgColor (<body text>): IDL set to -Infinity followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to -Infinity followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to "\0" should not throw 
PASS #document.fgColor (<body text>): IDL set to "\0" followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to "\0" followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to null should not throw 
FAIL #document.fgColor (<body text>): IDL set to null followed by getAttribute() assert_equals: expected (string) "" but got (object) null
PASS #document.fgColor (<body text>): IDL set to null followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to object "test-toString" should not throw 
PASS #document.fgColor (<body text>): IDL set to object "test-toString" followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to object "test-toString" followed by IDL get 
PASS #document.fgColor (<body text>): IDL set to object "test-valueOf" should not throw 
PASS #document.fgColor (<body text>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS #document.fgColor (<body text>): IDL set to object "test-valueOf" followed by IDL get 
PASS #document.linkColor (<body link>): typeof IDL attribute 
PASS #document.linkColor (<body link>): IDL get with DOM attribute unset 
PASS #document.linkColor (<body link>): setAttribute() to "" followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to "" followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to undefined followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to undefined followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to 7 followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to 7 followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to 1.5 followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to 1.5 followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to true followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to true followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to false followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to false followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to object "[object Object]" followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to NaN followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to NaN followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to Infinity followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to Infinity followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to -Infinity followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to -Infinity followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to "\0" followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to "\0" followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to null followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to null followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to object "test-toString" followed by IDL get 
PASS #document.linkColor (<body link>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS #document.linkColor (<body link>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to "" should not throw 
PASS #document.linkColor (<body link>): IDL set to "" followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to "" followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS #document.linkColor (<body link>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to undefined should not throw 
PASS #document.linkColor (<body link>): IDL set to undefined followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to undefined followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to 7 should not throw 
PASS #document.linkColor (<body link>): IDL set to 7 followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to 7 followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to 1.5 should not throw 
PASS #document.linkColor (<body link>): IDL set to 1.5 followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to 1.5 followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to true should not throw 
PASS #document.linkColor (<body link>): IDL set to true followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to true followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to false should not throw 
PASS #document.linkColor (<body link>): IDL set to false followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to false followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to object "[object Object]" should not throw 
PASS #document.linkColor (<body link>): IDL set to object "[object Object]" followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to object "[object Object]" followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to NaN should not throw 
PASS #document.linkColor (<body link>): IDL set to NaN followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to NaN followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to Infinity should not throw 
PASS #document.linkColor (<body link>): IDL set to Infinity followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to Infinity followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to -Infinity should not throw 
PASS #document.linkColor (<body link>): IDL set to -Infinity followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to -Infinity followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to "\0" should not throw 
PASS #document.linkColor (<body link>): IDL set to "\0" followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to "\0" followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to null should not throw 
FAIL #document.linkColor (<body link>): IDL set to null followed by getAttribute() assert_equals: expected (string) "" but got (object) null
PASS #document.linkColor (<body link>): IDL set to null followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to object "test-toString" should not throw 
PASS #document.linkColor (<body link>): IDL set to object "test-toString" followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to object "test-toString" followed by IDL get 
PASS #document.linkColor (<body link>): IDL set to object "test-valueOf" should not throw 
PASS #document.linkColor (<body link>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS #document.linkColor (<body link>): IDL set to object "test-valueOf" followed by IDL get 
PASS #document.vlinkColor (<body vlink>): typeof IDL attribute 
PASS #document.vlinkColor (<body vlink>): IDL get with DOM attribute unset 
PASS #document.vlinkColor (<body vlink>): setAttribute() to "" followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to "" followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to undefined followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to undefined followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to 7 followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to 7 followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to 1.5 followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to 1.5 followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to true followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to true followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to false followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to false followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to object "[object Object]" followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to NaN followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to NaN followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to Infinity followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to Infinity followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to -Infinity followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to -Infinity followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to "\0" followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to "\0" followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to null followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to null followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to object "test-toString" followed by IDL get 
PASS #document.vlinkColor (<body vlink>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to "" should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to "" followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to "" followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to undefined should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to undefined followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to undefined followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to 7 should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to 7 followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to 7 followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to 1.5 should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to 1.5 followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to 1.5 followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to true should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to true followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to true followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to false should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to false followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to false followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to object "[object Object]" should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to object "[object Object]" followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to object "[object Object]" followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to NaN should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to NaN followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to NaN followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to Infinity should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to Infinity followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to Infinity followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to -Infinity should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to -Infinity followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to -Infinity followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to "\0" should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to "\0" followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to "\0" followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to null should not throw 
FAIL #document.vlinkColor (<body vlink>): IDL set to null followed by getAttribute() assert_equals: expected (string) "" but got (object) null
PASS #document.vlinkColor (<body vlink>): IDL set to null followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to object "test-toString" should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to object "test-toString" followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to object "test-toString" followed by IDL get 
PASS #document.vlinkColor (<body vlink>): IDL set to object "test-valueOf" should not throw 
PASS #document.vlinkColor (<body vlink>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS #document.vlinkColor (<body vlink>): IDL set to object "test-valueOf" followed by IDL get 
PASS #document.alinkColor (<body alink>): typeof IDL attribute 
PASS #document.alinkColor (<body alink>): IDL get with DOM attribute unset 
PASS #document.alinkColor (<body alink>): setAttribute() to "" followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to "" followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to undefined followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to undefined followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to 7 followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to 7 followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to 1.5 followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to 1.5 followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to true followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to true followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to false followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to false followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to object "[object Object]" followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to NaN followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to NaN followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to Infinity followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to Infinity followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to -Infinity followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to -Infinity followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to "\0" followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to "\0" followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to null followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to null followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to object "test-toString" followed by IDL get 
PASS #document.alinkColor (<body alink>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS #document.alinkColor (<body alink>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to "" should not throw 
PASS #document.alinkColor (<body alink>): IDL set to "" followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to "" followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS #document.alinkColor (<body alink>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to undefined should not throw 
PASS #document.alinkColor (<body alink>): IDL set to undefined followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to undefined followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to 7 should not throw 
PASS #document.alinkColor (<body alink>): IDL set to 7 followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to 7 followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to 1.5 should not throw 
PASS #document.alinkColor (<body alink>): IDL set to 1.5 followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to 1.5 followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to true should not throw 
PASS #document.alinkColor (<body alink>): IDL set to true followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to true followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to false should not throw 
PASS #document.alinkColor (<body alink>): IDL set to false followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to false followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to object "[object Object]" should not throw 
PASS #document.alinkColor (<body alink>): IDL set to object "[object Object]" followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to object "[object Object]" followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to NaN should not throw 
PASS #document.alinkColor (<body alink>): IDL set to NaN followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to NaN followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to Infinity should not throw 
PASS #document.alinkColor (<body alink>): IDL set to Infinity followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to Infinity followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to -Infinity should not throw 
PASS #document.alinkColor (<body alink>): IDL set to -Infinity followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to -Infinity followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to "\0" should not throw 
PASS #document.alinkColor (<body alink>): IDL set to "\0" followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to "\0" followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to null should not throw 
FAIL #document.alinkColor (<body alink>): IDL set to null followed by getAttribute() assert_equals: expected (string) "" but got (object) null
PASS #document.alinkColor (<body alink>): IDL set to null followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to object "test-toString" should not throw 
PASS #document.alinkColor (<body alink>): IDL set to object "test-toString" followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to object "test-toString" followed by IDL get 
PASS #document.alinkColor (<body alink>): IDL set to object "test-valueOf" should not throw 
PASS #document.alinkColor (<body alink>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS #document.alinkColor (<body alink>): IDL set to object "test-valueOf" followed by IDL get 
PASS #document.bgColor (<body bgcolor>): typeof IDL attribute 
PASS #document.bgColor (<body bgcolor>): IDL get with DOM attribute unset 
PASS #document.bgColor (<body bgcolor>): setAttribute() to "" followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to "" followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to undefined followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to undefined followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to 7 followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to 7 followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to 1.5 followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to 1.5 followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to true followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to true followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to false followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to false followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to object "[object Object]" followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to NaN followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to NaN followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to Infinity followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to Infinity followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to -Infinity followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to -Infinity followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to "\0" followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to "\0" followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to null followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to null followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to object "test-toString" followed by IDL get 
PASS #document.bgColor (<body bgcolor>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to "" should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to "" followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to "" followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to undefined should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to undefined followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to undefined followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to 7 should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to 7 followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to 7 followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to 1.5 should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to 1.5 followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to 1.5 followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to true should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to true followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to true followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to false should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to false followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to false followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to object "[object Object]" should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to object "[object Object]" followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to object "[object Object]" followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to NaN should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to NaN followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to NaN followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to Infinity should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to Infinity followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to Infinity followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to -Infinity should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to -Infinity followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to -Infinity followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to "\0" should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to "\0" followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to "\0" followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to null should not throw 
FAIL #document.bgColor (<body bgcolor>): IDL set to null followed by getAttribute() assert_equals: expected (string) "" but got (object) null
PASS #document.bgColor (<body bgcolor>): IDL set to null followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to object "test-toString" should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to object "test-toString" followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to object "test-toString" followed by IDL get 
PASS #document.bgColor (<body bgcolor>): IDL set to object "test-valueOf" should not throw 
PASS #document.bgColor (<body bgcolor>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS #document.bgColor (<body bgcolor>): IDL set to object "test-valueOf" followed by IDL get 
FAIL meta.itemValue (<meta content>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL meta.itemValue (<meta content>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to "" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to undefined followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to 7 followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to 1.5 followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to true followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to false followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to NaN followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to Infinity followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to -Infinity followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to "\0" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to null followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS meta.itemValue (<meta content>): IDL set to "" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to "" followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to undefined should not throw 
FAIL meta.itemValue (<meta content>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS meta.itemValue (<meta content>): IDL set to 7 should not throw 
FAIL meta.itemValue (<meta content>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS meta.itemValue (<meta content>): IDL set to 1.5 should not throw 
FAIL meta.itemValue (<meta content>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS meta.itemValue (<meta content>): IDL set to true should not throw 
FAIL meta.itemValue (<meta content>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS meta.itemValue (<meta content>): IDL set to false should not throw 
FAIL meta.itemValue (<meta content>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS meta.itemValue (<meta content>): IDL set to object "[object Object]" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS meta.itemValue (<meta content>): IDL set to NaN should not throw 
FAIL meta.itemValue (<meta content>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS meta.itemValue (<meta content>): IDL set to Infinity should not throw 
FAIL meta.itemValue (<meta content>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS meta.itemValue (<meta content>): IDL set to -Infinity should not throw 
FAIL meta.itemValue (<meta content>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS meta.itemValue (<meta content>): IDL set to "\0" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to "\0" followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to null should not throw 
FAIL meta.itemValue (<meta content>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS meta.itemValue (<meta content>): IDL set to object "test-toString" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS meta.itemValue (<meta content>): IDL set to object "test-valueOf" should not throw 
PASS meta.itemValue (<meta content>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
FAIL audio.itemValue (<audio src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL audio.itemValue (<audio src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to " foo " followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to undefined followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to 7 followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to true followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to false followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to NaN followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to Infinity followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "\0" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to null followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS audio.itemValue (<audio src>): IDL set to "" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS audio.itemValue (<audio src>): IDL set to " foo " should not throw 
FAIL audio.itemValue (<audio src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS audio.itemValue (<audio src>): IDL set to "http://site.example/" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS audio.itemValue (<audio src>): IDL set to "http://site.example/" followed by IDL get 
PASS audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS audio.itemValue (<audio src>): IDL set to undefined should not throw 
FAIL audio.itemValue (<audio src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS audio.itemValue (<audio src>): IDL set to 7 should not throw 
FAIL audio.itemValue (<audio src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS audio.itemValue (<audio src>): IDL set to 1.5 should not throw 
FAIL audio.itemValue (<audio src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS audio.itemValue (<audio src>): IDL set to true should not throw 
FAIL audio.itemValue (<audio src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS audio.itemValue (<audio src>): IDL set to false should not throw 
FAIL audio.itemValue (<audio src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS audio.itemValue (<audio src>): IDL set to object "[object Object]" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS audio.itemValue (<audio src>): IDL set to NaN should not throw 
FAIL audio.itemValue (<audio src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS audio.itemValue (<audio src>): IDL set to Infinity should not throw 
FAIL audio.itemValue (<audio src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS audio.itemValue (<audio src>): IDL set to -Infinity should not throw 
FAIL audio.itemValue (<audio src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS audio.itemValue (<audio src>): IDL set to "\0" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS audio.itemValue (<audio src>): IDL set to null should not throw 
FAIL audio.itemValue (<audio src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS audio.itemValue (<audio src>): IDL set to object "test-toString" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS audio.itemValue (<audio src>): IDL set to object "test-valueOf" should not throw 
PASS audio.itemValue (<audio src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL embed.itemValue (<embed src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL embed.itemValue (<embed src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to " foo " followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to undefined followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to 7 followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to true followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to false followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to NaN followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to Infinity followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "\0" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to null followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS embed.itemValue (<embed src>): IDL set to "" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS embed.itemValue (<embed src>): IDL set to " foo " should not throw 
FAIL embed.itemValue (<embed src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS embed.itemValue (<embed src>): IDL set to "http://site.example/" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS embed.itemValue (<embed src>): IDL set to "http://site.example/" followed by IDL get 
PASS embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS embed.itemValue (<embed src>): IDL set to undefined should not throw 
FAIL embed.itemValue (<embed src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS embed.itemValue (<embed src>): IDL set to 7 should not throw 
FAIL embed.itemValue (<embed src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS embed.itemValue (<embed src>): IDL set to 1.5 should not throw 
FAIL embed.itemValue (<embed src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS embed.itemValue (<embed src>): IDL set to true should not throw 
FAIL embed.itemValue (<embed src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS embed.itemValue (<embed src>): IDL set to false should not throw 
FAIL embed.itemValue (<embed src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS embed.itemValue (<embed src>): IDL set to object "[object Object]" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS embed.itemValue (<embed src>): IDL set to NaN should not throw 
FAIL embed.itemValue (<embed src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS embed.itemValue (<embed src>): IDL set to Infinity should not throw 
FAIL embed.itemValue (<embed src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS embed.itemValue (<embed src>): IDL set to -Infinity should not throw 
FAIL embed.itemValue (<embed src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS embed.itemValue (<embed src>): IDL set to "\0" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS embed.itemValue (<embed src>): IDL set to null should not throw 
FAIL embed.itemValue (<embed src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS embed.itemValue (<embed src>): IDL set to object "test-toString" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS embed.itemValue (<embed src>): IDL set to object "test-valueOf" should not throw 
PASS embed.itemValue (<embed src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL iframe.itemValue (<iframe src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL iframe.itemValue (<iframe src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to " foo " followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to undefined followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to 7 followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to true followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to false followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to NaN followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to Infinity followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "\0" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to null followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): IDL set to "" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS iframe.itemValue (<iframe src>): IDL set to " foo " should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS iframe.itemValue (<iframe src>): IDL set to "http://site.example/" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS iframe.itemValue (<iframe src>): IDL set to "http://site.example/" followed by IDL get 
PASS iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS iframe.itemValue (<iframe src>): IDL set to undefined should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): IDL set to 7 should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS iframe.itemValue (<iframe src>): IDL set to 1.5 should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS iframe.itemValue (<iframe src>): IDL set to true should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS iframe.itemValue (<iframe src>): IDL set to false should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS iframe.itemValue (<iframe src>): IDL set to object "[object Object]" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS iframe.itemValue (<iframe src>): IDL set to NaN should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS iframe.itemValue (<iframe src>): IDL set to Infinity should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS iframe.itemValue (<iframe src>): IDL set to -Infinity should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS iframe.itemValue (<iframe src>): IDL set to "\0" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS iframe.itemValue (<iframe src>): IDL set to null should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS iframe.itemValue (<iframe src>): IDL set to object "test-toString" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" should not throw 
PASS iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL img.itemValue (<img src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL img.itemValue (<img src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to " foo " followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to undefined followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to 7 followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to true followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to false followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to NaN followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to Infinity followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "\0" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to null followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS img.itemValue (<img src>): IDL set to "" should not throw 
FAIL img.itemValue (<img src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS img.itemValue (<img src>): IDL set to " foo " should not throw 
FAIL img.itemValue (<img src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS img.itemValue (<img src>): IDL set to "http://site.example/" should not throw 
FAIL img.itemValue (<img src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS img.itemValue (<img src>): IDL set to "http://site.example/" followed by IDL get 
PASS img.itemValue (<img src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL img.itemValue (<img src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS img.itemValue (<img src>): IDL set to undefined should not throw 
FAIL img.itemValue (<img src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS img.itemValue (<img src>): IDL set to 7 should not throw 
FAIL img.itemValue (<img src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS img.itemValue (<img src>): IDL set to 1.5 should not throw 
FAIL img.itemValue (<img src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS img.itemValue (<img src>): IDL set to true should not throw 
FAIL img.itemValue (<img src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS img.itemValue (<img src>): IDL set to false should not throw 
FAIL img.itemValue (<img src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS img.itemValue (<img src>): IDL set to object "[object Object]" should not throw 
FAIL img.itemValue (<img src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS img.itemValue (<img src>): IDL set to NaN should not throw 
FAIL img.itemValue (<img src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS img.itemValue (<img src>): IDL set to Infinity should not throw 
FAIL img.itemValue (<img src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS img.itemValue (<img src>): IDL set to -Infinity should not throw 
FAIL img.itemValue (<img src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS img.itemValue (<img src>): IDL set to "\0" should not throw 
FAIL img.itemValue (<img src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS img.itemValue (<img src>): IDL set to null should not throw 
FAIL img.itemValue (<img src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS img.itemValue (<img src>): IDL set to object "test-toString" should not throw 
FAIL img.itemValue (<img src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS img.itemValue (<img src>): IDL set to object "test-valueOf" should not throw 
PASS img.itemValue (<img src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL img.itemValue (<img src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL source.itemValue (<source src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL source.itemValue (<source src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to " foo " followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to undefined followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to 7 followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to true followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to false followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to NaN followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to Infinity followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "\0" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to null followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS source.itemValue (<source src>): IDL set to "" should not throw 
FAIL source.itemValue (<source src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS source.itemValue (<source src>): IDL set to " foo " should not throw 
FAIL source.itemValue (<source src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS source.itemValue (<source src>): IDL set to "http://site.example/" should not throw 
FAIL source.itemValue (<source src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS source.itemValue (<source src>): IDL set to "http://site.example/" followed by IDL get 
PASS source.itemValue (<source src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL source.itemValue (<source src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS source.itemValue (<source src>): IDL set to undefined should not throw 
FAIL source.itemValue (<source src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS source.itemValue (<source src>): IDL set to 7 should not throw 
FAIL source.itemValue (<source src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS source.itemValue (<source src>): IDL set to 1.5 should not throw 
FAIL source.itemValue (<source src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS source.itemValue (<source src>): IDL set to true should not throw 
FAIL source.itemValue (<source src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS source.itemValue (<source src>): IDL set to false should not throw 
FAIL source.itemValue (<source src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS source.itemValue (<source src>): IDL set to object "[object Object]" should not throw 
FAIL source.itemValue (<source src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS source.itemValue (<source src>): IDL set to NaN should not throw 
FAIL source.itemValue (<source src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS source.itemValue (<source src>): IDL set to Infinity should not throw 
FAIL source.itemValue (<source src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS source.itemValue (<source src>): IDL set to -Infinity should not throw 
FAIL source.itemValue (<source src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS source.itemValue (<source src>): IDL set to "\0" should not throw 
FAIL source.itemValue (<source src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS source.itemValue (<source src>): IDL set to null should not throw 
FAIL source.itemValue (<source src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS source.itemValue (<source src>): IDL set to object "test-toString" should not throw 
FAIL source.itemValue (<source src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS source.itemValue (<source src>): IDL set to object "test-valueOf" should not throw 
PASS source.itemValue (<source src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL source.itemValue (<source src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL track.itemValue (<track src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL track.itemValue (<track src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to " foo " followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to undefined followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to 7 followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to true followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to false followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to NaN followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to Infinity followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "\0" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to null followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS track.itemValue (<track src>): IDL set to "" should not throw 
FAIL track.itemValue (<track src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS track.itemValue (<track src>): IDL set to " foo " should not throw 
FAIL track.itemValue (<track src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS track.itemValue (<track src>): IDL set to "http://site.example/" should not throw 
FAIL track.itemValue (<track src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS track.itemValue (<track src>): IDL set to "http://site.example/" followed by IDL get 
PASS track.itemValue (<track src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL track.itemValue (<track src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS track.itemValue (<track src>): IDL set to undefined should not throw 
FAIL track.itemValue (<track src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS track.itemValue (<track src>): IDL set to 7 should not throw 
FAIL track.itemValue (<track src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS track.itemValue (<track src>): IDL set to 1.5 should not throw 
FAIL track.itemValue (<track src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS track.itemValue (<track src>): IDL set to true should not throw 
FAIL track.itemValue (<track src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS track.itemValue (<track src>): IDL set to false should not throw 
FAIL track.itemValue (<track src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS track.itemValue (<track src>): IDL set to object "[object Object]" should not throw 
FAIL track.itemValue (<track src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS track.itemValue (<track src>): IDL set to NaN should not throw 
FAIL track.itemValue (<track src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS track.itemValue (<track src>): IDL set to Infinity should not throw 
FAIL track.itemValue (<track src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS track.itemValue (<track src>): IDL set to -Infinity should not throw 
FAIL track.itemValue (<track src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS track.itemValue (<track src>): IDL set to "\0" should not throw 
FAIL track.itemValue (<track src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS track.itemValue (<track src>): IDL set to null should not throw 
FAIL track.itemValue (<track src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS track.itemValue (<track src>): IDL set to object "test-toString" should not throw 
FAIL track.itemValue (<track src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS track.itemValue (<track src>): IDL set to object "test-valueOf" should not throw 
PASS track.itemValue (<track src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL track.itemValue (<track src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL video.itemValue (<video src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL video.itemValue (<video src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to " foo " followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to undefined followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to 7 followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to true followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to false followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to NaN followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to Infinity followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "\0" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to null followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS video.itemValue (<video src>): IDL set to "" should not throw 
FAIL video.itemValue (<video src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS video.itemValue (<video src>): IDL set to " foo " should not throw 
FAIL video.itemValue (<video src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS video.itemValue (<video src>): IDL set to "http://site.example/" should not throw 
FAIL video.itemValue (<video src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS video.itemValue (<video src>): IDL set to "http://site.example/" followed by IDL get 
PASS video.itemValue (<video src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL video.itemValue (<video src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS video.itemValue (<video src>): IDL set to undefined should not throw 
FAIL video.itemValue (<video src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS video.itemValue (<video src>): IDL set to 7 should not throw 
FAIL video.itemValue (<video src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS video.itemValue (<video src>): IDL set to 1.5 should not throw 
FAIL video.itemValue (<video src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS video.itemValue (<video src>): IDL set to true should not throw 
FAIL video.itemValue (<video src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS video.itemValue (<video src>): IDL set to false should not throw 
FAIL video.itemValue (<video src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS video.itemValue (<video src>): IDL set to object "[object Object]" should not throw 
FAIL video.itemValue (<video src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS video.itemValue (<video src>): IDL set to NaN should not throw 
FAIL video.itemValue (<video src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS video.itemValue (<video src>): IDL set to Infinity should not throw 
FAIL video.itemValue (<video src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS video.itemValue (<video src>): IDL set to -Infinity should not throw 
FAIL video.itemValue (<video src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS video.itemValue (<video src>): IDL set to "\0" should not throw 
FAIL video.itemValue (<video src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS video.itemValue (<video src>): IDL set to null should not throw 
FAIL video.itemValue (<video src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS video.itemValue (<video src>): IDL set to object "test-toString" should not throw 
FAIL video.itemValue (<video src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS video.itemValue (<video src>): IDL set to object "test-valueOf" should not throw 
PASS video.itemValue (<video src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL video.itemValue (<video src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL a.itemValue (<a href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL a.itemValue (<a href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to " foo " followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to undefined followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to 7 followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to true followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to false followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to NaN followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to Infinity followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "\0" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to null followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS a.itemValue (<a href>): IDL set to "" should not throw 
FAIL a.itemValue (<a href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS a.itemValue (<a href>): IDL set to " foo " should not throw 
FAIL a.itemValue (<a href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS a.itemValue (<a href>): IDL set to "http://site.example/" should not throw 
FAIL a.itemValue (<a href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS a.itemValue (<a href>): IDL set to "http://site.example/" followed by IDL get 
PASS a.itemValue (<a href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL a.itemValue (<a href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS a.itemValue (<a href>): IDL set to undefined should not throw 
FAIL a.itemValue (<a href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS a.itemValue (<a href>): IDL set to 7 should not throw 
FAIL a.itemValue (<a href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS a.itemValue (<a href>): IDL set to 1.5 should not throw 
FAIL a.itemValue (<a href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS a.itemValue (<a href>): IDL set to true should not throw 
FAIL a.itemValue (<a href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS a.itemValue (<a href>): IDL set to false should not throw 
FAIL a.itemValue (<a href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS a.itemValue (<a href>): IDL set to object "[object Object]" should not throw 
FAIL a.itemValue (<a href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS a.itemValue (<a href>): IDL set to NaN should not throw 
FAIL a.itemValue (<a href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS a.itemValue (<a href>): IDL set to Infinity should not throw 
FAIL a.itemValue (<a href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS a.itemValue (<a href>): IDL set to -Infinity should not throw 
FAIL a.itemValue (<a href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS a.itemValue (<a href>): IDL set to "\0" should not throw 
FAIL a.itemValue (<a href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS a.itemValue (<a href>): IDL set to null should not throw 
FAIL a.itemValue (<a href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS a.itemValue (<a href>): IDL set to object "test-toString" should not throw 
FAIL a.itemValue (<a href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS a.itemValue (<a href>): IDL set to object "test-valueOf" should not throw 
PASS a.itemValue (<a href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL a.itemValue (<a href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL area.itemValue (<area href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL area.itemValue (<area href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to " foo " followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to undefined followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to 7 followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to true followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to false followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to NaN followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to Infinity followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "\0" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to null followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS area.itemValue (<area href>): IDL set to "" should not throw 
FAIL area.itemValue (<area href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS area.itemValue (<area href>): IDL set to " foo " should not throw 
FAIL area.itemValue (<area href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS area.itemValue (<area href>): IDL set to "http://site.example/" should not throw 
FAIL area.itemValue (<area href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS area.itemValue (<area href>): IDL set to "http://site.example/" followed by IDL get 
PASS area.itemValue (<area href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL area.itemValue (<area href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS area.itemValue (<area href>): IDL set to undefined should not throw 
FAIL area.itemValue (<area href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS area.itemValue (<area href>): IDL set to 7 should not throw 
FAIL area.itemValue (<area href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS area.itemValue (<area href>): IDL set to 1.5 should not throw 
FAIL area.itemValue (<area href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS area.itemValue (<area href>): IDL set to true should not throw 
FAIL area.itemValue (<area href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS area.itemValue (<area href>): IDL set to false should not throw 
FAIL area.itemValue (<area href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS area.itemValue (<area href>): IDL set to object "[object Object]" should not throw 
FAIL area.itemValue (<area href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS area.itemValue (<area href>): IDL set to NaN should not throw 
FAIL area.itemValue (<area href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS area.itemValue (<area href>): IDL set to Infinity should not throw 
FAIL area.itemValue (<area href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS area.itemValue (<area href>): IDL set to -Infinity should not throw 
FAIL area.itemValue (<area href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS area.itemValue (<area href>): IDL set to "\0" should not throw 
FAIL area.itemValue (<area href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS area.itemValue (<area href>): IDL set to null should not throw 
FAIL area.itemValue (<area href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS area.itemValue (<area href>): IDL set to object "test-toString" should not throw 
FAIL area.itemValue (<area href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS area.itemValue (<area href>): IDL set to object "test-valueOf" should not throw 
PASS area.itemValue (<area href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL area.itemValue (<area href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL link.itemValue (<link href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL link.itemValue (<link href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to " foo " followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to undefined followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to 7 followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to true followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to false followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to NaN followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to Infinity followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "\0" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to null followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS link.itemValue (<link href>): IDL set to "" should not throw 
FAIL link.itemValue (<link href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS link.itemValue (<link href>): IDL set to " foo " should not throw 
FAIL link.itemValue (<link href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS link.itemValue (<link href>): IDL set to "http://site.example/" should not throw 
FAIL link.itemValue (<link href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS link.itemValue (<link href>): IDL set to "http://site.example/" followed by IDL get 
PASS link.itemValue (<link href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL link.itemValue (<link href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS link.itemValue (<link href>): IDL set to undefined should not throw 
FAIL link.itemValue (<link href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS link.itemValue (<link href>): IDL set to 7 should not throw 
FAIL link.itemValue (<link href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS link.itemValue (<link href>): IDL set to 1.5 should not throw 
FAIL link.itemValue (<link href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS link.itemValue (<link href>): IDL set to true should not throw 
FAIL link.itemValue (<link href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS link.itemValue (<link href>): IDL set to false should not throw 
FAIL link.itemValue (<link href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS link.itemValue (<link href>): IDL set to object "[object Object]" should not throw 
FAIL link.itemValue (<link href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS link.itemValue (<link href>): IDL set to NaN should not throw 
FAIL link.itemValue (<link href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS link.itemValue (<link href>): IDL set to Infinity should not throw 
FAIL link.itemValue (<link href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS link.itemValue (<link href>): IDL set to -Infinity should not throw 
FAIL link.itemValue (<link href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS link.itemValue (<link href>): IDL set to "\0" should not throw 
FAIL link.itemValue (<link href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS link.itemValue (<link href>): IDL set to null should not throw 
FAIL link.itemValue (<link href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS link.itemValue (<link href>): IDL set to object "test-toString" should not throw 
FAIL link.itemValue (<link href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS link.itemValue (<link href>): IDL set to object "test-valueOf" should not throw 
PASS link.itemValue (<link href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL link.itemValue (<link href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL object.itemValue (<object data>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL object.itemValue (<object data>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to " foo " followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to undefined followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to 7 followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to 1.5 followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to true followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to false followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to NaN followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to Infinity followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to -Infinity followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "\0" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-sections.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to null followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS object.itemValue (<object data>): IDL set to "" should not throw 
FAIL object.itemValue (<object data>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got ""
PASS object.itemValue (<object data>): IDL set to " foo " should not throw 
FAIL object.itemValue (<object data>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS object.itemValue (<object data>): IDL set to "http://site.example/" should not throw 
FAIL object.itemValue (<object data>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS object.itemValue (<object data>): IDL set to "http://site.example/" followed by IDL get 
PASS object.itemValue (<object data>): IDL set to "//site.example/path???@#l" should not throw 
FAIL object.itemValue (<object data>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS object.itemValue (<object data>): IDL set to undefined should not throw 
FAIL object.itemValue (<object data>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS object.itemValue (<object data>): IDL set to 7 should not throw 
FAIL object.itemValue (<object data>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS object.itemValue (<object data>): IDL set to 1.5 should not throw 
FAIL object.itemValue (<object data>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS object.itemValue (<object data>): IDL set to true should not throw 
FAIL object.itemValue (<object data>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS object.itemValue (<object data>): IDL set to false should not throw 
FAIL object.itemValue (<object data>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS object.itemValue (<object data>): IDL set to object "[object Object]" should not throw 
FAIL object.itemValue (<object data>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS object.itemValue (<object data>): IDL set to NaN should not throw 
FAIL object.itemValue (<object data>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS object.itemValue (<object data>): IDL set to Infinity should not throw 
FAIL object.itemValue (<object data>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS object.itemValue (<object data>): IDL set to -Infinity should not throw 
FAIL object.itemValue (<object data>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS object.itemValue (<object data>): IDL set to "\0" should not throw 
FAIL object.itemValue (<object data>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-sections.html" but got "\0"
PASS object.itemValue (<object data>): IDL set to null should not throw 
FAIL object.itemValue (<object data>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS object.itemValue (<object data>): IDL set to object "test-toString" should not throw 
FAIL object.itemValue (<object data>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS object.itemValue (<object data>): IDL set to object "test-valueOf" should not throw 
PASS object.itemValue (<object data>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL object.itemValue (<object data>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL data.itemValue (<data value>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL data.itemValue (<data value>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to "" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to undefined followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to 7 followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to 1.5 followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to true followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to false followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to NaN followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to Infinity followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to -Infinity followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to "\0" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to null followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS data.itemValue (<data value>): IDL set to "" should not throw 
FAIL data.itemValue (<data value>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to "" followed by IDL get 
PASS data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.itemValue (<data value>): IDL set to undefined should not throw 
FAIL data.itemValue (<data value>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS data.itemValue (<data value>): IDL set to 7 should not throw 
FAIL data.itemValue (<data value>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS data.itemValue (<data value>): IDL set to 1.5 should not throw 
FAIL data.itemValue (<data value>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS data.itemValue (<data value>): IDL set to true should not throw 
FAIL data.itemValue (<data value>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS data.itemValue (<data value>): IDL set to false should not throw 
FAIL data.itemValue (<data value>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS data.itemValue (<data value>): IDL set to object "[object Object]" should not throw 
FAIL data.itemValue (<data value>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS data.itemValue (<data value>): IDL set to NaN should not throw 
FAIL data.itemValue (<data value>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS data.itemValue (<data value>): IDL set to Infinity should not throw 
FAIL data.itemValue (<data value>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS data.itemValue (<data value>): IDL set to -Infinity should not throw 
FAIL data.itemValue (<data value>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS data.itemValue (<data value>): IDL set to "\0" should not throw 
FAIL data.itemValue (<data value>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to "\0" followed by IDL get 
PASS data.itemValue (<data value>): IDL set to null should not throw 
FAIL data.itemValue (<data value>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS data.itemValue (<data value>): IDL set to object "test-toString" should not throw 
FAIL data.itemValue (<data value>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS data.itemValue (<data value>): IDL set to object "test-valueOf" should not throw 
PASS data.itemValue (<data value>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL data.itemValue (<data value>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"

