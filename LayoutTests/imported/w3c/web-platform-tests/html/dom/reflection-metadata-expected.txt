Blocked access to external URL http://site.example/
Blocked access to external URL http://site.example/path???@#l
Implementers looking to fix bugs might want to use the original version of this suite's test framework, which conveniently aggregates similar errors and only reports failures. This file is (part of) the authoritative conformance test suite, and is suitable for incorporation into automated test suites.

(Note: missing tests for types tokenlist, settable tokenlist.)


PASS head.title: typeof IDL attribute 
PASS head.title: IDL get with DOM attribute unset 
PASS head.title: setAttribute() to "" followed by getAttribute() 
PASS head.title: setAttribute() to "" followed by IDL get 
PASS head.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS head.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS head.title: setAttribute() to undefined followed by getAttribute() 
PASS head.title: setAttribute() to undefined followed by IDL get 
PASS head.title: setAttribute() to 7 followed by getAttribute() 
PASS head.title: setAttribute() to 7 followed by IDL get 
PASS head.title: setAttribute() to 1.5 followed by getAttribute() 
PASS head.title: setAttribute() to 1.5 followed by IDL get 
PASS head.title: setAttribute() to true followed by getAttribute() 
PASS head.title: setAttribute() to true followed by IDL get 
PASS head.title: setAttribute() to false followed by getAttribute() 
PASS head.title: setAttribute() to false followed by IDL get 
PASS head.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS head.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS head.title: setAttribute() to NaN followed by getAttribute() 
PASS head.title: setAttribute() to NaN followed by IDL get 
PASS head.title: setAttribute() to Infinity followed by getAttribute() 
PASS head.title: setAttribute() to Infinity followed by IDL get 
PASS head.title: setAttribute() to -Infinity followed by getAttribute() 
PASS head.title: setAttribute() to -Infinity followed by IDL get 
PASS head.title: setAttribute() to "\0" followed by getAttribute() 
PASS head.title: setAttribute() to "\0" followed by IDL get 
PASS head.title: setAttribute() to null followed by getAttribute() 
PASS head.title: setAttribute() to null followed by IDL get 
PASS head.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS head.title: setAttribute() to object "test-toString" followed by IDL get 
PASS head.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS head.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS head.title: IDL set to "" should not throw 
PASS head.title: IDL set to "" followed by getAttribute() 
PASS head.title: IDL set to "" followed by IDL get 
PASS head.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS head.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS head.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS head.title: IDL set to undefined should not throw 
PASS head.title: IDL set to undefined followed by getAttribute() 
PASS head.title: IDL set to undefined followed by IDL get 
PASS head.title: IDL set to 7 should not throw 
PASS head.title: IDL set to 7 followed by getAttribute() 
PASS head.title: IDL set to 7 followed by IDL get 
PASS head.title: IDL set to 1.5 should not throw 
PASS head.title: IDL set to 1.5 followed by getAttribute() 
PASS head.title: IDL set to 1.5 followed by IDL get 
PASS head.title: IDL set to true should not throw 
PASS head.title: IDL set to true followed by getAttribute() 
PASS head.title: IDL set to true followed by IDL get 
PASS head.title: IDL set to false should not throw 
PASS head.title: IDL set to false followed by getAttribute() 
PASS head.title: IDL set to false followed by IDL get 
PASS head.title: IDL set to object "[object Object]" should not throw 
PASS head.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS head.title: IDL set to object "[object Object]" followed by IDL get 
PASS head.title: IDL set to NaN should not throw 
PASS head.title: IDL set to NaN followed by getAttribute() 
PASS head.title: IDL set to NaN followed by IDL get 
PASS head.title: IDL set to Infinity should not throw 
PASS head.title: IDL set to Infinity followed by getAttribute() 
PASS head.title: IDL set to Infinity followed by IDL get 
PASS head.title: IDL set to -Infinity should not throw 
PASS head.title: IDL set to -Infinity followed by getAttribute() 
PASS head.title: IDL set to -Infinity followed by IDL get 
PASS head.title: IDL set to "\0" should not throw 
PASS head.title: IDL set to "\0" followed by getAttribute() 
PASS head.title: IDL set to "\0" followed by IDL get 
PASS head.title: IDL set to null should not throw 
PASS head.title: IDL set to null followed by getAttribute() 
PASS head.title: IDL set to null followed by IDL get 
PASS head.title: IDL set to object "test-toString" should not throw 
PASS head.title: IDL set to object "test-toString" followed by getAttribute() 
PASS head.title: IDL set to object "test-toString" followed by IDL get 
PASS head.title: IDL set to object "test-valueOf" should not throw 
PASS head.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS head.title: IDL set to object "test-valueOf" followed by IDL get 
PASS head.lang: typeof IDL attribute 
PASS head.lang: IDL get with DOM attribute unset 
PASS head.lang: setAttribute() to "" followed by getAttribute() 
PASS head.lang: setAttribute() to "" followed by IDL get 
PASS head.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS head.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS head.lang: setAttribute() to undefined followed by getAttribute() 
PASS head.lang: setAttribute() to undefined followed by IDL get 
PASS head.lang: setAttribute() to 7 followed by getAttribute() 
PASS head.lang: setAttribute() to 7 followed by IDL get 
PASS head.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS head.lang: setAttribute() to 1.5 followed by IDL get 
PASS head.lang: setAttribute() to true followed by getAttribute() 
PASS head.lang: setAttribute() to true followed by IDL get 
PASS head.lang: setAttribute() to false followed by getAttribute() 
PASS head.lang: setAttribute() to false followed by IDL get 
PASS head.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS head.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS head.lang: setAttribute() to NaN followed by getAttribute() 
PASS head.lang: setAttribute() to NaN followed by IDL get 
PASS head.lang: setAttribute() to Infinity followed by getAttribute() 
PASS head.lang: setAttribute() to Infinity followed by IDL get 
PASS head.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS head.lang: setAttribute() to -Infinity followed by IDL get 
PASS head.lang: setAttribute() to "\0" followed by getAttribute() 
PASS head.lang: setAttribute() to "\0" followed by IDL get 
PASS head.lang: setAttribute() to null followed by getAttribute() 
PASS head.lang: setAttribute() to null followed by IDL get 
PASS head.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS head.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS head.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS head.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS head.lang: IDL set to "" should not throw 
PASS head.lang: IDL set to "" followed by getAttribute() 
PASS head.lang: IDL set to "" followed by IDL get 
PASS head.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS head.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS head.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS head.lang: IDL set to undefined should not throw 
PASS head.lang: IDL set to undefined followed by getAttribute() 
PASS head.lang: IDL set to undefined followed by IDL get 
PASS head.lang: IDL set to 7 should not throw 
PASS head.lang: IDL set to 7 followed by getAttribute() 
PASS head.lang: IDL set to 7 followed by IDL get 
PASS head.lang: IDL set to 1.5 should not throw 
PASS head.lang: IDL set to 1.5 followed by getAttribute() 
PASS head.lang: IDL set to 1.5 followed by IDL get 
PASS head.lang: IDL set to true should not throw 
PASS head.lang: IDL set to true followed by getAttribute() 
PASS head.lang: IDL set to true followed by IDL get 
PASS head.lang: IDL set to false should not throw 
PASS head.lang: IDL set to false followed by getAttribute() 
PASS head.lang: IDL set to false followed by IDL get 
PASS head.lang: IDL set to object "[object Object]" should not throw 
PASS head.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS head.lang: IDL set to object "[object Object]" followed by IDL get 
PASS head.lang: IDL set to NaN should not throw 
PASS head.lang: IDL set to NaN followed by getAttribute() 
PASS head.lang: IDL set to NaN followed by IDL get 
PASS head.lang: IDL set to Infinity should not throw 
PASS head.lang: IDL set to Infinity followed by getAttribute() 
PASS head.lang: IDL set to Infinity followed by IDL get 
PASS head.lang: IDL set to -Infinity should not throw 
PASS head.lang: IDL set to -Infinity followed by getAttribute() 
PASS head.lang: IDL set to -Infinity followed by IDL get 
PASS head.lang: IDL set to "\0" should not throw 
PASS head.lang: IDL set to "\0" followed by getAttribute() 
PASS head.lang: IDL set to "\0" followed by IDL get 
PASS head.lang: IDL set to null should not throw 
PASS head.lang: IDL set to null followed by getAttribute() 
PASS head.lang: IDL set to null followed by IDL get 
PASS head.lang: IDL set to object "test-toString" should not throw 
PASS head.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS head.lang: IDL set to object "test-toString" followed by IDL get 
PASS head.lang: IDL set to object "test-valueOf" should not throw 
PASS head.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS head.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS head.dir: typeof IDL attribute 
PASS head.dir: IDL get with DOM attribute unset 
PASS head.dir: setAttribute() to "" followed by getAttribute() 
PASS head.dir: setAttribute() to "" followed by IDL get 
PASS head.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS head.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS head.dir: setAttribute() to undefined followed by getAttribute() 
PASS head.dir: setAttribute() to undefined followed by IDL get 
PASS head.dir: setAttribute() to 7 followed by getAttribute() 
PASS head.dir: setAttribute() to 7 followed by IDL get 
PASS head.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS head.dir: setAttribute() to 1.5 followed by IDL get 
PASS head.dir: setAttribute() to true followed by getAttribute() 
PASS head.dir: setAttribute() to true followed by IDL get 
PASS head.dir: setAttribute() to false followed by getAttribute() 
PASS head.dir: setAttribute() to false followed by IDL get 
PASS head.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS head.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS head.dir: setAttribute() to NaN followed by getAttribute() 
PASS head.dir: setAttribute() to NaN followed by IDL get 
PASS head.dir: setAttribute() to Infinity followed by getAttribute() 
PASS head.dir: setAttribute() to Infinity followed by IDL get 
PASS head.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS head.dir: setAttribute() to -Infinity followed by IDL get 
PASS head.dir: setAttribute() to "\0" followed by getAttribute() 
PASS head.dir: setAttribute() to "\0" followed by IDL get 
PASS head.dir: setAttribute() to null followed by getAttribute() 
PASS head.dir: setAttribute() to null followed by IDL get 
PASS head.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS head.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS head.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS head.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS head.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS head.dir: setAttribute() to "ltr" followed by IDL get 
PASS head.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS head.dir: setAttribute() to "xltr" followed by IDL get 
PASS head.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS head.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS head.dir: setAttribute() to "tr" followed by getAttribute() 
PASS head.dir: setAttribute() to "tr" followed by IDL get 
PASS head.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS head.dir: setAttribute() to "LTR" followed by IDL get 
PASS head.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS head.dir: setAttribute() to "rtl" followed by IDL get 
PASS head.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS head.dir: setAttribute() to "xrtl" followed by IDL get 
PASS head.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS head.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS head.dir: setAttribute() to "tl" followed by getAttribute() 
PASS head.dir: setAttribute() to "tl" followed by IDL get 
PASS head.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS head.dir: setAttribute() to "RTL" followed by IDL get 
PASS head.dir: setAttribute() to "auto" followed by getAttribute() 
PASS head.dir: setAttribute() to "auto" followed by IDL get 
PASS head.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS head.dir: setAttribute() to "xauto" followed by IDL get 
PASS head.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS head.dir: setAttribute() to "auto\0" followed by IDL get 
PASS head.dir: setAttribute() to "uto" followed by getAttribute() 
PASS head.dir: setAttribute() to "uto" followed by IDL get 
PASS head.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS head.dir: setAttribute() to "AUTO" followed by IDL get 
PASS head.dir: IDL set to "" should not throw 
PASS head.dir: IDL set to "" followed by getAttribute() 
PASS head.dir: IDL set to "" followed by IDL get 
PASS head.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS head.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS head.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS head.dir: IDL set to undefined should not throw 
PASS head.dir: IDL set to undefined followed by getAttribute() 
PASS head.dir: IDL set to undefined followed by IDL get 
PASS head.dir: IDL set to 7 should not throw 
PASS head.dir: IDL set to 7 followed by getAttribute() 
PASS head.dir: IDL set to 7 followed by IDL get 
PASS head.dir: IDL set to 1.5 should not throw 
PASS head.dir: IDL set to 1.5 followed by getAttribute() 
PASS head.dir: IDL set to 1.5 followed by IDL get 
PASS head.dir: IDL set to true should not throw 
PASS head.dir: IDL set to true followed by getAttribute() 
PASS head.dir: IDL set to true followed by IDL get 
PASS head.dir: IDL set to false should not throw 
PASS head.dir: IDL set to false followed by getAttribute() 
PASS head.dir: IDL set to false followed by IDL get 
PASS head.dir: IDL set to object "[object Object]" should not throw 
PASS head.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS head.dir: IDL set to object "[object Object]" followed by IDL get 
PASS head.dir: IDL set to NaN should not throw 
PASS head.dir: IDL set to NaN followed by getAttribute() 
PASS head.dir: IDL set to NaN followed by IDL get 
PASS head.dir: IDL set to Infinity should not throw 
PASS head.dir: IDL set to Infinity followed by getAttribute() 
PASS head.dir: IDL set to Infinity followed by IDL get 
PASS head.dir: IDL set to -Infinity should not throw 
PASS head.dir: IDL set to -Infinity followed by getAttribute() 
PASS head.dir: IDL set to -Infinity followed by IDL get 
PASS head.dir: IDL set to "\0" should not throw 
PASS head.dir: IDL set to "\0" followed by getAttribute() 
PASS head.dir: IDL set to "\0" followed by IDL get 
PASS head.dir: IDL set to null should not throw 
PASS head.dir: IDL set to null followed by IDL get 
PASS head.dir: IDL set to object "test-toString" should not throw 
PASS head.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS head.dir: IDL set to object "test-toString" followed by IDL get 
PASS head.dir: IDL set to object "test-valueOf" should not throw 
PASS head.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS head.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS head.dir: IDL set to "ltr" should not throw 
PASS head.dir: IDL set to "ltr" followed by getAttribute() 
PASS head.dir: IDL set to "ltr" followed by IDL get 
PASS head.dir: IDL set to "xltr" should not throw 
PASS head.dir: IDL set to "xltr" followed by getAttribute() 
PASS head.dir: IDL set to "xltr" followed by IDL get 
PASS head.dir: IDL set to "ltr\0" should not throw 
PASS head.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS head.dir: IDL set to "ltr\0" followed by IDL get 
PASS head.dir: IDL set to "tr" should not throw 
PASS head.dir: IDL set to "tr" followed by getAttribute() 
PASS head.dir: IDL set to "tr" followed by IDL get 
PASS head.dir: IDL set to "LTR" should not throw 
PASS head.dir: IDL set to "LTR" followed by getAttribute() 
PASS head.dir: IDL set to "LTR" followed by IDL get 
PASS head.dir: IDL set to "rtl" should not throw 
PASS head.dir: IDL set to "rtl" followed by getAttribute() 
PASS head.dir: IDL set to "rtl" followed by IDL get 
PASS head.dir: IDL set to "xrtl" should not throw 
PASS head.dir: IDL set to "xrtl" followed by getAttribute() 
PASS head.dir: IDL set to "xrtl" followed by IDL get 
PASS head.dir: IDL set to "rtl\0" should not throw 
PASS head.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS head.dir: IDL set to "rtl\0" followed by IDL get 
PASS head.dir: IDL set to "tl" should not throw 
PASS head.dir: IDL set to "tl" followed by getAttribute() 
PASS head.dir: IDL set to "tl" followed by IDL get 
PASS head.dir: IDL set to "RTL" should not throw 
PASS head.dir: IDL set to "RTL" followed by getAttribute() 
PASS head.dir: IDL set to "RTL" followed by IDL get 
PASS head.dir: IDL set to "auto" should not throw 
PASS head.dir: IDL set to "auto" followed by getAttribute() 
PASS head.dir: IDL set to "auto" followed by IDL get 
PASS head.dir: IDL set to "xauto" should not throw 
PASS head.dir: IDL set to "xauto" followed by getAttribute() 
PASS head.dir: IDL set to "xauto" followed by IDL get 
PASS head.dir: IDL set to "auto\0" should not throw 
PASS head.dir: IDL set to "auto\0" followed by getAttribute() 
PASS head.dir: IDL set to "auto\0" followed by IDL get 
PASS head.dir: IDL set to "uto" should not throw 
PASS head.dir: IDL set to "uto" followed by getAttribute() 
PASS head.dir: IDL set to "uto" followed by IDL get 
PASS head.dir: IDL set to "AUTO" should not throw 
PASS head.dir: IDL set to "AUTO" followed by getAttribute() 
PASS head.dir: IDL set to "AUTO" followed by IDL get 
PASS head.className (<head class>): typeof IDL attribute 
PASS head.className (<head class>): IDL get with DOM attribute unset 
PASS head.className (<head class>): setAttribute() to "" followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to "" followed by IDL get 
PASS head.className (<head class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS head.className (<head class>): setAttribute() to undefined followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to undefined followed by IDL get 
PASS head.className (<head class>): setAttribute() to 7 followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to 7 followed by IDL get 
PASS head.className (<head class>): setAttribute() to 1.5 followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to 1.5 followed by IDL get 
PASS head.className (<head class>): setAttribute() to true followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to true followed by IDL get 
PASS head.className (<head class>): setAttribute() to false followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to false followed by IDL get 
PASS head.className (<head class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS head.className (<head class>): setAttribute() to NaN followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to NaN followed by IDL get 
PASS head.className (<head class>): setAttribute() to Infinity followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to Infinity followed by IDL get 
PASS head.className (<head class>): setAttribute() to -Infinity followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to -Infinity followed by IDL get 
PASS head.className (<head class>): setAttribute() to "\0" followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to "\0" followed by IDL get 
PASS head.className (<head class>): setAttribute() to null followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to null followed by IDL get 
PASS head.className (<head class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to object "test-toString" followed by IDL get 
PASS head.className (<head class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS head.className (<head class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS head.className (<head class>): IDL set to "" should not throw 
PASS head.className (<head class>): IDL set to "" followed by getAttribute() 
PASS head.className (<head class>): IDL set to "" followed by IDL get 
PASS head.className (<head class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS head.className (<head class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS head.className (<head class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS head.className (<head class>): IDL set to undefined should not throw 
PASS head.className (<head class>): IDL set to undefined followed by getAttribute() 
PASS head.className (<head class>): IDL set to undefined followed by IDL get 
PASS head.className (<head class>): IDL set to 7 should not throw 
PASS head.className (<head class>): IDL set to 7 followed by getAttribute() 
PASS head.className (<head class>): IDL set to 7 followed by IDL get 
PASS head.className (<head class>): IDL set to 1.5 should not throw 
PASS head.className (<head class>): IDL set to 1.5 followed by getAttribute() 
PASS head.className (<head class>): IDL set to 1.5 followed by IDL get 
PASS head.className (<head class>): IDL set to true should not throw 
PASS head.className (<head class>): IDL set to true followed by getAttribute() 
PASS head.className (<head class>): IDL set to true followed by IDL get 
PASS head.className (<head class>): IDL set to false should not throw 
PASS head.className (<head class>): IDL set to false followed by getAttribute() 
PASS head.className (<head class>): IDL set to false followed by IDL get 
PASS head.className (<head class>): IDL set to object "[object Object]" should not throw 
PASS head.className (<head class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS head.className (<head class>): IDL set to object "[object Object]" followed by IDL get 
PASS head.className (<head class>): IDL set to NaN should not throw 
PASS head.className (<head class>): IDL set to NaN followed by getAttribute() 
PASS head.className (<head class>): IDL set to NaN followed by IDL get 
PASS head.className (<head class>): IDL set to Infinity should not throw 
PASS head.className (<head class>): IDL set to Infinity followed by getAttribute() 
PASS head.className (<head class>): IDL set to Infinity followed by IDL get 
PASS head.className (<head class>): IDL set to -Infinity should not throw 
PASS head.className (<head class>): IDL set to -Infinity followed by getAttribute() 
PASS head.className (<head class>): IDL set to -Infinity followed by IDL get 
PASS head.className (<head class>): IDL set to "\0" should not throw 
PASS head.className (<head class>): IDL set to "\0" followed by getAttribute() 
PASS head.className (<head class>): IDL set to "\0" followed by IDL get 
PASS head.className (<head class>): IDL set to null should not throw 
PASS head.className (<head class>): IDL set to null followed by getAttribute() 
PASS head.className (<head class>): IDL set to null followed by IDL get 
PASS head.className (<head class>): IDL set to object "test-toString" should not throw 
PASS head.className (<head class>): IDL set to object "test-toString" followed by getAttribute() 
PASS head.className (<head class>): IDL set to object "test-toString" followed by IDL get 
PASS head.className (<head class>): IDL set to object "test-valueOf" should not throw 
PASS head.className (<head class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS head.className (<head class>): IDL set to object "test-valueOf" followed by IDL get 
PASS head.hidden: typeof IDL attribute 
PASS head.hidden: IDL get with DOM attribute unset 
PASS head.hidden: setAttribute() to "" followed by getAttribute() 
PASS head.hidden: setAttribute() to "" followed by IDL get 
PASS head.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS head.hidden: setAttribute() to " foo " followed by IDL get 
PASS head.hidden: setAttribute() to undefined followed by getAttribute() 
PASS head.hidden: setAttribute() to undefined followed by IDL get 
PASS head.hidden: setAttribute() to null followed by getAttribute() 
PASS head.hidden: setAttribute() to null followed by IDL get 
PASS head.hidden: setAttribute() to 7 followed by getAttribute() 
PASS head.hidden: setAttribute() to 7 followed by IDL get 
PASS head.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS head.hidden: setAttribute() to 1.5 followed by IDL get 
PASS head.hidden: setAttribute() to true followed by getAttribute() 
PASS head.hidden: setAttribute() to true followed by IDL get 
PASS head.hidden: setAttribute() to false followed by getAttribute() 
PASS head.hidden: setAttribute() to false followed by IDL get 
PASS head.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS head.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS head.hidden: setAttribute() to NaN followed by getAttribute() 
PASS head.hidden: setAttribute() to NaN followed by IDL get 
PASS head.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS head.hidden: setAttribute() to Infinity followed by IDL get 
PASS head.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS head.hidden: setAttribute() to -Infinity followed by IDL get 
PASS head.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS head.hidden: setAttribute() to "\0" followed by IDL get 
PASS head.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS head.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS head.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS head.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS head.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS head.hidden: setAttribute() to "hidden" followed by IDL get 
PASS head.hidden: IDL set to "" should not throw 
PASS head.hidden: IDL set to "" followed by hasAttribute() 
PASS head.hidden: IDL set to "" followed by IDL get 
PASS head.hidden: IDL set to " foo " should not throw 
PASS head.hidden: IDL set to " foo " followed by hasAttribute() 
PASS head.hidden: IDL set to " foo " followed by IDL get 
PASS head.hidden: IDL set to undefined should not throw 
PASS head.hidden: IDL set to undefined followed by hasAttribute() 
PASS head.hidden: IDL set to undefined followed by IDL get 
PASS head.hidden: IDL set to null should not throw 
PASS head.hidden: IDL set to null followed by hasAttribute() 
PASS head.hidden: IDL set to null followed by IDL get 
PASS head.hidden: IDL set to 7 should not throw 
PASS head.hidden: IDL set to 7 followed by hasAttribute() 
PASS head.hidden: IDL set to 7 followed by IDL get 
PASS head.hidden: IDL set to 1.5 should not throw 
PASS head.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS head.hidden: IDL set to 1.5 followed by IDL get 
PASS head.hidden: IDL set to true should not throw 
PASS head.hidden: IDL set to true followed by hasAttribute() 
PASS head.hidden: IDL set to true followed by IDL get 
PASS head.hidden: IDL set to false should not throw 
PASS head.hidden: IDL set to false followed by hasAttribute() 
PASS head.hidden: IDL set to false followed by IDL get 
PASS head.hidden: IDL set to object "[object Object]" should not throw 
PASS head.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS head.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS head.hidden: IDL set to NaN should not throw 
PASS head.hidden: IDL set to NaN followed by hasAttribute() 
PASS head.hidden: IDL set to NaN followed by IDL get 
PASS head.hidden: IDL set to Infinity should not throw 
PASS head.hidden: IDL set to Infinity followed by hasAttribute() 
PASS head.hidden: IDL set to Infinity followed by IDL get 
PASS head.hidden: IDL set to -Infinity should not throw 
PASS head.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS head.hidden: IDL set to -Infinity followed by IDL get 
PASS head.hidden: IDL set to "\0" should not throw 
PASS head.hidden: IDL set to "\0" followed by hasAttribute() 
PASS head.hidden: IDL set to "\0" followed by IDL get 
PASS head.hidden: IDL set to object "test-toString" should not throw 
PASS head.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS head.hidden: IDL set to object "test-toString" followed by IDL get 
PASS head.hidden: IDL set to object "test-valueOf" should not throw 
PASS head.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS head.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS head.accessKey: typeof IDL attribute 
PASS head.accessKey: IDL get with DOM attribute unset 
PASS head.accessKey: setAttribute() to "" followed by getAttribute() 
PASS head.accessKey: setAttribute() to "" followed by IDL get 
PASS head.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS head.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS head.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS head.accessKey: setAttribute() to undefined followed by IDL get 
PASS head.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS head.accessKey: setAttribute() to 7 followed by IDL get 
PASS head.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS head.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS head.accessKey: setAttribute() to true followed by getAttribute() 
PASS head.accessKey: setAttribute() to true followed by IDL get 
PASS head.accessKey: setAttribute() to false followed by getAttribute() 
PASS head.accessKey: setAttribute() to false followed by IDL get 
PASS head.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS head.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS head.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS head.accessKey: setAttribute() to NaN followed by IDL get 
PASS head.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS head.accessKey: setAttribute() to Infinity followed by IDL get 
PASS head.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS head.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS head.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS head.accessKey: setAttribute() to "\0" followed by IDL get 
PASS head.accessKey: setAttribute() to null followed by getAttribute() 
PASS head.accessKey: setAttribute() to null followed by IDL get 
PASS head.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS head.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS head.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS head.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS head.accessKey: IDL set to "" should not throw 
PASS head.accessKey: IDL set to "" followed by getAttribute() 
PASS head.accessKey: IDL set to "" followed by IDL get 
PASS head.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS head.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS head.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS head.accessKey: IDL set to undefined should not throw 
PASS head.accessKey: IDL set to undefined followed by getAttribute() 
PASS head.accessKey: IDL set to undefined followed by IDL get 
PASS head.accessKey: IDL set to 7 should not throw 
PASS head.accessKey: IDL set to 7 followed by getAttribute() 
PASS head.accessKey: IDL set to 7 followed by IDL get 
PASS head.accessKey: IDL set to 1.5 should not throw 
PASS head.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS head.accessKey: IDL set to 1.5 followed by IDL get 
PASS head.accessKey: IDL set to true should not throw 
PASS head.accessKey: IDL set to true followed by getAttribute() 
PASS head.accessKey: IDL set to true followed by IDL get 
PASS head.accessKey: IDL set to false should not throw 
PASS head.accessKey: IDL set to false followed by getAttribute() 
PASS head.accessKey: IDL set to false followed by IDL get 
PASS head.accessKey: IDL set to object "[object Object]" should not throw 
PASS head.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS head.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS head.accessKey: IDL set to NaN should not throw 
PASS head.accessKey: IDL set to NaN followed by getAttribute() 
PASS head.accessKey: IDL set to NaN followed by IDL get 
PASS head.accessKey: IDL set to Infinity should not throw 
PASS head.accessKey: IDL set to Infinity followed by getAttribute() 
PASS head.accessKey: IDL set to Infinity followed by IDL get 
PASS head.accessKey: IDL set to -Infinity should not throw 
PASS head.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS head.accessKey: IDL set to -Infinity followed by IDL get 
PASS head.accessKey: IDL set to "\0" should not throw 
PASS head.accessKey: IDL set to "\0" followed by getAttribute() 
PASS head.accessKey: IDL set to "\0" followed by IDL get 
PASS head.accessKey: IDL set to null should not throw 
PASS head.accessKey: IDL set to null followed by getAttribute() 
PASS head.accessKey: IDL set to null followed by IDL get 
PASS head.accessKey: IDL set to object "test-toString" should not throw 
PASS head.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS head.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS head.accessKey: IDL set to object "test-valueOf" should not throw 
PASS head.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS head.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS head.tabIndex: typeof IDL attribute 
PASS head.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS head.tabIndex: setAttribute() to -36 followed by IDL get 
PASS head.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS head.tabIndex: setAttribute() to -1 followed by IDL get 
PASS head.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS head.tabIndex: setAttribute() to 0 followed by IDL get 
PASS head.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS head.tabIndex: setAttribute() to 1 followed by IDL get 
PASS head.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS head.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS head.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS head.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS head.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS head.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS head.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS head.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS head.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS head.tabIndex: setAttribute() to "0" followed by IDL get 
PASS head.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS head.tabIndex: setAttribute() to "1" followed by IDL get 
PASS head.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS head.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS head.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS head.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS head.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS head.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS head.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS head.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS head.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS head.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS head.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS head.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS head.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS head.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS head.tabIndex: IDL set to -36 should not throw 
PASS head.tabIndex: IDL set to -36 followed by getAttribute() 
PASS head.tabIndex: IDL set to -36 followed by IDL get 
PASS head.tabIndex: IDL set to -1 should not throw 
PASS head.tabIndex: IDL set to -1 followed by getAttribute() 
PASS head.tabIndex: IDL set to -1 followed by IDL get 
PASS head.tabIndex: IDL set to 0 should not throw 
PASS head.tabIndex: IDL set to 0 followed by getAttribute() 
PASS head.tabIndex: IDL set to 0 followed by IDL get 
PASS head.tabIndex: IDL set to 1 should not throw 
PASS head.tabIndex: IDL set to 1 followed by getAttribute() 
PASS head.tabIndex: IDL set to 1 followed by IDL get 
PASS head.tabIndex: IDL set to 2147483647 should not throw 
PASS head.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS head.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS head.tabIndex: IDL set to -2147483648 should not throw 
PASS head.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS head.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL head.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL head.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS head.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL head.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL head.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL head.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to null followed by getAttribute() 
FAIL head.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL head.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL head.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to true followed by getAttribute() 
FAIL head.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to false followed by getAttribute() 
FAIL head.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL head.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL head.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL head.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL head.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL head.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL head.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL head.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL head.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS head.itemScope: IDL set to "" should not throw 
FAIL head.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL head.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS head.itemScope: IDL set to " foo " should not throw 
PASS head.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL head.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS head.itemScope: IDL set to undefined should not throw 
FAIL head.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL head.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS head.itemScope: IDL set to null should not throw 
FAIL head.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL head.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS head.itemScope: IDL set to 7 should not throw 
PASS head.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL head.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS head.itemScope: IDL set to 1.5 should not throw 
PASS head.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL head.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS head.itemScope: IDL set to true should not throw 
PASS head.itemScope: IDL set to true followed by hasAttribute() 
PASS head.itemScope: IDL set to true followed by IDL get 
PASS head.itemScope: IDL set to false should not throw 
FAIL head.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS head.itemScope: IDL set to false followed by IDL get 
PASS head.itemScope: IDL set to object "[object Object]" should not throw 
PASS head.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL head.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS head.itemScope: IDL set to NaN should not throw 
FAIL head.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL head.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS head.itemScope: IDL set to Infinity should not throw 
PASS head.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL head.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS head.itemScope: IDL set to -Infinity should not throw 
PASS head.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL head.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS head.itemScope: IDL set to "\0" should not throw 
PASS head.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL head.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS head.itemScope: IDL set to object "test-toString" should not throw 
PASS head.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL head.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS head.itemScope: IDL set to object "test-valueOf" should not throw 
PASS head.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL head.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL head.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL head.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS head.itemId: setAttribute() to "" followed by getAttribute() 
FAIL head.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS head.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL head.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS head.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL head.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS head.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL head.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS head.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL head.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS head.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL head.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS head.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL head.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS head.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL head.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS head.itemId: setAttribute() to true followed by getAttribute() 
FAIL head.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS head.itemId: setAttribute() to false followed by getAttribute() 
FAIL head.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS head.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL head.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS head.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL head.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS head.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL head.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS head.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL head.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS head.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL head.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS head.itemId: setAttribute() to null followed by getAttribute() 
FAIL head.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS head.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL head.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS head.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL head.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS head.itemId: IDL set to "" should not throw 
FAIL head.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL head.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS head.itemId: IDL set to " foo " should not throw 
FAIL head.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL head.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS head.itemId: IDL set to "http://site.example/" should not throw 
FAIL head.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS head.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS head.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL head.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL head.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS head.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL head.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL head.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS head.itemId: IDL set to undefined should not throw 
FAIL head.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL head.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS head.itemId: IDL set to 7 should not throw 
FAIL head.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL head.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS head.itemId: IDL set to 1.5 should not throw 
FAIL head.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL head.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS head.itemId: IDL set to true should not throw 
FAIL head.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL head.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS head.itemId: IDL set to false should not throw 
FAIL head.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL head.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS head.itemId: IDL set to object "[object Object]" should not throw 
FAIL head.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL head.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS head.itemId: IDL set to NaN should not throw 
FAIL head.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL head.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS head.itemId: IDL set to Infinity should not throw 
FAIL head.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL head.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS head.itemId: IDL set to -Infinity should not throw 
FAIL head.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL head.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS head.itemId: IDL set to "\0" should not throw 
FAIL head.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL head.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS head.itemId: IDL set to null should not throw 
FAIL head.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL head.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS head.itemId: IDL set to object "test-toString" should not throw 
FAIL head.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL head.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS head.itemId: IDL set to object "test-valueOf" should not throw 
PASS head.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL head.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS title.title: typeof IDL attribute 
PASS title.title: IDL get with DOM attribute unset 
PASS title.title: setAttribute() to "" followed by getAttribute() 
PASS title.title: setAttribute() to "" followed by IDL get 
PASS title.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS title.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS title.title: setAttribute() to undefined followed by getAttribute() 
PASS title.title: setAttribute() to undefined followed by IDL get 
PASS title.title: setAttribute() to 7 followed by getAttribute() 
PASS title.title: setAttribute() to 7 followed by IDL get 
PASS title.title: setAttribute() to 1.5 followed by getAttribute() 
PASS title.title: setAttribute() to 1.5 followed by IDL get 
PASS title.title: setAttribute() to true followed by getAttribute() 
PASS title.title: setAttribute() to true followed by IDL get 
PASS title.title: setAttribute() to false followed by getAttribute() 
PASS title.title: setAttribute() to false followed by IDL get 
PASS title.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS title.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS title.title: setAttribute() to NaN followed by getAttribute() 
PASS title.title: setAttribute() to NaN followed by IDL get 
PASS title.title: setAttribute() to Infinity followed by getAttribute() 
PASS title.title: setAttribute() to Infinity followed by IDL get 
PASS title.title: setAttribute() to -Infinity followed by getAttribute() 
PASS title.title: setAttribute() to -Infinity followed by IDL get 
PASS title.title: setAttribute() to "\0" followed by getAttribute() 
PASS title.title: setAttribute() to "\0" followed by IDL get 
PASS title.title: setAttribute() to null followed by getAttribute() 
PASS title.title: setAttribute() to null followed by IDL get 
PASS title.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS title.title: setAttribute() to object "test-toString" followed by IDL get 
PASS title.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS title.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS title.title: IDL set to "" should not throw 
PASS title.title: IDL set to "" followed by getAttribute() 
PASS title.title: IDL set to "" followed by IDL get 
PASS title.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS title.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS title.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS title.title: IDL set to undefined should not throw 
PASS title.title: IDL set to undefined followed by getAttribute() 
PASS title.title: IDL set to undefined followed by IDL get 
PASS title.title: IDL set to 7 should not throw 
PASS title.title: IDL set to 7 followed by getAttribute() 
PASS title.title: IDL set to 7 followed by IDL get 
PASS title.title: IDL set to 1.5 should not throw 
PASS title.title: IDL set to 1.5 followed by getAttribute() 
PASS title.title: IDL set to 1.5 followed by IDL get 
PASS title.title: IDL set to true should not throw 
PASS title.title: IDL set to true followed by getAttribute() 
PASS title.title: IDL set to true followed by IDL get 
PASS title.title: IDL set to false should not throw 
PASS title.title: IDL set to false followed by getAttribute() 
PASS title.title: IDL set to false followed by IDL get 
PASS title.title: IDL set to object "[object Object]" should not throw 
PASS title.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS title.title: IDL set to object "[object Object]" followed by IDL get 
PASS title.title: IDL set to NaN should not throw 
PASS title.title: IDL set to NaN followed by getAttribute() 
PASS title.title: IDL set to NaN followed by IDL get 
PASS title.title: IDL set to Infinity should not throw 
PASS title.title: IDL set to Infinity followed by getAttribute() 
PASS title.title: IDL set to Infinity followed by IDL get 
PASS title.title: IDL set to -Infinity should not throw 
PASS title.title: IDL set to -Infinity followed by getAttribute() 
PASS title.title: IDL set to -Infinity followed by IDL get 
PASS title.title: IDL set to "\0" should not throw 
PASS title.title: IDL set to "\0" followed by getAttribute() 
PASS title.title: IDL set to "\0" followed by IDL get 
PASS title.title: IDL set to null should not throw 
PASS title.title: IDL set to null followed by getAttribute() 
PASS title.title: IDL set to null followed by IDL get 
PASS title.title: IDL set to object "test-toString" should not throw 
PASS title.title: IDL set to object "test-toString" followed by getAttribute() 
PASS title.title: IDL set to object "test-toString" followed by IDL get 
PASS title.title: IDL set to object "test-valueOf" should not throw 
PASS title.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS title.title: IDL set to object "test-valueOf" followed by IDL get 
PASS title.lang: typeof IDL attribute 
PASS title.lang: IDL get with DOM attribute unset 
PASS title.lang: setAttribute() to "" followed by getAttribute() 
PASS title.lang: setAttribute() to "" followed by IDL get 
PASS title.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS title.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS title.lang: setAttribute() to undefined followed by getAttribute() 
PASS title.lang: setAttribute() to undefined followed by IDL get 
PASS title.lang: setAttribute() to 7 followed by getAttribute() 
PASS title.lang: setAttribute() to 7 followed by IDL get 
PASS title.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS title.lang: setAttribute() to 1.5 followed by IDL get 
PASS title.lang: setAttribute() to true followed by getAttribute() 
PASS title.lang: setAttribute() to true followed by IDL get 
PASS title.lang: setAttribute() to false followed by getAttribute() 
PASS title.lang: setAttribute() to false followed by IDL get 
PASS title.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS title.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS title.lang: setAttribute() to NaN followed by getAttribute() 
PASS title.lang: setAttribute() to NaN followed by IDL get 
PASS title.lang: setAttribute() to Infinity followed by getAttribute() 
PASS title.lang: setAttribute() to Infinity followed by IDL get 
PASS title.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS title.lang: setAttribute() to -Infinity followed by IDL get 
PASS title.lang: setAttribute() to "\0" followed by getAttribute() 
PASS title.lang: setAttribute() to "\0" followed by IDL get 
PASS title.lang: setAttribute() to null followed by getAttribute() 
PASS title.lang: setAttribute() to null followed by IDL get 
PASS title.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS title.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS title.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS title.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS title.lang: IDL set to "" should not throw 
PASS title.lang: IDL set to "" followed by getAttribute() 
PASS title.lang: IDL set to "" followed by IDL get 
PASS title.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS title.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS title.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS title.lang: IDL set to undefined should not throw 
PASS title.lang: IDL set to undefined followed by getAttribute() 
PASS title.lang: IDL set to undefined followed by IDL get 
PASS title.lang: IDL set to 7 should not throw 
PASS title.lang: IDL set to 7 followed by getAttribute() 
PASS title.lang: IDL set to 7 followed by IDL get 
PASS title.lang: IDL set to 1.5 should not throw 
PASS title.lang: IDL set to 1.5 followed by getAttribute() 
PASS title.lang: IDL set to 1.5 followed by IDL get 
PASS title.lang: IDL set to true should not throw 
PASS title.lang: IDL set to true followed by getAttribute() 
PASS title.lang: IDL set to true followed by IDL get 
PASS title.lang: IDL set to false should not throw 
PASS title.lang: IDL set to false followed by getAttribute() 
PASS title.lang: IDL set to false followed by IDL get 
PASS title.lang: IDL set to object "[object Object]" should not throw 
PASS title.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS title.lang: IDL set to object "[object Object]" followed by IDL get 
PASS title.lang: IDL set to NaN should not throw 
PASS title.lang: IDL set to NaN followed by getAttribute() 
PASS title.lang: IDL set to NaN followed by IDL get 
PASS title.lang: IDL set to Infinity should not throw 
PASS title.lang: IDL set to Infinity followed by getAttribute() 
PASS title.lang: IDL set to Infinity followed by IDL get 
PASS title.lang: IDL set to -Infinity should not throw 
PASS title.lang: IDL set to -Infinity followed by getAttribute() 
PASS title.lang: IDL set to -Infinity followed by IDL get 
PASS title.lang: IDL set to "\0" should not throw 
PASS title.lang: IDL set to "\0" followed by getAttribute() 
PASS title.lang: IDL set to "\0" followed by IDL get 
PASS title.lang: IDL set to null should not throw 
PASS title.lang: IDL set to null followed by getAttribute() 
PASS title.lang: IDL set to null followed by IDL get 
PASS title.lang: IDL set to object "test-toString" should not throw 
PASS title.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS title.lang: IDL set to object "test-toString" followed by IDL get 
PASS title.lang: IDL set to object "test-valueOf" should not throw 
PASS title.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS title.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS title.dir: typeof IDL attribute 
PASS title.dir: IDL get with DOM attribute unset 
PASS title.dir: setAttribute() to "" followed by getAttribute() 
PASS title.dir: setAttribute() to "" followed by IDL get 
PASS title.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS title.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS title.dir: setAttribute() to undefined followed by getAttribute() 
PASS title.dir: setAttribute() to undefined followed by IDL get 
PASS title.dir: setAttribute() to 7 followed by getAttribute() 
PASS title.dir: setAttribute() to 7 followed by IDL get 
PASS title.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS title.dir: setAttribute() to 1.5 followed by IDL get 
PASS title.dir: setAttribute() to true followed by getAttribute() 
PASS title.dir: setAttribute() to true followed by IDL get 
PASS title.dir: setAttribute() to false followed by getAttribute() 
PASS title.dir: setAttribute() to false followed by IDL get 
PASS title.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS title.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS title.dir: setAttribute() to NaN followed by getAttribute() 
PASS title.dir: setAttribute() to NaN followed by IDL get 
PASS title.dir: setAttribute() to Infinity followed by getAttribute() 
PASS title.dir: setAttribute() to Infinity followed by IDL get 
PASS title.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS title.dir: setAttribute() to -Infinity followed by IDL get 
PASS title.dir: setAttribute() to "\0" followed by getAttribute() 
PASS title.dir: setAttribute() to "\0" followed by IDL get 
PASS title.dir: setAttribute() to null followed by getAttribute() 
PASS title.dir: setAttribute() to null followed by IDL get 
PASS title.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS title.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS title.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS title.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS title.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS title.dir: setAttribute() to "ltr" followed by IDL get 
PASS title.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS title.dir: setAttribute() to "xltr" followed by IDL get 
PASS title.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS title.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS title.dir: setAttribute() to "tr" followed by getAttribute() 
PASS title.dir: setAttribute() to "tr" followed by IDL get 
PASS title.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS title.dir: setAttribute() to "LTR" followed by IDL get 
PASS title.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS title.dir: setAttribute() to "rtl" followed by IDL get 
PASS title.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS title.dir: setAttribute() to "xrtl" followed by IDL get 
PASS title.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS title.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS title.dir: setAttribute() to "tl" followed by getAttribute() 
PASS title.dir: setAttribute() to "tl" followed by IDL get 
PASS title.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS title.dir: setAttribute() to "RTL" followed by IDL get 
PASS title.dir: setAttribute() to "auto" followed by getAttribute() 
PASS title.dir: setAttribute() to "auto" followed by IDL get 
PASS title.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS title.dir: setAttribute() to "xauto" followed by IDL get 
PASS title.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS title.dir: setAttribute() to "auto\0" followed by IDL get 
PASS title.dir: setAttribute() to "uto" followed by getAttribute() 
PASS title.dir: setAttribute() to "uto" followed by IDL get 
PASS title.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS title.dir: setAttribute() to "AUTO" followed by IDL get 
PASS title.dir: IDL set to "" should not throw 
PASS title.dir: IDL set to "" followed by getAttribute() 
PASS title.dir: IDL set to "" followed by IDL get 
PASS title.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS title.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS title.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS title.dir: IDL set to undefined should not throw 
PASS title.dir: IDL set to undefined followed by getAttribute() 
PASS title.dir: IDL set to undefined followed by IDL get 
PASS title.dir: IDL set to 7 should not throw 
PASS title.dir: IDL set to 7 followed by getAttribute() 
PASS title.dir: IDL set to 7 followed by IDL get 
PASS title.dir: IDL set to 1.5 should not throw 
PASS title.dir: IDL set to 1.5 followed by getAttribute() 
PASS title.dir: IDL set to 1.5 followed by IDL get 
PASS title.dir: IDL set to true should not throw 
PASS title.dir: IDL set to true followed by getAttribute() 
PASS title.dir: IDL set to true followed by IDL get 
PASS title.dir: IDL set to false should not throw 
PASS title.dir: IDL set to false followed by getAttribute() 
PASS title.dir: IDL set to false followed by IDL get 
PASS title.dir: IDL set to object "[object Object]" should not throw 
PASS title.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS title.dir: IDL set to object "[object Object]" followed by IDL get 
PASS title.dir: IDL set to NaN should not throw 
PASS title.dir: IDL set to NaN followed by getAttribute() 
PASS title.dir: IDL set to NaN followed by IDL get 
PASS title.dir: IDL set to Infinity should not throw 
PASS title.dir: IDL set to Infinity followed by getAttribute() 
PASS title.dir: IDL set to Infinity followed by IDL get 
PASS title.dir: IDL set to -Infinity should not throw 
PASS title.dir: IDL set to -Infinity followed by getAttribute() 
PASS title.dir: IDL set to -Infinity followed by IDL get 
PASS title.dir: IDL set to "\0" should not throw 
PASS title.dir: IDL set to "\0" followed by getAttribute() 
PASS title.dir: IDL set to "\0" followed by IDL get 
PASS title.dir: IDL set to null should not throw 
PASS title.dir: IDL set to null followed by IDL get 
PASS title.dir: IDL set to object "test-toString" should not throw 
PASS title.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS title.dir: IDL set to object "test-toString" followed by IDL get 
PASS title.dir: IDL set to object "test-valueOf" should not throw 
PASS title.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS title.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS title.dir: IDL set to "ltr" should not throw 
PASS title.dir: IDL set to "ltr" followed by getAttribute() 
PASS title.dir: IDL set to "ltr" followed by IDL get 
PASS title.dir: IDL set to "xltr" should not throw 
PASS title.dir: IDL set to "xltr" followed by getAttribute() 
PASS title.dir: IDL set to "xltr" followed by IDL get 
PASS title.dir: IDL set to "ltr\0" should not throw 
PASS title.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS title.dir: IDL set to "ltr\0" followed by IDL get 
PASS title.dir: IDL set to "tr" should not throw 
PASS title.dir: IDL set to "tr" followed by getAttribute() 
PASS title.dir: IDL set to "tr" followed by IDL get 
PASS title.dir: IDL set to "LTR" should not throw 
PASS title.dir: IDL set to "LTR" followed by getAttribute() 
PASS title.dir: IDL set to "LTR" followed by IDL get 
PASS title.dir: IDL set to "rtl" should not throw 
PASS title.dir: IDL set to "rtl" followed by getAttribute() 
PASS title.dir: IDL set to "rtl" followed by IDL get 
PASS title.dir: IDL set to "xrtl" should not throw 
PASS title.dir: IDL set to "xrtl" followed by getAttribute() 
PASS title.dir: IDL set to "xrtl" followed by IDL get 
PASS title.dir: IDL set to "rtl\0" should not throw 
PASS title.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS title.dir: IDL set to "rtl\0" followed by IDL get 
PASS title.dir: IDL set to "tl" should not throw 
PASS title.dir: IDL set to "tl" followed by getAttribute() 
PASS title.dir: IDL set to "tl" followed by IDL get 
PASS title.dir: IDL set to "RTL" should not throw 
PASS title.dir: IDL set to "RTL" followed by getAttribute() 
PASS title.dir: IDL set to "RTL" followed by IDL get 
PASS title.dir: IDL set to "auto" should not throw 
PASS title.dir: IDL set to "auto" followed by getAttribute() 
PASS title.dir: IDL set to "auto" followed by IDL get 
PASS title.dir: IDL set to "xauto" should not throw 
PASS title.dir: IDL set to "xauto" followed by getAttribute() 
PASS title.dir: IDL set to "xauto" followed by IDL get 
PASS title.dir: IDL set to "auto\0" should not throw 
PASS title.dir: IDL set to "auto\0" followed by getAttribute() 
PASS title.dir: IDL set to "auto\0" followed by IDL get 
PASS title.dir: IDL set to "uto" should not throw 
PASS title.dir: IDL set to "uto" followed by getAttribute() 
PASS title.dir: IDL set to "uto" followed by IDL get 
PASS title.dir: IDL set to "AUTO" should not throw 
PASS title.dir: IDL set to "AUTO" followed by getAttribute() 
PASS title.dir: IDL set to "AUTO" followed by IDL get 
PASS title.className (<title class>): typeof IDL attribute 
PASS title.className (<title class>): IDL get with DOM attribute unset 
PASS title.className (<title class>): setAttribute() to "" followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to "" followed by IDL get 
PASS title.className (<title class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS title.className (<title class>): setAttribute() to undefined followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to undefined followed by IDL get 
PASS title.className (<title class>): setAttribute() to 7 followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to 7 followed by IDL get 
PASS title.className (<title class>): setAttribute() to 1.5 followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to 1.5 followed by IDL get 
PASS title.className (<title class>): setAttribute() to true followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to true followed by IDL get 
PASS title.className (<title class>): setAttribute() to false followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to false followed by IDL get 
PASS title.className (<title class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS title.className (<title class>): setAttribute() to NaN followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to NaN followed by IDL get 
PASS title.className (<title class>): setAttribute() to Infinity followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to Infinity followed by IDL get 
PASS title.className (<title class>): setAttribute() to -Infinity followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to -Infinity followed by IDL get 
PASS title.className (<title class>): setAttribute() to "\0" followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to "\0" followed by IDL get 
PASS title.className (<title class>): setAttribute() to null followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to null followed by IDL get 
PASS title.className (<title class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to object "test-toString" followed by IDL get 
PASS title.className (<title class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS title.className (<title class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS title.className (<title class>): IDL set to "" should not throw 
PASS title.className (<title class>): IDL set to "" followed by getAttribute() 
PASS title.className (<title class>): IDL set to "" followed by IDL get 
PASS title.className (<title class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS title.className (<title class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS title.className (<title class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS title.className (<title class>): IDL set to undefined should not throw 
PASS title.className (<title class>): IDL set to undefined followed by getAttribute() 
PASS title.className (<title class>): IDL set to undefined followed by IDL get 
PASS title.className (<title class>): IDL set to 7 should not throw 
PASS title.className (<title class>): IDL set to 7 followed by getAttribute() 
PASS title.className (<title class>): IDL set to 7 followed by IDL get 
PASS title.className (<title class>): IDL set to 1.5 should not throw 
PASS title.className (<title class>): IDL set to 1.5 followed by getAttribute() 
PASS title.className (<title class>): IDL set to 1.5 followed by IDL get 
PASS title.className (<title class>): IDL set to true should not throw 
PASS title.className (<title class>): IDL set to true followed by getAttribute() 
PASS title.className (<title class>): IDL set to true followed by IDL get 
PASS title.className (<title class>): IDL set to false should not throw 
PASS title.className (<title class>): IDL set to false followed by getAttribute() 
PASS title.className (<title class>): IDL set to false followed by IDL get 
PASS title.className (<title class>): IDL set to object "[object Object]" should not throw 
PASS title.className (<title class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS title.className (<title class>): IDL set to object "[object Object]" followed by IDL get 
PASS title.className (<title class>): IDL set to NaN should not throw 
PASS title.className (<title class>): IDL set to NaN followed by getAttribute() 
PASS title.className (<title class>): IDL set to NaN followed by IDL get 
PASS title.className (<title class>): IDL set to Infinity should not throw 
PASS title.className (<title class>): IDL set to Infinity followed by getAttribute() 
PASS title.className (<title class>): IDL set to Infinity followed by IDL get 
PASS title.className (<title class>): IDL set to -Infinity should not throw 
PASS title.className (<title class>): IDL set to -Infinity followed by getAttribute() 
PASS title.className (<title class>): IDL set to -Infinity followed by IDL get 
PASS title.className (<title class>): IDL set to "\0" should not throw 
PASS title.className (<title class>): IDL set to "\0" followed by getAttribute() 
PASS title.className (<title class>): IDL set to "\0" followed by IDL get 
PASS title.className (<title class>): IDL set to null should not throw 
PASS title.className (<title class>): IDL set to null followed by getAttribute() 
PASS title.className (<title class>): IDL set to null followed by IDL get 
PASS title.className (<title class>): IDL set to object "test-toString" should not throw 
PASS title.className (<title class>): IDL set to object "test-toString" followed by getAttribute() 
PASS title.className (<title class>): IDL set to object "test-toString" followed by IDL get 
PASS title.className (<title class>): IDL set to object "test-valueOf" should not throw 
PASS title.className (<title class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS title.className (<title class>): IDL set to object "test-valueOf" followed by IDL get 
PASS title.hidden: typeof IDL attribute 
PASS title.hidden: IDL get with DOM attribute unset 
PASS title.hidden: setAttribute() to "" followed by getAttribute() 
PASS title.hidden: setAttribute() to "" followed by IDL get 
PASS title.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS title.hidden: setAttribute() to " foo " followed by IDL get 
PASS title.hidden: setAttribute() to undefined followed by getAttribute() 
PASS title.hidden: setAttribute() to undefined followed by IDL get 
PASS title.hidden: setAttribute() to null followed by getAttribute() 
PASS title.hidden: setAttribute() to null followed by IDL get 
PASS title.hidden: setAttribute() to 7 followed by getAttribute() 
PASS title.hidden: setAttribute() to 7 followed by IDL get 
PASS title.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS title.hidden: setAttribute() to 1.5 followed by IDL get 
PASS title.hidden: setAttribute() to true followed by getAttribute() 
PASS title.hidden: setAttribute() to true followed by IDL get 
PASS title.hidden: setAttribute() to false followed by getAttribute() 
PASS title.hidden: setAttribute() to false followed by IDL get 
PASS title.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS title.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS title.hidden: setAttribute() to NaN followed by getAttribute() 
PASS title.hidden: setAttribute() to NaN followed by IDL get 
PASS title.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS title.hidden: setAttribute() to Infinity followed by IDL get 
PASS title.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS title.hidden: setAttribute() to -Infinity followed by IDL get 
PASS title.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS title.hidden: setAttribute() to "\0" followed by IDL get 
PASS title.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS title.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS title.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS title.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS title.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS title.hidden: setAttribute() to "hidden" followed by IDL get 
PASS title.hidden: IDL set to "" should not throw 
PASS title.hidden: IDL set to "" followed by hasAttribute() 
PASS title.hidden: IDL set to "" followed by IDL get 
PASS title.hidden: IDL set to " foo " should not throw 
PASS title.hidden: IDL set to " foo " followed by hasAttribute() 
PASS title.hidden: IDL set to " foo " followed by IDL get 
PASS title.hidden: IDL set to undefined should not throw 
PASS title.hidden: IDL set to undefined followed by hasAttribute() 
PASS title.hidden: IDL set to undefined followed by IDL get 
PASS title.hidden: IDL set to null should not throw 
PASS title.hidden: IDL set to null followed by hasAttribute() 
PASS title.hidden: IDL set to null followed by IDL get 
PASS title.hidden: IDL set to 7 should not throw 
PASS title.hidden: IDL set to 7 followed by hasAttribute() 
PASS title.hidden: IDL set to 7 followed by IDL get 
PASS title.hidden: IDL set to 1.5 should not throw 
PASS title.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS title.hidden: IDL set to 1.5 followed by IDL get 
PASS title.hidden: IDL set to true should not throw 
PASS title.hidden: IDL set to true followed by hasAttribute() 
PASS title.hidden: IDL set to true followed by IDL get 
PASS title.hidden: IDL set to false should not throw 
PASS title.hidden: IDL set to false followed by hasAttribute() 
PASS title.hidden: IDL set to false followed by IDL get 
PASS title.hidden: IDL set to object "[object Object]" should not throw 
PASS title.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS title.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS title.hidden: IDL set to NaN should not throw 
PASS title.hidden: IDL set to NaN followed by hasAttribute() 
PASS title.hidden: IDL set to NaN followed by IDL get 
PASS title.hidden: IDL set to Infinity should not throw 
PASS title.hidden: IDL set to Infinity followed by hasAttribute() 
PASS title.hidden: IDL set to Infinity followed by IDL get 
PASS title.hidden: IDL set to -Infinity should not throw 
PASS title.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS title.hidden: IDL set to -Infinity followed by IDL get 
PASS title.hidden: IDL set to "\0" should not throw 
PASS title.hidden: IDL set to "\0" followed by hasAttribute() 
PASS title.hidden: IDL set to "\0" followed by IDL get 
PASS title.hidden: IDL set to object "test-toString" should not throw 
PASS title.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS title.hidden: IDL set to object "test-toString" followed by IDL get 
PASS title.hidden: IDL set to object "test-valueOf" should not throw 
PASS title.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS title.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS title.accessKey: typeof IDL attribute 
PASS title.accessKey: IDL get with DOM attribute unset 
PASS title.accessKey: setAttribute() to "" followed by getAttribute() 
PASS title.accessKey: setAttribute() to "" followed by IDL get 
PASS title.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS title.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS title.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS title.accessKey: setAttribute() to undefined followed by IDL get 
PASS title.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS title.accessKey: setAttribute() to 7 followed by IDL get 
PASS title.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS title.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS title.accessKey: setAttribute() to true followed by getAttribute() 
PASS title.accessKey: setAttribute() to true followed by IDL get 
PASS title.accessKey: setAttribute() to false followed by getAttribute() 
PASS title.accessKey: setAttribute() to false followed by IDL get 
PASS title.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS title.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS title.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS title.accessKey: setAttribute() to NaN followed by IDL get 
PASS title.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS title.accessKey: setAttribute() to Infinity followed by IDL get 
PASS title.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS title.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS title.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS title.accessKey: setAttribute() to "\0" followed by IDL get 
PASS title.accessKey: setAttribute() to null followed by getAttribute() 
PASS title.accessKey: setAttribute() to null followed by IDL get 
PASS title.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS title.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS title.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS title.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS title.accessKey: IDL set to "" should not throw 
PASS title.accessKey: IDL set to "" followed by getAttribute() 
PASS title.accessKey: IDL set to "" followed by IDL get 
PASS title.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS title.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS title.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS title.accessKey: IDL set to undefined should not throw 
PASS title.accessKey: IDL set to undefined followed by getAttribute() 
PASS title.accessKey: IDL set to undefined followed by IDL get 
PASS title.accessKey: IDL set to 7 should not throw 
PASS title.accessKey: IDL set to 7 followed by getAttribute() 
PASS title.accessKey: IDL set to 7 followed by IDL get 
PASS title.accessKey: IDL set to 1.5 should not throw 
PASS title.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS title.accessKey: IDL set to 1.5 followed by IDL get 
PASS title.accessKey: IDL set to true should not throw 
PASS title.accessKey: IDL set to true followed by getAttribute() 
PASS title.accessKey: IDL set to true followed by IDL get 
PASS title.accessKey: IDL set to false should not throw 
PASS title.accessKey: IDL set to false followed by getAttribute() 
PASS title.accessKey: IDL set to false followed by IDL get 
PASS title.accessKey: IDL set to object "[object Object]" should not throw 
PASS title.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS title.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS title.accessKey: IDL set to NaN should not throw 
PASS title.accessKey: IDL set to NaN followed by getAttribute() 
PASS title.accessKey: IDL set to NaN followed by IDL get 
PASS title.accessKey: IDL set to Infinity should not throw 
PASS title.accessKey: IDL set to Infinity followed by getAttribute() 
PASS title.accessKey: IDL set to Infinity followed by IDL get 
PASS title.accessKey: IDL set to -Infinity should not throw 
PASS title.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS title.accessKey: IDL set to -Infinity followed by IDL get 
PASS title.accessKey: IDL set to "\0" should not throw 
PASS title.accessKey: IDL set to "\0" followed by getAttribute() 
PASS title.accessKey: IDL set to "\0" followed by IDL get 
PASS title.accessKey: IDL set to null should not throw 
PASS title.accessKey: IDL set to null followed by getAttribute() 
PASS title.accessKey: IDL set to null followed by IDL get 
PASS title.accessKey: IDL set to object "test-toString" should not throw 
PASS title.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS title.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS title.accessKey: IDL set to object "test-valueOf" should not throw 
PASS title.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS title.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS title.tabIndex: typeof IDL attribute 
PASS title.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS title.tabIndex: setAttribute() to -36 followed by IDL get 
PASS title.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS title.tabIndex: setAttribute() to -1 followed by IDL get 
PASS title.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS title.tabIndex: setAttribute() to 0 followed by IDL get 
PASS title.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS title.tabIndex: setAttribute() to 1 followed by IDL get 
PASS title.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS title.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS title.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS title.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS title.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS title.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS title.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS title.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS title.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS title.tabIndex: setAttribute() to "0" followed by IDL get 
PASS title.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS title.tabIndex: setAttribute() to "1" followed by IDL get 
PASS title.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS title.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS title.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS title.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS title.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS title.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS title.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS title.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS title.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS title.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS title.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS title.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS title.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS title.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS title.tabIndex: IDL set to -36 should not throw 
PASS title.tabIndex: IDL set to -36 followed by getAttribute() 
PASS title.tabIndex: IDL set to -36 followed by IDL get 
PASS title.tabIndex: IDL set to -1 should not throw 
PASS title.tabIndex: IDL set to -1 followed by getAttribute() 
PASS title.tabIndex: IDL set to -1 followed by IDL get 
PASS title.tabIndex: IDL set to 0 should not throw 
PASS title.tabIndex: IDL set to 0 followed by getAttribute() 
PASS title.tabIndex: IDL set to 0 followed by IDL get 
PASS title.tabIndex: IDL set to 1 should not throw 
PASS title.tabIndex: IDL set to 1 followed by getAttribute() 
PASS title.tabIndex: IDL set to 1 followed by IDL get 
PASS title.tabIndex: IDL set to 2147483647 should not throw 
PASS title.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS title.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS title.tabIndex: IDL set to -2147483648 should not throw 
PASS title.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS title.tabIndex: IDL set to -2147483648 followed by IDL get 
FAIL title.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL title.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS title.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL title.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL title.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL title.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to null followed by getAttribute() 
FAIL title.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL title.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL title.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to true followed by getAttribute() 
FAIL title.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to false followed by getAttribute() 
FAIL title.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL title.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL title.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL title.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL title.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL title.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL title.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL title.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL title.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS title.itemScope: IDL set to "" should not throw 
FAIL title.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL title.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS title.itemScope: IDL set to " foo " should not throw 
PASS title.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL title.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS title.itemScope: IDL set to undefined should not throw 
FAIL title.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL title.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS title.itemScope: IDL set to null should not throw 
FAIL title.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL title.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS title.itemScope: IDL set to 7 should not throw 
PASS title.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL title.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS title.itemScope: IDL set to 1.5 should not throw 
PASS title.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL title.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS title.itemScope: IDL set to true should not throw 
PASS title.itemScope: IDL set to true followed by hasAttribute() 
PASS title.itemScope: IDL set to true followed by IDL get 
PASS title.itemScope: IDL set to false should not throw 
FAIL title.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS title.itemScope: IDL set to false followed by IDL get 
PASS title.itemScope: IDL set to object "[object Object]" should not throw 
PASS title.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL title.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS title.itemScope: IDL set to NaN should not throw 
FAIL title.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL title.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS title.itemScope: IDL set to Infinity should not throw 
PASS title.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL title.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS title.itemScope: IDL set to -Infinity should not throw 
PASS title.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL title.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS title.itemScope: IDL set to "\0" should not throw 
PASS title.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL title.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS title.itemScope: IDL set to object "test-toString" should not throw 
PASS title.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL title.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS title.itemScope: IDL set to object "test-valueOf" should not throw 
PASS title.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL title.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL title.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL title.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS title.itemId: setAttribute() to "" followed by getAttribute() 
FAIL title.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS title.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL title.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS title.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL title.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS title.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL title.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS title.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL title.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS title.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL title.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS title.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL title.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS title.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL title.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS title.itemId: setAttribute() to true followed by getAttribute() 
FAIL title.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS title.itemId: setAttribute() to false followed by getAttribute() 
FAIL title.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS title.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL title.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS title.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL title.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS title.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL title.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS title.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL title.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS title.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL title.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS title.itemId: setAttribute() to null followed by getAttribute() 
FAIL title.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS title.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL title.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS title.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL title.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS title.itemId: IDL set to "" should not throw 
FAIL title.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL title.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS title.itemId: IDL set to " foo " should not throw 
FAIL title.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL title.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS title.itemId: IDL set to "http://site.example/" should not throw 
FAIL title.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS title.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS title.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL title.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL title.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS title.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL title.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL title.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS title.itemId: IDL set to undefined should not throw 
FAIL title.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL title.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS title.itemId: IDL set to 7 should not throw 
FAIL title.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL title.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS title.itemId: IDL set to 1.5 should not throw 
FAIL title.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL title.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS title.itemId: IDL set to true should not throw 
FAIL title.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL title.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS title.itemId: IDL set to false should not throw 
FAIL title.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL title.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS title.itemId: IDL set to object "[object Object]" should not throw 
FAIL title.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL title.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS title.itemId: IDL set to NaN should not throw 
FAIL title.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL title.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS title.itemId: IDL set to Infinity should not throw 
FAIL title.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL title.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS title.itemId: IDL set to -Infinity should not throw 
FAIL title.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL title.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS title.itemId: IDL set to "\0" should not throw 
FAIL title.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL title.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS title.itemId: IDL set to null should not throw 
FAIL title.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL title.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS title.itemId: IDL set to object "test-toString" should not throw 
FAIL title.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL title.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS title.itemId: IDL set to object "test-valueOf" should not throw 
PASS title.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL title.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS base.title: typeof IDL attribute 
PASS base.title: IDL get with DOM attribute unset 
PASS base.title: setAttribute() to "" followed by getAttribute() 
PASS base.title: setAttribute() to "" followed by IDL get 
PASS base.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS base.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS base.title: setAttribute() to undefined followed by getAttribute() 
PASS base.title: setAttribute() to undefined followed by IDL get 
PASS base.title: setAttribute() to 7 followed by getAttribute() 
PASS base.title: setAttribute() to 7 followed by IDL get 
PASS base.title: setAttribute() to 1.5 followed by getAttribute() 
PASS base.title: setAttribute() to 1.5 followed by IDL get 
PASS base.title: setAttribute() to true followed by getAttribute() 
PASS base.title: setAttribute() to true followed by IDL get 
PASS base.title: setAttribute() to false followed by getAttribute() 
PASS base.title: setAttribute() to false followed by IDL get 
PASS base.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS base.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS base.title: setAttribute() to NaN followed by getAttribute() 
PASS base.title: setAttribute() to NaN followed by IDL get 
PASS base.title: setAttribute() to Infinity followed by getAttribute() 
PASS base.title: setAttribute() to Infinity followed by IDL get 
PASS base.title: setAttribute() to -Infinity followed by getAttribute() 
PASS base.title: setAttribute() to -Infinity followed by IDL get 
PASS base.title: setAttribute() to "\0" followed by getAttribute() 
PASS base.title: setAttribute() to "\0" followed by IDL get 
PASS base.title: setAttribute() to null followed by getAttribute() 
PASS base.title: setAttribute() to null followed by IDL get 
PASS base.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS base.title: setAttribute() to object "test-toString" followed by IDL get 
PASS base.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS base.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS base.title: IDL set to "" should not throw 
PASS base.title: IDL set to "" followed by getAttribute() 
PASS base.title: IDL set to "" followed by IDL get 
PASS base.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS base.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS base.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS base.title: IDL set to undefined should not throw 
PASS base.title: IDL set to undefined followed by getAttribute() 
PASS base.title: IDL set to undefined followed by IDL get 
PASS base.title: IDL set to 7 should not throw 
PASS base.title: IDL set to 7 followed by getAttribute() 
PASS base.title: IDL set to 7 followed by IDL get 
PASS base.title: IDL set to 1.5 should not throw 
PASS base.title: IDL set to 1.5 followed by getAttribute() 
PASS base.title: IDL set to 1.5 followed by IDL get 
PASS base.title: IDL set to true should not throw 
PASS base.title: IDL set to true followed by getAttribute() 
PASS base.title: IDL set to true followed by IDL get 
PASS base.title: IDL set to false should not throw 
PASS base.title: IDL set to false followed by getAttribute() 
PASS base.title: IDL set to false followed by IDL get 
PASS base.title: IDL set to object "[object Object]" should not throw 
PASS base.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS base.title: IDL set to object "[object Object]" followed by IDL get 
PASS base.title: IDL set to NaN should not throw 
PASS base.title: IDL set to NaN followed by getAttribute() 
PASS base.title: IDL set to NaN followed by IDL get 
PASS base.title: IDL set to Infinity should not throw 
PASS base.title: IDL set to Infinity followed by getAttribute() 
PASS base.title: IDL set to Infinity followed by IDL get 
PASS base.title: IDL set to -Infinity should not throw 
PASS base.title: IDL set to -Infinity followed by getAttribute() 
PASS base.title: IDL set to -Infinity followed by IDL get 
PASS base.title: IDL set to "\0" should not throw 
PASS base.title: IDL set to "\0" followed by getAttribute() 
PASS base.title: IDL set to "\0" followed by IDL get 
PASS base.title: IDL set to null should not throw 
PASS base.title: IDL set to null followed by getAttribute() 
PASS base.title: IDL set to null followed by IDL get 
PASS base.title: IDL set to object "test-toString" should not throw 
PASS base.title: IDL set to object "test-toString" followed by getAttribute() 
PASS base.title: IDL set to object "test-toString" followed by IDL get 
PASS base.title: IDL set to object "test-valueOf" should not throw 
PASS base.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS base.title: IDL set to object "test-valueOf" followed by IDL get 
PASS base.lang: typeof IDL attribute 
PASS base.lang: IDL get with DOM attribute unset 
PASS base.lang: setAttribute() to "" followed by getAttribute() 
PASS base.lang: setAttribute() to "" followed by IDL get 
PASS base.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS base.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS base.lang: setAttribute() to undefined followed by getAttribute() 
PASS base.lang: setAttribute() to undefined followed by IDL get 
PASS base.lang: setAttribute() to 7 followed by getAttribute() 
PASS base.lang: setAttribute() to 7 followed by IDL get 
PASS base.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS base.lang: setAttribute() to 1.5 followed by IDL get 
PASS base.lang: setAttribute() to true followed by getAttribute() 
PASS base.lang: setAttribute() to true followed by IDL get 
PASS base.lang: setAttribute() to false followed by getAttribute() 
PASS base.lang: setAttribute() to false followed by IDL get 
PASS base.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS base.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS base.lang: setAttribute() to NaN followed by getAttribute() 
PASS base.lang: setAttribute() to NaN followed by IDL get 
PASS base.lang: setAttribute() to Infinity followed by getAttribute() 
PASS base.lang: setAttribute() to Infinity followed by IDL get 
PASS base.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS base.lang: setAttribute() to -Infinity followed by IDL get 
PASS base.lang: setAttribute() to "\0" followed by getAttribute() 
PASS base.lang: setAttribute() to "\0" followed by IDL get 
PASS base.lang: setAttribute() to null followed by getAttribute() 
PASS base.lang: setAttribute() to null followed by IDL get 
PASS base.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS base.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS base.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS base.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS base.lang: IDL set to "" should not throw 
PASS base.lang: IDL set to "" followed by getAttribute() 
PASS base.lang: IDL set to "" followed by IDL get 
PASS base.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS base.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS base.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS base.lang: IDL set to undefined should not throw 
PASS base.lang: IDL set to undefined followed by getAttribute() 
PASS base.lang: IDL set to undefined followed by IDL get 
PASS base.lang: IDL set to 7 should not throw 
PASS base.lang: IDL set to 7 followed by getAttribute() 
PASS base.lang: IDL set to 7 followed by IDL get 
PASS base.lang: IDL set to 1.5 should not throw 
PASS base.lang: IDL set to 1.5 followed by getAttribute() 
PASS base.lang: IDL set to 1.5 followed by IDL get 
PASS base.lang: IDL set to true should not throw 
PASS base.lang: IDL set to true followed by getAttribute() 
PASS base.lang: IDL set to true followed by IDL get 
PASS base.lang: IDL set to false should not throw 
PASS base.lang: IDL set to false followed by getAttribute() 
PASS base.lang: IDL set to false followed by IDL get 
PASS base.lang: IDL set to object "[object Object]" should not throw 
PASS base.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS base.lang: IDL set to object "[object Object]" followed by IDL get 
PASS base.lang: IDL set to NaN should not throw 
PASS base.lang: IDL set to NaN followed by getAttribute() 
PASS base.lang: IDL set to NaN followed by IDL get 
PASS base.lang: IDL set to Infinity should not throw 
PASS base.lang: IDL set to Infinity followed by getAttribute() 
PASS base.lang: IDL set to Infinity followed by IDL get 
PASS base.lang: IDL set to -Infinity should not throw 
PASS base.lang: IDL set to -Infinity followed by getAttribute() 
PASS base.lang: IDL set to -Infinity followed by IDL get 
PASS base.lang: IDL set to "\0" should not throw 
PASS base.lang: IDL set to "\0" followed by getAttribute() 
PASS base.lang: IDL set to "\0" followed by IDL get 
PASS base.lang: IDL set to null should not throw 
PASS base.lang: IDL set to null followed by getAttribute() 
PASS base.lang: IDL set to null followed by IDL get 
PASS base.lang: IDL set to object "test-toString" should not throw 
PASS base.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS base.lang: IDL set to object "test-toString" followed by IDL get 
PASS base.lang: IDL set to object "test-valueOf" should not throw 
PASS base.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS base.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS base.dir: typeof IDL attribute 
PASS base.dir: IDL get with DOM attribute unset 
PASS base.dir: setAttribute() to "" followed by getAttribute() 
PASS base.dir: setAttribute() to "" followed by IDL get 
PASS base.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS base.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS base.dir: setAttribute() to undefined followed by getAttribute() 
PASS base.dir: setAttribute() to undefined followed by IDL get 
PASS base.dir: setAttribute() to 7 followed by getAttribute() 
PASS base.dir: setAttribute() to 7 followed by IDL get 
PASS base.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS base.dir: setAttribute() to 1.5 followed by IDL get 
PASS base.dir: setAttribute() to true followed by getAttribute() 
PASS base.dir: setAttribute() to true followed by IDL get 
PASS base.dir: setAttribute() to false followed by getAttribute() 
PASS base.dir: setAttribute() to false followed by IDL get 
PASS base.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS base.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS base.dir: setAttribute() to NaN followed by getAttribute() 
PASS base.dir: setAttribute() to NaN followed by IDL get 
PASS base.dir: setAttribute() to Infinity followed by getAttribute() 
PASS base.dir: setAttribute() to Infinity followed by IDL get 
PASS base.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS base.dir: setAttribute() to -Infinity followed by IDL get 
PASS base.dir: setAttribute() to "\0" followed by getAttribute() 
PASS base.dir: setAttribute() to "\0" followed by IDL get 
PASS base.dir: setAttribute() to null followed by getAttribute() 
PASS base.dir: setAttribute() to null followed by IDL get 
PASS base.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS base.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS base.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS base.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS base.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS base.dir: setAttribute() to "ltr" followed by IDL get 
PASS base.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS base.dir: setAttribute() to "xltr" followed by IDL get 
PASS base.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS base.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS base.dir: setAttribute() to "tr" followed by getAttribute() 
PASS base.dir: setAttribute() to "tr" followed by IDL get 
PASS base.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS base.dir: setAttribute() to "LTR" followed by IDL get 
PASS base.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS base.dir: setAttribute() to "rtl" followed by IDL get 
PASS base.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS base.dir: setAttribute() to "xrtl" followed by IDL get 
PASS base.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS base.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS base.dir: setAttribute() to "tl" followed by getAttribute() 
PASS base.dir: setAttribute() to "tl" followed by IDL get 
PASS base.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS base.dir: setAttribute() to "RTL" followed by IDL get 
PASS base.dir: setAttribute() to "auto" followed by getAttribute() 
PASS base.dir: setAttribute() to "auto" followed by IDL get 
PASS base.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS base.dir: setAttribute() to "xauto" followed by IDL get 
PASS base.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS base.dir: setAttribute() to "auto\0" followed by IDL get 
PASS base.dir: setAttribute() to "uto" followed by getAttribute() 
PASS base.dir: setAttribute() to "uto" followed by IDL get 
PASS base.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS base.dir: setAttribute() to "AUTO" followed by IDL get 
PASS base.dir: IDL set to "" should not throw 
PASS base.dir: IDL set to "" followed by getAttribute() 
PASS base.dir: IDL set to "" followed by IDL get 
PASS base.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS base.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS base.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS base.dir: IDL set to undefined should not throw 
PASS base.dir: IDL set to undefined followed by getAttribute() 
PASS base.dir: IDL set to undefined followed by IDL get 
PASS base.dir: IDL set to 7 should not throw 
PASS base.dir: IDL set to 7 followed by getAttribute() 
PASS base.dir: IDL set to 7 followed by IDL get 
PASS base.dir: IDL set to 1.5 should not throw 
PASS base.dir: IDL set to 1.5 followed by getAttribute() 
PASS base.dir: IDL set to 1.5 followed by IDL get 
PASS base.dir: IDL set to true should not throw 
PASS base.dir: IDL set to true followed by getAttribute() 
PASS base.dir: IDL set to true followed by IDL get 
PASS base.dir: IDL set to false should not throw 
PASS base.dir: IDL set to false followed by getAttribute() 
PASS base.dir: IDL set to false followed by IDL get 
PASS base.dir: IDL set to object "[object Object]" should not throw 
PASS base.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS base.dir: IDL set to object "[object Object]" followed by IDL get 
PASS base.dir: IDL set to NaN should not throw 
PASS base.dir: IDL set to NaN followed by getAttribute() 
PASS base.dir: IDL set to NaN followed by IDL get 
PASS base.dir: IDL set to Infinity should not throw 
PASS base.dir: IDL set to Infinity followed by getAttribute() 
PASS base.dir: IDL set to Infinity followed by IDL get 
PASS base.dir: IDL set to -Infinity should not throw 
PASS base.dir: IDL set to -Infinity followed by getAttribute() 
PASS base.dir: IDL set to -Infinity followed by IDL get 
PASS base.dir: IDL set to "\0" should not throw 
PASS base.dir: IDL set to "\0" followed by getAttribute() 
PASS base.dir: IDL set to "\0" followed by IDL get 
PASS base.dir: IDL set to null should not throw 
PASS base.dir: IDL set to null followed by IDL get 
PASS base.dir: IDL set to object "test-toString" should not throw 
PASS base.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS base.dir: IDL set to object "test-toString" followed by IDL get 
PASS base.dir: IDL set to object "test-valueOf" should not throw 
PASS base.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS base.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS base.dir: IDL set to "ltr" should not throw 
PASS base.dir: IDL set to "ltr" followed by getAttribute() 
PASS base.dir: IDL set to "ltr" followed by IDL get 
PASS base.dir: IDL set to "xltr" should not throw 
PASS base.dir: IDL set to "xltr" followed by getAttribute() 
PASS base.dir: IDL set to "xltr" followed by IDL get 
PASS base.dir: IDL set to "ltr\0" should not throw 
PASS base.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS base.dir: IDL set to "ltr\0" followed by IDL get 
PASS base.dir: IDL set to "tr" should not throw 
PASS base.dir: IDL set to "tr" followed by getAttribute() 
PASS base.dir: IDL set to "tr" followed by IDL get 
PASS base.dir: IDL set to "LTR" should not throw 
PASS base.dir: IDL set to "LTR" followed by getAttribute() 
PASS base.dir: IDL set to "LTR" followed by IDL get 
PASS base.dir: IDL set to "rtl" should not throw 
PASS base.dir: IDL set to "rtl" followed by getAttribute() 
PASS base.dir: IDL set to "rtl" followed by IDL get 
PASS base.dir: IDL set to "xrtl" should not throw 
PASS base.dir: IDL set to "xrtl" followed by getAttribute() 
PASS base.dir: IDL set to "xrtl" followed by IDL get 
PASS base.dir: IDL set to "rtl\0" should not throw 
PASS base.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS base.dir: IDL set to "rtl\0" followed by IDL get 
PASS base.dir: IDL set to "tl" should not throw 
PASS base.dir: IDL set to "tl" followed by getAttribute() 
PASS base.dir: IDL set to "tl" followed by IDL get 
PASS base.dir: IDL set to "RTL" should not throw 
PASS base.dir: IDL set to "RTL" followed by getAttribute() 
PASS base.dir: IDL set to "RTL" followed by IDL get 
PASS base.dir: IDL set to "auto" should not throw 
PASS base.dir: IDL set to "auto" followed by getAttribute() 
PASS base.dir: IDL set to "auto" followed by IDL get 
PASS base.dir: IDL set to "xauto" should not throw 
PASS base.dir: IDL set to "xauto" followed by getAttribute() 
PASS base.dir: IDL set to "xauto" followed by IDL get 
PASS base.dir: IDL set to "auto\0" should not throw 
PASS base.dir: IDL set to "auto\0" followed by getAttribute() 
PASS base.dir: IDL set to "auto\0" followed by IDL get 
PASS base.dir: IDL set to "uto" should not throw 
PASS base.dir: IDL set to "uto" followed by getAttribute() 
PASS base.dir: IDL set to "uto" followed by IDL get 
PASS base.dir: IDL set to "AUTO" should not throw 
PASS base.dir: IDL set to "AUTO" followed by getAttribute() 
PASS base.dir: IDL set to "AUTO" followed by IDL get 
PASS base.className (<base class>): typeof IDL attribute 
PASS base.className (<base class>): IDL get with DOM attribute unset 
PASS base.className (<base class>): setAttribute() to "" followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to "" followed by IDL get 
PASS base.className (<base class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS base.className (<base class>): setAttribute() to undefined followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to undefined followed by IDL get 
PASS base.className (<base class>): setAttribute() to 7 followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to 7 followed by IDL get 
PASS base.className (<base class>): setAttribute() to 1.5 followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to 1.5 followed by IDL get 
PASS base.className (<base class>): setAttribute() to true followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to true followed by IDL get 
PASS base.className (<base class>): setAttribute() to false followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to false followed by IDL get 
PASS base.className (<base class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS base.className (<base class>): setAttribute() to NaN followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to NaN followed by IDL get 
PASS base.className (<base class>): setAttribute() to Infinity followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to Infinity followed by IDL get 
PASS base.className (<base class>): setAttribute() to -Infinity followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to -Infinity followed by IDL get 
PASS base.className (<base class>): setAttribute() to "\0" followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to "\0" followed by IDL get 
PASS base.className (<base class>): setAttribute() to null followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to null followed by IDL get 
PASS base.className (<base class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to object "test-toString" followed by IDL get 
PASS base.className (<base class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS base.className (<base class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS base.className (<base class>): IDL set to "" should not throw 
PASS base.className (<base class>): IDL set to "" followed by getAttribute() 
PASS base.className (<base class>): IDL set to "" followed by IDL get 
PASS base.className (<base class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS base.className (<base class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS base.className (<base class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS base.className (<base class>): IDL set to undefined should not throw 
PASS base.className (<base class>): IDL set to undefined followed by getAttribute() 
PASS base.className (<base class>): IDL set to undefined followed by IDL get 
PASS base.className (<base class>): IDL set to 7 should not throw 
PASS base.className (<base class>): IDL set to 7 followed by getAttribute() 
PASS base.className (<base class>): IDL set to 7 followed by IDL get 
PASS base.className (<base class>): IDL set to 1.5 should not throw 
PASS base.className (<base class>): IDL set to 1.5 followed by getAttribute() 
PASS base.className (<base class>): IDL set to 1.5 followed by IDL get 
PASS base.className (<base class>): IDL set to true should not throw 
PASS base.className (<base class>): IDL set to true followed by getAttribute() 
PASS base.className (<base class>): IDL set to true followed by IDL get 
PASS base.className (<base class>): IDL set to false should not throw 
PASS base.className (<base class>): IDL set to false followed by getAttribute() 
PASS base.className (<base class>): IDL set to false followed by IDL get 
PASS base.className (<base class>): IDL set to object "[object Object]" should not throw 
PASS base.className (<base class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS base.className (<base class>): IDL set to object "[object Object]" followed by IDL get 
PASS base.className (<base class>): IDL set to NaN should not throw 
PASS base.className (<base class>): IDL set to NaN followed by getAttribute() 
PASS base.className (<base class>): IDL set to NaN followed by IDL get 
PASS base.className (<base class>): IDL set to Infinity should not throw 
PASS base.className (<base class>): IDL set to Infinity followed by getAttribute() 
PASS base.className (<base class>): IDL set to Infinity followed by IDL get 
PASS base.className (<base class>): IDL set to -Infinity should not throw 
PASS base.className (<base class>): IDL set to -Infinity followed by getAttribute() 
PASS base.className (<base class>): IDL set to -Infinity followed by IDL get 
PASS base.className (<base class>): IDL set to "\0" should not throw 
PASS base.className (<base class>): IDL set to "\0" followed by getAttribute() 
PASS base.className (<base class>): IDL set to "\0" followed by IDL get 
PASS base.className (<base class>): IDL set to null should not throw 
PASS base.className (<base class>): IDL set to null followed by getAttribute() 
PASS base.className (<base class>): IDL set to null followed by IDL get 
PASS base.className (<base class>): IDL set to object "test-toString" should not throw 
PASS base.className (<base class>): IDL set to object "test-toString" followed by getAttribute() 
PASS base.className (<base class>): IDL set to object "test-toString" followed by IDL get 
PASS base.className (<base class>): IDL set to object "test-valueOf" should not throw 
PASS base.className (<base class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS base.className (<base class>): IDL set to object "test-valueOf" followed by IDL get 
PASS base.hidden: typeof IDL attribute 
PASS base.hidden: IDL get with DOM attribute unset 
PASS base.hidden: setAttribute() to "" followed by getAttribute() 
PASS base.hidden: setAttribute() to "" followed by IDL get 
PASS base.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS base.hidden: setAttribute() to " foo " followed by IDL get 
PASS base.hidden: setAttribute() to undefined followed by getAttribute() 
PASS base.hidden: setAttribute() to undefined followed by IDL get 
PASS base.hidden: setAttribute() to null followed by getAttribute() 
PASS base.hidden: setAttribute() to null followed by IDL get 
PASS base.hidden: setAttribute() to 7 followed by getAttribute() 
PASS base.hidden: setAttribute() to 7 followed by IDL get 
PASS base.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS base.hidden: setAttribute() to 1.5 followed by IDL get 
PASS base.hidden: setAttribute() to true followed by getAttribute() 
PASS base.hidden: setAttribute() to true followed by IDL get 
PASS base.hidden: setAttribute() to false followed by getAttribute() 
PASS base.hidden: setAttribute() to false followed by IDL get 
PASS base.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS base.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS base.hidden: setAttribute() to NaN followed by getAttribute() 
PASS base.hidden: setAttribute() to NaN followed by IDL get 
PASS base.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS base.hidden: setAttribute() to Infinity followed by IDL get 
PASS base.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS base.hidden: setAttribute() to -Infinity followed by IDL get 
PASS base.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS base.hidden: setAttribute() to "\0" followed by IDL get 
PASS base.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS base.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS base.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS base.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS base.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS base.hidden: setAttribute() to "hidden" followed by IDL get 
PASS base.hidden: IDL set to "" should not throw 
PASS base.hidden: IDL set to "" followed by hasAttribute() 
PASS base.hidden: IDL set to "" followed by IDL get 
PASS base.hidden: IDL set to " foo " should not throw 
PASS base.hidden: IDL set to " foo " followed by hasAttribute() 
PASS base.hidden: IDL set to " foo " followed by IDL get 
PASS base.hidden: IDL set to undefined should not throw 
PASS base.hidden: IDL set to undefined followed by hasAttribute() 
PASS base.hidden: IDL set to undefined followed by IDL get 
PASS base.hidden: IDL set to null should not throw 
PASS base.hidden: IDL set to null followed by hasAttribute() 
PASS base.hidden: IDL set to null followed by IDL get 
PASS base.hidden: IDL set to 7 should not throw 
PASS base.hidden: IDL set to 7 followed by hasAttribute() 
PASS base.hidden: IDL set to 7 followed by IDL get 
PASS base.hidden: IDL set to 1.5 should not throw 
PASS base.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS base.hidden: IDL set to 1.5 followed by IDL get 
PASS base.hidden: IDL set to true should not throw 
PASS base.hidden: IDL set to true followed by hasAttribute() 
PASS base.hidden: IDL set to true followed by IDL get 
PASS base.hidden: IDL set to false should not throw 
PASS base.hidden: IDL set to false followed by hasAttribute() 
PASS base.hidden: IDL set to false followed by IDL get 
PASS base.hidden: IDL set to object "[object Object]" should not throw 
PASS base.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS base.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS base.hidden: IDL set to NaN should not throw 
PASS base.hidden: IDL set to NaN followed by hasAttribute() 
PASS base.hidden: IDL set to NaN followed by IDL get 
PASS base.hidden: IDL set to Infinity should not throw 
PASS base.hidden: IDL set to Infinity followed by hasAttribute() 
PASS base.hidden: IDL set to Infinity followed by IDL get 
PASS base.hidden: IDL set to -Infinity should not throw 
PASS base.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS base.hidden: IDL set to -Infinity followed by IDL get 
PASS base.hidden: IDL set to "\0" should not throw 
PASS base.hidden: IDL set to "\0" followed by hasAttribute() 
PASS base.hidden: IDL set to "\0" followed by IDL get 
PASS base.hidden: IDL set to object "test-toString" should not throw 
PASS base.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS base.hidden: IDL set to object "test-toString" followed by IDL get 
PASS base.hidden: IDL set to object "test-valueOf" should not throw 
PASS base.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS base.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS base.accessKey: typeof IDL attribute 
PASS base.accessKey: IDL get with DOM attribute unset 
PASS base.accessKey: setAttribute() to "" followed by getAttribute() 
PASS base.accessKey: setAttribute() to "" followed by IDL get 
PASS base.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS base.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS base.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS base.accessKey: setAttribute() to undefined followed by IDL get 
PASS base.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS base.accessKey: setAttribute() to 7 followed by IDL get 
PASS base.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS base.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS base.accessKey: setAttribute() to true followed by getAttribute() 
PASS base.accessKey: setAttribute() to true followed by IDL get 
PASS base.accessKey: setAttribute() to false followed by getAttribute() 
PASS base.accessKey: setAttribute() to false followed by IDL get 
PASS base.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS base.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS base.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS base.accessKey: setAttribute() to NaN followed by IDL get 
PASS base.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS base.accessKey: setAttribute() to Infinity followed by IDL get 
PASS base.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS base.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS base.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS base.accessKey: setAttribute() to "\0" followed by IDL get 
PASS base.accessKey: setAttribute() to null followed by getAttribute() 
PASS base.accessKey: setAttribute() to null followed by IDL get 
PASS base.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS base.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS base.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS base.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS base.accessKey: IDL set to "" should not throw 
PASS base.accessKey: IDL set to "" followed by getAttribute() 
PASS base.accessKey: IDL set to "" followed by IDL get 
PASS base.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS base.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS base.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS base.accessKey: IDL set to undefined should not throw 
PASS base.accessKey: IDL set to undefined followed by getAttribute() 
PASS base.accessKey: IDL set to undefined followed by IDL get 
PASS base.accessKey: IDL set to 7 should not throw 
PASS base.accessKey: IDL set to 7 followed by getAttribute() 
PASS base.accessKey: IDL set to 7 followed by IDL get 
PASS base.accessKey: IDL set to 1.5 should not throw 
PASS base.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS base.accessKey: IDL set to 1.5 followed by IDL get 
PASS base.accessKey: IDL set to true should not throw 
PASS base.accessKey: IDL set to true followed by getAttribute() 
PASS base.accessKey: IDL set to true followed by IDL get 
PASS base.accessKey: IDL set to false should not throw 
PASS base.accessKey: IDL set to false followed by getAttribute() 
PASS base.accessKey: IDL set to false followed by IDL get 
PASS base.accessKey: IDL set to object "[object Object]" should not throw 
PASS base.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS base.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS base.accessKey: IDL set to NaN should not throw 
PASS base.accessKey: IDL set to NaN followed by getAttribute() 
PASS base.accessKey: IDL set to NaN followed by IDL get 
PASS base.accessKey: IDL set to Infinity should not throw 
PASS base.accessKey: IDL set to Infinity followed by getAttribute() 
PASS base.accessKey: IDL set to Infinity followed by IDL get 
PASS base.accessKey: IDL set to -Infinity should not throw 
PASS base.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS base.accessKey: IDL set to -Infinity followed by IDL get 
PASS base.accessKey: IDL set to "\0" should not throw 
PASS base.accessKey: IDL set to "\0" followed by getAttribute() 
PASS base.accessKey: IDL set to "\0" followed by IDL get 
PASS base.accessKey: IDL set to null should not throw 
PASS base.accessKey: IDL set to null followed by getAttribute() 
PASS base.accessKey: IDL set to null followed by IDL get 
PASS base.accessKey: IDL set to object "test-toString" should not throw 
PASS base.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS base.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS base.accessKey: IDL set to object "test-valueOf" should not throw 
PASS base.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS base.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS base.tabIndex: typeof IDL attribute 
PASS base.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS base.tabIndex: setAttribute() to -36 followed by IDL get 
PASS base.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS base.tabIndex: setAttribute() to -1 followed by IDL get 
PASS base.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS base.tabIndex: setAttribute() to 0 followed by IDL get 
PASS base.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS base.tabIndex: setAttribute() to 1 followed by IDL get 
PASS base.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS base.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS base.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS base.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS base.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS base.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS base.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS base.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS base.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS base.tabIndex: setAttribute() to "0" followed by IDL get 
PASS base.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS base.tabIndex: setAttribute() to "1" followed by IDL get 
PASS base.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS base.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS base.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS base.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS base.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS base.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS base.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS base.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS base.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS base.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS base.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS base.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS base.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS base.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS base.tabIndex: IDL set to -36 should not throw 
PASS base.tabIndex: IDL set to -36 followed by getAttribute() 
PASS base.tabIndex: IDL set to -36 followed by IDL get 
PASS base.tabIndex: IDL set to -1 should not throw 
PASS base.tabIndex: IDL set to -1 followed by getAttribute() 
PASS base.tabIndex: IDL set to -1 followed by IDL get 
PASS base.tabIndex: IDL set to 0 should not throw 
PASS base.tabIndex: IDL set to 0 followed by getAttribute() 
PASS base.tabIndex: IDL set to 0 followed by IDL get 
PASS base.tabIndex: IDL set to 1 should not throw 
PASS base.tabIndex: IDL set to 1 followed by getAttribute() 
PASS base.tabIndex: IDL set to 1 followed by IDL get 
PASS base.tabIndex: IDL set to 2147483647 should not throw 
PASS base.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS base.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS base.tabIndex: IDL set to -2147483648 should not throw 
PASS base.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS base.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS base.target: typeof IDL attribute 
PASS base.target: IDL get with DOM attribute unset 
PASS base.target: setAttribute() to "" followed by getAttribute() 
PASS base.target: setAttribute() to "" followed by IDL get 
PASS base.target: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS base.target: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS base.target: setAttribute() to undefined followed by getAttribute() 
PASS base.target: setAttribute() to undefined followed by IDL get 
PASS base.target: setAttribute() to 7 followed by getAttribute() 
PASS base.target: setAttribute() to 7 followed by IDL get 
PASS base.target: setAttribute() to 1.5 followed by getAttribute() 
PASS base.target: setAttribute() to 1.5 followed by IDL get 
PASS base.target: setAttribute() to true followed by getAttribute() 
PASS base.target: setAttribute() to true followed by IDL get 
PASS base.target: setAttribute() to false followed by getAttribute() 
PASS base.target: setAttribute() to false followed by IDL get 
PASS base.target: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS base.target: setAttribute() to object "[object Object]" followed by IDL get 
PASS base.target: setAttribute() to NaN followed by getAttribute() 
PASS base.target: setAttribute() to NaN followed by IDL get 
PASS base.target: setAttribute() to Infinity followed by getAttribute() 
PASS base.target: setAttribute() to Infinity followed by IDL get 
PASS base.target: setAttribute() to -Infinity followed by getAttribute() 
PASS base.target: setAttribute() to -Infinity followed by IDL get 
PASS base.target: setAttribute() to "\0" followed by getAttribute() 
PASS base.target: setAttribute() to "\0" followed by IDL get 
PASS base.target: setAttribute() to null followed by getAttribute() 
PASS base.target: setAttribute() to null followed by IDL get 
PASS base.target: setAttribute() to object "test-toString" followed by getAttribute() 
PASS base.target: setAttribute() to object "test-toString" followed by IDL get 
PASS base.target: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS base.target: setAttribute() to object "test-valueOf" followed by IDL get 
PASS base.target: IDL set to "" should not throw 
PASS base.target: IDL set to "" followed by getAttribute() 
PASS base.target: IDL set to "" followed by IDL get 
PASS base.target: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS base.target: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS base.target: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS base.target: IDL set to undefined should not throw 
PASS base.target: IDL set to undefined followed by getAttribute() 
PASS base.target: IDL set to undefined followed by IDL get 
PASS base.target: IDL set to 7 should not throw 
PASS base.target: IDL set to 7 followed by getAttribute() 
PASS base.target: IDL set to 7 followed by IDL get 
PASS base.target: IDL set to 1.5 should not throw 
PASS base.target: IDL set to 1.5 followed by getAttribute() 
PASS base.target: IDL set to 1.5 followed by IDL get 
PASS base.target: IDL set to true should not throw 
PASS base.target: IDL set to true followed by getAttribute() 
PASS base.target: IDL set to true followed by IDL get 
PASS base.target: IDL set to false should not throw 
PASS base.target: IDL set to false followed by getAttribute() 
PASS base.target: IDL set to false followed by IDL get 
PASS base.target: IDL set to object "[object Object]" should not throw 
PASS base.target: IDL set to object "[object Object]" followed by getAttribute() 
PASS base.target: IDL set to object "[object Object]" followed by IDL get 
PASS base.target: IDL set to NaN should not throw 
PASS base.target: IDL set to NaN followed by getAttribute() 
PASS base.target: IDL set to NaN followed by IDL get 
PASS base.target: IDL set to Infinity should not throw 
PASS base.target: IDL set to Infinity followed by getAttribute() 
PASS base.target: IDL set to Infinity followed by IDL get 
PASS base.target: IDL set to -Infinity should not throw 
PASS base.target: IDL set to -Infinity followed by getAttribute() 
PASS base.target: IDL set to -Infinity followed by IDL get 
PASS base.target: IDL set to "\0" should not throw 
PASS base.target: IDL set to "\0" followed by getAttribute() 
PASS base.target: IDL set to "\0" followed by IDL get 
PASS base.target: IDL set to null should not throw 
PASS base.target: IDL set to null followed by getAttribute() 
PASS base.target: IDL set to null followed by IDL get 
PASS base.target: IDL set to object "test-toString" should not throw 
PASS base.target: IDL set to object "test-toString" followed by getAttribute() 
PASS base.target: IDL set to object "test-toString" followed by IDL get 
PASS base.target: IDL set to object "test-valueOf" should not throw 
PASS base.target: IDL set to object "test-valueOf" followed by getAttribute() 
PASS base.target: IDL set to object "test-valueOf" followed by IDL get 
FAIL base.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL base.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS base.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL base.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL base.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL base.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to null followed by getAttribute() 
FAIL base.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL base.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL base.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to true followed by getAttribute() 
FAIL base.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to false followed by getAttribute() 
FAIL base.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL base.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL base.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL base.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL base.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL base.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL base.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL base.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL base.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS base.itemScope: IDL set to "" should not throw 
FAIL base.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL base.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS base.itemScope: IDL set to " foo " should not throw 
PASS base.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL base.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS base.itemScope: IDL set to undefined should not throw 
FAIL base.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL base.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS base.itemScope: IDL set to null should not throw 
FAIL base.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL base.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS base.itemScope: IDL set to 7 should not throw 
PASS base.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL base.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS base.itemScope: IDL set to 1.5 should not throw 
PASS base.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL base.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS base.itemScope: IDL set to true should not throw 
PASS base.itemScope: IDL set to true followed by hasAttribute() 
PASS base.itemScope: IDL set to true followed by IDL get 
PASS base.itemScope: IDL set to false should not throw 
FAIL base.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS base.itemScope: IDL set to false followed by IDL get 
PASS base.itemScope: IDL set to object "[object Object]" should not throw 
PASS base.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL base.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS base.itemScope: IDL set to NaN should not throw 
FAIL base.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL base.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS base.itemScope: IDL set to Infinity should not throw 
PASS base.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL base.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS base.itemScope: IDL set to -Infinity should not throw 
PASS base.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL base.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS base.itemScope: IDL set to "\0" should not throw 
PASS base.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL base.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS base.itemScope: IDL set to object "test-toString" should not throw 
PASS base.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL base.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS base.itemScope: IDL set to object "test-valueOf" should not throw 
PASS base.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL base.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL base.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL base.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS base.itemId: setAttribute() to "" followed by getAttribute() 
FAIL base.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS base.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL base.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS base.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL base.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS base.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL base.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS base.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL base.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS base.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL base.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS base.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL base.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS base.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL base.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS base.itemId: setAttribute() to true followed by getAttribute() 
FAIL base.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS base.itemId: setAttribute() to false followed by getAttribute() 
FAIL base.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS base.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL base.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS base.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL base.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS base.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL base.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS base.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL base.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS base.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL base.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS base.itemId: setAttribute() to null followed by getAttribute() 
FAIL base.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS base.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL base.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS base.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL base.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS base.itemId: IDL set to "" should not throw 
FAIL base.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL base.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS base.itemId: IDL set to " foo " should not throw 
FAIL base.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL base.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS base.itemId: IDL set to "http://site.example/" should not throw 
FAIL base.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS base.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS base.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL base.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL base.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS base.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL base.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL base.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS base.itemId: IDL set to undefined should not throw 
FAIL base.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL base.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS base.itemId: IDL set to 7 should not throw 
FAIL base.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL base.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS base.itemId: IDL set to 1.5 should not throw 
FAIL base.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL base.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS base.itemId: IDL set to true should not throw 
FAIL base.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL base.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS base.itemId: IDL set to false should not throw 
FAIL base.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL base.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS base.itemId: IDL set to object "[object Object]" should not throw 
FAIL base.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL base.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS base.itemId: IDL set to NaN should not throw 
FAIL base.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL base.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS base.itemId: IDL set to Infinity should not throw 
FAIL base.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL base.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS base.itemId: IDL set to -Infinity should not throw 
FAIL base.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL base.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS base.itemId: IDL set to "\0" should not throw 
FAIL base.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL base.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS base.itemId: IDL set to null should not throw 
FAIL base.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL base.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS base.itemId: IDL set to object "test-toString" should not throw 
FAIL base.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL base.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS base.itemId: IDL set to object "test-valueOf" should not throw 
PASS base.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL base.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS link.title: typeof IDL attribute 
PASS link.title: IDL get with DOM attribute unset 
PASS link.title: setAttribute() to "" followed by getAttribute() 
PASS link.title: setAttribute() to "" followed by IDL get 
PASS link.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.title: setAttribute() to undefined followed by getAttribute() 
PASS link.title: setAttribute() to undefined followed by IDL get 
PASS link.title: setAttribute() to 7 followed by getAttribute() 
PASS link.title: setAttribute() to 7 followed by IDL get 
PASS link.title: setAttribute() to 1.5 followed by getAttribute() 
PASS link.title: setAttribute() to 1.5 followed by IDL get 
PASS link.title: setAttribute() to true followed by getAttribute() 
PASS link.title: setAttribute() to true followed by IDL get 
PASS link.title: setAttribute() to false followed by getAttribute() 
PASS link.title: setAttribute() to false followed by IDL get 
PASS link.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.title: setAttribute() to NaN followed by getAttribute() 
PASS link.title: setAttribute() to NaN followed by IDL get 
PASS link.title: setAttribute() to Infinity followed by getAttribute() 
PASS link.title: setAttribute() to Infinity followed by IDL get 
PASS link.title: setAttribute() to -Infinity followed by getAttribute() 
PASS link.title: setAttribute() to -Infinity followed by IDL get 
PASS link.title: setAttribute() to "\0" followed by getAttribute() 
PASS link.title: setAttribute() to "\0" followed by IDL get 
PASS link.title: setAttribute() to null followed by getAttribute() 
PASS link.title: setAttribute() to null followed by IDL get 
PASS link.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.title: setAttribute() to object "test-toString" followed by IDL get 
PASS link.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.title: IDL set to "" should not throw 
PASS link.title: IDL set to "" followed by getAttribute() 
PASS link.title: IDL set to "" followed by IDL get 
PASS link.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.title: IDL set to undefined should not throw 
PASS link.title: IDL set to undefined followed by getAttribute() 
PASS link.title: IDL set to undefined followed by IDL get 
PASS link.title: IDL set to 7 should not throw 
PASS link.title: IDL set to 7 followed by getAttribute() 
PASS link.title: IDL set to 7 followed by IDL get 
PASS link.title: IDL set to 1.5 should not throw 
PASS link.title: IDL set to 1.5 followed by getAttribute() 
PASS link.title: IDL set to 1.5 followed by IDL get 
PASS link.title: IDL set to true should not throw 
PASS link.title: IDL set to true followed by getAttribute() 
PASS link.title: IDL set to true followed by IDL get 
PASS link.title: IDL set to false should not throw 
PASS link.title: IDL set to false followed by getAttribute() 
PASS link.title: IDL set to false followed by IDL get 
PASS link.title: IDL set to object "[object Object]" should not throw 
PASS link.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.title: IDL set to object "[object Object]" followed by IDL get 
PASS link.title: IDL set to NaN should not throw 
PASS link.title: IDL set to NaN followed by getAttribute() 
PASS link.title: IDL set to NaN followed by IDL get 
PASS link.title: IDL set to Infinity should not throw 
PASS link.title: IDL set to Infinity followed by getAttribute() 
PASS link.title: IDL set to Infinity followed by IDL get 
PASS link.title: IDL set to -Infinity should not throw 
PASS link.title: IDL set to -Infinity followed by getAttribute() 
PASS link.title: IDL set to -Infinity followed by IDL get 
PASS link.title: IDL set to "\0" should not throw 
PASS link.title: IDL set to "\0" followed by getAttribute() 
PASS link.title: IDL set to "\0" followed by IDL get 
PASS link.title: IDL set to null should not throw 
PASS link.title: IDL set to null followed by getAttribute() 
PASS link.title: IDL set to null followed by IDL get 
PASS link.title: IDL set to object "test-toString" should not throw 
PASS link.title: IDL set to object "test-toString" followed by getAttribute() 
PASS link.title: IDL set to object "test-toString" followed by IDL get 
PASS link.title: IDL set to object "test-valueOf" should not throw 
PASS link.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.title: IDL set to object "test-valueOf" followed by IDL get 
PASS link.lang: typeof IDL attribute 
PASS link.lang: IDL get with DOM attribute unset 
PASS link.lang: setAttribute() to "" followed by getAttribute() 
PASS link.lang: setAttribute() to "" followed by IDL get 
PASS link.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.lang: setAttribute() to undefined followed by getAttribute() 
PASS link.lang: setAttribute() to undefined followed by IDL get 
PASS link.lang: setAttribute() to 7 followed by getAttribute() 
PASS link.lang: setAttribute() to 7 followed by IDL get 
PASS link.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS link.lang: setAttribute() to 1.5 followed by IDL get 
PASS link.lang: setAttribute() to true followed by getAttribute() 
PASS link.lang: setAttribute() to true followed by IDL get 
PASS link.lang: setAttribute() to false followed by getAttribute() 
PASS link.lang: setAttribute() to false followed by IDL get 
PASS link.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.lang: setAttribute() to NaN followed by getAttribute() 
PASS link.lang: setAttribute() to NaN followed by IDL get 
PASS link.lang: setAttribute() to Infinity followed by getAttribute() 
PASS link.lang: setAttribute() to Infinity followed by IDL get 
PASS link.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS link.lang: setAttribute() to -Infinity followed by IDL get 
PASS link.lang: setAttribute() to "\0" followed by getAttribute() 
PASS link.lang: setAttribute() to "\0" followed by IDL get 
PASS link.lang: setAttribute() to null followed by getAttribute() 
PASS link.lang: setAttribute() to null followed by IDL get 
PASS link.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS link.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.lang: IDL set to "" should not throw 
PASS link.lang: IDL set to "" followed by getAttribute() 
PASS link.lang: IDL set to "" followed by IDL get 
PASS link.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.lang: IDL set to undefined should not throw 
PASS link.lang: IDL set to undefined followed by getAttribute() 
PASS link.lang: IDL set to undefined followed by IDL get 
PASS link.lang: IDL set to 7 should not throw 
PASS link.lang: IDL set to 7 followed by getAttribute() 
PASS link.lang: IDL set to 7 followed by IDL get 
PASS link.lang: IDL set to 1.5 should not throw 
PASS link.lang: IDL set to 1.5 followed by getAttribute() 
PASS link.lang: IDL set to 1.5 followed by IDL get 
PASS link.lang: IDL set to true should not throw 
PASS link.lang: IDL set to true followed by getAttribute() 
PASS link.lang: IDL set to true followed by IDL get 
PASS link.lang: IDL set to false should not throw 
PASS link.lang: IDL set to false followed by getAttribute() 
PASS link.lang: IDL set to false followed by IDL get 
PASS link.lang: IDL set to object "[object Object]" should not throw 
PASS link.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.lang: IDL set to object "[object Object]" followed by IDL get 
PASS link.lang: IDL set to NaN should not throw 
PASS link.lang: IDL set to NaN followed by getAttribute() 
PASS link.lang: IDL set to NaN followed by IDL get 
PASS link.lang: IDL set to Infinity should not throw 
PASS link.lang: IDL set to Infinity followed by getAttribute() 
PASS link.lang: IDL set to Infinity followed by IDL get 
PASS link.lang: IDL set to -Infinity should not throw 
PASS link.lang: IDL set to -Infinity followed by getAttribute() 
PASS link.lang: IDL set to -Infinity followed by IDL get 
PASS link.lang: IDL set to "\0" should not throw 
PASS link.lang: IDL set to "\0" followed by getAttribute() 
PASS link.lang: IDL set to "\0" followed by IDL get 
PASS link.lang: IDL set to null should not throw 
PASS link.lang: IDL set to null followed by getAttribute() 
PASS link.lang: IDL set to null followed by IDL get 
PASS link.lang: IDL set to object "test-toString" should not throw 
PASS link.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS link.lang: IDL set to object "test-toString" followed by IDL get 
PASS link.lang: IDL set to object "test-valueOf" should not throw 
PASS link.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS link.dir: typeof IDL attribute 
PASS link.dir: IDL get with DOM attribute unset 
PASS link.dir: setAttribute() to "" followed by getAttribute() 
PASS link.dir: setAttribute() to "" followed by IDL get 
PASS link.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.dir: setAttribute() to undefined followed by getAttribute() 
PASS link.dir: setAttribute() to undefined followed by IDL get 
PASS link.dir: setAttribute() to 7 followed by getAttribute() 
PASS link.dir: setAttribute() to 7 followed by IDL get 
PASS link.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS link.dir: setAttribute() to 1.5 followed by IDL get 
PASS link.dir: setAttribute() to true followed by getAttribute() 
PASS link.dir: setAttribute() to true followed by IDL get 
PASS link.dir: setAttribute() to false followed by getAttribute() 
PASS link.dir: setAttribute() to false followed by IDL get 
PASS link.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.dir: setAttribute() to NaN followed by getAttribute() 
PASS link.dir: setAttribute() to NaN followed by IDL get 
PASS link.dir: setAttribute() to Infinity followed by getAttribute() 
PASS link.dir: setAttribute() to Infinity followed by IDL get 
PASS link.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS link.dir: setAttribute() to -Infinity followed by IDL get 
PASS link.dir: setAttribute() to "\0" followed by getAttribute() 
PASS link.dir: setAttribute() to "\0" followed by IDL get 
PASS link.dir: setAttribute() to null followed by getAttribute() 
PASS link.dir: setAttribute() to null followed by IDL get 
PASS link.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS link.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS link.dir: setAttribute() to "ltr" followed by IDL get 
PASS link.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS link.dir: setAttribute() to "xltr" followed by IDL get 
PASS link.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS link.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS link.dir: setAttribute() to "tr" followed by getAttribute() 
PASS link.dir: setAttribute() to "tr" followed by IDL get 
PASS link.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS link.dir: setAttribute() to "LTR" followed by IDL get 
PASS link.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS link.dir: setAttribute() to "rtl" followed by IDL get 
PASS link.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS link.dir: setAttribute() to "xrtl" followed by IDL get 
PASS link.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS link.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS link.dir: setAttribute() to "tl" followed by getAttribute() 
PASS link.dir: setAttribute() to "tl" followed by IDL get 
PASS link.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS link.dir: setAttribute() to "RTL" followed by IDL get 
PASS link.dir: setAttribute() to "auto" followed by getAttribute() 
PASS link.dir: setAttribute() to "auto" followed by IDL get 
PASS link.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS link.dir: setAttribute() to "xauto" followed by IDL get 
PASS link.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS link.dir: setAttribute() to "auto\0" followed by IDL get 
PASS link.dir: setAttribute() to "uto" followed by getAttribute() 
PASS link.dir: setAttribute() to "uto" followed by IDL get 
PASS link.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS link.dir: setAttribute() to "AUTO" followed by IDL get 
PASS link.dir: IDL set to "" should not throw 
PASS link.dir: IDL set to "" followed by getAttribute() 
PASS link.dir: IDL set to "" followed by IDL get 
PASS link.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.dir: IDL set to undefined should not throw 
PASS link.dir: IDL set to undefined followed by getAttribute() 
PASS link.dir: IDL set to undefined followed by IDL get 
PASS link.dir: IDL set to 7 should not throw 
PASS link.dir: IDL set to 7 followed by getAttribute() 
PASS link.dir: IDL set to 7 followed by IDL get 
PASS link.dir: IDL set to 1.5 should not throw 
PASS link.dir: IDL set to 1.5 followed by getAttribute() 
PASS link.dir: IDL set to 1.5 followed by IDL get 
PASS link.dir: IDL set to true should not throw 
PASS link.dir: IDL set to true followed by getAttribute() 
PASS link.dir: IDL set to true followed by IDL get 
PASS link.dir: IDL set to false should not throw 
PASS link.dir: IDL set to false followed by getAttribute() 
PASS link.dir: IDL set to false followed by IDL get 
PASS link.dir: IDL set to object "[object Object]" should not throw 
PASS link.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.dir: IDL set to object "[object Object]" followed by IDL get 
PASS link.dir: IDL set to NaN should not throw 
PASS link.dir: IDL set to NaN followed by getAttribute() 
PASS link.dir: IDL set to NaN followed by IDL get 
PASS link.dir: IDL set to Infinity should not throw 
PASS link.dir: IDL set to Infinity followed by getAttribute() 
PASS link.dir: IDL set to Infinity followed by IDL get 
PASS link.dir: IDL set to -Infinity should not throw 
PASS link.dir: IDL set to -Infinity followed by getAttribute() 
PASS link.dir: IDL set to -Infinity followed by IDL get 
PASS link.dir: IDL set to "\0" should not throw 
PASS link.dir: IDL set to "\0" followed by getAttribute() 
PASS link.dir: IDL set to "\0" followed by IDL get 
PASS link.dir: IDL set to null should not throw 
PASS link.dir: IDL set to null followed by IDL get 
PASS link.dir: IDL set to object "test-toString" should not throw 
PASS link.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS link.dir: IDL set to object "test-toString" followed by IDL get 
PASS link.dir: IDL set to object "test-valueOf" should not throw 
PASS link.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS link.dir: IDL set to "ltr" should not throw 
PASS link.dir: IDL set to "ltr" followed by getAttribute() 
PASS link.dir: IDL set to "ltr" followed by IDL get 
PASS link.dir: IDL set to "xltr" should not throw 
PASS link.dir: IDL set to "xltr" followed by getAttribute() 
PASS link.dir: IDL set to "xltr" followed by IDL get 
PASS link.dir: IDL set to "ltr\0" should not throw 
PASS link.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS link.dir: IDL set to "ltr\0" followed by IDL get 
PASS link.dir: IDL set to "tr" should not throw 
PASS link.dir: IDL set to "tr" followed by getAttribute() 
PASS link.dir: IDL set to "tr" followed by IDL get 
PASS link.dir: IDL set to "LTR" should not throw 
PASS link.dir: IDL set to "LTR" followed by getAttribute() 
PASS link.dir: IDL set to "LTR" followed by IDL get 
PASS link.dir: IDL set to "rtl" should not throw 
PASS link.dir: IDL set to "rtl" followed by getAttribute() 
PASS link.dir: IDL set to "rtl" followed by IDL get 
PASS link.dir: IDL set to "xrtl" should not throw 
PASS link.dir: IDL set to "xrtl" followed by getAttribute() 
PASS link.dir: IDL set to "xrtl" followed by IDL get 
PASS link.dir: IDL set to "rtl\0" should not throw 
PASS link.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS link.dir: IDL set to "rtl\0" followed by IDL get 
PASS link.dir: IDL set to "tl" should not throw 
PASS link.dir: IDL set to "tl" followed by getAttribute() 
PASS link.dir: IDL set to "tl" followed by IDL get 
PASS link.dir: IDL set to "RTL" should not throw 
PASS link.dir: IDL set to "RTL" followed by getAttribute() 
PASS link.dir: IDL set to "RTL" followed by IDL get 
PASS link.dir: IDL set to "auto" should not throw 
PASS link.dir: IDL set to "auto" followed by getAttribute() 
PASS link.dir: IDL set to "auto" followed by IDL get 
PASS link.dir: IDL set to "xauto" should not throw 
PASS link.dir: IDL set to "xauto" followed by getAttribute() 
PASS link.dir: IDL set to "xauto" followed by IDL get 
PASS link.dir: IDL set to "auto\0" should not throw 
PASS link.dir: IDL set to "auto\0" followed by getAttribute() 
PASS link.dir: IDL set to "auto\0" followed by IDL get 
PASS link.dir: IDL set to "uto" should not throw 
PASS link.dir: IDL set to "uto" followed by getAttribute() 
PASS link.dir: IDL set to "uto" followed by IDL get 
PASS link.dir: IDL set to "AUTO" should not throw 
PASS link.dir: IDL set to "AUTO" followed by getAttribute() 
PASS link.dir: IDL set to "AUTO" followed by IDL get 
PASS link.className (<link class>): typeof IDL attribute 
PASS link.className (<link class>): IDL get with DOM attribute unset 
PASS link.className (<link class>): setAttribute() to "" followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to "" followed by IDL get 
PASS link.className (<link class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.className (<link class>): setAttribute() to undefined followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to undefined followed by IDL get 
PASS link.className (<link class>): setAttribute() to 7 followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to 7 followed by IDL get 
PASS link.className (<link class>): setAttribute() to 1.5 followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to 1.5 followed by IDL get 
PASS link.className (<link class>): setAttribute() to true followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to true followed by IDL get 
PASS link.className (<link class>): setAttribute() to false followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to false followed by IDL get 
PASS link.className (<link class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS link.className (<link class>): setAttribute() to NaN followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to NaN followed by IDL get 
PASS link.className (<link class>): setAttribute() to Infinity followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to Infinity followed by IDL get 
PASS link.className (<link class>): setAttribute() to -Infinity followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to -Infinity followed by IDL get 
PASS link.className (<link class>): setAttribute() to "\0" followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to "\0" followed by IDL get 
PASS link.className (<link class>): setAttribute() to null followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to null followed by IDL get 
PASS link.className (<link class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to object "test-toString" followed by IDL get 
PASS link.className (<link class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.className (<link class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.className (<link class>): IDL set to "" should not throw 
PASS link.className (<link class>): IDL set to "" followed by getAttribute() 
PASS link.className (<link class>): IDL set to "" followed by IDL get 
PASS link.className (<link class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.className (<link class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.className (<link class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.className (<link class>): IDL set to undefined should not throw 
PASS link.className (<link class>): IDL set to undefined followed by getAttribute() 
PASS link.className (<link class>): IDL set to undefined followed by IDL get 
PASS link.className (<link class>): IDL set to 7 should not throw 
PASS link.className (<link class>): IDL set to 7 followed by getAttribute() 
PASS link.className (<link class>): IDL set to 7 followed by IDL get 
PASS link.className (<link class>): IDL set to 1.5 should not throw 
PASS link.className (<link class>): IDL set to 1.5 followed by getAttribute() 
PASS link.className (<link class>): IDL set to 1.5 followed by IDL get 
PASS link.className (<link class>): IDL set to true should not throw 
PASS link.className (<link class>): IDL set to true followed by getAttribute() 
PASS link.className (<link class>): IDL set to true followed by IDL get 
PASS link.className (<link class>): IDL set to false should not throw 
PASS link.className (<link class>): IDL set to false followed by getAttribute() 
PASS link.className (<link class>): IDL set to false followed by IDL get 
PASS link.className (<link class>): IDL set to object "[object Object]" should not throw 
PASS link.className (<link class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS link.className (<link class>): IDL set to object "[object Object]" followed by IDL get 
PASS link.className (<link class>): IDL set to NaN should not throw 
PASS link.className (<link class>): IDL set to NaN followed by getAttribute() 
PASS link.className (<link class>): IDL set to NaN followed by IDL get 
PASS link.className (<link class>): IDL set to Infinity should not throw 
PASS link.className (<link class>): IDL set to Infinity followed by getAttribute() 
PASS link.className (<link class>): IDL set to Infinity followed by IDL get 
PASS link.className (<link class>): IDL set to -Infinity should not throw 
PASS link.className (<link class>): IDL set to -Infinity followed by getAttribute() 
PASS link.className (<link class>): IDL set to -Infinity followed by IDL get 
PASS link.className (<link class>): IDL set to "\0" should not throw 
PASS link.className (<link class>): IDL set to "\0" followed by getAttribute() 
PASS link.className (<link class>): IDL set to "\0" followed by IDL get 
PASS link.className (<link class>): IDL set to null should not throw 
PASS link.className (<link class>): IDL set to null followed by getAttribute() 
PASS link.className (<link class>): IDL set to null followed by IDL get 
PASS link.className (<link class>): IDL set to object "test-toString" should not throw 
PASS link.className (<link class>): IDL set to object "test-toString" followed by getAttribute() 
PASS link.className (<link class>): IDL set to object "test-toString" followed by IDL get 
PASS link.className (<link class>): IDL set to object "test-valueOf" should not throw 
PASS link.className (<link class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.className (<link class>): IDL set to object "test-valueOf" followed by IDL get 
PASS link.hidden: typeof IDL attribute 
PASS link.hidden: IDL get with DOM attribute unset 
PASS link.hidden: setAttribute() to "" followed by getAttribute() 
PASS link.hidden: setAttribute() to "" followed by IDL get 
PASS link.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS link.hidden: setAttribute() to " foo " followed by IDL get 
PASS link.hidden: setAttribute() to undefined followed by getAttribute() 
PASS link.hidden: setAttribute() to undefined followed by IDL get 
PASS link.hidden: setAttribute() to null followed by getAttribute() 
PASS link.hidden: setAttribute() to null followed by IDL get 
PASS link.hidden: setAttribute() to 7 followed by getAttribute() 
PASS link.hidden: setAttribute() to 7 followed by IDL get 
PASS link.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS link.hidden: setAttribute() to 1.5 followed by IDL get 
PASS link.hidden: setAttribute() to true followed by getAttribute() 
PASS link.hidden: setAttribute() to true followed by IDL get 
PASS link.hidden: setAttribute() to false followed by getAttribute() 
PASS link.hidden: setAttribute() to false followed by IDL get 
PASS link.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.hidden: setAttribute() to NaN followed by getAttribute() 
PASS link.hidden: setAttribute() to NaN followed by IDL get 
PASS link.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS link.hidden: setAttribute() to Infinity followed by IDL get 
PASS link.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS link.hidden: setAttribute() to -Infinity followed by IDL get 
PASS link.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS link.hidden: setAttribute() to "\0" followed by IDL get 
PASS link.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS link.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS link.hidden: setAttribute() to "hidden" followed by IDL get 
PASS link.hidden: IDL set to "" should not throw 
PASS link.hidden: IDL set to "" followed by hasAttribute() 
PASS link.hidden: IDL set to "" followed by IDL get 
PASS link.hidden: IDL set to " foo " should not throw 
PASS link.hidden: IDL set to " foo " followed by hasAttribute() 
PASS link.hidden: IDL set to " foo " followed by IDL get 
PASS link.hidden: IDL set to undefined should not throw 
PASS link.hidden: IDL set to undefined followed by hasAttribute() 
PASS link.hidden: IDL set to undefined followed by IDL get 
PASS link.hidden: IDL set to null should not throw 
PASS link.hidden: IDL set to null followed by hasAttribute() 
PASS link.hidden: IDL set to null followed by IDL get 
PASS link.hidden: IDL set to 7 should not throw 
PASS link.hidden: IDL set to 7 followed by hasAttribute() 
PASS link.hidden: IDL set to 7 followed by IDL get 
PASS link.hidden: IDL set to 1.5 should not throw 
PASS link.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS link.hidden: IDL set to 1.5 followed by IDL get 
PASS link.hidden: IDL set to true should not throw 
PASS link.hidden: IDL set to true followed by hasAttribute() 
PASS link.hidden: IDL set to true followed by IDL get 
PASS link.hidden: IDL set to false should not throw 
PASS link.hidden: IDL set to false followed by hasAttribute() 
PASS link.hidden: IDL set to false followed by IDL get 
PASS link.hidden: IDL set to object "[object Object]" should not throw 
PASS link.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS link.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS link.hidden: IDL set to NaN should not throw 
PASS link.hidden: IDL set to NaN followed by hasAttribute() 
PASS link.hidden: IDL set to NaN followed by IDL get 
PASS link.hidden: IDL set to Infinity should not throw 
PASS link.hidden: IDL set to Infinity followed by hasAttribute() 
PASS link.hidden: IDL set to Infinity followed by IDL get 
PASS link.hidden: IDL set to -Infinity should not throw 
PASS link.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS link.hidden: IDL set to -Infinity followed by IDL get 
PASS link.hidden: IDL set to "\0" should not throw 
PASS link.hidden: IDL set to "\0" followed by hasAttribute() 
PASS link.hidden: IDL set to "\0" followed by IDL get 
PASS link.hidden: IDL set to object "test-toString" should not throw 
PASS link.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS link.hidden: IDL set to object "test-toString" followed by IDL get 
PASS link.hidden: IDL set to object "test-valueOf" should not throw 
PASS link.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS link.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS link.accessKey: typeof IDL attribute 
PASS link.accessKey: IDL get with DOM attribute unset 
PASS link.accessKey: setAttribute() to "" followed by getAttribute() 
PASS link.accessKey: setAttribute() to "" followed by IDL get 
PASS link.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS link.accessKey: setAttribute() to undefined followed by IDL get 
PASS link.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS link.accessKey: setAttribute() to 7 followed by IDL get 
PASS link.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS link.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS link.accessKey: setAttribute() to true followed by getAttribute() 
PASS link.accessKey: setAttribute() to true followed by IDL get 
PASS link.accessKey: setAttribute() to false followed by getAttribute() 
PASS link.accessKey: setAttribute() to false followed by IDL get 
PASS link.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS link.accessKey: setAttribute() to NaN followed by IDL get 
PASS link.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS link.accessKey: setAttribute() to Infinity followed by IDL get 
PASS link.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS link.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS link.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS link.accessKey: setAttribute() to "\0" followed by IDL get 
PASS link.accessKey: setAttribute() to null followed by getAttribute() 
PASS link.accessKey: setAttribute() to null followed by IDL get 
PASS link.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS link.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.accessKey: IDL set to "" should not throw 
PASS link.accessKey: IDL set to "" followed by getAttribute() 
PASS link.accessKey: IDL set to "" followed by IDL get 
PASS link.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.accessKey: IDL set to undefined should not throw 
PASS link.accessKey: IDL set to undefined followed by getAttribute() 
PASS link.accessKey: IDL set to undefined followed by IDL get 
PASS link.accessKey: IDL set to 7 should not throw 
PASS link.accessKey: IDL set to 7 followed by getAttribute() 
PASS link.accessKey: IDL set to 7 followed by IDL get 
PASS link.accessKey: IDL set to 1.5 should not throw 
PASS link.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS link.accessKey: IDL set to 1.5 followed by IDL get 
PASS link.accessKey: IDL set to true should not throw 
PASS link.accessKey: IDL set to true followed by getAttribute() 
PASS link.accessKey: IDL set to true followed by IDL get 
PASS link.accessKey: IDL set to false should not throw 
PASS link.accessKey: IDL set to false followed by getAttribute() 
PASS link.accessKey: IDL set to false followed by IDL get 
PASS link.accessKey: IDL set to object "[object Object]" should not throw 
PASS link.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS link.accessKey: IDL set to NaN should not throw 
PASS link.accessKey: IDL set to NaN followed by getAttribute() 
PASS link.accessKey: IDL set to NaN followed by IDL get 
PASS link.accessKey: IDL set to Infinity should not throw 
PASS link.accessKey: IDL set to Infinity followed by getAttribute() 
PASS link.accessKey: IDL set to Infinity followed by IDL get 
PASS link.accessKey: IDL set to -Infinity should not throw 
PASS link.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS link.accessKey: IDL set to -Infinity followed by IDL get 
PASS link.accessKey: IDL set to "\0" should not throw 
PASS link.accessKey: IDL set to "\0" followed by getAttribute() 
PASS link.accessKey: IDL set to "\0" followed by IDL get 
PASS link.accessKey: IDL set to null should not throw 
PASS link.accessKey: IDL set to null followed by getAttribute() 
PASS link.accessKey: IDL set to null followed by IDL get 
PASS link.accessKey: IDL set to object "test-toString" should not throw 
PASS link.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS link.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS link.accessKey: IDL set to object "test-valueOf" should not throw 
PASS link.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS link.tabIndex: typeof IDL attribute 
PASS link.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS link.tabIndex: setAttribute() to -36 followed by IDL get 
PASS link.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS link.tabIndex: setAttribute() to -1 followed by IDL get 
PASS link.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS link.tabIndex: setAttribute() to 0 followed by IDL get 
PASS link.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS link.tabIndex: setAttribute() to 1 followed by IDL get 
PASS link.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS link.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS link.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS link.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS link.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS link.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS link.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS link.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS link.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS link.tabIndex: setAttribute() to "0" followed by IDL get 
PASS link.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS link.tabIndex: setAttribute() to "1" followed by IDL get 
PASS link.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS link.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS link.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS link.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS link.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS link.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS link.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS link.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS link.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS link.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS link.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS link.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS link.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS link.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS link.tabIndex: IDL set to -36 should not throw 
PASS link.tabIndex: IDL set to -36 followed by getAttribute() 
PASS link.tabIndex: IDL set to -36 followed by IDL get 
PASS link.tabIndex: IDL set to -1 should not throw 
PASS link.tabIndex: IDL set to -1 followed by getAttribute() 
PASS link.tabIndex: IDL set to -1 followed by IDL get 
PASS link.tabIndex: IDL set to 0 should not throw 
PASS link.tabIndex: IDL set to 0 followed by getAttribute() 
PASS link.tabIndex: IDL set to 0 followed by IDL get 
PASS link.tabIndex: IDL set to 1 should not throw 
PASS link.tabIndex: IDL set to 1 followed by getAttribute() 
PASS link.tabIndex: IDL set to 1 followed by IDL get 
PASS link.tabIndex: IDL set to 2147483647 should not throw 
PASS link.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS link.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS link.tabIndex: IDL set to -2147483648 should not throw 
PASS link.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS link.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS link.href: typeof IDL attribute 
PASS link.href: IDL get with DOM attribute unset 
PASS link.href: setAttribute() to "" followed by getAttribute() 
PASS link.href: setAttribute() to "" followed by IDL get 
PASS link.href: setAttribute() to " foo " followed by getAttribute() 
PASS link.href: setAttribute() to " foo " followed by IDL get 
PASS link.href: setAttribute() to "http://site.example/" followed by getAttribute() 
PASS link.href: setAttribute() to "http://site.example/" followed by IDL get 
PASS link.href: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
PASS link.href: setAttribute() to "//site.example/path???@#l" followed by IDL get 
PASS link.href: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS link.href: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS link.href: setAttribute() to undefined followed by getAttribute() 
PASS link.href: setAttribute() to undefined followed by IDL get 
PASS link.href: setAttribute() to 7 followed by getAttribute() 
PASS link.href: setAttribute() to 7 followed by IDL get 
PASS link.href: setAttribute() to 1.5 followed by getAttribute() 
PASS link.href: setAttribute() to 1.5 followed by IDL get 
PASS link.href: setAttribute() to true followed by getAttribute() 
PASS link.href: setAttribute() to true followed by IDL get 
PASS link.href: setAttribute() to false followed by getAttribute() 
PASS link.href: setAttribute() to false followed by IDL get 
PASS link.href: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.href: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.href: setAttribute() to NaN followed by getAttribute() 
PASS link.href: setAttribute() to NaN followed by IDL get 
PASS link.href: setAttribute() to Infinity followed by getAttribute() 
PASS link.href: setAttribute() to Infinity followed by IDL get 
PASS link.href: setAttribute() to -Infinity followed by getAttribute() 
PASS link.href: setAttribute() to -Infinity followed by IDL get 
PASS link.href: setAttribute() to "\0" followed by getAttribute() 
PASS link.href: setAttribute() to "\0" followed by IDL get 
PASS link.href: setAttribute() to null followed by getAttribute() 
PASS link.href: setAttribute() to null followed by IDL get 
PASS link.href: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.href: setAttribute() to object "test-toString" followed by IDL get 
PASS link.href: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.href: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.href: IDL set to "" should not throw 
PASS link.href: IDL set to "" followed by getAttribute() 
PASS link.href: IDL set to "" followed by IDL get 
PASS link.href: IDL set to " foo " should not throw 
PASS link.href: IDL set to " foo " followed by getAttribute() 
PASS link.href: IDL set to " foo " followed by IDL get 
PASS link.href: IDL set to "http://site.example/" should not throw 
PASS link.href: IDL set to "http://site.example/" followed by getAttribute() 
PASS link.href: IDL set to "http://site.example/" followed by IDL get 
PASS link.href: IDL set to "//site.example/path???@#l" should not throw 
PASS link.href: IDL set to "//site.example/path???@#l" followed by getAttribute() 
PASS link.href: IDL set to "//site.example/path???@#l" followed by IDL get 
PASS link.href: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
PASS link.href: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS link.href: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS link.href: IDL set to undefined should not throw 
PASS link.href: IDL set to undefined followed by getAttribute() 
PASS link.href: IDL set to undefined followed by IDL get 
PASS link.href: IDL set to 7 should not throw 
PASS link.href: IDL set to 7 followed by getAttribute() 
PASS link.href: IDL set to 7 followed by IDL get 
PASS link.href: IDL set to 1.5 should not throw 
PASS link.href: IDL set to 1.5 followed by getAttribute() 
PASS link.href: IDL set to 1.5 followed by IDL get 
PASS link.href: IDL set to true should not throw 
PASS link.href: IDL set to true followed by getAttribute() 
PASS link.href: IDL set to true followed by IDL get 
PASS link.href: IDL set to false should not throw 
PASS link.href: IDL set to false followed by getAttribute() 
PASS link.href: IDL set to false followed by IDL get 
PASS link.href: IDL set to object "[object Object]" should not throw 
PASS link.href: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.href: IDL set to object "[object Object]" followed by IDL get 
PASS link.href: IDL set to NaN should not throw 
PASS link.href: IDL set to NaN followed by getAttribute() 
PASS link.href: IDL set to NaN followed by IDL get 
PASS link.href: IDL set to Infinity should not throw 
PASS link.href: IDL set to Infinity followed by getAttribute() 
PASS link.href: IDL set to Infinity followed by IDL get 
PASS link.href: IDL set to -Infinity should not throw 
PASS link.href: IDL set to -Infinity followed by getAttribute() 
PASS link.href: IDL set to -Infinity followed by IDL get 
PASS link.href: IDL set to "\0" should not throw 
PASS link.href: IDL set to "\0" followed by getAttribute() 
PASS link.href: IDL set to "\0" followed by IDL get 
PASS link.href: IDL set to null should not throw 
PASS link.href: IDL set to null followed by getAttribute() 
PASS link.href: IDL set to null followed by IDL get 
PASS link.href: IDL set to object "test-toString" should not throw 
PASS link.href: IDL set to object "test-toString" followed by getAttribute() 
PASS link.href: IDL set to object "test-toString" followed by IDL get 
PASS link.href: IDL set to object "test-valueOf" should not throw 
PASS link.href: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.href: IDL set to object "test-valueOf" followed by IDL get 
FAIL link.crossOrigin: typeof IDL attribute assert_equals: expected "string" but got "object"
FAIL link.crossOrigin: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (object) null
PASS link.crossOrigin: setAttribute() to "" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to "" followed by IDL get 
PASS link.crossOrigin: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.crossOrigin: setAttribute() to undefined followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to undefined followed by IDL get 
PASS link.crossOrigin: setAttribute() to 7 followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to 7 followed by IDL get 
PASS link.crossOrigin: setAttribute() to 1.5 followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to 1.5 followed by IDL get 
PASS link.crossOrigin: setAttribute() to true followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to true followed by IDL get 
PASS link.crossOrigin: setAttribute() to false followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to false followed by IDL get 
PASS link.crossOrigin: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.crossOrigin: setAttribute() to NaN followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to NaN followed by IDL get 
PASS link.crossOrigin: setAttribute() to Infinity followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to Infinity followed by IDL get 
PASS link.crossOrigin: setAttribute() to -Infinity followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to -Infinity followed by IDL get 
PASS link.crossOrigin: setAttribute() to "\0" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to "\0" followed by IDL get 
PASS link.crossOrigin: setAttribute() to null followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to null followed by IDL get 
PASS link.crossOrigin: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to object "test-toString" followed by IDL get 
PASS link.crossOrigin: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.crossOrigin: setAttribute() to "anonymous" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to "anonymous" followed by IDL get 
PASS link.crossOrigin: setAttribute() to "xanonymous" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to "xanonymous" followed by IDL get 
PASS link.crossOrigin: setAttribute() to "anonymous\0" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to "anonymous\0" followed by IDL get 
PASS link.crossOrigin: setAttribute() to "nonymous" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to "nonymous" followed by IDL get 
PASS link.crossOrigin: setAttribute() to "ANONYMOUS" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to "ANONYMOUS" followed by IDL get 
PASS link.crossOrigin: setAttribute() to "use-credentials" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to "use-credentials" followed by IDL get 
PASS link.crossOrigin: setAttribute() to "xuse-credentials" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to "xuse-credentials" followed by IDL get 
PASS link.crossOrigin: setAttribute() to "use-credentials\0" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to "use-credentials\0" followed by IDL get 
PASS link.crossOrigin: setAttribute() to "se-credentials" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to "se-credentials" followed by IDL get 
PASS link.crossOrigin: setAttribute() to "USE-CREDENTIALS" followed by getAttribute() 
PASS link.crossOrigin: setAttribute() to "USE-CREDENTIALS" followed by IDL get 
PASS link.crossOrigin: IDL set to "" should not throw 
PASS link.crossOrigin: IDL set to "" followed by getAttribute() 
PASS link.crossOrigin: IDL set to "" followed by IDL get 
PASS link.crossOrigin: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.crossOrigin: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.crossOrigin: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.crossOrigin: IDL set to undefined should not throw 
FAIL link.crossOrigin: IDL set to undefined followed by getAttribute() assert_equals: expected (string) "undefined" but got (object) null
FAIL link.crossOrigin: IDL set to undefined followed by IDL get assert_equals: expected (string) "anonymous" but got (object) null
PASS link.crossOrigin: IDL set to 7 should not throw 
PASS link.crossOrigin: IDL set to 7 followed by getAttribute() 
PASS link.crossOrigin: IDL set to 7 followed by IDL get 
PASS link.crossOrigin: IDL set to 1.5 should not throw 
PASS link.crossOrigin: IDL set to 1.5 followed by getAttribute() 
PASS link.crossOrigin: IDL set to 1.5 followed by IDL get 
PASS link.crossOrigin: IDL set to true should not throw 
PASS link.crossOrigin: IDL set to true followed by getAttribute() 
PASS link.crossOrigin: IDL set to true followed by IDL get 
PASS link.crossOrigin: IDL set to false should not throw 
PASS link.crossOrigin: IDL set to false followed by getAttribute() 
PASS link.crossOrigin: IDL set to false followed by IDL get 
PASS link.crossOrigin: IDL set to object "[object Object]" should not throw 
PASS link.crossOrigin: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.crossOrigin: IDL set to object "[object Object]" followed by IDL get 
PASS link.crossOrigin: IDL set to NaN should not throw 
PASS link.crossOrigin: IDL set to NaN followed by getAttribute() 
PASS link.crossOrigin: IDL set to NaN followed by IDL get 
PASS link.crossOrigin: IDL set to Infinity should not throw 
PASS link.crossOrigin: IDL set to Infinity followed by getAttribute() 
PASS link.crossOrigin: IDL set to Infinity followed by IDL get 
PASS link.crossOrigin: IDL set to -Infinity should not throw 
PASS link.crossOrigin: IDL set to -Infinity followed by getAttribute() 
PASS link.crossOrigin: IDL set to -Infinity followed by IDL get 
PASS link.crossOrigin: IDL set to "\0" should not throw 
PASS link.crossOrigin: IDL set to "\0" followed by getAttribute() 
PASS link.crossOrigin: IDL set to "\0" followed by IDL get 
PASS link.crossOrigin: IDL set to null should not throw 
FAIL link.crossOrigin: IDL set to null followed by IDL get assert_equals: expected (string) "anonymous" but got (object) null
PASS link.crossOrigin: IDL set to object "test-toString" should not throw 
PASS link.crossOrigin: IDL set to object "test-toString" followed by getAttribute() 
PASS link.crossOrigin: IDL set to object "test-toString" followed by IDL get 
PASS link.crossOrigin: IDL set to object "test-valueOf" should not throw 
PASS link.crossOrigin: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.crossOrigin: IDL set to object "test-valueOf" followed by IDL get 
PASS link.crossOrigin: IDL set to "anonymous" should not throw 
PASS link.crossOrigin: IDL set to "anonymous" followed by getAttribute() 
PASS link.crossOrigin: IDL set to "anonymous" followed by IDL get 
PASS link.crossOrigin: IDL set to "xanonymous" should not throw 
PASS link.crossOrigin: IDL set to "xanonymous" followed by getAttribute() 
PASS link.crossOrigin: IDL set to "xanonymous" followed by IDL get 
PASS link.crossOrigin: IDL set to "anonymous\0" should not throw 
PASS link.crossOrigin: IDL set to "anonymous\0" followed by getAttribute() 
PASS link.crossOrigin: IDL set to "anonymous\0" followed by IDL get 
PASS link.crossOrigin: IDL set to "nonymous" should not throw 
PASS link.crossOrigin: IDL set to "nonymous" followed by getAttribute() 
PASS link.crossOrigin: IDL set to "nonymous" followed by IDL get 
PASS link.crossOrigin: IDL set to "ANONYMOUS" should not throw 
PASS link.crossOrigin: IDL set to "ANONYMOUS" followed by getAttribute() 
PASS link.crossOrigin: IDL set to "ANONYMOUS" followed by IDL get 
PASS link.crossOrigin: IDL set to "use-credentials" should not throw 
PASS link.crossOrigin: IDL set to "use-credentials" followed by getAttribute() 
PASS link.crossOrigin: IDL set to "use-credentials" followed by IDL get 
PASS link.crossOrigin: IDL set to "xuse-credentials" should not throw 
PASS link.crossOrigin: IDL set to "xuse-credentials" followed by getAttribute() 
PASS link.crossOrigin: IDL set to "xuse-credentials" followed by IDL get 
PASS link.crossOrigin: IDL set to "use-credentials\0" should not throw 
PASS link.crossOrigin: IDL set to "use-credentials\0" followed by getAttribute() 
PASS link.crossOrigin: IDL set to "use-credentials\0" followed by IDL get 
PASS link.crossOrigin: IDL set to "se-credentials" should not throw 
PASS link.crossOrigin: IDL set to "se-credentials" followed by getAttribute() 
PASS link.crossOrigin: IDL set to "se-credentials" followed by IDL get 
PASS link.crossOrigin: IDL set to "USE-CREDENTIALS" should not throw 
PASS link.crossOrigin: IDL set to "USE-CREDENTIALS" followed by getAttribute() 
PASS link.crossOrigin: IDL set to "USE-CREDENTIALS" followed by IDL get 
PASS link.rel: typeof IDL attribute 
PASS link.rel: IDL get with DOM attribute unset 
PASS link.rel: setAttribute() to "" followed by getAttribute() 
PASS link.rel: setAttribute() to "" followed by IDL get 
PASS link.rel: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.rel: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.rel: setAttribute() to undefined followed by getAttribute() 
PASS link.rel: setAttribute() to undefined followed by IDL get 
PASS link.rel: setAttribute() to 7 followed by getAttribute() 
PASS link.rel: setAttribute() to 7 followed by IDL get 
PASS link.rel: setAttribute() to 1.5 followed by getAttribute() 
PASS link.rel: setAttribute() to 1.5 followed by IDL get 
PASS link.rel: setAttribute() to true followed by getAttribute() 
PASS link.rel: setAttribute() to true followed by IDL get 
PASS link.rel: setAttribute() to false followed by getAttribute() 
PASS link.rel: setAttribute() to false followed by IDL get 
PASS link.rel: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.rel: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.rel: setAttribute() to NaN followed by getAttribute() 
PASS link.rel: setAttribute() to NaN followed by IDL get 
PASS link.rel: setAttribute() to Infinity followed by getAttribute() 
PASS link.rel: setAttribute() to Infinity followed by IDL get 
PASS link.rel: setAttribute() to -Infinity followed by getAttribute() 
PASS link.rel: setAttribute() to -Infinity followed by IDL get 
PASS link.rel: setAttribute() to "\0" followed by getAttribute() 
PASS link.rel: setAttribute() to "\0" followed by IDL get 
PASS link.rel: setAttribute() to null followed by getAttribute() 
PASS link.rel: setAttribute() to null followed by IDL get 
PASS link.rel: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.rel: setAttribute() to object "test-toString" followed by IDL get 
PASS link.rel: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.rel: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.rel: IDL set to "" should not throw 
PASS link.rel: IDL set to "" followed by getAttribute() 
PASS link.rel: IDL set to "" followed by IDL get 
PASS link.rel: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.rel: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.rel: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.rel: IDL set to undefined should not throw 
PASS link.rel: IDL set to undefined followed by getAttribute() 
PASS link.rel: IDL set to undefined followed by IDL get 
PASS link.rel: IDL set to 7 should not throw 
PASS link.rel: IDL set to 7 followed by getAttribute() 
PASS link.rel: IDL set to 7 followed by IDL get 
PASS link.rel: IDL set to 1.5 should not throw 
PASS link.rel: IDL set to 1.5 followed by getAttribute() 
PASS link.rel: IDL set to 1.5 followed by IDL get 
PASS link.rel: IDL set to true should not throw 
PASS link.rel: IDL set to true followed by getAttribute() 
PASS link.rel: IDL set to true followed by IDL get 
PASS link.rel: IDL set to false should not throw 
PASS link.rel: IDL set to false followed by getAttribute() 
PASS link.rel: IDL set to false followed by IDL get 
PASS link.rel: IDL set to object "[object Object]" should not throw 
PASS link.rel: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.rel: IDL set to object "[object Object]" followed by IDL get 
PASS link.rel: IDL set to NaN should not throw 
PASS link.rel: IDL set to NaN followed by getAttribute() 
PASS link.rel: IDL set to NaN followed by IDL get 
PASS link.rel: IDL set to Infinity should not throw 
PASS link.rel: IDL set to Infinity followed by getAttribute() 
PASS link.rel: IDL set to Infinity followed by IDL get 
PASS link.rel: IDL set to -Infinity should not throw 
PASS link.rel: IDL set to -Infinity followed by getAttribute() 
PASS link.rel: IDL set to -Infinity followed by IDL get 
PASS link.rel: IDL set to "\0" should not throw 
PASS link.rel: IDL set to "\0" followed by getAttribute() 
PASS link.rel: IDL set to "\0" followed by IDL get 
PASS link.rel: IDL set to null should not throw 
PASS link.rel: IDL set to null followed by getAttribute() 
PASS link.rel: IDL set to null followed by IDL get 
PASS link.rel: IDL set to object "test-toString" should not throw 
PASS link.rel: IDL set to object "test-toString" followed by getAttribute() 
PASS link.rel: IDL set to object "test-toString" followed by IDL get 
PASS link.rel: IDL set to object "test-valueOf" should not throw 
PASS link.rel: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.rel: IDL set to object "test-valueOf" followed by IDL get 
PASS link.media: typeof IDL attribute 
PASS link.media: IDL get with DOM attribute unset 
PASS link.media: setAttribute() to "" followed by getAttribute() 
PASS link.media: setAttribute() to "" followed by IDL get 
PASS link.media: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.media: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.media: setAttribute() to undefined followed by getAttribute() 
PASS link.media: setAttribute() to undefined followed by IDL get 
PASS link.media: setAttribute() to 7 followed by getAttribute() 
PASS link.media: setAttribute() to 7 followed by IDL get 
PASS link.media: setAttribute() to 1.5 followed by getAttribute() 
PASS link.media: setAttribute() to 1.5 followed by IDL get 
PASS link.media: setAttribute() to true followed by getAttribute() 
PASS link.media: setAttribute() to true followed by IDL get 
PASS link.media: setAttribute() to false followed by getAttribute() 
PASS link.media: setAttribute() to false followed by IDL get 
PASS link.media: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.media: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.media: setAttribute() to NaN followed by getAttribute() 
PASS link.media: setAttribute() to NaN followed by IDL get 
PASS link.media: setAttribute() to Infinity followed by getAttribute() 
PASS link.media: setAttribute() to Infinity followed by IDL get 
PASS link.media: setAttribute() to -Infinity followed by getAttribute() 
PASS link.media: setAttribute() to -Infinity followed by IDL get 
PASS link.media: setAttribute() to "\0" followed by getAttribute() 
PASS link.media: setAttribute() to "\0" followed by IDL get 
PASS link.media: setAttribute() to null followed by getAttribute() 
PASS link.media: setAttribute() to null followed by IDL get 
PASS link.media: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.media: setAttribute() to object "test-toString" followed by IDL get 
PASS link.media: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.media: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.media: IDL set to "" should not throw 
PASS link.media: IDL set to "" followed by getAttribute() 
PASS link.media: IDL set to "" followed by IDL get 
PASS link.media: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.media: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.media: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.media: IDL set to undefined should not throw 
PASS link.media: IDL set to undefined followed by getAttribute() 
PASS link.media: IDL set to undefined followed by IDL get 
PASS link.media: IDL set to 7 should not throw 
PASS link.media: IDL set to 7 followed by getAttribute() 
PASS link.media: IDL set to 7 followed by IDL get 
PASS link.media: IDL set to 1.5 should not throw 
PASS link.media: IDL set to 1.5 followed by getAttribute() 
PASS link.media: IDL set to 1.5 followed by IDL get 
PASS link.media: IDL set to true should not throw 
PASS link.media: IDL set to true followed by getAttribute() 
PASS link.media: IDL set to true followed by IDL get 
PASS link.media: IDL set to false should not throw 
PASS link.media: IDL set to false followed by getAttribute() 
PASS link.media: IDL set to false followed by IDL get 
PASS link.media: IDL set to object "[object Object]" should not throw 
PASS link.media: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.media: IDL set to object "[object Object]" followed by IDL get 
PASS link.media: IDL set to NaN should not throw 
PASS link.media: IDL set to NaN followed by getAttribute() 
PASS link.media: IDL set to NaN followed by IDL get 
PASS link.media: IDL set to Infinity should not throw 
PASS link.media: IDL set to Infinity followed by getAttribute() 
PASS link.media: IDL set to Infinity followed by IDL get 
PASS link.media: IDL set to -Infinity should not throw 
PASS link.media: IDL set to -Infinity followed by getAttribute() 
PASS link.media: IDL set to -Infinity followed by IDL get 
PASS link.media: IDL set to "\0" should not throw 
PASS link.media: IDL set to "\0" followed by getAttribute() 
PASS link.media: IDL set to "\0" followed by IDL get 
PASS link.media: IDL set to null should not throw 
PASS link.media: IDL set to null followed by getAttribute() 
PASS link.media: IDL set to null followed by IDL get 
PASS link.media: IDL set to object "test-toString" should not throw 
PASS link.media: IDL set to object "test-toString" followed by getAttribute() 
PASS link.media: IDL set to object "test-toString" followed by IDL get 
PASS link.media: IDL set to object "test-valueOf" should not throw 
PASS link.media: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.media: IDL set to object "test-valueOf" followed by IDL get 
PASS link.hreflang: typeof IDL attribute 
PASS link.hreflang: IDL get with DOM attribute unset 
PASS link.hreflang: setAttribute() to "" followed by getAttribute() 
PASS link.hreflang: setAttribute() to "" followed by IDL get 
PASS link.hreflang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.hreflang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.hreflang: setAttribute() to undefined followed by getAttribute() 
PASS link.hreflang: setAttribute() to undefined followed by IDL get 
PASS link.hreflang: setAttribute() to 7 followed by getAttribute() 
PASS link.hreflang: setAttribute() to 7 followed by IDL get 
PASS link.hreflang: setAttribute() to 1.5 followed by getAttribute() 
PASS link.hreflang: setAttribute() to 1.5 followed by IDL get 
PASS link.hreflang: setAttribute() to true followed by getAttribute() 
PASS link.hreflang: setAttribute() to true followed by IDL get 
PASS link.hreflang: setAttribute() to false followed by getAttribute() 
PASS link.hreflang: setAttribute() to false followed by IDL get 
PASS link.hreflang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.hreflang: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.hreflang: setAttribute() to NaN followed by getAttribute() 
PASS link.hreflang: setAttribute() to NaN followed by IDL get 
PASS link.hreflang: setAttribute() to Infinity followed by getAttribute() 
PASS link.hreflang: setAttribute() to Infinity followed by IDL get 
PASS link.hreflang: setAttribute() to -Infinity followed by getAttribute() 
PASS link.hreflang: setAttribute() to -Infinity followed by IDL get 
PASS link.hreflang: setAttribute() to "\0" followed by getAttribute() 
PASS link.hreflang: setAttribute() to "\0" followed by IDL get 
PASS link.hreflang: setAttribute() to null followed by getAttribute() 
PASS link.hreflang: setAttribute() to null followed by IDL get 
PASS link.hreflang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.hreflang: setAttribute() to object "test-toString" followed by IDL get 
PASS link.hreflang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.hreflang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.hreflang: IDL set to "" should not throw 
PASS link.hreflang: IDL set to "" followed by getAttribute() 
PASS link.hreflang: IDL set to "" followed by IDL get 
PASS link.hreflang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.hreflang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.hreflang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.hreflang: IDL set to undefined should not throw 
PASS link.hreflang: IDL set to undefined followed by getAttribute() 
PASS link.hreflang: IDL set to undefined followed by IDL get 
PASS link.hreflang: IDL set to 7 should not throw 
PASS link.hreflang: IDL set to 7 followed by getAttribute() 
PASS link.hreflang: IDL set to 7 followed by IDL get 
PASS link.hreflang: IDL set to 1.5 should not throw 
PASS link.hreflang: IDL set to 1.5 followed by getAttribute() 
PASS link.hreflang: IDL set to 1.5 followed by IDL get 
PASS link.hreflang: IDL set to true should not throw 
PASS link.hreflang: IDL set to true followed by getAttribute() 
PASS link.hreflang: IDL set to true followed by IDL get 
PASS link.hreflang: IDL set to false should not throw 
PASS link.hreflang: IDL set to false followed by getAttribute() 
PASS link.hreflang: IDL set to false followed by IDL get 
PASS link.hreflang: IDL set to object "[object Object]" should not throw 
PASS link.hreflang: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.hreflang: IDL set to object "[object Object]" followed by IDL get 
PASS link.hreflang: IDL set to NaN should not throw 
PASS link.hreflang: IDL set to NaN followed by getAttribute() 
PASS link.hreflang: IDL set to NaN followed by IDL get 
PASS link.hreflang: IDL set to Infinity should not throw 
PASS link.hreflang: IDL set to Infinity followed by getAttribute() 
PASS link.hreflang: IDL set to Infinity followed by IDL get 
PASS link.hreflang: IDL set to -Infinity should not throw 
PASS link.hreflang: IDL set to -Infinity followed by getAttribute() 
PASS link.hreflang: IDL set to -Infinity followed by IDL get 
PASS link.hreflang: IDL set to "\0" should not throw 
PASS link.hreflang: IDL set to "\0" followed by getAttribute() 
PASS link.hreflang: IDL set to "\0" followed by IDL get 
PASS link.hreflang: IDL set to null should not throw 
PASS link.hreflang: IDL set to null followed by getAttribute() 
PASS link.hreflang: IDL set to null followed by IDL get 
PASS link.hreflang: IDL set to object "test-toString" should not throw 
PASS link.hreflang: IDL set to object "test-toString" followed by getAttribute() 
PASS link.hreflang: IDL set to object "test-toString" followed by IDL get 
PASS link.hreflang: IDL set to object "test-valueOf" should not throw 
PASS link.hreflang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.hreflang: IDL set to object "test-valueOf" followed by IDL get 
PASS link.type: typeof IDL attribute 
PASS link.type: IDL get with DOM attribute unset 
PASS link.type: setAttribute() to "" followed by getAttribute() 
PASS link.type: setAttribute() to "" followed by IDL get 
PASS link.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.type: setAttribute() to undefined followed by getAttribute() 
PASS link.type: setAttribute() to undefined followed by IDL get 
PASS link.type: setAttribute() to 7 followed by getAttribute() 
PASS link.type: setAttribute() to 7 followed by IDL get 
PASS link.type: setAttribute() to 1.5 followed by getAttribute() 
PASS link.type: setAttribute() to 1.5 followed by IDL get 
PASS link.type: setAttribute() to true followed by getAttribute() 
PASS link.type: setAttribute() to true followed by IDL get 
PASS link.type: setAttribute() to false followed by getAttribute() 
PASS link.type: setAttribute() to false followed by IDL get 
PASS link.type: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.type: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.type: setAttribute() to NaN followed by getAttribute() 
PASS link.type: setAttribute() to NaN followed by IDL get 
PASS link.type: setAttribute() to Infinity followed by getAttribute() 
PASS link.type: setAttribute() to Infinity followed by IDL get 
PASS link.type: setAttribute() to -Infinity followed by getAttribute() 
PASS link.type: setAttribute() to -Infinity followed by IDL get 
PASS link.type: setAttribute() to "\0" followed by getAttribute() 
PASS link.type: setAttribute() to "\0" followed by IDL get 
PASS link.type: setAttribute() to null followed by getAttribute() 
PASS link.type: setAttribute() to null followed by IDL get 
PASS link.type: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.type: setAttribute() to object "test-toString" followed by IDL get 
PASS link.type: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.type: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.type: IDL set to "" should not throw 
PASS link.type: IDL set to "" followed by getAttribute() 
PASS link.type: IDL set to "" followed by IDL get 
PASS link.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.type: IDL set to undefined should not throw 
PASS link.type: IDL set to undefined followed by getAttribute() 
PASS link.type: IDL set to undefined followed by IDL get 
PASS link.type: IDL set to 7 should not throw 
PASS link.type: IDL set to 7 followed by getAttribute() 
PASS link.type: IDL set to 7 followed by IDL get 
PASS link.type: IDL set to 1.5 should not throw 
PASS link.type: IDL set to 1.5 followed by getAttribute() 
PASS link.type: IDL set to 1.5 followed by IDL get 
PASS link.type: IDL set to true should not throw 
PASS link.type: IDL set to true followed by getAttribute() 
PASS link.type: IDL set to true followed by IDL get 
PASS link.type: IDL set to false should not throw 
PASS link.type: IDL set to false followed by getAttribute() 
PASS link.type: IDL set to false followed by IDL get 
PASS link.type: IDL set to object "[object Object]" should not throw 
PASS link.type: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.type: IDL set to object "[object Object]" followed by IDL get 
PASS link.type: IDL set to NaN should not throw 
PASS link.type: IDL set to NaN followed by getAttribute() 
PASS link.type: IDL set to NaN followed by IDL get 
PASS link.type: IDL set to Infinity should not throw 
PASS link.type: IDL set to Infinity followed by getAttribute() 
PASS link.type: IDL set to Infinity followed by IDL get 
PASS link.type: IDL set to -Infinity should not throw 
PASS link.type: IDL set to -Infinity followed by getAttribute() 
PASS link.type: IDL set to -Infinity followed by IDL get 
PASS link.type: IDL set to "\0" should not throw 
PASS link.type: IDL set to "\0" followed by getAttribute() 
PASS link.type: IDL set to "\0" followed by IDL get 
PASS link.type: IDL set to null should not throw 
PASS link.type: IDL set to null followed by getAttribute() 
PASS link.type: IDL set to null followed by IDL get 
PASS link.type: IDL set to object "test-toString" should not throw 
PASS link.type: IDL set to object "test-toString" followed by getAttribute() 
PASS link.type: IDL set to object "test-toString" followed by IDL get 
PASS link.type: IDL set to object "test-valueOf" should not throw 
PASS link.type: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.type: IDL set to object "test-valueOf" followed by IDL get 
PASS link.charset: typeof IDL attribute 
PASS link.charset: IDL get with DOM attribute unset 
PASS link.charset: setAttribute() to "" followed by getAttribute() 
PASS link.charset: setAttribute() to "" followed by IDL get 
PASS link.charset: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.charset: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.charset: setAttribute() to undefined followed by getAttribute() 
PASS link.charset: setAttribute() to undefined followed by IDL get 
PASS link.charset: setAttribute() to 7 followed by getAttribute() 
PASS link.charset: setAttribute() to 7 followed by IDL get 
PASS link.charset: setAttribute() to 1.5 followed by getAttribute() 
PASS link.charset: setAttribute() to 1.5 followed by IDL get 
PASS link.charset: setAttribute() to true followed by getAttribute() 
PASS link.charset: setAttribute() to true followed by IDL get 
PASS link.charset: setAttribute() to false followed by getAttribute() 
PASS link.charset: setAttribute() to false followed by IDL get 
PASS link.charset: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.charset: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.charset: setAttribute() to NaN followed by getAttribute() 
PASS link.charset: setAttribute() to NaN followed by IDL get 
PASS link.charset: setAttribute() to Infinity followed by getAttribute() 
PASS link.charset: setAttribute() to Infinity followed by IDL get 
PASS link.charset: setAttribute() to -Infinity followed by getAttribute() 
PASS link.charset: setAttribute() to -Infinity followed by IDL get 
PASS link.charset: setAttribute() to "\0" followed by getAttribute() 
PASS link.charset: setAttribute() to "\0" followed by IDL get 
PASS link.charset: setAttribute() to null followed by getAttribute() 
PASS link.charset: setAttribute() to null followed by IDL get 
PASS link.charset: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.charset: setAttribute() to object "test-toString" followed by IDL get 
PASS link.charset: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.charset: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.charset: IDL set to "" should not throw 
PASS link.charset: IDL set to "" followed by getAttribute() 
PASS link.charset: IDL set to "" followed by IDL get 
PASS link.charset: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.charset: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.charset: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.charset: IDL set to undefined should not throw 
PASS link.charset: IDL set to undefined followed by getAttribute() 
PASS link.charset: IDL set to undefined followed by IDL get 
PASS link.charset: IDL set to 7 should not throw 
PASS link.charset: IDL set to 7 followed by getAttribute() 
PASS link.charset: IDL set to 7 followed by IDL get 
PASS link.charset: IDL set to 1.5 should not throw 
PASS link.charset: IDL set to 1.5 followed by getAttribute() 
PASS link.charset: IDL set to 1.5 followed by IDL get 
PASS link.charset: IDL set to true should not throw 
PASS link.charset: IDL set to true followed by getAttribute() 
PASS link.charset: IDL set to true followed by IDL get 
PASS link.charset: IDL set to false should not throw 
PASS link.charset: IDL set to false followed by getAttribute() 
PASS link.charset: IDL set to false followed by IDL get 
PASS link.charset: IDL set to object "[object Object]" should not throw 
PASS link.charset: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.charset: IDL set to object "[object Object]" followed by IDL get 
PASS link.charset: IDL set to NaN should not throw 
PASS link.charset: IDL set to NaN followed by getAttribute() 
PASS link.charset: IDL set to NaN followed by IDL get 
PASS link.charset: IDL set to Infinity should not throw 
PASS link.charset: IDL set to Infinity followed by getAttribute() 
PASS link.charset: IDL set to Infinity followed by IDL get 
PASS link.charset: IDL set to -Infinity should not throw 
PASS link.charset: IDL set to -Infinity followed by getAttribute() 
PASS link.charset: IDL set to -Infinity followed by IDL get 
PASS link.charset: IDL set to "\0" should not throw 
PASS link.charset: IDL set to "\0" followed by getAttribute() 
PASS link.charset: IDL set to "\0" followed by IDL get 
PASS link.charset: IDL set to null should not throw 
PASS link.charset: IDL set to null followed by getAttribute() 
PASS link.charset: IDL set to null followed by IDL get 
PASS link.charset: IDL set to object "test-toString" should not throw 
PASS link.charset: IDL set to object "test-toString" followed by getAttribute() 
PASS link.charset: IDL set to object "test-toString" followed by IDL get 
PASS link.charset: IDL set to object "test-valueOf" should not throw 
PASS link.charset: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.charset: IDL set to object "test-valueOf" followed by IDL get 
PASS link.rev: typeof IDL attribute 
PASS link.rev: IDL get with DOM attribute unset 
PASS link.rev: setAttribute() to "" followed by getAttribute() 
PASS link.rev: setAttribute() to "" followed by IDL get 
PASS link.rev: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.rev: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.rev: setAttribute() to undefined followed by getAttribute() 
PASS link.rev: setAttribute() to undefined followed by IDL get 
PASS link.rev: setAttribute() to 7 followed by getAttribute() 
PASS link.rev: setAttribute() to 7 followed by IDL get 
PASS link.rev: setAttribute() to 1.5 followed by getAttribute() 
PASS link.rev: setAttribute() to 1.5 followed by IDL get 
PASS link.rev: setAttribute() to true followed by getAttribute() 
PASS link.rev: setAttribute() to true followed by IDL get 
PASS link.rev: setAttribute() to false followed by getAttribute() 
PASS link.rev: setAttribute() to false followed by IDL get 
PASS link.rev: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.rev: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.rev: setAttribute() to NaN followed by getAttribute() 
PASS link.rev: setAttribute() to NaN followed by IDL get 
PASS link.rev: setAttribute() to Infinity followed by getAttribute() 
PASS link.rev: setAttribute() to Infinity followed by IDL get 
PASS link.rev: setAttribute() to -Infinity followed by getAttribute() 
PASS link.rev: setAttribute() to -Infinity followed by IDL get 
PASS link.rev: setAttribute() to "\0" followed by getAttribute() 
PASS link.rev: setAttribute() to "\0" followed by IDL get 
PASS link.rev: setAttribute() to null followed by getAttribute() 
PASS link.rev: setAttribute() to null followed by IDL get 
PASS link.rev: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.rev: setAttribute() to object "test-toString" followed by IDL get 
PASS link.rev: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.rev: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.rev: IDL set to "" should not throw 
PASS link.rev: IDL set to "" followed by getAttribute() 
PASS link.rev: IDL set to "" followed by IDL get 
PASS link.rev: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.rev: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.rev: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.rev: IDL set to undefined should not throw 
PASS link.rev: IDL set to undefined followed by getAttribute() 
PASS link.rev: IDL set to undefined followed by IDL get 
PASS link.rev: IDL set to 7 should not throw 
PASS link.rev: IDL set to 7 followed by getAttribute() 
PASS link.rev: IDL set to 7 followed by IDL get 
PASS link.rev: IDL set to 1.5 should not throw 
PASS link.rev: IDL set to 1.5 followed by getAttribute() 
PASS link.rev: IDL set to 1.5 followed by IDL get 
PASS link.rev: IDL set to true should not throw 
PASS link.rev: IDL set to true followed by getAttribute() 
PASS link.rev: IDL set to true followed by IDL get 
PASS link.rev: IDL set to false should not throw 
PASS link.rev: IDL set to false followed by getAttribute() 
PASS link.rev: IDL set to false followed by IDL get 
PASS link.rev: IDL set to object "[object Object]" should not throw 
PASS link.rev: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.rev: IDL set to object "[object Object]" followed by IDL get 
PASS link.rev: IDL set to NaN should not throw 
PASS link.rev: IDL set to NaN followed by getAttribute() 
PASS link.rev: IDL set to NaN followed by IDL get 
PASS link.rev: IDL set to Infinity should not throw 
PASS link.rev: IDL set to Infinity followed by getAttribute() 
PASS link.rev: IDL set to Infinity followed by IDL get 
PASS link.rev: IDL set to -Infinity should not throw 
PASS link.rev: IDL set to -Infinity followed by getAttribute() 
PASS link.rev: IDL set to -Infinity followed by IDL get 
PASS link.rev: IDL set to "\0" should not throw 
PASS link.rev: IDL set to "\0" followed by getAttribute() 
PASS link.rev: IDL set to "\0" followed by IDL get 
PASS link.rev: IDL set to null should not throw 
PASS link.rev: IDL set to null followed by getAttribute() 
PASS link.rev: IDL set to null followed by IDL get 
PASS link.rev: IDL set to object "test-toString" should not throw 
PASS link.rev: IDL set to object "test-toString" followed by getAttribute() 
PASS link.rev: IDL set to object "test-toString" followed by IDL get 
PASS link.rev: IDL set to object "test-valueOf" should not throw 
PASS link.rev: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.rev: IDL set to object "test-valueOf" followed by IDL get 
PASS link.target: typeof IDL attribute 
PASS link.target: IDL get with DOM attribute unset 
PASS link.target: setAttribute() to "" followed by getAttribute() 
PASS link.target: setAttribute() to "" followed by IDL get 
PASS link.target: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.target: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.target: setAttribute() to undefined followed by getAttribute() 
PASS link.target: setAttribute() to undefined followed by IDL get 
PASS link.target: setAttribute() to 7 followed by getAttribute() 
PASS link.target: setAttribute() to 7 followed by IDL get 
PASS link.target: setAttribute() to 1.5 followed by getAttribute() 
PASS link.target: setAttribute() to 1.5 followed by IDL get 
PASS link.target: setAttribute() to true followed by getAttribute() 
PASS link.target: setAttribute() to true followed by IDL get 
PASS link.target: setAttribute() to false followed by getAttribute() 
PASS link.target: setAttribute() to false followed by IDL get 
PASS link.target: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS link.target: setAttribute() to object "[object Object]" followed by IDL get 
PASS link.target: setAttribute() to NaN followed by getAttribute() 
PASS link.target: setAttribute() to NaN followed by IDL get 
PASS link.target: setAttribute() to Infinity followed by getAttribute() 
PASS link.target: setAttribute() to Infinity followed by IDL get 
PASS link.target: setAttribute() to -Infinity followed by getAttribute() 
PASS link.target: setAttribute() to -Infinity followed by IDL get 
PASS link.target: setAttribute() to "\0" followed by getAttribute() 
PASS link.target: setAttribute() to "\0" followed by IDL get 
PASS link.target: setAttribute() to null followed by getAttribute() 
PASS link.target: setAttribute() to null followed by IDL get 
PASS link.target: setAttribute() to object "test-toString" followed by getAttribute() 
PASS link.target: setAttribute() to object "test-toString" followed by IDL get 
PASS link.target: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS link.target: setAttribute() to object "test-valueOf" followed by IDL get 
PASS link.target: IDL set to "" should not throw 
PASS link.target: IDL set to "" followed by getAttribute() 
PASS link.target: IDL set to "" followed by IDL get 
PASS link.target: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS link.target: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS link.target: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS link.target: IDL set to undefined should not throw 
PASS link.target: IDL set to undefined followed by getAttribute() 
PASS link.target: IDL set to undefined followed by IDL get 
PASS link.target: IDL set to 7 should not throw 
PASS link.target: IDL set to 7 followed by getAttribute() 
PASS link.target: IDL set to 7 followed by IDL get 
PASS link.target: IDL set to 1.5 should not throw 
PASS link.target: IDL set to 1.5 followed by getAttribute() 
PASS link.target: IDL set to 1.5 followed by IDL get 
PASS link.target: IDL set to true should not throw 
PASS link.target: IDL set to true followed by getAttribute() 
PASS link.target: IDL set to true followed by IDL get 
PASS link.target: IDL set to false should not throw 
PASS link.target: IDL set to false followed by getAttribute() 
PASS link.target: IDL set to false followed by IDL get 
PASS link.target: IDL set to object "[object Object]" should not throw 
PASS link.target: IDL set to object "[object Object]" followed by getAttribute() 
PASS link.target: IDL set to object "[object Object]" followed by IDL get 
PASS link.target: IDL set to NaN should not throw 
PASS link.target: IDL set to NaN followed by getAttribute() 
PASS link.target: IDL set to NaN followed by IDL get 
PASS link.target: IDL set to Infinity should not throw 
PASS link.target: IDL set to Infinity followed by getAttribute() 
PASS link.target: IDL set to Infinity followed by IDL get 
PASS link.target: IDL set to -Infinity should not throw 
PASS link.target: IDL set to -Infinity followed by getAttribute() 
PASS link.target: IDL set to -Infinity followed by IDL get 
PASS link.target: IDL set to "\0" should not throw 
PASS link.target: IDL set to "\0" followed by getAttribute() 
PASS link.target: IDL set to "\0" followed by IDL get 
PASS link.target: IDL set to null should not throw 
PASS link.target: IDL set to null followed by getAttribute() 
PASS link.target: IDL set to null followed by IDL get 
PASS link.target: IDL set to object "test-toString" should not throw 
PASS link.target: IDL set to object "test-toString" followed by getAttribute() 
PASS link.target: IDL set to object "test-toString" followed by IDL get 
PASS link.target: IDL set to object "test-valueOf" should not throw 
PASS link.target: IDL set to object "test-valueOf" followed by getAttribute() 
PASS link.target: IDL set to object "test-valueOf" followed by IDL get 
FAIL link.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL link.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS link.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL link.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL link.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL link.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to null followed by getAttribute() 
FAIL link.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL link.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL link.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to true followed by getAttribute() 
FAIL link.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to false followed by getAttribute() 
FAIL link.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL link.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL link.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL link.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL link.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL link.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL link.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL link.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL link.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS link.itemScope: IDL set to "" should not throw 
FAIL link.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL link.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS link.itemScope: IDL set to " foo " should not throw 
PASS link.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL link.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS link.itemScope: IDL set to undefined should not throw 
FAIL link.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL link.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS link.itemScope: IDL set to null should not throw 
FAIL link.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL link.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS link.itemScope: IDL set to 7 should not throw 
PASS link.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL link.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS link.itemScope: IDL set to 1.5 should not throw 
PASS link.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL link.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS link.itemScope: IDL set to true should not throw 
PASS link.itemScope: IDL set to true followed by hasAttribute() 
PASS link.itemScope: IDL set to true followed by IDL get 
PASS link.itemScope: IDL set to false should not throw 
FAIL link.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS link.itemScope: IDL set to false followed by IDL get 
PASS link.itemScope: IDL set to object "[object Object]" should not throw 
PASS link.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL link.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS link.itemScope: IDL set to NaN should not throw 
FAIL link.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL link.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS link.itemScope: IDL set to Infinity should not throw 
PASS link.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL link.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS link.itemScope: IDL set to -Infinity should not throw 
PASS link.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL link.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS link.itemScope: IDL set to "\0" should not throw 
PASS link.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL link.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS link.itemScope: IDL set to object "test-toString" should not throw 
PASS link.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL link.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS link.itemScope: IDL set to object "test-valueOf" should not throw 
PASS link.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL link.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL link.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL link.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS link.itemId: setAttribute() to "" followed by getAttribute() 
FAIL link.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS link.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL link.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS link.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL link.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS link.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL link.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS link.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL link.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS link.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL link.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS link.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL link.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS link.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL link.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS link.itemId: setAttribute() to true followed by getAttribute() 
FAIL link.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS link.itemId: setAttribute() to false followed by getAttribute() 
FAIL link.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS link.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL link.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS link.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL link.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS link.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL link.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS link.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL link.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS link.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL link.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS link.itemId: setAttribute() to null followed by getAttribute() 
FAIL link.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS link.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL link.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS link.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL link.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS link.itemId: IDL set to "" should not throw 
FAIL link.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL link.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS link.itemId: IDL set to " foo " should not throw 
FAIL link.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL link.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS link.itemId: IDL set to "http://site.example/" should not throw 
FAIL link.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS link.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS link.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL link.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL link.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS link.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL link.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL link.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS link.itemId: IDL set to undefined should not throw 
FAIL link.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL link.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS link.itemId: IDL set to 7 should not throw 
FAIL link.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL link.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS link.itemId: IDL set to 1.5 should not throw 
FAIL link.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL link.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS link.itemId: IDL set to true should not throw 
FAIL link.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL link.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS link.itemId: IDL set to false should not throw 
FAIL link.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL link.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS link.itemId: IDL set to object "[object Object]" should not throw 
FAIL link.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL link.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS link.itemId: IDL set to NaN should not throw 
FAIL link.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL link.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS link.itemId: IDL set to Infinity should not throw 
FAIL link.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL link.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS link.itemId: IDL set to -Infinity should not throw 
FAIL link.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL link.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS link.itemId: IDL set to "\0" should not throw 
FAIL link.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL link.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS link.itemId: IDL set to null should not throw 
FAIL link.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL link.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS link.itemId: IDL set to object "test-toString" should not throw 
FAIL link.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL link.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS link.itemId: IDL set to object "test-valueOf" should not throw 
PASS link.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL link.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS meta.title: typeof IDL attribute 
PASS meta.title: IDL get with DOM attribute unset 
PASS meta.title: setAttribute() to "" followed by getAttribute() 
PASS meta.title: setAttribute() to "" followed by IDL get 
PASS meta.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.title: setAttribute() to undefined followed by getAttribute() 
PASS meta.title: setAttribute() to undefined followed by IDL get 
PASS meta.title: setAttribute() to 7 followed by getAttribute() 
PASS meta.title: setAttribute() to 7 followed by IDL get 
PASS meta.title: setAttribute() to 1.5 followed by getAttribute() 
PASS meta.title: setAttribute() to 1.5 followed by IDL get 
PASS meta.title: setAttribute() to true followed by getAttribute() 
PASS meta.title: setAttribute() to true followed by IDL get 
PASS meta.title: setAttribute() to false followed by getAttribute() 
PASS meta.title: setAttribute() to false followed by IDL get 
PASS meta.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meta.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS meta.title: setAttribute() to NaN followed by getAttribute() 
PASS meta.title: setAttribute() to NaN followed by IDL get 
PASS meta.title: setAttribute() to Infinity followed by getAttribute() 
PASS meta.title: setAttribute() to Infinity followed by IDL get 
PASS meta.title: setAttribute() to -Infinity followed by getAttribute() 
PASS meta.title: setAttribute() to -Infinity followed by IDL get 
PASS meta.title: setAttribute() to "\0" followed by getAttribute() 
PASS meta.title: setAttribute() to "\0" followed by IDL get 
PASS meta.title: setAttribute() to null followed by getAttribute() 
PASS meta.title: setAttribute() to null followed by IDL get 
PASS meta.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meta.title: setAttribute() to object "test-toString" followed by IDL get 
PASS meta.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meta.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meta.title: IDL set to "" should not throw 
PASS meta.title: IDL set to "" followed by getAttribute() 
PASS meta.title: IDL set to "" followed by IDL get 
PASS meta.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meta.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.title: IDL set to undefined should not throw 
PASS meta.title: IDL set to undefined followed by getAttribute() 
PASS meta.title: IDL set to undefined followed by IDL get 
PASS meta.title: IDL set to 7 should not throw 
PASS meta.title: IDL set to 7 followed by getAttribute() 
PASS meta.title: IDL set to 7 followed by IDL get 
PASS meta.title: IDL set to 1.5 should not throw 
PASS meta.title: IDL set to 1.5 followed by getAttribute() 
PASS meta.title: IDL set to 1.5 followed by IDL get 
PASS meta.title: IDL set to true should not throw 
PASS meta.title: IDL set to true followed by getAttribute() 
PASS meta.title: IDL set to true followed by IDL get 
PASS meta.title: IDL set to false should not throw 
PASS meta.title: IDL set to false followed by getAttribute() 
PASS meta.title: IDL set to false followed by IDL get 
PASS meta.title: IDL set to object "[object Object]" should not throw 
PASS meta.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS meta.title: IDL set to object "[object Object]" followed by IDL get 
PASS meta.title: IDL set to NaN should not throw 
PASS meta.title: IDL set to NaN followed by getAttribute() 
PASS meta.title: IDL set to NaN followed by IDL get 
PASS meta.title: IDL set to Infinity should not throw 
PASS meta.title: IDL set to Infinity followed by getAttribute() 
PASS meta.title: IDL set to Infinity followed by IDL get 
PASS meta.title: IDL set to -Infinity should not throw 
PASS meta.title: IDL set to -Infinity followed by getAttribute() 
PASS meta.title: IDL set to -Infinity followed by IDL get 
PASS meta.title: IDL set to "\0" should not throw 
PASS meta.title: IDL set to "\0" followed by getAttribute() 
PASS meta.title: IDL set to "\0" followed by IDL get 
PASS meta.title: IDL set to null should not throw 
PASS meta.title: IDL set to null followed by getAttribute() 
PASS meta.title: IDL set to null followed by IDL get 
PASS meta.title: IDL set to object "test-toString" should not throw 
PASS meta.title: IDL set to object "test-toString" followed by getAttribute() 
PASS meta.title: IDL set to object "test-toString" followed by IDL get 
PASS meta.title: IDL set to object "test-valueOf" should not throw 
PASS meta.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS meta.title: IDL set to object "test-valueOf" followed by IDL get 
PASS meta.lang: typeof IDL attribute 
PASS meta.lang: IDL get with DOM attribute unset 
PASS meta.lang: setAttribute() to "" followed by getAttribute() 
PASS meta.lang: setAttribute() to "" followed by IDL get 
PASS meta.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.lang: setAttribute() to undefined followed by getAttribute() 
PASS meta.lang: setAttribute() to undefined followed by IDL get 
PASS meta.lang: setAttribute() to 7 followed by getAttribute() 
PASS meta.lang: setAttribute() to 7 followed by IDL get 
PASS meta.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS meta.lang: setAttribute() to 1.5 followed by IDL get 
PASS meta.lang: setAttribute() to true followed by getAttribute() 
PASS meta.lang: setAttribute() to true followed by IDL get 
PASS meta.lang: setAttribute() to false followed by getAttribute() 
PASS meta.lang: setAttribute() to false followed by IDL get 
PASS meta.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meta.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS meta.lang: setAttribute() to NaN followed by getAttribute() 
PASS meta.lang: setAttribute() to NaN followed by IDL get 
PASS meta.lang: setAttribute() to Infinity followed by getAttribute() 
PASS meta.lang: setAttribute() to Infinity followed by IDL get 
PASS meta.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS meta.lang: setAttribute() to -Infinity followed by IDL get 
PASS meta.lang: setAttribute() to "\0" followed by getAttribute() 
PASS meta.lang: setAttribute() to "\0" followed by IDL get 
PASS meta.lang: setAttribute() to null followed by getAttribute() 
PASS meta.lang: setAttribute() to null followed by IDL get 
PASS meta.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meta.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS meta.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meta.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meta.lang: IDL set to "" should not throw 
PASS meta.lang: IDL set to "" followed by getAttribute() 
PASS meta.lang: IDL set to "" followed by IDL get 
PASS meta.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meta.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.lang: IDL set to undefined should not throw 
PASS meta.lang: IDL set to undefined followed by getAttribute() 
PASS meta.lang: IDL set to undefined followed by IDL get 
PASS meta.lang: IDL set to 7 should not throw 
PASS meta.lang: IDL set to 7 followed by getAttribute() 
PASS meta.lang: IDL set to 7 followed by IDL get 
PASS meta.lang: IDL set to 1.5 should not throw 
PASS meta.lang: IDL set to 1.5 followed by getAttribute() 
PASS meta.lang: IDL set to 1.5 followed by IDL get 
PASS meta.lang: IDL set to true should not throw 
PASS meta.lang: IDL set to true followed by getAttribute() 
PASS meta.lang: IDL set to true followed by IDL get 
PASS meta.lang: IDL set to false should not throw 
PASS meta.lang: IDL set to false followed by getAttribute() 
PASS meta.lang: IDL set to false followed by IDL get 
PASS meta.lang: IDL set to object "[object Object]" should not throw 
PASS meta.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS meta.lang: IDL set to object "[object Object]" followed by IDL get 
PASS meta.lang: IDL set to NaN should not throw 
PASS meta.lang: IDL set to NaN followed by getAttribute() 
PASS meta.lang: IDL set to NaN followed by IDL get 
PASS meta.lang: IDL set to Infinity should not throw 
PASS meta.lang: IDL set to Infinity followed by getAttribute() 
PASS meta.lang: IDL set to Infinity followed by IDL get 
PASS meta.lang: IDL set to -Infinity should not throw 
PASS meta.lang: IDL set to -Infinity followed by getAttribute() 
PASS meta.lang: IDL set to -Infinity followed by IDL get 
PASS meta.lang: IDL set to "\0" should not throw 
PASS meta.lang: IDL set to "\0" followed by getAttribute() 
PASS meta.lang: IDL set to "\0" followed by IDL get 
PASS meta.lang: IDL set to null should not throw 
PASS meta.lang: IDL set to null followed by getAttribute() 
PASS meta.lang: IDL set to null followed by IDL get 
PASS meta.lang: IDL set to object "test-toString" should not throw 
PASS meta.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS meta.lang: IDL set to object "test-toString" followed by IDL get 
PASS meta.lang: IDL set to object "test-valueOf" should not throw 
PASS meta.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS meta.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS meta.dir: typeof IDL attribute 
PASS meta.dir: IDL get with DOM attribute unset 
PASS meta.dir: setAttribute() to "" followed by getAttribute() 
PASS meta.dir: setAttribute() to "" followed by IDL get 
PASS meta.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.dir: setAttribute() to undefined followed by getAttribute() 
PASS meta.dir: setAttribute() to undefined followed by IDL get 
PASS meta.dir: setAttribute() to 7 followed by getAttribute() 
PASS meta.dir: setAttribute() to 7 followed by IDL get 
PASS meta.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS meta.dir: setAttribute() to 1.5 followed by IDL get 
PASS meta.dir: setAttribute() to true followed by getAttribute() 
PASS meta.dir: setAttribute() to true followed by IDL get 
PASS meta.dir: setAttribute() to false followed by getAttribute() 
PASS meta.dir: setAttribute() to false followed by IDL get 
PASS meta.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meta.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS meta.dir: setAttribute() to NaN followed by getAttribute() 
PASS meta.dir: setAttribute() to NaN followed by IDL get 
PASS meta.dir: setAttribute() to Infinity followed by getAttribute() 
PASS meta.dir: setAttribute() to Infinity followed by IDL get 
PASS meta.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS meta.dir: setAttribute() to -Infinity followed by IDL get 
PASS meta.dir: setAttribute() to "\0" followed by getAttribute() 
PASS meta.dir: setAttribute() to "\0" followed by IDL get 
PASS meta.dir: setAttribute() to null followed by getAttribute() 
PASS meta.dir: setAttribute() to null followed by IDL get 
PASS meta.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meta.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS meta.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meta.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meta.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS meta.dir: setAttribute() to "ltr" followed by IDL get 
PASS meta.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS meta.dir: setAttribute() to "xltr" followed by IDL get 
PASS meta.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS meta.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS meta.dir: setAttribute() to "tr" followed by getAttribute() 
PASS meta.dir: setAttribute() to "tr" followed by IDL get 
PASS meta.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS meta.dir: setAttribute() to "LTR" followed by IDL get 
PASS meta.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS meta.dir: setAttribute() to "rtl" followed by IDL get 
PASS meta.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS meta.dir: setAttribute() to "xrtl" followed by IDL get 
PASS meta.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS meta.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS meta.dir: setAttribute() to "tl" followed by getAttribute() 
PASS meta.dir: setAttribute() to "tl" followed by IDL get 
PASS meta.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS meta.dir: setAttribute() to "RTL" followed by IDL get 
PASS meta.dir: setAttribute() to "auto" followed by getAttribute() 
PASS meta.dir: setAttribute() to "auto" followed by IDL get 
PASS meta.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS meta.dir: setAttribute() to "xauto" followed by IDL get 
PASS meta.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS meta.dir: setAttribute() to "auto\0" followed by IDL get 
PASS meta.dir: setAttribute() to "uto" followed by getAttribute() 
PASS meta.dir: setAttribute() to "uto" followed by IDL get 
PASS meta.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS meta.dir: setAttribute() to "AUTO" followed by IDL get 
PASS meta.dir: IDL set to "" should not throw 
PASS meta.dir: IDL set to "" followed by getAttribute() 
PASS meta.dir: IDL set to "" followed by IDL get 
PASS meta.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meta.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.dir: IDL set to undefined should not throw 
PASS meta.dir: IDL set to undefined followed by getAttribute() 
PASS meta.dir: IDL set to undefined followed by IDL get 
PASS meta.dir: IDL set to 7 should not throw 
PASS meta.dir: IDL set to 7 followed by getAttribute() 
PASS meta.dir: IDL set to 7 followed by IDL get 
PASS meta.dir: IDL set to 1.5 should not throw 
PASS meta.dir: IDL set to 1.5 followed by getAttribute() 
PASS meta.dir: IDL set to 1.5 followed by IDL get 
PASS meta.dir: IDL set to true should not throw 
PASS meta.dir: IDL set to true followed by getAttribute() 
PASS meta.dir: IDL set to true followed by IDL get 
PASS meta.dir: IDL set to false should not throw 
PASS meta.dir: IDL set to false followed by getAttribute() 
PASS meta.dir: IDL set to false followed by IDL get 
PASS meta.dir: IDL set to object "[object Object]" should not throw 
PASS meta.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS meta.dir: IDL set to object "[object Object]" followed by IDL get 
PASS meta.dir: IDL set to NaN should not throw 
PASS meta.dir: IDL set to NaN followed by getAttribute() 
PASS meta.dir: IDL set to NaN followed by IDL get 
PASS meta.dir: IDL set to Infinity should not throw 
PASS meta.dir: IDL set to Infinity followed by getAttribute() 
PASS meta.dir: IDL set to Infinity followed by IDL get 
PASS meta.dir: IDL set to -Infinity should not throw 
PASS meta.dir: IDL set to -Infinity followed by getAttribute() 
PASS meta.dir: IDL set to -Infinity followed by IDL get 
PASS meta.dir: IDL set to "\0" should not throw 
PASS meta.dir: IDL set to "\0" followed by getAttribute() 
PASS meta.dir: IDL set to "\0" followed by IDL get 
PASS meta.dir: IDL set to null should not throw 
PASS meta.dir: IDL set to null followed by IDL get 
PASS meta.dir: IDL set to object "test-toString" should not throw 
PASS meta.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS meta.dir: IDL set to object "test-toString" followed by IDL get 
PASS meta.dir: IDL set to object "test-valueOf" should not throw 
PASS meta.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS meta.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS meta.dir: IDL set to "ltr" should not throw 
PASS meta.dir: IDL set to "ltr" followed by getAttribute() 
PASS meta.dir: IDL set to "ltr" followed by IDL get 
PASS meta.dir: IDL set to "xltr" should not throw 
PASS meta.dir: IDL set to "xltr" followed by getAttribute() 
PASS meta.dir: IDL set to "xltr" followed by IDL get 
PASS meta.dir: IDL set to "ltr\0" should not throw 
PASS meta.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS meta.dir: IDL set to "ltr\0" followed by IDL get 
PASS meta.dir: IDL set to "tr" should not throw 
PASS meta.dir: IDL set to "tr" followed by getAttribute() 
PASS meta.dir: IDL set to "tr" followed by IDL get 
PASS meta.dir: IDL set to "LTR" should not throw 
PASS meta.dir: IDL set to "LTR" followed by getAttribute() 
PASS meta.dir: IDL set to "LTR" followed by IDL get 
PASS meta.dir: IDL set to "rtl" should not throw 
PASS meta.dir: IDL set to "rtl" followed by getAttribute() 
PASS meta.dir: IDL set to "rtl" followed by IDL get 
PASS meta.dir: IDL set to "xrtl" should not throw 
PASS meta.dir: IDL set to "xrtl" followed by getAttribute() 
PASS meta.dir: IDL set to "xrtl" followed by IDL get 
PASS meta.dir: IDL set to "rtl\0" should not throw 
PASS meta.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS meta.dir: IDL set to "rtl\0" followed by IDL get 
PASS meta.dir: IDL set to "tl" should not throw 
PASS meta.dir: IDL set to "tl" followed by getAttribute() 
PASS meta.dir: IDL set to "tl" followed by IDL get 
PASS meta.dir: IDL set to "RTL" should not throw 
PASS meta.dir: IDL set to "RTL" followed by getAttribute() 
PASS meta.dir: IDL set to "RTL" followed by IDL get 
PASS meta.dir: IDL set to "auto" should not throw 
PASS meta.dir: IDL set to "auto" followed by getAttribute() 
PASS meta.dir: IDL set to "auto" followed by IDL get 
PASS meta.dir: IDL set to "xauto" should not throw 
PASS meta.dir: IDL set to "xauto" followed by getAttribute() 
PASS meta.dir: IDL set to "xauto" followed by IDL get 
PASS meta.dir: IDL set to "auto\0" should not throw 
PASS meta.dir: IDL set to "auto\0" followed by getAttribute() 
PASS meta.dir: IDL set to "auto\0" followed by IDL get 
PASS meta.dir: IDL set to "uto" should not throw 
PASS meta.dir: IDL set to "uto" followed by getAttribute() 
PASS meta.dir: IDL set to "uto" followed by IDL get 
PASS meta.dir: IDL set to "AUTO" should not throw 
PASS meta.dir: IDL set to "AUTO" followed by getAttribute() 
PASS meta.dir: IDL set to "AUTO" followed by IDL get 
PASS meta.className (<meta class>): typeof IDL attribute 
PASS meta.className (<meta class>): IDL get with DOM attribute unset 
PASS meta.className (<meta class>): setAttribute() to "" followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to "" followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to undefined followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to undefined followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to 7 followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to 7 followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to 1.5 followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to 1.5 followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to true followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to true followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to false followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to false followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to NaN followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to NaN followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to Infinity followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to Infinity followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to -Infinity followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to -Infinity followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to "\0" followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to "\0" followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to null followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to null followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to object "test-toString" followed by IDL get 
PASS meta.className (<meta class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meta.className (<meta class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS meta.className (<meta class>): IDL set to "" should not throw 
PASS meta.className (<meta class>): IDL set to "" followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to "" followed by IDL get 
PASS meta.className (<meta class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meta.className (<meta class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.className (<meta class>): IDL set to undefined should not throw 
PASS meta.className (<meta class>): IDL set to undefined followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to undefined followed by IDL get 
PASS meta.className (<meta class>): IDL set to 7 should not throw 
PASS meta.className (<meta class>): IDL set to 7 followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to 7 followed by IDL get 
PASS meta.className (<meta class>): IDL set to 1.5 should not throw 
PASS meta.className (<meta class>): IDL set to 1.5 followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to 1.5 followed by IDL get 
PASS meta.className (<meta class>): IDL set to true should not throw 
PASS meta.className (<meta class>): IDL set to true followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to true followed by IDL get 
PASS meta.className (<meta class>): IDL set to false should not throw 
PASS meta.className (<meta class>): IDL set to false followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to false followed by IDL get 
PASS meta.className (<meta class>): IDL set to object "[object Object]" should not throw 
PASS meta.className (<meta class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to object "[object Object]" followed by IDL get 
PASS meta.className (<meta class>): IDL set to NaN should not throw 
PASS meta.className (<meta class>): IDL set to NaN followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to NaN followed by IDL get 
PASS meta.className (<meta class>): IDL set to Infinity should not throw 
PASS meta.className (<meta class>): IDL set to Infinity followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to Infinity followed by IDL get 
PASS meta.className (<meta class>): IDL set to -Infinity should not throw 
PASS meta.className (<meta class>): IDL set to -Infinity followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to -Infinity followed by IDL get 
PASS meta.className (<meta class>): IDL set to "\0" should not throw 
PASS meta.className (<meta class>): IDL set to "\0" followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to "\0" followed by IDL get 
PASS meta.className (<meta class>): IDL set to null should not throw 
PASS meta.className (<meta class>): IDL set to null followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to null followed by IDL get 
PASS meta.className (<meta class>): IDL set to object "test-toString" should not throw 
PASS meta.className (<meta class>): IDL set to object "test-toString" followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to object "test-toString" followed by IDL get 
PASS meta.className (<meta class>): IDL set to object "test-valueOf" should not throw 
PASS meta.className (<meta class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS meta.className (<meta class>): IDL set to object "test-valueOf" followed by IDL get 
PASS meta.hidden: typeof IDL attribute 
PASS meta.hidden: IDL get with DOM attribute unset 
PASS meta.hidden: setAttribute() to "" followed by getAttribute() 
PASS meta.hidden: setAttribute() to "" followed by IDL get 
PASS meta.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS meta.hidden: setAttribute() to " foo " followed by IDL get 
PASS meta.hidden: setAttribute() to undefined followed by getAttribute() 
PASS meta.hidden: setAttribute() to undefined followed by IDL get 
PASS meta.hidden: setAttribute() to null followed by getAttribute() 
PASS meta.hidden: setAttribute() to null followed by IDL get 
PASS meta.hidden: setAttribute() to 7 followed by getAttribute() 
PASS meta.hidden: setAttribute() to 7 followed by IDL get 
PASS meta.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS meta.hidden: setAttribute() to 1.5 followed by IDL get 
PASS meta.hidden: setAttribute() to true followed by getAttribute() 
PASS meta.hidden: setAttribute() to true followed by IDL get 
PASS meta.hidden: setAttribute() to false followed by getAttribute() 
PASS meta.hidden: setAttribute() to false followed by IDL get 
PASS meta.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meta.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS meta.hidden: setAttribute() to NaN followed by getAttribute() 
PASS meta.hidden: setAttribute() to NaN followed by IDL get 
PASS meta.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS meta.hidden: setAttribute() to Infinity followed by IDL get 
PASS meta.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS meta.hidden: setAttribute() to -Infinity followed by IDL get 
PASS meta.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS meta.hidden: setAttribute() to "\0" followed by IDL get 
PASS meta.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meta.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS meta.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meta.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meta.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS meta.hidden: setAttribute() to "hidden" followed by IDL get 
PASS meta.hidden: IDL set to "" should not throw 
PASS meta.hidden: IDL set to "" followed by hasAttribute() 
PASS meta.hidden: IDL set to "" followed by IDL get 
PASS meta.hidden: IDL set to " foo " should not throw 
PASS meta.hidden: IDL set to " foo " followed by hasAttribute() 
PASS meta.hidden: IDL set to " foo " followed by IDL get 
PASS meta.hidden: IDL set to undefined should not throw 
PASS meta.hidden: IDL set to undefined followed by hasAttribute() 
PASS meta.hidden: IDL set to undefined followed by IDL get 
PASS meta.hidden: IDL set to null should not throw 
PASS meta.hidden: IDL set to null followed by hasAttribute() 
PASS meta.hidden: IDL set to null followed by IDL get 
PASS meta.hidden: IDL set to 7 should not throw 
PASS meta.hidden: IDL set to 7 followed by hasAttribute() 
PASS meta.hidden: IDL set to 7 followed by IDL get 
PASS meta.hidden: IDL set to 1.5 should not throw 
PASS meta.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS meta.hidden: IDL set to 1.5 followed by IDL get 
PASS meta.hidden: IDL set to true should not throw 
PASS meta.hidden: IDL set to true followed by hasAttribute() 
PASS meta.hidden: IDL set to true followed by IDL get 
PASS meta.hidden: IDL set to false should not throw 
PASS meta.hidden: IDL set to false followed by hasAttribute() 
PASS meta.hidden: IDL set to false followed by IDL get 
PASS meta.hidden: IDL set to object "[object Object]" should not throw 
PASS meta.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS meta.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS meta.hidden: IDL set to NaN should not throw 
PASS meta.hidden: IDL set to NaN followed by hasAttribute() 
PASS meta.hidden: IDL set to NaN followed by IDL get 
PASS meta.hidden: IDL set to Infinity should not throw 
PASS meta.hidden: IDL set to Infinity followed by hasAttribute() 
PASS meta.hidden: IDL set to Infinity followed by IDL get 
PASS meta.hidden: IDL set to -Infinity should not throw 
PASS meta.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS meta.hidden: IDL set to -Infinity followed by IDL get 
PASS meta.hidden: IDL set to "\0" should not throw 
PASS meta.hidden: IDL set to "\0" followed by hasAttribute() 
PASS meta.hidden: IDL set to "\0" followed by IDL get 
PASS meta.hidden: IDL set to object "test-toString" should not throw 
PASS meta.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS meta.hidden: IDL set to object "test-toString" followed by IDL get 
PASS meta.hidden: IDL set to object "test-valueOf" should not throw 
PASS meta.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS meta.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS meta.accessKey: typeof IDL attribute 
PASS meta.accessKey: IDL get with DOM attribute unset 
PASS meta.accessKey: setAttribute() to "" followed by getAttribute() 
PASS meta.accessKey: setAttribute() to "" followed by IDL get 
PASS meta.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS meta.accessKey: setAttribute() to undefined followed by IDL get 
PASS meta.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS meta.accessKey: setAttribute() to 7 followed by IDL get 
PASS meta.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS meta.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS meta.accessKey: setAttribute() to true followed by getAttribute() 
PASS meta.accessKey: setAttribute() to true followed by IDL get 
PASS meta.accessKey: setAttribute() to false followed by getAttribute() 
PASS meta.accessKey: setAttribute() to false followed by IDL get 
PASS meta.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meta.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS meta.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS meta.accessKey: setAttribute() to NaN followed by IDL get 
PASS meta.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS meta.accessKey: setAttribute() to Infinity followed by IDL get 
PASS meta.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS meta.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS meta.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS meta.accessKey: setAttribute() to "\0" followed by IDL get 
PASS meta.accessKey: setAttribute() to null followed by getAttribute() 
PASS meta.accessKey: setAttribute() to null followed by IDL get 
PASS meta.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meta.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS meta.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meta.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meta.accessKey: IDL set to "" should not throw 
PASS meta.accessKey: IDL set to "" followed by getAttribute() 
PASS meta.accessKey: IDL set to "" followed by IDL get 
PASS meta.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meta.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.accessKey: IDL set to undefined should not throw 
PASS meta.accessKey: IDL set to undefined followed by getAttribute() 
PASS meta.accessKey: IDL set to undefined followed by IDL get 
PASS meta.accessKey: IDL set to 7 should not throw 
PASS meta.accessKey: IDL set to 7 followed by getAttribute() 
PASS meta.accessKey: IDL set to 7 followed by IDL get 
PASS meta.accessKey: IDL set to 1.5 should not throw 
PASS meta.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS meta.accessKey: IDL set to 1.5 followed by IDL get 
PASS meta.accessKey: IDL set to true should not throw 
PASS meta.accessKey: IDL set to true followed by getAttribute() 
PASS meta.accessKey: IDL set to true followed by IDL get 
PASS meta.accessKey: IDL set to false should not throw 
PASS meta.accessKey: IDL set to false followed by getAttribute() 
PASS meta.accessKey: IDL set to false followed by IDL get 
PASS meta.accessKey: IDL set to object "[object Object]" should not throw 
PASS meta.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS meta.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS meta.accessKey: IDL set to NaN should not throw 
PASS meta.accessKey: IDL set to NaN followed by getAttribute() 
PASS meta.accessKey: IDL set to NaN followed by IDL get 
PASS meta.accessKey: IDL set to Infinity should not throw 
PASS meta.accessKey: IDL set to Infinity followed by getAttribute() 
PASS meta.accessKey: IDL set to Infinity followed by IDL get 
PASS meta.accessKey: IDL set to -Infinity should not throw 
PASS meta.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS meta.accessKey: IDL set to -Infinity followed by IDL get 
PASS meta.accessKey: IDL set to "\0" should not throw 
PASS meta.accessKey: IDL set to "\0" followed by getAttribute() 
PASS meta.accessKey: IDL set to "\0" followed by IDL get 
PASS meta.accessKey: IDL set to null should not throw 
PASS meta.accessKey: IDL set to null followed by getAttribute() 
PASS meta.accessKey: IDL set to null followed by IDL get 
PASS meta.accessKey: IDL set to object "test-toString" should not throw 
PASS meta.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS meta.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS meta.accessKey: IDL set to object "test-valueOf" should not throw 
PASS meta.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS meta.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS meta.tabIndex: typeof IDL attribute 
PASS meta.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to -36 followed by IDL get 
PASS meta.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to -1 followed by IDL get 
PASS meta.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to 0 followed by IDL get 
PASS meta.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to 1 followed by IDL get 
PASS meta.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS meta.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS meta.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS meta.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS meta.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to "0" followed by IDL get 
PASS meta.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to "1" followed by IDL get 
PASS meta.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS meta.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS meta.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS meta.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS meta.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS meta.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS meta.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS meta.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS meta.tabIndex: IDL set to -36 should not throw 
PASS meta.tabIndex: IDL set to -36 followed by getAttribute() 
PASS meta.tabIndex: IDL set to -36 followed by IDL get 
PASS meta.tabIndex: IDL set to -1 should not throw 
PASS meta.tabIndex: IDL set to -1 followed by getAttribute() 
PASS meta.tabIndex: IDL set to -1 followed by IDL get 
PASS meta.tabIndex: IDL set to 0 should not throw 
PASS meta.tabIndex: IDL set to 0 followed by getAttribute() 
PASS meta.tabIndex: IDL set to 0 followed by IDL get 
PASS meta.tabIndex: IDL set to 1 should not throw 
PASS meta.tabIndex: IDL set to 1 followed by getAttribute() 
PASS meta.tabIndex: IDL set to 1 followed by IDL get 
PASS meta.tabIndex: IDL set to 2147483647 should not throw 
PASS meta.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS meta.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS meta.tabIndex: IDL set to -2147483648 should not throw 
PASS meta.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS meta.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS meta.name: typeof IDL attribute 
PASS meta.name: IDL get with DOM attribute unset 
PASS meta.name: setAttribute() to "" followed by getAttribute() 
PASS meta.name: setAttribute() to "" followed by IDL get 
PASS meta.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.name: setAttribute() to undefined followed by getAttribute() 
PASS meta.name: setAttribute() to undefined followed by IDL get 
PASS meta.name: setAttribute() to 7 followed by getAttribute() 
PASS meta.name: setAttribute() to 7 followed by IDL get 
PASS meta.name: setAttribute() to 1.5 followed by getAttribute() 
PASS meta.name: setAttribute() to 1.5 followed by IDL get 
PASS meta.name: setAttribute() to true followed by getAttribute() 
PASS meta.name: setAttribute() to true followed by IDL get 
PASS meta.name: setAttribute() to false followed by getAttribute() 
PASS meta.name: setAttribute() to false followed by IDL get 
PASS meta.name: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meta.name: setAttribute() to object "[object Object]" followed by IDL get 
PASS meta.name: setAttribute() to NaN followed by getAttribute() 
PASS meta.name: setAttribute() to NaN followed by IDL get 
PASS meta.name: setAttribute() to Infinity followed by getAttribute() 
PASS meta.name: setAttribute() to Infinity followed by IDL get 
PASS meta.name: setAttribute() to -Infinity followed by getAttribute() 
PASS meta.name: setAttribute() to -Infinity followed by IDL get 
PASS meta.name: setAttribute() to "\0" followed by getAttribute() 
PASS meta.name: setAttribute() to "\0" followed by IDL get 
PASS meta.name: setAttribute() to null followed by getAttribute() 
PASS meta.name: setAttribute() to null followed by IDL get 
PASS meta.name: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meta.name: setAttribute() to object "test-toString" followed by IDL get 
PASS meta.name: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meta.name: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meta.name: IDL set to "" should not throw 
PASS meta.name: IDL set to "" followed by getAttribute() 
PASS meta.name: IDL set to "" followed by IDL get 
PASS meta.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meta.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.name: IDL set to undefined should not throw 
PASS meta.name: IDL set to undefined followed by getAttribute() 
PASS meta.name: IDL set to undefined followed by IDL get 
PASS meta.name: IDL set to 7 should not throw 
PASS meta.name: IDL set to 7 followed by getAttribute() 
PASS meta.name: IDL set to 7 followed by IDL get 
PASS meta.name: IDL set to 1.5 should not throw 
PASS meta.name: IDL set to 1.5 followed by getAttribute() 
PASS meta.name: IDL set to 1.5 followed by IDL get 
PASS meta.name: IDL set to true should not throw 
PASS meta.name: IDL set to true followed by getAttribute() 
PASS meta.name: IDL set to true followed by IDL get 
PASS meta.name: IDL set to false should not throw 
PASS meta.name: IDL set to false followed by getAttribute() 
PASS meta.name: IDL set to false followed by IDL get 
PASS meta.name: IDL set to object "[object Object]" should not throw 
PASS meta.name: IDL set to object "[object Object]" followed by getAttribute() 
PASS meta.name: IDL set to object "[object Object]" followed by IDL get 
PASS meta.name: IDL set to NaN should not throw 
PASS meta.name: IDL set to NaN followed by getAttribute() 
PASS meta.name: IDL set to NaN followed by IDL get 
PASS meta.name: IDL set to Infinity should not throw 
PASS meta.name: IDL set to Infinity followed by getAttribute() 
PASS meta.name: IDL set to Infinity followed by IDL get 
PASS meta.name: IDL set to -Infinity should not throw 
PASS meta.name: IDL set to -Infinity followed by getAttribute() 
PASS meta.name: IDL set to -Infinity followed by IDL get 
PASS meta.name: IDL set to "\0" should not throw 
PASS meta.name: IDL set to "\0" followed by getAttribute() 
PASS meta.name: IDL set to "\0" followed by IDL get 
PASS meta.name: IDL set to null should not throw 
PASS meta.name: IDL set to null followed by getAttribute() 
PASS meta.name: IDL set to null followed by IDL get 
PASS meta.name: IDL set to object "test-toString" should not throw 
PASS meta.name: IDL set to object "test-toString" followed by getAttribute() 
PASS meta.name: IDL set to object "test-toString" followed by IDL get 
PASS meta.name: IDL set to object "test-valueOf" should not throw 
PASS meta.name: IDL set to object "test-valueOf" followed by getAttribute() 
PASS meta.name: IDL set to object "test-valueOf" followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): typeof IDL attribute 
PASS meta.httpEquiv (<meta http-equiv>): IDL get with DOM attribute unset 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to "" followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to "" followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to undefined followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to undefined followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to 7 followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to 7 followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to 1.5 followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to 1.5 followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to true followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to true followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to false followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to false followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to object "[object Object]" followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to NaN followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to NaN followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to Infinity followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to Infinity followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to -Infinity followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to -Infinity followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to "\0" followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to "\0" followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to null followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to null followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to object "test-toString" followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to "" should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to "" followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to "" followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to undefined should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to undefined followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to undefined followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to 7 should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to 7 followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to 7 followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to 1.5 should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to 1.5 followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to 1.5 followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to true should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to true followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to true followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to false should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to false followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to false followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to object "[object Object]" should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to object "[object Object]" followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to object "[object Object]" followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to NaN should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to NaN followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to NaN followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to Infinity should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to Infinity followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to Infinity followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to -Infinity should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to -Infinity followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to -Infinity followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to "\0" should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to "\0" followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to "\0" followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to null should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to null followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to null followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to object "test-toString" should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to object "test-toString" followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to object "test-toString" followed by IDL get 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to object "test-valueOf" should not throw 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS meta.httpEquiv (<meta http-equiv>): IDL set to object "test-valueOf" followed by IDL get 
PASS meta.content: typeof IDL attribute 
PASS meta.content: IDL get with DOM attribute unset 
PASS meta.content: setAttribute() to "" followed by getAttribute() 
PASS meta.content: setAttribute() to "" followed by IDL get 
PASS meta.content: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.content: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.content: setAttribute() to undefined followed by getAttribute() 
PASS meta.content: setAttribute() to undefined followed by IDL get 
PASS meta.content: setAttribute() to 7 followed by getAttribute() 
PASS meta.content: setAttribute() to 7 followed by IDL get 
PASS meta.content: setAttribute() to 1.5 followed by getAttribute() 
PASS meta.content: setAttribute() to 1.5 followed by IDL get 
PASS meta.content: setAttribute() to true followed by getAttribute() 
PASS meta.content: setAttribute() to true followed by IDL get 
PASS meta.content: setAttribute() to false followed by getAttribute() 
PASS meta.content: setAttribute() to false followed by IDL get 
PASS meta.content: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meta.content: setAttribute() to object "[object Object]" followed by IDL get 
PASS meta.content: setAttribute() to NaN followed by getAttribute() 
PASS meta.content: setAttribute() to NaN followed by IDL get 
PASS meta.content: setAttribute() to Infinity followed by getAttribute() 
PASS meta.content: setAttribute() to Infinity followed by IDL get 
PASS meta.content: setAttribute() to -Infinity followed by getAttribute() 
PASS meta.content: setAttribute() to -Infinity followed by IDL get 
PASS meta.content: setAttribute() to "\0" followed by getAttribute() 
PASS meta.content: setAttribute() to "\0" followed by IDL get 
PASS meta.content: setAttribute() to null followed by getAttribute() 
PASS meta.content: setAttribute() to null followed by IDL get 
PASS meta.content: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meta.content: setAttribute() to object "test-toString" followed by IDL get 
PASS meta.content: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meta.content: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meta.content: IDL set to "" should not throw 
PASS meta.content: IDL set to "" followed by getAttribute() 
PASS meta.content: IDL set to "" followed by IDL get 
PASS meta.content: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meta.content: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.content: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.content: IDL set to undefined should not throw 
PASS meta.content: IDL set to undefined followed by getAttribute() 
PASS meta.content: IDL set to undefined followed by IDL get 
PASS meta.content: IDL set to 7 should not throw 
PASS meta.content: IDL set to 7 followed by getAttribute() 
PASS meta.content: IDL set to 7 followed by IDL get 
PASS meta.content: IDL set to 1.5 should not throw 
PASS meta.content: IDL set to 1.5 followed by getAttribute() 
PASS meta.content: IDL set to 1.5 followed by IDL get 
PASS meta.content: IDL set to true should not throw 
PASS meta.content: IDL set to true followed by getAttribute() 
PASS meta.content: IDL set to true followed by IDL get 
PASS meta.content: IDL set to false should not throw 
PASS meta.content: IDL set to false followed by getAttribute() 
PASS meta.content: IDL set to false followed by IDL get 
PASS meta.content: IDL set to object "[object Object]" should not throw 
PASS meta.content: IDL set to object "[object Object]" followed by getAttribute() 
PASS meta.content: IDL set to object "[object Object]" followed by IDL get 
PASS meta.content: IDL set to NaN should not throw 
PASS meta.content: IDL set to NaN followed by getAttribute() 
PASS meta.content: IDL set to NaN followed by IDL get 
PASS meta.content: IDL set to Infinity should not throw 
PASS meta.content: IDL set to Infinity followed by getAttribute() 
PASS meta.content: IDL set to Infinity followed by IDL get 
PASS meta.content: IDL set to -Infinity should not throw 
PASS meta.content: IDL set to -Infinity followed by getAttribute() 
PASS meta.content: IDL set to -Infinity followed by IDL get 
PASS meta.content: IDL set to "\0" should not throw 
PASS meta.content: IDL set to "\0" followed by getAttribute() 
PASS meta.content: IDL set to "\0" followed by IDL get 
PASS meta.content: IDL set to null should not throw 
PASS meta.content: IDL set to null followed by getAttribute() 
PASS meta.content: IDL set to null followed by IDL get 
PASS meta.content: IDL set to object "test-toString" should not throw 
PASS meta.content: IDL set to object "test-toString" followed by getAttribute() 
PASS meta.content: IDL set to object "test-toString" followed by IDL get 
PASS meta.content: IDL set to object "test-valueOf" should not throw 
PASS meta.content: IDL set to object "test-valueOf" followed by getAttribute() 
PASS meta.content: IDL set to object "test-valueOf" followed by IDL get 
PASS meta.scheme: typeof IDL attribute 
PASS meta.scheme: IDL get with DOM attribute unset 
PASS meta.scheme: setAttribute() to "" followed by getAttribute() 
PASS meta.scheme: setAttribute() to "" followed by IDL get 
PASS meta.scheme: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.scheme: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.scheme: setAttribute() to undefined followed by getAttribute() 
PASS meta.scheme: setAttribute() to undefined followed by IDL get 
PASS meta.scheme: setAttribute() to 7 followed by getAttribute() 
PASS meta.scheme: setAttribute() to 7 followed by IDL get 
PASS meta.scheme: setAttribute() to 1.5 followed by getAttribute() 
PASS meta.scheme: setAttribute() to 1.5 followed by IDL get 
PASS meta.scheme: setAttribute() to true followed by getAttribute() 
PASS meta.scheme: setAttribute() to true followed by IDL get 
PASS meta.scheme: setAttribute() to false followed by getAttribute() 
PASS meta.scheme: setAttribute() to false followed by IDL get 
PASS meta.scheme: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS meta.scheme: setAttribute() to object "[object Object]" followed by IDL get 
PASS meta.scheme: setAttribute() to NaN followed by getAttribute() 
PASS meta.scheme: setAttribute() to NaN followed by IDL get 
PASS meta.scheme: setAttribute() to Infinity followed by getAttribute() 
PASS meta.scheme: setAttribute() to Infinity followed by IDL get 
PASS meta.scheme: setAttribute() to -Infinity followed by getAttribute() 
PASS meta.scheme: setAttribute() to -Infinity followed by IDL get 
PASS meta.scheme: setAttribute() to "\0" followed by getAttribute() 
PASS meta.scheme: setAttribute() to "\0" followed by IDL get 
PASS meta.scheme: setAttribute() to null followed by getAttribute() 
PASS meta.scheme: setAttribute() to null followed by IDL get 
PASS meta.scheme: setAttribute() to object "test-toString" followed by getAttribute() 
PASS meta.scheme: setAttribute() to object "test-toString" followed by IDL get 
PASS meta.scheme: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS meta.scheme: setAttribute() to object "test-valueOf" followed by IDL get 
PASS meta.scheme: IDL set to "" should not throw 
PASS meta.scheme: IDL set to "" followed by getAttribute() 
PASS meta.scheme: IDL set to "" followed by IDL get 
PASS meta.scheme: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS meta.scheme: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS meta.scheme: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.scheme: IDL set to undefined should not throw 
PASS meta.scheme: IDL set to undefined followed by getAttribute() 
PASS meta.scheme: IDL set to undefined followed by IDL get 
PASS meta.scheme: IDL set to 7 should not throw 
PASS meta.scheme: IDL set to 7 followed by getAttribute() 
PASS meta.scheme: IDL set to 7 followed by IDL get 
PASS meta.scheme: IDL set to 1.5 should not throw 
PASS meta.scheme: IDL set to 1.5 followed by getAttribute() 
PASS meta.scheme: IDL set to 1.5 followed by IDL get 
PASS meta.scheme: IDL set to true should not throw 
PASS meta.scheme: IDL set to true followed by getAttribute() 
PASS meta.scheme: IDL set to true followed by IDL get 
PASS meta.scheme: IDL set to false should not throw 
PASS meta.scheme: IDL set to false followed by getAttribute() 
PASS meta.scheme: IDL set to false followed by IDL get 
PASS meta.scheme: IDL set to object "[object Object]" should not throw 
PASS meta.scheme: IDL set to object "[object Object]" followed by getAttribute() 
PASS meta.scheme: IDL set to object "[object Object]" followed by IDL get 
PASS meta.scheme: IDL set to NaN should not throw 
PASS meta.scheme: IDL set to NaN followed by getAttribute() 
PASS meta.scheme: IDL set to NaN followed by IDL get 
PASS meta.scheme: IDL set to Infinity should not throw 
PASS meta.scheme: IDL set to Infinity followed by getAttribute() 
PASS meta.scheme: IDL set to Infinity followed by IDL get 
PASS meta.scheme: IDL set to -Infinity should not throw 
PASS meta.scheme: IDL set to -Infinity followed by getAttribute() 
PASS meta.scheme: IDL set to -Infinity followed by IDL get 
PASS meta.scheme: IDL set to "\0" should not throw 
PASS meta.scheme: IDL set to "\0" followed by getAttribute() 
PASS meta.scheme: IDL set to "\0" followed by IDL get 
PASS meta.scheme: IDL set to null should not throw 
PASS meta.scheme: IDL set to null followed by getAttribute() 
PASS meta.scheme: IDL set to null followed by IDL get 
PASS meta.scheme: IDL set to object "test-toString" should not throw 
PASS meta.scheme: IDL set to object "test-toString" followed by getAttribute() 
PASS meta.scheme: IDL set to object "test-toString" followed by IDL get 
PASS meta.scheme: IDL set to object "test-valueOf" should not throw 
PASS meta.scheme: IDL set to object "test-valueOf" followed by getAttribute() 
PASS meta.scheme: IDL set to object "test-valueOf" followed by IDL get 
FAIL meta.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL meta.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS meta.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to null followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to true followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to false followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL meta.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS meta.itemScope: IDL set to "" should not throw 
FAIL meta.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL meta.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS meta.itemScope: IDL set to " foo " should not throw 
PASS meta.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL meta.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS meta.itemScope: IDL set to undefined should not throw 
FAIL meta.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL meta.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS meta.itemScope: IDL set to null should not throw 
FAIL meta.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL meta.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS meta.itemScope: IDL set to 7 should not throw 
PASS meta.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL meta.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS meta.itemScope: IDL set to 1.5 should not throw 
PASS meta.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL meta.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS meta.itemScope: IDL set to true should not throw 
PASS meta.itemScope: IDL set to true followed by hasAttribute() 
PASS meta.itemScope: IDL set to true followed by IDL get 
PASS meta.itemScope: IDL set to false should not throw 
FAIL meta.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS meta.itemScope: IDL set to false followed by IDL get 
PASS meta.itemScope: IDL set to object "[object Object]" should not throw 
PASS meta.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL meta.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS meta.itemScope: IDL set to NaN should not throw 
FAIL meta.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL meta.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS meta.itemScope: IDL set to Infinity should not throw 
PASS meta.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL meta.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS meta.itemScope: IDL set to -Infinity should not throw 
PASS meta.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL meta.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS meta.itemScope: IDL set to "\0" should not throw 
PASS meta.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL meta.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS meta.itemScope: IDL set to object "test-toString" should not throw 
PASS meta.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL meta.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS meta.itemScope: IDL set to object "test-valueOf" should not throw 
PASS meta.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL meta.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL meta.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL meta.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS meta.itemId: setAttribute() to "" followed by getAttribute() 
FAIL meta.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS meta.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL meta.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS meta.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL meta.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS meta.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL meta.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS meta.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL meta.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS meta.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL meta.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS meta.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL meta.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS meta.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL meta.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS meta.itemId: setAttribute() to true followed by getAttribute() 
FAIL meta.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS meta.itemId: setAttribute() to false followed by getAttribute() 
FAIL meta.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS meta.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL meta.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS meta.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL meta.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS meta.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL meta.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS meta.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL meta.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS meta.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL meta.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS meta.itemId: setAttribute() to null followed by getAttribute() 
FAIL meta.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS meta.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL meta.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS meta.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS meta.itemId: IDL set to "" should not throw 
FAIL meta.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL meta.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS meta.itemId: IDL set to " foo " should not throw 
FAIL meta.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL meta.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS meta.itemId: IDL set to "http://site.example/" should not throw 
FAIL meta.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS meta.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS meta.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL meta.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL meta.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS meta.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL meta.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL meta.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS meta.itemId: IDL set to undefined should not throw 
FAIL meta.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL meta.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS meta.itemId: IDL set to 7 should not throw 
FAIL meta.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL meta.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS meta.itemId: IDL set to 1.5 should not throw 
FAIL meta.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL meta.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS meta.itemId: IDL set to true should not throw 
FAIL meta.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL meta.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS meta.itemId: IDL set to false should not throw 
FAIL meta.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL meta.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS meta.itemId: IDL set to object "[object Object]" should not throw 
FAIL meta.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL meta.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS meta.itemId: IDL set to NaN should not throw 
FAIL meta.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL meta.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS meta.itemId: IDL set to Infinity should not throw 
FAIL meta.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL meta.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS meta.itemId: IDL set to -Infinity should not throw 
FAIL meta.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL meta.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS meta.itemId: IDL set to "\0" should not throw 
FAIL meta.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL meta.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS meta.itemId: IDL set to null should not throw 
FAIL meta.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL meta.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS meta.itemId: IDL set to object "test-toString" should not throw 
FAIL meta.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL meta.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS meta.itemId: IDL set to object "test-valueOf" should not throw 
PASS meta.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
PASS style.title: typeof IDL attribute 
PASS style.title: IDL get with DOM attribute unset 
PASS style.title: setAttribute() to "" followed by getAttribute() 
PASS style.title: setAttribute() to "" followed by IDL get 
PASS style.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.title: setAttribute() to undefined followed by getAttribute() 
PASS style.title: setAttribute() to undefined followed by IDL get 
PASS style.title: setAttribute() to 7 followed by getAttribute() 
PASS style.title: setAttribute() to 7 followed by IDL get 
PASS style.title: setAttribute() to 1.5 followed by getAttribute() 
PASS style.title: setAttribute() to 1.5 followed by IDL get 
PASS style.title: setAttribute() to true followed by getAttribute() 
PASS style.title: setAttribute() to true followed by IDL get 
PASS style.title: setAttribute() to false followed by getAttribute() 
PASS style.title: setAttribute() to false followed by IDL get 
PASS style.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS style.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS style.title: setAttribute() to NaN followed by getAttribute() 
PASS style.title: setAttribute() to NaN followed by IDL get 
PASS style.title: setAttribute() to Infinity followed by getAttribute() 
PASS style.title: setAttribute() to Infinity followed by IDL get 
PASS style.title: setAttribute() to -Infinity followed by getAttribute() 
PASS style.title: setAttribute() to -Infinity followed by IDL get 
PASS style.title: setAttribute() to "\0" followed by getAttribute() 
PASS style.title: setAttribute() to "\0" followed by IDL get 
PASS style.title: setAttribute() to null followed by getAttribute() 
PASS style.title: setAttribute() to null followed by IDL get 
PASS style.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS style.title: setAttribute() to object "test-toString" followed by IDL get 
PASS style.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS style.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS style.title: IDL set to "" should not throw 
PASS style.title: IDL set to "" followed by getAttribute() 
PASS style.title: IDL set to "" followed by IDL get 
PASS style.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS style.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.title: IDL set to undefined should not throw 
PASS style.title: IDL set to undefined followed by getAttribute() 
PASS style.title: IDL set to undefined followed by IDL get 
PASS style.title: IDL set to 7 should not throw 
PASS style.title: IDL set to 7 followed by getAttribute() 
PASS style.title: IDL set to 7 followed by IDL get 
PASS style.title: IDL set to 1.5 should not throw 
PASS style.title: IDL set to 1.5 followed by getAttribute() 
PASS style.title: IDL set to 1.5 followed by IDL get 
PASS style.title: IDL set to true should not throw 
PASS style.title: IDL set to true followed by getAttribute() 
PASS style.title: IDL set to true followed by IDL get 
PASS style.title: IDL set to false should not throw 
PASS style.title: IDL set to false followed by getAttribute() 
PASS style.title: IDL set to false followed by IDL get 
PASS style.title: IDL set to object "[object Object]" should not throw 
PASS style.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS style.title: IDL set to object "[object Object]" followed by IDL get 
PASS style.title: IDL set to NaN should not throw 
PASS style.title: IDL set to NaN followed by getAttribute() 
PASS style.title: IDL set to NaN followed by IDL get 
PASS style.title: IDL set to Infinity should not throw 
PASS style.title: IDL set to Infinity followed by getAttribute() 
PASS style.title: IDL set to Infinity followed by IDL get 
PASS style.title: IDL set to -Infinity should not throw 
PASS style.title: IDL set to -Infinity followed by getAttribute() 
PASS style.title: IDL set to -Infinity followed by IDL get 
PASS style.title: IDL set to "\0" should not throw 
PASS style.title: IDL set to "\0" followed by getAttribute() 
PASS style.title: IDL set to "\0" followed by IDL get 
PASS style.title: IDL set to null should not throw 
PASS style.title: IDL set to null followed by getAttribute() 
PASS style.title: IDL set to null followed by IDL get 
PASS style.title: IDL set to object "test-toString" should not throw 
PASS style.title: IDL set to object "test-toString" followed by getAttribute() 
PASS style.title: IDL set to object "test-toString" followed by IDL get 
PASS style.title: IDL set to object "test-valueOf" should not throw 
PASS style.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS style.title: IDL set to object "test-valueOf" followed by IDL get 
PASS style.lang: typeof IDL attribute 
PASS style.lang: IDL get with DOM attribute unset 
PASS style.lang: setAttribute() to "" followed by getAttribute() 
PASS style.lang: setAttribute() to "" followed by IDL get 
PASS style.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.lang: setAttribute() to undefined followed by getAttribute() 
PASS style.lang: setAttribute() to undefined followed by IDL get 
PASS style.lang: setAttribute() to 7 followed by getAttribute() 
PASS style.lang: setAttribute() to 7 followed by IDL get 
PASS style.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS style.lang: setAttribute() to 1.5 followed by IDL get 
PASS style.lang: setAttribute() to true followed by getAttribute() 
PASS style.lang: setAttribute() to true followed by IDL get 
PASS style.lang: setAttribute() to false followed by getAttribute() 
PASS style.lang: setAttribute() to false followed by IDL get 
PASS style.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS style.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS style.lang: setAttribute() to NaN followed by getAttribute() 
PASS style.lang: setAttribute() to NaN followed by IDL get 
PASS style.lang: setAttribute() to Infinity followed by getAttribute() 
PASS style.lang: setAttribute() to Infinity followed by IDL get 
PASS style.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS style.lang: setAttribute() to -Infinity followed by IDL get 
PASS style.lang: setAttribute() to "\0" followed by getAttribute() 
PASS style.lang: setAttribute() to "\0" followed by IDL get 
PASS style.lang: setAttribute() to null followed by getAttribute() 
PASS style.lang: setAttribute() to null followed by IDL get 
PASS style.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS style.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS style.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS style.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS style.lang: IDL set to "" should not throw 
PASS style.lang: IDL set to "" followed by getAttribute() 
PASS style.lang: IDL set to "" followed by IDL get 
PASS style.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS style.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.lang: IDL set to undefined should not throw 
PASS style.lang: IDL set to undefined followed by getAttribute() 
PASS style.lang: IDL set to undefined followed by IDL get 
PASS style.lang: IDL set to 7 should not throw 
PASS style.lang: IDL set to 7 followed by getAttribute() 
PASS style.lang: IDL set to 7 followed by IDL get 
PASS style.lang: IDL set to 1.5 should not throw 
PASS style.lang: IDL set to 1.5 followed by getAttribute() 
PASS style.lang: IDL set to 1.5 followed by IDL get 
PASS style.lang: IDL set to true should not throw 
PASS style.lang: IDL set to true followed by getAttribute() 
PASS style.lang: IDL set to true followed by IDL get 
PASS style.lang: IDL set to false should not throw 
PASS style.lang: IDL set to false followed by getAttribute() 
PASS style.lang: IDL set to false followed by IDL get 
PASS style.lang: IDL set to object "[object Object]" should not throw 
PASS style.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS style.lang: IDL set to object "[object Object]" followed by IDL get 
PASS style.lang: IDL set to NaN should not throw 
PASS style.lang: IDL set to NaN followed by getAttribute() 
PASS style.lang: IDL set to NaN followed by IDL get 
PASS style.lang: IDL set to Infinity should not throw 
PASS style.lang: IDL set to Infinity followed by getAttribute() 
PASS style.lang: IDL set to Infinity followed by IDL get 
PASS style.lang: IDL set to -Infinity should not throw 
PASS style.lang: IDL set to -Infinity followed by getAttribute() 
PASS style.lang: IDL set to -Infinity followed by IDL get 
PASS style.lang: IDL set to "\0" should not throw 
PASS style.lang: IDL set to "\0" followed by getAttribute() 
PASS style.lang: IDL set to "\0" followed by IDL get 
PASS style.lang: IDL set to null should not throw 
PASS style.lang: IDL set to null followed by getAttribute() 
PASS style.lang: IDL set to null followed by IDL get 
PASS style.lang: IDL set to object "test-toString" should not throw 
PASS style.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS style.lang: IDL set to object "test-toString" followed by IDL get 
PASS style.lang: IDL set to object "test-valueOf" should not throw 
PASS style.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS style.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS style.dir: typeof IDL attribute 
PASS style.dir: IDL get with DOM attribute unset 
PASS style.dir: setAttribute() to "" followed by getAttribute() 
PASS style.dir: setAttribute() to "" followed by IDL get 
PASS style.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.dir: setAttribute() to undefined followed by getAttribute() 
PASS style.dir: setAttribute() to undefined followed by IDL get 
PASS style.dir: setAttribute() to 7 followed by getAttribute() 
PASS style.dir: setAttribute() to 7 followed by IDL get 
PASS style.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS style.dir: setAttribute() to 1.5 followed by IDL get 
PASS style.dir: setAttribute() to true followed by getAttribute() 
PASS style.dir: setAttribute() to true followed by IDL get 
PASS style.dir: setAttribute() to false followed by getAttribute() 
PASS style.dir: setAttribute() to false followed by IDL get 
PASS style.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS style.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS style.dir: setAttribute() to NaN followed by getAttribute() 
PASS style.dir: setAttribute() to NaN followed by IDL get 
PASS style.dir: setAttribute() to Infinity followed by getAttribute() 
PASS style.dir: setAttribute() to Infinity followed by IDL get 
PASS style.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS style.dir: setAttribute() to -Infinity followed by IDL get 
PASS style.dir: setAttribute() to "\0" followed by getAttribute() 
PASS style.dir: setAttribute() to "\0" followed by IDL get 
PASS style.dir: setAttribute() to null followed by getAttribute() 
PASS style.dir: setAttribute() to null followed by IDL get 
PASS style.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS style.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS style.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS style.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS style.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS style.dir: setAttribute() to "ltr" followed by IDL get 
PASS style.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS style.dir: setAttribute() to "xltr" followed by IDL get 
PASS style.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS style.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS style.dir: setAttribute() to "tr" followed by getAttribute() 
PASS style.dir: setAttribute() to "tr" followed by IDL get 
PASS style.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS style.dir: setAttribute() to "LTR" followed by IDL get 
PASS style.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS style.dir: setAttribute() to "rtl" followed by IDL get 
PASS style.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS style.dir: setAttribute() to "xrtl" followed by IDL get 
PASS style.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS style.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS style.dir: setAttribute() to "tl" followed by getAttribute() 
PASS style.dir: setAttribute() to "tl" followed by IDL get 
PASS style.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS style.dir: setAttribute() to "RTL" followed by IDL get 
PASS style.dir: setAttribute() to "auto" followed by getAttribute() 
PASS style.dir: setAttribute() to "auto" followed by IDL get 
PASS style.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS style.dir: setAttribute() to "xauto" followed by IDL get 
PASS style.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS style.dir: setAttribute() to "auto\0" followed by IDL get 
PASS style.dir: setAttribute() to "uto" followed by getAttribute() 
PASS style.dir: setAttribute() to "uto" followed by IDL get 
PASS style.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS style.dir: setAttribute() to "AUTO" followed by IDL get 
PASS style.dir: IDL set to "" should not throw 
PASS style.dir: IDL set to "" followed by getAttribute() 
PASS style.dir: IDL set to "" followed by IDL get 
PASS style.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS style.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.dir: IDL set to undefined should not throw 
PASS style.dir: IDL set to undefined followed by getAttribute() 
PASS style.dir: IDL set to undefined followed by IDL get 
PASS style.dir: IDL set to 7 should not throw 
PASS style.dir: IDL set to 7 followed by getAttribute() 
PASS style.dir: IDL set to 7 followed by IDL get 
PASS style.dir: IDL set to 1.5 should not throw 
PASS style.dir: IDL set to 1.5 followed by getAttribute() 
PASS style.dir: IDL set to 1.5 followed by IDL get 
PASS style.dir: IDL set to true should not throw 
PASS style.dir: IDL set to true followed by getAttribute() 
PASS style.dir: IDL set to true followed by IDL get 
PASS style.dir: IDL set to false should not throw 
PASS style.dir: IDL set to false followed by getAttribute() 
PASS style.dir: IDL set to false followed by IDL get 
PASS style.dir: IDL set to object "[object Object]" should not throw 
PASS style.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS style.dir: IDL set to object "[object Object]" followed by IDL get 
PASS style.dir: IDL set to NaN should not throw 
PASS style.dir: IDL set to NaN followed by getAttribute() 
PASS style.dir: IDL set to NaN followed by IDL get 
PASS style.dir: IDL set to Infinity should not throw 
PASS style.dir: IDL set to Infinity followed by getAttribute() 
PASS style.dir: IDL set to Infinity followed by IDL get 
PASS style.dir: IDL set to -Infinity should not throw 
PASS style.dir: IDL set to -Infinity followed by getAttribute() 
PASS style.dir: IDL set to -Infinity followed by IDL get 
PASS style.dir: IDL set to "\0" should not throw 
PASS style.dir: IDL set to "\0" followed by getAttribute() 
PASS style.dir: IDL set to "\0" followed by IDL get 
PASS style.dir: IDL set to null should not throw 
PASS style.dir: IDL set to null followed by IDL get 
PASS style.dir: IDL set to object "test-toString" should not throw 
PASS style.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS style.dir: IDL set to object "test-toString" followed by IDL get 
PASS style.dir: IDL set to object "test-valueOf" should not throw 
PASS style.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS style.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS style.dir: IDL set to "ltr" should not throw 
PASS style.dir: IDL set to "ltr" followed by getAttribute() 
PASS style.dir: IDL set to "ltr" followed by IDL get 
PASS style.dir: IDL set to "xltr" should not throw 
PASS style.dir: IDL set to "xltr" followed by getAttribute() 
PASS style.dir: IDL set to "xltr" followed by IDL get 
PASS style.dir: IDL set to "ltr\0" should not throw 
PASS style.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS style.dir: IDL set to "ltr\0" followed by IDL get 
PASS style.dir: IDL set to "tr" should not throw 
PASS style.dir: IDL set to "tr" followed by getAttribute() 
PASS style.dir: IDL set to "tr" followed by IDL get 
PASS style.dir: IDL set to "LTR" should not throw 
PASS style.dir: IDL set to "LTR" followed by getAttribute() 
PASS style.dir: IDL set to "LTR" followed by IDL get 
PASS style.dir: IDL set to "rtl" should not throw 
PASS style.dir: IDL set to "rtl" followed by getAttribute() 
PASS style.dir: IDL set to "rtl" followed by IDL get 
PASS style.dir: IDL set to "xrtl" should not throw 
PASS style.dir: IDL set to "xrtl" followed by getAttribute() 
PASS style.dir: IDL set to "xrtl" followed by IDL get 
PASS style.dir: IDL set to "rtl\0" should not throw 
PASS style.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS style.dir: IDL set to "rtl\0" followed by IDL get 
PASS style.dir: IDL set to "tl" should not throw 
PASS style.dir: IDL set to "tl" followed by getAttribute() 
PASS style.dir: IDL set to "tl" followed by IDL get 
PASS style.dir: IDL set to "RTL" should not throw 
PASS style.dir: IDL set to "RTL" followed by getAttribute() 
PASS style.dir: IDL set to "RTL" followed by IDL get 
PASS style.dir: IDL set to "auto" should not throw 
PASS style.dir: IDL set to "auto" followed by getAttribute() 
PASS style.dir: IDL set to "auto" followed by IDL get 
PASS style.dir: IDL set to "xauto" should not throw 
PASS style.dir: IDL set to "xauto" followed by getAttribute() 
PASS style.dir: IDL set to "xauto" followed by IDL get 
PASS style.dir: IDL set to "auto\0" should not throw 
PASS style.dir: IDL set to "auto\0" followed by getAttribute() 
PASS style.dir: IDL set to "auto\0" followed by IDL get 
PASS style.dir: IDL set to "uto" should not throw 
PASS style.dir: IDL set to "uto" followed by getAttribute() 
PASS style.dir: IDL set to "uto" followed by IDL get 
PASS style.dir: IDL set to "AUTO" should not throw 
PASS style.dir: IDL set to "AUTO" followed by getAttribute() 
PASS style.dir: IDL set to "AUTO" followed by IDL get 
PASS style.className (<style class>): typeof IDL attribute 
PASS style.className (<style class>): IDL get with DOM attribute unset 
PASS style.className (<style class>): setAttribute() to "" followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to "" followed by IDL get 
PASS style.className (<style class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.className (<style class>): setAttribute() to undefined followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to undefined followed by IDL get 
PASS style.className (<style class>): setAttribute() to 7 followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to 7 followed by IDL get 
PASS style.className (<style class>): setAttribute() to 1.5 followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to 1.5 followed by IDL get 
PASS style.className (<style class>): setAttribute() to true followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to true followed by IDL get 
PASS style.className (<style class>): setAttribute() to false followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to false followed by IDL get 
PASS style.className (<style class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS style.className (<style class>): setAttribute() to NaN followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to NaN followed by IDL get 
PASS style.className (<style class>): setAttribute() to Infinity followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to Infinity followed by IDL get 
PASS style.className (<style class>): setAttribute() to -Infinity followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to -Infinity followed by IDL get 
PASS style.className (<style class>): setAttribute() to "\0" followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to "\0" followed by IDL get 
PASS style.className (<style class>): setAttribute() to null followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to null followed by IDL get 
PASS style.className (<style class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to object "test-toString" followed by IDL get 
PASS style.className (<style class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS style.className (<style class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS style.className (<style class>): IDL set to "" should not throw 
PASS style.className (<style class>): IDL set to "" followed by getAttribute() 
PASS style.className (<style class>): IDL set to "" followed by IDL get 
PASS style.className (<style class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS style.className (<style class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.className (<style class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.className (<style class>): IDL set to undefined should not throw 
PASS style.className (<style class>): IDL set to undefined followed by getAttribute() 
PASS style.className (<style class>): IDL set to undefined followed by IDL get 
PASS style.className (<style class>): IDL set to 7 should not throw 
PASS style.className (<style class>): IDL set to 7 followed by getAttribute() 
PASS style.className (<style class>): IDL set to 7 followed by IDL get 
PASS style.className (<style class>): IDL set to 1.5 should not throw 
PASS style.className (<style class>): IDL set to 1.5 followed by getAttribute() 
PASS style.className (<style class>): IDL set to 1.5 followed by IDL get 
PASS style.className (<style class>): IDL set to true should not throw 
PASS style.className (<style class>): IDL set to true followed by getAttribute() 
PASS style.className (<style class>): IDL set to true followed by IDL get 
PASS style.className (<style class>): IDL set to false should not throw 
PASS style.className (<style class>): IDL set to false followed by getAttribute() 
PASS style.className (<style class>): IDL set to false followed by IDL get 
PASS style.className (<style class>): IDL set to object "[object Object]" should not throw 
PASS style.className (<style class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS style.className (<style class>): IDL set to object "[object Object]" followed by IDL get 
PASS style.className (<style class>): IDL set to NaN should not throw 
PASS style.className (<style class>): IDL set to NaN followed by getAttribute() 
PASS style.className (<style class>): IDL set to NaN followed by IDL get 
PASS style.className (<style class>): IDL set to Infinity should not throw 
PASS style.className (<style class>): IDL set to Infinity followed by getAttribute() 
PASS style.className (<style class>): IDL set to Infinity followed by IDL get 
PASS style.className (<style class>): IDL set to -Infinity should not throw 
PASS style.className (<style class>): IDL set to -Infinity followed by getAttribute() 
PASS style.className (<style class>): IDL set to -Infinity followed by IDL get 
PASS style.className (<style class>): IDL set to "\0" should not throw 
PASS style.className (<style class>): IDL set to "\0" followed by getAttribute() 
PASS style.className (<style class>): IDL set to "\0" followed by IDL get 
PASS style.className (<style class>): IDL set to null should not throw 
PASS style.className (<style class>): IDL set to null followed by getAttribute() 
PASS style.className (<style class>): IDL set to null followed by IDL get 
PASS style.className (<style class>): IDL set to object "test-toString" should not throw 
PASS style.className (<style class>): IDL set to object "test-toString" followed by getAttribute() 
PASS style.className (<style class>): IDL set to object "test-toString" followed by IDL get 
PASS style.className (<style class>): IDL set to object "test-valueOf" should not throw 
PASS style.className (<style class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS style.className (<style class>): IDL set to object "test-valueOf" followed by IDL get 
PASS style.hidden: typeof IDL attribute 
PASS style.hidden: IDL get with DOM attribute unset 
PASS style.hidden: setAttribute() to "" followed by getAttribute() 
PASS style.hidden: setAttribute() to "" followed by IDL get 
PASS style.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS style.hidden: setAttribute() to " foo " followed by IDL get 
PASS style.hidden: setAttribute() to undefined followed by getAttribute() 
PASS style.hidden: setAttribute() to undefined followed by IDL get 
PASS style.hidden: setAttribute() to null followed by getAttribute() 
PASS style.hidden: setAttribute() to null followed by IDL get 
PASS style.hidden: setAttribute() to 7 followed by getAttribute() 
PASS style.hidden: setAttribute() to 7 followed by IDL get 
PASS style.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS style.hidden: setAttribute() to 1.5 followed by IDL get 
PASS style.hidden: setAttribute() to true followed by getAttribute() 
PASS style.hidden: setAttribute() to true followed by IDL get 
PASS style.hidden: setAttribute() to false followed by getAttribute() 
PASS style.hidden: setAttribute() to false followed by IDL get 
PASS style.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS style.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS style.hidden: setAttribute() to NaN followed by getAttribute() 
PASS style.hidden: setAttribute() to NaN followed by IDL get 
PASS style.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS style.hidden: setAttribute() to Infinity followed by IDL get 
PASS style.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS style.hidden: setAttribute() to -Infinity followed by IDL get 
PASS style.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS style.hidden: setAttribute() to "\0" followed by IDL get 
PASS style.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS style.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS style.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS style.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS style.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS style.hidden: setAttribute() to "hidden" followed by IDL get 
PASS style.hidden: IDL set to "" should not throw 
PASS style.hidden: IDL set to "" followed by hasAttribute() 
PASS style.hidden: IDL set to "" followed by IDL get 
PASS style.hidden: IDL set to " foo " should not throw 
PASS style.hidden: IDL set to " foo " followed by hasAttribute() 
PASS style.hidden: IDL set to " foo " followed by IDL get 
PASS style.hidden: IDL set to undefined should not throw 
PASS style.hidden: IDL set to undefined followed by hasAttribute() 
PASS style.hidden: IDL set to undefined followed by IDL get 
PASS style.hidden: IDL set to null should not throw 
PASS style.hidden: IDL set to null followed by hasAttribute() 
PASS style.hidden: IDL set to null followed by IDL get 
PASS style.hidden: IDL set to 7 should not throw 
PASS style.hidden: IDL set to 7 followed by hasAttribute() 
PASS style.hidden: IDL set to 7 followed by IDL get 
PASS style.hidden: IDL set to 1.5 should not throw 
PASS style.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS style.hidden: IDL set to 1.5 followed by IDL get 
PASS style.hidden: IDL set to true should not throw 
PASS style.hidden: IDL set to true followed by hasAttribute() 
PASS style.hidden: IDL set to true followed by IDL get 
PASS style.hidden: IDL set to false should not throw 
PASS style.hidden: IDL set to false followed by hasAttribute() 
PASS style.hidden: IDL set to false followed by IDL get 
PASS style.hidden: IDL set to object "[object Object]" should not throw 
PASS style.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS style.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS style.hidden: IDL set to NaN should not throw 
PASS style.hidden: IDL set to NaN followed by hasAttribute() 
PASS style.hidden: IDL set to NaN followed by IDL get 
PASS style.hidden: IDL set to Infinity should not throw 
PASS style.hidden: IDL set to Infinity followed by hasAttribute() 
PASS style.hidden: IDL set to Infinity followed by IDL get 
PASS style.hidden: IDL set to -Infinity should not throw 
PASS style.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS style.hidden: IDL set to -Infinity followed by IDL get 
PASS style.hidden: IDL set to "\0" should not throw 
PASS style.hidden: IDL set to "\0" followed by hasAttribute() 
PASS style.hidden: IDL set to "\0" followed by IDL get 
PASS style.hidden: IDL set to object "test-toString" should not throw 
PASS style.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS style.hidden: IDL set to object "test-toString" followed by IDL get 
PASS style.hidden: IDL set to object "test-valueOf" should not throw 
PASS style.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS style.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS style.accessKey: typeof IDL attribute 
PASS style.accessKey: IDL get with DOM attribute unset 
PASS style.accessKey: setAttribute() to "" followed by getAttribute() 
PASS style.accessKey: setAttribute() to "" followed by IDL get 
PASS style.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS style.accessKey: setAttribute() to undefined followed by IDL get 
PASS style.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS style.accessKey: setAttribute() to 7 followed by IDL get 
PASS style.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS style.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS style.accessKey: setAttribute() to true followed by getAttribute() 
PASS style.accessKey: setAttribute() to true followed by IDL get 
PASS style.accessKey: setAttribute() to false followed by getAttribute() 
PASS style.accessKey: setAttribute() to false followed by IDL get 
PASS style.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS style.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS style.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS style.accessKey: setAttribute() to NaN followed by IDL get 
PASS style.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS style.accessKey: setAttribute() to Infinity followed by IDL get 
PASS style.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS style.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS style.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS style.accessKey: setAttribute() to "\0" followed by IDL get 
PASS style.accessKey: setAttribute() to null followed by getAttribute() 
PASS style.accessKey: setAttribute() to null followed by IDL get 
PASS style.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS style.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS style.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS style.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS style.accessKey: IDL set to "" should not throw 
PASS style.accessKey: IDL set to "" followed by getAttribute() 
PASS style.accessKey: IDL set to "" followed by IDL get 
PASS style.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS style.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.accessKey: IDL set to undefined should not throw 
PASS style.accessKey: IDL set to undefined followed by getAttribute() 
PASS style.accessKey: IDL set to undefined followed by IDL get 
PASS style.accessKey: IDL set to 7 should not throw 
PASS style.accessKey: IDL set to 7 followed by getAttribute() 
PASS style.accessKey: IDL set to 7 followed by IDL get 
PASS style.accessKey: IDL set to 1.5 should not throw 
PASS style.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS style.accessKey: IDL set to 1.5 followed by IDL get 
PASS style.accessKey: IDL set to true should not throw 
PASS style.accessKey: IDL set to true followed by getAttribute() 
PASS style.accessKey: IDL set to true followed by IDL get 
PASS style.accessKey: IDL set to false should not throw 
PASS style.accessKey: IDL set to false followed by getAttribute() 
PASS style.accessKey: IDL set to false followed by IDL get 
PASS style.accessKey: IDL set to object "[object Object]" should not throw 
PASS style.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS style.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS style.accessKey: IDL set to NaN should not throw 
PASS style.accessKey: IDL set to NaN followed by getAttribute() 
PASS style.accessKey: IDL set to NaN followed by IDL get 
PASS style.accessKey: IDL set to Infinity should not throw 
PASS style.accessKey: IDL set to Infinity followed by getAttribute() 
PASS style.accessKey: IDL set to Infinity followed by IDL get 
PASS style.accessKey: IDL set to -Infinity should not throw 
PASS style.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS style.accessKey: IDL set to -Infinity followed by IDL get 
PASS style.accessKey: IDL set to "\0" should not throw 
PASS style.accessKey: IDL set to "\0" followed by getAttribute() 
PASS style.accessKey: IDL set to "\0" followed by IDL get 
PASS style.accessKey: IDL set to null should not throw 
PASS style.accessKey: IDL set to null followed by getAttribute() 
PASS style.accessKey: IDL set to null followed by IDL get 
PASS style.accessKey: IDL set to object "test-toString" should not throw 
PASS style.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS style.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS style.accessKey: IDL set to object "test-valueOf" should not throw 
PASS style.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS style.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS style.tabIndex: typeof IDL attribute 
PASS style.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS style.tabIndex: setAttribute() to -36 followed by IDL get 
PASS style.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS style.tabIndex: setAttribute() to -1 followed by IDL get 
PASS style.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS style.tabIndex: setAttribute() to 0 followed by IDL get 
PASS style.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS style.tabIndex: setAttribute() to 1 followed by IDL get 
PASS style.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
PASS style.tabIndex: setAttribute() to 2147483647 followed by IDL get 
PASS style.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
PASS style.tabIndex: setAttribute() to -2147483648 followed by IDL get 
PASS style.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS style.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS style.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS style.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS style.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS style.tabIndex: setAttribute() to "0" followed by IDL get 
PASS style.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS style.tabIndex: setAttribute() to "1" followed by IDL get 
PASS style.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS style.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS style.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS style.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS style.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS style.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS style.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS style.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS style.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS style.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS style.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS style.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS style.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS style.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS style.tabIndex: IDL set to -36 should not throw 
PASS style.tabIndex: IDL set to -36 followed by getAttribute() 
PASS style.tabIndex: IDL set to -36 followed by IDL get 
PASS style.tabIndex: IDL set to -1 should not throw 
PASS style.tabIndex: IDL set to -1 followed by getAttribute() 
PASS style.tabIndex: IDL set to -1 followed by IDL get 
PASS style.tabIndex: IDL set to 0 should not throw 
PASS style.tabIndex: IDL set to 0 followed by getAttribute() 
PASS style.tabIndex: IDL set to 0 followed by IDL get 
PASS style.tabIndex: IDL set to 1 should not throw 
PASS style.tabIndex: IDL set to 1 followed by getAttribute() 
PASS style.tabIndex: IDL set to 1 followed by IDL get 
PASS style.tabIndex: IDL set to 2147483647 should not throw 
PASS style.tabIndex: IDL set to 2147483647 followed by getAttribute() 
PASS style.tabIndex: IDL set to 2147483647 followed by IDL get 
PASS style.tabIndex: IDL set to -2147483648 should not throw 
PASS style.tabIndex: IDL set to -2147483648 followed by getAttribute() 
PASS style.tabIndex: IDL set to -2147483648 followed by IDL get 
PASS style.media: typeof IDL attribute 
PASS style.media: IDL get with DOM attribute unset 
PASS style.media: setAttribute() to "" followed by getAttribute() 
PASS style.media: setAttribute() to "" followed by IDL get 
PASS style.media: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.media: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.media: setAttribute() to undefined followed by getAttribute() 
PASS style.media: setAttribute() to undefined followed by IDL get 
PASS style.media: setAttribute() to 7 followed by getAttribute() 
PASS style.media: setAttribute() to 7 followed by IDL get 
PASS style.media: setAttribute() to 1.5 followed by getAttribute() 
PASS style.media: setAttribute() to 1.5 followed by IDL get 
PASS style.media: setAttribute() to true followed by getAttribute() 
PASS style.media: setAttribute() to true followed by IDL get 
PASS style.media: setAttribute() to false followed by getAttribute() 
PASS style.media: setAttribute() to false followed by IDL get 
PASS style.media: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS style.media: setAttribute() to object "[object Object]" followed by IDL get 
PASS style.media: setAttribute() to NaN followed by getAttribute() 
PASS style.media: setAttribute() to NaN followed by IDL get 
PASS style.media: setAttribute() to Infinity followed by getAttribute() 
PASS style.media: setAttribute() to Infinity followed by IDL get 
PASS style.media: setAttribute() to -Infinity followed by getAttribute() 
PASS style.media: setAttribute() to -Infinity followed by IDL get 
PASS style.media: setAttribute() to "\0" followed by getAttribute() 
PASS style.media: setAttribute() to "\0" followed by IDL get 
PASS style.media: setAttribute() to null followed by getAttribute() 
PASS style.media: setAttribute() to null followed by IDL get 
PASS style.media: setAttribute() to object "test-toString" followed by getAttribute() 
PASS style.media: setAttribute() to object "test-toString" followed by IDL get 
PASS style.media: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS style.media: setAttribute() to object "test-valueOf" followed by IDL get 
PASS style.media: IDL set to "" should not throw 
PASS style.media: IDL set to "" followed by getAttribute() 
PASS style.media: IDL set to "" followed by IDL get 
PASS style.media: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS style.media: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.media: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.media: IDL set to undefined should not throw 
PASS style.media: IDL set to undefined followed by getAttribute() 
PASS style.media: IDL set to undefined followed by IDL get 
PASS style.media: IDL set to 7 should not throw 
PASS style.media: IDL set to 7 followed by getAttribute() 
PASS style.media: IDL set to 7 followed by IDL get 
PASS style.media: IDL set to 1.5 should not throw 
PASS style.media: IDL set to 1.5 followed by getAttribute() 
PASS style.media: IDL set to 1.5 followed by IDL get 
PASS style.media: IDL set to true should not throw 
PASS style.media: IDL set to true followed by getAttribute() 
PASS style.media: IDL set to true followed by IDL get 
PASS style.media: IDL set to false should not throw 
PASS style.media: IDL set to false followed by getAttribute() 
PASS style.media: IDL set to false followed by IDL get 
PASS style.media: IDL set to object "[object Object]" should not throw 
PASS style.media: IDL set to object "[object Object]" followed by getAttribute() 
PASS style.media: IDL set to object "[object Object]" followed by IDL get 
PASS style.media: IDL set to NaN should not throw 
PASS style.media: IDL set to NaN followed by getAttribute() 
PASS style.media: IDL set to NaN followed by IDL get 
PASS style.media: IDL set to Infinity should not throw 
PASS style.media: IDL set to Infinity followed by getAttribute() 
PASS style.media: IDL set to Infinity followed by IDL get 
PASS style.media: IDL set to -Infinity should not throw 
PASS style.media: IDL set to -Infinity followed by getAttribute() 
PASS style.media: IDL set to -Infinity followed by IDL get 
PASS style.media: IDL set to "\0" should not throw 
PASS style.media: IDL set to "\0" followed by getAttribute() 
PASS style.media: IDL set to "\0" followed by IDL get 
PASS style.media: IDL set to null should not throw 
PASS style.media: IDL set to null followed by getAttribute() 
PASS style.media: IDL set to null followed by IDL get 
PASS style.media: IDL set to object "test-toString" should not throw 
PASS style.media: IDL set to object "test-toString" followed by getAttribute() 
PASS style.media: IDL set to object "test-toString" followed by IDL get 
PASS style.media: IDL set to object "test-valueOf" should not throw 
PASS style.media: IDL set to object "test-valueOf" followed by getAttribute() 
PASS style.media: IDL set to object "test-valueOf" followed by IDL get 
PASS style.type: typeof IDL attribute 
PASS style.type: IDL get with DOM attribute unset 
PASS style.type: setAttribute() to "" followed by getAttribute() 
PASS style.type: setAttribute() to "" followed by IDL get 
PASS style.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.type: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.type: setAttribute() to undefined followed by getAttribute() 
PASS style.type: setAttribute() to undefined followed by IDL get 
PASS style.type: setAttribute() to 7 followed by getAttribute() 
PASS style.type: setAttribute() to 7 followed by IDL get 
PASS style.type: setAttribute() to 1.5 followed by getAttribute() 
PASS style.type: setAttribute() to 1.5 followed by IDL get 
PASS style.type: setAttribute() to true followed by getAttribute() 
PASS style.type: setAttribute() to true followed by IDL get 
PASS style.type: setAttribute() to false followed by getAttribute() 
PASS style.type: setAttribute() to false followed by IDL get 
PASS style.type: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS style.type: setAttribute() to object "[object Object]" followed by IDL get 
PASS style.type: setAttribute() to NaN followed by getAttribute() 
PASS style.type: setAttribute() to NaN followed by IDL get 
PASS style.type: setAttribute() to Infinity followed by getAttribute() 
PASS style.type: setAttribute() to Infinity followed by IDL get 
PASS style.type: setAttribute() to -Infinity followed by getAttribute() 
PASS style.type: setAttribute() to -Infinity followed by IDL get 
PASS style.type: setAttribute() to "\0" followed by getAttribute() 
PASS style.type: setAttribute() to "\0" followed by IDL get 
PASS style.type: setAttribute() to null followed by getAttribute() 
PASS style.type: setAttribute() to null followed by IDL get 
PASS style.type: setAttribute() to object "test-toString" followed by getAttribute() 
PASS style.type: setAttribute() to object "test-toString" followed by IDL get 
PASS style.type: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS style.type: setAttribute() to object "test-valueOf" followed by IDL get 
PASS style.type: IDL set to "" should not throw 
PASS style.type: IDL set to "" followed by getAttribute() 
PASS style.type: IDL set to "" followed by IDL get 
PASS style.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS style.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS style.type: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS style.type: IDL set to undefined should not throw 
PASS style.type: IDL set to undefined followed by getAttribute() 
PASS style.type: IDL set to undefined followed by IDL get 
PASS style.type: IDL set to 7 should not throw 
PASS style.type: IDL set to 7 followed by getAttribute() 
PASS style.type: IDL set to 7 followed by IDL get 
PASS style.type: IDL set to 1.5 should not throw 
PASS style.type: IDL set to 1.5 followed by getAttribute() 
PASS style.type: IDL set to 1.5 followed by IDL get 
PASS style.type: IDL set to true should not throw 
PASS style.type: IDL set to true followed by getAttribute() 
PASS style.type: IDL set to true followed by IDL get 
PASS style.type: IDL set to false should not throw 
PASS style.type: IDL set to false followed by getAttribute() 
PASS style.type: IDL set to false followed by IDL get 
PASS style.type: IDL set to object "[object Object]" should not throw 
PASS style.type: IDL set to object "[object Object]" followed by getAttribute() 
PASS style.type: IDL set to object "[object Object]" followed by IDL get 
PASS style.type: IDL set to NaN should not throw 
PASS style.type: IDL set to NaN followed by getAttribute() 
PASS style.type: IDL set to NaN followed by IDL get 
PASS style.type: IDL set to Infinity should not throw 
PASS style.type: IDL set to Infinity followed by getAttribute() 
PASS style.type: IDL set to Infinity followed by IDL get 
PASS style.type: IDL set to -Infinity should not throw 
PASS style.type: IDL set to -Infinity followed by getAttribute() 
PASS style.type: IDL set to -Infinity followed by IDL get 
PASS style.type: IDL set to "\0" should not throw 
PASS style.type: IDL set to "\0" followed by getAttribute() 
PASS style.type: IDL set to "\0" followed by IDL get 
PASS style.type: IDL set to null should not throw 
PASS style.type: IDL set to null followed by getAttribute() 
PASS style.type: IDL set to null followed by IDL get 
PASS style.type: IDL set to object "test-toString" should not throw 
PASS style.type: IDL set to object "test-toString" followed by getAttribute() 
PASS style.type: IDL set to object "test-toString" followed by IDL get 
PASS style.type: IDL set to object "test-valueOf" should not throw 
PASS style.type: IDL set to object "test-valueOf" followed by getAttribute() 
PASS style.type: IDL set to object "test-valueOf" followed by IDL get 
FAIL style.scoped: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL style.scoped: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS style.scoped: setAttribute() to "" followed by getAttribute() 
FAIL style.scoped: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to " foo " followed by getAttribute() 
FAIL style.scoped: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to undefined followed by getAttribute() 
FAIL style.scoped: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to null followed by getAttribute() 
FAIL style.scoped: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to 7 followed by getAttribute() 
FAIL style.scoped: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to 1.5 followed by getAttribute() 
FAIL style.scoped: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to true followed by getAttribute() 
FAIL style.scoped: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to false followed by getAttribute() 
FAIL style.scoped: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL style.scoped: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to NaN followed by getAttribute() 
FAIL style.scoped: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to Infinity followed by getAttribute() 
FAIL style.scoped: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to -Infinity followed by getAttribute() 
FAIL style.scoped: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to "\0" followed by getAttribute() 
FAIL style.scoped: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL style.scoped: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL style.scoped: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: setAttribute() to "scoped" followed by getAttribute() 
FAIL style.scoped: setAttribute() to "scoped" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.scoped: IDL set to "" should not throw 
FAIL style.scoped: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL style.scoped: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS style.scoped: IDL set to " foo " should not throw 
PASS style.scoped: IDL set to " foo " followed by hasAttribute() 
FAIL style.scoped: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS style.scoped: IDL set to undefined should not throw 
FAIL style.scoped: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL style.scoped: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS style.scoped: IDL set to null should not throw 
FAIL style.scoped: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL style.scoped: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS style.scoped: IDL set to 7 should not throw 
PASS style.scoped: IDL set to 7 followed by hasAttribute() 
FAIL style.scoped: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS style.scoped: IDL set to 1.5 should not throw 
PASS style.scoped: IDL set to 1.5 followed by hasAttribute() 
FAIL style.scoped: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS style.scoped: IDL set to true should not throw 
PASS style.scoped: IDL set to true followed by hasAttribute() 
PASS style.scoped: IDL set to true followed by IDL get 
PASS style.scoped: IDL set to false should not throw 
FAIL style.scoped: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS style.scoped: IDL set to false followed by IDL get 
PASS style.scoped: IDL set to object "[object Object]" should not throw 
PASS style.scoped: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL style.scoped: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS style.scoped: IDL set to NaN should not throw 
FAIL style.scoped: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL style.scoped: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS style.scoped: IDL set to Infinity should not throw 
PASS style.scoped: IDL set to Infinity followed by hasAttribute() 
FAIL style.scoped: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS style.scoped: IDL set to -Infinity should not throw 
PASS style.scoped: IDL set to -Infinity followed by hasAttribute() 
FAIL style.scoped: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS style.scoped: IDL set to "\0" should not throw 
PASS style.scoped: IDL set to "\0" followed by hasAttribute() 
FAIL style.scoped: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS style.scoped: IDL set to object "test-toString" should not throw 
PASS style.scoped: IDL set to object "test-toString" followed by hasAttribute() 
FAIL style.scoped: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS style.scoped: IDL set to object "test-valueOf" should not throw 
PASS style.scoped: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL style.scoped: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL style.itemScope: typeof IDL attribute assert_equals: expected "boolean" but got "undefined"
FAIL style.itemScope: IDL get with DOM attribute unset assert_equals: expected (boolean) false but got (undefined) undefined
PASS style.itemScope: setAttribute() to "" followed by getAttribute() 
FAIL style.itemScope: setAttribute() to "" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to " foo " followed by getAttribute() 
FAIL style.itemScope: setAttribute() to " foo " followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to undefined followed by getAttribute() 
FAIL style.itemScope: setAttribute() to undefined followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to null followed by getAttribute() 
FAIL style.itemScope: setAttribute() to null followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to 7 followed by getAttribute() 
FAIL style.itemScope: setAttribute() to 7 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to 1.5 followed by getAttribute() 
FAIL style.itemScope: setAttribute() to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to true followed by getAttribute() 
FAIL style.itemScope: setAttribute() to true followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to false followed by getAttribute() 
FAIL style.itemScope: setAttribute() to false followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL style.itemScope: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to NaN followed by getAttribute() 
FAIL style.itemScope: setAttribute() to NaN followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to Infinity followed by getAttribute() 
FAIL style.itemScope: setAttribute() to Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to -Infinity followed by getAttribute() 
FAIL style.itemScope: setAttribute() to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to "\0" followed by getAttribute() 
FAIL style.itemScope: setAttribute() to "\0" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL style.itemScope: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL style.itemScope: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: setAttribute() to "itemScope" followed by getAttribute() 
FAIL style.itemScope: setAttribute() to "itemScope" followed by IDL get assert_equals: expected (boolean) true but got (undefined) undefined
PASS style.itemScope: IDL set to "" should not throw 
FAIL style.itemScope: IDL set to "" followed by hasAttribute() assert_equals: expected false but got true
FAIL style.itemScope: IDL set to "" followed by IDL get assert_equals: expected (boolean) false but got (string) ""
PASS style.itemScope: IDL set to " foo " should not throw 
PASS style.itemScope: IDL set to " foo " followed by hasAttribute() 
FAIL style.itemScope: IDL set to " foo " followed by IDL get assert_equals: expected (boolean) true but got (string) " foo "
PASS style.itemScope: IDL set to undefined should not throw 
FAIL style.itemScope: IDL set to undefined followed by hasAttribute() assert_equals: expected false but got true
FAIL style.itemScope: IDL set to undefined followed by IDL get assert_equals: expected (boolean) false but got (undefined) undefined
PASS style.itemScope: IDL set to null should not throw 
FAIL style.itemScope: IDL set to null followed by hasAttribute() assert_equals: expected false but got true
FAIL style.itemScope: IDL set to null followed by IDL get assert_equals: expected (boolean) false but got (object) null
PASS style.itemScope: IDL set to 7 should not throw 
PASS style.itemScope: IDL set to 7 followed by hasAttribute() 
FAIL style.itemScope: IDL set to 7 followed by IDL get assert_equals: expected (boolean) true but got (number) 7
PASS style.itemScope: IDL set to 1.5 should not throw 
PASS style.itemScope: IDL set to 1.5 followed by hasAttribute() 
FAIL style.itemScope: IDL set to 1.5 followed by IDL get assert_equals: expected (boolean) true but got (number) 1.5
PASS style.itemScope: IDL set to true should not throw 
PASS style.itemScope: IDL set to true followed by hasAttribute() 
PASS style.itemScope: IDL set to true followed by IDL get 
PASS style.itemScope: IDL set to false should not throw 
FAIL style.itemScope: IDL set to false followed by hasAttribute() assert_equals: expected false but got true
PASS style.itemScope: IDL set to false followed by IDL get 
PASS style.itemScope: IDL set to object "[object Object]" should not throw 
PASS style.itemScope: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL style.itemScope: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (boolean) true but got (object) object "[object Object]"
PASS style.itemScope: IDL set to NaN should not throw 
FAIL style.itemScope: IDL set to NaN followed by hasAttribute() assert_equals: expected false but got true
FAIL style.itemScope: IDL set to NaN followed by IDL get assert_equals: expected (boolean) false but got (number) NaN
PASS style.itemScope: IDL set to Infinity should not throw 
PASS style.itemScope: IDL set to Infinity followed by hasAttribute() 
FAIL style.itemScope: IDL set to Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) Infinity
PASS style.itemScope: IDL set to -Infinity should not throw 
PASS style.itemScope: IDL set to -Infinity followed by hasAttribute() 
FAIL style.itemScope: IDL set to -Infinity followed by IDL get assert_equals: expected (boolean) true but got (number) -Infinity
PASS style.itemScope: IDL set to "\0" should not throw 
PASS style.itemScope: IDL set to "\0" followed by hasAttribute() 
FAIL style.itemScope: IDL set to "\0" followed by IDL get assert_equals: expected (boolean) true but got (string) "\0"
PASS style.itemScope: IDL set to object "test-toString" should not throw 
PASS style.itemScope: IDL set to object "test-toString" followed by hasAttribute() 
FAIL style.itemScope: IDL set to object "test-toString" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-toString"
PASS style.itemScope: IDL set to object "test-valueOf" should not throw 
PASS style.itemScope: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL style.itemScope: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (boolean) true but got (object) object "test-valueOf"
FAIL style.itemId: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL style.itemId: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS style.itemId: setAttribute() to "" followed by getAttribute() 
FAIL style.itemId: setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS style.itemId: setAttribute() to " foo " followed by getAttribute() 
FAIL style.itemId: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS style.itemId: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL style.itemId: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS style.itemId: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL style.itemId: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS style.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL style.itemId: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS style.itemId: setAttribute() to undefined followed by getAttribute() 
FAIL style.itemId: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS style.itemId: setAttribute() to 7 followed by getAttribute() 
FAIL style.itemId: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS style.itemId: setAttribute() to 1.5 followed by getAttribute() 
FAIL style.itemId: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS style.itemId: setAttribute() to true followed by getAttribute() 
FAIL style.itemId: setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS style.itemId: setAttribute() to false followed by getAttribute() 
FAIL style.itemId: setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS style.itemId: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL style.itemId: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS style.itemId: setAttribute() to NaN followed by getAttribute() 
FAIL style.itemId: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS style.itemId: setAttribute() to Infinity followed by getAttribute() 
FAIL style.itemId: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS style.itemId: setAttribute() to -Infinity followed by getAttribute() 
FAIL style.itemId: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS style.itemId: setAttribute() to "\0" followed by getAttribute() 
FAIL style.itemId: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS style.itemId: setAttribute() to null followed by getAttribute() 
FAIL style.itemId: setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS style.itemId: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL style.itemId: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS style.itemId: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL style.itemId: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS style.itemId: IDL set to "" should not throw 
FAIL style.itemId: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL style.itemId: IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS style.itemId: IDL set to " foo " should not throw 
FAIL style.itemId: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL style.itemId: IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS style.itemId: IDL set to "http://site.example/" should not throw 
FAIL style.itemId: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS style.itemId: IDL set to "http://site.example/" followed by IDL get 
PASS style.itemId: IDL set to "//site.example/path???@#l" should not throw 
FAIL style.itemId: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL style.itemId: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS style.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL style.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL style.itemId: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS style.itemId: IDL set to undefined should not throw 
FAIL style.itemId: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL style.itemId: IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS style.itemId: IDL set to 7 should not throw 
FAIL style.itemId: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL style.itemId: IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS style.itemId: IDL set to 1.5 should not throw 
FAIL style.itemId: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL style.itemId: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS style.itemId: IDL set to true should not throw 
FAIL style.itemId: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL style.itemId: IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS style.itemId: IDL set to false should not throw 
FAIL style.itemId: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL style.itemId: IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS style.itemId: IDL set to object "[object Object]" should not throw 
FAIL style.itemId: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL style.itemId: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS style.itemId: IDL set to NaN should not throw 
FAIL style.itemId: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL style.itemId: IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS style.itemId: IDL set to Infinity should not throw 
FAIL style.itemId: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL style.itemId: IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS style.itemId: IDL set to -Infinity should not throw 
FAIL style.itemId: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL style.itemId: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS style.itemId: IDL set to "\0" should not throw 
FAIL style.itemId: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL style.itemId: IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS style.itemId: IDL set to null should not throw 
FAIL style.itemId: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL style.itemId: IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS style.itemId: IDL set to object "test-toString" should not throw 
FAIL style.itemId: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL style.itemId: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS style.itemId: IDL set to object "test-valueOf" should not throw 
PASS style.itemId: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL style.itemId: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL meta.itemValue (<meta content>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL meta.itemValue (<meta content>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to "" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to undefined followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to 7 followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to 1.5 followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to true followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to false followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to NaN followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to Infinity followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to -Infinity followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to "\0" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to null followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS meta.itemValue (<meta content>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS meta.itemValue (<meta content>): IDL set to "" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to "" followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to undefined should not throw 
FAIL meta.itemValue (<meta content>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS meta.itemValue (<meta content>): IDL set to 7 should not throw 
FAIL meta.itemValue (<meta content>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS meta.itemValue (<meta content>): IDL set to 1.5 should not throw 
FAIL meta.itemValue (<meta content>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS meta.itemValue (<meta content>): IDL set to true should not throw 
FAIL meta.itemValue (<meta content>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS meta.itemValue (<meta content>): IDL set to false should not throw 
FAIL meta.itemValue (<meta content>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS meta.itemValue (<meta content>): IDL set to object "[object Object]" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS meta.itemValue (<meta content>): IDL set to NaN should not throw 
FAIL meta.itemValue (<meta content>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS meta.itemValue (<meta content>): IDL set to Infinity should not throw 
FAIL meta.itemValue (<meta content>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS meta.itemValue (<meta content>): IDL set to -Infinity should not throw 
FAIL meta.itemValue (<meta content>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS meta.itemValue (<meta content>): IDL set to "\0" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS meta.itemValue (<meta content>): IDL set to "\0" followed by IDL get 
PASS meta.itemValue (<meta content>): IDL set to null should not throw 
FAIL meta.itemValue (<meta content>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS meta.itemValue (<meta content>): IDL set to object "test-toString" should not throw 
FAIL meta.itemValue (<meta content>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL meta.itemValue (<meta content>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS meta.itemValue (<meta content>): IDL set to object "test-valueOf" should not throw 
PASS meta.itemValue (<meta content>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL meta.itemValue (<meta content>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
FAIL audio.itemValue (<audio src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL audio.itemValue (<audio src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to " foo " followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to undefined followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to 7 followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to true followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to false followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to NaN followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to Infinity followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to "\0" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to null followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS audio.itemValue (<audio src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS audio.itemValue (<audio src>): IDL set to "" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS audio.itemValue (<audio src>): IDL set to " foo " should not throw 
FAIL audio.itemValue (<audio src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS audio.itemValue (<audio src>): IDL set to "http://site.example/" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS audio.itemValue (<audio src>): IDL set to "http://site.example/" followed by IDL get 
PASS audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS audio.itemValue (<audio src>): IDL set to undefined should not throw 
FAIL audio.itemValue (<audio src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS audio.itemValue (<audio src>): IDL set to 7 should not throw 
FAIL audio.itemValue (<audio src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS audio.itemValue (<audio src>): IDL set to 1.5 should not throw 
FAIL audio.itemValue (<audio src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS audio.itemValue (<audio src>): IDL set to true should not throw 
FAIL audio.itemValue (<audio src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS audio.itemValue (<audio src>): IDL set to false should not throw 
FAIL audio.itemValue (<audio src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS audio.itemValue (<audio src>): IDL set to object "[object Object]" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS audio.itemValue (<audio src>): IDL set to NaN should not throw 
FAIL audio.itemValue (<audio src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS audio.itemValue (<audio src>): IDL set to Infinity should not throw 
FAIL audio.itemValue (<audio src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS audio.itemValue (<audio src>): IDL set to -Infinity should not throw 
FAIL audio.itemValue (<audio src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS audio.itemValue (<audio src>): IDL set to "\0" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS audio.itemValue (<audio src>): IDL set to null should not throw 
FAIL audio.itemValue (<audio src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS audio.itemValue (<audio src>): IDL set to object "test-toString" should not throw 
FAIL audio.itemValue (<audio src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL audio.itemValue (<audio src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS audio.itemValue (<audio src>): IDL set to object "test-valueOf" should not throw 
PASS audio.itemValue (<audio src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL audio.itemValue (<audio src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL embed.itemValue (<embed src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL embed.itemValue (<embed src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to " foo " followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to undefined followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to 7 followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to true followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to false followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to NaN followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to Infinity followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to "\0" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to null followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS embed.itemValue (<embed src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS embed.itemValue (<embed src>): IDL set to "" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS embed.itemValue (<embed src>): IDL set to " foo " should not throw 
FAIL embed.itemValue (<embed src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS embed.itemValue (<embed src>): IDL set to "http://site.example/" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS embed.itemValue (<embed src>): IDL set to "http://site.example/" followed by IDL get 
PASS embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS embed.itemValue (<embed src>): IDL set to undefined should not throw 
FAIL embed.itemValue (<embed src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS embed.itemValue (<embed src>): IDL set to 7 should not throw 
FAIL embed.itemValue (<embed src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS embed.itemValue (<embed src>): IDL set to 1.5 should not throw 
FAIL embed.itemValue (<embed src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS embed.itemValue (<embed src>): IDL set to true should not throw 
FAIL embed.itemValue (<embed src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS embed.itemValue (<embed src>): IDL set to false should not throw 
FAIL embed.itemValue (<embed src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS embed.itemValue (<embed src>): IDL set to object "[object Object]" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS embed.itemValue (<embed src>): IDL set to NaN should not throw 
FAIL embed.itemValue (<embed src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS embed.itemValue (<embed src>): IDL set to Infinity should not throw 
FAIL embed.itemValue (<embed src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS embed.itemValue (<embed src>): IDL set to -Infinity should not throw 
FAIL embed.itemValue (<embed src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS embed.itemValue (<embed src>): IDL set to "\0" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS embed.itemValue (<embed src>): IDL set to null should not throw 
FAIL embed.itemValue (<embed src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS embed.itemValue (<embed src>): IDL set to object "test-toString" should not throw 
FAIL embed.itemValue (<embed src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL embed.itemValue (<embed src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS embed.itemValue (<embed src>): IDL set to object "test-valueOf" should not throw 
PASS embed.itemValue (<embed src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL embed.itemValue (<embed src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL iframe.itemValue (<iframe src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL iframe.itemValue (<iframe src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to " foo " followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to undefined followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to 7 followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to true followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to false followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to NaN followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to Infinity followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to "\0" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to null followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): IDL set to "" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS iframe.itemValue (<iframe src>): IDL set to " foo " should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS iframe.itemValue (<iframe src>): IDL set to "http://site.example/" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS iframe.itemValue (<iframe src>): IDL set to "http://site.example/" followed by IDL get 
PASS iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS iframe.itemValue (<iframe src>): IDL set to undefined should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS iframe.itemValue (<iframe src>): IDL set to 7 should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS iframe.itemValue (<iframe src>): IDL set to 1.5 should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS iframe.itemValue (<iframe src>): IDL set to true should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS iframe.itemValue (<iframe src>): IDL set to false should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS iframe.itemValue (<iframe src>): IDL set to object "[object Object]" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS iframe.itemValue (<iframe src>): IDL set to NaN should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS iframe.itemValue (<iframe src>): IDL set to Infinity should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS iframe.itemValue (<iframe src>): IDL set to -Infinity should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS iframe.itemValue (<iframe src>): IDL set to "\0" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS iframe.itemValue (<iframe src>): IDL set to null should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS iframe.itemValue (<iframe src>): IDL set to object "test-toString" should not throw 
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" should not throw 
PASS iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL iframe.itemValue (<iframe src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL img.itemValue (<img src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL img.itemValue (<img src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to " foo " followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to undefined followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to 7 followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to true followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to false followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to NaN followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to Infinity followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to "\0" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to null followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS img.itemValue (<img src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL img.itemValue (<img src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS img.itemValue (<img src>): IDL set to "" should not throw 
FAIL img.itemValue (<img src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS img.itemValue (<img src>): IDL set to " foo " should not throw 
FAIL img.itemValue (<img src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS img.itemValue (<img src>): IDL set to "http://site.example/" should not throw 
FAIL img.itemValue (<img src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS img.itemValue (<img src>): IDL set to "http://site.example/" followed by IDL get 
PASS img.itemValue (<img src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL img.itemValue (<img src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS img.itemValue (<img src>): IDL set to undefined should not throw 
FAIL img.itemValue (<img src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS img.itemValue (<img src>): IDL set to 7 should not throw 
FAIL img.itemValue (<img src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS img.itemValue (<img src>): IDL set to 1.5 should not throw 
FAIL img.itemValue (<img src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS img.itemValue (<img src>): IDL set to true should not throw 
FAIL img.itemValue (<img src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS img.itemValue (<img src>): IDL set to false should not throw 
FAIL img.itemValue (<img src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS img.itemValue (<img src>): IDL set to object "[object Object]" should not throw 
FAIL img.itemValue (<img src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS img.itemValue (<img src>): IDL set to NaN should not throw 
FAIL img.itemValue (<img src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS img.itemValue (<img src>): IDL set to Infinity should not throw 
FAIL img.itemValue (<img src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS img.itemValue (<img src>): IDL set to -Infinity should not throw 
FAIL img.itemValue (<img src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS img.itemValue (<img src>): IDL set to "\0" should not throw 
FAIL img.itemValue (<img src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS img.itemValue (<img src>): IDL set to null should not throw 
FAIL img.itemValue (<img src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS img.itemValue (<img src>): IDL set to object "test-toString" should not throw 
FAIL img.itemValue (<img src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL img.itemValue (<img src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS img.itemValue (<img src>): IDL set to object "test-valueOf" should not throw 
PASS img.itemValue (<img src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL img.itemValue (<img src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL source.itemValue (<source src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL source.itemValue (<source src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to " foo " followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to undefined followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to 7 followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to true followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to false followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to NaN followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to Infinity followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to "\0" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to null followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS source.itemValue (<source src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL source.itemValue (<source src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS source.itemValue (<source src>): IDL set to "" should not throw 
FAIL source.itemValue (<source src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS source.itemValue (<source src>): IDL set to " foo " should not throw 
FAIL source.itemValue (<source src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS source.itemValue (<source src>): IDL set to "http://site.example/" should not throw 
FAIL source.itemValue (<source src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS source.itemValue (<source src>): IDL set to "http://site.example/" followed by IDL get 
PASS source.itemValue (<source src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL source.itemValue (<source src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS source.itemValue (<source src>): IDL set to undefined should not throw 
FAIL source.itemValue (<source src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS source.itemValue (<source src>): IDL set to 7 should not throw 
FAIL source.itemValue (<source src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS source.itemValue (<source src>): IDL set to 1.5 should not throw 
FAIL source.itemValue (<source src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS source.itemValue (<source src>): IDL set to true should not throw 
FAIL source.itemValue (<source src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS source.itemValue (<source src>): IDL set to false should not throw 
FAIL source.itemValue (<source src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS source.itemValue (<source src>): IDL set to object "[object Object]" should not throw 
FAIL source.itemValue (<source src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS source.itemValue (<source src>): IDL set to NaN should not throw 
FAIL source.itemValue (<source src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS source.itemValue (<source src>): IDL set to Infinity should not throw 
FAIL source.itemValue (<source src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS source.itemValue (<source src>): IDL set to -Infinity should not throw 
FAIL source.itemValue (<source src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS source.itemValue (<source src>): IDL set to "\0" should not throw 
FAIL source.itemValue (<source src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS source.itemValue (<source src>): IDL set to null should not throw 
FAIL source.itemValue (<source src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS source.itemValue (<source src>): IDL set to object "test-toString" should not throw 
FAIL source.itemValue (<source src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL source.itemValue (<source src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS source.itemValue (<source src>): IDL set to object "test-valueOf" should not throw 
PASS source.itemValue (<source src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL source.itemValue (<source src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL track.itemValue (<track src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL track.itemValue (<track src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to " foo " followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to undefined followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to 7 followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to true followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to false followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to NaN followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to Infinity followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to "\0" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to null followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS track.itemValue (<track src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL track.itemValue (<track src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS track.itemValue (<track src>): IDL set to "" should not throw 
FAIL track.itemValue (<track src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS track.itemValue (<track src>): IDL set to " foo " should not throw 
FAIL track.itemValue (<track src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS track.itemValue (<track src>): IDL set to "http://site.example/" should not throw 
FAIL track.itemValue (<track src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS track.itemValue (<track src>): IDL set to "http://site.example/" followed by IDL get 
PASS track.itemValue (<track src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL track.itemValue (<track src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS track.itemValue (<track src>): IDL set to undefined should not throw 
FAIL track.itemValue (<track src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS track.itemValue (<track src>): IDL set to 7 should not throw 
FAIL track.itemValue (<track src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS track.itemValue (<track src>): IDL set to 1.5 should not throw 
FAIL track.itemValue (<track src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS track.itemValue (<track src>): IDL set to true should not throw 
FAIL track.itemValue (<track src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS track.itemValue (<track src>): IDL set to false should not throw 
FAIL track.itemValue (<track src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS track.itemValue (<track src>): IDL set to object "[object Object]" should not throw 
FAIL track.itemValue (<track src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS track.itemValue (<track src>): IDL set to NaN should not throw 
FAIL track.itemValue (<track src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS track.itemValue (<track src>): IDL set to Infinity should not throw 
FAIL track.itemValue (<track src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS track.itemValue (<track src>): IDL set to -Infinity should not throw 
FAIL track.itemValue (<track src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS track.itemValue (<track src>): IDL set to "\0" should not throw 
FAIL track.itemValue (<track src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS track.itemValue (<track src>): IDL set to null should not throw 
FAIL track.itemValue (<track src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS track.itemValue (<track src>): IDL set to object "test-toString" should not throw 
FAIL track.itemValue (<track src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL track.itemValue (<track src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS track.itemValue (<track src>): IDL set to object "test-valueOf" should not throw 
PASS track.itemValue (<track src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL track.itemValue (<track src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL video.itemValue (<video src>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL video.itemValue (<video src>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to " foo " followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to undefined followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to 7 followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to 1.5 followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to true followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to false followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to NaN followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to Infinity followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to -Infinity followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to "\0" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to null followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS video.itemValue (<video src>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL video.itemValue (<video src>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS video.itemValue (<video src>): IDL set to "" should not throw 
FAIL video.itemValue (<video src>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS video.itemValue (<video src>): IDL set to " foo " should not throw 
FAIL video.itemValue (<video src>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS video.itemValue (<video src>): IDL set to "http://site.example/" should not throw 
FAIL video.itemValue (<video src>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS video.itemValue (<video src>): IDL set to "http://site.example/" followed by IDL get 
PASS video.itemValue (<video src>): IDL set to "//site.example/path???@#l" should not throw 
FAIL video.itemValue (<video src>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS video.itemValue (<video src>): IDL set to undefined should not throw 
FAIL video.itemValue (<video src>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS video.itemValue (<video src>): IDL set to 7 should not throw 
FAIL video.itemValue (<video src>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS video.itemValue (<video src>): IDL set to 1.5 should not throw 
FAIL video.itemValue (<video src>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS video.itemValue (<video src>): IDL set to true should not throw 
FAIL video.itemValue (<video src>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS video.itemValue (<video src>): IDL set to false should not throw 
FAIL video.itemValue (<video src>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS video.itemValue (<video src>): IDL set to object "[object Object]" should not throw 
FAIL video.itemValue (<video src>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS video.itemValue (<video src>): IDL set to NaN should not throw 
FAIL video.itemValue (<video src>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS video.itemValue (<video src>): IDL set to Infinity should not throw 
FAIL video.itemValue (<video src>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS video.itemValue (<video src>): IDL set to -Infinity should not throw 
FAIL video.itemValue (<video src>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS video.itemValue (<video src>): IDL set to "\0" should not throw 
FAIL video.itemValue (<video src>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS video.itemValue (<video src>): IDL set to null should not throw 
FAIL video.itemValue (<video src>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS video.itemValue (<video src>): IDL set to object "test-toString" should not throw 
FAIL video.itemValue (<video src>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL video.itemValue (<video src>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS video.itemValue (<video src>): IDL set to object "test-valueOf" should not throw 
PASS video.itemValue (<video src>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL video.itemValue (<video src>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL a.itemValue (<a href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL a.itemValue (<a href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to " foo " followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to undefined followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to 7 followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to true followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to false followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to NaN followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to Infinity followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to "\0" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to null followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS a.itemValue (<a href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL a.itemValue (<a href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS a.itemValue (<a href>): IDL set to "" should not throw 
FAIL a.itemValue (<a href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS a.itemValue (<a href>): IDL set to " foo " should not throw 
FAIL a.itemValue (<a href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS a.itemValue (<a href>): IDL set to "http://site.example/" should not throw 
FAIL a.itemValue (<a href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS a.itemValue (<a href>): IDL set to "http://site.example/" followed by IDL get 
PASS a.itemValue (<a href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL a.itemValue (<a href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS a.itemValue (<a href>): IDL set to undefined should not throw 
FAIL a.itemValue (<a href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS a.itemValue (<a href>): IDL set to 7 should not throw 
FAIL a.itemValue (<a href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS a.itemValue (<a href>): IDL set to 1.5 should not throw 
FAIL a.itemValue (<a href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS a.itemValue (<a href>): IDL set to true should not throw 
FAIL a.itemValue (<a href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS a.itemValue (<a href>): IDL set to false should not throw 
FAIL a.itemValue (<a href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS a.itemValue (<a href>): IDL set to object "[object Object]" should not throw 
FAIL a.itemValue (<a href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS a.itemValue (<a href>): IDL set to NaN should not throw 
FAIL a.itemValue (<a href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS a.itemValue (<a href>): IDL set to Infinity should not throw 
FAIL a.itemValue (<a href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS a.itemValue (<a href>): IDL set to -Infinity should not throw 
FAIL a.itemValue (<a href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS a.itemValue (<a href>): IDL set to "\0" should not throw 
FAIL a.itemValue (<a href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS a.itemValue (<a href>): IDL set to null should not throw 
FAIL a.itemValue (<a href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS a.itemValue (<a href>): IDL set to object "test-toString" should not throw 
FAIL a.itemValue (<a href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL a.itemValue (<a href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS a.itemValue (<a href>): IDL set to object "test-valueOf" should not throw 
PASS a.itemValue (<a href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL a.itemValue (<a href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL area.itemValue (<area href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL area.itemValue (<area href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to " foo " followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to undefined followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to 7 followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to true followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to false followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to NaN followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to Infinity followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to "\0" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to null followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS area.itemValue (<area href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL area.itemValue (<area href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS area.itemValue (<area href>): IDL set to "" should not throw 
FAIL area.itemValue (<area href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS area.itemValue (<area href>): IDL set to " foo " should not throw 
FAIL area.itemValue (<area href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS area.itemValue (<area href>): IDL set to "http://site.example/" should not throw 
FAIL area.itemValue (<area href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS area.itemValue (<area href>): IDL set to "http://site.example/" followed by IDL get 
PASS area.itemValue (<area href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL area.itemValue (<area href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS area.itemValue (<area href>): IDL set to undefined should not throw 
FAIL area.itemValue (<area href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS area.itemValue (<area href>): IDL set to 7 should not throw 
FAIL area.itemValue (<area href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS area.itemValue (<area href>): IDL set to 1.5 should not throw 
FAIL area.itemValue (<area href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS area.itemValue (<area href>): IDL set to true should not throw 
FAIL area.itemValue (<area href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS area.itemValue (<area href>): IDL set to false should not throw 
FAIL area.itemValue (<area href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS area.itemValue (<area href>): IDL set to object "[object Object]" should not throw 
FAIL area.itemValue (<area href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS area.itemValue (<area href>): IDL set to NaN should not throw 
FAIL area.itemValue (<area href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS area.itemValue (<area href>): IDL set to Infinity should not throw 
FAIL area.itemValue (<area href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS area.itemValue (<area href>): IDL set to -Infinity should not throw 
FAIL area.itemValue (<area href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS area.itemValue (<area href>): IDL set to "\0" should not throw 
FAIL area.itemValue (<area href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS area.itemValue (<area href>): IDL set to null should not throw 
FAIL area.itemValue (<area href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS area.itemValue (<area href>): IDL set to object "test-toString" should not throw 
FAIL area.itemValue (<area href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL area.itemValue (<area href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS area.itemValue (<area href>): IDL set to object "test-valueOf" should not throw 
PASS area.itemValue (<area href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL area.itemValue (<area href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL link.itemValue (<link href>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL link.itemValue (<link href>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to " foo " followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to undefined followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to 7 followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to 1.5 followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to true followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to false followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to NaN followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to Infinity followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to -Infinity followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to "\0" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to null followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS link.itemValue (<link href>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL link.itemValue (<link href>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS link.itemValue (<link href>): IDL set to "" should not throw 
FAIL link.itemValue (<link href>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS link.itemValue (<link href>): IDL set to " foo " should not throw 
FAIL link.itemValue (<link href>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS link.itemValue (<link href>): IDL set to "http://site.example/" should not throw 
FAIL link.itemValue (<link href>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS link.itemValue (<link href>): IDL set to "http://site.example/" followed by IDL get 
PASS link.itemValue (<link href>): IDL set to "//site.example/path???@#l" should not throw 
FAIL link.itemValue (<link href>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS link.itemValue (<link href>): IDL set to undefined should not throw 
FAIL link.itemValue (<link href>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS link.itemValue (<link href>): IDL set to 7 should not throw 
FAIL link.itemValue (<link href>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS link.itemValue (<link href>): IDL set to 1.5 should not throw 
FAIL link.itemValue (<link href>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS link.itemValue (<link href>): IDL set to true should not throw 
FAIL link.itemValue (<link href>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS link.itemValue (<link href>): IDL set to false should not throw 
FAIL link.itemValue (<link href>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS link.itemValue (<link href>): IDL set to object "[object Object]" should not throw 
FAIL link.itemValue (<link href>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS link.itemValue (<link href>): IDL set to NaN should not throw 
FAIL link.itemValue (<link href>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS link.itemValue (<link href>): IDL set to Infinity should not throw 
FAIL link.itemValue (<link href>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS link.itemValue (<link href>): IDL set to -Infinity should not throw 
FAIL link.itemValue (<link href>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS link.itemValue (<link href>): IDL set to "\0" should not throw 
FAIL link.itemValue (<link href>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS link.itemValue (<link href>): IDL set to null should not throw 
FAIL link.itemValue (<link href>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS link.itemValue (<link href>): IDL set to object "test-toString" should not throw 
FAIL link.itemValue (<link href>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL link.itemValue (<link href>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS link.itemValue (<link href>): IDL set to object "test-valueOf" should not throw 
PASS link.itemValue (<link href>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL link.itemValue (<link href>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL object.itemValue (<object data>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL object.itemValue (<object data>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to " foo " followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/foo" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "http://site.example/path???@#l" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to undefined followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to 7 followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to 1.5 followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to true followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to false followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to NaN followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to Infinity followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to -Infinity followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to "\0" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/reflection-metadata.html" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to null followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (undefined) undefined
PASS object.itemValue (<object data>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL object.itemValue (<object data>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (undefined) undefined
PASS object.itemValue (<object data>): IDL set to "" should not throw 
FAIL object.itemValue (<object data>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got ""
PASS object.itemValue (<object data>): IDL set to " foo " should not throw 
FAIL object.itemValue (<object data>): IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to " foo " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/foo" but got " foo "
PASS object.itemValue (<object data>): IDL set to "http://site.example/" should not throw 
FAIL object.itemValue (<object data>): IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS object.itemValue (<object data>): IDL set to "http://site.example/" followed by IDL get 
PASS object.itemValue (<object data>): IDL set to "//site.example/path???@#l" should not throw 
FAIL object.itemValue (<object data>): IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "http://site.example/path???@#l" but got "//site.example/path???@#l"
PASS object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS object.itemValue (<object data>): IDL set to undefined should not throw 
FAIL object.itemValue (<object data>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to undefined followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/undefined" but got (undefined) undefined
PASS object.itemValue (<object data>): IDL set to 7 should not throw 
FAIL object.itemValue (<object data>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to 7 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/7" but got (number) 7
PASS object.itemValue (<object data>): IDL set to 1.5 should not throw 
FAIL object.itemValue (<object data>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/1.5" but got (number) 1.5
PASS object.itemValue (<object data>): IDL set to true should not throw 
FAIL object.itemValue (<object data>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to true followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/true" but got (boolean) true
PASS object.itemValue (<object data>): IDL set to false should not throw 
FAIL object.itemValue (<object data>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to false followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/false" but got (boolean) false
PASS object.itemValue (<object data>): IDL set to object "[object Object]" should not throw 
FAIL object.itemValue (<object data>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS object.itemValue (<object data>): IDL set to NaN should not throw 
FAIL object.itemValue (<object data>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to NaN followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/NaN" but got (number) NaN
PASS object.itemValue (<object data>): IDL set to Infinity should not throw 
FAIL object.itemValue (<object data>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/Infinity" but got (number) Infinity
PASS object.itemValue (<object data>): IDL set to -Infinity should not throw 
FAIL object.itemValue (<object data>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/-Infinity" but got (number) -Infinity
PASS object.itemValue (<object data>): IDL set to "\0" should not throw 
FAIL object.itemValue (<object data>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to "\0" followed by IDL get assert_equals: expected "http://localhost:8800/html/dom/reflection-metadata.html" but got "\0"
PASS object.itemValue (<object data>): IDL set to null should not throw 
FAIL object.itemValue (<object data>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to null followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/null" but got (object) null
PASS object.itemValue (<object data>): IDL set to object "test-toString" should not throw 
FAIL object.itemValue (<object data>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL object.itemValue (<object data>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-toString" but got (object) object "test-toString"
PASS object.itemValue (<object data>): IDL set to object "test-valueOf" should not throw 
PASS object.itemValue (<object data>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL object.itemValue (<object data>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "http://localhost:8800/html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL data.itemValue (<data value>): typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL data.itemValue (<data value>): IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to "" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to undefined followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to 7 followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to 1.5 followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to true followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to false followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to NaN followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to Infinity followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to -Infinity followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to "\0" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to null followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "test-toString" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS data.itemValue (<data value>): setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL data.itemValue (<data value>): setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS data.itemValue (<data value>): IDL set to "" should not throw 
FAIL data.itemValue (<data value>): IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to "" followed by IDL get 
PASS data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS data.itemValue (<data value>): IDL set to undefined should not throw 
FAIL data.itemValue (<data value>): IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS data.itemValue (<data value>): IDL set to 7 should not throw 
FAIL data.itemValue (<data value>): IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS data.itemValue (<data value>): IDL set to 1.5 should not throw 
FAIL data.itemValue (<data value>): IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS data.itemValue (<data value>): IDL set to true should not throw 
FAIL data.itemValue (<data value>): IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS data.itemValue (<data value>): IDL set to false should not throw 
FAIL data.itemValue (<data value>): IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS data.itemValue (<data value>): IDL set to object "[object Object]" should not throw 
FAIL data.itemValue (<data value>): IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS data.itemValue (<data value>): IDL set to NaN should not throw 
FAIL data.itemValue (<data value>): IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS data.itemValue (<data value>): IDL set to Infinity should not throw 
FAIL data.itemValue (<data value>): IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS data.itemValue (<data value>): IDL set to -Infinity should not throw 
FAIL data.itemValue (<data value>): IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS data.itemValue (<data value>): IDL set to "\0" should not throw 
FAIL data.itemValue (<data value>): IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS data.itemValue (<data value>): IDL set to "\0" followed by IDL get 
PASS data.itemValue (<data value>): IDL set to null should not throw 
FAIL data.itemValue (<data value>): IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS data.itemValue (<data value>): IDL set to object "test-toString" should not throw 
FAIL data.itemValue (<data value>): IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL data.itemValue (<data value>): IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS data.itemValue (<data value>): IDL set to object "test-valueOf" should not throw 
PASS data.itemValue (<data value>): IDL set to object "test-valueOf" followed by getAttribute() 
FAIL data.itemValue (<data value>): IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"

