
PASS new RTCPeerConnection() should have default rtcpMuxPolicy require 
PASS new RTCPeerConnection({ rtcpMuxPolicy: undefined }) should have default rtcpMuxPolicy require 
PASS new RTCPeerConnection({ rtcpMuxPolicy: 'require' }) should succeed 
PASS new RTCPeerConnection({ rtcpMuxPolicy: 'negotiate' }) may succeed or throw NotSupportedError 
PASS new RTCPeerConnection(config) - with { rtcpMuxPolicy: null } should throw TypeError 
PASS setConfiguration(config) - with { rtcpMuxPolicy: null } should throw TypeError 
PASS new RTCPeerConnection(config) - with { rtcpMuxPolicy: 'invalid' } should throw TypeError 
PASS setConfiguration(config) - with { rtcpMuxPolicy: 'invalid' } should throw TypeError 
PASS setConfiguration({ rtcpMuxPolicy: 'negotiate' }) with initial rtcpMuxPolicy require should throw InvalidModificationError 
PASS setConfiguration({ rtcpMuxPolicy: 'require' }) with initial rtcpMuxPolicy negotiate should throw InvalidModificationError 
PASS setConfiguration({}) with initial rtcpMuxPolicy negotiate should throw InvalidModificationError 
FAIL setRemoteDescription throws InvalidAccessError when called with an offer without rtcp-mux and rtcpMuxPolicy is set to require assert_throws: function "function () { throw e }" threw object "OperationError: Failed to set remote offer sdp: The m= section:audio1 is invalid. RTCP-MUX is not enabled when it is required." that is not a DOMException InvalidAccessError: property "code" is equal to 0, expected 15
FAIL setRemoteDescription throws InvalidAccessError when called with an answer without rtcp-mux and rtcpMuxPolicy is set to require assert_throws: function "function () { throw e }" threw object "OperationError: Failed to set remote answer sdp: The order of m-lines in answer doesn't match order in offer. Rejecting answer." that is not a DOMException InvalidAccessError: property "code" is equal to 0, expected 15

