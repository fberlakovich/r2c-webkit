This test checks the behavior of Intl.Collator as described in the ECMAScript Internationalization API Specification (ECMA-402 2.0).

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS Intl.Collator is an instance of Function
PASS Intl.Collator() is an instance of Intl.Collator
PASS Intl.Collator.call({}) is an instance of Intl.Collator
PASS new Intl.Collator() is an instance of Intl.Collator
PASS class DerivedCollator extends Intl.Collator {};(new DerivedCollator) instanceof DerivedCollator is true
PASS class DerivedCollator extends Intl.Collator {};(new DerivedCollator) instanceof Intl.Collator is true
PASS class DerivedCollator extends Intl.Collator {};new DerivedCollator().compare('a', 'b') === -1 is true
PASS class DerivedCollator extends Intl.Collator {};Object.getPrototypeOf(new DerivedCollator) === DerivedCollator.prototype is true
PASS class DerivedCollator extends Intl.Collator {};Object.getPrototypeOf(Object.getPrototypeOf(new DerivedCollator)) === Intl.Collator.prototype is true
PASS Intl.Collator.length is 0
PASS Object.getOwnPropertyDescriptor(Intl.Collator, 'prototype').writable is false
PASS Object.getOwnPropertyDescriptor(Intl.Collator, 'prototype').enumerable is false
PASS Object.getOwnPropertyDescriptor(Intl.Collator, 'prototype').configurable is false
PASS Intl.Collator.supportedLocalesOf.length is 1
PASS Intl.Collator.supportedLocalesOf() is an instance of Array
PASS Intl.Collator.supportedLocalesOf.call(null, 'en') is [ 'en' ]
PASS Intl.Collator.supportedLocalesOf.call({}, 'en') is [ 'en' ]
PASS Intl.Collator.supportedLocalesOf.call(1, 'en') is [ 'en' ]
PASS Intl.Collator.supportedLocalesOf(9) is []
PASS Intl.Collator.supportedLocalesOf('en') is [ 'en' ]
PASS Intl.Collator.supportedLocalesOf({ length: 4, 1: 'en', 0: 'es', 3: 'de' }) is [ 'es', 'en', 'de' ]
PASS Intl.Collator.supportedLocalesOf([ 'en', 'pt', 'en', 'es' ]) is [ 'en', 'pt', 'es' ]
PASS Intl.Collator.supportedLocalesOf('En-laTn-us-variant2-variant1-1abc-U-ko-tRue-A-aa-aaa-x-RESERVED') is [ 'en-Latn-US-variant2-variant1-1abc-a-aa-aaa-u-ko-true-x-reserved' ]
PASS Intl.Collator.supportedLocalesOf('no-bok') is [ 'nb' ]
PASS Intl.Collator.supportedLocalesOf('x-some-thing') is []
PASS Intl.Collator.supportedLocalesOf(Object.create(null, { length: { get() { throw Error('a') } } })) threw exception Error: a.
PASS Intl.Collator.supportedLocalesOf(Object.create(null, { length: { value: 1 }, 0: { get() { throw Error('b') } } })) threw exception Error: b.
PASS Intl.Collator.supportedLocalesOf([ { toString() { throw Error('c') } } ]) threw exception Error: c.
PASS Intl.Collator.supportedLocalesOf([ 5 ]) threw exception TypeError: locale value must be a string or object.
PASS Intl.Collator.supportedLocalesOf('') threw exception RangeError: invalid language tag: .
PASS Intl.Collator.supportedLocalesOf('a') threw exception RangeError: invalid language tag: a.
PASS Intl.Collator.supportedLocalesOf('abcdefghij') threw exception RangeError: invalid language tag: abcdefghij.
PASS Intl.Collator.supportedLocalesOf('#$') threw exception RangeError: invalid language tag: #$.
PASS Intl.Collator.supportedLocalesOf('en-@-abc') threw exception RangeError: invalid language tag: en-@-abc.
PASS Intl.Collator.supportedLocalesOf('en-u') threw exception RangeError: invalid language tag: en-u.
PASS Intl.Collator.supportedLocalesOf('en-u-kn-true-u-ko-true') threw exception RangeError: invalid language tag: en-u-kn-true-u-ko-true.
PASS Intl.Collator.supportedLocalesOf('en-x') threw exception RangeError: invalid language tag: en-x.
PASS Intl.Collator.supportedLocalesOf('en-*') threw exception RangeError: invalid language tag: en-*.
PASS Intl.Collator.supportedLocalesOf('en-') threw exception RangeError: invalid language tag: en-.
PASS Intl.Collator.supportedLocalesOf('en--US') threw exception RangeError: invalid language tag: en--US.
PASS Intl.Collator.prototype.constructor is Intl.Collator
PASS Intl.Collator.prototype.compare is an instance of Function
PASS Object.getOwnPropertyDescriptor(Intl.Collator.prototype, 'compare').get is an instance of Function
PASS Object.getOwnPropertyDescriptor(Intl.Collator.prototype, 'compare').set is undefined
PASS Object.getOwnPropertyDescriptor(Intl.Collator.prototype, 'compare').enumerable is false
PASS Object.getOwnPropertyDescriptor(Intl.Collator.prototype, 'compare').configurable is true
PASS Intl.Collator.prototype.compare.length is 2
PASS Object.defineProperty({}, 'compare', Object.getOwnPropertyDescriptor(Intl.Collator.prototype, 'compare')).compare threw exception TypeError: Intl.Collator.prototype.compare called on value that's not an object initialized as a Collator.
PASS Intl.Collator.prototype.compare !== Intl.Collator().compare is true
PASS new Intl.Collator().compare !== new Intl.Collator().compare is true
PASS Intl.Collator.prototype.compare({ toString() { throw Error('6') } }, { toString() { ++badCalls; return ''; } }) threw exception Error: 6.
PASS badCalls is 0
PASS Intl.Collator.prototype.compare('a', { toString() { throw Error('8') } }) threw exception Error: 8.
PASS Intl.Collator.prototype.compare.call(null, 'a', 'b') is -1
PASS Intl.Collator.prototype.compare.call(Intl.Collator('en', { sensitivity:'base' }), 'A', 'a') is -1
PASS Intl.Collator.prototype.compare.call(5, 'a', 'b') is -1
PASS new Intl.Collator().compare.call(null, 'a', 'b') is -1
PASS new Intl.Collator().compare.call(Intl.Collator('en', { sensitivity:'base' }), 'A', 'a') is -1
PASS new Intl.Collator().compare.call(5, 'a', 'b') is -1
PASS Intl.Collator.prototype.resolvedOptions.length is 0
PASS Intl.Collator.prototype.resolvedOptions() is an instance of Object
PASS Intl.Collator.prototype.resolvedOptions() === Intl.Collator.prototype.resolvedOptions() is false
PASS Intl.Collator.prototype.resolvedOptions.call(5) threw exception TypeError: Intl.Collator.prototype.resolvedOptions called on value that's not an object initialized as a Collator.
PASS successfullyParsed is true

TEST COMPLETE

