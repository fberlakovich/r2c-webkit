This test checks the behavior of the TypedArray.prototype.forEach function

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS Int32Array.prototype.forEach.length is 1
PASS Int32Array.prototype.forEach.name is 'forEach'
PASS isSameFunctionForEachTypedArrayPrototype('forEach') is true
PASS testPrototypeReceivesArray('forEach', [undefined, this, { }, [ ], true, '']) is true

1.0 Single Argument Testing
PASS passed is true

2.0 Two Argument Testing
PASS passed && thisPassed is true
PASS passed && !thisPassed is true

3.0 Array Element Changing
PASS passed && hasSameValues('array did not mutate correctly', typedArray, [5, 5, 5, 5, 5]) is true

4.0 Exception Test
PASS testPrototypeFunction('forEach', '(isBigEnoughAndException)', [9, 15, 10, 13, 44], false) threw exception exception from function.

5.0 Wrong Type for Callback Test
PASS testPrototypeFunction('forEach', '(8)', [12, 15, 10, 13, 44], false) threw exception TypeError: TypedArray.prototype.findIndex callback must be a function.
PASS testPrototypeFunction('forEach', '("wrong")', [12, 15, 10, 13, 44], false) threw exception TypeError: TypedArray.prototype.findIndex callback must be a function.
PASS testPrototypeFunction('forEach', '(new Object())', [12, 15, 10, 13, 44], false) threw exception TypeError: TypedArray.prototype.findIndex callback must be a function.
PASS testPrototypeFunction('forEach', '(null)', [12, 15, 10, 13, 44], false) threw exception TypeError: TypedArray.prototype.findIndex callback must be a function.
PASS testPrototypeFunction('forEach', '()', [12, 15, 10, 13, 44], false) threw exception TypeError: TypedArray.prototype.findIndex callback must be a function.

PASS successfullyParsed is true

TEST COMPLETE

