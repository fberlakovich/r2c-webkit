This test checks that the cursor covers the next character to be overwritten in overtype mode instead of being painted as a caret (1px width bar)

ABC
ABC
שדן
שדן
שדןABC
שדןABC
Verifying block cursor position and width for each position in 'ABC' in a ltr block
getSelection().collapse(textNode, 0)
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.
getSelection().collapse(textNode, 1)
FAIL blockCursorStartPosition[0] < blockCursorStartPosition[1] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.
getSelection().collapse(textNode, 2)
FAIL blockCursorStartPosition[1] < blockCursorStartPosition[2] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.
getSelection().collapse(textNode, 3)
PASS blockCursor.width is 0
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.

Verifying block cursor position and width for each position in 'ABC' in a rtl block
getSelection().collapse(textNode, 0)
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.
getSelection().collapse(textNode, 1)
FAIL blockCursorStartPosition[0] < blockCursorStartPosition[1] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.
getSelection().collapse(textNode, 2)
FAIL blockCursorStartPosition[1] < blockCursorStartPosition[2] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.
getSelection().collapse(textNode, 3)
PASS blockCursor.width is 0
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.

Verifying block cursor position and width for each position in 'שדן' in a ltr block
getSelection().collapse(textNode, 0)
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.
getSelection().collapse(textNode, 1)
FAIL blockCursorStartPosition[0] > blockCursorStartPosition[1] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.
getSelection().collapse(textNode, 2)
FAIL blockCursorStartPosition[1] > blockCursorStartPosition[2] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.
getSelection().collapse(textNode, 3)
PASS blockCursor.width is 0
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.

Verifying block cursor position and width for each position in 'שדן' in a rtl block
getSelection().collapse(textNode, 0)
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.
getSelection().collapse(textNode, 1)
FAIL blockCursorStartPosition[0] > blockCursorStartPosition[1] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.
getSelection().collapse(textNode, 2)
FAIL blockCursorStartPosition[1] > blockCursorStartPosition[2] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.
getSelection().collapse(textNode, 3)
PASS blockCursor.width is 0
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.

Verifying block cursor position and width for each position in 'שדןABC' in a ltr block
getSelection().collapse(textNode, 0)
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.
getSelection().collapse(textNode, 1)
FAIL blockCursorStartPosition[0] > blockCursorStartPosition[1] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.
getSelection().collapse(textNode, 2)
FAIL blockCursorStartPosition[1] > blockCursorStartPosition[2] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.
getSelection().collapse(textNode, 3)
FAIL blockCursorStartPosition[2] < blockCursorStartPosition[3] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.
getSelection().collapse(textNode, 4)
FAIL blockCursorStartPosition[3] < blockCursorStartPosition[4] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.
getSelection().collapse(textNode, 5)
FAIL blockCursorStartPosition[4] < blockCursorStartPosition[5] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.
getSelection().collapse(textNode, 6)
PASS blockCursor.width is 0
FAIL internals.absoluteCaretBounds().width should be 1. Was 0.

Verifying block cursor position and width for each position in 'שדןABC' in a rtl block
getSelection().collapse(textNode, 0)
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.
getSelection().collapse(textNode, 1)
FAIL blockCursorStartPosition[0] > blockCursorStartPosition[1] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.
getSelection().collapse(textNode, 2)
FAIL blockCursorStartPosition[1] > blockCursorStartPosition[2] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.
getSelection().collapse(textNode, 3)
FAIL blockCursorStartPosition[2] > blockCursorStartPosition[3] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.
getSelection().collapse(textNode, 4)
FAIL blockCursorStartPosition[3] < blockCursorStartPosition[4] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.
getSelection().collapse(textNode, 5)
FAIL blockCursorStartPosition[4] < blockCursorStartPosition[5] should be true. Was false.
PASS getSelection().isCollapsed is true
FAIL blockCursor.width > 1 should be true. Was false.
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.
getSelection().collapse(textNode, 6)
PASS blockCursor.width is 0
FAIL internals.absoluteCaretBounds().width should be 1. Was 2.

PASS successfullyParsed is true

TEST COMPLETE

