  
Test for metadata tracks from Apple HLS stream.


** Set video.src, wait for media data to load
EVENT(addtrack)
EXPECTED (tracks.length == '1') OK
RUN(track = video.textTracks[0])
EXPECTED (track.kind == 'metadata') OK
EXPECTED (track.mode == 'disabled') OK
RUN(track.mode = 'hidden')
EVENT(canplaythrough)

** Start playback, wait for all cues to load
EVENT(cuechange)
EVENT(cuechange)
EVENT(cuechange)
EVENT(cuechange)
EVENT(cuechange)
EVENT(cuechange)

** Validate cue data
EXPECTED (cue.type == 'org.id3') OK
EXPECTED (cue.data == 'null') OK
EXPECTED ('{"value":{"key":"TIT2","data":"Stream Counting"}}' == '{"value":{"key":"TIT2","data":"Stream Counting"}}') OK

EXPECTED (cue.type == 'org.id3') OK
EXPECTED (cue.data == 'null') OK
EXPECTED ('{"value":{"key":"TPE1","data":"Andy"}}' == '{"value":{"key":"TPE1","data":"Andy"}}') OK

EXPECTED (cue.type == 'org.id3') OK
EXPECTED (cue.data == 'null') OK
EXPECTED ('{"value":{"key":"TALB","data":"Greatest Hits"}}' == '{"value":{"key":"TALB","data":"Greatest Hits"}}') OK

EXPECTED (cue.type == 'org.id3') OK
EXPECTED (cue.data == 'null') OK
EXPECTED ('{"value":{"data":{},"info":"Our Hero","key":"GEOB","name":"abe.png","type":"image/png"}}' == '{"value":{"data":{},"info":"Our Hero","key":"GEOB","name":"abe.png","type":"image/png"}}') OK

EXPECTED (cue.type == 'org.id3') OK
EXPECTED (cue.data == 'null') OK
EXPECTED ('{"value":{"data":{},"key":"APIC","type":"image/png","dataType":"Movie/video screen capture"}}' == '{"value":{"data":{},"key":"APIC","type":"image/png","dataType":"Movie/video screen capture"}}') OK

EXPECTED (cue.type == 'org.id3') OK
EXPECTED (cue.data == 'null') OK
EXPECTED ('{"value":{"key":"TXXX","data":"Text Blob"}}' == '{"value":{"key":"TXXX","data":"Text Blob"}}') OK

** Extract images from cue data, validate by setting img.src
RUN(cueImageData = track.cues[3].value.data)
EXPECTED (cueImageData instanceof ArrayBuffer == 'true') OK
RUN(blobUrl = URL.createObjectURL(new Blob([cueImageData], { type: 'image/png' } )))
RUN(imageElement.src = blobUrl)
EVENT(load)
EXPECTED (imageElement.width == '76') OK
EXPECTED (imageElement.height == '103') OK

RUN(cueImageData = track.cues[4].value.data)
EXPECTED (cueImageData instanceof ArrayBuffer == 'true') OK
RUN(blobUrl = URL.createObjectURL(new Blob([cueImageData], { type: 'image/png' } )))
RUN(imageElement.src = blobUrl)
EVENT(load)
EXPECTED (imageElement.width == '100') OK
EXPECTED (imageElement.height == '100') OK

END OF TEST

